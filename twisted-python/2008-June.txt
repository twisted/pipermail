From exarkun at twistedmatrix.com  Sun Jun  1 00:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Jun 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1212293108.71.1988193192@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080601/6d3b887d/attachment.htm 

From adelagon at gmail.com  Sun Jun  1 22:41:33 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 2 Jun 2008 10:41:33 +0800
Subject: [Twisted-Python] How to detect dead client connections in twisted
Message-ID: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>

I've been using xmlstream for quite sometime now and I noticed one such
problem where my server doesn't detect clients that went to hardware
shutdown without closing the socket. I also reproduced it using a simple
twisted TCP server:

#!/usr/bin/python
from twisted.internet import protocol
from twisted.internet import reactor

class EchoProtocol(protocol.Protocol):
    def __init__(self):
        pass

    def connectionMade(self):
        print "Client Connected Detected!"

    def connectionLost(self, reason):
        print "Client Connection Lost!"

    def dataReceived(self, data):
        self.transport.write(data)


factory = protocol.Factory()
factory.protocol = EchoProtocol
reactor.listenTCP(8000, factory)
reactor.run()

Using a different machine, telnet to the echo server and then shut down the
computer (without exiting telnet). It seems that the connectionLost function
doesn't get called. I even had an XMPP account appeared online on our XMPP
server for almost three days even though I shut down the PC hosting my
client. Should we implement a Hearbeat functionality? Thank you in advance!

Alvin Delagon

-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080602/494bf05c/attachment.htm 

From adelagon at gmail.com  Mon Jun  2 05:21:08 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 2 Jun 2008 17:21:08 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
Message-ID: <7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>

I just recently discovered that it's a TCP half-open socket scenario that
can be remedied by monitoring client heartbeats. This is not twisted related
issue. Thanks anyway. :)

Alvin Delagon

On Mon, Jun 2, 2008 at 10:41 AM, Alvin Delagon <adelagon at gmail.com> wrote:

> I've been using xmlstream for quite sometime now and I noticed one such
> problem where my server doesn't detect clients that went to hardware
> shutdown without closing the socket. I also reproduced it using a simple
> twisted TCP server:
>
> #!/usr/bin/python
> from twisted.internet import protocol
> from twisted.internet import reactor
>
> class EchoProtocol(protocol.Protocol):
>     def __init__(self):
>         pass
>
>     def connectionMade(self):
>         print "Client Connected Detected!"
>
>     def connectionLost(self, reason):
>         print "Client Connection Lost!"
>
>     def dataReceived(self, data):
>         self.transport.write(data)
>
>
> factory = protocol.Factory()
> factory.protocol = EchoProtocol
> reactor.listenTCP(8000, factory)
> reactor.run()
>
> Using a different machine, telnet to the echo server and then shut down the
> computer (without exiting telnet). It seems that the connectionLost function
> doesn't get called. I even had an XMPP account appeared online on our XMPP
> server for almost three days even though I shut down the PC hosting my
> client. Should we implement a Hearbeat functionality? Thank you in advance!
>
> Alvin Delagon
>
> --
> http://www.alvinatorsplayground.blogspot.com/




-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080602/b23ac501/attachment.htm 

From jo.vermeulen at uhasselt.be  Mon Jun  2 07:40:11 2008
From: jo.vermeulen at uhasselt.be (Jo Vermeulen)
Date: Mon, 2 Jun 2008 13:40:11 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <1211817741.17583.45.camel@zwerf>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
	<1211817741.17583.45.camel@zwerf>
Message-ID: <236462830806020440s5d19ce35kce9fdc95bdfada24@mail.gmail.com>

On Mon, May 26, 2008 at 6:02 PM, Ralph Meijer <twisted at ralphm.ik.nu> wrote:

> On Mon, 2008-05-26 at 15:03 +0200, Jo Vermeulen wrote:
> > [..]
> >
> > I had another question about the Jabber example (xmpp_client.py) in
> > Twisted words. When I quit the application with Ctrl+C, it throws an
> > exception:
> >
> > [..]
>
> I haven't seen that behavior before, but I can confirm this happens. I
> poked around a bit with the example. It seems that the socket is closed
> before its factory is shut down. It might be that the reactor shutdown
> procedure has changed, so I think this behavior is the result of a bug,
> either in the example or somewhere else. It needs more investigation, so
> it would be nice if you could file a ticket for it.
>

Done: http://twistedmatrix.com/trac/ticket/3270


> > Is there any way to modify this example so that it stops gracefully
> > when Ctrl+C is pressed? Embedding the main script code in a try-except
> > statement that catches KeyboardInterrupt doesn't help since Twisted
> > seems to catch all exceptions itself.
>
> I don't know of a good solution, at the moment. If the above bug gets
> resolved, you shouldn't need to do anything beyond that.
>

OK thanks!

-- Jo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080602/5db61924/attachment.htm 

From miguel.filho at gmail.com  Mon Jun  2 14:13:37 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 2 Jun 2008 15:13:37 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <20080514160127.6859.1992045789.divmod.quotient.63442@ohm>
References: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
	<20080514160127.6859.1992045789.divmod.quotient.63442@ohm>
Message-ID: <394cf6840806021113l1f38c361of6575d34c3753000@mail.gmail.com>

On Wed, May 14, 2008 at 1:01 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> Encountering this after the process has been running for a long time
> suggests a memory corruption issue to me.  The fact that it happened
> only once while the process is still running and correctly servicing
> events further suggests that the corruption was somehow transient, a
> somewhat unusual occurance to say the least. :)

Just to bring a conclusion to this topic, the problem is actually bad memory.

On the same machine a Postfix daemon has just died, checking the logs:
May 28 08:58:31 friends postfix/master[2933]: ess
May 28 08:58:31 friends postfix/master[2933]:
May 28 08:58:31 friends postfix/smtpd[6301]: connect from unknown[59.95.173.59]
May 28 08:58:31 friends postfix/master[2933]: ess
May 28 08:58:31 friends postfix/master[2933]: terminating on signal 11

>From 'man 7 signal':
SIGSEGV      11       Core    Invalid memory reference

A Dovecot daemon used to suddenly die on the same box too.

Regards,

Miguel



From mailing_lists at evotex.ch  Tue Jun  3 02:42:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 03 Jun 2008 08:42:46 +0200
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
Message-ID: <4844E7E6.7020907@evotex.ch>


Alvin Delagon wrote:
>
> I just recently discovered that it's a TCP half-open socket scenario 
> that can be remedied by monitoring client heartbeats. This is not 
> twisted related issue. Thanks anyway. :)
>
> Alvin Delagon
>

Just a question, could setting the tcp keepalive feature on the server 
side (not sure if that is possible), would that make the server detect 
that the connection is dead/half-open?

Gabriel



From daedalus at eigenmagic.com  Tue Jun  3 03:03:57 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 03 Jun 2008 17:03:57 +1000
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
Message-ID: <1212476637.8984.57.camel@localhost>

Greetings twisted gurus!

I'm hoping someone with a better algorithmic brain than I could offer
some advice on a good way to do something in a twisty/pythonic way.

The pseudocode for what I want to do is:

for item in generator_that_fetches_rows_from_database:
	...
	do_stuff()
	...

where generator_that_fetches_rows_from_database is an object that uses
enterprise.adbapi (or anything else) to fetch rows from a database and
return them to the for..in.. loop.

Now, I'm probably looking at this from too much of a blocking code
perspective, rather than setting up a Deferred() chain of some sort, but
rather than hacking something functional but ugly, it occurs to me that
someone is bound to have done this before.

It would be nice if the database accessing object could fetch rows as
required, via cursors or whatever, rather than sucking an entire table
into memory and then doling out one row at a time... which is what I've
got working at the moment.

The morbidly curious can recoil in horror at the current code in the
SQLIterator class here:
http://modipy.seafelt.com/browser/trunk/lib/modipy/iterator.py

Any free clues?

-- 
Justin Warren <daedalus at eigenmagic.com>




From adelagon at gmail.com  Tue Jun  3 03:21:57 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 15:21:57 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <4844E7E6.7020907@evotex.ch>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
Message-ID: <7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>

Yes it supposed to be handled by the tcp_keepalive itself (as I assumed).
The weird thing was that we had this configuration:

Ubuntu Linux Server 2.6.15-26
tcp_keepalive_time 7200
tcp_keepalive_probes 9
tcp_keepalive_intvl 75

I have an XMPP client last sent a packet to the server at May 29 15:57:25
telling that it will enter an idle state. On May 30 approx 08:00:00 I shut
down my PC which hosts my XMPP client thus causing a half-opened state. The
next day (17:41:11) while checking the logs, its still in half-opened state
and my server still thinks that I'm online. It seems that tcp_keepalive
kernel feature that's supposed to run every 2 hours didn't kick in.

---
Alvin Delagon

On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
wrote:

>
> Alvin Delagon wrote:
>
>>
>> I just recently discovered that it's a TCP half-open socket scenario that
>> can be remedied by monitoring client heartbeats. This is not twisted related
>> issue. Thanks anyway. :)
>>
>> Alvin Delagon
>>
>>
> Just a question, could setting the tcp keepalive feature on the server side
> (not sure if that is possible), would that make the server detect that the
> connection is dead/half-open?
>
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/3e933359/attachment.htm 

From maarten at treewalker.org  Tue Jun  3 03:27:46 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 3 Jun 2008 09:27:46 +0200
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <200806030927.53741.maarten@treewalker.org>

On Tuesday 03 June 2008, Justin Warren wrote:

> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
>
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.

I think decorating the method with @defer.inlineCallbacks and code like this 
might do the trick:

for d in generator_that_fetches_rows_from_database:
	try:
		row = yield d
	except SomeError:
		...
	else:
		do_stuff(row)

Depending on how you want to handle errors, you could put the "try" 
statement outside the loop.

The generator_that_fetches_rows_from_database does not yield actual rows, 
but a sequence of Deferreds, each of which delivers one row in its 
callback.

This is all untested, so it might contain a fatal flaw, but I hope it's 
useful.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/0e2796d9/attachment.pgp 

From adelagon at gmail.com  Tue Jun  3 04:09:34 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 16:09:34 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
Message-ID: <7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>

Problem solved! I digged through the twisted.internet source codes and found
this facility:

 def setTcpKeepAlive(self, enabled):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE,
enabled)

I modifying the simple twisted server:

#!/usr/bin/python
from twisted.internet import protocol
from twisted.internet import reactor

class EchoProtocol(protocol.Protocol):
    def __init__(self):
        pass

    def connectionMade(self):
        print "Client Connected Detected!"
        ### enable keepalive
        self.transport.setTcpKeepAlive(1)

    def connectionLost(self, reason):
        print "Client Connection Lost!"

    def dataReceived(self, data):
        self.transport.write(data)


factory = protocol.Factory()
factory.protocol = EchoProtocol
reactor.listenTCP(8000, factory)
reactor.run()

Now the server is aware of keepalive timeouts now. Might as well use it in
my xmpp server. :)


---
Alvin Delagon


On Tue, Jun 3, 2008 at 3:21 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Yes it supposed to be handled by the tcp_keepalive itself (as I assumed).
> The weird thing was that we had this configuration:
>
> Ubuntu Linux Server 2.6.15-26
> tcp_keepalive_time 7200
> tcp_keepalive_probes 9
> tcp_keepalive_intvl 75
>
> I have an XMPP client last sent a packet to the server at May 29 15:57:25
> telling that it will enter an idle state. On May 30 approx 08:00:00 I shut
> down my PC which hosts my XMPP client thus causing a half-opened state. The
> next day (17:41:11) while checking the logs, its still in half-opened state
> and my server still thinks that I'm online. It seems that tcp_keepalive
> kernel feature that's supposed to run every 2 hours didn't kick in.
>
> ---
> Alvin Delagon
>
>
> On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
> wrote:
>
>>
>> Alvin Delagon wrote:
>>
>>>
>>> I just recently discovered that it's a TCP half-open socket scenario that
>>> can be remedied by monitoring client heartbeats. This is not twisted related
>>> issue. Thanks anyway. :)
>>>
>>> Alvin Delagon
>>>
>>>
>> Just a question, could setting the tcp keepalive feature on the server
>> side (not sure if that is possible), would that make the server detect that
>> the connection is dead/half-open?
>>
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/0d0d9842/attachment.htm 

From mailing_lists at evotex.ch  Tue Jun  3 08:10:45 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 03 Jun 2008 14:10:45 +0200
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>	<4844E7E6.7020907@evotex.ch>	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
Message-ID: <484534C5.70802@evotex.ch>

Yes, I found that in the meantime, but I tried it and it didn't work. 
Sometimes when the connection is closed abruptly, the server doesn't 
detect the lose. I looked at the oscar protocol implementation and they 
have an application level keepalive, thus I though maybe it had to be 
done that way and the server verifies every x seconds or minutes if it 
hasn't received anything from a client, it removes it from it's 
connected list. So Does anyone know how to deal with this problem?

Gabriel

Alvin Delagon wrote:
> Problem solved! I digged through the twisted.internet source codes and 
> found this facility:
>
>  def setTcpKeepAlive(self, enabled):
>         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 
> enabled)
>
> I modifying the simple twisted server:
>
> #!/usr/bin/python
> from twisted.internet import protocol
> from twisted.internet import reactor
>
> class EchoProtocol(protocol.Protocol):
>     def __init__(self):
>         pass
>
>     def connectionMade(self):
>         print "Client Connected Detected!"
>         ### enable keepalive
>         self.transport.setTcpKeepAlive(1)
>
>     def connectionLost(self, reason):
>         print "Client Connection Lost!"
>
>     def dataReceived(self, data):
>         self.transport.write(data)
>
>
> factory = protocol.Factory()
> factory.protocol = EchoProtocol
> reactor.listenTCP(8000, factory)
> reactor.run()
>
> Now the server is aware of keepalive timeouts now. Might as well use 
> it in my xmpp server. :)
>
>
> ---
> Alvin Delagon
>
>
> On Tue, Jun 3, 2008 at 3:21 PM, Alvin Delagon <adelagon at gmail.com 
> <mailto:adelagon at gmail.com>> wrote:
>
>     Yes it supposed to be handled by the tcp_keepalive itself (as I
>     assumed). The weird thing was that we had this configuration:
>
>     Ubuntu Linux Server 2.6.15-26
>     tcp_keepalive_time 7200
>     tcp_keepalive_probes 9
>     tcp_keepalive_intvl 75
>
>     I have an XMPP client last sent a packet to the server at May 29
>     15:57:25 telling that it will enter an idle state. On May 30
>     approx 08:00:00 I shut down my PC which hosts my XMPP client thus
>     causing a half-opened state. The next day (17:41:11) while
>     checking the logs, its still in half-opened state and my server
>     still thinks that I'm online. It seems that tcp_keepalive kernel
>     feature that's supposed to run every 2 hours didn't kick in.
>
>     ---
>     Alvin Delagon
>
>
>     On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti
>     <mailing_lists at evotex.ch> wrote:
>
>
>         Alvin Delagon wrote:
>
>
>             I just recently discovered that it's a TCP half-open
>             socket scenario that can be remedied by monitoring client
>             heartbeats. This is not twisted related issue. Thanks
>             anyway. :)
>
>             Alvin Delagon
>
>
>         Just a question, could setting the tcp keepalive feature on
>         the server side (not sure if that is possible), would that
>         make the server detect that the connection is dead/half-open?
>
>         Gabriel
>
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         <mailto:Twisted-Python at twistedmatrix.com>
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
>     -- 
>     http://www.alvinatorsplayground.blogspot.com/
>
>
>
>
> -- 
> http://www.alvinatorsplayground.blogspot.com/
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From itamar at itamarst.org  Tue Jun  3 08:58:26 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Jun 2008 08:58:26 -0400
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <1212497906.13279.3.camel@localhost.localdomain>

On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
> Greetings twisted gurus!
> 
> I'm hoping someone with a better algorithmic brain than I could offer
> some advice on a good way to do something in a twisty/pythonic way.
> 
> The pseudocode for what I want to do is:
> 
> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
> 
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.

runInteraction is your friend:

def getData(txn, key):
    # this runs in thread
    txn.execute("SELECT item FROM table WHERE key = :key", [key])
    return [l[o] for l in txn.fetchall()]

def gotItems(items):
    # this runs in Twisted thread
    for item in items:
        # etc...

dbpool.runInteraction(getData, 23).addCallback(gotItems)

Once you've gotten the list down to the Twisted thread you may find
twisted.internet.task.coiterate useful.




From itamar at itamarst.org  Tue Jun  3 09:00:27 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Jun 2008 09:00:27 -0400
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <484534C5.70802@evotex.ch>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
	<484534C5.70802@evotex.ch>
Message-ID: <1212498027.13279.6.camel@localhost.localdomain>

On Tue, 2008-06-03 at 14:10 +0200, Gabriel Rossetti wrote:
> Yes, I found that in the meantime, but I tried it and it didn't work. 
> Sometimes when the connection is closed abruptly, the server doesn't 
> detect the lose. I looked at the oscar protocol implementation and they 
> have an application level keepalive, thus I though maybe it had to be 
> done that way and the server verifies every x seconds or minutes if it 
> hasn't received anything from a client, it removes it from it's 
> connected list. So Does anyone know how to deal with this problem?

Application level pings are the only way to go if you want quick
detection of timeouts, yes. You could do that with xmlstream by sending
a no-op command that expects a response every few minutes.




From adelagon at gmail.com  Tue Jun  3 09:17:36 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 21:17:36 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <1212498027.13279.6.camel@localhost.localdomain>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
	<484534C5.70802@evotex.ch>
	<1212498027.13279.6.camel@localhost.localdomain>
Message-ID: <7a01f6c00806030617h14c44d8dh7c1d32b4f6a4d3b8@mail.gmail.com>

My initial tests when enabling the TCP keepalive were successful. I've
reduced my tcp_keepalive_time for 30secs instead of 2hours (7200secs) for
testing. I'll update this thread if my problem goes back. :)


---
Alvin Delagon

On Tue, Jun 3, 2008 at 9:00 PM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2008-06-03 at 14:10 +0200, Gabriel Rossetti wrote:
> > Yes, I found that in the meantime, but I tried it and it didn't work.
> > Sometimes when the connection is closed abruptly, the server doesn't
> > detect the lose. I looked at the oscar protocol implementation and they
> > have an application level keepalive, thus I though maybe it had to be
> > done that way and the server verifies every x seconds or minutes if it
> > hasn't received anything from a client, it removes it from it's
> > connected list. So Does anyone know how to deal with this problem?
>
> Application level pings are the only way to go if you want quick
> detection of timeouts, yes. You could do that with xmlstream by sending
> a no-op command that expects a response every few minutes.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/4036da0a/attachment.htm 

From p.mayers at imperial.ac.uk  Tue Jun  3 13:10:13 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 03 Jun 2008 18:10:13 +0100
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <1212497906.13279.3.camel@localhost.localdomain>
References: <1212476637.8984.57.camel@localhost>
	<1212497906.13279.3.camel@localhost.localdomain>
Message-ID: <48457AF5.2020705@imperial.ac.uk>

Itamar Shtull-Trauring wrote:
> On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
>> Greetings twisted gurus!
>>
>> I'm hoping someone with a better algorithmic brain than I could offer
>> some advice on a good way to do something in a twisty/pythonic way.
>>
>> The pseudocode for what I want to do is:
>>
>> for item in generator_that_fetches_rows_from_database:
>> 	...
>> 	do_stuff()
>> 	...
>>
>> where generator_that_fetches_rows_from_database is an object that uses
>> enterprise.adbapi (or anything else) to fetch rows from a database and
>> return them to the for..in.. loop.
> 
> runInteraction is your friend:

Sure, but that's exactly what the OP didn't want; doing a bulk fetch 
from the SQL (which yes will be non-blocking for the most part)

I think he wanted:

def query(txn):
   txn.execute("...")
   while True:
     rs = txn.fetchone()
     if blah:
         continue
     if foo:
         transform data
     yield data



@defer.inlineCallbacks
def sqlQuery():
   deferred_iter = runInteraction(query)
   for def in deferred_iter:
     row = yield def
     # do a thing with the row e.g. push it to an Athena page

i.e. the function that runs inside the thread pool to be able to yield 
values, and the function that runs in the reactor to be able to iterate 
through them in a deferred-compatible fashion.

AFAIK there is no such thing, which is a shame because for *really* huge 
queries it has the potential to significantly reduce memory usage.

On a not-very related issue, it would be highly useful IMHO for




From exarkun at divmod.com  Tue Jun  3 13:51:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 3 Jun 2008 13:51:55 -0400
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <48457AF5.2020705@imperial.ac.uk>
Message-ID: <20080603175155.4714.675195439.divmod.quotient.5160@ohm>

On Tue, 03 Jun 2008 18:10:13 +0100, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>Itamar Shtull-Trauring wrote:
>>On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
>>>Greetings twisted gurus!
>>>
>>>I'm hoping someone with a better algorithmic brain than I could offer
>>>some advice on a good way to do something in a twisty/pythonic way.
>>>
>>>The pseudocode for what I want to do is:
>>>
>>>for item in generator_that_fetches_rows_from_database:
>>>         ...
>>>         do_stuff()
>>>         ...
>>>
>>>where generator_that_fetches_rows_from_database is an object that uses
>>>enterprise.adbapi (or anything else) to fetch rows from a database and
>>>return them to the for..in.. loop.
>>
>>runInteraction is your friend:
>
>Sure, but that's exactly what the OP didn't want; doing a bulk fetch from 
>the SQL (which yes will be non-blocking for the most part)
>
>I think he wanted:
>
>def query(txn):
>   txn.execute("...")
>   while True:
>     rs = txn.fetchone()
>     if blah:
>         continue
>     if foo:
>         transform data
>     yield data
>
>
>
>@defer.inlineCallbacks
>def sqlQuery():
>   deferred_iter = runInteraction(query)
>   for def in deferred_iter:
>     row = yield def
>     # do a thing with the row e.g. push it to an Athena page
>
>i.e. the function that runs inside the thread pool to be able to yield 
>values, and the function that runs in the reactor to be able to iterate 
>through them in a deferred-compatible fashion.

It should be straightforward to implement this with DeferredQueue.

Jean-Paul



From manlio_perillo at libero.it  Tue Jun  3 14:14:23 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 03 Jun 2008 20:14:23 +0200
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <484589FF.7020703@libero.it>

Justin Warren ha scritto:
> Greetings twisted gurus!
> 
> I'm hoping someone with a better algorithmic brain than I could offer
> some advice on a good way to do something in a twisty/pythonic way.
> 
> The pseudocode for what I want to do is:
> 
> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
> 
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.
> 

This can be done, but you need a "pure" asynchronous PostgreSQL client.
Here is an implementation in Twisted:
http://hg.mperillo.ath.cx/twisted/pglib

Each row is processed using the IRowConsumer interface.

To keep it simple, a callback function is called for each row received 
from the backend.

Using Python 2.5 generators you can (probabily) achieve what you want.


 > [...]



Manlio Perillo



From grickert at coldstorage.com  Tue Jun  3 17:23:57 2008
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 3 Jun 2008 17:23:57 -0400
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>

I'm running a rather involved simulation using twisted, and it would be
preferable if I could get the reactor to just drop me into the
interpreter on any exception so I could examine the current state of
things.  

I set os.environ['PYTHONINSPECT'] = '1', but the reactor seems to trap
any exceptions and just merrily carry on - logging my tracebacks to a
file, but continuing to run - modifying the current state of things and
making it harder to track down bugs.

 

Is there an easy way to prevent the reactor from trapping exceptions?

 

Thanks,

Gerrat 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/17fbfbb3/attachment.htm 

From exarkun at divmod.com  Tue Jun  3 17:37:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 3 Jun 2008 17:37:00 -0400
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
Message-ID: <20080603213700.4714.1089822502.divmod.quotient.5224@ohm>

On Tue, 3 Jun 2008 17:23:57 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>I'm running a rather involved simulation using twisted, and it would be
>preferable if I could get the reactor to just drop me into the
>interpreter on any exception so I could examine the current state of
>things.

Unit tests are a great way to squash bugs quickly and permanently.

>I set os.environ['PYTHONINSPECT'] = '1', but the reactor seems to trap
>any exceptions and just merrily carry on - logging my tracebacks to a
>file, but continuing to run - modifying the current state of things and
>making it harder to track down bugs.
>
>Is there an easy way to prevent the reactor from trapping exceptions?
>

No, there's not.  However, you might be interested in the --debug option
to twistd, which will drop you into pdb when an unhandled exception is
raised.

Jean-Paul



From itamar at itamarst.org  Tue Jun  3 17:40:15 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2008 17:40:15 -0400 (EDT)
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
Message-ID: <42588.63.107.91.99.1212529215.squirrel@webmail.zoteca.com>

> I'm running a rather involved simulation using twisted, and it would be
> preferable if I could get the reactor to just drop me into the
> interpreter on any exception so I could examine the current state of
> things.
>

When using twistd or trial, you can simply use the debug command-line
option for that (-b). Without those,
twisted.python.failure.setDebugMode(True) or something, I forget the exact
invocation.

Both of these only go into debugger on Failure creation, but that's
essentially any exception that goes into a Deferred or into the logging
system, so virtually any exception you're likely to care about.




From grickert at coldstorage.com  Tue Jun  3 19:39:24 2008
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 3 Jun 2008 19:39:24 -0400
Subject: [Twisted-Python] RE: How do I get the reactor to stop on an
	exception
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F02E142A5@ccs-ex01.coldstorage.com>

Thanks for the quick responses, Jean-Paul & Itamar.

 

It looks like turning my app into a twistd plugin seems to be the
preferred method (well, quashing bugs quickly and permanently with Unit
Tests is obviously the preferred method :o) !) 

 

Itamar, 

>When using twistd or trial, you can simply use the debug command-line

>option for that (-b). Without those,

>twisted.python.failure.setDebugMode(True) or something, I forget the
exact

>invocation.

 

There is a twisted.python.failure.startDebugMode(), but it doesn't seem
to stop the reactor on exceptions (I'm not directly using Deferred's, so
maybe that's the reason).

 

I'm mostly using Twisted for it's robust Networking protocols (ok, and a
bit of scheduling), and I can't say enough good things about how well it
works.

I also know Twisted has many more parts to it than the small subset I'm
using, but it seems unfortunate to me that including any part of Twisted
in a program means that all exceptions are trapped -whether or not the
exception has anything to do with Twisted.

 

Regular Python (sans Twisted) doesn't trap exceptions, but I'm sure
there are many good reasons for doing so with Twisted (you don't have to
list them - I'm not being facetious).  I just think it would be useful
to be able to set a flag somewhere to stop this behaviour.  

 

I will definitely remove this after, but adding a 'raise' statement to
the except clause of the RunUntilCurrent method of ReactorBase in
base.py seems to do exactly what I want.  

...would zero percent be on the high side for the chances of having a
Twisted developer make some sort of flag available that would turn this
on? (or equivalent functionality)

...just askin...

 

 

Thanks again for your help/advice guys,

Gerrat

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080603/67c3eef9/attachment.htm 

From ellisonbg.net at gmail.com  Wed Jun  4 12:27:48 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Wed, 4 Jun 2008 10:27:48 -0600
Subject: [Twisted-Python] Using twisted to manage processes
Message-ID: <6ce0ac130806040927w581c80a4y14a555b4bda2f509@mail.gmail.com>

Hi,

We have been using Twisted for a long time with IPython and we are
needing a nice general and cross platform way of managing processes
(spawning, sending signals, etc.).  I am aware of Twisted's process
management API and it looks like it would fit the bill rather well for
us.  But, I am wondering how cross platform it is.  We need to be able
to write code that works on Linux, OS X, AIX and Win32.  More
specifically, I know 0 about process control on Win32 and want to make
sure that Windows users will be able to use this stuff.  So, will the
process management stuff work on Win32?  Are there any issues I need
to be aware of on Win32 that the Twisted API won't quite handle?

Thanks,

Brian



From warner at lothar.com  Wed Jun  4 18:56:35 2008
From: warner at lothar.com (Brian Warner)
Date: Wed, 4 Jun 2008 15:56:35 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.8 released
Message-ID: <20080604155635.4c4cfeff@lothar.com>

I've just released Foolscap-0.2.8 . This is a minor bugfix release,
which also updates the setuptools-visible dependencies in a way that
makes it slightly easier for other projects (like Tahoe) to declare
that they need foolscap's cryptographic properties. The full release
notes are attached below.

Foolscap is a Twisted-friendly remote object protocol, a descendant of
Perspective Broker, with improved security properties, third-party
references, adaptable serialization, and other useful features. Please
visit http://foolscap.lothar.com/trac for more details.

have a groovy day,
 -Brian



* Release 0.2.8 (04 Jun 2008)

** Compatibility: exactly the same as 0.2.6

** setuptools dependencies updated

Foolscap (when built with setuptools) now uses the "extras_require" feature
to declare that it needs pyOpenSSL if you want to use the
"secure_connections" feature. This makes easy_install easier to use in
projects that depend upon Foolscap (and also insist upon using secure
connections): they do not need to declare a dependency on pyOpenSSL
themselves, instead they declare a dependency on
"Foolscap[secure_connections]". See the following documentation for more
details:
http://peak.telecommunity.com/DevCenter/setuptools#declaring-extras-optional-features-with-their-own-dependencies

** New RemoteReference.getPeer() method

The new rref.getPeer() method will return address information about the far
end of the connection, allowing you to determine their IP address and port
number. This may be useful for debugging or diagnostic purposes.

** Minor bugs fixed

Tub.registerReference() with both name= and furlFile= arguments now works
even when the furlFile= already exists.

Tubs which have been shutdown now give more useful error messages when you
(incorrectly) try to use them again. Previously a bug caused them to emit a
TypeError.



From exarkun at divmod.com  Wed Jun  4 19:29:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Jun 2008 19:29:15 -0400
Subject: [Twisted-Python] Using twisted to manage processes
In-Reply-To: <6ce0ac130806040927w581c80a4y14a555b4bda2f509@mail.gmail.com>
Message-ID: <20080604232915.4714.1393866679.divmod.quotient.5654@ohm>

On Wed, 4 Jun 2008 10:27:48 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>We have been using Twisted for a long time with IPython and we are
>needing a nice general and cross platform way of managing processes
>(spawning, sending signals, etc.).  I am aware of Twisted's process
>management API and it looks like it would fit the bill rather well for
>us.  But, I am wondering how cross platform it is.  We need to be able
>to write code that works on Linux, OS X, AIX and Win32.  More
>specifically, I know 0 about process control on Win32 and want to make
>sure that Windows users will be able to use this stuff.  So, will the
>process management stuff work on Win32?  Are there any issues I need
>to be aware of on Win32 that the Twisted API won't quite handle?

Twisted supports processes on Windows.  Not all of the arguments to
spawnProcess are supported, such as the arbitrary file descriptor
option, but for basic process management it works alright.  It's not
as efficient on Windows as on POSIX, but it also doesn't suffer the
SIGCHLD issues POSIX suffers from. :)

As long as you're a bit careful and test your code on Windows, you
should do alright.

Processes on OS X work almost as well as they do on Linux.  I believe
there is still a problem with PTYs, most likely due to a kernel bug.
It is, however, quite rare.  Linux doesn't really have any known issues.
I've never tested on AIX, and AIX isn't a "supported" platform - meaning
we have no buildslave for it, and regular testing of any kind is not
done on it.  It may work, or it may not.  If you can supply a buildslave,
we can try to make it a supported platform.

Jean-Paul



From duncan.mcgreggor at gmail.com  Wed Jun  4 19:51:04 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 4 Jun 2008 18:51:04 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
	<20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
	<4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>
Message-ID: <4327dfbd0806041651x7bea618awabd648826d1103fa@mail.gmail.com>

On Sat, May 31, 2008 at 3:51 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Sat, May 31, 2008 at 2:27 PM,  <glyph at divmod.com> wrote:
>> On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>>>
>>> Man, I think you totally hit it on the nose with your "tx" suggestion:
>>> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>>> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>>> only does it have a cool sound, entails "TwistedmatriX", is associated
>>> with "transmit", but it could also stand for "Twisted eXtensions" (in
>>> the "add on" sense).
>>
>> Thanks for the encouragement :) but a minor point: I think it's important
>> that these packages use 'py' in the same way most projects do, since sharing
>> namespaces in Python is such a pain.  i.e. in pygame you do 'import pygame',
>> in pygtk you do 'import gtk'.  The existence of the separate 'py' library /
>> namespace complicates matters somewhat, but that's a single entity that has
>> nothing to do with 99% of the PyFoo projects out there.
>
> Hrm. I really like the idea of the community sharing a namespace. But
> maybe that's just my software hippy/commune side coming out...
>
>> So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.
>
> As a name, I don't know what appeals to me more... txJSONRPC,
> TxJSONRPC, txjsonrpc. As a namespace, I really do like tx.jsonrpc ;-)

I've been playing with this for a couple days now, and as the only way
(that I know of) to support a large, shared namespace in python is to
require the use of setuptools, and given that so many object to its
use, I've bailed on tx.jsonrpc and have simply used txjsonrpc and
txJSON-RPC in my project.

d



From duncan.mcgreggor at gmail.com  Wed Jun  4 19:55:23 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 4 Jun 2008 18:55:23 -0500
Subject: [Twisted-Python] Twisted Community Code
Message-ID: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>

Inspired by the discussion from the recent thread about community
code, a concise string couplet to represent Twisted, and trademarks,
I've created a space on Launchpad for Twisted Community Code:
  https://launchpad.net/tx

Anyone can create a project and add it to this "super project" --
hopefully, they will only do so if their code is based on and uses
Twisted :-)

Also: I'd like to thank Phil Christensen for taking a leadership role
in this new space. Thanks Phil!

I'll be blogging about this soon, but I wanted to give everyone on
this list first notice :-)

d



From duncan.mcgreggor at gmail.com  Wed Jun  4 20:51:07 2008
From: duncan.mcgreggor at gmail.com (duncan.mcgreggor at gmail.com)
Date: Wed, 4 Jun 2008 19:51:07 -0500
Subject: [Twisted-Python] Re: Twisted Community Code
In-Reply-To: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>
References: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>
Message-ID: <4327dfbd0806041751w12df1626i199cd3817e279e5f@mail.gmail.com>

On 6/4/08, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> Inspired by the discussion from the recent thread about community
> code, a concise string couplet to represent Twisted, and trademarks,
> I've created a space on Launchpad for Twisted Community Code:
>   https://launchpad.net/tx
>
> Anyone can create a project and add it to this "super project" --
> hopefully, they will only do so if their code is based on and uses
> Twisted :-)
>
> Also: I'd like to thank Phil Christensen for taking a leadership role
> in this new space. Thanks Phil!
>
> I'll be blogging about this soon, but I wanted to give everyone on
> this list first notice :-)
>
> d

The blog posts are up:
  http://labs.twistedmatrix.com/2008/06/place-for-everyone.html

And the tongue-and-cheek version:
  http://oubiwann.blogspot.com/2008/06/tx-theory.html

d



From josef.robert.novak at gmail.com  Thu Jun  5 01:49:44 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Thu, 5 Jun 2008 14:49:44 +0900
Subject: [Twisted-Python] CLOSE_WAIT (debian)
Message-ID: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>

Hi,
  I have a fairly simple twisted daemon based on the starpy protocol,
which I am running in combination with the asterisk pbx.  I sometimes
this daemon accumulates CLOSE_WAIT connections in a rather
unpredictable fashion, which when stacked up eventually cause the
daemon to stop responding to new connections.

My understanding is that there is no default timeout for the
CLOSE_WAIT socket state, as per the relevant rfc standard, and that in
any netstat declares that CLOSE_WAIT indicates that the remote end of
the connection has shut down, and that it is now up to the local
application to finish closing the socket.

The implication is that there is something wrong with my application
code, however before posting the whole thing I'd like to know if there
are any cannonical reasons for this kind of issue being raised in
twisted applications.  For instance is this likely to occur when one
uses defertothread for blocking third party code, and the child
process spawned to handle this returns to find the parent process
already gone? ( e.g. my twisted app spawns for a new call from
asterisk, but the call instance is destroyed for some reason before
the defertothread that it executes returns?)

I'm having trouble reliably causing the issue, but it continues to pop
up, so any general information about regarding debugging twisted
applications would be of help.

Thanks!



From josef.robert.novak at gmail.com  Thu Jun  5 04:25:25 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Thu, 5 Jun 2008 17:25:25 +0900
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
Message-ID: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>

Hi, I've been digging around a bit more and it seems like it might be
advisable for me to use the d.setTimeout(TIMEOUT) function for my
deferToThread objects.  I see from the docstrings that this is
deprecated, and that I should rely on the timeout mechanism supplied
by the API I'm using, however that doesn't seem to suggest an
immediate solution.  I dug up the following reference, but is it
really such a bad idea to use d.setTimout(TIMEOUT)?
http://twistedmatrix.com/pipermail/twisted-python/2004-April/007536.html

Thanks!

2008/6/5 Josef Novak <josef.robert.novak at gmail.com>:
> Hi,
>  I have a fairly simple twisted daemon based on the starpy protocol,
> which I am running in combination with the asterisk pbx.  I sometimes
> this daemon accumulates CLOSE_WAIT connections in a rather
> unpredictable fashion, which when stacked up eventually cause the
> daemon to stop responding to new connections.
>
> My understanding is that there is no default timeout for the
> CLOSE_WAIT socket state, as per the relevant rfc standard, and that in
> any netstat declares that CLOSE_WAIT indicates that the remote end of
> the connection has shut down, and that it is now up to the local
> application to finish closing the socket.
>
> The implication is that there is something wrong with my application
> code, however before posting the whole thing I'd like to know if there
> are any cannonical reasons for this kind of issue being raised in
> twisted applications.  For instance is this likely to occur when one
> uses defertothread for blocking third party code, and the child
> process spawned to handle this returns to find the parent process
> already gone? ( e.g. my twisted app spawns for a new call from
> asterisk, but the call instance is destroyed for some reason before
> the defertothread that it executes returns?)
>
> I'm having trouble reliably causing the issue, but it continues to pop
> up, so any general information about regarding debugging twisted
> applications would be of help.
>
> Thanks!
>



From glyph at divmod.com  Thu Jun  5 06:04:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 05 Jun 2008 10:04:08 -0000
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
	<710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
Message-ID: <20080605100408.25821.1710250854.divmod.xquotient.9227@joule.divmod.com>

On 08:25 am, josef.robert.novak at gmail.com wrote:
>Hi, I've been digging around a bit more and it seems like it might be
>advisable for me to use the d.setTimeout(TIMEOUT) function for my
>deferToThread objects.  I see from the docstrings that this is
>deprecated, and that I should rely on the timeout mechanism supplied
>by the API I'm using, however that doesn't seem to suggest an
>immediate solution.  I dug up the following reference, but is it
>really such a bad idea to use d.setTimout(TIMEOUT)?
>http://twistedmatrix.com/pipermail/twisted- 
>python/2004-April/007536.html

Yes.  Double-yes for Deferreds returned from deferToThread.

So, first: if you have deferred a function to a thread, there is nothing 
generic you can do to stop it.  If that blocking function specifically 
provides an API to stop it from other threads, then you can stop it.

Second, setTimeout was *never* a good idea.  It's been deprecated for 
long enough that it may be removed at any time; and probably will be, 
soon.  As it is implemented, you will pretty much always see a traceback 
if the timeout actually fires.  Unless the API is specifically written 
to accommodate this style of timeouts (and none in Twisted are) the API 
which is expecting to callback or errback a Deferred will instead 
encounter an `AlreadyCalledError`, since the timeout has invoked it 
already.

Your issue with CLOSE_WAIT sockets could be due to registering producers 
which have no further data to produce.  Does that sound like something 
you, or starpy, might be doing?



From itamar at itamarst.org  Thu Jun  5 08:19:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 05 Jun 2008 08:19:58 -0400
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
	<710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
Message-ID: <1212668398.13279.10.camel@localhost.localdomain>

On Thu, 2008-06-05 at 17:25 +0900, Josef Novak wrote:
> Hi, I've been digging around a bit more and it seems like it might be
> advisable for me to use the d.setTimeout(TIMEOUT) function for my
> deferToThread objects.

What code are you running in the thread, BTW?




From mrsalty0 at gmail.com  Thu Jun  5 10:31:42 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Thu, 5 Jun 2008 10:31:42 -0400
Subject: [Twisted-Python] Re: DeferredList + LoopingCall
In-Reply-To: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>
References: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>
Message-ID: <a26b6f030806050731lb4bb744jadbe7b9926f86df1@mail.gmail.com>

As expected, the answer was pretty simple....

def returnDeferredList():
    dl = defer.DeferredList([defer.Deferred(), defer.Deferred(),
defer.Deferred()])
    dl.addCallback(handleResult)
    dl.addErrback(handleError)
    return dl

loop = task.LoopingCall(returnDeferredList)


On Sat, May 31, 2008 at 4:34 PM, J Davis <mrsalty0 at gmail.com> wrote:

> Hello,
>
> I want to group several calls to a function() that returns a deferred into
> a DeferredList so that I can add
> callbacks that will fire once each call to function() has returned.
> Furthermore, I want to arrange it so that this process repeats every X
> seconds.
> The problem I'm having is understanding how I can combine the concept of a
> DeferredList with task.LoopingCall in this scenario. Or is that even the
> right approach to take?
>
> Thanks,
> -Jake
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080605/a9006e1c/attachment.htm 

From mike at mkp.ca  Thu Jun  5 10:58:10 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 5 Jun 2008 10:58:10 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>

I'm late to the party, but if people are flinging pennies around,
here's two of mine.

Instead of lawyering up the Twisted franchise, maybe you could instead
use the DivMod brand to bless things that you want to be able to be
authoritative about.  There's already a sort of informal understanding
of territoriality; "This DivMod stuff is ours. You can use it if you
recognize that we make a living off this and we'll defend it.  This
other Twisted stuff is everyone's, and we're just custodians."
Bringing the law into our comfortable community w/out taking an
arms-length approach (eg, give the trademark to a not-for-profit) is
kind of alienating.  But maybe I exaggerate.

Mike.



From glyph at divmod.com  Thu Jun  5 11:10:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 05 Jun 2008 15:10:00 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
Message-ID: <20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>

On 02:58 pm, mike at mkp.ca wrote:
>(eg, give the trademark to a not-for-profit)

That is exactly what we intend to do.  I thought I mentioned it in the 
initial post; if not, sorry about that.  The whole point of having a 
defensible trademark is having something that the SFC can do something 
about :).



From phil at bubblehouse.org  Thu Jun  5 11:11:42 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 5 Jun 2008 11:11:42 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
Message-ID: <1C31139F-DBB0-4AE3-9E83-30A8B8112FD8@bubblehouse.org>

On Jun 5, 2008, at 10:58 AM, Mike Pelletier wrote:
> I'm late to the party, but if people are flinging pennies around,
> here's two of mine.
>
> Instead of lawyering up the Twisted franchise, maybe you could instead
> use the DivMod brand to bless things that you want to be able to be
> authoritative about.  There's already a sort of informal understanding
> of territoriality; "This DivMod stuff is ours. You can use it if you
> recognize that we make a living off this and we'll defend it.  This
> other Twisted stuff is everyone's, and we're just custodians."
> Bringing the law into our comfortable community w/out taking an
> arms-length approach (eg, give the trademark to a not-for-profit) is
> kind of alienating.  But maybe I exaggerate.

This is a feeling a few other people have expressed. It's  
understandable to feel like this is "lawyering up" the community, but  
it's important to be pragmatic about the environment we're in right  
now. Free software/open source has made a lot of ground in the last  
few years, but I think it's fair to say that the GPL/MIT/etc licenses  
still have yet to be truly tested.

For some projects, like, say Firefox, the threat of potential  
infringers is almost nonexistent, since practically *everyone* knows  
what firefox is, and that would be a huge community for a potential  
infringer to piss off. Nonetheless, the Mozilla foundation has several  
trademark registrations.

Also, did you catch the part where this trademark *would* be held by a  
non-profit? If you check out glyph's first post to this thread, the  
Twisted trademarks would be formally held by the Software Freedom  
Conservancy.

-phil



From mike at mkp.ca  Thu Jun  5 11:49:20 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 5 Jun 2008 11:49:20 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
	<20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>
Message-ID: <273093d80806050849r244234f0gb78d3abfe10223bf@mail.gmail.com>

On Thu, Jun 5, 2008 at 11:10 AM,  <glyph at divmod.com> wrote:
> On 02:58 pm, mike at mkp.ca wrote:
>> (eg, give the trademark to a not-for-profit)

> That is exactly what we intend to do.  I thought I mentioned it in the
> initial post; if not, sorry about that.  The whole point of having a
> defensible trademark is having something that the SFC can do something about
> :).

So DivMod would not have any influence whatsoever over who is
prosecuted?  That sounds more reasonable.  Sorry, I can't seem to make
myself go past this kind of thread without saying something 100%
useless.  It's a disease of some kind.



From big_tyo at inf.its-sby.edu  Fri Jun  6 06:55:22 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Fri, 6 Jun 2008 17:55:22 +0700 (ICT)
Subject: [Twisted-Python] Re: How to detect dead client
Message-ID: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>

where is this tcp_keepalive_time located? is it on twisted source code or
python library?




From adelagon at gmail.com  Fri Jun  6 08:38:22 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Fri, 6 Jun 2008 20:38:22 +0800
Subject: [Twisted-Python] Re: How to detect dead client
In-Reply-To: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>
References: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>
Message-ID: <7a01f6c00806060538n14ee3361k2089e3d656ec7321@mail.gmail.com>

Hello,

It's actually a setsockopt() call to enable tcp_keepalive on your
application. It's located in twisted/internet/tcp.py starting from line 431.
:)

def getTcpKeepAlive(self):
        return operator.truth(self.socket.getsockopt(socket.SOL_SOCKET,
                                                     socket.SO_KEEPALIVE))

def setTcpKeepAlive(self, enabled):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE,
enabled)

Twisted uses the built-in python socket library.

---
Alvin Delagon

On Fri, Jun 6, 2008 at 6:55 PM, <big_tyo at inf.its-sby.edu> wrote:

> where is this tcp_keepalive_time located? is it on twisted source code or
> python library?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080606/894926b7/attachment.htm 

From peter at sabaini.at  Fri Jun  6 12:21:45 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 18:21:45 +0200
Subject: [Twisted-Python] pyprocessing in twisted
Message-ID: <200806061821.46163.peter@sabaini.at>

Hello list,

probably a dumb question, but is it possible / a good idea to use 
pyProcessing[1] in a Twisted application? 

More specifically, I'd like to run a Twisted process A that accepts data from 
the network and sends it down to a process B through a processing.Queue(). 

Is that wise? Or should I just stick with reactor.spawnProcess() and 
communicate with ProcessProtocol?

Sorry for the newb-ness,
peter.

[1] http://pyprocessing.berlios.de/



From exarkun at divmod.com  Fri Jun  6 12:24:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Jun 2008 12:24:57 -0400
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061821.46163.peter@sabaini.at>
Message-ID: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>

On Fri, 6 Jun 2008 18:21:45 +0200, Peter Sabaini <peter at sabaini.at> wrote:
>Hello list,
>
>probably a dumb question, but is it possible / a good idea to use
>pyProcessing[1] in a Twisted application?
>
>More specifically, I'd like to run a Twisted process A that accepts data from
>the network and sends it down to a process B through a processing.Queue().
>
>Is that wise? Or should I just stick with reactor.spawnProcess() and
>communicate with ProcessProtocol?

Why are you interested in doing this?

Jean-Paul



From peter at sabaini.at  Fri Jun  6 12:37:41 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 18:37:41 +0200
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
Message-ID: <200806061837.41794.peter@sabaini.at>

On Friday 06 June 2008 18:24:57 Jean-Paul Calderone wrote:
> On Fri, 6 Jun 2008 18:21:45 +0200, Peter Sabaini <peter at sabaini.at> wrote:
> >Hello list,
> >
> >probably a dumb question, but is it possible / a good idea to use
> >pyProcessing[1] in a Twisted application?
> >
> >More specifically, I'd like to run a Twisted process A that accepts data
> > from the network and sends it down to a process B through a
> > processing.Queue().
> >
> >Is that wise? Or should I just stick with reactor.spawnProcess() and
> >communicate with ProcessProtocol?
>
> Why are you interested in doing this?

I'd like to isolate code running in "process B" -- for now this is just a 
prototype, but later on it could well be code I have not much control over, 
so I don't want it to interact bad with Twisted. And I want to be able to 
signal it etc. separately from the Twisted process. PyProcessing seemed like 
an easy way to do this. 

peter.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at divmod.com  Fri Jun  6 12:49:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 06 Jun 2008 16:49:36 -0000
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061837.41794.peter@sabaini.at>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
Message-ID: <20080606164936.25821.1744732819.divmod.xquotient.9272@joule.divmod.com>


On 04:37 pm, peter at sabaini.at wrote:
>I'd like to isolate code running in "process B" -- for now this is just 
>a
>prototype, but later on it could well be code I have not much control 
>over,
>so I don't want it to interact bad with Twisted. And I want to be able 
>to
>signal it etc. separately from the Twisted process. PyProcessing seemed 
>like
>an easy way to do this.

It's doubtful that it will work.  There have been a couple of attempts 
at fixing this ticket:

    http://twistedmatrix.com/trac/ticket/733

I've been working on it most recently, and although there will be 
probably be a fix merged that works with popen sometime soon, I don't 
know if that will be enough for pyprocessing.



From general at eepatents.com  Fri Jun  6 12:50:58 2008
From: general at eepatents.com (Ed Suominen)
Date: Fri, 06 Jun 2008 09:50:58 -0700
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061821.46163.peter@sabaini.at>
References: <200806061821.46163.peter@sabaini.at>
Message-ID: <48496AF2.1060804@eepatents.com>

Take a look at my AsynQueue project 
(http://foss.eepatents.com/AsynQueue), which includes provisions for 
this very thing in the asynqueue.workers module. A specific 
implementation for asynchronous cluster processing is available in my 
(you guessed it) AsynCluster project 
(http://foss.eepatents.com/AsynQueue). I'm using it regularly to run a 
complex statistical model on a 10-CPU cluster here.

Best regards, Ed

Peter Sabaini wrote:
> Hello list,
> 
> probably a dumb question, but is it possible / a good idea to use 
> pyProcessing[1] in a Twisted application? 
> 
> More specifically, I'd like to run a Twisted process A that accepts data from 
> the network and sends it down to a process B through a processing.Queue(). 
> 
> Is that wise? Or should I just stick with reactor.spawnProcess() and 
> communicate with ProcessProtocol?
> 
> Sorry for the newb-ness,
> peter.
> 
> [1] http://pyprocessing.berlios.de/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 



From ldanielburr at mac.com  Fri Jun  6 12:51:19 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 06 Jun 2008 11:51:19 -0500
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061837.41794.peter@sabaini.at>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
Message-ID: <op.ucb6ftly3oj628@l-daniel-burrs-computer.local>

Hi Peter,


On Fri, 06 Jun 2008 11:37:41 -0500, Peter Sabaini <peter at sabaini.at> wrote:

[snip]

>
> I'd like to isolate code running in "process B" -- for now this is just a
> prototype, but later on it could well be code I have not much control  
> over,
> so I don't want it to interact bad with Twisted. And I want to be able to
> signal it etc. separately from the Twisted process. PyProcessing seemed  
> like
> an easy way to do this.
>
> peter.


I'd definitely advise sticking with reactor.spawnProcess; using that,
along with a ProcessProtocol implementation, is going to allow you
to integrate more smoothly with the rest of your Twisted app.

The catch here is that, depending upon your needs, you may have tp
write your own ProcessProtocol, specific to your app; if you want
something that provides more "out-of-box" functionality, I might
suggest you look at ampoule, https://launchpad.net/ampoule/, which
gives you a process pool, and handles most of the low-level stuff.

Hope this helps,

L. Daniel Burr



From peter at sabaini.at  Fri Jun  6 13:17:17 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 19:17:17 +0200
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <op.ucb6ftly3oj628@l-daniel-burrs-computer.local>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
	<op.ucb6ftly3oj628@l-daniel-burrs-computer.local>
Message-ID: <200806061917.17217.peter@sabaini.at>

Thanks for the all the suggestions!

/me is going into exploring mode
peter.

On Friday 06 June 2008 18:51:19 L. Daniel Burr wrote:
> Hi Peter,
>
>
> On Fri, 06 Jun 2008 11:37:41 -0500, Peter Sabaini <peter at sabaini.at> wrote:
>
> [snip]
>
> > I'd like to isolate code running in "process B" -- for now this is just a
> > prototype, but later on it could well be code I have not much control
> > over,
> > so I don't want it to interact bad with Twisted. And I want to be able to
> > signal it etc. separately from the Twisted process. PyProcessing seemed
> > like
> > an easy way to do this.
> >
> > peter.
>
> I'd definitely advise sticking with reactor.spawnProcess; using that,
> along with a ProcessProtocol implementation, is going to allow you
> to integrate more smoothly with the rest of your Twisted app.
>
> The catch here is that, depending upon your needs, you may have tp
> write your own ProcessProtocol, specific to your app; if you want
> something that provides more "out-of-box" functionality, I might
> suggest you look at ampoule, https://launchpad.net/ampoule/, which
> gives you a process pool, and handles most of the low-level stuff.
>
> Hope this helps,
>
> L. Daniel Burr
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From peter at sabaini.at  Sat Jun  7 08:17:43 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Sat, 7 Jun 2008 14:17:43 +0200
Subject: [Twisted-Python] "core docs" pdf --> 404
Message-ID: <200806071417.43671.peter@sabaini.at>

Just FYI -- the "Core Documentation" PDF gives me a 404 
http://twistedmatrix.com/projects/core/documentation/howto/book.pdf




From exarkun at divmod.com  Sat Jun  7 09:16:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 7 Jun 2008 09:16:15 -0400
Subject: [Twisted-Python] "core docs" pdf --> 404
In-Reply-To: <200806071417.43671.peter@sabaini.at>
Message-ID: <20080607131615.4714.1578953314.divmod.quotient.6607@ohm>

On Sat, 7 Jun 2008 14:17:43 +0200, Peter Sabaini <peter at sabaini.at> wrote:
>Just FYI -- the "Core Documentation" PDF gives me a 404
>http://twistedmatrix.com/projects/core/documentation/howto/book.pdf
>

Please file a ticket in the issue tracker.  Reports made on the mailing list
will be ignored or forgotten.  Also, please don't report 404s without also
reporting where they are linked _from_.

Jean-Paul



From Marcin.Kasperski at softax.com.pl  Sat Jun  7 14:24:32 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sat, 07 Jun 2008 20:24:32 +0200
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But how
	should I migrate?
Message-ID: <87lk1hm7bz.fsf@platon.mekk.waw.pl>


Long time ago I wrote some code using twisted.protocols.telnet.Telnet.
Now I get:

   DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
   deprecated.  See twisted.conch.telnet for the current, supported
   API.

The problem is ... I do not know how to migrate. Bare substitution
of twisted.conch.telnet instead of twisted.protocols.telnet does not
work (my code, which subclassed Telnet and provided welcomeMessage,
checkUserAndPass, and loggedIn, simply is not called).

I checked for docs, but twisted.conch has only some docs about SSH
clients, and by looking only at the code I can't figure what should I
do. I suspect that I should use AuthenticatingTelnetProtocol but I do
not understand how should I do it (what is this portal, why should
I return some other protocol).

I grepped through all examples for this class, but found nothing.

So: how should one migrate twisted.telnet.Telnet to
twisted.conch.telnet? Does there exist any example of simple telnet
server?




From exarkun at divmod.com  Sat Jun  7 23:28:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 7 Jun 2008 23:28:44 -0400
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But how
	should I migrate?
In-Reply-To: <87lk1hm7bz.fsf@platon.mekk.waw.pl>
Message-ID: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>

On Sat, 07 Jun 2008 20:24:32 +0200, Marcin Kasperski <marcin.kasperski at softax.com.pl> wrote:
>
>Long time ago I wrote some code using twisted.protocols.telnet.Telnet.
>Now I get:
>
>   DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
>   deprecated.  See twisted.conch.telnet for the current, supported
>   API.
>
>The problem is ... I do not know how to migrate. Bare substitution
>of twisted.conch.telnet instead of twisted.protocols.telnet does not
>work (my code, which subclassed Telnet and provided welcomeMessage,
>checkUserAndPass, and loggedIn, simply is not called).
>
>I checked for docs, but twisted.conch has only some docs about SSH
>clients, and by looking only at the code I can't figure what should I
>do. I suspect that I should use AuthenticatingTelnetProtocol but I do
>not understand how should I do it (what is this portal, why should
>I return some other protocol).
>
>I grepped through all examples for this class, but found nothing.
>
>So: how should one migrate twisted.telnet.Telnet to
>twisted.conch.telnet? Does there exist any example of simple telnet
>server?
>

http://twistedmatrix.com/pipermail/twisted-python/2007-June/015623.html
may help somewhat.  There are also some examples in doc/conch/examples/
and on the website.

twisted.conch.telnet.Telnet is a much more complete telnet implementation.
It also lacks the application-specific features that were present in
twisted.protocols.telnet.Telnet, like welcomeMessage and loggedIn.

AuthenticatingTelnetProtocol is vaguely like the old Telnet class, but it
is intended more as an example of what kind of things you can do, rather
than a robust base class for whatever your application requires.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jun  8 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Jun 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1212897907.71.804745072@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080608/f2af86e0/attachment.htm 

From curtferguson at cfl.rr.com  Sun Jun  8 08:04:11 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Sun, 08 Jun 2008 08:04:11 -0400
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But
	how	should I migrate?
In-Reply-To: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>
References: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>
Message-ID: <484BCABB.7070409@cfl.rr.com>

Jean-Paul Calderone wrote:
> On Sat, 07 Jun 2008 20:24:32 +0200, Marcin Kasperski
> <marcin.kasperski at softax.com.pl> wrote:
>>
>> So: how should one migrate twisted.telnet.Telnet to
>> twisted.conch.telnet? Does there exist any example of simple telnet
>> server?
>>
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-June/015623.html
> may help somewhat.  There are also some examples in doc/conch/examples/
> and on the website.
>
> twisted.conch.telnet.Telnet is a much more complete telnet
> implementation.
> It also lacks the application-specific features that were present in
> twisted.protocols.telnet.Telnet, like welcomeMessage and loggedIn.
>
> AuthenticatingTelnetProtocol is vaguely like the old Telnet class, but it
> is intended more as an example of what kind of things you can do, rather
> than a robust base class for whatever your application requires.
>
> Jean-Paul
This link is the information I've been trying to find for two weeks. :) 
Thanks for posting it, and to the OP for posting the right question. 
Trying to learn twisted and python at the same time.  So far I've got a
server that will allow chatting via SSH or TCP, I've been attempting to
get telnet negotiation working right on the straight TCP side, this
should help a lot.





From exarkun at divmod.com  Mon Jun  9 10:24:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 9 Jun 2008 10:24:14 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: 0
Message-ID: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>

Hello all,

On Friday I finished the first two weeks of funded Twisted development,
I'm happy to say the two weeks went great and I got a lot accomplished.

The very, very high-level summary is that I started off by emptying the
Twisted review queue and then moved on to finishing some twisted.web tasks
which had been started previously by other developers and then abandoned
for lack of time or interest or whatever other reason.  All told, I did 35
reviews on 29 tickets and did development on 8 others.  I also spent some
time cleaning duplicate or invalid tickets out of the Twisted tracker.  This
collectively resulted in 32 tickets being closed over the past two weeks.

Here are the tickets closed as a direct result of this work:

#1789 - twisted.conch.test.test_filetransfer.TestOurServerOurClient.testOpenFileAttributes (and perhaps others) leaks file descriptors
#3213 - twisted.conch.ssh.filetransfer.FileTransferServer leaks file descriptors
#3203 - PortableGtkReactor is broken
#3098 - filepath.FilePath.walk loops forever if there is a symlink pointing back up the file tree
#3033 - mkdir(a); mkdir(a) logs an unhandled error in SFTP
#3054 - Small error in the documentation for pb
#2881 - Add a variable in twisted.python.runtime to check for vista
#2374 - testOpenSSLBuffering fails intermittently on a dapper machine (running in vmware) because it uses reactor.iterate
#2918 - intermittent twisted.test.test_ssl.SpammyTLSTestCase.testUnTLS failure on OS X
#3210 - test_pb.NewCredTestCase is insanely long and causes some intermittent failures
#3119 - trial leaks memory/objects/something
#3052 - twistd logging options needs to be tested
#3266 - Provide tools for managing new deprecation policy
#3191 - in manhole in gnome-terminal_ lines longer than the terminal is wide result in excessive scrolling and duplication
#3105 - symlink support and docstrings in filepath.FilePath.copyTo/moveTo
#3267 - Typo in the Asynchronous Programming howto
#3184 - Trial minimal reporter prints a negative run time in summary
#1410 - spawnProcess on unix doesn't handle case where os.fork fails cleanly
#2305 - twisted/internet/process.py leaks file descriptors when os.fork() raises
#3272 - sorting the --profile output in trial
#3259 - Improved some error messagge in reflect.py
#2713 - trial -u can fail doctests on second pass
#2698 - Build Bug on Cygwin
#914 - xmlrpc.QueryFactory failed to catch some exceptions
#1057 - Incorrect and misleading arg name msSinceEpoch
#2017 - t.w.client.getPage returning ConnectionDone: Connection was closed cleanly error
#1412 - ExpatError on xmlrpc client connection close
#393 - [PATCH] HTTP Basic Auth based guard
#1108 - web2 needs SOAP support
#909 - microdom getElementsByTagName
#687 - web.client needs documentation and/or data-checking for method argument
#165 - [PATCH]Multiple header with same name support in http

Of particular note, I think, are the following:

#3213: Prior to this fix, the Twisted SFTP server would leak any file
descriptors not closed before the end of an SFTP session.

#3203: This fix restores Gtk2 support on Windows.  We have also set up
a Gtk2 Windows builder which is now passing all but one test.

#1410: Prior to this fix, an error when calling os.fork() would cause
reactor.spawnProcess to leak any pipes it opened and potentially to
continue running in the main process with the wrong UID/GID.

#165: This adds support for multiple values for each header to the
twisted.web server.  Previously only the last value received would
be made available to applications.

Six more tickets are waiting to be reviewed and will hopefully be closed
soon.  I want to take this opportunity to thank everyone who worked on
tickets I reviewed over the past couple weeks.  Twisted development is a
collaborative process and I wouldn't have made nearly as big a dent without
all of their help.  I also want to thank Thomas Herv? in particular, who
authored a lot of the code I reviewed and also (if I kept track properly)
did every review of code I submitted over the the past two weeks.

In addition to doing work on tickets from the tracker, I also addressed two
other issues with Twisted's buildbot.  First, I took one of the compact build
result views and split it into a supported-only view and an everything view
to make it easier to find out the status of recent builds on supported
platforms.  These two views are linked from the main Twisted buildbot page,
http://buildbot.twistedmatrix.com/ - see the "Latest builds" link.  Second,
I improved the error reporting for the setuptools-enabled builder, making it
easier to track down the cause of some setuptools-related problems.

Thanks to the SFC (<http://conservancy.softwarefreedom.org/>) and all of
the sponsors  (<http://twistedmatrix.com/trac/wiki/TSF/FoundingSponsors>)
who made this possible.

Jean-Paul



From tnelson at onresolve.com  Tue Jun 10 13:35:12 2008
From: tnelson at onresolve.com (Trent Nelson)
Date: Tue, 10 Jun 2008 18:35:12 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
Message-ID: <6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>

> AFAIK if someone infringes you're trademark you are obliged to enforce
> your trademark or lose it, the afore mentioned two people Glyph is not
> happy with who are using the word 'Twisted' would need to receive a
> C&D off the bat. Does Twisted Labs have the resources to put into
> maintaining their trademark?

I found almost the exact opposite to what you're stating here when I looked into acquiring trademarks for some company stuff a while back.  You're not obliged to do anything; it simply provides you with a legal grounding if you wish to challenge a party that you believe has infringed upon your trademark (assuming it's to your detriment; you wouldn't pursue a 'Twisted Fruits', a company down the street that brands their produce with a big 'Twisted' sticker).

It's up to you to enforce your trademark, there's no governing body that does it; such a body only comes in to play to arbitrate disputes.  I've never heard of an obligation to enforce your trademark "or lose it" as you put it.

> Timothy J Stebbing


        Trent.

From phil at bubblehouse.org  Tue Jun 10 14:09:01 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 10 Jun 2008 14:09:01 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
	<6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>
Message-ID: <68DF277D-8FA2-44EC-BFD9-336DF0E2731E@bubblehouse.org>

On Jun 10, 2008, at 1:35 PM, Trent Nelson wrote:
>> AFAIK if someone infringes you're trademark you are obliged to  
>> enforce
>> your trademark or lose it, the afore mentioned two people Glyph is  
>> not
>> happy with who are using the word 'Twisted' would need to receive a
>> C&D off the bat. Does Twisted Labs have the resources to put into
>> maintaining their trademark?
>
> I found almost the exact opposite to what you're stating here when I  
> looked into acquiring trademarks for some company stuff a while  
> back.  You're not obliged to do anything; it simply provides you  
> with a legal grounding if you wish to challenge a party that you  
> believe has infringed upon your trademark (assuming it's to your  
> detriment; you wouldn't pursue a 'Twisted Fruits', a company down  
> the street that brands their produce with a big 'Twisted' sticker).
>
> It's up to you to enforce your trademark, there's no governing body  
> that does it; such a body only comes in to play to arbitrate  
> disputes.  I've never heard of an obligation to enforce your  
> trademark "or lose it" as you put it.

IANAL, but I did read a lot about this on slashdot ;-)...

When such a dispute occurs, you have to prove that you've been  
performing due diligence in protecting your trademark. I don't think  
it's necessary to send the aforementioned projects C&Ds quite yet, but  
they should be contacted and told of our intentions to protect the  
Twisted trademark.

IIRC, this is to prevent people from registering everything they can  
think of, and then suing the next person to use that mark. It would be  
nice if we had something like that for patents...

-phil



From waterbug at pangalactic.us  Tue Jun 10 20:50:31 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 10 Jun 2008 20:50:31 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
References: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
Message-ID: <484F2157.6000906@pangalactic.us>

Jean-Paul Calderone wrote:
[details elided for brevity]
> Thanks to the SFC (<http://conservancy.softwarefreedom.org/>) and all of
> the sponsors  (<http://twistedmatrix.com/trac/wiki/TSF/FoundingSponsors>)
> who made this possible.

Kudos to all the sponsors and major thanks to Jp!!  Hopefully there will
be more of the same?  I.e., are there still some remaining funds for more?

Cheers (and I *mean* cheers! :),
Steve



From sakalsiz at gmail.com  Wed Jun 11 03:33:08 2008
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Wed, 11 Jun 2008 10:33:08 +0300
Subject: [Twisted-Python] Asynqueue 101 (Help)
Message-ID: <767e5e0d0806110033r3e09ecb5l83d8670d65efb482@mail.gmail.com>

Hi,

I want to develop a server that has a dispatcher and worker processes.
Asynqueue seems to be a perfect choice for my intention. However, I couldn't
understand what I should do first and next. The workers will be processes
and tasks will be queued and assigned to the child processes. There are many
classes but I couldn't understand their interaction.

For example what is the difference between a job and a task. How will I use
TaskQueue with child processes or process workers. I need some examples,
asynqueue has some test codes but they don't give enough clue to me.

I need the general idea and the use of asynqueue.

Thanks in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080611/e1b33d3b/attachment.htm 

From zooko at zooko.com  Wed Jun 11 17:54:08 2008
From: zooko at zooko.com (zooko)
Date: Wed, 11 Jun 2008 14:54:08 -0700
Subject: [Twisted-Python] ANNOUNCING Allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.1 
Message-ID: <35077CE3-6912-4311-A1EE-BE4B2934029C@zooko.com>

ANNOUNCING Allmydata.org "Tahoe", the Least-Authority Filesystem, v1.1

We are pleased to announce the release of version 1.1 of the "Tahoe"
Least Authority Filesystem.

The "Tahoe" Least Authority Filesystem is a secure, decentralized,
fault-tolerant filesystem.  All of the source code is available under
a Free Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

A one-page explanation of the security and fault-tolerance properties
that it offers is visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


This is the successor to Allmydata.org "Tahoe" Least Authority
Filesystem v1.0, which was released March 25, 2008 [1].  This release
fixes several serious issues in Tahoe v1.0, and improves the user
interfaces.  See the known_issues.txt file [2] and the NEWS file [3]
for details.


COMPATIBILITY

The version 1 branch of Tahoe is used as the basis of the consumer
backup product from Allmydata, Inc. -- http://allmydata.com .

Tahoe v1.1 is fully compatible with Tahoe v1.0.  v1.1 clients produce
files which can be read by v1.0 clients.  v1.1 clients can read files
produced by clients of all versions >= v0.8.  v1.1 servers can serve
v1.0 clients and v1.1 clients can use v1.0 servers.

This is the second release in the version 1 series.  We believe that
this version of Tahoe is stable enough to rely on as a permanent store
of valuable data.  The version 1 branch of Tahoe will be actively
supported and maintained for the forseeable future, and future
versions of Tahoe will retain the ability to read files and
directories produced by Tahoe v1 for the forseeable future.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
cryptographic capability-based access control scheme.

Because this software is the product of less than two years of active
development, we do not categorically recommend it for the storage of
data which is extremely confidential or precious.  However, we believe
that the combination of erasure coding, strong encryption, and careful
engineering makes the use of this software a much safer alternative
than common alternatives, such as RAID, or traditional backup onto a
remote server, removable drive, or tape.

This software comes with extensive unit tests [4], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known issues please see the
known_issues.txt file [2].)

This release of Tahoe is suitable for the "friendnet" use case [5] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL" [6]
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public  
Licence,
version 1.0.  The Transitive Grace Period Public Licence says that  
you may
distribute proprietary derived works of Tahoe without releasing the  
source code
of that derived work for up to twelve months, after which time you  
are obligated
to release the source code of the derived work under the Transitive  
Grace Period
Public Licence.  See the file "COPYING.TGPPL.html" [7] for the terms  
of the
Transitive Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [8].


HACKING AND COMMUNITY

Please join us on the mailing list [9] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [10] shows the next improvements that we plan to make and
CREDITS [11] lists the names of people who've contributed to the
project.  The wiki Dev page [12] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [13], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and instructing them to spend part of
their work time on this free-software project).  We are eternally
grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
June 11, 2008
San Francisco, California, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2348
[2] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[3] http://allmydata.org/trac/tahoe/browser/docs/NEWS
[4] http://allmydata.org/trac/tahoe/wiki/Dev
[5] http://allmydata.org/trac/tahoe/wiki/UseCases
[6] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[7] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[8] http://allmydata.org/source/tahoe/trunk/docs/install.html
[9] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[10] http://allmydata.org/trac/tahoe/roadmap
[11] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2677
[12] http://allmydata.org/trac/tahoe/wiki/Dev
[13] http://allmydata.com




From happybrowndog at hotmail.com  Wed Jun 11 18:28:40 2008
From: happybrowndog at hotmail.com (happybrowndog)
Date: Wed, 11 Jun 2008 15:28:40 -0700
Subject: [Twisted-Python] PerspectiveClientManager.disconnect() - results in
 Unhandled error in Deferred
Message-ID: <g2pjjb$v2i$1@ger.gmane.org>

Hello,

I am calling the disconnect() method of an instance of the 
PerspectiveClientManager class, but when is is called, I get the 
following error:

Unhandled error in Deferred:
Traceback (most recent call last):
Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: 
Traceback (failure with no frames): 
twisted.internet.error.ConnectionDone: Connection was closed cleanly.
]

I have no idea what to look for as to what is causing this error.  Does 
someone have any idea?




From itamar at itamarst.org  Thu Jun 12 09:18:41 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 12 Jun 2008 09:18:41 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: <484F2157.6000906@pangalactic.us>
References: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
	<484F2157.6000906@pangalactic.us>
Message-ID: <1213276721.23668.53.camel@localhost.localdomain>

On Tue, 2008-06-10 at 20:50 -0400, Stephen Waterbury wrote:

> Kudos to all the sponsors and major thanks to Jp!!  Hopefully there will
> be more of the same?  I.e., are there still some remaining funds for more?

Yes, we hope to continue this for a while :)




From exarkun at divmod.com  Thu Jun 12 09:28:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 12 Jun 2008 09:28:38 -0400
Subject: [Twisted-Python] PerspectiveClientManager.disconnect() -
	results in Unhandled error in Deferred
In-Reply-To: <g2pjjb$v2i$1@ger.gmane.org>
Message-ID: <20080612132838.4714.1150512497.divmod.quotient.8489@ohm>

On Wed, 11 Jun 2008 15:28:40 -0700, happybrowndog <happybrowndog at hotmail.com> wrote:
>Hello,
>
>I am calling the disconnect() method of an instance of the 
>PerspectiveClientManager class, but when is is called, I get the following 
>error:
>
>Unhandled error in Deferred:
>Traceback (most recent call last):
>Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
>(failure with no frames): twisted.internet.error.ConnectionDone: Connection 
>was closed cleanly.
>]
>
>I have no idea what to look for as to what is causing this error.  Does 
>someone have any idea?
>

Most likely this is a failure on a Deferred returned by PB's callRemote
method.  You can get more information about where it was created by
enabling Deferred debugging.  See the --debug option to twistd or
twisted.internet.defer.setDebugging.

Jean-Paul



From proppy at aminche.com  Fri Jun 13 12:04:07 2008
From: proppy at aminche.com (Johan Euphrosine)
Date: Fri, 13 Jun 2008 18:04:07 +0200
Subject: [Twisted-Python] Twisted service kit
Message-ID: <1213373047.8146.32.camel@ippiki>

Hi,

As part of a freelance job, I'm asked to glue twisted with other
technologies together as a proof of concept of what be done (and how),
in the context of a service communicating with C++ games.

As it may be useful to someone else, I'm pushing the source here:
?http://proppy.aminche.com/hg/service-test/

This is what the code features/shows so far:
- JSON protocol over Int32StringReceived
- C++ sample client using boost.asio and Json_Spirit
- server and client OpenSSL endpoint
- XMLRPC with credential checking using twisted.web and twisted.cred
- packaging as a twisted plugin
- connection round robbin using pydirector
- inter node communication using twisted.spread perspective broker
- db persistance using storm ORM
- RPC registry using python decorator
- testing using twisted.trial and inlineCallbacks

I wonder if it is worth contributing on its own, to the newly created TX
project.

Maybe some parts of it could be extracted, and made into a more
submittable (and useful) shape.

Any thoughts ?

?Thanks to ?irc://irc.freenode.net/#twisted peoples for 24h/day help and
advises.
-- 
Johan Euphrosine <proppy at aminche.com>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080613/23de49ba/attachment.pgp 

From radix at twistedmatrix.com  Fri Jun 13 12:31:09 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 13 Jun 2008 17:31:09 +0100
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <1213373047.8146.32.camel@ippiki>
References: <1213373047.8146.32.camel@ippiki>
Message-ID: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>

On Fri, Jun 13, 2008 at 5:04 PM, Johan Euphrosine <proppy at aminche.com> wrote:
> Hi,
>
> As part of a freelance job, I'm asked to glue twisted with other
> technologies together as a proof of concept of what be done (and how),
> in the context of a service communicating with C++ games.
>
> As it may be useful to someone else, I'm pushing the source here:
> ?http://proppy.aminche.com/hg/service-test/
>
> This is what the code features/shows so far:
> - JSON protocol over Int32StringReceived
> - C++ sample client using boost.asio and Json_Spirit
> - server and client OpenSSL endpoint
> - XMLRPC with credential checking using twisted.web and twisted.cred
> - packaging as a twisted plugin
> - connection round robbin using pydirector
> - inter node communication using twisted.spread perspective broker
> - db persistance using storm ORM

I'm glad to see people using Storm in Twisted apps, but I think
there's a problem with it. You're using the store directly with a
MySQL server, which will block. This is reasonable for things like
SQLite, but when you're using a multi-user database system like MySQL
or Postgres, queries can take an arbitrarily long time to complete,
which blocks your Twisted reactor. This is fine for some applications
where response time isn't critical, but I wouldn't want to use it for
a highly interactive application.

If SQLite isn't an option yet, then you can use the experimental
Storm/Twisted integration code in its Storm branch on Launchpad:

  https://code.launchpad.net/~therve/storm/twisted-integration

I'd love to hear how it works out if you try it.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From proppy at aminche.com  Fri Jun 13 12:56:46 2008
From: proppy at aminche.com (Johan Euphrosine)
Date: Fri, 13 Jun 2008 18:56:46 +0200
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
Message-ID: <1213376206.9788.21.camel@ippiki>

On Fri, 2008-06-13 at 17:31 +0100, Christopher Armstrong wrote:
> I'm glad to see people using Storm in Twisted apps, but I think
> there's a problem with it. You're using the store directly with a
> MySQL server, which will block. This is reasonable for things like
> SQLite, but when you're using a multi-user database system like MySQL
> or Postgres, queries can take an arbitrarily long time to complete,
> which blocks your Twisted reactor. This is fine for some applications
> where response time isn't critical, but I wouldn't want to use it for
> a highly interactive application.
> 
> If SQLite isn't an option yet, then you can use the experimental
> Storm/Twisted integration code in its Storm branch on Launchpad:
> 
>   https://code.launchpad.net/~therve/storm/twisted-integration
> 
> I'd love to hear how it works out if you try it.
>

Thanks for the quick feedback,

At changeset 130:
http://proppy.aminche.com/hg/service-test/rev/9dac70808c34

I switched from sqllite to mysql, because I wasn't able to use
deferToThread with sqllite, for potentially blocking request:

http://proppy.aminche.com/hg/service-test/rev/b77a2c9a1ded

sqlite3.ProgrammingError: SQLite objects created in a thread can only be
used in that same thread.The object was created in thread id -1210218304
and this is thread id -1215493232

I took a look at storm/twisted integration, (I stoled the threading and
the inlineCallback tricks from it).

I will be definitely looking forward using it, for tighter storm/twisted
integration.
-- 
Johan Euphrosine <proppy at aminche.com>




From phil at bubblehouse.org  Fri Jun 13 13:07:18 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 13 Jun 2008 13:07:18 -0400
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <1213373047.8146.32.camel@ippiki>
References: <1213373047.8146.32.camel@ippiki>
Message-ID: <0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>

On Jun 13, 2008, at 12:04 PM, Johan Euphrosine wrote:
> As part of a freelance job, I'm asked to glue twisted with other
> technologies together as a proof of concept of what be done (and how),
> in the context of a service communicating with C++ games.
>
> As it may be useful to someone else, I'm pushing the source here:
> http://proppy.aminche.com/hg/service-test/
[snip]
> I wonder if it is worth contributing on its own, to the newly  
> created TX
> project.
>
> Maybe some parts of it could be extracted, and made into a more
> submittable (and useful) shape.

The great thing about the Twisted Community Code project is that you  
don't need any particular approval from anyone to add your code. If  
you think what you have might be of use to someone, whether it's for  
production use or just as a learning tool, you should consider  
creating a TX subproject.

There are other options as well. If you feel your code doesn't warrant  
the overhead of a full project (e.g., you don't see yourself having  
time to respond to bug requests or create blueprints, etc.), you  
should be able to create a personal Bazaar branch to store your code  
in, which you can then assign to the TX superproject.

This probably won't get as many eyeballs, since it won't be on the  
subproject list, but it's a good way to get your code out there in an  
easily accessible place. Plus, given the nature of Bazaar, anyone who  
wishes will be able to work with your code in their own branch.

-phil



From kevin.horn at gmail.com  Fri Jun 13 13:26:14 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 13 Jun 2008 12:26:14 -0500
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>
References: <1213373047.8146.32.camel@ippiki>
	<0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>
Message-ID: <562bcc10806131026w550ce080pac26afb678ec6cb9@mail.gmail.com>

On Fri, Jun 13, 2008 at 12:07 PM, Phil Christensen <phil at bubblehouse.org>
wrote:

> On Jun 13, 2008, at 12:04 PM, Johan Euphrosine wrote:
>
>> As part of a freelance job, I'm asked to glue twisted with other
>> technologies together as a proof of concept of what be done (and how),
>> in the context of a service communicating with C++ games.
>>
>> As it may be useful to someone else, I'm pushing the source here:
>> http://proppy.aminche.com/hg/service-test/
>>
> [snip]
>
>> I wonder if it is worth contributing on its own, to the newly created TX
>> project.
>>
>> Maybe some parts of it could be extracted, and made into a more
>> submittable (and useful) shape.
>>
>
> The great thing about the Twisted Community Code project is that you don't
> need any particular approval from anyone to add your code. If you think what
> you have might be of use to someone, whether it's for production use or just
> as a learning tool, you should consider creating a TX subproject.
>
> There are other options as well. If you feel your code doesn't warrant the
> overhead of a full project (e.g., you don't see yourself having time to
> respond to bug requests or create blueprints, etc.), you should be able to
> create a personal Bazaar branch to store your code in, which you can then
> assign to the TX superproject.
>
> This probably won't get as many eyeballs, since it won't be on the
> subproject list, but it's a good way to get your code out there in an easily
> accessible place. Plus, given the nature of Bazaar, anyone who wishes will
> be able to work with your code in their own branch.
>
> -phil
>
>
BTW, Phil, are there any established guidelines/conventions for the "TX"
packages other than "start your project name with a 'tx'"?

Any suggestions or guidelines on how such packages should leverage
setuptools, stuff like that?

I think it would be very useful to have all of these packages install in a
similar fashion, though of course, it wouldn't be practical (or advisable)
to try and enforce this in any way.  But I do think it would be good to have
a set of guidelines posted someplace saying "here is the recommended way to
set up a TX package".

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080613/a906a97d/attachment.htm 

From curtferguson at cfl.rr.com  Fri Jun 13 13:27:49 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Fri, 13 Jun 2008 13:27:49 -0400
Subject: [Twisted-Python] Storm vs Axiom?
In-Reply-To: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
Message-ID: <4852AE15.8090100@cfl.rr.com>

Christopher Armstrong wrote:
> I'm glad to see people using Storm in Twisted apps, but I think
> there's a problem with it. You're using the store directly with a
> MySQL server, which will block. This is reasonable for things like
> SQLite, but when you're using a multi-user database system like MySQL
> or Postgres, queries can take an arbitrarily long time to complete,
> which blocks your Twisted reactor. This is fine for some applications
> where response time isn't critical, but I wouldn't want to use it for
> a highly interactive application.
>
> If SQLite isn't an option yet, then you can use the experimental
> Storm/Twisted integration code in its Storm branch on Launchpad:
>
>   

What are the advantages of Storm over divmod: Axiom?  I'm currently
working on something with twisted and axiom, I hadn't previously heard
of Storm.  If there are significant advantages, I'd like to hear
thoughts on them, I'm not above switching at this point.





From phil at bubblehouse.org  Fri Jun 13 15:20:42 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 13 Jun 2008 15:20:42 -0400
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service kit)
Message-ID: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>

On Jun 13, 2008, at 1:26 PM, Kevin Horn wrote:
> On Fri, Jun 13, 2008 at 12:07 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> The great thing about the Twisted Community Code project is that  
>> you don't need any particular approval from anyone to add your  
>> code. If you think what you have might be of use to someone,  
>> whether it's for production use or just as a learning tool, you  
>> should consider creating a TX subproject.
>>
>> There are other options as well. If you feel your code doesn't  
>> warrant the overhead of a full project (e.g., you don't see  
>> yourself having time to respond to bug requests or create  
>> blueprints, etc.), you should be able to create a personal Bazaar  
>> branch to store your code in, which you can then assign to the TX  
>> superproject.
>>
>> This probably won't get as many eyeballs, since it won't be on the  
>> subproject list, but it's a good way to get your code out there in  
>> an easily accessible place. Plus, given the nature of Bazaar,  
>> anyone who wishes will be able to work with your code in their own  
>> branch.
>>
>> -phil
>
> BTW, Phil, are there any established guidelines/conventions for the  
> "TX" packages other than "start your project name with a 'tx'"?

Not really. Even the 'tx' prefix is just a suggestion. I think adding  
the prefix is a good idea if your project has a generic name, like a  
protocol, but it's up to you. Using it is a nice show of 'community  
solidarity', but I know I have a couple of projects I hope to add soon  
where it would just look or sound weird.

> Any suggestions or guidelines on how such packages should leverage  
> setuptools, stuff like that?
>
> I think it would be very useful to have all of these packages  
> install in a similar fashion, though of course, it wouldn't be  
> practical (or advisable) to try and enforce this in any way.  But I  
> do think it would be good to have a set of guidelines posted  
> someplace saying "here is the recommended way to set up a TX package".

Agreed. I think deployment options like this are best decided on a per- 
project basis, since TX will hopefully be a home for example code and  
works-in-progress as well as true project releases.

Still, I think we can all agree that projects should be installable  
using distutils at the very least. The key thing here is that for most  
projects you should be able to "python setup.py install" and be done  
with it.

Does anyone have any other suggestions? If we can come up with a list  
of suggested criteria, I'll write up a spec to add to the TX blueprints.

-phil



From screwtape at froup.com  Fri Jun 13 23:29:13 2008
From: screwtape at froup.com (Tim Allen)
Date: Sat, 14 Jun 2008 13:29:13 +1000
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service
	kit)
In-Reply-To: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
Message-ID: <83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>


On 14 Jun 2008, at 05:20, Phil Christensen wrote:
> Still, I think we can all agree that projects should be installable  
> using distutils at the very least. The key thing here is that for  
> most projects you should be able to "python setup.py install" and  
> be done with it.
>
> Does anyone have any other suggestions? If we can come up with a  
> list of suggested criteria, I'll write up a spec to add to the TX  
> blueprints.

It's not Twisted-specific, but I've always been a fan of JP's list:

	http://jcalderone.livejournal.com/39794.html




From phil at bubblehouse.org  Sat Jun 14 11:50:32 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 14 Jun 2008 11:50:32 -0400
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service
	kit)
In-Reply-To: <83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
	<83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
Message-ID: <FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>

On Jun 13, 2008, at 11:29 PM, Tim Allen wrote:
> On 14 Jun 2008, at 05:20, Phil Christensen wrote:
>> Still, I think we can all agree that projects should be  
>> installable using distutils at the very least. The key thing here  
>> is that for most projects you should be able to "python setup.py  
>> install" and be done with it.
>>
>> Does anyone have any other suggestions? If we can come up with a  
>> list of suggested criteria, I'll write up a spec to add to the TX  
>> blueprints.
>
> It's not Twisted-specific, but I've always been a fan of JP's list:
>
> 	http://jcalderone.livejournal.com/39794.html


Ha, I've been copying Twisted/Divmod's packaging structure for a long  
time, so this is right up my alley.

I think this is a great list. There's little I can think to add to  
it, except for one thing, and that's license information.

I think it's probably safe to say that a standard LICENSE file should  
go along with the README and setup.py

Any other thoughts?

-phil



From james at webmynd.com  Sat Jun 14 19:08:58 2008
From: james at webmynd.com (James Brady)
Date: Sat, 14 Jun 2008 16:08:58 -0700
Subject: [Twisted-Python] Executing a number of commands over SSH
Message-ID: <B724F517-FF2C-4015-BC03-1C4DD2AE4B83@webmynd.com>

Hi all,
I'd like to run a few commands on a remote machine over SSH. Looking  
at the conch packages, I'm not sure what the best approach is for this.

The only way I can see to pass the set of commands down into the  
SSHConnection and SSHChannel objects is through my transport factory,  
i.e. I can't add or remove commands to be run on an already  
instantiated SSHConnection.

Also, I'm a newcomer to the Twisted way of doing things, so it's not  
clear to me how I would go about returning the status and output of  
these commands back up to my code. I'm guessing I should create a  
Deferred somewhere, but some guidance on how these should bubble up  
through the twisted layers would be much appreciated.

Thanks,
James



From exarkun at divmod.com  Sat Jun 14 21:43:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 14 Jun 2008 21:43:51 -0400
Subject: [Twisted-Python] Executing a number of commands over SSH
In-Reply-To: <B724F517-FF2C-4015-BC03-1C4DD2AE4B83@webmynd.com>
Message-ID: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>

On Sat, 14 Jun 2008 16:08:58 -0700, James Brady <james at webmynd.com> wrote:
>Hi all,
>I'd like to run a few commands on a remote machine over SSH. Looking  at the 
>conch packages, I'm not sure what the best approach is for this.
>
>The only way I can see to pass the set of commands down into the 
>SSHConnection and SSHChannel objects is through my transport factory,  i.e. 
>I can't add or remove commands to be run on an already  instantiated 
>SSHConnection.

It sounds like you've figured out a lot of the difficult parts already. :)

Consider how you execute a command once `SSHConnection.serviceStarted? is
called (if you looked at `sshsimpleclient.py?, then this is where the True,
False, and Cat channels get opened).  All you need to do to execute another
command is what you would do to execute those initial commands in that
method.  As long as you have a reference to the SSHConnection instance, you
can start arbitrary commands at any time you like.

So the problem is really just figuring out how to have a reference to the
SSHConnection instance in the code that knows it wants to start a new
command.

>
>Also, I'm a newcomer to the Twisted way of doing things, so it's not  clear 
>to me how I would go about returning the status and output of  these 
>commands back up to my code. I'm guessing I should create a  Deferred 
>somewhere, but some guidance on how these should bubble up  through the 
>twisted layers would be much appreciated.

Indeed, a Deferred should help.  You can have one which is fired with the
SSHConnection once it is available.  Then, callbacks on this Deferred will
be able to start any commands they want.  One way to do this would be to
pass a Deferred all the way down into the SSHConnection and fire it with
`self? in `serviceStarted?.  This basically turns control flow inside-out,
allowing arbitrary code which is not part of the SSHConnection class to use
the connection.

This has been a bit vague, but Conch certainly has a lot of pieces and it's
hard to talk more specifically without having some code at hand.  If you're
still stuck, I suggest posting a short example of what you have (preferably
self-contained and runnable) and then someone can make more specific code
suggestions based on it.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Jun 15 00:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jun 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1213502709.93.24151985@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080615/28938126/attachment.htm 

From fetbiz at gmail.com  Sun Jun 15 09:32:57 2008
From: fetbiz at gmail.com (Fet Biz)
Date: Sun, 15 Jun 2008 21:32:57 +0800
Subject: [Twisted-Python] Where is the twisted.web2 documentation?
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org><83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
	<FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>
Message-ID: <000401c8ceec$61ce4190$9b64a8c0@iap>

The link
http://twistedmatrix.com/projects/web2/documentation/

is borken.

Where can I find the documentation of Web2?

Thanks




From nesbitt at apple.com  Sun Jun 15 12:49:10 2008
From: nesbitt at apple.com (Andrew Nesbitt)
Date: Sun, 15 Jun 2008 09:49:10 -0700
Subject: [Twisted-Python] Where is the twisted.web2 documentation?
In-Reply-To: <000401c8ceec$61ce4190$9b64a8c0@iap>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
	<83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
	<FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>
	<000401c8ceec$61ce4190$9b64a8c0@iap>
Message-ID: <AF84C554-2B46-41CA-A4D6-A52A9E7ED5CF@apple.com>

http://twistedmatrix.com/trac/browser/trunk/doc/web2

     A.

On 15 Jun 2008, at 06:32, Fet Biz wrote:

> The link
> http://twistedmatrix.com/projects/web2/documentation/
>
> is borken.
>
> Where can I find the documentation of Web2?
>
> Thanks
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From radix at twistedmatrix.com  Mon Jun 16 04:50:03 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 16 Jun 2008 09:50:03 +0100
Subject: [Twisted-Python] Storm vs Axiom?
In-Reply-To: <4852AE15.8090100@cfl.rr.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
	<4852AE15.8090100@cfl.rr.com>
Message-ID: <60ed19d40806160150p2e6811c9v45dcd4aae1d88146@mail.gmail.com>

On Fri, Jun 13, 2008 at 6:27 PM, Curt <curtferguson at cfl.rr.com> wrote:
> What are the advantages of Storm over divmod: Axiom?  I'm currently
> working on something with twisted and axiom, I hadn't previously heard
> of Storm.  If there are significant advantages, I'd like to hear
> thoughts on them, I'm not above switching at this point.

The simple answer is this: Storm works with remote databases
(currently it supports postgres and mysql, in addition to sqlite) and
does no schema management. Axiom does all the schema management for
you, gives you an upgrade system, and has some integration with
Twisted.

Both of the APIs use blocking queries, and this can be a problem with
Twisted, except that since Axiom uses *only* sqlite, you can be safe
knowing that your queries won't block because other remote users are
encumbering your database, etc. You can use Storm in the same way if
you restrict yourself to SQLite, but Axiom can offer you more
conveniences.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From kevin at lazyweb.ca  Tue Jun 17 08:49:07 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Tue, 17 Jun 2008 08:49:07 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
Message-ID: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>

Hi all,
I've been reading through the twisted documentation, trying to get a handle
on how to write a real life twisted app.  ( I need to use the AsynQueue for
my project, btw..)

So I've been reading the documentation, and I've been putting together some
things.. but i note that much of the docs says that "this is not the way you
usually do this"

Where do i read to find out how to simply create a production quality
twisted application?

-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080617/328a86cb/attachment.htm 

From itamar at itamarst.org  Tue Jun 17 10:08:04 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Jun 2008 10:08:04 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
References: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
Message-ID: <1213711685.20839.14.camel@localhost.localdomain>

On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:


> Where do i read to find out how to simply create a production quality
> twisted application?

There are some better *deployment* techniques documented here -
http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
but they just make things easier to deploy, they don't make your
software "production quality."

Production quality software is hard; a good start is having code
reviews, well-written unit tests that cover all your code, as well as
end-to-end regression tests. The deployment techniques above do tend to
lead to slightly more testable software (by encouraging you to write
your software as Services).

Here's what we do for Twisted - it has dramatically improved the quality
of code we produce:

http://twistedmatrix.com/trac/wiki/ReviewProcess




From python at blackslens.com  Tue Jun 17 11:36:40 2008
From: python at blackslens.com (Black)
Date: Tue, 17 Jun 2008 11:36:40 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <1213711685.20839.14.camel@localhost.localdomain>
References: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
	<1213711685.20839.14.camel@localhost.localdomain>
Message-ID: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>


On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>
>
>> Where do i read to find out how to simply create a production quality
>> twisted application?
>
> There are some better *deployment* techniques documented here -
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
> but they just make things easier to deploy, they don't make your
> software "production quality."
>
> Production quality software is hard; a good start is having code
> reviews, well-written unit tests that cover all your code, as well as
> end-to-end regression tests. The deployment techniques above do tend  
> to
> lead to slightly more testable software (by encouraging you to write
> your software as Services).

Unless I misunderstood the first mail, I don't think this is what  
Kevin meant . I believe what he is looking for could better be termed  
"best practice" (it is probably the reference to "industrial grade" in  
the subject that is misleading). This is something I've struggled with  
as well with respect to Twisted. Twisted is large and complex and in  
many cases there are several ways to achieve the same functionality.  
Frequently, it isn't easy to figure out the "best" approach or even  
the generally accepted approach. As Kevin says, the documentation   
does make obscure references to there being some "way you usually do  
this", without coming out and saying what that way is. All of the code  
reviews and unit tests in the world aren't going to catch  
unconventional uses of a library unless one of the reviewers knows  
better...

I'd offer some advice of my own, but I'm not sure even now that I use  
Twisted properly - at best I have something that works, and as all of  
my work is experimental that has been good enough.



From terry at jon.es  Tue Jun 17 11:41:22 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 17:41:22 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
Message-ID: <18519.56098.678826.294578@jon.es>

I'm trying to rework some synchronous code to use Twisted and I've hit an
interesting case. The following code is my simplification of the situation.
I've not run it, but will happily flesh it out if people want this to be
more concrete.

First, a general helper function for use below:

    def process(result):
        # process a single result.
        pass


I have the following simple synchronous function and code that calls it:

    # SYNCHRONOUS result producer
    def getResults(uri):
        done = False
        offset = 0
        while not done:
            results, done, offset = fetchPageViaSynchronousHttp(uri, offset)
            for result in results:
                yield result

    # SYNCHRONOUS calling
    for result in getResult(uri):
        process(result)


I.e., there are an indeterminate number of results available out there via
some web page. The iterator above periodically goes to get more, and yields
the new batch one by one to the calling code which processes them one by
one. This has the advantage that process() can be called as soon as any
results are available.


So how to do the above (more or less) in Twisted?  Here's one approach:

    def getResults(page):
        # Helper func: get results from page, return them in a list
        pass

    def needToCallAgain(page):
        # Helper func: see if there are more results, given page. return bool.
        pass

    # ASYNCHRONOUS result producer
    def getResults(uri, offset=0):
        def parsePage(page, offset):
            results = getResults(page)
            if needToCallAgain(page):
                d = getResults(uri, offset + len(results))
            else:
                d = None
            return results, d
        def returnTheseResults(page, offset):
            resultIterator, done, offset = parsePage(page, offset)
            return resultIterator, done
        from twisted.web import client
        return client.getPage(uri).addCallback(returnTheseResults, offset)

    # ASYNCHRONOUS calling
    def processResults(uri):
        def cb(resultIterator, deferred):
            for result in resultIterator:
                process(result)
            if deferred is not None:
                deferred.addCallback(cb)
        return getResults(uri).addCallback(cb)


I'm fairly sure something like this can be made to work. The idea is to
have getResults call a callback that takes a current set of results and a
new deferred that will be called with the next set of results and a new
deferred that will be called with the next set of results and...... so on
until the deferred that comes back is None, at which point you're done
(i.e., there are no more results).

The result is that process() gets called asynchronously with incoming
results, and, as with the synchronous approach, we don't have to wait until
the whole result set is in before we can begin processing results.

But this approach is definitely not simple (or at least it's not, given my
beginner-level of sophistication producing and consuming deferreds). Note
too that you don't actually use the deferred coming back from processResults.

I wanted to have the fun of thinking about this and writing my own
pseudo-solution before I posted here, but I imagine that people working
with Twisted must have many times dealt with something like the above. How
would you handle it? Other approaches are also possible, but I'll stop for
now to see what people say.

Let me know if you want the above fleshed out to working code.

Regards,
Terry



From exarkun at divmod.com  Tue Jun 17 11:46:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 17 Jun 2008 11:46:37 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
Message-ID: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>

On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
>
>On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:
>>On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>>>Where do i read to find out how to simply create a production quality
>>>twisted application?
>>
>>There are some better *deployment* techniques documented here -
>>http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
>>but they just make things easier to deploy, they don't make your
>>software "production quality."
>>
>>Production quality software is hard; a good start is having code
>>reviews, well-written unit tests that cover all your code, as well as
>>end-to-end regression tests. The deployment techniques above do tend  to
>>lead to slightly more testable software (by encouraging you to write
>>your software as Services).
>
>Unless I misunderstood the first mail, I don't think this is what  Kevin 
>meant . I believe what he is looking for could better be termed  "best 
>practice" (it is probably the reference to "industrial grade" in  the 
>subject that is misleading). This is something I've struggled with  as well 
>with respect to Twisted. Twisted is large and complex and in  many cases 
>there are several ways to achieve the same functionality.  Frequently, it 
>isn't easy to figure out the "best" approach or even  the generally accepted 
>approach. As Kevin says, the documentation   does make obscure references to 
>there being some "way you usually do  this", without coming out and saying 
>what that way is. All of the code  reviews and unit tests in the world 
>aren't going to catch  unconventional uses of a library unless one of the 
>reviewers knows  better...
>
>I'd offer some advice of my own, but I'm not sure even now that I use 
>Twisted properly - at best I have something that works, and as all of  my 
>work is experimental that has been good enough.
>

A way to get better answers to this question is to file tickets for each
place in the documentation which makes this unsubstantiated claim.  Then
the documentation can be improved, either by replacing the code in the
documentation which doesn't conform to best practices with code which does
conform to best practices, or by removing the claim if it's just so much
B.S.

This helps everyone who reads the documentation in the future, and it makes
for a *much* easier question to answer than "What are the best practices for
developing Twisted applications?" (which I don't even know where to begin to
answer, unless you've got about a week).

Jean-Paul



From c2k_list at gmx.de  Tue Jun 17 14:14:03 2008
From: c2k_list at gmx.de (Torsten A.)
Date: Tue, 17 Jun 2008 20:14:03 +0200
Subject: [Twisted-Python] Twisted Trial
Message-ID: <mailman.1.1246826568.728.twisted-python@twistedmatrix.com>

Hello,
I received a running project using twisted trial, running meaning that all
test units pass successfully, which I am supposed to edit. Now I'd like to
keep two versions of the project:

a) A backup of the old one, so I can always have it successfully run the
unittests and keep track of its behavious and
b) a copy of the project which I want to modify and test, if the trials
pass.

I have tried to mess with the PYTHONPATH, to run trial in the folder of the
copies, but nothing seems to work. Right now it looks like this (running
under WinXP):

C:\
	some_folder\
		working_project\here_the_module_to_be_checked
		modified_project\here_the_module_to_be_checked

My PYTHONPATH links to C:\some_folder\working_project.

I hopesome understands what I mean ;)

Cheers,
Torsten





From radix at twistedmatrix.com  Tue Jun 17 14:30:56 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 17 Jun 2008 19:30:56 +0100
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <60ed19d40806171130h7b8a1c3bp9c1002a6ce650035@mail.gmail.com>

On Tue, Jun 17, 2008 at 7:14 PM, Torsten A. <c2k_list at gmx.de> wrote:
> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.

Dude, use revision control:

http://bazaar-vcs.org/
http://subversion.tigris.org/

Keeping copies of stuff manually is so 1970s.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From Andy at NewWorldElectric.com  Tue Jun 17 15:05:12 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 17 Jun 2008 15:05:12 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>

It's not quite an answer to your immediate question, but I would suggest
setting up Subversion (http://tortoisesvn.tigris.org/) to track your
versions.  That way you can keep all your versions modified, partially
modified, unmodified, etc. and pull back any old version as appropriate.
This looks like a tutorial for the kind of setup you'd need for that:

http://www.onlamp.com/lpt/a/2820

-Andy

On Tue, Jun 17, 2008 at 2:14 PM, Torsten A. <c2k_list at gmx.de> wrote:

> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.
>
> I have tried to mess with the PYTHONPATH, to run trial in the folder of the
> copies, but nothing seems to work. Right now it looks like this (running
> under WinXP):
>
> C:\
>        some_folder\
>                working_project\here_the_module_to_be_checked
>                modified_project\here_the_module_to_be_checked
>
> My PYTHONPATH links to C:\some_folder\working_project.
>
> I hopesome understands what I mean ;)
>
> Cheers,
> Torsten
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080617/b31aa4c7/attachment.htm 

From matthieu.brucher at gmail.com  Tue Jun 17 15:30:14 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Tue, 17 Jun 2008 21:30:14 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
Message-ID: <e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>

2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
> It's not quite an answer to your immediate question, but I would suggest
> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
> versions.  That way you can keep all your versions modified, partially
> modified, unmodified, etc. and pull back any old version as appropriate.
> This looks like a tutorial for the kind of setup you'd need for that:
>
> http://www.onlamp.com/lpt/a/2820--

A smaller VCS without a server would be more efficient for private
testing and comparisons. So try bzr (my favorite), hg or git.

Matthieu
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From phil at bubblehouse.org  Tue Jun 17 15:45:06 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 17 Jun 2008 15:45:06 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
Message-ID: <60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>

On Jun 17, 2008, at 3:30 PM, Matthieu Brucher wrote:
> 2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
>> It's not quite an answer to your immediate question, but I would  
>> suggest
>> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
>> versions.  That way you can keep all your versions modified,  
>> partially
>> modified, unmodified, etc. and pull back any old version as  
>> appropriate.
>> This looks like a tutorial for the kind of setup you'd need for that:
>>
>> http://www.onlamp.com/lpt/a/2820--
>
> A smaller VCS without a server would be more efficient for private
> testing and comparisons. So try bzr (my favorite), hg or git.

I'm becoming a pretty big Bazaar fan, but if you're going for  
simplicity, a distributed VCS like Bazaar or git could be difficult  
for someone who has had no exposure to source control.

Even with Subversion, although some will have no problem understanding  
the concepts of updates versus commits, etc, I have definitely been  
somewhat shocked at the amount of guidance needed by trainees of mine  
in the past.

Running Subversion locally is probably a better bet when you're  
starting out; it's a bit easier, it's probably used by a majority of  
open source developers, and it transitions easily to a hosted scenario.

Then as you gain experience working with revisioned code in general,  
you can investigate other options, like bzr-svn or "pure" bzr.

-phil



From christian.simms at gmail.com  Tue Jun 17 15:51:05 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Tue, 17 Jun 2008 15:51:05 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <cd8fa6f90806171251v42fa2941veeee580828238cce@mail.gmail.com>

On Tue, Jun 17, 2008 at 2:14 PM, Torsten A. <c2k_list at gmx.de> wrote:
> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.
>
> I have tried to mess with the PYTHONPATH, to run trial in the folder of the
> copies, but nothing seems to work. Right now it looks like this (running
> under WinXP):
>
> C:\
>        some_folder\
>                working_project\here_the_module_to_be_checked
>                modified_project\here_the_module_to_be_checked
>
> My PYTHONPATH links to C:\some_folder\working_project.
>
> I hopesome understands what I mean ;)
>
> Cheers,
> Torsten
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

I think this is a basic Python question.  If you set your PYTHONPATH
variable to . (period), then when you import a python package it will
look in the current working directory for the package, and then the
standard system directories.  This way, to test both the original and
modified versions, you would do:

  cd \original_project
  trial package_to_test

  cd \modified_project
  trial package_to_test

Cheers,
Christian



From terry at jon.es  Tue Jun 17 15:51:41 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 21:51:41 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: Your message at 21:30:14 on Tuesday, 17 June 2008
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
Message-ID: <18520.5581.592635.559250@jon.es>

The various answers recommending version control are just heading off in a
direction that wasn't asked about at all! :-)

Sorry if I sound grouchy, but the OP hasn't done anything to warrant being
curtly told to just use version control, especially when that's not a
solution to the problem he's running into.

There should be no need to add that people often have multiple versions
(branches, often) checked out and want to swap between using them and have
the right version picked up by Python.  That's part of the point/use of
combinator and the *branch commands, as many people here already know.

Torsten, you say your code doesn't work when you have PYTHONPATH set. Can
you be more specific? Send us the output showing it not working, etc?

Terry



From stephen.c.waterbury at nasa.gov  Tue Jun 17 15:51:55 2008
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 17 Jun 2008 15:51:55 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
	<60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>
Message-ID: <485815DB.1030505@nasa.gov>

Phil Christensen wrote:
> On Jun 17, 2008, at 3:30 PM, Matthieu Brucher wrote:
>> 2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
>>> It's not quite an answer to your immediate question, but I would suggest
>>> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
>>> versions.  That way you can keep all your versions modified, partially
>>> modified, unmodified, etc. and pull back any old version as appropriate.
>>> This looks like a tutorial for the kind of setup you'd need for that:
>>>
>>> http://www.onlamp.com/lpt/a/2820--
>>
>> A smaller VCS without a server would be more efficient for private
>> testing and comparisons. So try bzr (my favorite), hg or git.
> 
> I'm becoming a pretty big Bazaar fan, but if you're going for 
> simplicity, a distributed VCS like Bazaar or git could be difficult for 
> someone who has had no exposure to source control.
> 
> Even with Subversion, although some will have no problem understanding 
> the concepts of updates versus commits, etc, I have definitely been 
> somewhat shocked at the amount of guidance needed by trainees of mine in 
> the past.
> 
> Running Subversion locally is probably a better bet when you're starting 
> out; it's a bit easier, it's probably used by a majority of open source 
> developers, and it transitions easily to a hosted scenario.
> 
> Then as you gain experience working with revisioned code in general, you 
> can investigate other options, like bzr-svn or "pure" bzr.

YMMV.  I found subversion to be cumbersome to configure and use,
whereas for me, hg was easy both for installation and use,
especially as a local repo.

Steve



From terry at jon.es  Tue Jun 17 17:10:48 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 23:10:48 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
In-Reply-To: Your message at 17:41:22 on Tuesday, 17 June 2008
References: <18519.56098.678826.294578@jon.es>
Message-ID: <18520.10328.729525.221355@jon.es>

For the record, here's a followup to my own posting, with working code.
The earlier untested code was a bit of a mess. The below runs fine.

In case it wasn't clear before, you're pulling "results" (e.g., from a
search engine) in off the web. Each results pages comes with an indicator
to tell you whether there are more results. I wanted to write a function
(see processResults below) that, when called, would call the process
function below on each result, all done asynchronously.

This solution feels cumbersome, but it does work (aka prints the expected
output).

Comments welcome (just don't tell me to use version control :-))

Terry


from twisted.internet import defer

def process(result):
    # Stub: process a single result.
    print 'processed result', result

def getPage(uri, offset=0):
    # Stub: return some results and an indicator of whether more are available.
    data = [[0, 1, 2],
            [4, 7, 8, 10],
            [12, 14, 18, 30]]
    results = data[offset]
    more = offset < len(data) - 1
    return defer.succeed((results, more))
        
def getResultsFromPage(page):
    # Stub: get the results from page, return them in a list
    return page[0]

def needToCallAgain(page):
    # Stub: determine if there are more results, given current page. return bool.
    return page[1]
    
# ASYNCHRONOUS result producer
def getResults(uri, offset=0):
    def parsePage(page, offset):
        results = getResultsFromPage(page)
        if needToCallAgain(page):
            d = getResults(uri, offset + 1)
        else:
            d = None
        return results, d
    def returnTheseResults(page, offset):
        resultIterator, done = parsePage(page, offset)
        return resultIterator, done
    return getPage(uri, offset).addCallback(returnTheseResults, offset)

# ASYNCHRONOUS calling
def processResults(uri):
    def cb((resultIterator, deferred)):
        for result in resultIterator:
            process(result)
        if deferred is not None:
            deferred.addCallback(cb)
    return getResults(uri).addCallback(cb)


if __name__ == '__main__':
    def finished(x):
        print 'finished'
    processResults('uri').addCallback(finished)



The above prints

$ python xxx.py
processed result 0
processed result 1
processed result 2
processed result 4
processed result 7
processed result 8
processed result 10
processed result 12
processed result 14
processed result 18
processed result 30
finished



From james at webmynd.com  Tue Jun 17 17:44:53 2008
From: james at webmynd.com (James Brady)
Date: Tue, 17 Jun 2008 14:44:53 -0700
Subject: [Twisted-Python] Executing a number of commands over SSH
In-Reply-To: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>
References: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>
Message-ID: <F6431E8C-D6A9-4BE3-9157-EB1E22F9D549@webmynd.com>


> Indeed, a Deferred should help.  You can have one which is fired  
> with the
> SSHConnection once it is available.  Then, callbacks on this  
> Deferred will
> be able to start any commands they want.  One way to do this would  
> be to
> pass a Deferred all the way down into the SSHConnection and fire it  
> with
> `self? in `serviceStarted?.  This basically turns control flow  
> inside-out,
> allowing arbitrary code which is not part of the SSHConnection class  
> to use
> the connection.

Hi Jean-Paul,
Thanks for that advice - as you suggested I'm now passing a Deferred  
down into the SSHConnection to receive a reference to the connection  
object, which works really well.

I now have a follow-on question. This is my situation: I'd like to set  
up an SSHConnection and associate it with a Machine object at program  
startup, then execute arbitrary commands over this SSHConnection at  
run-time.

The problem I'm facing is that after instantiating the Twisted  
objects, calling reactor.run() doesn't return, so I can't create a  
standalone SSHConnection and attach it as a utility to a Machine object.

For example:
class Machine(object):
     def __init__(self, address):
         self.conn = MachineConnection(self, address, 'user')

class MachineConnection(object):
     def __init__(self, address, user):
         self.address = address
         self.port = 22
         self.user = user
         d=defer.Deferred()
         d.addCallback(self.__conn_ready)
         d.addErrback(self.__conn_err)

         factory = protocol.ClientFactory(self.user, d) # I'm actually  
using a subclass
         reactor.connectTCP(self.address, self.port, factory)
         reactor.run()


Here, I've left out definitions of my conch subclasses, and methods on  
Machine and MachineConnection, but I don't think they're relevant.

The issue is that reactor.run() in the last line of  
MachineConnection.__init__ starts Twisted up, creates the connection  
and so on, but doesn't return control to the original flow of code.  
I've tried starting separate threads for the connections, but Twisted  
seems to rely on running in the main thread.

Are the any suggestions on how to set up backgrounded Twisted  
connections that can be interacted with as daemonic threads?

Thank you,
James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080617/8d39b704/attachment.htm 

From kevin at lazyweb.ca  Tue Jun 17 19:10:20 2008
From: kevin at lazyweb.ca (kevin at lazyweb.ca)
Date: Tue, 17 Jun 2008 19:10:20 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
Message-ID: <e69cb1c20806171610j31a7b22al316fcbe87198aba6@mail.gmail.com>

Thanks for the answers... I will definitely file some tickets in the
next few days, and the links provided have been helpful.

The docs are good, it's not a quality thing at all... It's just
missing that one "Here's how you put it all together"  doc.

It is true, I should have said "best practices".  That's what i was
looking for.

Ah well, I'll keep chipping away...

Thanks again

On 6/17/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
>>
>>On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:
>>>On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>>>>Where do i read to find out how to simply create a production quality
>>>>twisted application?
>>>
>>>There are some better *deployment* techniques documented here -
>>>http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
>>>but they just make things easier to deploy, they don't make your
>>>software "production quality."
>>>
>>>Production quality software is hard; a good start is having code
>>>reviews, well-written unit tests that cover all your code, as well as
>>>end-to-end regression tests. The deployment techniques above do tend  to
>>>lead to slightly more testable software (by encouraging you to write
>>>your software as Services).
>>
>>Unless I misunderstood the first mail, I don't think this is what  Kevin
>>meant . I believe what he is looking for could better be termed  "best
>>practice" (it is probably the reference to "industrial grade" in  the
>>subject that is misleading). This is something I've struggled with  as well
>>
>>with respect to Twisted. Twisted is large and complex and in  many cases
>>there are several ways to achieve the same functionality.  Frequently, it
>>isn't easy to figure out the "best" approach or even  the generally
>> accepted
>>approach. As Kevin says, the documentation   does make obscure references
>> to
>>there being some "way you usually do  this", without coming out and saying
>>what that way is. All of the code  reviews and unit tests in the world
>>aren't going to catch  unconventional uses of a library unless one of the
>>reviewers knows  better...
>>
>>I'd offer some advice of my own, but I'm not sure even now that I use
>>Twisted properly - at best I have something that works, and as all of  my
>>work is experimental that has been good enough.
>>
>
> A way to get better answers to this question is to file tickets for each
> place in the documentation which makes this unsubstantiated claim.  Then
> the documentation can be improved, either by replacing the code in the
> documentation which doesn't conform to best practices with code which does
> conform to best practices, or by removing the claim if it's just so much
> B.S.
>
> This helps everyone who reads the documentation in the future, and it makes
> for a *much* easier question to answer than "What are the best practices for
> developing Twisted applications?" (which I don't even know where to begin to
> answer, unless you've got about a week).
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca



From steve at holdenweb.com  Tue Jun 17 19:21:23 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 17 Jun 2008 19:21:23 -0400
Subject: [Twisted-Python] Re: Writing industrial grade twisted servers
In-Reply-To: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
Message-ID: <485846F3.9040008@holdenweb.com>

Jean-Paul Calderone wrote:
> On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
[...]
> A way to get better answers to this question is to file tickets for each
> place in the documentation which makes this unsubstantiated claim.  Then
> the documentation can be improved, either by replacing the code in the
> documentation which doesn't conform to best practices with code which does
> conform to best practices, or by removing the claim if it's just so much
> B.S.
> 
> This helps everyone who reads the documentation in the future, and it makes
> for a *much* easier question to answer than "What are the best practices 
> for
> developing Twisted applications?" (which I don't even know where to 
> begin to
> answer, unless you've got about a week).
> 
Nope. Sorry. Two hours and a bottle of whisky is all you get.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andrew-twisted at puzzling.org  Tue Jun 17 20:09:39 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 18 Jun 2008 10:09:39 +1000
Subject: [Twisted-Python] Re: Writing industrial grade twisted servers
In-Reply-To: <485846F3.9040008@holdenweb.com>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
	<485846F3.9040008@holdenweb.com>
Message-ID: <20080618000939.GA27176@steerpike.home.puzzling.org>

Steve Holden wrote:
[...]
> Nope. Sorry. Two hours and a bottle of whisky is all you get.

It's a bit late now, but this makes me think that Teach Me Twisted could have
had a subtitle: ?Teach Me Twisted: The blind leading the blind?

-Andrew.




From nathan.stocks at gmail.com  Tue Jun 17 21:33:10 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 17 Jun 2008 19:33:10 -0600
Subject: [Twisted-Python] The twisted way for basic file i/o?
Message-ID: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>

I just want to do some basic text-file manipulations without blocking
the rest of twisted.

I've found "FilePath", which has an open()...which is undocumented:

http://twistedmatrix.com/documents/current/api/twisted.python.filepath.FilePath.html#open

Is that what I should be using???

~ Nathan



From glyph at divmod.com  Wed Jun 18 01:45:03 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 18 Jun 2008 05:45:03 -0000
Subject: [Twisted-Python] The twisted way for basic file i/o?
In-Reply-To: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
References: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
Message-ID: <20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>


On 01:33 am, nathan.stocks at gmail.com wrote:
>I just want to do some basic text-file manipulations without blocking
>the rest of twisted.
>
>I've found "FilePath", which has an open()...which is undocumented:
>
>http://twistedmatrix.com/documents/current/api/twisted.python.filepath.FilePath.html#open
>
>Is that what I should be using???

Yes and no.

Yes, you should use it, FilePath is great.

No, it won't solve your problem.  The APIs in FilePath will just block.

Asynchronous file I/O is a thorny problem, and Twisted doesn't have a 
canned solution for it.

The quick answer is "do it in a subprocess or a thread".

I'll save you time on the long answer, since it's a meandering 
exploration of a dozen platform-specific half-broken under- or un- 
documented APIs, that ends with "Oh, I guess you have to do it in a 
subprocess or a thread."

Hope that helps :).



From matthieu.brucher at gmail.com  Wed Jun 18 02:51:31 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 18 Jun 2008 08:51:31 +0200
Subject: [Twisted-Python] Example for a new protocol over TCP
Message-ID: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>

Hi,

I'm new to twisted and I'm trying to implement a set of protocols
(already available in Java, JXSE). I lamost know how I will set up the
different services that will communicate through the reactor, but I'm
starting from the beginning, so here is my real question.
How can I set up a factory (using a TCP protocol) so that when I want
to send a message to someone, it connects though TCP to the other
computer, they exchange a welcome message, and only then the message
is sent though the TCP protocol ? Of course, it is not as simple as
this, but if someone has a pointer, I will be able to fill the missing
pieces in my design ;)

Thanks,
Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From kevin at lazyweb.ca  Wed Jun 18 04:13:34 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 04:13:34 -0400
Subject: [Twisted-Python] Something like a ThreadPool
Message-ID: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>

Is there any sort of job queue or similar ,  besides AsynQueue, which looked
like exactly what i wanted, but is sadly undocumented,   native to twisted?
 What is the twisted way to do such a thing?  Is there something already
available?

-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080618/86b08712/attachment.htm 

From c2k_list at gmx.de  Wed Jun 18 04:48:28 2008
From: c2k_list at gmx.de (Torsten A.)
Date: Wed, 18 Jun 2008 10:48:28 +0200
Subject: AW: [Twisted-Python] Twisted Trial
In-Reply-To: <18520.5581.592635.559250@jon.es>
Message-ID: <mailman.2.1246826568.728.twisted-python@twistedmatrix.com>

Thank you all for your replies.

@Christian:
I should have mentioned that. The current directory is in the pythonpath. In
the variable PYHTONPATH the dot is set and when I walk through the
filesystem, starting python from different locations, the current path is
always set in sys.path. Hence, I asssume that PythonPath is set correctly.
So your suggestion, what I thought would work
>  cd \original_project
>  trial package_to_test
>
>  cd \modified_project
>  trial package_to_test
does actually not work. Who knows why...

@Terry:
> Torsten, you say your code doesn't work when you have PYTHONPATH set. Can
you be more specific? Send us the output showing it not working, etc?

Actually I'd love to do that, but I really don't know what to send. When I
run the trial as suggested by Christian (see above), the trial runs every
time for the modified package, even if I am in \original_project. How do I
know this? Well, the trial fails at the point where the modified version
fails. If I delete the modified version from the pythonpath, everything runs
fine.


I have never really used a version control system I have to admit. I thought
of control systems to log changes which can in case of severe damage or what
ever reason be made undone. But if I can execute different versions of the
project, e.g. in my case the initial version and the last modified, just by
saying run this one or that one, I am glad to use it. Can this be done
(excuse my probably dumb question)? Can someone please give me catchword to
search for? As I looked briefly in the bazaar guide
(http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
to find anything helpful. 

Thanks again for your help! I really appreciate it!

Cheers,
Torsten




From itamar at itamarst.org  Wed Jun 18 07:25:33 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2008 07:25:33 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
Message-ID: <1213788333.20839.21.camel@localhost.localdomain>

On Wed, 2008-06-18 at 04:13 -0400, kevin beckford wrote:
> Is there any sort of job queue or similar ,  besides AsynQueue, which
> looked like exactly what i wanted, but is sadly undocumented,   native
> to twisted?  What is the twisted way to do such a thing?  Is there
> something already available?

What kind of work are you queuing? If it's e.g. fetching a web page, you
can just use do it using Twisted's scalable asynchronous APIs (maybe
using a DeferredSemaphore if you want to limit number of conccurent
queries.) If it's a blocking API you're calling (RDBMS queries are the
typical example) then Twisted has a thread pool, as  well as
RDBMS-specific wrapper - see our documentation.




From curtferguson at cfl.rr.com  Wed Jun 18 08:24:54 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Wed, 18 Jun 2008 08:24:54 -0400
Subject: AW: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
References: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
Message-ID: <4858FE96.10200@cfl.rr.com>

Torsten A. wrote:
> I have never really used a version control system I have to admit. I thought
> of control systems to log changes which can in case of severe damage or what
> ever reason be made undone. But if I can execute different versions of the
> project, e.g. in my case the initial version and the last modified, just by
> saying run this one or that one, I am glad to use it. Can this be done
> (excuse my probably dumb question)? Can someone please give me catchword to
> search for? As I looked briefly in the bazaar guide
> (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
> to find anything helpful. 
>
> Thanks again for your help! I really appreciate it!
>
>   
I use bazaar myself for version control, and I highly recommend it.  If
you're popping in and out on different branches/versions all the time
though, you may want to look at combinator from Divmod.  Sounds like
just what you're looking for.

Here is a link to it, the link isn't working for me at this particular
moment, but I know it is a good link, hopefully will be back up sometime
today.

http://divmod.org/trac/wiki/DivmodCombinator








From kevin at lazyweb.ca  Wed Jun 18 09:04:47 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 09:04:47 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <1213788333.20839.21.camel@localhost.localdomain>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
Message-ID: <e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>

>
>
>
> What kind of work are you queuing? If it's e.g. fetching a web page, you
> can just use do it using Twisted's scalable asynchronous APIs (maybe
> using a DeferredSemaphore if you want to limit number of conccurent
> queries.) If it's a blocking API you're calling (RDBMS queries are the
> typical example) then Twisted has a thread pool, as  well as
> RDBMS-specific wrapper - see our documentation.


Thanks very much.  Found and read.

>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080618/1b8bf199/attachment.htm 

From nathan.stocks at gmail.com  Wed Jun 18 12:00:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 18 Jun 2008 10:00:35 -0600
Subject: [Twisted-Python] The twisted way for basic file i/o?
In-Reply-To: <20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>
References: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
	<20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>
Message-ID: <96c9d6a80806180900r6271ab43vb7e585738327bd09@mail.gmail.com>

On Tue, Jun 17, 2008 at 11:45 PM,  <glyph at divmod.com> wrote:
> The quick answer is "do it in a subprocess or a thread".

Thanks.  It's good to know that I'm not crazy for not being able to
find "the way" that doesn't exist!

~ Nathan



From kevin.horn at gmail.com  Wed Jun 18 12:21:10 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 18 Jun 2008 11:21:10 -0500
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
	<e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
Message-ID: <562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>

For the benefit of future searchers (and myself), would either of you mind
posting a link to specific place in the docs you are talking about?

Kevin Horn


On Wed, Jun 18, 2008 at 8:04 AM, kevin beckford <kevin at lazyweb.ca> wrote:

>
>>
>> What kind of work are you queuing? If it's e.g. fetching a web page, you
>> can just use do it using Twisted's scalable asynchronous APIs (maybe
>> using a DeferredSemaphore if you want to limit number of conccurent
>> queries.) If it's a blocking API you're calling (RDBMS queries are the
>> typical example) then Twisted has a thread pool, as  well as
>> RDBMS-specific wrapper - see our documentation.
>
>
> Thanks very much.  Found and read.
>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Kevin Beckford
> Technical Lead,
> Lazyweb Construction Company,
> http://lazyweb.ca
> kevin at lazyweb.ca
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080618/a3f3ccbe/attachment.htm 

From general at eepatents.com  Wed Jun 18 12:21:49 2008
From: general at eepatents.com (Ed Suominen)
Date: Wed, 18 Jun 2008 09:21:49 -0700
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
Message-ID: <4859361D.2030806@eepatents.com>

kevin beckford wrote:
> Is there any sort of job queue or similar ,  besides AsynQueue, which 
> looked like exactly what i wanted, but is sadly undocumented,   native 
> to twisted?  What is the twisted way to do such a thing?  Is there 
> something already available?

Kevin, I have to confess that you're right about the "sadly 
undocumented" part. I keep promising myself (and others) that I will 
rectify the situation, but the motivation is just not as high as I'd 
like. I think that's true of a lot of free software; the author write 
the stuff to scratch his particular itch and then moves on. As the 
originator, he of course needs no documentation, and writing code is 
much more fun than writing words.

The only thing I can offer in substitute at the moment are some really 
extensive docstrings in the code itself, and the usage examples embodied 
in the sAsync and AsynCluster packages, which itself are built on 
AsynQueue. Also, see a usage example for AsynCluster at 
http://foss.eepatents.com/trac/AsynCluster/wiki/Example_AsynCluster.

Best regards, Ed



From kevin at lazyweb.ca  Wed Jun 18 15:41:31 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 15:41:31 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
	<e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
	<562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>
Message-ID: <e69cb1c20806181241x727b43a0g9ad7b5d971291dbe@mail.gmail.com>

On Wed, Jun 18, 2008 at 12:21 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> For the benefit of future searchers (and myself), would either of you mind
> posting a link to specific place in the docs you are talking


http://www.cs.lth.se/EDA046/assignments/assignment4/twisted/threading.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080618/1039ce4d/attachment.htm 

From kevin at lazyweb.ca  Wed Jun 18 15:49:01 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 15:49:01 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <4859361D.2030806@eepatents.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<4859361D.2030806@eepatents.com>
Message-ID: <e69cb1c20806181249j32def3f8t67cc729f59cf9872@mail.gmail.com>

>  usage examples embodied in the sAsync and AsynCluster packages, which
> itself are built on AsynQueue. Also, see a usage example for AsynCluster at
> http://foss.eepatents.com/trac/AsynCluster/wiki/Example_AsynCluster.


Acutally Ed, this will help.  I'd like to offer to help you with the
documentation if you would like.  Tell  me what it does and I'll write it up
or something.  I'd love to increase my knowledge of this code by documenting
some examples.  Seriously.



-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080618/b14f0268/attachment.htm 

From tim at commsecure.com.au  Thu Jun 19 02:21:20 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 19 Jun 2008 16:21:20 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
Message-ID: <20080619162120.5b0a781f@ws35.commsecure.com.au>

Hi, all.

I'm working on a new system to be deployed in our production
environment, and having already decided on using Twisted, I'm now
trying to figure out how to cleanly and reliably deploy it. I have many
questions, but right now I just want to work through the issue of
logging.

In our existing systems, our code writes messages to syslog, with
'facility' set to LOG_LOCAL0 and 'priority' set according to the
severity of the event - debug, info, warn or alert. Anything logged
with 'alert' severity causes our monitoring to contact the operator on
duty, so they can look into it. For the sake of our operators and
system administrators, I'd prefer to use as much of the existing
monitoring infrastructure as possible. On the other hand, the logging
code we use at the moment is crufty old home-grown code, and I'd much
prefer to use a logging system maintained by somebody else.

My first thought was to use the 'logging' module in the Python 2.3
standard library. It covers all the syslog functionality I want (and
more), and it's pretty easy to use. Unfortunately, using Python's
logging module with Twisted is hard for two reasons: twistd and trial.
Both go to great lengths to Do The Right Thing with logging, and both
totally ignore the Python logging mechanism.

My second thought was to use twisted.python.log, but that brings its
own set of problems:

 1. twisted.python.syslog isn't very... complete. For starters, it
    doesn't let you specify the syslog facility, and even if it did,
    twistd would need to be extended to support it.
 2. As has been discussed in the list archives, t.p.log doesn't support
    log-levels. While I can see glyph's point about the arbitraryness
    of fixed log-levels, I really do want to distinguish between
    "forensic record of ordinary operation" and "Danger, Will Robinson!"

I think the best way of solving my problems would be to:

 a) update t.p.syslog so that it supports a 'facility' parameter.
 b) update t.p.syslog so that log-messages with 'isError' true are
    logged with the LOG_ALERT priority rather than the default.
 c) update the Unix version of twistd to support a 'syslogFacility'
    command-line parameter.

Would such a patch be accepted? If necessary, I could replace (b) with
a syslog-based LogObserver in my own code, but I'm keen to have (a) and
(c) in the Twisted code-base.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/d8062ef1/attachment.pgp 

From andyhird at gmail.com  Thu Jun 19 02:39:06 2008
From: andyhird at gmail.com (Andy Hird)
Date: Thu, 19 Jun 2008 16:39:06 +1000
Subject: [Twisted-Python] chaining deferreds
Message-ID: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>

Hi all,

I've been trying to get a really basic example of chaining deferreds going
with no luck. I was hoping someone could give me some help and tell me where
I'm going wrong.

I've attached the basic code to this message.

I'd expect output to be:


constructed deferred
setup everything
printing:  hello mr
doing something else: printed something
finishing up with: done something else

But instead the callback chain stops after print_something() has been called
(do_something inbetween and finish_up are never called).

Thanks for any help in advance!

Andy Hird
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/67d03bbe/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2.py
Type: text/x-python
Size: 639 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/67d03bbe/attachment.py 

From o.fournier at perigord.com  Thu Jun 19 09:44:29 2008
From: o.fournier at perigord.com (Olivier Fournier)
Date: Thu, 19 Jun 2008 15:44:29 +0200
Subject: [Twisted-Python] web client and proxy
Message-ID: <485A62BD.7010201@perigord.com>

Hi,

My english is very bad, sorry...

I don't understand how to access to a web server behind a proxy from 
web.client ?
somebody could explain me how to do?

thanks

Olivier Fournier



From amauryfa at gmail.com  Thu Jun 19 10:06:59 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 19 Jun 2008 16:06:59 +0200
Subject: [Twisted-Python] web client and proxy
In-Reply-To: <485A62BD.7010201@perigord.com>
References: <485A62BD.7010201@perigord.com>
Message-ID: <e27efe130806190706jc2e947ek3f80bafeb26cb756@mail.gmail.com>

Olivier Fournier wrote:
> Hi,
>
> My english is very bad, sorry...
>
> I don't understand how to access to a web server behind a proxy from
> web.client ?
> somebody could explain me how to do?
>
> thanks

Here is a modified version of web.client.getPage() that I use behind a proxy:

def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 1: # use a proxy
        host, port = 'proxy', 6060
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = ssl.ClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred


Hope this helps,

-- 
Amaury Forgeot d'Arc



From phil at bubblehouse.org  Thu Jun 19 10:48:30 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 19 Jun 2008 10:48:30 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080619162120.5b0a781f@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
Message-ID: <DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>

On Jun 19, 2008, at 2:21 AM, Tim Allen wrote:
> My second thought was to use twisted.python.log, but that brings its
> own set of problems:
>
> 1. twisted.python.syslog isn't very... complete. For starters, it
>    doesn't let you specify the syslog facility, and even if it did,
>    twistd would need to be extended to support it.

It's true that the syslog support is very experimental at this point,  
but what would need to be changed about twistd to support the  
necessary development?

I think the most likely scenario is that the standard logging code  
assumes logging will return immediately, but I feel like this could be  
worked around by having some kind of log queue that gets sent to  
syslog by some background thread (or better yet, a callLater pattern).

> 2. As has been discussed in the list archives, t.p.log doesn't support
>    log-levels. While I can see glyph's point about the arbitraryness
>    of fixed log-levels, I really do want to distinguish between
>    "forensic record of ordinary operation" and "Danger, Will  
> Robinson!"

t.p.log doesn't implicitly support log levels, but you can add  
arbitrary keywords to your call to log.msg. Then your observer can  
take care of routing log messages to the right places.

> I think the best way of solving my problems would be to:
>
> a) update t.p.syslog so that it supports a 'facility' parameter.
> b) update t.p.syslog so that log-messages with 'isError' true are
>    logged with the LOG_ALERT priority rather than the default.
> c) update the Unix version of twistd to support a 'syslogFacility'
>    command-line parameter.
>
> Would such a patch be accepted? If necessary, I could replace (b) with
> a syslog-based LogObserver in my own code, but I'm keen to have (a)  
> and
> (c) in the Twisted code-base.

I can't speak to whether such a patch would be accepted, but I know I  
have a couple of projects I've wanted to use syslogging for, and it  
would be great to have a stable solution in Twisted. However, the core  
dev team is fairly well inundated, so while you're working on a patch/ 
review, you might consider investigating another option in parallel.

If you package your code separately and join the Twisted Community  
Code project on Launchpad, you can get your code out there and in  
front of eyeballs while you work on getting a patch accepted into  
Twisted. If you can draw a reasonable amount of user attention, this  
may help with both testing and review, and make it easier to get your  
patch into Twisted proper.

-phil



From exarkun at divmod.com  Thu Jun 19 10:59:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Jun 2008 10:59:03 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080619162120.5b0a781f@ws35.commsecure.com.au>
Message-ID: <20080619145903.4714.1429010304.divmod.quotient.10829@ohm>

On Thu, 19 Jun 2008 16:21:20 +1000, Tim Allen <tim at commsecure.com.au> wrote:
>Hi, all.
>
>I'm working on a new system to be deployed in our production
>environment, and having already decided on using Twisted, I'm now
>trying to figure out how to cleanly and reliably deploy it. I have many
>questions, but right now I just want to work through the issue of
>logging.

There's a ticket open in the issue tracker for log observer
customization, <http://twistedmatrix.com/trac/ticket/638>,
which has had some work done on it.  If you have time to work
on this, you might direct your efforts in the same direction
as that work.

Jean-Paul



From miwinter at cisco.com  Thu Jun 19 13:08:57 2008
From: miwinter at cisco.com (Mike Winter (miwinter))
Date: Thu, 19 Jun 2008 10:08:57 -0700
Subject: [Twisted-Python] RE: ipython & twisted: no module named threading 
Message-ID: <2CCFC74C714C4340B3F699F017F3419705EBA466@xmb-sjc-212.amer.cisco.com>

This is a record of analysis and consequent workaround to enable running
ipython and Twisted's trial. Posting to twisted, it probably requires no
action from twisted team since I suspect IPython is not dealing with the
situation correctly. Ipython needs to resolve the problem w/ a 

try: 
  import thread
except ImportException:  
  print "failed to import thread"
  import dummy_thread as thread

For ipython to 'work' I copy dummy_thread.py thread.py, then when I run
trial or twistd I see the following exception. If I delete the thread.py
this does not show up, but ipython stops working.

Exception exceptions.ImportError: 'No module named threading' in <bound
method local.__del__ of <_threading_local.local object at 0xb72f6874>>
ignored 

(venv)[miwinter at sawwing test]$ twistd -ny finger.tac shows the same
exception (from twisted's finger tutorial).

Python -V 2.4.5 and 2.5.1 and 2.5.2
Ipython-0.8.2       *
Twisted 8.1.0
virtualenv 1.0
CVSToys 1.0.10

python -m virtualenv venv
. venv/bin/activate
(venv)# make InstallTwisted (cd Twisted-8.1.0; python setup.py install)
(venv)# make InstallBuildbot (easy_install buildbot) (venv)# trial
buildbot.test.test_twisted .... Shows the above problem:
[skip]
PASSED (skips=37, successes=271)
Exception exceptions.AttributeError: "'NoneType' object has no attribute
'StringIO'" in <bound method RemoteReference.__del__ of
<twisted.spread.pb.RemoteReference instance at 0xb6856aec>> ignored
Exception exceptions.ImportError: 'No module named threading' in <bound
method local.__del__ of <_threading_local.local object at 0xb72dacfc>>
ignored

test main-trunk]$  md5sum lib/python2.4/thread*py
lib/python2.4/dummy_thread*py
3783492a0969521ff1266ec6c3e570c2  lib/python2.4/threading.py 
38db2323ac32ddbcad69888abd30d21f  lib/python2.4/dummy_threading.py 
52a6d92c98cc5a2eb68a3b1dde16e58b  lib/python2.4/thread.py 
52a6d92c98cc5a2eb68a3b1dde16e58b  lib/python2.4/dummy_thread.py

Without thread.py ipython will fail to start, so in my makefile I do: 

fixThread: bin/python lib/python$(PY_MACRO_VERSION)/thread.py

lib/python$(PY_MACRO_VERSION)/thread.py:
    (cd lib/python$(PY_MACRO_VERSION); cp dummy_thread.py thread.py)

This exception (see start of email) is perhaps caused by dummy.py
lacking some of the guts that some inappropriately intimate part of
threading.py depends upon. 

w/o target fixThread ipython will not start! Since resolving this by
bandaiding Makefile I thought it worthy to report that my patch to my
Makefile was to add target unfixThread: to reverse the effects of
fixThread which was a hack for ipython to work, better fix ipython
somehow.



From deldotdr at gmail.com  Thu Jun 19 17:23:16 2008
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 19 Jun 2008 14:23:16 -0700
Subject: [Twisted-Python] chaining deferreds
In-Reply-To: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>
References: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>
Message-ID: <ea3c455d0806191423od69c65dnb55970d651b67265@mail.gmail.com>

Hi Andy,
Your example code is very close to working. The reason the chain didn't
proceed as you expected is because the callbacks of the second
Deferredcreated in the function
print_something were never triggered to run.

You need to keep track of what actually triggers a deferred's callback chain
to run and what each of the callback functions return.
In practice, that second deferred could have been replaced by some
asynchronous function that actually returned a deferred, and your code would
have worked.

The simplest change to make you code work is to change print_something to
this:

def print_something(x):
    print "printing: ", x
    d = defer.Deferred()
    d.addCallbacks(do_something_inbetween, oops)
    d.callback("printed something")
    return d
Doing this is kind of redundant though, because in this case it is
equivalent to:

def print_something(x):
    print "printing: ", x
    return do_something_inbetween('printed_something')


Another thing you can do instead of creating a new deferred is wrap the call
to do_something_inbetween with defer.maybeDeferred. This is convenient
because if do_something_inbetween does not return a deferred (which is the
case here), then maybeDeferred will do this for you.

Here's an example (a slight modification of your original) that includes
calling a function that returns a deferred and using maybeDeferred to
construct a deferred chain.


from twisted.internet import reactor, defer

def do_something_inbetween(x):
    print "doing something else: ", x
    return "done something else"

def print_something(x):
    print "printing: ", x
    d = defer.maybeDeferred(do_something_inbetween,'printed something')
    d.addCallbacks(finish_up, oops)
    return d

def finish_up(x):
    print "finishing up with: ", x

def oops(e):
    print str(e)

def go():
    print "constructed deferred"
    d = defer.Deferred()
    return d

def extra(r):
    print 'extra', r
    return r

d = go()
d.addCallback(print_something)
d.addCallback(extra)
d.addErrback(oops)
reactor.callLater(1, d.callback, "hello mr")
reactor.callLater(5, reactor.stop)
print "setup everything"
reactor.run()

Hope that helps.
-Dorian


On Wed, Jun 18, 2008 at 11:39 PM, Andy Hird <andyhird at gmail.com> wrote:

> Hi all,
>
> I've been trying to get a really basic example of chaining deferreds going
> with no luck. I was hoping someone could give me some help and tell me where
> I'm going wrong.
>
> I've attached the basic code to this message.
>
> I'd expect output to be:
>
>
> constructed deferred
> setup everything
> printing:  hello mr
> doing something else: printed something
> finishing up with: done something else
>
> But instead the callback chain stops after print_something() has been
> called (do_something inbetween and finish_up are never called).
>
> Thanks for any help in advance!
>
> Andy Hird
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/4317ae18/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2extra.py
Type: text/x-python
Size: 747 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/4317ae18/attachment.py 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2-1.py
Type: text/x-python
Size: 650 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080619/4317ae18/attachment-0001.py 

From tim at commsecure.com.au  Thu Jun 19 22:13:46 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 20 Jun 2008 12:13:46 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
Message-ID: <20080620121346.59659d06@ws35.commsecure.com.au>

Phil Christensen <phil at bubblehouse.org> wrote:
> On Jun 19, 2008, at 2:21 AM, Tim Allen wrote:
> > My second thought was to use twisted.python.log, but that brings its
> > own set of problems:
> >
> > 1. twisted.python.syslog isn't very... complete. For starters, it
> >    doesn't let you specify the syslog facility, and even if it did,
> >    twistd would need to be extended to support it.
> 
> It's true that the syslog support is very experimental at this point,  
> but what would need to be changed about twistd to support the  
> necessary development?

As I understood it, twistd's philosophy was that logging-configuration
was a deployment issue and hence ought to be configured by tweaking
twistd command-line parameters rather than pre-configuring the
application to be deployed. twistd already has very simple logging
configuration options in the form of "--logfile" and "--syslog"; I
intended to add a "--syslog-facility=" command-line option [0].

Having skim-read ticket 638 that JP pointed to in another reply,
now I'm not so sure. It's kind of difficult to for me to understand the
current state of play, especially since that ticket predates the merge
of seemingly-related ticket 3052, but it *seems* to be a battle between
the camps of "twistd's logging is limited, it should be infinitely
extensible" and "twistd's logging is limited, applications
should be allowed to override it". Personally, I think I lean
more toward "it should be infinitely extensible" side - but right now I
don't really care about the general case of extensibility, I just want
more flexible syslog support.

At any rate, ticket 638 and other related tickets seem to be high-level
conceptual arguments, and I don't feel I have the domain-knowledge
required to comment intelligibly on them.

> I think the most likely scenario is that the standard logging code  
> assumes logging will return immediately, but I feel like this could be  
> worked around by having some kind of log queue that gets sent to  
> syslog by some background thread (or better yet, a callLater pattern).

I'm not sure what you're getting at here. Python's syslog module calls
syslog(3), which talks to syslogd(8). I don't know whether either or
any of those block waiting for the log message to be delivered; I would
hazard a guess that they don't.

> > I think the best way of solving my problems would be to:
> >
> > a) update t.p.syslog so that it supports a 'facility' parameter.
> > b) update t.p.syslog so that log-messages with 'isError' true are
> >    logged with the LOG_ALERT priority rather than the default.
> > c) update the Unix version of twistd to support a 'syslogFacility'
> >    command-line parameter.
> >
> > Would such a patch be accepted? If necessary, I could replace (b) with
> > a syslog-based LogObserver in my own code, but I'm keen to have (a)  
> > and
> > (c) in the Twisted code-base.
> 
> I can't speak to whether such a patch would be accepted, but I know I  
> have a couple of projects I've wanted to use syslogging for, and it  
> would be great to have a stable solution in Twisted. However, the core  
> dev team is fairly well inundated, so while you're working on a patch/ 
> review, you might consider investigating another option in parallel.
> 
> If you package your code separately and join the Twisted Community  
> Code project on Launchpad, you can get your code out there and in  
> front of eyeballs while you work on getting a patch accepted into  
> Twisted. If you can draw a reasonable amount of user attention, this  
> may help with both testing and review, and make it easier to get your  
> patch into Twisted proper.

Thanks for the advice - I'm not sure that patches to twistd could be
packaged separately, but I'll keep the possibility in mind in case I
think of anything.

Tim Allen

[0] I'm not familiar with t.p.usage; if it were possible to support
syntax like "--syslog=LOG_LOCAL0" while still supporting the "--syslog"
syntax in existing releases, that'd be ideal.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080620/8b293bdb/attachment.pgp 

From glyph at divmod.com  Thu Jun 19 23:31:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 20 Jun 2008 03:31:47 -0000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620121346.59659d06@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
Message-ID: <20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>

On 02:13 am, tim at commsecure.com.au wrote:
>Having skim-read ticket 638 that JP pointed to in another reply,
>now I'm not so sure. It's kind of difficult to for me to understand the
>current state of play, especially since that ticket predates the merge
>of seemingly-related ticket 3052, but it *seems* to be a battle between
>the camps of "twistd's logging is limited, it should be infinitely
>extensible" and "twistd's logging is limited, applications
>should be allowed to override it". Personally, I think I lean
>more toward "it should be infinitely extensible" side - but right now I
>don't really care about the general case of extensibility, I just want
>more flexible syslog support.

Well, let me first say that your understanding of the issues here is 
remarkably deep and nuanced, despite your modesty :).  I hope that 
you'll stick around to help us take the whole logging system in Twisted 
to the next level...

I don't believe there are actually different "camps" here, and there 
isn't a lot of disagreement.  At least, I believe all of the core 
developers have essentially the same perspective, with differences in 
emphasis, not content.

There are two systems here.  Twisted's logging (i.e. 
twisted.python.log), and twistd's logging 
(twisted.internet._twistd_unix, twisted.internet._twistw, 
twisted.python.syslog, among other things).  Twisted's logging, while it 
could certainly be improved, is in reasonable shape.  It's extremely 
simple, and there is a clear and (mostly) well-specified "do anything 
you want" integration point: addObserver.  While there are some tweaks 
I'd like to see here, I don't think it's what we're talking about.

By contrast, twistd's logging, as the module names I mentioned above may 
indicate, is a squirrely mess of private and undocumented code, ad-hoc 
relationships, and so on.

The ticket which I believe most clearly explains how to fix this issue 
is #2751.  The question of "how do we tell where twistd thinks the logs 
go" is really just a tiny microcosm of "how do we tell what twistd 
thinks is going on around here".  There is no clear, uniform surface 
presented to affect twistd's configuration from anywhere, not even 
internally; let alone in user code.

The problem with the way you phrased the disagreement is the extreme 
vagueness of the word "application".  It really just means "some code". 
The reason you have picked up on opposition to the "applications should 
be allowed to override it" idea is that there is a tendency, when 
creating applications, to customize every aspect of the framework just 
because you can; to create a monolithic, non-cooperative chunk of code 
that just has a mainpoint and sets everything up for you.  An 
application, as in some code that uses Twisted to provide a network 
service, should be written in such a way that it is relatively agnostic 
about logging.  Some users might want to set it up to use syslog, some 
might want to get it in the logging module; some might want something 
really weird like Growl notifications or dbus messages.  Ergo, 
applications should not generally touch logging, no matter what our 
logging APIs look like.  This is what I'm talking about with the "it 
invites abuse" comment near the bottom of #638.

However, some "applications" *are* logging.  For example, if you wanted 
to do write some crazy log monitor that integrates with twistd process, 
you need two things: the "application" needs to allow the framework to 
handle logging, not muck with it itself (i.e. the thing I just said) and 
the framework needs to provide an interface for *your* application (i.e. 
the log monitor) to get in there and call some nice, well-documented 
APIs to reconfigure the way twistd has set up its logging.

The first application that needs to do this is twistd itself.  The 
internal APIs of twistd need to be organized such that it is easy to 
maintain and extend - for example, so that you could do the extension 
that you are proposing with syslog.  Once these APIs are tested, 
documented, and clearly factored, adding a plugin system to allow users 
to replace components of the logging system should be relatively 
straightforward.

Work is underway to do all of this; many of the tickets that we're 
talking about here have already have work underway.
>At any rate, ticket 638 and other related tickets seem to be high-level
>conceptual arguments, and I don't feel I have the domain-knowledge
>required to comment intelligibly on them.

I hope that this summary has improved your understanding somewhat. 
Don't let the depth of the issues here scare you; the best way to 
resolve major architectural headaches like this is one step at a time, 
responding to one specific use-case at a time.  So, I would recommend 
that you file a ticket if you haven't already, and simply add syslog 
facility support to twistd by adding a --syslog-facility command-line 
option (no, usage.Options won't let you have --foo and --foo=bar options 
at the same time, sorry...) and a _syslogFacility attribute to the 
UnixAppLogger object added by the fix to #3052.  You would of course 
need to add this to twisted.python.syslog as well, but I think the way 
to do that should be pretty straightforward.

If you feel the need to get fancy and add more features to t.p.syslog, 
make the factoring of the log configuration object finer-grained, or add 
a plugin system for twistd for log sinks so you can write your own 
syslog support, feel free!  However, ambitious and possibly 
controversial refactorings like that are a lot easier to talk about (and 
get done) when we can look at how they will improve the implementation 
of some existing feature, not for a speculative benefit.  So in any 
event you probably want to do the simple syslog facility addition first.

Also, congratulations on volunteering to maintain Twisted's log 
subsystem!  If you would like to decline, please see David Reid about 
fighting a bear on your way out.  ;-).



From tim at commsecure.com.au  Fri Jun 20 04:32:05 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 20 Jun 2008 18:32:05 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
	<20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
Message-ID: <20080620183205.258aa0ae@ws35.commsecure.com.au>

glyph at divmod.com wrote:
> On 02:13 am, tim at commsecure.com.au wrote:
> >Having skim-read ticket 638 that JP pointed to in another reply,
> >now I'm not so sure. It's kind of difficult to for me to understand the
> >current state of play, especially since that ticket predates the merge
> >of seemingly-related ticket 3052, but it *seems* to be a battle between
> >the camps of "twistd's logging is limited, it should be infinitely
> >extensible" and "twistd's logging is limited, applications
> >should be allowed to override it". Personally, I think I lean
> >more toward "it should be infinitely extensible" side - but right now I
> >don't really care about the general case of extensibility, I just want
> >more flexible syslog support.
> 
> Well, let me first say that your understanding of the issues here is 
> remarkably deep and nuanced, despite your modesty :). 

Thank you. :)

> I don't believe there are actually different "camps" here, and there 
> isn't a lot of disagreement.  At least, I believe all of the core 
> developers have essentially the same perspective, with differences in 
> emphasis, not content.
> 
> There are two systems here.  Twisted's logging (i.e. 
> twisted.python.log), and twistd's logging 
> (twisted.internet._twistd_unix, twisted.internet._twistw, 
> twisted.python.syslog, among other things).  Twisted's logging, while it 
> could certainly be improved, is in reasonable shape.  It's extremely 
> simple, and there is a clear and (mostly) well-specified "do anything 
> you want" integration point: addObserver.  While there are some tweaks 
> I'd like to see here, I don't think it's what we're talking about.

True; if I had to make a complaint about t.p.log, it would be that this
system for arbitrary event-sources to communicate with arbitrary
event-observers needs a well-defined interface to facilitate
communication. Currently, the only things an event-observer can rely on
are the 'isError' and 'system' fields being present, and probably
'message' and 'time'. Any observer winds up either depending on extra
fields set by a specific event-source (and hoping that no other
event-source happens to use the same field-names for different
purposes), or having to treat every event as a raw text event -
defeating the point of logging complicated events in the first place.

However! That's probably an entirely separate can of worms from the
actual problem I'm currently supposed to be working on, so I shall
leave it there for now. :)

> The ticket which I believe most clearly explains how to fix this issue 
> is #2751.  The question of "how do we tell where twistd thinks the logs 
> go" is really just a tiny microcosm of "how do we tell what twistd 
> thinks is going on around here".  There is no clear, uniform surface 
> presented to affect twistd's configuration from anywhere, not even 
> internally; let alone in user code.

A kind of document-object-model of application deployment
configuration, then?

> The first application that needs to do this is twistd itself.  The 
> internal APIs of twistd need to be organized such that it is easy to 
> maintain and extend - for example, so that you could do the extension 
> that you are proposing with syslog.  Once these APIs are tested, 
> documented, and clearly factored, adding a plugin system to allow users 
> to replace components of the logging system should be relatively 
> straightforward.
> 
> Work is underway to do all of this; many of the tickets that we're 
> talking about here have already have work underway.

Your most recent comment on #2571 is a lot more optimistic, it sounds
like twistd has most of the stuff it needs already.

If I have some free time, I might poke through the twistd code to see
if I can understand the architectural issues better.

> >At any rate, ticket 638 and other related tickets seem to be high-level
> >conceptual arguments, and I don't feel I have the domain-knowledge
> >required to comment intelligibly on them.
> 
> I hope that this summary has improved your understanding somewhat. 
> Don't let the depth of the issues here scare you; the best way to 
> resolve major architectural headaches like this is one step at a time, 
> responding to one specific use-case at a time.  So, I would recommend 
> that you file a ticket if you haven't already, and simply add syslog 
> facility support to twistd by adding a --syslog-facility command-line 
> option (no, usage.Options won't let you have --foo and --foo=bar options 
> at the same time, sorry...) and a _syslogFacility attribute to the 
> UnixAppLogger object added by the fix to #3052.  You would of course 
> need to add this to twisted.python.syslog as well, but I think the way 
> to do that should be pretty straightforward.

Filed as #3300, with patches and explanations.

> Also, congratulations on volunteering to maintain Twisted's log 
> subsystem!  If you would like to decline, please see David Reid about 
> fighting a bear on your way out.  ;-).

Well, we'll see how I go. ;)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080620/b7bc95e1/attachment.pgp 

From itamar at itamarst.org  Fri Jun 20 09:40:25 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 20 Jun 2008 09:40:25 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620183205.258aa0ae@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
	<20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
	<20080620183205.258aa0ae@ws35.commsecure.com.au>
Message-ID: <1213969225.20839.96.camel@localhost.localdomain>

On Fri, 2008-06-20 at 18:32 +1000, Tim Allen wrote:

> True; if I had to make a complaint about t.p.log, it would be that this
> system for arbitrary event-sources to communicate with arbitrary
> event-observers needs a well-defined interface to facilitate
> communication. Currently, the only things an event-observer can rely on
> are the 'isError' and 'system' fields being present, and probably
> 'message' and 'time'. Any observer winds up either depending on extra
> fields set by a specific event-source (and hoping that no other
> event-source happens to use the same field-names for different
> purposes), or having to treat every event as a raw text event -
> defeating the point of logging complicated events in the first place.

The plan was (is) to switch to requiring a interface=IFooMessageType
keyword. Some day :(





From exarkun at divmod.com  Fri Jun 20 09:45:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Jun 2008 09:45:32 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <1213969225.20839.96.camel@localhost.localdomain>
Message-ID: <20080620134532.4714.761069280.divmod.quotient.11193@ohm>

On Fri, 20 Jun 2008 09:40:25 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2008-06-20 at 18:32 +1000, Tim Allen wrote:
>
>> True; if I had to make a complaint about t.p.log, it would be that this
>> system for arbitrary event-sources to communicate with arbitrary
>> event-observers needs a well-defined interface to facilitate
>> communication. Currently, the only things an event-observer can rely on
>> are the 'isError' and 'system' fields being present, and probably
>> 'message' and 'time'. Any observer winds up either depending on extra
>> fields set by a specific event-source (and hoping that no other
>> event-source happens to use the same field-names for different
>> purposes), or having to treat every event as a raw text event -
>> defeating the point of logging complicated events in the first place.
>
>The plan was (is) to switch to requiring a interface=IFooMessageType
>keyword. Some day :(
>

No changes to twisted.python.log are required for this.  Anyone can log
messages with an interface key and use that in their log observer to
unambiguously interpret the rest of the keys.

It might be nice if Twisted's own log events included an interface, but
it's not really a very big deal.

Jean-Paul



From ninmonkeys at gmail.com  Fri Jun 20 17:04:06 2008
From: ninmonkeys at gmail.com (Jake b)
Date: Fri, 20 Jun 2008 16:04:06 -0500
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
References: <18520.5581.592635.559250@jon.es>
	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
Message-ID: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>

On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de> wrote:

> Thank you all for your replies.
>
> @Christian:
> I should have mentioned that. The current directory is in the pythonpath.
> In
> the variable PYHTONPATH the dot is set and when I walk through the
> filesystem, starting python from different locations, the current path is
> always set in sys.path. Hence, I asssume that PythonPath is set correctly.
> So your suggestion, what I thought would work
> >  cd \original_project
> >  trial package_to_test
> >
> >  cd \modified_project
> >  trial package_to_test
> does actually not work. Who knows why...

I'm guessing this is abnormal behavior that's on WinXP only? I on winXP have
tried setting multiple environment variables to include a project path, but
imports did not work. The only way I could add a path to python's import
paths on winXP was to edit the registry.

If PYTHONPATH being set in windowsXP doesn't seem to have any effect (Like
it doesn't seem to work for me ) the only fix I found was a registry edit.
At the path: HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new
key, ie: 'project1', create a new value, name=(Default),
value='c:\data\path\to\project'


> I have never really used a version control system I have to admit. I
> thought
> of control systems to log changes which can in case of severe damage or
> what
> ever reason be made undone. But if I can execute different versions of the
> project, e.g. in my case the initial version and the last modified, just by
> saying run this one or that one, I am glad to use it. Can this be done
> (excuse my probably dumb question)? Can someone please give me catchword to
> search for? As I looked briefly in the bazaar guide
> (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
> to find anything helpful.

( I don't know much about version control, it's something I'm looking into.
) A term to search, maybe you're looking for is 'clone' or 'branch'.

If you meant to search for differnt code versioning programs, here's some:
Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion (
http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )

Hope that helps :P
-- 
Jake
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080620/f54cc406/attachment.htm 

From steve at holdenweb.com  Fri Jun 20 17:50:41 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 20 Jun 2008 17:50:41 -0400
Subject: [Twisted-Python] Re: Twisted Trial
In-Reply-To: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
References: <18520.5581.592635.559250@jon.es>	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
	<dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
Message-ID: <485C2631.2070503@holdenweb.com>

Jake b wrote:
> On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de 
> <mailto:c2k_list at gmx.de>> wrote:
> 
>     Thank you all for your replies.
> 
>     @Christian:
>     I should have mentioned that. The current directory is in the
>     pythonpath. In
>     the variable PYHTONPATH the dot is set and when I walk through the
>     filesystem, starting python from different locations, the current
>     path is
>     always set in sys.path. Hence, I asssume that PythonPath is set
>     correctly.
>     So your suggestion, what I thought would work
>      >  cd \original_project
>      >  trial package_to_test
>      >
>      >  cd \modified_project
>      >  trial package_to_test
>     does actually not work. Who knows why...
> 
> I'm guessing this is abnormal behavior that's on WinXP only? I on winXP 
> have tried setting multiple environment variables to include a project 
> path, but imports did not work. The only way I could add a path to 
> python's import paths on winXP was to edit the registry.
> 
> If PYTHONPATH being set in windowsXP doesn't seem to have any effect 
> (Like it doesn't seem to work for me ) the only fix I found was a 
> registry edit. At the path: 
> HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new key, ie: 
> 'project1', create a new value, name=(Default), 
> value='c:\data\path\to\project'
>  
PYTHONPATH works just fine under XP. You need to either set it globally 
(in the System Properties|Advanced|Environment variables) or use a "set" 
statement from the command line in a specific session. And don't forget 
the list should be semicolon separated under Windows.

> 
>     I have never really used a version control system I have to admit. I
>     thought
>     of control systems to log changes which can in case of severe damage
>     or what
>     ever reason be made undone. But if I can execute different versions
>     of the
>     project, e.g. in my case the initial version and the last modified,
>     just by
>     saying run this one or that one, I am glad to use it. Can this be done
>     (excuse my probably dumb question)? Can someone please give me
>     catchword to
>     search for? As I looked briefly in the bazaar guide
>     (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I
>     wasn't able
>     to find anything helpful.
> 
> ( I don't know much about version control, it's something I'm looking 
> into. ) A term to search, maybe you're looking for is 'clone' or 'branch'.
> 
> If you meant to search for differnt code versioning programs, here's 
> some: Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion ( 
> http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )
> 
Subversion might be a friendly place to start. Good documentation anyway!

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mailing_lists at evotex.ch  Fri Jun 20 18:35:10 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Sat, 21 Jun 2008 00:35:10 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
References: <18520.5581.592635.559250@jon.es>	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
	<dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
Message-ID: <485C309E.9040707@evotex.ch>

Jake b wrote:
> On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de 
> <mailto:c2k_list at gmx.de>> wrote:
>
>     Thank you all for your replies.
>
>     @Christian:
>     I should have mentioned that. The current directory is in the
>     pythonpath. In
>     the variable PYHTONPATH the dot is set and when I walk through the
>     filesystem, starting python from different locations, the current
>     path is
>     always set in sys.path. Hence, I asssume that PythonPath is set
>     correctly.
>     So your suggestion, what I thought would work
>     >  cd \original_project
>     >  trial package_to_test
>     >
>     >  cd \modified_project
>     >  trial package_to_test
>     does actually not work. Who knows why...
>
> I'm guessing this is abnormal behavior that's on WinXP only? I on 
> winXP have tried setting multiple environment variables to include a 
> project path, but imports did not work. The only way I could add a 
> path to python's import paths on winXP was to edit the registry.
I test Twisted stuff on XP to ensure it will work on inferior ;-) 
systems, and I have no problem setting PYTHONPATH. Seriously though, 
let's say my code is on the desktop (I know, not a good place, but it's 
just for testing):

C:\Documents and 
Settings\User01\Desktop\MyProject                                  <-- 
Project root, not a python package, just a directory
C:\Documents and Settings\User01\Desktop\MyProject\src                   
         <-- Source directory, not a python package, just a directory
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1                   <-- Root 
package
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1\test            <-- Root 
package's test package, this is where the unit tests for this level are
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1\pkg2          <-- First child 
package
C:\Documents and Settings\User01\Desktop\MyProject\src\pkg1\pkg2\test   
<-- First child package's unit tests

and so on.

Then I set my pythonPath to :

PYTHONPATH=C:\Documents and 
Settings\User01\Desktop\MyProject\src;C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1

If I don't add the src (just a directory, not a package) AND the "root" 
package (pkg1 in my example), it doesn't work, try that maybe. I have to 
export the same thing in Linux, so it's not a Windows XP problem. It may 
be because pkg1 contains nothing except pkg2 (and an __init__.py), and 
all the interesting code is in pkg2. In reality, in my case, pgk1 is the 
company name, and pkg2 is one of the products' name, so you have to 
adapt this to your case.

 I suppose you did either reboot or reload the environment before trying 
anything, if not then it won't work. Now to run the project's code, I do 
this :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
python pkg1\pkg2\my_main.py

And for trail it's the same thing (sort of, replace '\' with '.'), I'm 
going to run all of pkg's tests next :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2

or you can specify the test package directly, so it only runs that one :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2.test

or if you want to run individual tests :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2.test.test_module1

I hope this helps!
Gabriel
>
> If PYTHONPATH being set in windowsXP doesn't seem to have any effect 
> (Like it doesn't seem to work for me ) the only fix I found was a 
> registry edit. At the path: 
> HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new key, ie: 
> 'project1', create a new value, name=(Default), 
> value='c:\data\path\to\project'
>  
>
>     I have never really used a version control system I have to admit.
>     I thought
>     of control systems to log changes which can in case of severe
>     damage or what
>     ever reason be made undone. But if I can execute different
>     versions of the
>     project, e.g. in my case the initial version and the last
>     modified, just by
>     saying run this one or that one, I am glad to use it. Can this be done
>     (excuse my probably dumb question)? Can someone please give me
>     catchword to
>     search for? As I looked briefly in the bazaar guide
>     (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I
>     wasn't able
>     to find anything helpful.
>
> ( I don't know much about version control, it's something I'm looking 
> into. ) A term to search, maybe you're looking for is 'clone' or 
> 'branch'.
>
> If you meant to search for differnt code versioning programs, here's 
> some: Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion 
> ( http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )
>
> Hope that helps :P
> -- 
> Jake
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From iraehc at hotmail.com  Sat Jun 21 16:26:37 2008
From: iraehc at hotmail.com (Irae Hueck Costa)
Date: Sat, 21 Jun 2008 22:26:37 +0200
Subject: [Twisted-Python] reject all open connections
Message-ID: <BLU125-W460D274CA37899258CC900DBA40@phx.gbl>




hi all!

i just want to clean my reactor - all readers and writer should looseConnection()

but how can i do this? reactor.removeAll() dont do it.
the best solutions i found was a horrible workaround:
a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``

is there a better solution?

thank you

_________________________________________________________________
Conhe?a o Windows Live Spaces, a rede de relacionamentos do Messenger!
http://www.amigosdomessenger.com.br/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080621/5811aea7/attachment.htm 

From exarkun at twistedmatrix.com  Sun Jun 22 00:05:10 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Jun 2008 04:05:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1214107510.96.1128874378@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080622/b28d1aac/attachment.htm 

From uupandemo at 126.com  Sun Jun 22 23:37:33 2008
From: uupandemo at 126.com (uupandemo)
Date: Mon, 23 Jun 2008 11:37:33 +0800 (CST)
Subject: [Twisted-Python] How to set client timeout with reactor.listenTCP?
Message-ID: <29425003.156751214192253181.JavaMail.coremail@bj126app50.126.com>

When a client to the server socket, server can't close the connection while the idle time exceed the timeout.


How to solve it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080623/e165be08/attachment.htm 

From Sean.Burling at v-hr.com  Mon Jun 23 06:53:59 2008
From: Sean.Burling at v-hr.com (Sean Burling)
Date: Mon, 23 Jun 2008 11:53:59 +0100
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>

Hi people,

 

My name is Sean Burling and I am an account manager for V-hr, an IT
recruitment company based in London.

 

I am currently seeking a Senior Python Developer/ Team Lead (ideally
with exposure to either Django or Twisted) for a multimedia company
based in the heart of Amsterdam.

 

I am struggling to find candidates with the relevant experience and as
such wanted to reach out to the list to find out if any of you or your
contacts are interested in new opportunities in Europe.

 

I apologise if this has reached you in error, however to find out more
about this opportunity please contact me on +44 (0)207 500 7992.

 

Kind Regards

 

Sean Burling

Account  Manager

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080623/cf7026a4/attachment.htm 

From steve at holdenweb.com  Mon Jun 23 07:08:19 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 23 Jun 2008 07:08:19 -0400
Subject: [Twisted-Python] Re: Urgently Seeking.......
In-Reply-To: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>
References: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>
Message-ID: <485F8423.9070701@holdenweb.com>

Sean:

You might also be interested in knowing about

   http://python.org/community/jobs/howto

regards
  Steve

Sean Burling wrote:
> Hi people,
> 
>  
> 
> My name is Sean Burling and I am an account manager for V-hr, an IT 
> recruitment company based in London.
> 
>  
> 
> I am currently seeking a Senior Python Developer/ Team Lead (ideally 
> with exposure to either Django or Twisted) for a multimedia company 
> based in the heart of Amsterdam.
> 
>  
> 
> I am struggling to find candidates with the relevant experience and as 
> such wanted to reach out to the list to find out if any of you or your 
> contacts are interested in new opportunities in Europe.
> 
>  
> 
> I apologise if this has reached you in error, however to find out more 
> about this opportunity please contact me on +44 (0)207 500 7992.
> 
>  
> 
> Kind Regards
> 
>  
> 
> Sean Burling
> 
> Account  Manager
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From exarkun at divmod.com  Mon Jun 23 07:33:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Jun 2008 07:33:35 -0400
Subject: [Twisted-Python] How to set client timeout with reactor.listenTCP?
In-Reply-To: <29425003.156751214192253181.JavaMail.coremail@bj126app50.126.com>
Message-ID: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>

On Mon, 23 Jun 2008 11:37:33 +0800 (CST), uupandemo <uupandemo at 126.com> wrote:
>When a client to the server socket, server can't close the connection while the idle time exceed the timeout.
>
>
>How to solve it?
>

When a client does what?  Why can't the server close the connection?  Can
you clarify the question a bit?  Perhaps you can include a minimal runnable
example that demonstrates the problem.

Jean-Paul



From anuraguniyal at yahoo.com  Mon Jun 23 08:51:37 2008
From: anuraguniyal at yahoo.com (anurag uniyal)
Date: Mon, 23 Jun 2008 18:21:37 +0530 (IST)
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <302705.41668.qm@web94509.mail.in2.yahoo.com>

Hi,
I have about 8 years of exp.in python and have exp. with both twisted and django and I am currently located in India.
I would like to know more about this oppurtunity
e.g what type of project it is, how technically involved.
and is tellecommuting is an option here?
thanks and regards
Anurag



----- Original Message ----
From: Sean Burling <Sean.Burling at v-hr.com>
To: twisted-python at twistedmatrix.com
Sent: Monday, 23 June, 2008 4:23:59 PM
Subject: [Twisted-Python] Urgently Seeking.......


Hi people,
?
My name is Sean Burling and I am an account manager for V-hr, an IT recruitment company based in London.
?
I am currently seeking a Senior Python Developer/ Team Lead (ideally with exposure to either Django or Twisted) for a multimedia company based in the heart of Amsterdam.
?
I am struggling to find candidates with the relevant experience and as such wanted to reach out to the list to find out if any of you or your contacts are interested in new opportunities in Europe.
?
I apologise if this has reached you in error, however to find out more about this opportunity please contact me on +44 (0)207 500 7992.
?
Kind Regards
?
Sean Burling
Account? Manager


      Explore your hobbies and interests. Go to http://in.promos.yahoo.com/groups/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080623/0f59761f/attachment.htm 

From anuraguniyal at yahoo.com  Mon Jun 23 08:55:45 2008
From: anuraguniyal at yahoo.com (anurag uniyal)
Date: Mon, 23 Jun 2008 18:25:45 +0530 (IST)
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <892315.14784.qm@web94505.mail.in2.yahoo.com>

I am extremely sorry, please ignore this email.
rgds
Anurag



----- Original Message ----
From: anurag uniyal <anuraguniyal at yahoo.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Monday, 23 June, 2008 6:21:37 PM
Subject: Re: [Twisted-Python] Urgently Seeking.......


Hi,
?
I have about 8 years of exp.in python and have exp. with both twisted and django and I am currently located in India.
?
I would like to know more about this oppurtunity
e.g what type of project it is, how technically involved.
and is tellecommuting is an option here?
?
thanks and regards
Anurag



----- Original Message ----
From: Sean Burling <Sean.Burling at v-hr.com>
To: twisted-python at twistedmatrix.com
Sent: Monday, 23 June, 2008 4:23:59 PM
Subject: [Twisted-Python] Urgently Seeking.......


Hi people,
?
My name is Sean Burling and I am an account manager for V-hr, an IT recruitment company based in London.
?
I am currently seeking a Senior Python Developer/ Team Lead (ideally with exposure to either Django or Twisted) for a multimedia company based in the heart of Amsterdam.
?
I am struggling to find candidates with the relevant experience and as such wanted to reach out to the list to find out if any of you or your contacts are interested in new opportunities in Europe.
?
I apologise if this has reached you in error, however to find out more about this opportunity please contact me on +44 (0)207 500 7992.
?
Kind Regards
?
Sean Burling
Account? Manager
________________________________
From Chandigarh to Chennai - find friends all over India. Click here.


      Best Jokes, Best Friends, Best Food and more. Go to http://in.promos.yahoo.com/groups/bestofyahoo/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080623/80213d1d/attachment.htm 

From uupandemo at 126.com  Mon Jun 23 10:36:45 2008
From: uupandemo at 126.com (uupandemo)
Date: Mon, 23 Jun 2008 22:36:45 +0800 (CST)
Subject: [Twisted-Python] How to set client timeout with
	reactor.listenTCP?
In-Reply-To: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>
References: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>
Message-ID: <3979219.464221214231805162.JavaMail.coremail@bj126app90.126.com>

 
 def main():
    port=8008
    reactor.listenTCP(port,policyServerFactory())
    reactor.run()

$ telnet localhost 8008 
Trying 127.0.0.1...
Connected to policy.126.com (127.0.0.1).
Escape character is '^]'.

--------------
Client will not close the connect unit it disconnects itself. But the server can't control the connect. In some critical environment, the server has to maintain a lot of connect which maybe is idle.

So I want to the server initiative disconnect the idle connection reache timeout.


 
 


?2008-06-23 19:33:35?"Jean-Paul Calderone" <exarkun at divmod.com> ???
>On Mon, 23 Jun 2008 11:37:33 +0800 (CST), uupandemo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080623/16783664/attachment.htm 

From exarkun at divmod.com  Mon Jun 23 10:46:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Jun 2008 10:46:32 -0400
Subject: [Twisted-Python] How to set client timeout with
	reactor.listenTCP?
In-Reply-To: <3979219.464221214231805162.JavaMail.coremail@bj126app90.126.com>
Message-ID: <20080623144632.4714.97679056.divmod.quotient.12195@ohm>

On Mon, 23 Jun 2008 22:36:45 +0800 (CST), uupandemo <uupandemo at 126.com> wrote:
>
> def main():
>    port=8008
>    reactor.listenTCP(port,policyServerFactory())
>    reactor.run()
>
>$ telnet localhost 8008
>Trying 127.0.0.1...
>Connected to policy.126.com (127.0.0.1).
>Escape character is '^]'.
>
>--------------
>Client will not close the connect unit it disconnects itself. But the server can't control the connect. In some critical environment, the server has to maintain a lot of connect which maybe is idle.
>
>So I want to the server initiative disconnect the idle connection reache timeout.
>

You might find twisted.protocols.policies.TimeoutMixin helpful.  Use it
with your protocol implementation to define arbitrary behavior to be run
after the client has been idle for a period of time you define.

Jean-Paul



From jml at mumak.net  Tue Jun 24 01:57:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Jun 2008 15:57:16 +1000
Subject: [Twisted-Python] AMP compliance tests
Message-ID: <d06a5cd30806232257t7f2fa7cfo9afe6dde74a9dd5b@mail.gmail.com>

Hello all,

Where can I find a set of automated tests that check that a particular
AMP implementation is complete?

I seem to recall someone on #twisted mentioning that they were working
on such a suite.

thanks,
jml



From cdelfosse at mandriva.com  Tue Jun 24 09:09:07 2008
From: cdelfosse at mandriva.com (Cedric Delfosse)
Date: Tue, 24 Jun 2008 15:09:07 +0200
Subject: [Twisted-Python] IPv6 support in Python Twisted
Message-ID: <1214312947.3932.33.camel@lolita.localnet>

Hello,
        
I'm wondering what is the current status of IPv6 support in the Twisted
framework. I only found this ipv6.py file there:
http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py

Is IPv6 support scheduled in Twisted roadmap ?

Best regards,

-- 
Cedric Delfosse                                    Mandriva / Linbox
152, rue de Grigy - Technopole Metz              57070 METZ - FRANCE
tel: +33 (0)3 87 50 87 90                        http://mandriva.com




From dripton at ripton.net  Tue Jun 24 10:49:06 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 24 Jun 2008 07:49:06 -0700
Subject: [Twisted-Python] IPv6 support in Python Twisted
In-Reply-To: <1214312947.3932.33.camel@lolita.localnet>
References: <1214312947.3932.33.camel@lolita.localnet>
Message-ID: <20080624144906.GA31542@vidar.dreamhost.com>

On 2008.06.24 15:09:07 +0200, Cedric Delfosse wrote:
> I'm wondering what is the current status of IPv6 support in the Twisted
> framework. I only found this ipv6.py file there:
> http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py
> 
> Is IPv6 support scheduled in Twisted roadmap ?

I don't think so.

See http://twistedmatrix.com/trac/ticket/3014

The code that's there basically works (TCP only; I didn't tackle UDP
yet).  It hasn't been merged into trunk.

Changing Twisted to support IPv6 is not that hard.  The hard part is
doing so without breaking backward compatibility or making public APIs
uglier.

-- 
David Ripton    dripton at ripton.net



From glyph at divmod.com  Tue Jun 24 15:09:46 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 24 Jun 2008 19:09:46 -0000
Subject: [Twisted-Python] IPv6 support in Python Twisted
In-Reply-To: <20080624144906.GA31542@vidar.dreamhost.com>
References: <1214312947.3932.33.camel@lolita.localnet>
	<20080624144906.GA31542@vidar.dreamhost.com>
Message-ID: <20080624190946.25821.1031921709.divmod.xquotient.10133@joule.divmod.com>


On 02:49 pm, dripton at ripton.net wrote:
>On 2008.06.24 15:09:07 +0200, Cedric Delfosse wrote:
>>I'm wondering what is the current status of IPv6 support in the 
>>Twisted
>>framework. I only found this ipv6.py file there:
>>http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py
>>
>>Is IPv6 support scheduled in Twisted roadmap ?
>
>I don't think so.

The twisted roadmap is currently the ticket tracker. There's a ticket. 
Therefore, yes it is ;).
>See http://twistedmatrix.com/trac/ticket/3014
>
>The code that's there basically works (TCP only; I didn't tackle UDP
>yet).  It hasn't been merged into trunk.

It's important to note that this ticket is in a state where progress is 
not being made.  For some reason, dripton's patch was not reviewed, 
instead therve put it into a branch and never put it up for review 
again.  I guess some of the comments since then might be construed as 
review feedback, but they look pretty informal (mine certainly weren't 
intended to be that way).

If someone wants this to get merged, there should be another attempt at 
putting it into review again.
>Changing Twisted to support IPv6 is not that hard.  The hard part is
>doing so without breaking backward compatibility or making public APIs
>uglier.

For what it's worth, connectTCP6 satisfies the compatibility 
requirements, it's just unfortunately ugly.  Looking at it now, maybe 
that's unavoidable because IPv6 itself is unfortunately ugly. 
("flowinfo"?  "scopeid"?)  Ugly is unfortunate, but it wins over 
breaking compatibility, which is just not allowed.

Anyway, please feel free to attach further comments to the ticket.  In 
particular it'd be nice if someone could answer my question about 
automatic failover being undesirable :).



From nathan.stocks at gmail.com  Tue Jun 24 18:43:42 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 24 Jun 2008 16:43:42 -0600
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
Message-ID: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>

Is there a more sane way to get the exit code from a ProcessProtocol
than by parsing it out of reason.value in
ProcessProtocol.processEnded()?  I can't seem to find the error code
by itself anywhere. (see example code at bottom)

If I replace "print reason.value" with "print dir(reason)" below, then
I get the following output for both successful and unsuccessful
spawns:

['__doc__', '__getstate__', '__init__', '__module__', '__repr__',
'__str__', '_findFailure', '_yieldOpcode', 'check', 'cleanFailure',
'count', 'frames', 'getBriefTraceback', 'getErrorMessage',
'getTraceback', 'getTracebackObject', 'parents', 'pickled',
'printBriefTraceback', 'printDetailedTraceback', 'printTraceback',
'raiseException', 'stack', 'tb', 'throwExceptionIntoGenerator',
'trap', 'type', 'value']

Most of the *Traceback functions include the "value" line inside them.
 getErrorMessage() apparently returns "value" itself.  "value" looks
like:

"A process has ended without apparent errors: process finished with
exit code 0."

or

"A process has ended with a probable error condition: process ended
with exit code 1."

...but the actual exit code doesn't seep to appear (by itself) anywhere!

~ Nathan



from twisted.internet import reactor
from twisted.internet.protocol import ProcessProtocol

class TestProtocol(ProcessProtocol):
   def processEnded(self, reason):
      print reason.value

def good():
   good_binary = "/bin/ls"
   good_args = ("/bin/ls", '/')
   good_process = reactor.spawnProcess(TestProtocol(), good_binary,
args=good_args)

def bad():
   bad_binary = "/bad"
   bad_args = ("/bad", '/')
   bad_process = reactor.spawnProcess(TestProtocol(), bad_binary, args=bad_args)

reactor.callWhenRunning(good)
reactor.callLater(1.0, bad)
reactor.callLater(2.0, reactor.stop)
reactor.run()



From itamar at itamarst.org  Tue Jun 24 19:39:48 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2008 19:39:48 -0400
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
In-Reply-To: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
References: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
Message-ID: <1214350789.20839.112.camel@localhost.localdomain>

On Tue, 2008-06-24 at 16:43 -0600, Nathan wrote:
> Is there a more sane way to get the exit code from a ProcessProtocol
> than by parsing it out of reason.value in
> ProcessProtocol.processEnded()?  I can't seem to find the error code
> by itself anywhere. (see example code at bottom)
> 
> If I replace "print reason.value" with "print dir(reason)" below, then
> I get the following output for both successful and unsuccessful
> spawns:

reason.value will be instance of ProcessExited or something (it's in
twisted.internet.error), which should have exitCode attribute or
something. Check the API reference for twisted.internet.error.




From nathan.stocks at gmail.com  Wed Jun 25 12:55:13 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 25 Jun 2008 10:55:13 -0600
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
In-Reply-To: <1214350789.20839.112.camel@localhost.localdomain>
References: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
	<1214350789.20839.112.camel@localhost.localdomain>
Message-ID: <96c9d6a80806250955h576a6fb3v6ed4decc611ef682@mail.gmail.com>

On Tue, Jun 24, 2008 at 5:39 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> reason.value will be instance of ProcessExited or something (it's in
> twisted.internet.error), which should have exitCode attribute or
> something. Check the API reference for twisted.internet.error.

Ah, that's what I was missing.  Since "print reason.value" spit out
such a nice string, I falsely assumed it was just a string.

reason.value.exitCode is what I was looking for.  Thanks!

~ Nathan



From dfarrell at mypublisher.com  Wed Jun 25 13:12:17 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 25 Jun 2008 13:12:17 -0400
Subject: [Twisted-Python] Question about using a deferred
Message-ID: <318F79422ADC5041A93343721F84474DECF2D5@exchange.mypublisher.local>

Hi all,

 

I've written a twisted server that handles logging messags from the
logging.handlers.SocketHandler class. The protocol I've written handles
the messages and then calls its own instance of a logger to log the
message to. I'm wondering if the file I/O the logger is doing is
something I hand off to a deferred, or is it quick enough to not to
worry about?

 

Thanks!

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080625/6a124338/attachment.htm 

From matthieu.brucher at gmail.com  Wed Jun 25 14:28:36 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 25 Jun 2008 20:28:36 +0200
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>
References: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>
Message-ID: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>

Hi again,

Does someone have a pointer ? It should be enough for me to start with ;)
I thought about this:
- creation of the client
- initialization of the messenger
- when building the messenger, I create a DeferredList (or something like that)
- when sending a message, I call a send() method that will either add
the message to the DeferredList or directly send() is the DeferredList
was processed.
- when the initialization is complete, the DeferredList is processed.

Is this realistic?

Matthieu

2008/6/18 Matthieu Brucher <matthieu.brucher at gmail.com>:
> Hi,
>
> I'm new to twisted and I'm trying to implement a set of protocols
> (already available in Java, JXSE). I lamost know how I will set up the
> different services that will communicate through the reactor, but I'm
> starting from the beginning, so here is my real question.
> How can I set up a factory (using a TCP protocol) so that when I want
> to send a message to someone, it connects though TCP to the other
> computer, they exchange a welcome message, and only then the message
> is sent though the TCP protocol ? Of course, it is not as simple as
> this, but if someone has a pointer, I will be able to fill the missing
> pieces in my design ;)
>
> Thanks,
> Matthieu
> --
> French PhD student
> Website : http://matthieu-brucher.developpez.com/
> Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
> LinkedIn : http://www.linkedin.com/in/matthieubrucher
>



-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From exarkun at divmod.com  Wed Jun 25 14:34:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 25 Jun 2008 14:34:08 -0400
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>
Message-ID: <20080625183408.4714.11698012.divmod.quotient.13082@ohm>

On Wed, 25 Jun 2008 20:28:36 +0200, Matthieu Brucher <matthieu.brucher at gmail.com> wrote:
>Hi again,
>
>Does someone have a pointer ? It should be enough for me to start with ;)
>I thought about this:
>- creation of the client

Documentation for creating a client is here:

  http://twistedmatrix.com/projects/core/documentation/howto/clients.html

>- initialization of the messenger
>- when building the messenger, I create a DeferredList (or something like that)
>- when sending a message, I call a send() method that will either add
>the message to the DeferredList or directly send() is the DeferredList
>was processed.
>- when the initialization is complete, the DeferredList is processed.

These parts, I don't understand.

Jean-Paul



From matthieu.brucher at gmail.com  Wed Jun 25 15:01:41 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 25 Jun 2008 21:01:41 +0200
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <20080625183408.4714.11698012.divmod.quotient.13082@ohm>
References: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>
	<20080625183408.4714.11698012.divmod.quotient.13082@ohm>
Message-ID: <e76aa17f0806251201p7e076863jdf95429943fa9874@mail.gmail.com>

>> - initialization of the messenger
>> - when building the messenger, I create a DeferredList (or something like
>> that)
>> - when sending a message, I call a send() method that will either add
>> the message to the DeferredList or directly send() is the DeferredList
>> was processed.
>> - when the initialization is complete, the DeferredList is processed.
>
> These parts, I don't understand.

Thanks for the answer ;) I've already printed and read the complete
tutorial, but I may have missed something.

In my application, I have a pool of peer addresses and I may have
another pool of peer connections (other clients/peers may have
connected to my own TCP server or I'm already connected to them, this
would be handled by the factory). Then I want to send a message to one
of the peers though one of its addresses in the pool (this will even
get harder, as there may be different servers listening to different
interfaces, I don't know if twisted manages this). For this purpose,
I'd like to have something like:

>>> self.get_messenger(peer_address).send(message)

This would look for a connection to this peer address in the peer
connections pool if it is already available, or it will try to connect
to the remote peer address. As it is not a simple TCP connection,
before sending the actual message, several protocol messages are sent
from the client to the server and vice-versa. Only then, when those
messages are exchanged, I can actually send the real message to the
remote peer.

Is it more clear ? It may not be the simplest way of doing stuff, but
the principle behond the protocols I use (which are already
impelemnted in C and Java) is to hide the connection to a remote peer,
and to have a message queue, so twisted seems to be the best tool for
this.

Cheers,
Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From mpresh at gmail.com  Wed Jun 25 23:29:00 2008
From: mpresh at gmail.com (Mike Preshman)
Date: Wed, 25 Jun 2008 23:29:00 -0400
Subject: [Twisted-Python] LoopingCall question
Message-ID: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>

Hello,

I am trying to run three deferred LoopingCall chains in parallel.
Here is my code below. I am trying to figure out what is the correct way of
exiting the polling after I meet some
condition that the polling satisfies. Right now I am throwing an exception
which is being caught by an errback. I wait for all three deferred chains to
complete
via a DeferredList with (defer.gatherResults) and then I add a callback to
that in order to stop the reactor.

class PollingException(twisted.python.failure.Failure):

    def __init__(self, var):
        self.var = var


def poll(*args):
    print "poll", args
    raise PollingException(args[1])

def errorHandle(failure):
    print "poll exited"
    return True

def stopReactor(result):
    print "about to stop reactor"
    reactor.stop()


t1 = task.LoopingCall(poll, "A")
d1 = t1.start(1, 3)
d1.addErrback(errorHandle)

t2 = task.LoopingCall(poll, "B")
d2 = t2.start(2, 3)
d2.addErrback(errorHandle)

t3 = task.LoopingCall(poll, "C")
d3 = t3.start(3, 3)
d3.addErrback(errorHandle)

dL = defer.gatherResults([d1, d2, d3])
dL.addCallback(lambda _: reactor.stop())

reactor.run()




However, when I run the code and I try to stop the reactor, I get the
following exception which I find puzzling.

poll ('A',)
poll exited
poll ('B',)
poll exited
poll ('C',)
poll exited
Unhandled error in Deferred:
Traceback (most recent call last):
  File "twisted_poll.py", line 36, in <module>
    dL.addCallback(lambda _: reactor.stop())
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 191,
in addCallback
    callbackKeywords=kw)
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 182,
in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 317,
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "twisted_poll.py", line 36, in <lambda>
    dL.addCallback(lambda _: reactor.stop())
  File "c:\python25\lib\site-packages\twisted\internet\base.py", line 342,
in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running


Thanks very much,
-Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080625/c137d0b6/attachment.htm 

From exarkun at divmod.com  Thu Jun 26 07:27:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 26 Jun 2008 07:27:10 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
Message-ID: <20080626112710.4714.603660189.divmod.quotient.13391@ohm>

On Wed, 25 Jun 2008 23:29:00 -0400, Mike Preshman <mpresh at gmail.com> wrote:
>Hello,
>
>I am trying to run three deferred LoopingCall chains in parallel.
>Here is my code below. I am trying to figure out what is the correct way of
>exiting the polling after I meet some
>condition that the polling satisfies. Right now I am throwing an exception
>which is being caught by an errback. I wait for all three deferred chains to
>complete
>via a DeferredList with (defer.gatherResults) and then I add a callback to
>that in order to stop the reactor.
>
>class PollingException(twisted.python.failure.Failure):
>
>    def __init__(self, var):
>        self.var = var
>

Don't subclass Failure.  Just subclass Exception.

>
>def poll(*args):
>    print "poll", args
>    raise PollingException(args[1])
>
>def errorHandle(failure):
>    print "poll exited"
>    return True
>
>def stopReactor(result):
>    print "about to stop reactor"
>    reactor.stop()
>
>
>t1 = task.LoopingCall(poll, "A")
>d1 = t1.start(1, 3)
>d1.addErrback(errorHandle)
>
>t2 = task.LoopingCall(poll, "B")
>d2 = t2.start(2, 3)
>d2.addErrback(errorHandle)
>
>t3 = task.LoopingCall(poll, "C")
>d3 = t3.start(3, 3)
>d3.addErrback(errorHandle)
>
>dL = defer.gatherResults([d1, d2, d3])
>dL.addCallback(lambda _: reactor.stop())
>
>reactor.run()
>
>However, when I run the code and I try to stop the reactor, I get the
>following exception which I find puzzling.
>
> [snip]
>    raise RuntimeError, "can't stop reactor that isn't running"
>exceptions.RuntimeError: can't stop reactor that isn't running
>

LoopingCall invokes the function it is given immediately, unless you pass
now=False to its initializer.  This means you're stopping the reactor
several times before it's even started.  Try making sure the reactor is
running before poll is ever called.

Jean-Paul



From iraehc at hotmail.com  Thu Jun 26 17:08:00 2008
From: iraehc at hotmail.com (Irae Hueck Costa)
Date: Thu, 26 Jun 2008 23:08:00 +0200
Subject: [Twisted-Python] FW: reject all open connections
Message-ID: <BLU125-W299CF7A19BA5B5E3266789DBA30@phx.gbl>




From: iraehc at hotmail.com
To: twisted-python at twistedmatrix.com
Subject: reject all open connections
Date: Sat, 21 Jun 2008 22:26:37 +0200










hi all!

i am sorry, its the first time i am asking something twice but its important for me to get a question.
thank you!:

i just want to clean my reactor - all readers and writer should looseConnection()

but how can i do this? reactor.removeAll() dont do it.
the best solutions i found was a horrible workaround:
a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``

is there a better solution?

thank you

Conhe?a j? o Windows Live Spaces, o site de relacionamentos do Messenger! Crie j? o seu!

_________________________________________________________________
Conhe?a o Windows Live Spaces, a rede de relacionamentos do Messenger!
http://www.amigosdomessenger.com.br/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080626/b2c3716d/attachment.htm 

From exarkun at divmod.com  Thu Jun 26 17:18:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 26 Jun 2008 17:18:42 -0400
Subject: [Twisted-Python] FW: reject all open connections
In-Reply-To: <BLU125-W299CF7A19BA5B5E3266789DBA30@phx.gbl>
Message-ID: <20080626211842.4714.95693517.divmod.quotient.13557@ohm>

On Thu, 26 Jun 2008 23:08:00 +0200, Irae Hueck Costa <iraehc at hotmail.com> wrote:
>
>i just want to clean my reactor - all readers and writer should looseConnection()
>
>but how can i do this? reactor.removeAll() dont do it.
>the best solutions i found was a horrible workaround:
>a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``
>
>is there a better solution?
>

This is an unusual thing to want to do.  Any code that does it risks
stomping on other code it doesn't know about.  If you have a factory
serving connections on a particular port, you might want to have that
factory keep track of all clients which are connected to it, then it
can iterate over those clients and disconnect them.

If you use removeAll(), then you'll probably end of breaking some
reactor internals (like threading support and maybe other stuff).
However, if that's your goal, then the list comprehension you
pasted is more or less correct.

Jean-Paul



From hermann.kaser at gmail.com  Fri Jun 27 08:47:03 2008
From: hermann.kaser at gmail.com (Hermann Kaser)
Date: Fri, 27 Jun 2008 14:47:03 +0200
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
Message-ID: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>

Hello all,

I'm trying to write an MSN client but I've run into a problem: for
some reason when I create a Switchboard and try to invite someone it
sends the join command and the invitation command all together and the
MSN server doesn't answer any of them. Here's the relevant bits of the
code I have:

class Switchboard(msn.SwitchboardClient):
   def connectionMade(self):
        self.key = self.factory.key
        self.sessionID = self.factory.sessionID
        self.userHandle = self.factory.userHandle
        self.invite = self.factory.invite

        msn.SwitchboardClient.connectionMade(self)

        d = self.inviteUser(self.invite)
        d.addCallback(self.Invited)

    def Invited(self, *args):
        print 'Running reply callback'

And this is the ngrep stream after the XFR request

# send transfer request
T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
  CHG 6 NLN..XFR 7 SB..

# get transfer response
T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..

T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  CHG 6 NLN 0..

T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..

T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
want to invite]..

If I try to do the same process with pidgin for example, the stream
looks exactly the same except the USR and CAL command are on separate
packets, and the server responds to the USR command before the client
sends the CAL command.

Can anyone help me out figuring this out? I know you can send more
than one command per packet, as seen in the first packet of the ngrep
stream I posted, so I don't see why it wouldn't work to send the USR
and CAL command together, but I suspect that not all commands may be
stuck together. I stuck a time.sleep(20) between the calling
msn.SwitchboardClient.connectionMade(self) and
self.inviteUser(self.invite) to see if it was a timing issue but what
happens is that the USR command gets buffered, and only when the
script tries to send the CAL command does the socket actually write it
out.

Any help on this would be greatly appreciated, I've been digging
around the documentation and the code but I can't seem to figure out
why it's buffering the USR command and I don't know enough about the
MSN protocol to know which commands need a unique packet and which
ones can go with others.

Regards,
Hermann K?ser
http://theragingche.com/
http://semicir.cl/user/hermzz

From exarkun at divmod.com  Fri Jun 27 08:57:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Jun 2008 08:57:58 -0400
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
In-Reply-To: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
Message-ID: <20080627125758.4714.949403242.divmod.quotient.13899@ohm>

On Fri, 27 Jun 2008 14:47:03 +0200, Hermann Kaser <hermann.kaser at gmail.com> wrote:
>Hello all,
>
>I'm trying to write an MSN client but I've run into a problem: for
>some reason when I create a Switchboard and try to invite someone it
>sends the join command and the invitation command all together and the
>MSN server doesn't answer any of them. Here's the relevant bits of the
>code I have:
>
>class Switchboard(msn.SwitchboardClient):
>   def connectionMade(self):
>        self.key = self.factory.key
>        self.sessionID = self.factory.sessionID
>        self.userHandle = self.factory.userHandle
>        self.invite = self.factory.invite
>
>        msn.SwitchboardClient.connectionMade(self)
>
>        d = self.inviteUser(self.invite)
>        d.addCallback(self.Invited)
>
>    def Invited(self, *args):
>        print 'Running reply callback'
>
>And this is the ngrep stream after the XFR request
>
># send transfer request
>T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
>  CHG 6 NLN..XFR 7 SB..
>
># get transfer response
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..
>
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  CHG 6 NLN 0..
>
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..
>
>T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
>  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
>want to invite]..
>
>If I try to do the same process with pidgin for example, the stream
>looks exactly the same except the USR and CAL command are on separate
>packets, and the server responds to the USR command before the client
>sends the CAL command.
>
>Can anyone help me out figuring this out? I know you can send more
>than one command per packet, as seen in the first packet of the ngrep
>stream I posted, so I don't see why it wouldn't work to send the USR
>and CAL command together, but I suspect that not all commands may be
>stuck together. I stuck a time.sleep(20) between the calling
>msn.SwitchboardClient.connectionMade(self) and
>self.inviteUser(self.invite) to see if it was a timing issue but what
>happens is that the USR command gets buffered, and only when the
>script tries to send the CAL command does the socket actually write it
>out.

The way to do this is to let the reactor do some I/O in between the
calls.  Sleeping is almost the right idea (for debugging, at least),
but you need to do it in a way that cooperates with the reactor.  Try
putting the inviteUser call into a separate function and delaying its
execution a bit:

    def connectionMade(self):
        ...
        msn.SwitchboardClient.connectionMade(self)
        reactor.callLater(1, self._doinvite)

    def _doinvite(self):
        d = self.inviteUser(self.invite)
        d.addCallback(self.Invited)

If this works, then you may have demonstrated that USR and CAL
cannot be combined like this.  In that case, I'd say it's a bug
in Twisted's MSN support - it's the protocol's job to know things
like this, so the protocol should automatically buffer the CAL
if it knows a USR is going to be sent with it.

>
>Any help on this would be greatly appreciated, I've been digging
>around the documentation and the code but I can't seem to figure out
>why it's buffering the USR command and I don't know enough about the
>MSN protocol to know which commands need a unique packet and which
>ones can go with others.

It'd be interesting to see if pidgin has code to specifically avoid
combining USR and CAL (or USR and anything else).

Jean-Paul



From itamar at itamarst.org  Fri Jun 27 09:44:07 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 27 Jun 2008 09:44:07 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
Message-ID: <1214574247.20839.143.camel@localhost.localdomain>

On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
> Hello,
> 
> I am trying to run three deferred LoopingCall chains in parallel.
> Here is my code below. I am trying to figure out what is the correct
> way of exiting the polling after I meet some 
> condition that the polling satisfies.

You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:


from twisted.internet import defer, reactor, task

class _LoopUntil(object):

    def __init__(self, delay, check):
        self.delay = delay
        self.check = check
        self.result = defer.Deferred()

    def go(self):
        task.deferLater(reactor, self.delay, check).addCallbacks(
            self._gotResult, self._failed)
    
    def _gotResult(self, r):
         if r:
             d = self.result
             del self.result
             self.result.callback(r)
         else:
             self.go()

    def _failed(self, f):
        self.result.errback(f)
        del self.result


def loopUntil(delay, check):
    l = _LoopUntil(delay, check)
    r = l.result
    l.go()
    return r





From buisson at enseirb.fr  Fri Jun 27 10:02:27 2008
From: buisson at enseirb.fr (=?ISO-8859-1?Q?R=E9mi_BUISSON?=)
Date: Fri, 27 Jun 2008 16:02:27 +0200
Subject: [Twisted-Python] [SIP-Twisted-Python] Sample code
In-Reply-To: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
References: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
Message-ID: <4864F2F3.5070908@enseirb.fr>

Hello all,

I'm a beginner in Python and more in Twisted.

I would like to exchange cc//pp informations between a client and a 
server using SIP.

Can someone give me a basic sample code for the client and the server 
because I am not used to employing the Twisted API and I try to do it 
since this morning ... ?

Thanks in advance.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: buisson.vcf
Type: text/x-vcard
Size: 192 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080627/9c9f9c4b/attachment.vcf 

From mpresh at gmail.com  Fri Jun 27 10:06:07 2008
From: mpresh at gmail.com (Mike Preshman)
Date: Fri, 27 Jun 2008 10:06:07 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <1214574247.20839.143.camel@localhost.localdomain>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
Message-ID: <b47be41c0806270706vcdf432etea0bda7ccb95db1c@mail.gmail.com>

I got it to work with classes.

from twisted.internet import utils, reactor, defer, task
import twisted
import time, sys

class Looping:

    def __init__(self, c, t):
        self.c = c
        self.t = t
        self.count = 0

    def myPoll(self, *args):
        print "poll", args

        self.count = self.count + 1

        if self.count > 3:
            self.task.stop()

    def start(self):
        self.task = task.LoopingCall(self.myPoll, self.c)
        return self.task.start(self.t)


c1 = Looping("A", 1)
d1 = c1.start()

c2 = Looping("B", 2)
d2 = c2.start()

c3 = Looping("C", 3)
d3 = c3.start()


dL = defer.gatherResults([d1, d2, d3])
dL.addCallback(lambda _: reactor.stop())

reactor.run()


On Fri, Jun 27, 2008 at 9:44 AM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
> > Hello,
> >
> > I am trying to run three deferred LoopingCall chains in parallel.
> > Here is my code below. I am trying to figure out what is the correct
> > way of exiting the polling after I meet some
> > condition that the polling satisfies.
>
> You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:
>
>
> from twisted.internet import defer, reactor, task
>
> class _LoopUntil(object):
>
>    def __init__(self, delay, check):
>        self.delay = delay
>        self.check = check
>        self.result = defer.Deferred()
>
>    def go(self):
>        task.deferLater(reactor, self.delay, check).addCallbacks(
>            self._gotResult, self._failed)
>
>    def _gotResult(self, r):
>         if r:
>             d = self.result
>             del self.result
>             self.result.callback(r)
>         else:
>             self.go()
>
>    def _failed(self, f):
>        self.result.errback(f)
>        del self.result
>
>
> def loopUntil(delay, check):
>    l = _LoopUntil(delay, check)
>    r = l.result
>    l.go()
>    return r
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080627/d817e7f6/attachment.htm 

From dfarrell at mypublisher.com  Fri Jun 27 11:46:05 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Fri, 27 Jun 2008 11:46:05 -0400
Subject: [Twisted-Python] twisted threading with a long running process
Message-ID: <318F79422ADC5041A93343721F84474DECF3D6@exchange.mypublisher.local>

Hi all,

 

I've built a Twisted server that handles Python logging messages sent
from the logging.handlers.SocketHandler system. Right now my protocol
implementation handles logging the received logRecord to a file and
entering it into an in memory model for statistical purposes. I'm
thinking of off-loading this activity to a separate thread by having the
protocol just send the logRecord it receives into queue that is serviced
by a separate thread. My question is whether using the
twisted.internet.threads.deferToThread() method is a good way to kick
off this other thread. The other thread will be running for as long as
the Twisted server runs so it can handle logRecords in the queue. Would
just starting a threading.Thread based class be a better solution,
giving access to queue inside the class to the protocol?

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080627/a81c7242/attachment.htm 

From exarkun at divmod.com  Fri Jun 27 12:37:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Jun 2008 12:37:17 -0400
Subject: [Twisted-Python] twisted threading with a long running process
In-Reply-To: <318F79422ADC5041A93343721F84474DECF3D6@exchange.mypublisher.local>
Message-ID: <20080627163717.4714.2080119728.divmod.quotient.13980@ohm>

On Fri, 27 Jun 2008 11:46:05 -0400, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hi all,
>
>I've built a Twisted server that handles Python logging messages sent
>from the logging.handlers.SocketHandler system. Right now my protocol
>implementation handles logging the received logRecord to a file and
>entering it into an in memory model for statistical purposes. I'm
>thinking of off-loading this activity to a separate thread by having the
>protocol just send the logRecord it receives into queue that is serviced
>by a separate thread. My question is whether using the
>twisted.internet.threads.deferToThread() method is a good way to kick
>off this other thread. The other thread will be running for as long as
>the Twisted server runs so it can handle logRecords in the queue. Would
>just starting a threading.Thread based class be a better solution,
>giving access to queue inside the class to the protocol?
>

deferToThread is based on a thread-pool.  If there will be benefit to
processing log records concurrently in different threads (ie, if most
of the cost is disk I/O or an extension module that releases the GIL)
and you have multiple CPUs, using a threadpool might give you a speed
up.  If any of these things isn't true, then one thread will give you
just as much benefit as a whole pool full.  Of course, even given all
that, using deferToThread is simpler than writing a new Thread with a
queue for input, so you may still want to use deferToThread.

Jean-Paul



From steve at holdenweb.com  Fri Jun 27 23:27:02 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 27 Jun 2008 23:27:02 -0400
Subject: [Twisted-Python] Re: LoopingCall question
In-Reply-To: <1214574247.20839.143.camel@localhost.localdomain>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
Message-ID: <g44b25$6v7$1@ger.gmane.org>

Itamar Shtull-Trauring wrote:
> On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
>> Hello,
>>
>> I am trying to run three deferred LoopingCall chains in parallel.
>> Here is my code below. I am trying to figure out what is the correct
>> way of exiting the polling after I meet some 
>> condition that the polling satisfies.
> 
> You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:
> 
> 
> from twisted.internet import defer, reactor, task
> 
> class _LoopUntil(object):
> 
>     def __init__(self, delay, check):
>         self.delay = delay
>         self.check = check
>         self.result = defer.Deferred()
> 
>     def go(self):
>         task.deferLater(reactor, self.delay, check).addCallbacks(
>             self._gotResult, self._failed)
>     
>     def _gotResult(self, r):
>          if r:
>              d = self.result
>              del self.result
>              self.result.callback(r)

What am I missing that stops the above line from raising AttributeError?

>          else:
>              self.go()
> 
>     def _failed(self, f):
>         self.result.errback(f)
>         del self.result
> 
> 
> def loopUntil(delay, check):
>     l = _LoopUntil(delay, check)
>     r = l.result
>     l.go()
>     return r

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From itamar at itamarst.org  Sat Jun 28 12:13:52 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2008 12:13:52 -0400 (EDT)
Subject: [Twisted-Python] Re: LoopingCall question
In-Reply-To: <g44b25$6v7$1@ger.gmane.org>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
	<g44b25$6v7$1@ger.gmane.org>
Message-ID: <53238.74.64.98.80.1214669632.squirrel@webmail.zoteca.com>

> Itamar Shtull-Trauring wrote:
>>     def _gotResult(self, r):
>>          if r:
>>              d = self.result
>>              del self.result
>>              self.result.callback(r)
>
> What am I missing that stops the above line from raising AttributeError?

That was a typo, thanks for pointing it out. Should be d.callback().
(Deferreds should be derefernced once callbacked or errbacked, since
unhandled errors will only get logged on GC.)




From andy at thecablelounge.com  Sat Jun 28 18:26:15 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 18:26:15 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
Message-ID: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>

Hey guys,

I'm really keen to get twisted.vfs to a stable point that is
acceptably releasable.

There's 6 tickets to knock off to get it to this state:

This ticket will give an easily runnable vfs server, which'll be
useful for experimenting with vfs as it is worked on:

* http://twistedmatrix.com/trac/ticket/2821

This ticket ports the backend vfs interface to be firstly async, and
also, not quite so lame:

* http://twistedmatrix.com/trac/ticket/2815

Then we can port the 3 currently supported protocols over to use the
new backend interface:

* http://twistedmatrix.com/trac/ticket/2816
* http://twistedmatrix.com/trac/ticket/2817
* http://twistedmatrix.com/trac/ticket/2818

And finally once everything is ported, there can be a good clean up:

* http://twistedmatrix.com/trac/ticket/2819

Exarkun also has some good suggestions for #2815.  I've gone ahead and
fixed the ones mentioned - but this is defining an interface - which
isn't something to lock into lightly.

As he says:

'What these interfaces should actually say is still an open question,
I think. This would probably benefit from some real-time conversation
with various interested parties involved. You've probably already
noticed IFTPShell which is one take on this interface (it's not
exactly the same shape, but many of the ideas apply here).'

is very reasonable.  Just before the first .au sprint I put a bit of
time into this - and conch's IConchUser interface seemed to be a
better base for vfs than IFTPShell - but this is something that could
use more discussion.

I've quit my job in LA that's sucked up all my life for the last 2 or
so years and I'm now on a road trip around the US. I've hauled up in
vermont for the week to catch up on a bunch of stuff - top of the list
is to try and get vfs up to scratch finally. I'm planning to be in the
Massachusetts area next week - again for around a week.

If anyone is available to meet up and hash this out, that'd be awesome.

It feels like if we can hit #2815 on the head, the rest will fall into
place.  Therve has been awesome at chugging through previous vfs stuff
- porting protocols to use the agreed upon backend interface should be
straight forward.

cheers,
Andy.



From glyph at divmod.com  Sat Jun 28 18:33:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 28 Jun 2008 22:33:37 -0000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
Message-ID: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>


On 10:26 pm, andy at thecablelounge.com wrote:
>I'm planning to be in the Massachusetts area next week - again for 
>around a week.
>
>If anyone is available to meet up and hash this out, that'd be awesome.

YES.  PLEASE.

I don't know the rest of the Cambridge Cabal's level of interest but I'd 
definitely like to sort this stuff out.  (I promise to take minutes and 
file tickets for those of you not present.  And we should have an IRC 
conference as well.)

Good to see you again, Andy.  "Welcome back to the stage of history."



From terry at jon.es  Sat Jun 28 18:40:11 2008
From: terry at jon.es (Terry Jones)
Date: Sun, 29 Jun 2008 00:40:11 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
In-Reply-To: Your message at 23:10:48 on Tuesday, 17 June 2008
References: <18519.56098.678826.294578@jon.es>
	<18520.10328.729525.221355@jon.es>
Message-ID: <18534.48587.810094.803939@jon.es>

Following the massive interest in my earlier postings on this thread, I'm
following up to myself again :-)

Here's what I was trying to do:

> In case it wasn't clear before, you're pulling "results" (e.g., from a
> search engine) in off the web. Each results pages comes with an indicator
> to tell you whether there are more results. I wanted to write a function
> (see processResults below) that, when called, would call the process
> function below on each result, all done asynchronously.

I posted some cumbersome code to roughly do that.  I've since been thinking
about this on and off, with help from Esteve Fernandez, and we've made the
code quite a bit simpler.

I think there's a general pattern here that's worth thinking about.
Roughly: the above need is like the Twisted analogy of using iterators in
regular synchronous programming.

By that I mean that the normal pattern of Twisted usage is: a single event
is anticipated (by the programmer), it occurs once, and its result is
passed down a call/errback chain. That's roughly like a single function
call in synchronous code.

But if you are expecting a sequence of external events to occur and you
want to asynchronously pass their results in turn down a call/errback
chain. The need to do this in synchronous code can be filled with a simple
iterator. But doing this asynchronously (when the fetch of the next batch
of results might take a while) doesn't seem to fit easily into the
single-shot asynchronous Twisted paradigm.

I thought about modifying defer.py to allow a callback chain to be called
multiple times (and to have the "normal" single-shot chain be a special
case). But that was clearly going to get messy. BTW, I find defer.py is
really elegant.

After more thinking about how to make my previously posted code simpler,
Esteve and I came up with what you'll find at

  http://python.pastebin.com/f7df56752   (code) and
  http://python.pastebin.com/f1e582264   (simple tests)

The idea is that you provide a result fetcher function to the TwIterator
class. This function will be called repeatedly, as needed, to get more
results. It returns a deferred whose callback it should call with a list of
next results (which may be empty), a bool to indicate whether to re-call
the function, and a dict of args to pass to it next time.

The TwIterator class provides you with a list() method that you can use
almost like an iterator:

    @inlineCallbacks
    def printer(results):
        for x in results:
            print (yield x)

    fetcher.list().addCallback(printer)

This is in some sense like a general asynchronous iterator for Twisted. The
printer function receives an iterator, each element of which is a deferred,
and when that deferred fires it produces the next result.

The test code gives 4 simple example result-fetching functions, and calls
them all asynchronously. If you run it you'll see the results coming out in
a somewhat random order.

I wont go into more detail, given that no-one responded to the first two
postings. It's still possible that I'm trying to solve a problem that can
already be done by some standard Twisted module. I don't know enough about
Twisted to know for sure.

Terry



From exarkun at divmod.com  Sat Jun 28 18:51:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Jun 2008 18:51:10 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
Message-ID: <20080628225110.4714.1787695089.divmod.quotient.14600@ohm>

On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com> wrote:
>
> [snip]
>is very reasonable.  Just before the first .au sprint I put a bit of
>time into this - and conch's IConchUser interface seemed to be a
>better base for vfs than IFTPShell - but this is something that could
>use more discussion.

IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)

Jean-Paul



From jml at mumak.net  Sat Jun 28 18:58:01 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 29 Jun 2008 08:58:01 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
Message-ID: <d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>

On Sun, Jun 29, 2008 at 8:33 AM,  <glyph at divmod.com> wrote:
>
> On 10:26 pm, andy at thecablelounge.com wrote:
>>
>> I'm planning to be in the Massachusetts area next week - again for around
>> a week.
>>
>> If anyone is available to meet up and hash this out, that'd be awesome.
>
> YES.  PLEASE.
>
> I don't know the rest of the Cambridge Cabal's level of interest but I'd
> definitely like to sort this stuff out.  (I promise to take minutes and file
> tickets for those of you not present.  And we should have an IRC conference
> as well.)
>

That'd be great. We've stopped using twisted.vfs at work, but I'm
still keen to see this stuff improve.

Welcome back, Andy :)

jml



From andy at thecablelounge.com  Sat Jun 28 19:04:53 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 19:04:53 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628225110.4714.1787695089.divmod.quotient.14600@ohm>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628225110.4714.1787695089.divmod.quotient.14600@ohm>
Message-ID: <74e109b70806281604g7ab06325nbc72680206968622@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:51 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com>
> wrote:
>>
>> [snip]
>> is very reasonable.  Just before the first .au sprint I put a bit of
>> time into this - and conch's IConchUser interface seemed to be a
>> better base for vfs than IFTPShell - but this is something that could
>> use more discussion.
>
> IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)

Hehe, sorry.  I've been working in vfs.plugin's realm too much.

Would you believe ISFTPServer/ISFTPFile?

Andy.



From andy at thecablelounge.com  Sat Jun 28 19:09:25 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 19:09:25 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
Message-ID: <74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:58 PM, Jonathan Lange <jml at mumak.net> wrote:
> That'd be great. We've stopped using twisted.vfs at work, but I'm
> still keen to see this stuff improve.

Oh man, I think that means *noone* uses twisted.vfs.  What are you
guys doing for sftp access to launchpad?

Andy.



From jml at mumak.net  Sat Jun 28 19:19:24 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 29 Jun 2008 09:19:24 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
	<74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
Message-ID: <d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>

On Sun, Jun 29, 2008 at 9:09 AM, Andy Gayton <andy at thecablelounge.com> wrote:
> On Sat, Jun 28, 2008 at 6:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>> That'd be great. We've stopped using twisted.vfs at work, but I'm
>> still keen to see this stuff improve.
>
> Oh man, I think that means *noone* uses twisted.vfs.  What are you
> guys doing for sftp access to launchpad?
>

Direct implementations of ISFTPServer and ISFTPFile.

Since hacking on that, I've become too familiar with the creepy world
of SFTP protocol drafts. Would love to talk about it with y'all. If
you can arrange to chat at a time during my weekend, I'll adjust my
sleep patterns accordingly.

jml



From exarkun at divmod.com  Sat Jun 28 19:40:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Jun 2008 19:40:36 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281604g7ab06325nbc72680206968622@mail.gmail.com>
Message-ID: <20080628234036.4714.1498547258.divmod.quotient.14617@ohm>

On Sat, 28 Jun 2008 19:04:53 -0400, Andy Gayton <andy at thecablelounge.com> wrote:
>On Sat, Jun 28, 2008 at 6:51 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com>
>> wrote:
>>>
>>> [snip]
>>> is very reasonable.  Just before the first .au sprint I put a bit of
>>> time into this - and conch's IConchUser interface seemed to be a
>>> better base for vfs than IFTPShell - but this is something that could
>>> use more discussion.
>>
>> IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)
>
>Hehe, sorry.  I've been working in vfs.plugin's realm too much.
>
>Would you believe ISFTPServer/ISFTPFile?
>

Okay, that's a little more plausible. :)  And still definitely worth a
discussion (probably a slightly different one than I had in mind before ;).

Jean-Paul



From andy at thecablelounge.com  Sat Jun 28 20:02:25 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 20:02:25 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
	<74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
	<d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>
Message-ID: <74e109b70806281702p75620010tc85389d9b2875da8@mail.gmail.com>

On Sat, Jun 28, 2008 at 7:19 PM, Jonathan Lange <jml at mumak.net> wrote:
> Since hacking on that, I've become too familiar with the creepy world
> of SFTP protocol drafts. Would love to talk about it with y'all. If
> you can arrange to chat at a time during my weekend, I'll adjust my
> sleep patterns accordingly.

I've got a place in Vermont until next Thursday.  Then its July, 4th,
which is likely to be rowdy.  We could go for a face to face + IRC
meeting next weekend?  We could also virtually bash around ideas
before then - and I'd have the week to code up whatever is discussed.

In the mean time, here's a list of interfaces to draw on:

Some thoughts on async file io for twisted have been documented here:
http://twistedmatrix.com/trac/wiki/Specification/AsynchronousFileInputOutput

Ftp's IFTPShell, IReadFile and IReadFile
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/protocols/ftp.py#L1271

Conch's ISFTPServer and ISFTPFile
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/conch/interfaces.py#L92

The heavily thought out, particularly from a security point of view,
but synchronous, FilePath.
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/python/filepath.py#L257

The currently propsed vfs interface, IVFSNode
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/vfs/ivfs.py#L50

There's already an implementation of IVFSNode - FilePathNode, which
takes a FilePath (or ZipPath), and would then make it available over
all protocols which have adapters for IVFSNode.

cheers,
Andy.



From exarkun at twistedmatrix.com  Sun Jun 29 00:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Jun 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1214712308.25.1015464113@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080629/076c1862/attachment.htm 

From duncan.mcgreggor at gmail.com  Mon Jun 30 00:00:56 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 29 Jun 2008 23:00:56 -0500
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
Message-ID: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>

Hey everyone,

Divmod's been talking to various hosting companies about potential
Twisted deals (and maybe even support). I wanted to get a gauge of
people's level of interest in the services we've been discussing.
We're currently looking at the following options:
 * Dedicated hosts, with Twisted libs pre-installed on them
 * Virtual hosts/"slices" with Twisted libs pre-installed on them
 * Clouds that support uploading and running Twisted apps
 * Potential support contracts where Divmod engineers provide
high-level assistance for paying customers
 * Becoming a reseller and offering these services directly through Divmod

I've been approached privately by a few developers who use Twisted in
their projects at home and at work with questions about Twisted
hosting. They've been interested to know if 1) Divmod does Twisted
hosting, 2) anyone provides "out of the box" support for Twisted, and
3) who we recommend.

I know that as the years pass, I have less and less time to manage my
own systems responsibly. After 6 years, I'm closing down my colocated
boxes. When Twisted makes it to the cloud, I'll close down my virtual
hosts, too. I just don't have the time any more. All I need is
reliable uptime for my apps (most of them are just sites with dynamic
content).

How many others on these lists feel that they would benefit from the
ease of pre-installed Twisted and/or support for Twisted apps in the
cloud?

If you do, what kinds of apps (that you are currently running) do you
want to be able to run in such environments? Simple web sites? DNS
servers? Game servers? Chat applications? Web/data services apps?

And lastly, what hosting companies are your favorites? Where would you
be happiest, if they supported Twisted? Would you consider switching
to a hosting provider that *did* support Twisted?

Looking forward to hearing the people speak,

d



From wpurvis at gmail.com  Mon Jun 30 01:14:32 2008
From: wpurvis at gmail.com (Walter Purvis)
Date: Mon, 30 Jun 2008 01:14:32 -0400
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
In-Reply-To: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
Message-ID: <48686bbe.0661220a.68fa.ffffcbf2@mx.google.com>

My primary use of Twisted is as a web application server behind a reverse
proxy.

Personally, I would love to see some Amazon EC2 images with Twisted
pre-installed.

If there were some *paid* EC2 images availble right now that had an Nginx ->
HAProxy -> Twisted app server (meaning Twisted pre-installed and ready to
go) stack on it, I would definitely use it, simply because I'm going to have
to set that up for myself pretty soon and I am neither a Linux nor an EC2
expert (I have so far only used existing vanilla AMIs for
testing/development).

I probably wouldn't pay much for it, maybe 1 or 2 cents per hour -- but
that's still about $7.20 or $14.40 per month, per server, in perpetuity, for
whoever set up that kind of AMI. If someone created some slick managament
tools/UI, or if some organization wanted to provide professional support not
only for Twisted but for the whole stack/virtual box, I'd pay considerably
more.

Aside from EC2, I don't have any interest, i.e., unless something changes I
don't intend to ever run a web application on anything other than EC2
infrastructure ever again. The mere pre-installation of Twisted, even with
ongoing professional support, on some other hosting provider's
infrastructure wouldn't come close to tempting me to use that provider
instead of EC2.




From tim at commsecure.com.au  Mon Jun 30 04:08:50 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Mon, 30 Jun 2008 18:08:50 +1000
Subject: [Twisted-Python] Implementing startup sanity-checks for twistd
	services.
Message-ID: <20080630180850.62fe78f2@ws35.commsecure.com.au>

The system I'm working on at the moment is talking to MySQL, and in
order to get reasonable behaviour, I need to make sure the "SQL_MODE"
variable is set on both the database connection, and on the stored
procedures I'll be calling. If this is not set up correctly, I expect
to be plagued with silent data corruption issues. I can force the
SQL_MODE per-connection when I connect to the database, but I need to
double-check the procedures whenever I start up.

Ideally, my system would follow a startup procedure something like this:

 - Read configuration
 - Connect to the configured database.
 - Check the SQL_MODE associated with any stored procedures.
 - If everything checks out OK, continue the startup process.
 - Otherwise, log a noisy error and shut down.

Of course, I'd prefer to do things the Twisted Way if at all possible.

I've had some ideas about how to implement this, but none of them seem
terribly useful:

If I launch my queries at startup, and only add my service to the
master Application object if they return successfully, then by the time
I try to start my service twistd will have (I assume) already dropped
privileges and chroot'd and so forth.

If I attach my service to the master Application object at startup
*then* launch my queries, then I might wind up accepting queries before
my sanity checks have completed, defeating the point.

Also, if my service has started and my sanity-checks fail, how can I
cleanly shut down twistd from inside? If my service is just one of
possibly many running inside the master Application object, it seems a
bit rude for me to call reactor.stop(); on the other hand, if I just
stop my service then twistd keeps happily running - confusing
operations staff who often use 'ps' to check whether systems are up.

Is there a better way to do this?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080630/5562910c/attachment.pgp 

From hermann.kaser at gmail.com  Mon Jun 30 05:31:28 2008
From: hermann.kaser at gmail.com (Hermann Kaser)
Date: Mon, 30 Jun 2008 11:31:28 +0200
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
In-Reply-To: <20080627125758.4714.949403242.divmod.quotient.13899@ohm>
References: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
	<20080627125758.4714.949403242.divmod.quotient.13899@ohm>
Message-ID: <611f33b60806300231h66713bacm4a536d74918cb919@mail.gmail.com>

On Fri, Jun 27, 2008 at 2:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 27 Jun 2008 14:47:03 +0200, Hermann Kaser <hermann.kaser at gmail.com>
> wrote:
>>
>> Hello all,
>>
>> I'm trying to write an MSN client but I've run into a problem: for
>> some reason when I create a Switchboard and try to invite someone it
>> sends the join command and the invitation command all together and the
>> MSN server doesn't answer any of them. Here's the relevant bits of the
>> code I have:
>>
>> class Switchboard(msn.SwitchboardClient):
>>  def connectionMade(self):
>>       self.key = self.factory.key
>>       self.sessionID = self.factory.sessionID
>>       self.userHandle = self.factory.userHandle
>>       self.invite = self.factory.invite
>>
>>       msn.SwitchboardClient.connectionMade(self)
>>
>>       d = self.inviteUser(self.invite)
>>       d.addCallback(self.Invited)
>>
>>   def Invited(self, *args):
>>       print 'Running reply callback'
>>
>> And this is the ngrep stream after the XFR request
>>
>> # send transfer request
>> T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
>>  CHG 6 NLN..XFR 7 SB..
>>
>> # get transfer response
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..
>>
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  CHG 6 NLN 0..
>>
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..
>>
>> T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
>>  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
>> want to invite]..
>>
>> If I try to do the same process with pidgin for example, the stream
>> looks exactly the same except the USR and CAL command are on separate
>> packets, and the server responds to the USR command before the client
>> sends the CAL command.
>>
>> Can anyone help me out figuring this out? I know you can send more
>> than one command per packet, as seen in the first packet of the ngrep
>> stream I posted, so I don't see why it wouldn't work to send the USR
>> and CAL command together, but I suspect that not all commands may be
>> stuck together. I stuck a time.sleep(20) between the calling
>> msn.SwitchboardClient.connectionMade(self) and
>> self.inviteUser(self.invite) to see if it was a timing issue but what
>> happens is that the USR command gets buffered, and only when the
>> script tries to send the CAL command does the socket actually write it
>> out.
>
> The way to do this is to let the reactor do some I/O in between the
> calls.  Sleeping is almost the right idea (for debugging, at least),
> but you need to do it in a way that cooperates with the reactor.  Try
> putting the inviteUser call into a separate function and delaying its
> execution a bit:
>
>   def connectionMade(self):
>       ...
>       msn.SwitchboardClient.connectionMade(self)
>       reactor.callLater(1, self._doinvite)
>
>   def _doinvite(self):
>       d = self.inviteUser(self.invite)
>       d.addCallback(self.Invited)
>
> If this works, then you may have demonstrated that USR and CAL
> cannot be combined like this.  In that case, I'd say it's a bug
> in Twisted's MSN support - it's the protocol's job to know things
> like this, so the protocol should automatically buffer the CAL
> if it knows a USR is going to be sent with it.

Works like a charm. I've looked around for a way to solve this issue
without the need of the sleep, but I can't seem to find a way to tell
FileDescriptor to not buffer the call.

>>
>> Any help on this would be greatly appreciated, I've been digging
>> around the documentation and the code but I can't seem to figure out
>> why it's buffering the USR command and I don't know enough about the
>> MSN protocol to know which commands need a unique packet and which
>> ones can go with others.
>
> It'd be interesting to see if pidgin has code to specifically avoid
> combining USR and CAL (or USR and anything else).

I've looked at their code and it looks like they create a new
transaction when sending out the USR command, and then a new
transaction for each CAL. There aren't any comments or any specific
mention to avoid this issue so I'm not sure if it's just a coincidence
or if they are aware it.

In any case, I've file a bug about it: http://twistedmatrix.com/trac/ticket/3322

Regards,
Hermann K?ser
http://theragingche.com/
http://semicir.cl/user/hermzz

From buisson at enseirb.fr  Mon Jun 30 05:40:49 2008
From: buisson at enseirb.fr (=?ISO-8859-1?Q?R=E9mi_BUISSON?=)
Date: Mon, 30 Jun 2008 11:40:49 +0200
Subject: [Twisted-Python] [SIP]
Message-ID: <4868AA21.2040208@enseirb.fr>

Hi everyone,

I didn't succeed in using twisted.protocols.sip ?

Do you have a simple example for me ? It will be very nice ...

Thanks in advance !
-------------- next part --------------
A non-text attachment was scrubbed...
Name: buisson.vcf
Type: text/x-vcard
Size: 192 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080630/6f457c79/attachment.vcf 

From curtferguson at cfl.rr.com  Mon Jun 30 08:11:12 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Mon, 30 Jun 2008 08:11:12 -0400
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
In-Reply-To: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
References: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
Message-ID: <4868CD60.7050801@cfl.rr.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080630/295887f4/attachment.htm 

From nathan.stocks at gmail.com  Mon Jun 30 17:52:58 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 30 Jun 2008 15:52:58 -0600
Subject: [Twisted-Python] Returning a DeferredList?
Message-ID: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>

I regularly use the return values of deferreds to simulate synchronous
behaviour like this:

def handle_db_result(result):
   if ({some logic stuff}):
      return True
   else:
      return False

def check_db():
   d = {some db query that returns a deferred}
   d.addCallback(handle_db_result)
   return d

def main_func():
   if check_db():   # This eventually returns True or False
      # Do some stuff
   else:
      # Do some different stuff


So now I'm trying to do the same thing with DeferredList's, but
apparently the semantics aren't the same.  Here's some actual runnable
sample code trying to use the DeferredList:

from twisted.internet import reactor, defer

def callback_function(results):
   return "(--> This is the value that I want to get into retval! <--)"

def make_a_list():
   deferred1 = defer.Deferred()
   deferred2 = defer.Deferred()
   dl = defer.DeferredList([deferred1, deferred2])
   dl.addCallback(callback_function)
   deferred1.callback('one')
   deferred2.callback('two')
   return dl             # The crucial line!

def test():
   retval = make_a_list()
   print "retval is:", retval

reactor.callWhenRunning(test)
reactor.callLater(2.0, reactor.stop)
reactor.run()



The actual output of the above script is:

retval is: <DeferredList at 0x7a30a8  current result: '(--> This is
the value that I want to get into retval! <--)'>

Through some trial and error I found that if I change that "crucial
line" above to "return dl.result", then it appears to work how I like.
 Is that what I should be doing, or did I just get lucky in that
particular instance??

Also, I notice that if one of the deferred's errbacked, then the
DeferredList seems to errback as well.  It shouldn't do that according
to http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto7
... so I filed a bug (#3323).

~ Nathan



From terry at jon.es  Mon Jun 30 18:20:48 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 1 Jul 2008 00:20:48 +0200
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: Your message at 15:52:58 on Monday, 30 June 2008
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
Message-ID: <18537.23616.781117.722224@jon.es>

>>>>> "Nathan" == Nathan  <nathan.stocks at gmail.com> writes:

Nathan> I regularly use the return values of deferreds to simulate
Nathan> synchronous behaviour like this:

[snip]

Nathan> So now I'm trying to do the same thing with DeferredList's, but
Nathan> apparently the semantics aren't the same.  Here's some actual
Nathan> runnable sample code trying to use the DeferredList:

Hi Nathan

You're not using deferreds properly. In the simple/typical case, when you
call a function that returns a deferred, you will want to add (at least) a
callback to that deferred. The callback then gets called with the value
that is being passed down the callback chain.

Change your code to the below and it works.

Your original code appears to work only because you're testing a deferred
result in a Boolean context, which takes you to the true part of your
if.  You need to add call/errbacks to the deferred there too.

Terry

---

from twisted.internet import reactor, defer

def callback_function(results):
   return "(--> This is the value that I want to get into retval! <--)"

def make_a_list():
   deferred1 = defer.Deferred()
   deferred2 = defer.Deferred()
   dl = defer.DeferredList([deferred1, deferred2])
   dl.addCallback(callback_function)
   deferred1.callback('one')
   deferred2.callback('two')
   return dl

def test():
    def cb(val):
        print "retval is:", val
    make_a_list().addCallback(cb)

reactor.callWhenRunning(test)
reactor.callLater(2.0, reactor.stop)
reactor.run()



From nathan.stocks at gmail.com  Mon Jun 30 18:54:33 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 30 Jun 2008 16:54:33 -0600
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: <18537.23616.781117.722224@jon.es>
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
Message-ID: <96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>

On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
> You're not using deferreds properly. In the simple/typical case, when you
> call a function that returns a deferred, you will want to add (at least) a

I don't think that's true.  Jean-Paul was the one who told me to do it
that way in the first place:

http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html

If your theory was true, I would be getting garbage everywhere I
return (and use) complicated objects, and I'd be getting True
everywhere that I return booleans.

Though you may be right for DeferredLists, which is why I'm asking
here on the list...

~ Nathan



From terry at jon.es  Mon Jun 30 19:05:02 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 1 Jul 2008 01:05:02 +0200
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: Your message at 16:54:33 on Monday, 30 June 2008
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
	<96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
Message-ID: <18537.26270.204683.700465@jon.es>

>>>>> "Nathan" == Nathan  <nathan.stocks at gmail.com> writes:

Nathan> On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
>> You're not using deferreds properly. In the simple/typical case, when you
>> call a function that returns a deferred, you will want to add (at least) a

Nathan> I don't think that's true.  Jean-Paul was the one who told me to do
Nathan> it that way in the first place:

Nathan> http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html

Sorry, but that doesn't seem related - you may have misinterpreted what
Jean-Paul was saying.

Nathan> If your theory was true, I would be getting garbage everywhere I
Nathan> return (and use) complicated objects, and I'd be getting True
Nathan> everywhere that I return booleans.

I don't fully understand this last sentence. Try this:

    from twisted.internet import defer
    d = defer.Deferred()

    if d: print 'hey hey hey'

Python treats the deferred as true here. Exactly the same goes for your
original code:

    def check_db():
       d = {some db query that returns a deferred}
       d.addCallback(handle_db_result)
       return d

    def main_func():
       if check_db():   # This eventually returns True or False
          # Do some stuff
       else:
          # Do some different stuff

The return result of check_db is a deferred. If you test it with an 'if'
it's always going to be true.  If you do this

    def main_func():
       d = check_db()
       print d
       if d:
          # Do some stuff
       else:
          # Do some different stuff


You'll see that d is a deferred.

In both code examples you sent (the pseudo and the working) you are not
treating the return value of a function that returns a deferred as a
deferred. In one example you're testing it in an 'if' and in the other
you're printing it. You need to add a callback in both cases.

Terry



From andy at thecablelounge.com  Mon Jun 30 20:01:12 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Mon, 30 Jun 2008 20:01:12 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
Message-ID: <74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:33 PM,  <glyph at divmod.com> wrote:
> I don't know the rest of the Cambridge Cabal's level of interest but I'd
> definitely like to sort this stuff out.  (I promise to take minutes and file
> tickets for those of you not present.  And we should have an IRC conference
> as well.)

Exarkun is off for 10 days from Thursday arvo.  What do you think of a
pitted cage death match Wednesday (July, 2nd) evening?  No one leaves
until only one person lives, or there's consensus on an interface :)

Jml, I'm guessing this'd be your Thursday morning.

If this is ok - what's the best place to meet?

cheers,
Andy.



From jml at mumak.net  Mon Jun 30 21:06:34 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Jul 2008 11:06:34 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>
Message-ID: <d06a5cd30806301806j4b676168if1f6404f7fc5cdea@mail.gmail.com>

On Tue, Jul 1, 2008 at 10:01 AM, Andy Gayton <andy at thecablelounge.com> wrote:
> On Sat, Jun 28, 2008 at 6:33 PM,  <glyph at divmod.com> wrote:
>> I don't know the rest of the Cambridge Cabal's level of interest but I'd
>> definitely like to sort this stuff out.  (I promise to take minutes and file
>> tickets for those of you not present.  And we should have an IRC conference
>> as well.)
>
> Exarkun is off for 10 days from Thursday arvo.  What do you think of a
> pitted cage death match Wednesday (July, 2nd) evening?  No one leaves
> until only one person lives, or there's consensus on an interface :)
>
> Jml, I'm guessing this'd be your Thursday morning.
>

Yeah, that would be a good time for me, as long at it's after 2200 UTC.

jml



From ldanielburr at mac.com  Mon Jun 30 22:02:21 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Mon, 30 Jun 2008 21:02:21 -0500
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: <96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
	<96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
Message-ID: <op.udlbx7y53oj628@l-daniel-burrs-computer.local>

On Mon, 30 Jun 2008 17:54:33 -0500, Nathan <nathan.stocks at gmail.com> wrote:

> On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
>> You're not using deferreds properly. In the simple/typical case, when  
>> you
>> call a function that returns a deferred, you will want to add (at  
>> least) a
>
> I don't think that's true.  Jean-Paul was the one who told me to do it
> that way in the first place:
>
> http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html
>

Terry (hi Terry) is correct here.  Your interpretation of Jean-Paul
Calderone's message is flawed, although I certainly understand how
the misinterpretation could occur.  There's a big difference between
the AMP example in that thread, and the example code you posted to
this thread.

> If your theory was true, I would be getting garbage everywhere I
> return (and use) complicated objects, and I'd be getting True
> everywhere that I return booleans.
>

Not necessarily.  I suspect that your real code isn't working the way
your posted example does.

The bottom line is that the code you posted to this thread does not
produce the synchronous behavior that you think it is providing, so
it might be more helpful to provide an example of your real code,
in order for people here to provide you with some better answers.

Hope this helps,

L. Daniel Burr



From adelagon at gmail.com  Sun Jun  1 20:41:33 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 2 Jun 2008 10:41:33 +0800
Subject: [Twisted-Python] How to detect dead client connections in twisted
Message-ID: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>

I've been using xmlstream for quite sometime now and I noticed one such
problem where my server doesn't detect clients that went to hardware
shutdown without closing the socket. I also reproduced it using a simple
twisted TCP server:

#!/usr/bin/python
from twisted.internet import protocol
from twisted.internet import reactor

class EchoProtocol(protocol.Protocol):
    def __init__(self):
        pass

    def connectionMade(self):
        print "Client Connected Detected!"

    def connectionLost(self, reason):
        print "Client Connection Lost!"

    def dataReceived(self, data):
        self.transport.write(data)


factory = protocol.Factory()
factory.protocol = EchoProtocol
reactor.listenTCP(8000, factory)
reactor.run()

Using a different machine, telnet to the echo server and then shut down the
computer (without exiting telnet). It seems that the connectionLost function
doesn't get called. I even had an XMPP account appeared online on our XMPP
server for almost three days even though I shut down the PC hosting my
client. Should we implement a Hearbeat functionality? Thank you in advance!

Alvin Delagon

-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080602/494bf05c/attachment.html>

From adelagon at gmail.com  Mon Jun  2 03:21:08 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Mon, 2 Jun 2008 17:21:08 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
Message-ID: <7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>

I just recently discovered that it's a TCP half-open socket scenario that
can be remedied by monitoring client heartbeats. This is not twisted related
issue. Thanks anyway. :)

Alvin Delagon

On Mon, Jun 2, 2008 at 10:41 AM, Alvin Delagon <adelagon at gmail.com> wrote:

> I've been using xmlstream for quite sometime now and I noticed one such
> problem where my server doesn't detect clients that went to hardware
> shutdown without closing the socket. I also reproduced it using a simple
> twisted TCP server:
>
> #!/usr/bin/python
> from twisted.internet import protocol
> from twisted.internet import reactor
>
> class EchoProtocol(protocol.Protocol):
>     def __init__(self):
>         pass
>
>     def connectionMade(self):
>         print "Client Connected Detected!"
>
>     def connectionLost(self, reason):
>         print "Client Connection Lost!"
>
>     def dataReceived(self, data):
>         self.transport.write(data)
>
>
> factory = protocol.Factory()
> factory.protocol = EchoProtocol
> reactor.listenTCP(8000, factory)
> reactor.run()
>
> Using a different machine, telnet to the echo server and then shut down the
> computer (without exiting telnet). It seems that the connectionLost function
> doesn't get called. I even had an XMPP account appeared online on our XMPP
> server for almost three days even though I shut down the PC hosting my
> client. Should we implement a Hearbeat functionality? Thank you in advance!
>
> Alvin Delagon
>
> --
> http://www.alvinatorsplayground.blogspot.com/




-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080602/b23ac501/attachment.html>

From jo.vermeulen at uhasselt.be  Mon Jun  2 05:40:11 2008
From: jo.vermeulen at uhasselt.be (Jo Vermeulen)
Date: Mon, 2 Jun 2008 13:40:11 +0200
Subject: [Twisted-Python] Creating a protocol-agnostic chatbot with
	Twisted words
In-Reply-To: <1211817741.17583.45.camel@zwerf>
References: <236462830805260349y60cf7ed1obeec3106d30461b2@mail.gmail.com>
	<7a01f6c00805260537r228058eai713548a4083d71ff@mail.gmail.com>
	<236462830805260603j1a7c249boc542f140676d70b3@mail.gmail.com>
	<1211817741.17583.45.camel@zwerf>
Message-ID: <236462830806020440s5d19ce35kce9fdc95bdfada24@mail.gmail.com>

On Mon, May 26, 2008 at 6:02 PM, Ralph Meijer <twisted at ralphm.ik.nu> wrote:

> On Mon, 2008-05-26 at 15:03 +0200, Jo Vermeulen wrote:
> > [..]
> >
> > I had another question about the Jabber example (xmpp_client.py) in
> > Twisted words. When I quit the application with Ctrl+C, it throws an
> > exception:
> >
> > [..]
>
> I haven't seen that behavior before, but I can confirm this happens. I
> poked around a bit with the example. It seems that the socket is closed
> before its factory is shut down. It might be that the reactor shutdown
> procedure has changed, so I think this behavior is the result of a bug,
> either in the example or somewhere else. It needs more investigation, so
> it would be nice if you could file a ticket for it.
>

Done: http://twistedmatrix.com/trac/ticket/3270


> > Is there any way to modify this example so that it stops gracefully
> > when Ctrl+C is pressed? Embedding the main script code in a try-except
> > statement that catches KeyboardInterrupt doesn't help since Twisted
> > seems to catch all exceptions itself.
>
> I don't know of a good solution, at the moment. If the above bug gets
> resolved, you shouldn't need to do anything beyond that.
>

OK thanks!

-- Jo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080602/5db61924/attachment.html>

From miguel.filho at gmail.com  Mon Jun  2 12:13:37 2008
From: miguel.filho at gmail.com (Miguel Filho)
Date: Mon, 2 Jun 2008 15:13:37 -0300
Subject: [Twisted-Python] exceptions.SystemError: unknown opcode
In-Reply-To: <20080514160127.6859.1992045789.divmod.quotient.63442@ohm>
References: <394cf6840805140839h2af01f80madfc49c558219165@mail.gmail.com>
	<20080514160127.6859.1992045789.divmod.quotient.63442@ohm>
Message-ID: <394cf6840806021113l1f38c361of6575d34c3753000@mail.gmail.com>

On Wed, May 14, 2008 at 1:01 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> Encountering this after the process has been running for a long time
> suggests a memory corruption issue to me.  The fact that it happened
> only once while the process is still running and correctly servicing
> events further suggests that the corruption was somehow transient, a
> somewhat unusual occurance to say the least. :)

Just to bring a conclusion to this topic, the problem is actually bad memory.

On the same machine a Postfix daemon has just died, checking the logs:
May 28 08:58:31 friends postfix/master[2933]: ess
May 28 08:58:31 friends postfix/master[2933]:
May 28 08:58:31 friends postfix/smtpd[6301]: connect from unknown[59.95.173.59]
May 28 08:58:31 friends postfix/master[2933]: ess
May 28 08:58:31 friends postfix/master[2933]: terminating on signal 11

>From 'man 7 signal':
SIGSEGV      11       Core    Invalid memory reference

A Dovecot daemon used to suddenly die on the same box too.

Regards,

Miguel



From mailing_lists at evotex.ch  Tue Jun  3 00:42:46 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 03 Jun 2008 08:42:46 +0200
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
Message-ID: <4844E7E6.7020907@evotex.ch>


Alvin Delagon wrote:
>
> I just recently discovered that it's a TCP half-open socket scenario 
> that can be remedied by monitoring client heartbeats. This is not 
> twisted related issue. Thanks anyway. :)
>
> Alvin Delagon
>

Just a question, could setting the tcp keepalive feature on the server 
side (not sure if that is possible), would that make the server detect 
that the connection is dead/half-open?

Gabriel



From daedalus at eigenmagic.com  Tue Jun  3 01:03:57 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 03 Jun 2008 17:03:57 +1000
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
Message-ID: <1212476637.8984.57.camel@localhost>

Greetings twisted gurus!

I'm hoping someone with a better algorithmic brain than I could offer
some advice on a good way to do something in a twisty/pythonic way.

The pseudocode for what I want to do is:

for item in generator_that_fetches_rows_from_database:
	...
	do_stuff()
	...

where generator_that_fetches_rows_from_database is an object that uses
enterprise.adbapi (or anything else) to fetch rows from a database and
return them to the for..in.. loop.

Now, I'm probably looking at this from too much of a blocking code
perspective, rather than setting up a Deferred() chain of some sort, but
rather than hacking something functional but ugly, it occurs to me that
someone is bound to have done this before.

It would be nice if the database accessing object could fetch rows as
required, via cursors or whatever, rather than sucking an entire table
into memory and then doling out one row at a time... which is what I've
got working at the moment.

The morbidly curious can recoil in horror at the current code in the
SQLIterator class here:
http://modipy.seafelt.com/browser/trunk/lib/modipy/iterator.py

Any free clues?

-- 
Justin Warren <daedalus at eigenmagic.com>




From adelagon at gmail.com  Tue Jun  3 01:21:57 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 15:21:57 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <4844E7E6.7020907@evotex.ch>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
Message-ID: <7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>

Yes it supposed to be handled by the tcp_keepalive itself (as I assumed).
The weird thing was that we had this configuration:

Ubuntu Linux Server 2.6.15-26
tcp_keepalive_time 7200
tcp_keepalive_probes 9
tcp_keepalive_intvl 75

I have an XMPP client last sent a packet to the server at May 29 15:57:25
telling that it will enter an idle state. On May 30 approx 08:00:00 I shut
down my PC which hosts my XMPP client thus causing a half-opened state. The
next day (17:41:11) while checking the logs, its still in half-opened state
and my server still thinks that I'm online. It seems that tcp_keepalive
kernel feature that's supposed to run every 2 hours didn't kick in.

---
Alvin Delagon

On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
wrote:

>
> Alvin Delagon wrote:
>
>>
>> I just recently discovered that it's a TCP half-open socket scenario that
>> can be remedied by monitoring client heartbeats. This is not twisted related
>> issue. Thanks anyway. :)
>>
>> Alvin Delagon
>>
>>
> Just a question, could setting the tcp keepalive feature on the server side
> (not sure if that is possible), would that make the server detect that the
> connection is dead/half-open?
>
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080603/3e933359/attachment.html>

From maarten at treewalker.org  Tue Jun  3 01:27:46 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 3 Jun 2008 09:27:46 +0200
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <200806030927.53741.maarten@treewalker.org>

On Tuesday 03 June 2008, Justin Warren wrote:

> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
>
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.

I think decorating the method with @defer.inlineCallbacks and code like this 
might do the trick:

for d in generator_that_fetches_rows_from_database:
	try:
		row = yield d
	except SomeError:
		...
	else:
		do_stuff(row)

Depending on how you want to handle errors, you could put the "try" 
statement outside the loop.

The generator_that_fetches_rows_from_database does not yield actual rows, 
but a sequence of Deferreds, each of which delivers one row in its 
callback.

This is all untested, so it might contain a fatal flaw, but I hope it's 
useful.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080603/0e2796d9/attachment.sig>

From adelagon at gmail.com  Tue Jun  3 02:09:34 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 16:09:34 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
Message-ID: <7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>

Problem solved! I digged through the twisted.internet source codes and found
this facility:

 def setTcpKeepAlive(self, enabled):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE,
enabled)

I modifying the simple twisted server:

#!/usr/bin/python
from twisted.internet import protocol
from twisted.internet import reactor

class EchoProtocol(protocol.Protocol):
    def __init__(self):
        pass

    def connectionMade(self):
        print "Client Connected Detected!"
        ### enable keepalive
        self.transport.setTcpKeepAlive(1)

    def connectionLost(self, reason):
        print "Client Connection Lost!"

    def dataReceived(self, data):
        self.transport.write(data)


factory = protocol.Factory()
factory.protocol = EchoProtocol
reactor.listenTCP(8000, factory)
reactor.run()

Now the server is aware of keepalive timeouts now. Might as well use it in
my xmpp server. :)


---
Alvin Delagon


On Tue, Jun 3, 2008 at 3:21 PM, Alvin Delagon <adelagon at gmail.com> wrote:

> Yes it supposed to be handled by the tcp_keepalive itself (as I assumed).
> The weird thing was that we had this configuration:
>
> Ubuntu Linux Server 2.6.15-26
> tcp_keepalive_time 7200
> tcp_keepalive_probes 9
> tcp_keepalive_intvl 75
>
> I have an XMPP client last sent a packet to the server at May 29 15:57:25
> telling that it will enter an idle state. On May 30 approx 08:00:00 I shut
> down my PC which hosts my XMPP client thus causing a half-opened state. The
> next day (17:41:11) while checking the logs, its still in half-opened state
> and my server still thinks that I'm online. It seems that tcp_keepalive
> kernel feature that's supposed to run every 2 hours didn't kick in.
>
> ---
> Alvin Delagon
>
>
> On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti <mailing_lists at evotex.ch>
> wrote:
>
>>
>> Alvin Delagon wrote:
>>
>>>
>>> I just recently discovered that it's a TCP half-open socket scenario that
>>> can be remedied by monitoring client heartbeats. This is not twisted related
>>> issue. Thanks anyway. :)
>>>
>>> Alvin Delagon
>>>
>>>
>> Just a question, could setting the tcp keepalive feature on the server
>> side (not sure if that is possible), would that make the server detect that
>> the connection is dead/half-open?
>>
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> http://www.alvinatorsplayground.blogspot.com/
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080603/0d0d9842/attachment.html>

From mailing_lists at evotex.ch  Tue Jun  3 06:10:45 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Tue, 03 Jun 2008 14:10:45 +0200
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>	<4844E7E6.7020907@evotex.ch>	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
Message-ID: <484534C5.70802@evotex.ch>

Yes, I found that in the meantime, but I tried it and it didn't work. 
Sometimes when the connection is closed abruptly, the server doesn't 
detect the lose. I looked at the oscar protocol implementation and they 
have an application level keepalive, thus I though maybe it had to be 
done that way and the server verifies every x seconds or minutes if it 
hasn't received anything from a client, it removes it from it's 
connected list. So Does anyone know how to deal with this problem?

Gabriel

Alvin Delagon wrote:
> Problem solved! I digged through the twisted.internet source codes and 
> found this facility:
>
>  def setTcpKeepAlive(self, enabled):
>         self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 
> enabled)
>
> I modifying the simple twisted server:
>
> #!/usr/bin/python
> from twisted.internet import protocol
> from twisted.internet import reactor
>
> class EchoProtocol(protocol.Protocol):
>     def __init__(self):
>         pass
>
>     def connectionMade(self):
>         print "Client Connected Detected!"
>         ### enable keepalive
>         self.transport.setTcpKeepAlive(1)
>
>     def connectionLost(self, reason):
>         print "Client Connection Lost!"
>
>     def dataReceived(self, data):
>         self.transport.write(data)
>
>
> factory = protocol.Factory()
> factory.protocol = EchoProtocol
> reactor.listenTCP(8000, factory)
> reactor.run()
>
> Now the server is aware of keepalive timeouts now. Might as well use 
> it in my xmpp server. :)
>
>
> ---
> Alvin Delagon
>
>
> On Tue, Jun 3, 2008 at 3:21 PM, Alvin Delagon <adelagon at gmail.com 
> <mailto:adelagon at gmail.com>> wrote:
>
>     Yes it supposed to be handled by the tcp_keepalive itself (as I
>     assumed). The weird thing was that we had this configuration:
>
>     Ubuntu Linux Server 2.6.15-26
>     tcp_keepalive_time 7200
>     tcp_keepalive_probes 9
>     tcp_keepalive_intvl 75
>
>     I have an XMPP client last sent a packet to the server at May 29
>     15:57:25 telling that it will enter an idle state. On May 30
>     approx 08:00:00 I shut down my PC which hosts my XMPP client thus
>     causing a half-opened state. The next day (17:41:11) while
>     checking the logs, its still in half-opened state and my server
>     still thinks that I'm online. It seems that tcp_keepalive kernel
>     feature that's supposed to run every 2 hours didn't kick in.
>
>     ---
>     Alvin Delagon
>
>
>     On Tue, Jun 3, 2008 at 2:42 PM, Gabriel Rossetti
>     <mailing_lists at evotex.ch> wrote:
>
>
>         Alvin Delagon wrote:
>
>
>             I just recently discovered that it's a TCP half-open
>             socket scenario that can be remedied by monitoring client
>             heartbeats. This is not twisted related issue. Thanks
>             anyway. :)
>
>             Alvin Delagon
>
>
>         Just a question, could setting the tcp keepalive feature on
>         the server side (not sure if that is possible), would that
>         make the server detect that the connection is dead/half-open?
>
>         Gabriel
>
>         _______________________________________________
>         Twisted-Python mailing list
>         Twisted-Python at twistedmatrix.com
>         <mailto:Twisted-Python at twistedmatrix.com>
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
>     -- 
>     http://www.alvinatorsplayground.blogspot.com/
>
>
>
>
> -- 
> http://www.alvinatorsplayground.blogspot.com/
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From itamar at itamarst.org  Tue Jun  3 06:58:26 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Jun 2008 08:58:26 -0400
Subject: [Twisted-Python] Idiom for database access within
	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <1212497906.13279.3.camel@localhost.localdomain>

On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
> Greetings twisted gurus!
> 
> I'm hoping someone with a better algorithmic brain than I could offer
> some advice on a good way to do something in a twisty/pythonic way.
> 
> The pseudocode for what I want to do is:
> 
> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
> 
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.

runInteraction is your friend:

def getData(txn, key):
    # this runs in thread
    txn.execute("SELECT item FROM table WHERE key = :key", [key])
    return [l[o] for l in txn.fetchall()]

def gotItems(items):
    # this runs in Twisted thread
    for item in items:
        # etc...

dbpool.runInteraction(getData, 23).addCallback(gotItems)

Once you've gotten the list down to the Twisted thread you may find
twisted.internet.task.coiterate useful.




From itamar at itamarst.org  Tue Jun  3 07:00:27 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 03 Jun 2008 09:00:27 -0400
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <484534C5.70802@evotex.ch>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
	<484534C5.70802@evotex.ch>
Message-ID: <1212498027.13279.6.camel@localhost.localdomain>

On Tue, 2008-06-03 at 14:10 +0200, Gabriel Rossetti wrote:
> Yes, I found that in the meantime, but I tried it and it didn't work. 
> Sometimes when the connection is closed abruptly, the server doesn't 
> detect the lose. I looked at the oscar protocol implementation and they 
> have an application level keepalive, thus I though maybe it had to be 
> done that way and the server verifies every x seconds or minutes if it 
> hasn't received anything from a client, it removes it from it's 
> connected list. So Does anyone know how to deal with this problem?

Application level pings are the only way to go if you want quick
detection of timeouts, yes. You could do that with xmlstream by sending
a no-op command that expects a response every few minutes.




From adelagon at gmail.com  Tue Jun  3 07:17:36 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Tue, 3 Jun 2008 21:17:36 +0800
Subject: [Twisted-Python] Re: How to detect dead client connections in
	twisted
In-Reply-To: <1212498027.13279.6.camel@localhost.localdomain>
References: <7a01f6c00806011941m577a32cs399cd9de63e1173a@mail.gmail.com>
	<7a01f6c00806020221u2480698j70775b282f224123@mail.gmail.com>
	<4844E7E6.7020907@evotex.ch>
	<7a01f6c00806030021u24ba15a4ifb5659f4689a3401@mail.gmail.com>
	<7a01f6c00806030109m5d028edbga06d54ae794df36c@mail.gmail.com>
	<484534C5.70802@evotex.ch>
	<1212498027.13279.6.camel@localhost.localdomain>
Message-ID: <7a01f6c00806030617h14c44d8dh7c1d32b4f6a4d3b8@mail.gmail.com>

My initial tests when enabling the TCP keepalive were successful. I've
reduced my tcp_keepalive_time for 30secs instead of 2hours (7200secs) for
testing. I'll update this thread if my problem goes back. :)


---
Alvin Delagon

On Tue, Jun 3, 2008 at 9:00 PM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Tue, 2008-06-03 at 14:10 +0200, Gabriel Rossetti wrote:
> > Yes, I found that in the meantime, but I tried it and it didn't work.
> > Sometimes when the connection is closed abruptly, the server doesn't
> > detect the lose. I looked at the oscar protocol implementation and they
> > have an application level keepalive, thus I though maybe it had to be
> > done that way and the server verifies every x seconds or minutes if it
> > hasn't received anything from a client, it removes it from it's
> > connected list. So Does anyone know how to deal with this problem?
>
> Application level pings are the only way to go if you want quick
> detection of timeouts, yes. You could do that with xmlstream by sending
> a no-op command that expects a response every few minutes.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080603/4036da0a/attachment.html>

From p.mayers at imperial.ac.uk  Tue Jun  3 11:10:13 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 03 Jun 2008 18:10:13 +0100
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <1212497906.13279.3.camel@localhost.localdomain>
References: <1212476637.8984.57.camel@localhost>
	<1212497906.13279.3.camel@localhost.localdomain>
Message-ID: <48457AF5.2020705@imperial.ac.uk>

Itamar Shtull-Trauring wrote:
> On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
>> Greetings twisted gurus!
>>
>> I'm hoping someone with a better algorithmic brain than I could offer
>> some advice on a good way to do something in a twisty/pythonic way.
>>
>> The pseudocode for what I want to do is:
>>
>> for item in generator_that_fetches_rows_from_database:
>> 	...
>> 	do_stuff()
>> 	...
>>
>> where generator_that_fetches_rows_from_database is an object that uses
>> enterprise.adbapi (or anything else) to fetch rows from a database and
>> return them to the for..in.. loop.
> 
> runInteraction is your friend:

Sure, but that's exactly what the OP didn't want; doing a bulk fetch 
from the SQL (which yes will be non-blocking for the most part)

I think he wanted:

def query(txn):
   txn.execute("...")
   while True:
     rs = txn.fetchone()
     if blah:
         continue
     if foo:
         transform data
     yield data



@defer.inlineCallbacks
def sqlQuery():
   deferred_iter = runInteraction(query)
   for def in deferred_iter:
     row = yield def
     # do a thing with the row e.g. push it to an Athena page

i.e. the function that runs inside the thread pool to be able to yield 
values, and the function that runs in the reactor to be able to iterate 
through them in a deferred-compatible fashion.

AFAIK there is no such thing, which is a shame because for *really* huge 
queries it has the potential to significantly reduce memory usage.

On a not-very related issue, it would be highly useful IMHO for




From exarkun at divmod.com  Tue Jun  3 11:51:55 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 3 Jun 2008 13:51:55 -0400
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <48457AF5.2020705@imperial.ac.uk>
Message-ID: <20080603175155.4714.675195439.divmod.quotient.5160@ohm>

On Tue, 03 Jun 2008 18:10:13 +0100, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>Itamar Shtull-Trauring wrote:
>>On Tue, 2008-06-03 at 17:03 +1000, Justin Warren wrote:
>>>Greetings twisted gurus!
>>>
>>>I'm hoping someone with a better algorithmic brain than I could offer
>>>some advice on a good way to do something in a twisty/pythonic way.
>>>
>>>The pseudocode for what I want to do is:
>>>
>>>for item in generator_that_fetches_rows_from_database:
>>>         ...
>>>         do_stuff()
>>>         ...
>>>
>>>where generator_that_fetches_rows_from_database is an object that uses
>>>enterprise.adbapi (or anything else) to fetch rows from a database and
>>>return them to the for..in.. loop.
>>
>>runInteraction is your friend:
>
>Sure, but that's exactly what the OP didn't want; doing a bulk fetch from 
>the SQL (which yes will be non-blocking for the most part)
>
>I think he wanted:
>
>def query(txn):
>   txn.execute("...")
>   while True:
>     rs = txn.fetchone()
>     if blah:
>         continue
>     if foo:
>         transform data
>     yield data
>
>
>
>@defer.inlineCallbacks
>def sqlQuery():
>   deferred_iter = runInteraction(query)
>   for def in deferred_iter:
>     row = yield def
>     # do a thing with the row e.g. push it to an Athena page
>
>i.e. the function that runs inside the thread pool to be able to yield 
>values, and the function that runs in the reactor to be able to iterate 
>through them in a deferred-compatible fashion.

It should be straightforward to implement this with DeferredQueue.

Jean-Paul



From manlio_perillo at libero.it  Tue Jun  3 12:14:23 2008
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 03 Jun 2008 20:14:23 +0200
Subject: [Twisted-Python] Idiom for database access
	within	iterator/generator?
In-Reply-To: <1212476637.8984.57.camel@localhost>
References: <1212476637.8984.57.camel@localhost>
Message-ID: <484589FF.7020703@libero.it>

Justin Warren ha scritto:
> Greetings twisted gurus!
> 
> I'm hoping someone with a better algorithmic brain than I could offer
> some advice on a good way to do something in a twisty/pythonic way.
> 
> The pseudocode for what I want to do is:
> 
> for item in generator_that_fetches_rows_from_database:
> 	...
> 	do_stuff()
> 	...
> 
> where generator_that_fetches_rows_from_database is an object that uses
> enterprise.adbapi (or anything else) to fetch rows from a database and
> return them to the for..in.. loop.
> 

This can be done, but you need a "pure" asynchronous PostgreSQL client.
Here is an implementation in Twisted:
http://hg.mperillo.ath.cx/twisted/pglib

Each row is processed using the IRowConsumer interface.

To keep it simple, a callback function is called for each row received 
from the backend.

Using Python 2.5 generators you can (probabily) achieve what you want.


 > [...]



Manlio Perillo



From grickert at coldstorage.com  Tue Jun  3 15:23:57 2008
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 3 Jun 2008 17:23:57 -0400
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>

I'm running a rather involved simulation using twisted, and it would be
preferable if I could get the reactor to just drop me into the
interpreter on any exception so I could examine the current state of
things.  

I set os.environ['PYTHONINSPECT'] = '1', but the reactor seems to trap
any exceptions and just merrily carry on - logging my tracebacks to a
file, but continuing to run - modifying the current state of things and
making it harder to track down bugs.

 

Is there an easy way to prevent the reactor from trapping exceptions?

 

Thanks,

Gerrat 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080603/17fbfbb3/attachment.html>

From exarkun at divmod.com  Tue Jun  3 15:37:00 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 3 Jun 2008 17:37:00 -0400
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
Message-ID: <20080603213700.4714.1089822502.divmod.quotient.5224@ohm>

On Tue, 3 Jun 2008 17:23:57 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>I'm running a rather involved simulation using twisted, and it would be
>preferable if I could get the reactor to just drop me into the
>interpreter on any exception so I could examine the current state of
>things.

Unit tests are a great way to squash bugs quickly and permanently.

>I set os.environ['PYTHONINSPECT'] = '1', but the reactor seems to trap
>any exceptions and just merrily carry on - logging my tracebacks to a
>file, but continuing to run - modifying the current state of things and
>making it harder to track down bugs.
>
>Is there an easy way to prevent the reactor from trapping exceptions?
>

No, there's not.  However, you might be interested in the --debug option
to twistd, which will drop you into pdb when an unhandled exception is
raised.

Jean-Paul



From itamar at itamarst.org  Tue Jun  3 15:40:15 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 3 Jun 2008 17:40:15 -0400 (EDT)
Subject: [Twisted-Python] How do I get the reactor to stop on an exception
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F02E14295@ccs-ex01.coldstorage.com>
Message-ID: <42588.63.107.91.99.1212529215.squirrel@webmail.zoteca.com>

> I'm running a rather involved simulation using twisted, and it would be
> preferable if I could get the reactor to just drop me into the
> interpreter on any exception so I could examine the current state of
> things.
>

When using twistd or trial, you can simply use the debug command-line
option for that (-b). Without those,
twisted.python.failure.setDebugMode(True) or something, I forget the exact
invocation.

Both of these only go into debugger on Failure creation, but that's
essentially any exception that goes into a Deferred or into the logging
system, so virtually any exception you're likely to care about.




From grickert at coldstorage.com  Tue Jun  3 17:39:24 2008
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 3 Jun 2008 19:39:24 -0400
Subject: [Twisted-Python] RE: How do I get the reactor to stop on an
	exception
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F02E142A5@ccs-ex01.coldstorage.com>

Thanks for the quick responses, Jean-Paul & Itamar.

 

It looks like turning my app into a twistd plugin seems to be the
preferred method (well, quashing bugs quickly and permanently with Unit
Tests is obviously the preferred method :o) !) 

 

Itamar, 

>When using twistd or trial, you can simply use the debug command-line

>option for that (-b). Without those,

>twisted.python.failure.setDebugMode(True) or something, I forget the
exact

>invocation.

 

There is a twisted.python.failure.startDebugMode(), but it doesn't seem
to stop the reactor on exceptions (I'm not directly using Deferred's, so
maybe that's the reason).

 

I'm mostly using Twisted for it's robust Networking protocols (ok, and a
bit of scheduling), and I can't say enough good things about how well it
works.

I also know Twisted has many more parts to it than the small subset I'm
using, but it seems unfortunate to me that including any part of Twisted
in a program means that all exceptions are trapped -whether or not the
exception has anything to do with Twisted.

 

Regular Python (sans Twisted) doesn't trap exceptions, but I'm sure
there are many good reasons for doing so with Twisted (you don't have to
list them - I'm not being facetious).  I just think it would be useful
to be able to set a flag somewhere to stop this behaviour.  

 

I will definitely remove this after, but adding a 'raise' statement to
the except clause of the RunUntilCurrent method of ReactorBase in
base.py seems to do exactly what I want.  

...would zero percent be on the high side for the chances of having a
Twisted developer make some sort of flag available that would turn this
on? (or equivalent functionality)

...just askin...

 

 

Thanks again for your help/advice guys,

Gerrat

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080603/67c3eef9/attachment.html>

From ellisonbg.net at gmail.com  Wed Jun  4 10:27:48 2008
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Wed, 4 Jun 2008 10:27:48 -0600
Subject: [Twisted-Python] Using twisted to manage processes
Message-ID: <6ce0ac130806040927w581c80a4y14a555b4bda2f509@mail.gmail.com>

Hi,

We have been using Twisted for a long time with IPython and we are
needing a nice general and cross platform way of managing processes
(spawning, sending signals, etc.).  I am aware of Twisted's process
management API and it looks like it would fit the bill rather well for
us.  But, I am wondering how cross platform it is.  We need to be able
to write code that works on Linux, OS X, AIX and Win32.  More
specifically, I know 0 about process control on Win32 and want to make
sure that Windows users will be able to use this stuff.  So, will the
process management stuff work on Win32?  Are there any issues I need
to be aware of on Win32 that the Twisted API won't quite handle?

Thanks,

Brian



From warner at lothar.com  Wed Jun  4 16:56:35 2008
From: warner at lothar.com (Brian Warner)
Date: Wed, 4 Jun 2008 15:56:35 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.2.8 released
Message-ID: <20080604155635.4c4cfeff@lothar.com>

I've just released Foolscap-0.2.8 . This is a minor bugfix release,
which also updates the setuptools-visible dependencies in a way that
makes it slightly easier for other projects (like Tahoe) to declare
that they need foolscap's cryptographic properties. The full release
notes are attached below.

Foolscap is a Twisted-friendly remote object protocol, a descendant of
Perspective Broker, with improved security properties, third-party
references, adaptable serialization, and other useful features. Please
visit http://foolscap.lothar.com/trac for more details.

have a groovy day,
 -Brian



* Release 0.2.8 (04 Jun 2008)

** Compatibility: exactly the same as 0.2.6

** setuptools dependencies updated

Foolscap (when built with setuptools) now uses the "extras_require" feature
to declare that it needs pyOpenSSL if you want to use the
"secure_connections" feature. This makes easy_install easier to use in
projects that depend upon Foolscap (and also insist upon using secure
connections): they do not need to declare a dependency on pyOpenSSL
themselves, instead they declare a dependency on
"Foolscap[secure_connections]". See the following documentation for more
details:
http://peak.telecommunity.com/DevCenter/setuptools#declaring-extras-optional-features-with-their-own-dependencies

** New RemoteReference.getPeer() method

The new rref.getPeer() method will return address information about the far
end of the connection, allowing you to determine their IP address and port
number. This may be useful for debugging or diagnostic purposes.

** Minor bugs fixed

Tub.registerReference() with both name= and furlFile= arguments now works
even when the furlFile= already exists.

Tubs which have been shutdown now give more useful error messages when you
(incorrectly) try to use them again. Previously a bug caused them to emit a
TypeError.



From exarkun at divmod.com  Wed Jun  4 17:29:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 4 Jun 2008 19:29:15 -0400
Subject: [Twisted-Python] Using twisted to manage processes
In-Reply-To: <6ce0ac130806040927w581c80a4y14a555b4bda2f509@mail.gmail.com>
Message-ID: <20080604232915.4714.1393866679.divmod.quotient.5654@ohm>

On Wed, 4 Jun 2008 10:27:48 -0600, Brian Granger <ellisonbg.net at gmail.com> wrote:
>Hi,
>
>We have been using Twisted for a long time with IPython and we are
>needing a nice general and cross platform way of managing processes
>(spawning, sending signals, etc.).  I am aware of Twisted's process
>management API and it looks like it would fit the bill rather well for
>us.  But, I am wondering how cross platform it is.  We need to be able
>to write code that works on Linux, OS X, AIX and Win32.  More
>specifically, I know 0 about process control on Win32 and want to make
>sure that Windows users will be able to use this stuff.  So, will the
>process management stuff work on Win32?  Are there any issues I need
>to be aware of on Win32 that the Twisted API won't quite handle?

Twisted supports processes on Windows.  Not all of the arguments to
spawnProcess are supported, such as the arbitrary file descriptor
option, but for basic process management it works alright.  It's not
as efficient on Windows as on POSIX, but it also doesn't suffer the
SIGCHLD issues POSIX suffers from. :)

As long as you're a bit careful and test your code on Windows, you
should do alright.

Processes on OS X work almost as well as they do on Linux.  I believe
there is still a problem with PTYs, most likely due to a kernel bug.
It is, however, quite rare.  Linux doesn't really have any known issues.
I've never tested on AIX, and AIX isn't a "supported" platform - meaning
we have no buildslave for it, and regular testing of any kind is not
done on it.  It may work, or it may not.  If you can supply a buildslave,
we can try to make it a supported platform.

Jean-Paul



From duncan.mcgreggor at gmail.com  Wed Jun  4 17:51:04 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 4 Jun 2008 18:51:04 -0500
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<601AAF59-48A0-4511-AF57-8EE70E6BF62F@bubblehouse.org>
	<20080530190351.25821.450829887.divmod.xquotient.9038@joule.divmod.com>
	<4327dfbd0805301714r102cf744id242b4d873cda37d@mail.gmail.com>
	<20080531192715.25821.819126709.divmod.xquotient.9056@joule.divmod.com>
	<4327dfbd0805311351k50498f63ke887c099d135f780@mail.gmail.com>
Message-ID: <4327dfbd0806041651x7bea618awabd648826d1103fa@mail.gmail.com>

On Sat, May 31, 2008 at 3:51 PM, Duncan McGreggor
<duncan.mcgreggor at gmail.com> wrote:
> On Sat, May 31, 2008 at 2:27 PM,  <glyph at divmod.com> wrote:
>> On 12:14 am, duncan.mcgreggor at gmail.com wrote:
>>>
>>> Man, I think you totally hit it on the nose with your "tx" suggestion:
>>> tx.snmp, tx.storage. I maintain the Twisted-JSONRPC package, and I
>>> will change the namespace from twisted.web.jsonrpc to tx.jsonrpc. Not
>>> only does it have a cool sound, entails "TwistedmatriX", is associated
>>> with "transmit", but it could also stand for "Twisted eXtensions" (in
>>> the "add on" sense).
>>
>> Thanks for the encouragement :) but a minor point: I think it's important
>> that these packages use 'py' in the same way most projects do, since sharing
>> namespaces in Python is such a pain.  i.e. in pygame you do 'import pygame',
>> in pygtk you do 'import gtk'.  The existence of the separate 'py' library /
>> namespace complicates matters somewhat, but that's a single entity that has
>> nothing to do with 99% of the PyFoo projects out there.
>
> Hrm. I really like the idea of the community sharing a namespace. But
> maybe that's just my software hippy/commune side coming out...
>
>> So these names would be 'txjsonrpc', 'txsnmp', 'txstorage', et. al.
>
> As a name, I don't know what appeals to me more... txJSONRPC,
> TxJSONRPC, txjsonrpc. As a namespace, I really do like tx.jsonrpc ;-)

I've been playing with this for a couple days now, and as the only way
(that I know of) to support a large, shared namespace in python is to
require the use of setuptools, and given that so many object to its
use, I've bailed on tx.jsonrpc and have simply used txjsonrpc and
txJSON-RPC in my project.

d



From duncan.mcgreggor at gmail.com  Wed Jun  4 17:55:23 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Wed, 4 Jun 2008 18:55:23 -0500
Subject: [Twisted-Python] Twisted Community Code
Message-ID: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>

Inspired by the discussion from the recent thread about community
code, a concise string couplet to represent Twisted, and trademarks,
I've created a space on Launchpad for Twisted Community Code:
  https://launchpad.net/tx

Anyone can create a project and add it to this "super project" --
hopefully, they will only do so if their code is based on and uses
Twisted :-)

Also: I'd like to thank Phil Christensen for taking a leadership role
in this new space. Thanks Phil!

I'll be blogging about this soon, but I wanted to give everyone on
this list first notice :-)

d



From duncan.mcgreggor at gmail.com  Wed Jun  4 18:51:07 2008
From: duncan.mcgreggor at gmail.com (duncan.mcgreggor at gmail.com)
Date: Wed, 4 Jun 2008 19:51:07 -0500
Subject: [Twisted-Python] Re: Twisted Community Code
In-Reply-To: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>
References: <4327dfbd0806041655u2309da4fo99bd1572b406e186@mail.gmail.com>
Message-ID: <4327dfbd0806041751w12df1626i199cd3817e279e5f@mail.gmail.com>

On 6/4/08, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> Inspired by the discussion from the recent thread about community
> code, a concise string couplet to represent Twisted, and trademarks,
> I've created a space on Launchpad for Twisted Community Code:
>   https://launchpad.net/tx
>
> Anyone can create a project and add it to this "super project" --
> hopefully, they will only do so if their code is based on and uses
> Twisted :-)
>
> Also: I'd like to thank Phil Christensen for taking a leadership role
> in this new space. Thanks Phil!
>
> I'll be blogging about this soon, but I wanted to give everyone on
> this list first notice :-)
>
> d

The blog posts are up:
  http://labs.twistedmatrix.com/2008/06/place-for-everyone.html

And the tongue-and-cheek version:
  http://oubiwann.blogspot.com/2008/06/tx-theory.html

d



From josef.robert.novak at gmail.com  Wed Jun  4 23:49:44 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Thu, 5 Jun 2008 14:49:44 +0900
Subject: [Twisted-Python] CLOSE_WAIT (debian)
Message-ID: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>

Hi,
  I have a fairly simple twisted daemon based on the starpy protocol,
which I am running in combination with the asterisk pbx.  I sometimes
this daemon accumulates CLOSE_WAIT connections in a rather
unpredictable fashion, which when stacked up eventually cause the
daemon to stop responding to new connections.

My understanding is that there is no default timeout for the
CLOSE_WAIT socket state, as per the relevant rfc standard, and that in
any netstat declares that CLOSE_WAIT indicates that the remote end of
the connection has shut down, and that it is now up to the local
application to finish closing the socket.

The implication is that there is something wrong with my application
code, however before posting the whole thing I'd like to know if there
are any cannonical reasons for this kind of issue being raised in
twisted applications.  For instance is this likely to occur when one
uses defertothread for blocking third party code, and the child
process spawned to handle this returns to find the parent process
already gone? ( e.g. my twisted app spawns for a new call from
asterisk, but the call instance is destroyed for some reason before
the defertothread that it executes returns?)

I'm having trouble reliably causing the issue, but it continues to pop
up, so any general information about regarding debugging twisted
applications would be of help.

Thanks!



From josef.robert.novak at gmail.com  Thu Jun  5 02:25:25 2008
From: josef.robert.novak at gmail.com (Josef Novak)
Date: Thu, 5 Jun 2008 17:25:25 +0900
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
Message-ID: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>

Hi, I've been digging around a bit more and it seems like it might be
advisable for me to use the d.setTimeout(TIMEOUT) function for my
deferToThread objects.  I see from the docstrings that this is
deprecated, and that I should rely on the timeout mechanism supplied
by the API I'm using, however that doesn't seem to suggest an
immediate solution.  I dug up the following reference, but is it
really such a bad idea to use d.setTimout(TIMEOUT)?
http://twistedmatrix.com/pipermail/twisted-python/2004-April/007536.html

Thanks!

2008/6/5 Josef Novak <josef.robert.novak at gmail.com>:
> Hi,
>  I have a fairly simple twisted daemon based on the starpy protocol,
> which I am running in combination with the asterisk pbx.  I sometimes
> this daemon accumulates CLOSE_WAIT connections in a rather
> unpredictable fashion, which when stacked up eventually cause the
> daemon to stop responding to new connections.
>
> My understanding is that there is no default timeout for the
> CLOSE_WAIT socket state, as per the relevant rfc standard, and that in
> any netstat declares that CLOSE_WAIT indicates that the remote end of
> the connection has shut down, and that it is now up to the local
> application to finish closing the socket.
>
> The implication is that there is something wrong with my application
> code, however before posting the whole thing I'd like to know if there
> are any cannonical reasons for this kind of issue being raised in
> twisted applications.  For instance is this likely to occur when one
> uses defertothread for blocking third party code, and the child
> process spawned to handle this returns to find the parent process
> already gone? ( e.g. my twisted app spawns for a new call from
> asterisk, but the call instance is destroyed for some reason before
> the defertothread that it executes returns?)
>
> I'm having trouble reliably causing the issue, but it continues to pop
> up, so any general information about regarding debugging twisted
> applications would be of help.
>
> Thanks!
>



From glyph at divmod.com  Thu Jun  5 04:04:08 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 05 Jun 2008 10:04:08 -0000
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
	<710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
Message-ID: <20080605100408.25821.1710250854.divmod.xquotient.9227@joule.divmod.com>

On 08:25 am, josef.robert.novak at gmail.com wrote:
>Hi, I've been digging around a bit more and it seems like it might be
>advisable for me to use the d.setTimeout(TIMEOUT) function for my
>deferToThread objects.  I see from the docstrings that this is
>deprecated, and that I should rely on the timeout mechanism supplied
>by the API I'm using, however that doesn't seem to suggest an
>immediate solution.  I dug up the following reference, but is it
>really such a bad idea to use d.setTimout(TIMEOUT)?
>http://twistedmatrix.com/pipermail/twisted- 
>python/2004-April/007536.html

Yes.  Double-yes for Deferreds returned from deferToThread.

So, first: if you have deferred a function to a thread, there is nothing 
generic you can do to stop it.  If that blocking function specifically 
provides an API to stop it from other threads, then you can stop it.

Second, setTimeout was *never* a good idea.  It's been deprecated for 
long enough that it may be removed at any time; and probably will be, 
soon.  As it is implemented, you will pretty much always see a traceback 
if the timeout actually fires.  Unless the API is specifically written 
to accommodate this style of timeouts (and none in Twisted are) the API 
which is expecting to callback or errback a Deferred will instead 
encounter an `AlreadyCalledError`, since the timeout has invoked it 
already.

Your issue with CLOSE_WAIT sockets could be due to registering producers 
which have no further data to produce.  Does that sound like something 
you, or starpy, might be doing?



From itamar at itamarst.org  Thu Jun  5 06:19:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 05 Jun 2008 08:19:58 -0400
Subject: [Twisted-Python] Re: CLOSE_WAIT (debian)
In-Reply-To: <710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
References: <710ff8630806042249q5abf77fyf67c98e7f13968c@mail.gmail.com>
	<710ff8630806050125l219f5f8br2b15b1525df7ff4b@mail.gmail.com>
Message-ID: <1212668398.13279.10.camel@localhost.localdomain>

On Thu, 2008-06-05 at 17:25 +0900, Josef Novak wrote:
> Hi, I've been digging around a bit more and it seems like it might be
> advisable for me to use the d.setTimeout(TIMEOUT) function for my
> deferToThread objects.

What code are you running in the thread, BTW?




From mrsalty0 at gmail.com  Thu Jun  5 08:31:42 2008
From: mrsalty0 at gmail.com (J Davis)
Date: Thu, 5 Jun 2008 10:31:42 -0400
Subject: [Twisted-Python] Re: DeferredList + LoopingCall
In-Reply-To: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>
References: <a26b6f030805311334j2413eb66g1ad641b62321e1ca@mail.gmail.com>
Message-ID: <a26b6f030806050731lb4bb744jadbe7b9926f86df1@mail.gmail.com>

As expected, the answer was pretty simple....

def returnDeferredList():
    dl = defer.DeferredList([defer.Deferred(), defer.Deferred(),
defer.Deferred()])
    dl.addCallback(handleResult)
    dl.addErrback(handleError)
    return dl

loop = task.LoopingCall(returnDeferredList)


On Sat, May 31, 2008 at 4:34 PM, J Davis <mrsalty0 at gmail.com> wrote:

> Hello,
>
> I want to group several calls to a function() that returns a deferred into
> a DeferredList so that I can add
> callbacks that will fire once each call to function() has returned.
> Furthermore, I want to arrange it so that this process repeats every X
> seconds.
> The problem I'm having is understanding how I can combine the concept of a
> DeferredList with task.LoopingCall in this scenario. Or is that even the
> right approach to take?
>
> Thanks,
> -Jake
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080605/a9006e1c/attachment.html>

From mike at mkp.ca  Thu Jun  5 08:58:10 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 5 Jun 2008 10:58:10 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
Message-ID: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>

I'm late to the party, but if people are flinging pennies around,
here's two of mine.

Instead of lawyering up the Twisted franchise, maybe you could instead
use the DivMod brand to bless things that you want to be able to be
authoritative about.  There's already a sort of informal understanding
of territoriality; "This DivMod stuff is ours. You can use it if you
recognize that we make a living off this and we'll defend it.  This
other Twisted stuff is everyone's, and we're just custodians."
Bringing the law into our comfortable community w/out taking an
arms-length approach (eg, give the trademark to a not-for-profit) is
kind of alienating.  But maybe I exaggerate.

Mike.



From glyph at divmod.com  Thu Jun  5 09:10:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 05 Jun 2008 15:10:00 -0000
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
Message-ID: <20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>

On 02:58 pm, mike at mkp.ca wrote:
>(eg, give the trademark to a not-for-profit)

That is exactly what we intend to do.  I thought I mentioned it in the 
initial post; if not, sorry about that.  The whole point of having a 
defensible trademark is having something that the SFC can do something 
about :).



From phil at bubblehouse.org  Thu Jun  5 09:11:42 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 5 Jun 2008 11:11:42 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
Message-ID: <1C31139F-DBB0-4AE3-9E83-30A8B8112FD8@bubblehouse.org>

On Jun 5, 2008, at 10:58 AM, Mike Pelletier wrote:
> I'm late to the party, but if people are flinging pennies around,
> here's two of mine.
>
> Instead of lawyering up the Twisted franchise, maybe you could instead
> use the DivMod brand to bless things that you want to be able to be
> authoritative about.  There's already a sort of informal understanding
> of territoriality; "This DivMod stuff is ours. You can use it if you
> recognize that we make a living off this and we'll defend it.  This
> other Twisted stuff is everyone's, and we're just custodians."
> Bringing the law into our comfortable community w/out taking an
> arms-length approach (eg, give the trademark to a not-for-profit) is
> kind of alienating.  But maybe I exaggerate.

This is a feeling a few other people have expressed. It's  
understandable to feel like this is "lawyering up" the community, but  
it's important to be pragmatic about the environment we're in right  
now. Free software/open source has made a lot of ground in the last  
few years, but I think it's fair to say that the GPL/MIT/etc licenses  
still have yet to be truly tested.

For some projects, like, say Firefox, the threat of potential  
infringers is almost nonexistent, since practically *everyone* knows  
what firefox is, and that would be a huge community for a potential  
infringer to piss off. Nonetheless, the Mozilla foundation has several  
trademark registrations.

Also, did you catch the part where this trademark *would* be held by a  
non-profit? If you check out glyph's first post to this thread, the  
Twisted trademarks would be formally held by the Software Freedom  
Conservancy.

-phil



From mike at mkp.ca  Thu Jun  5 09:49:20 2008
From: mike at mkp.ca (Mike Pelletier)
Date: Thu, 5 Jun 2008 11:49:20 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<273093d80806050758r3f117b8g7fe68e69ff7ed072@mail.gmail.com>
	<20080605151000.25821.1552831719.divmod.xquotient.9235@joule.divmod.com>
Message-ID: <273093d80806050849r244234f0gb78d3abfe10223bf@mail.gmail.com>

On Thu, Jun 5, 2008 at 11:10 AM,  <glyph at divmod.com> wrote:
> On 02:58 pm, mike at mkp.ca wrote:
>> (eg, give the trademark to a not-for-profit)

> That is exactly what we intend to do.  I thought I mentioned it in the
> initial post; if not, sorry about that.  The whole point of having a
> defensible trademark is having something that the SFC can do something about
> :).

So DivMod would not have any influence whatsoever over who is
prosecuted?  That sounds more reasonable.  Sorry, I can't seem to make
myself go past this kind of thread without saying something 100%
useless.  It's a disease of some kind.



From big_tyo at inf.its-sby.edu  Fri Jun  6 04:55:22 2008
From: big_tyo at inf.its-sby.edu (big_tyo at inf.its-sby.edu)
Date: Fri, 6 Jun 2008 17:55:22 +0700 (ICT)
Subject: [Twisted-Python] Re: How to detect dead client
Message-ID: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>

where is this tcp_keepalive_time located? is it on twisted source code or
python library?




From adelagon at gmail.com  Fri Jun  6 06:38:22 2008
From: adelagon at gmail.com (Alvin Delagon)
Date: Fri, 6 Jun 2008 20:38:22 +0800
Subject: [Twisted-Python] Re: How to detect dead client
In-Reply-To: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>
References: <53480.10.126.11.155.1212749722.squirrel@202.46.129.82>
Message-ID: <7a01f6c00806060538n14ee3361k2089e3d656ec7321@mail.gmail.com>

Hello,

It's actually a setsockopt() call to enable tcp_keepalive on your
application. It's located in twisted/internet/tcp.py starting from line 431.
:)

def getTcpKeepAlive(self):
        return operator.truth(self.socket.getsockopt(socket.SOL_SOCKET,
                                                     socket.SO_KEEPALIVE))

def setTcpKeepAlive(self, enabled):
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE,
enabled)

Twisted uses the built-in python socket library.

---
Alvin Delagon

On Fri, Jun 6, 2008 at 6:55 PM, <big_tyo at inf.its-sby.edu> wrote:

> where is this tcp_keepalive_time located? is it on twisted source code or
> python library?
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://www.alvinatorsplayground.blogspot.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080606/894926b7/attachment.html>

From peter at sabaini.at  Fri Jun  6 10:21:45 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 18:21:45 +0200
Subject: [Twisted-Python] pyprocessing in twisted
Message-ID: <200806061821.46163.peter@sabaini.at>

Hello list,

probably a dumb question, but is it possible / a good idea to use 
pyProcessing[1] in a Twisted application? 

More specifically, I'd like to run a Twisted process A that accepts data from 
the network and sends it down to a process B through a processing.Queue(). 

Is that wise? Or should I just stick with reactor.spawnProcess() and 
communicate with ProcessProtocol?

Sorry for the newb-ness,
peter.

[1] http://pyprocessing.berlios.de/



From exarkun at divmod.com  Fri Jun  6 10:24:57 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 6 Jun 2008 12:24:57 -0400
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061821.46163.peter@sabaini.at>
Message-ID: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>

On Fri, 6 Jun 2008 18:21:45 +0200, Peter Sabaini <peter at sabaini.at> wrote:
>Hello list,
>
>probably a dumb question, but is it possible / a good idea to use
>pyProcessing[1] in a Twisted application?
>
>More specifically, I'd like to run a Twisted process A that accepts data from
>the network and sends it down to a process B through a processing.Queue().
>
>Is that wise? Or should I just stick with reactor.spawnProcess() and
>communicate with ProcessProtocol?

Why are you interested in doing this?

Jean-Paul



From peter at sabaini.at  Fri Jun  6 10:37:41 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 18:37:41 +0200
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
Message-ID: <200806061837.41794.peter@sabaini.at>

On Friday 06 June 2008 18:24:57 Jean-Paul Calderone wrote:
> On Fri, 6 Jun 2008 18:21:45 +0200, Peter Sabaini <peter at sabaini.at> wrote:
> >Hello list,
> >
> >probably a dumb question, but is it possible / a good idea to use
> >pyProcessing[1] in a Twisted application?
> >
> >More specifically, I'd like to run a Twisted process A that accepts data
> > from the network and sends it down to a process B through a
> > processing.Queue().
> >
> >Is that wise? Or should I just stick with reactor.spawnProcess() and
> >communicate with ProcessProtocol?
>
> Why are you interested in doing this?

I'd like to isolate code running in "process B" -- for now this is just a 
prototype, but later on it could well be code I have not much control over, 
so I don't want it to interact bad with Twisted. And I want to be able to 
signal it etc. separately from the Twisted process. PyProcessing seemed like 
an easy way to do this. 

peter.

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at divmod.com  Fri Jun  6 10:49:36 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 06 Jun 2008 16:49:36 -0000
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061837.41794.peter@sabaini.at>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
Message-ID: <20080606164936.25821.1744732819.divmod.xquotient.9272@joule.divmod.com>


On 04:37 pm, peter at sabaini.at wrote:
>I'd like to isolate code running in "process B" -- for now this is just 
>a
>prototype, but later on it could well be code I have not much control 
>over,
>so I don't want it to interact bad with Twisted. And I want to be able 
>to
>signal it etc. separately from the Twisted process. PyProcessing seemed 
>like
>an easy way to do this.

It's doubtful that it will work.  There have been a couple of attempts 
at fixing this ticket:

    http://twistedmatrix.com/trac/ticket/733

I've been working on it most recently, and although there will be 
probably be a fix merged that works with popen sometime soon, I don't 
know if that will be enough for pyprocessing.



From general at eepatents.com  Fri Jun  6 10:50:58 2008
From: general at eepatents.com (Ed Suominen)
Date: Fri, 06 Jun 2008 09:50:58 -0700
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061821.46163.peter@sabaini.at>
References: <200806061821.46163.peter@sabaini.at>
Message-ID: <48496AF2.1060804@eepatents.com>

Take a look at my AsynQueue project 
(http://foss.eepatents.com/AsynQueue), which includes provisions for 
this very thing in the asynqueue.workers module. A specific 
implementation for asynchronous cluster processing is available in my 
(you guessed it) AsynCluster project 
(http://foss.eepatents.com/AsynQueue). I'm using it regularly to run a 
complex statistical model on a 10-CPU cluster here.

Best regards, Ed

Peter Sabaini wrote:
> Hello list,
> 
> probably a dumb question, but is it possible / a good idea to use 
> pyProcessing[1] in a Twisted application? 
> 
> More specifically, I'd like to run a Twisted process A that accepts data from 
> the network and sends it down to a process B through a processing.Queue(). 
> 
> Is that wise? Or should I just stick with reactor.spawnProcess() and 
> communicate with ProcessProtocol?
> 
> Sorry for the newb-ness,
> peter.
> 
> [1] http://pyprocessing.berlios.de/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 



From ldanielburr at mac.com  Fri Jun  6 10:51:19 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 06 Jun 2008 11:51:19 -0500
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <200806061837.41794.peter@sabaini.at>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
Message-ID: <op.ucb6ftly3oj628@l-daniel-burrs-computer.local>

Hi Peter,


On Fri, 06 Jun 2008 11:37:41 -0500, Peter Sabaini <peter at sabaini.at> wrote:

[snip]

>
> I'd like to isolate code running in "process B" -- for now this is just a
> prototype, but later on it could well be code I have not much control  
> over,
> so I don't want it to interact bad with Twisted. And I want to be able to
> signal it etc. separately from the Twisted process. PyProcessing seemed  
> like
> an easy way to do this.
>
> peter.


I'd definitely advise sticking with reactor.spawnProcess; using that,
along with a ProcessProtocol implementation, is going to allow you
to integrate more smoothly with the rest of your Twisted app.

The catch here is that, depending upon your needs, you may have tp
write your own ProcessProtocol, specific to your app; if you want
something that provides more "out-of-box" functionality, I might
suggest you look at ampoule, https://launchpad.net/ampoule/, which
gives you a process pool, and handles most of the low-level stuff.

Hope this helps,

L. Daniel Burr



From peter at sabaini.at  Fri Jun  6 11:17:17 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Fri, 6 Jun 2008 19:17:17 +0200
Subject: [Twisted-Python] pyprocessing in twisted
In-Reply-To: <op.ucb6ftly3oj628@l-daniel-burrs-computer.local>
References: <20080606162457.4714.1793504446.divmod.quotient.6307@ohm>
	<200806061837.41794.peter@sabaini.at>
	<op.ucb6ftly3oj628@l-daniel-burrs-computer.local>
Message-ID: <200806061917.17217.peter@sabaini.at>

Thanks for the all the suggestions!

/me is going into exploring mode
peter.

On Friday 06 June 2008 18:51:19 L. Daniel Burr wrote:
> Hi Peter,
>
>
> On Fri, 06 Jun 2008 11:37:41 -0500, Peter Sabaini <peter at sabaini.at> wrote:
>
> [snip]
>
> > I'd like to isolate code running in "process B" -- for now this is just a
> > prototype, but later on it could well be code I have not much control
> > over,
> > so I don't want it to interact bad with Twisted. And I want to be able to
> > signal it etc. separately from the Twisted process. PyProcessing seemed
> > like
> > an easy way to do this.
> >
> > peter.
>
> I'd definitely advise sticking with reactor.spawnProcess; using that,
> along with a ProcessProtocol implementation, is going to allow you
> to integrate more smoothly with the rest of your Twisted app.
>
> The catch here is that, depending upon your needs, you may have tp
> write your own ProcessProtocol, specific to your app; if you want
> something that provides more "out-of-box" functionality, I might
> suggest you look at ampoule, https://launchpad.net/ampoule/, which
> gives you a process pool, and handles most of the low-level stuff.
>
> Hope this helps,
>
> L. Daniel Burr
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From peter at sabaini.at  Sat Jun  7 06:17:43 2008
From: peter at sabaini.at (Peter Sabaini)
Date: Sat, 7 Jun 2008 14:17:43 +0200
Subject: [Twisted-Python] "core docs" pdf --> 404
Message-ID: <200806071417.43671.peter@sabaini.at>

Just FYI -- the "Core Documentation" PDF gives me a 404 
http://twistedmatrix.com/projects/core/documentation/howto/book.pdf




From exarkun at divmod.com  Sat Jun  7 07:16:15 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 7 Jun 2008 09:16:15 -0400
Subject: [Twisted-Python] "core docs" pdf --> 404
In-Reply-To: <200806071417.43671.peter@sabaini.at>
Message-ID: <20080607131615.4714.1578953314.divmod.quotient.6607@ohm>

On Sat, 7 Jun 2008 14:17:43 +0200, Peter Sabaini <peter at sabaini.at> wrote:
>Just FYI -- the "Core Documentation" PDF gives me a 404
>http://twistedmatrix.com/projects/core/documentation/howto/book.pdf
>

Please file a ticket in the issue tracker.  Reports made on the mailing list
will be ignored or forgotten.  Also, please don't report 404s without also
reporting where they are linked _from_.

Jean-Paul



From Marcin.Kasperski at softax.com.pl  Sat Jun  7 12:24:32 2008
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Sat, 07 Jun 2008 20:24:32 +0200
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But how
	should I migrate?
Message-ID: <87lk1hm7bz.fsf@platon.mekk.waw.pl>


Long time ago I wrote some code using twisted.protocols.telnet.Telnet.
Now I get:

   DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
   deprecated.  See twisted.conch.telnet for the current, supported
   API.

The problem is ... I do not know how to migrate. Bare substitution
of twisted.conch.telnet instead of twisted.protocols.telnet does not
work (my code, which subclassed Telnet and provided welcomeMessage,
checkUserAndPass, and loggedIn, simply is not called).

I checked for docs, but twisted.conch has only some docs about SSH
clients, and by looking only at the code I can't figure what should I
do. I suspect that I should use AuthenticatingTelnetProtocol but I do
not understand how should I do it (what is this portal, why should
I return some other protocol).

I grepped through all examples for this class, but found nothing.

So: how should one migrate twisted.telnet.Telnet to
twisted.conch.telnet? Does there exist any example of simple telnet
server?




From exarkun at divmod.com  Sat Jun  7 21:28:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 7 Jun 2008 23:28:44 -0400
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But how
	should I migrate?
In-Reply-To: <87lk1hm7bz.fsf@platon.mekk.waw.pl>
Message-ID: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>

On Sat, 07 Jun 2008 20:24:32 +0200, Marcin Kasperski <marcin.kasperski at softax.com.pl> wrote:
>
>Long time ago I wrote some code using twisted.protocols.telnet.Telnet.
>Now I get:
>
>   DeprecationWarning: As of Twisted 2.1, twisted.protocols.telnet is
>   deprecated.  See twisted.conch.telnet for the current, supported
>   API.
>
>The problem is ... I do not know how to migrate. Bare substitution
>of twisted.conch.telnet instead of twisted.protocols.telnet does not
>work (my code, which subclassed Telnet and provided welcomeMessage,
>checkUserAndPass, and loggedIn, simply is not called).
>
>I checked for docs, but twisted.conch has only some docs about SSH
>clients, and by looking only at the code I can't figure what should I
>do. I suspect that I should use AuthenticatingTelnetProtocol but I do
>not understand how should I do it (what is this portal, why should
>I return some other protocol).
>
>I grepped through all examples for this class, but found nothing.
>
>So: how should one migrate twisted.telnet.Telnet to
>twisted.conch.telnet? Does there exist any example of simple telnet
>server?
>

http://twistedmatrix.com/pipermail/twisted-python/2007-June/015623.html
may help somewhat.  There are also some examples in doc/conch/examples/
and on the website.

twisted.conch.telnet.Telnet is a much more complete telnet implementation.
It also lacks the application-specific features that were present in
twisted.protocols.telnet.Telnet, like welcomeMessage and loggedIn.

AuthenticatingTelnetProtocol is vaguely like the old Telnet class, but it
is intended more as an example of what kind of things you can do, rather
than a robust base class for whatever your application requires.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun  7 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 08 Jun 2008 04:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1212897907.71.804745072@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080608/f2af86e0/attachment.html>

From curtferguson at cfl.rr.com  Sun Jun  8 06:04:11 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Sun, 08 Jun 2008 08:04:11 -0400
Subject: [Twisted-Python] twisted.protocols.telnet is deprecated. But
	how	should I migrate?
In-Reply-To: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>
References: <20080608032844.4714.1815305479.divmod.quotient.6829@ohm>
Message-ID: <484BCABB.7070409@cfl.rr.com>

Jean-Paul Calderone wrote:
> On Sat, 07 Jun 2008 20:24:32 +0200, Marcin Kasperski
> <marcin.kasperski at softax.com.pl> wrote:
>>
>> So: how should one migrate twisted.telnet.Telnet to
>> twisted.conch.telnet? Does there exist any example of simple telnet
>> server?
>>
>
> http://twistedmatrix.com/pipermail/twisted-python/2007-June/015623.html
> may help somewhat.  There are also some examples in doc/conch/examples/
> and on the website.
>
> twisted.conch.telnet.Telnet is a much more complete telnet
> implementation.
> It also lacks the application-specific features that were present in
> twisted.protocols.telnet.Telnet, like welcomeMessage and loggedIn.
>
> AuthenticatingTelnetProtocol is vaguely like the old Telnet class, but it
> is intended more as an example of what kind of things you can do, rather
> than a robust base class for whatever your application requires.
>
> Jean-Paul
This link is the information I've been trying to find for two weeks. :) 
Thanks for posting it, and to the OP for posting the right question. 
Trying to learn twisted and python at the same time.  So far I've got a
server that will allow chatting via SSH or TCP, I've been attempting to
get telnet negotiation working right on the straight TCP side, this
should help a lot.





From exarkun at divmod.com  Mon Jun  9 08:24:14 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 9 Jun 2008 10:24:14 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: 0
Message-ID: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>

Hello all,

On Friday I finished the first two weeks of funded Twisted development,
I'm happy to say the two weeks went great and I got a lot accomplished.

The very, very high-level summary is that I started off by emptying the
Twisted review queue and then moved on to finishing some twisted.web tasks
which had been started previously by other developers and then abandoned
for lack of time or interest or whatever other reason.  All told, I did 35
reviews on 29 tickets and did development on 8 others.  I also spent some
time cleaning duplicate or invalid tickets out of the Twisted tracker.  This
collectively resulted in 32 tickets being closed over the past two weeks.

Here are the tickets closed as a direct result of this work:

#1789 - twisted.conch.test.test_filetransfer.TestOurServerOurClient.testOpenFileAttributes (and perhaps others) leaks file descriptors
#3213 - twisted.conch.ssh.filetransfer.FileTransferServer leaks file descriptors
#3203 - PortableGtkReactor is broken
#3098 - filepath.FilePath.walk loops forever if there is a symlink pointing back up the file tree
#3033 - mkdir(a); mkdir(a) logs an unhandled error in SFTP
#3054 - Small error in the documentation for pb
#2881 - Add a variable in twisted.python.runtime to check for vista
#2374 - testOpenSSLBuffering fails intermittently on a dapper machine (running in vmware) because it uses reactor.iterate
#2918 - intermittent twisted.test.test_ssl.SpammyTLSTestCase.testUnTLS failure on OS X
#3210 - test_pb.NewCredTestCase is insanely long and causes some intermittent failures
#3119 - trial leaks memory/objects/something
#3052 - twistd logging options needs to be tested
#3266 - Provide tools for managing new deprecation policy
#3191 - in manhole in gnome-terminal_ lines longer than the terminal is wide result in excessive scrolling and duplication
#3105 - symlink support and docstrings in filepath.FilePath.copyTo/moveTo
#3267 - Typo in the Asynchronous Programming howto
#3184 - Trial minimal reporter prints a negative run time in summary
#1410 - spawnProcess on unix doesn't handle case where os.fork fails cleanly
#2305 - twisted/internet/process.py leaks file descriptors when os.fork() raises
#3272 - sorting the --profile output in trial
#3259 - Improved some error messagge in reflect.py
#2713 - trial -u can fail doctests on second pass
#2698 - Build Bug on Cygwin
#914 - xmlrpc.QueryFactory failed to catch some exceptions
#1057 - Incorrect and misleading arg name msSinceEpoch
#2017 - t.w.client.getPage returning ConnectionDone: Connection was closed cleanly error
#1412 - ExpatError on xmlrpc client connection close
#393 - [PATCH] HTTP Basic Auth based guard
#1108 - web2 needs SOAP support
#909 - microdom getElementsByTagName
#687 - web.client needs documentation and/or data-checking for method argument
#165 - [PATCH]Multiple header with same name support in http

Of particular note, I think, are the following:

#3213: Prior to this fix, the Twisted SFTP server would leak any file
descriptors not closed before the end of an SFTP session.

#3203: This fix restores Gtk2 support on Windows.  We have also set up
a Gtk2 Windows builder which is now passing all but one test.

#1410: Prior to this fix, an error when calling os.fork() would cause
reactor.spawnProcess to leak any pipes it opened and potentially to
continue running in the main process with the wrong UID/GID.

#165: This adds support for multiple values for each header to the
twisted.web server.  Previously only the last value received would
be made available to applications.

Six more tickets are waiting to be reviewed and will hopefully be closed
soon.  I want to take this opportunity to thank everyone who worked on
tickets I reviewed over the past couple weeks.  Twisted development is a
collaborative process and I wouldn't have made nearly as big a dent without
all of their help.  I also want to thank Thomas Hervé in particular, who
authored a lot of the code I reviewed and also (if I kept track properly)
did every review of code I submitted over the the past two weeks.

In addition to doing work on tickets from the tracker, I also addressed two
other issues with Twisted's buildbot.  First, I took one of the compact build
result views and split it into a supported-only view and an everything view
to make it easier to find out the status of recent builds on supported
platforms.  These two views are linked from the main Twisted buildbot page,
http://buildbot.twistedmatrix.com/ - see the "Latest builds" link.  Second,
I improved the error reporting for the setuptools-enabled builder, making it
easier to track down the cause of some setuptools-related problems.

Thanks to the SFC (<http://conservancy.softwarefreedom.org/>) and all of
the sponsors  (<http://twistedmatrix.com/trac/wiki/TSF/FoundingSponsors>)
who made this possible.

Jean-Paul



From tnelson at onresolve.com  Tue Jun 10 11:35:12 2008
From: tnelson at onresolve.com (Trent Nelson)
Date: Tue, 10 Jun 2008 18:35:12 +0100
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
Message-ID: <6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>

> AFAIK if someone infringes you're trademark you are obliged to enforce
> your trademark or lose it, the afore mentioned two people Glyph is not
> happy with who are using the word 'Twisted' would need to receive a
> C&D off the bat. Does Twisted Labs have the resources to put into
> maintaining their trademark?

I found almost the exact opposite to what you're stating here when I looked into acquiring trademarks for some company stuff a while back.  You're not obliged to do anything; it simply provides you with a legal grounding if you wish to challenge a party that you believe has infringed upon your trademark (assuming it's to your detriment; you wouldn't pursue a 'Twisted Fruits', a company down the street that brands their produce with a big 'Twisted' sticker).

It's up to you to enforce your trademark, there's no governing body that does it; such a body only comes in to play to arbitrate disputes.  I've never heard of an obligation to enforce your trademark "or lose it" as you put it.

> Timothy J Stebbing


        Trent.

From phil at bubblehouse.org  Tue Jun 10 12:09:01 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 10 Jun 2008 14:09:01 -0400
Subject: [Twisted-Python] suggestions for naming to help us preserve a
	Twisted trademark
In-Reply-To: <6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>
References: <20080529231515.25821.417586878.divmod.xquotient.8878@joule.divmod.com>
	<972281650805291725g35cc3e9drb2fa2a4bc61ecb7f@mail.gmail.com>
	<d06a5cd30805291843l58eebca9m1b87969ee07b165b@mail.gmail.com>
	<972281650805291916q54abe58aqe53ffd1d0c691182@mail.gmail.com>
	<6167796BFEB5D0438720AC212E89A6B007872743@exchange.onresolve.com>
Message-ID: <68DF277D-8FA2-44EC-BFD9-336DF0E2731E@bubblehouse.org>

On Jun 10, 2008, at 1:35 PM, Trent Nelson wrote:
>> AFAIK if someone infringes you're trademark you are obliged to  
>> enforce
>> your trademark or lose it, the afore mentioned two people Glyph is  
>> not
>> happy with who are using the word 'Twisted' would need to receive a
>> C&D off the bat. Does Twisted Labs have the resources to put into
>> maintaining their trademark?
>
> I found almost the exact opposite to what you're stating here when I  
> looked into acquiring trademarks for some company stuff a while  
> back.  You're not obliged to do anything; it simply provides you  
> with a legal grounding if you wish to challenge a party that you  
> believe has infringed upon your trademark (assuming it's to your  
> detriment; you wouldn't pursue a 'Twisted Fruits', a company down  
> the street that brands their produce with a big 'Twisted' sticker).
>
> It's up to you to enforce your trademark, there's no governing body  
> that does it; such a body only comes in to play to arbitrate  
> disputes.  I've never heard of an obligation to enforce your  
> trademark "or lose it" as you put it.

IANAL, but I did read a lot about this on slashdot ;-)...

When such a dispute occurs, you have to prove that you've been  
performing due diligence in protecting your trademark. I don't think  
it's necessary to send the aforementioned projects C&Ds quite yet, but  
they should be contacted and told of our intentions to protect the  
Twisted trademark.

IIRC, this is to prevent people from registering everything they can  
think of, and then suing the next person to use that mark. It would be  
nice if we had something like that for patents...

-phil



From waterbug at pangalactic.us  Tue Jun 10 18:50:31 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Tue, 10 Jun 2008 20:50:31 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
References: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
Message-ID: <484F2157.6000906@pangalactic.us>

Jean-Paul Calderone wrote:
[details elided for brevity]
> Thanks to the SFC (<http://conservancy.softwarefreedom.org/>) and all of
> the sponsors  (<http://twistedmatrix.com/trac/wiki/TSF/FoundingSponsors>)
> who made this possible.

Kudos to all the sponsors and major thanks to Jp!!  Hopefully there will
be more of the same?  I.e., are there still some remaining funds for more?

Cheers (and I *mean* cheers! :),
Steve



From sakalsiz at gmail.com  Wed Jun 11 01:33:08 2008
From: sakalsiz at gmail.com (Mustafa Sakalsiz)
Date: Wed, 11 Jun 2008 10:33:08 +0300
Subject: [Twisted-Python] Asynqueue 101 (Help)
Message-ID: <767e5e0d0806110033r3e09ecb5l83d8670d65efb482@mail.gmail.com>

Hi,

I want to develop a server that has a dispatcher and worker processes.
Asynqueue seems to be a perfect choice for my intention. However, I couldn't
understand what I should do first and next. The workers will be processes
and tasks will be queued and assigned to the child processes. There are many
classes but I couldn't understand their interaction.

For example what is the difference between a job and a task. How will I use
TaskQueue with child processes or process workers. I need some examples,
asynqueue has some test codes but they don't give enough clue to me.

I need the general idea and the use of asynqueue.

Thanks in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080611/e1b33d3b/attachment.html>

From zooko at zooko.com  Wed Jun 11 15:54:08 2008
From: zooko at zooko.com (zooko)
Date: Wed, 11 Jun 2008 14:54:08 -0700
Subject: [Twisted-Python] ANNOUNCING Allmydata.org "Tahoe",
	the Least-Authority Filesystem, v1.1 
Message-ID: <35077CE3-6912-4311-A1EE-BE4B2934029C@zooko.com>

ANNOUNCING Allmydata.org "Tahoe", the Least-Authority Filesystem, v1.1

We are pleased to announce the release of version 1.1 of the "Tahoe"
Least Authority Filesystem.

The "Tahoe" Least Authority Filesystem is a secure, decentralized,
fault-tolerant filesystem.  All of the source code is available under
a Free Software, Open Source licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way it continues to function even when some of the peers are
unavailable, malfunctioning, or malicious.

A one-page explanation of the security and fault-tolerance properties
that it offers is visible at:

http://allmydata.org/source/tahoe/trunk/docs/about.html


This is the successor to Allmydata.org "Tahoe" Least Authority
Filesystem v1.0, which was released March 25, 2008 [1].  This release
fixes several serious issues in Tahoe v1.0, and improves the user
interfaces.  See the known_issues.txt file [2] and the NEWS file [3]
for details.


COMPATIBILITY

The version 1 branch of Tahoe is used as the basis of the consumer
backup product from Allmydata, Inc. -- http://allmydata.com .

Tahoe v1.1 is fully compatible with Tahoe v1.0.  v1.1 clients produce
files which can be read by v1.0 clients.  v1.1 clients can read files
produced by clients of all versions >= v0.8.  v1.1 servers can serve
v1.0 clients and v1.1 clients can use v1.0 servers.

This is the second release in the version 1 series.  We believe that
this version of Tahoe is stable enough to rely on as a permanent store
of valuable data.  The version 1 branch of Tahoe will be actively
supported and maintained for the forseeable future, and future
versions of Tahoe will retain the ability to read files and
directories produced by Tahoe v1 for the forseeable future.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
cryptographic capability-based access control scheme.

Because this software is the product of less than two years of active
development, we do not categorically recommend it for the storage of
data which is extremely confidential or precious.  However, we believe
that the combination of erasure coding, strong encryption, and careful
engineering makes the use of this software a much safer alternative
than common alternatives, such as RAID, or traditional backup onto a
remote server, removable drive, or tape.

This software comes with extensive unit tests [4], and there are no
known security flaws which would compromise confidentiality or data
integrity.  (For all currently known issues please see the
known_issues.txt file [2].)

This release of Tahoe is suitable for the "friendnet" use case [5] --
it is easy to create a filesystem spread over the computers of you and
your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL" [6]
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public  
Licence,
version 1.0.  The Transitive Grace Period Public Licence says that  
you may
distribute proprietary derived works of Tahoe without releasing the  
source code
of that derived work for up to twelve months, after which time you  
are obligated
to release the source code of the derived work under the Transitive  
Grace Period
Public Licence.  See the file "COPYING.TGPPL.html" [7] for the terms  
of the
Transitive Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "docs/install.html" [8].


HACKING AND COMMUNITY

Please join us on the mailing list [9] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted -- the
RoadMap page [10] shows the next improvements that we plan to make and
CREDITS [11] lists the names of people who've contributed to the
project.  The wiki Dev page [12] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [13], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and instructing them to spend part of
their work time on this free-software project).  We are eternally
grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
June 11, 2008
San Francisco, California, USA

[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=2348
[2] http://allmydata.org/trac/tahoe/browser/docs/known_issues.txt
[3] http://allmydata.org/trac/tahoe/browser/docs/NEWS
[4] http://allmydata.org/trac/tahoe/wiki/Dev
[5] http://allmydata.org/trac/tahoe/wiki/UseCases
[6] http://allmydata.org/trac/tahoe/browser/COPYING.GPL
[7] http://allmydata.org/source/tahoe/trunk/COPYING.TGPPL.html
[8] http://allmydata.org/source/tahoe/trunk/docs/install.html
[9] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[10] http://allmydata.org/trac/tahoe/roadmap
[11] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=2677
[12] http://allmydata.org/trac/tahoe/wiki/Dev
[13] http://allmydata.com




From happybrowndog at hotmail.com  Wed Jun 11 16:28:40 2008
From: happybrowndog at hotmail.com (happybrowndog)
Date: Wed, 11 Jun 2008 15:28:40 -0700
Subject: [Twisted-Python] PerspectiveClientManager.disconnect() - results in
 Unhandled error in Deferred
Message-ID: <g2pjjb$v2i$1@ger.gmane.org>

Hello,

I am calling the disconnect() method of an instance of the 
PerspectiveClientManager class, but when is is called, I get the 
following error:

Unhandled error in Deferred:
Traceback (most recent call last):
Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: 
Traceback (failure with no frames): 
twisted.internet.error.ConnectionDone: Connection was closed cleanly.
]

I have no idea what to look for as to what is causing this error.  Does 
someone have any idea?




From itamar at itamarst.org  Thu Jun 12 07:18:41 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 12 Jun 2008 09:18:41 -0400
Subject: [Twisted-Python] TSF Sponsored Development
In-Reply-To: <484F2157.6000906@pangalactic.us>
References: <20080609142414.4714.1441836820.divmod.quotient.7281@ohm>
	<484F2157.6000906@pangalactic.us>
Message-ID: <1213276721.23668.53.camel@localhost.localdomain>

On Tue, 2008-06-10 at 20:50 -0400, Stephen Waterbury wrote:

> Kudos to all the sponsors and major thanks to Jp!!  Hopefully there will
> be more of the same?  I.e., are there still some remaining funds for more?

Yes, we hope to continue this for a while :)




From exarkun at divmod.com  Thu Jun 12 07:28:38 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 12 Jun 2008 09:28:38 -0400
Subject: [Twisted-Python] PerspectiveClientManager.disconnect() -
	results in Unhandled error in Deferred
In-Reply-To: <g2pjjb$v2i$1@ger.gmane.org>
Message-ID: <20080612132838.4714.1150512497.divmod.quotient.8489@ohm>

On Wed, 11 Jun 2008 15:28:40 -0700, happybrowndog <happybrowndog at hotmail.com> wrote:
>Hello,
>
>I am calling the disconnect() method of an instance of the 
>PerspectiveClientManager class, but when is is called, I get the following 
>error:
>
>Unhandled error in Deferred:
>Traceback (most recent call last):
>Failure: twisted.spread.pb.PBConnectionLost: [Failure instance: Traceback 
>(failure with no frames): twisted.internet.error.ConnectionDone: Connection 
>was closed cleanly.
>]
>
>I have no idea what to look for as to what is causing this error.  Does 
>someone have any idea?
>

Most likely this is a failure on a Deferred returned by PB's callRemote
method.  You can get more information about where it was created by
enabling Deferred debugging.  See the --debug option to twistd or
twisted.internet.defer.setDebugging.

Jean-Paul



From proppy at aminche.com  Fri Jun 13 10:04:07 2008
From: proppy at aminche.com (Johan Euphrosine)
Date: Fri, 13 Jun 2008 18:04:07 +0200
Subject: [Twisted-Python] Twisted service kit
Message-ID: <1213373047.8146.32.camel@ippiki>

Hi,

As part of a freelance job, I'm asked to glue twisted with other
technologies together as a proof of concept of what be done (and how),
in the context of a service communicating with C++ games.

As it may be useful to someone else, I'm pushing the source here:
﻿http://proppy.aminche.com/hg/service-test/

This is what the code features/shows so far:
- JSON protocol over Int32StringReceived
- C++ sample client using boost.asio and Json_Spirit
- server and client OpenSSL endpoint
- XMLRPC with credential checking using twisted.web and twisted.cred
- packaging as a twisted plugin
- connection round robbin using pydirector
- inter node communication using twisted.spread perspective broker
- db persistance using storm ORM
- RPC registry using python decorator
- testing using twisted.trial and inlineCallbacks

I wonder if it is worth contributing on its own, to the newly created TX
project.

Maybe some parts of it could be extracted, and made into a more
submittable (and useful) shape.

Any thoughts ?

﻿Thanks to ﻿irc://irc.freenode.net/#twisted peoples for 24h/day help and
advises.
-- 
Johan Euphrosine <proppy at aminche.com>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20080613/23de49ba/attachment.sig>

From radix at twistedmatrix.com  Fri Jun 13 10:31:09 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 13 Jun 2008 17:31:09 +0100
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <1213373047.8146.32.camel@ippiki>
References: <1213373047.8146.32.camel@ippiki>
Message-ID: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>

On Fri, Jun 13, 2008 at 5:04 PM, Johan Euphrosine <proppy at aminche.com> wrote:
> Hi,
>
> As part of a freelance job, I'm asked to glue twisted with other
> technologies together as a proof of concept of what be done (and how),
> in the context of a service communicating with C++ games.
>
> As it may be useful to someone else, I'm pushing the source here:
> ﻿http://proppy.aminche.com/hg/service-test/
>
> This is what the code features/shows so far:
> - JSON protocol over Int32StringReceived
> - C++ sample client using boost.asio and Json_Spirit
> - server and client OpenSSL endpoint
> - XMLRPC with credential checking using twisted.web and twisted.cred
> - packaging as a twisted plugin
> - connection round robbin using pydirector
> - inter node communication using twisted.spread perspective broker
> - db persistance using storm ORM

I'm glad to see people using Storm in Twisted apps, but I think
there's a problem with it. You're using the store directly with a
MySQL server, which will block. This is reasonable for things like
SQLite, but when you're using a multi-user database system like MySQL
or Postgres, queries can take an arbitrarily long time to complete,
which blocks your Twisted reactor. This is fine for some applications
where response time isn't critical, but I wouldn't want to use it for
a highly interactive application.

If SQLite isn't an option yet, then you can use the experimental
Storm/Twisted integration code in its Storm branch on Launchpad:

  https://code.launchpad.net/~therve/storm/twisted-integration

I'd love to hear how it works out if you try it.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/

From proppy at aminche.com  Fri Jun 13 10:56:46 2008
From: proppy at aminche.com (Johan Euphrosine)
Date: Fri, 13 Jun 2008 18:56:46 +0200
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
Message-ID: <1213376206.9788.21.camel@ippiki>

On Fri, 2008-06-13 at 17:31 +0100, Christopher Armstrong wrote:
> I'm glad to see people using Storm in Twisted apps, but I think
> there's a problem with it. You're using the store directly with a
> MySQL server, which will block. This is reasonable for things like
> SQLite, but when you're using a multi-user database system like MySQL
> or Postgres, queries can take an arbitrarily long time to complete,
> which blocks your Twisted reactor. This is fine for some applications
> where response time isn't critical, but I wouldn't want to use it for
> a highly interactive application.
> 
> If SQLite isn't an option yet, then you can use the experimental
> Storm/Twisted integration code in its Storm branch on Launchpad:
> 
>   https://code.launchpad.net/~therve/storm/twisted-integration
> 
> I'd love to hear how it works out if you try it.
>

Thanks for the quick feedback,

At changeset 130:
http://proppy.aminche.com/hg/service-test/rev/9dac70808c34

I switched from sqllite to mysql, because I wasn't able to use
deferToThread with sqllite, for potentially blocking request:

http://proppy.aminche.com/hg/service-test/rev/b77a2c9a1ded

sqlite3.ProgrammingError: SQLite objects created in a thread can only be
used in that same thread.The object was created in thread id -1210218304
and this is thread id -1215493232

I took a look at storm/twisted integration, (I stoled the threading and
the inlineCallback tricks from it).

I will be definitely looking forward using it, for tighter storm/twisted
integration.
-- 
Johan Euphrosine <proppy at aminche.com>




From phil at bubblehouse.org  Fri Jun 13 11:07:18 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 13 Jun 2008 13:07:18 -0400
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <1213373047.8146.32.camel@ippiki>
References: <1213373047.8146.32.camel@ippiki>
Message-ID: <0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>

On Jun 13, 2008, at 12:04 PM, Johan Euphrosine wrote:
> As part of a freelance job, I'm asked to glue twisted with other
> technologies together as a proof of concept of what be done (and how),
> in the context of a service communicating with C++ games.
>
> As it may be useful to someone else, I'm pushing the source here:
> http://proppy.aminche.com/hg/service-test/
[snip]
> I wonder if it is worth contributing on its own, to the newly  
> created TX
> project.
>
> Maybe some parts of it could be extracted, and made into a more
> submittable (and useful) shape.

The great thing about the Twisted Community Code project is that you  
don't need any particular approval from anyone to add your code. If  
you think what you have might be of use to someone, whether it's for  
production use or just as a learning tool, you should consider  
creating a TX subproject.

There are other options as well. If you feel your code doesn't warrant  
the overhead of a full project (e.g., you don't see yourself having  
time to respond to bug requests or create blueprints, etc.), you  
should be able to create a personal Bazaar branch to store your code  
in, which you can then assign to the TX superproject.

This probably won't get as many eyeballs, since it won't be on the  
subproject list, but it's a good way to get your code out there in an  
easily accessible place. Plus, given the nature of Bazaar, anyone who  
wishes will be able to work with your code in their own branch.

-phil



From kevin.horn at gmail.com  Fri Jun 13 11:26:14 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 13 Jun 2008 12:26:14 -0500
Subject: [Twisted-Python] Twisted service kit
In-Reply-To: <0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>
References: <1213373047.8146.32.camel@ippiki>
	<0C2B1F7F-C625-4A69-B210-F59E81B1AF55@bubblehouse.org>
Message-ID: <562bcc10806131026w550ce080pac26afb678ec6cb9@mail.gmail.com>

On Fri, Jun 13, 2008 at 12:07 PM, Phil Christensen <phil at bubblehouse.org>
wrote:

> On Jun 13, 2008, at 12:04 PM, Johan Euphrosine wrote:
>
>> As part of a freelance job, I'm asked to glue twisted with other
>> technologies together as a proof of concept of what be done (and how),
>> in the context of a service communicating with C++ games.
>>
>> As it may be useful to someone else, I'm pushing the source here:
>> http://proppy.aminche.com/hg/service-test/
>>
> [snip]
>
>> I wonder if it is worth contributing on its own, to the newly created TX
>> project.
>>
>> Maybe some parts of it could be extracted, and made into a more
>> submittable (and useful) shape.
>>
>
> The great thing about the Twisted Community Code project is that you don't
> need any particular approval from anyone to add your code. If you think what
> you have might be of use to someone, whether it's for production use or just
> as a learning tool, you should consider creating a TX subproject.
>
> There are other options as well. If you feel your code doesn't warrant the
> overhead of a full project (e.g., you don't see yourself having time to
> respond to bug requests or create blueprints, etc.), you should be able to
> create a personal Bazaar branch to store your code in, which you can then
> assign to the TX superproject.
>
> This probably won't get as many eyeballs, since it won't be on the
> subproject list, but it's a good way to get your code out there in an easily
> accessible place. Plus, given the nature of Bazaar, anyone who wishes will
> be able to work with your code in their own branch.
>
> -phil
>
>
BTW, Phil, are there any established guidelines/conventions for the "TX"
packages other than "start your project name with a 'tx'"?

Any suggestions or guidelines on how such packages should leverage
setuptools, stuff like that?

I think it would be very useful to have all of these packages install in a
similar fashion, though of course, it wouldn't be practical (or advisable)
to try and enforce this in any way.  But I do think it would be good to have
a set of guidelines posted someplace saying "here is the recommended way to
set up a TX package".

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080613/a906a97d/attachment.html>

From curtferguson at cfl.rr.com  Fri Jun 13 11:27:49 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Fri, 13 Jun 2008 13:27:49 -0400
Subject: [Twisted-Python] Storm vs Axiom?
In-Reply-To: <60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
Message-ID: <4852AE15.8090100@cfl.rr.com>

Christopher Armstrong wrote:
> I'm glad to see people using Storm in Twisted apps, but I think
> there's a problem with it. You're using the store directly with a
> MySQL server, which will block. This is reasonable for things like
> SQLite, but when you're using a multi-user database system like MySQL
> or Postgres, queries can take an arbitrarily long time to complete,
> which blocks your Twisted reactor. This is fine for some applications
> where response time isn't critical, but I wouldn't want to use it for
> a highly interactive application.
>
> If SQLite isn't an option yet, then you can use the experimental
> Storm/Twisted integration code in its Storm branch on Launchpad:
>
>   

What are the advantages of Storm over divmod: Axiom?  I'm currently
working on something with twisted and axiom, I hadn't previously heard
of Storm.  If there are significant advantages, I'd like to hear
thoughts on them, I'm not above switching at this point.





From phil at bubblehouse.org  Fri Jun 13 13:20:42 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 13 Jun 2008 15:20:42 -0400
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service kit)
Message-ID: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>

On Jun 13, 2008, at 1:26 PM, Kevin Horn wrote:
> On Fri, Jun 13, 2008 at 12:07 PM, Phil Christensen <phil at bubblehouse.org 
> > wrote:
>> The great thing about the Twisted Community Code project is that  
>> you don't need any particular approval from anyone to add your  
>> code. If you think what you have might be of use to someone,  
>> whether it's for production use or just as a learning tool, you  
>> should consider creating a TX subproject.
>>
>> There are other options as well. If you feel your code doesn't  
>> warrant the overhead of a full project (e.g., you don't see  
>> yourself having time to respond to bug requests or create  
>> blueprints, etc.), you should be able to create a personal Bazaar  
>> branch to store your code in, which you can then assign to the TX  
>> superproject.
>>
>> This probably won't get as many eyeballs, since it won't be on the  
>> subproject list, but it's a good way to get your code out there in  
>> an easily accessible place. Plus, given the nature of Bazaar,  
>> anyone who wishes will be able to work with your code in their own  
>> branch.
>>
>> -phil
>
> BTW, Phil, are there any established guidelines/conventions for the  
> "TX" packages other than "start your project name with a 'tx'"?

Not really. Even the 'tx' prefix is just a suggestion. I think adding  
the prefix is a good idea if your project has a generic name, like a  
protocol, but it's up to you. Using it is a nice show of 'community  
solidarity', but I know I have a couple of projects I hope to add soon  
where it would just look or sound weird.

> Any suggestions or guidelines on how such packages should leverage  
> setuptools, stuff like that?
>
> I think it would be very useful to have all of these packages  
> install in a similar fashion, though of course, it wouldn't be  
> practical (or advisable) to try and enforce this in any way.  But I  
> do think it would be good to have a set of guidelines posted  
> someplace saying "here is the recommended way to set up a TX package".

Agreed. I think deployment options like this are best decided on a per- 
project basis, since TX will hopefully be a home for example code and  
works-in-progress as well as true project releases.

Still, I think we can all agree that projects should be installable  
using distutils at the very least. The key thing here is that for most  
projects you should be able to "python setup.py install" and be done  
with it.

Does anyone have any other suggestions? If we can come up with a list  
of suggested criteria, I'll write up a spec to add to the TX blueprints.

-phil



From screwtape at froup.com  Fri Jun 13 21:29:13 2008
From: screwtape at froup.com (Tim Allen)
Date: Sat, 14 Jun 2008 13:29:13 +1000
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service
	kit)
In-Reply-To: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
Message-ID: <83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>


On 14 Jun 2008, at 05:20, Phil Christensen wrote:
> Still, I think we can all agree that projects should be installable  
> using distutils at the very least. The key thing here is that for  
> most projects you should be able to "python setup.py install" and  
> be done with it.
>
> Does anyone have any other suggestions? If we can come up with a  
> list of suggested criteria, I'll write up a spec to add to the TX  
> blueprints.

It's not Twisted-specific, but I've always been a fan of JP's list:

	http://jcalderone.livejournal.com/39794.html




From phil at bubblehouse.org  Sat Jun 14 09:50:32 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Sat, 14 Jun 2008 11:50:32 -0400
Subject: [Twisted-Python] TX project guidelines (was Re: Twisted service
	kit)
In-Reply-To: <83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
	<83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
Message-ID: <FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>

On Jun 13, 2008, at 11:29 PM, Tim Allen wrote:
> On 14 Jun 2008, at 05:20, Phil Christensen wrote:
>> Still, I think we can all agree that projects should be  
>> installable using distutils at the very least. The key thing here  
>> is that for most projects you should be able to "python setup.py  
>> install" and be done with it.
>>
>> Does anyone have any other suggestions? If we can come up with a  
>> list of suggested criteria, I'll write up a spec to add to the TX  
>> blueprints.
>
> It's not Twisted-specific, but I've always been a fan of JP's list:
>
> 	http://jcalderone.livejournal.com/39794.html


Ha, I've been copying Twisted/Divmod's packaging structure for a long  
time, so this is right up my alley.

I think this is a great list. There's little I can think to add to  
it, except for one thing, and that's license information.

I think it's probably safe to say that a standard LICENSE file should  
go along with the README and setup.py

Any other thoughts?

-phil



From james at webmynd.com  Sat Jun 14 17:08:58 2008
From: james at webmynd.com (James Brady)
Date: Sat, 14 Jun 2008 16:08:58 -0700
Subject: [Twisted-Python] Executing a number of commands over SSH
Message-ID: <B724F517-FF2C-4015-BC03-1C4DD2AE4B83@webmynd.com>

Hi all,
I'd like to run a few commands on a remote machine over SSH. Looking  
at the conch packages, I'm not sure what the best approach is for this.

The only way I can see to pass the set of commands down into the  
SSHConnection and SSHChannel objects is through my transport factory,  
i.e. I can't add or remove commands to be run on an already  
instantiated SSHConnection.

Also, I'm a newcomer to the Twisted way of doing things, so it's not  
clear to me how I would go about returning the status and output of  
these commands back up to my code. I'm guessing I should create a  
Deferred somewhere, but some guidance on how these should bubble up  
through the twisted layers would be much appreciated.

Thanks,
James



From exarkun at divmod.com  Sat Jun 14 19:43:51 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 14 Jun 2008 21:43:51 -0400
Subject: [Twisted-Python] Executing a number of commands over SSH
In-Reply-To: <B724F517-FF2C-4015-BC03-1C4DD2AE4B83@webmynd.com>
Message-ID: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>

On Sat, 14 Jun 2008 16:08:58 -0700, James Brady <james at webmynd.com> wrote:
>Hi all,
>I'd like to run a few commands on a remote machine over SSH. Looking  at the 
>conch packages, I'm not sure what the best approach is for this.
>
>The only way I can see to pass the set of commands down into the 
>SSHConnection and SSHChannel objects is through my transport factory,  i.e. 
>I can't add or remove commands to be run on an already  instantiated 
>SSHConnection.

It sounds like you've figured out a lot of the difficult parts already. :)

Consider how you execute a command once `SSHConnection.serviceStarted´ is
called (if you looked at `sshsimpleclient.py´, then this is where the True,
False, and Cat channels get opened).  All you need to do to execute another
command is what you would do to execute those initial commands in that
method.  As long as you have a reference to the SSHConnection instance, you
can start arbitrary commands at any time you like.

So the problem is really just figuring out how to have a reference to the
SSHConnection instance in the code that knows it wants to start a new
command.

>
>Also, I'm a newcomer to the Twisted way of doing things, so it's not  clear 
>to me how I would go about returning the status and output of  these 
>commands back up to my code. I'm guessing I should create a  Deferred 
>somewhere, but some guidance on how these should bubble up  through the 
>twisted layers would be much appreciated.

Indeed, a Deferred should help.  You can have one which is fired with the
SSHConnection once it is available.  Then, callbacks on this Deferred will
be able to start any commands they want.  One way to do this would be to
pass a Deferred all the way down into the SSHConnection and fire it with
`self´ in `serviceStarted´.  This basically turns control flow inside-out,
allowing arbitrary code which is not part of the SSHConnection class to use
the connection.

This has been a bit vague, but Conch certainly has a lot of pieces and it's
hard to talk more specifically without having some code at hand.  If you're
still stuck, I suggest posting a short example of what you have (preferably
self-contained and runnable) and then someone can make more specific code
suggestions based on it.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun 14 22:05:09 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jun 2008 04:05:09 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1213502709.93.24151985@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080615/28938126/attachment.html>

From fetbiz at gmail.com  Sun Jun 15 07:32:57 2008
From: fetbiz at gmail.com (Fet Biz)
Date: Sun, 15 Jun 2008 21:32:57 +0800
Subject: [Twisted-Python] Where is the twisted.web2 documentation?
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org><83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
	<FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>
Message-ID: <000401c8ceec$61ce4190$9b64a8c0@iap>

The link
http://twistedmatrix.com/projects/web2/documentation/

is borken.

Where can I find the documentation of Web2?

Thanks




From nesbitt at apple.com  Sun Jun 15 10:49:10 2008
From: nesbitt at apple.com (Andrew Nesbitt)
Date: Sun, 15 Jun 2008 09:49:10 -0700
Subject: [Twisted-Python] Where is the twisted.web2 documentation?
In-Reply-To: <000401c8ceec$61ce4190$9b64a8c0@iap>
References: <0C10BDA4-9A23-4245-85EB-7B4C0DBA6040@bubblehouse.org>
	<83C83852-5E9D-4C80-9039-2D5B7D58D569@froup.com>
	<FBCF085A-A941-4164-B23B-A3926EC15367@bubblehouse.org>
	<000401c8ceec$61ce4190$9b64a8c0@iap>
Message-ID: <AF84C554-2B46-41CA-A4D6-A52A9E7ED5CF@apple.com>

http://twistedmatrix.com/trac/browser/trunk/doc/web2

     A.

On 15 Jun 2008, at 06:32, Fet Biz wrote:

> The link
> http://twistedmatrix.com/projects/web2/documentation/
>
> is borken.
>
> Where can I find the documentation of Web2?
>
> Thanks
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From radix at twistedmatrix.com  Mon Jun 16 02:50:03 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 16 Jun 2008 09:50:03 +0100
Subject: [Twisted-Python] Storm vs Axiom?
In-Reply-To: <4852AE15.8090100@cfl.rr.com>
References: <1213373047.8146.32.camel@ippiki>
	<60ed19d40806130931o4ca870abx906de4abdb8a104b@mail.gmail.com>
	<4852AE15.8090100@cfl.rr.com>
Message-ID: <60ed19d40806160150p2e6811c9v45dcd4aae1d88146@mail.gmail.com>

On Fri, Jun 13, 2008 at 6:27 PM, Curt <curtferguson at cfl.rr.com> wrote:
> What are the advantages of Storm over divmod: Axiom?  I'm currently
> working on something with twisted and axiom, I hadn't previously heard
> of Storm.  If there are significant advantages, I'd like to hear
> thoughts on them, I'm not above switching at this point.

The simple answer is this: Storm works with remote databases
(currently it supports postgres and mysql, in addition to sqlite) and
does no schema management. Axiom does all the schema management for
you, gives you an upgrade system, and has some integration with
Twisted.

Both of the APIs use blocking queries, and this can be a problem with
Twisted, except that since Axiom uses *only* sqlite, you can be safe
knowing that your queries won't block because other remote users are
encumbering your database, etc. You can use Storm in the same way if
you restrict yourself to SQLite, but Axiom can offer you more
conveniences.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From kevin at lazyweb.ca  Tue Jun 17 06:49:07 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Tue, 17 Jun 2008 08:49:07 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
Message-ID: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>

Hi all,
I've been reading through the twisted documentation, trying to get a handle
on how to write a real life twisted app.  ( I need to use the AsynQueue for
my project, btw..)

So I've been reading the documentation, and I've been putting together some
things.. but i note that much of the docs says that "this is not the way you
usually do this"

Where do i read to find out how to simply create a production quality
twisted application?

-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080617/328a86cb/attachment.html>

From itamar at itamarst.org  Tue Jun 17 08:08:04 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 17 Jun 2008 10:08:04 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
References: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
Message-ID: <1213711685.20839.14.camel@localhost.localdomain>

On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:


> Where do i read to find out how to simply create a production quality
> twisted application?

There are some better *deployment* techniques documented here -
http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
but they just make things easier to deploy, they don't make your
software "production quality."

Production quality software is hard; a good start is having code
reviews, well-written unit tests that cover all your code, as well as
end-to-end regression tests. The deployment techniques above do tend to
lead to slightly more testable software (by encouraging you to write
your software as Services).

Here's what we do for Twisted - it has dramatically improved the quality
of code we produce:

http://twistedmatrix.com/trac/wiki/ReviewProcess




From python at blackslens.com  Tue Jun 17 09:36:40 2008
From: python at blackslens.com (Black)
Date: Tue, 17 Jun 2008 11:36:40 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <1213711685.20839.14.camel@localhost.localdomain>
References: <e69cb1c20806170549v74d14135t6f502a1616d44b1d@mail.gmail.com>
	<1213711685.20839.14.camel@localhost.localdomain>
Message-ID: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>


On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>
>
>> Where do i read to find out how to simply create a production quality
>> twisted application?
>
> There are some better *deployment* techniques documented here -
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
> but they just make things easier to deploy, they don't make your
> software "production quality."
>
> Production quality software is hard; a good start is having code
> reviews, well-written unit tests that cover all your code, as well as
> end-to-end regression tests. The deployment techniques above do tend  
> to
> lead to slightly more testable software (by encouraging you to write
> your software as Services).

Unless I misunderstood the first mail, I don't think this is what  
Kevin meant . I believe what he is looking for could better be termed  
"best practice" (it is probably the reference to "industrial grade" in  
the subject that is misleading). This is something I've struggled with  
as well with respect to Twisted. Twisted is large and complex and in  
many cases there are several ways to achieve the same functionality.  
Frequently, it isn't easy to figure out the "best" approach or even  
the generally accepted approach. As Kevin says, the documentation   
does make obscure references to there being some "way you usually do  
this", without coming out and saying what that way is. All of the code  
reviews and unit tests in the world aren't going to catch  
unconventional uses of a library unless one of the reviewers knows  
better...

I'd offer some advice of my own, but I'm not sure even now that I use  
Twisted properly - at best I have something that works, and as all of  
my work is experimental that has been good enough.



From terry at jon.es  Tue Jun 17 09:41:22 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 17:41:22 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
Message-ID: <18519.56098.678826.294578@jon.es>

I'm trying to rework some synchronous code to use Twisted and I've hit an
interesting case. The following code is my simplification of the situation.
I've not run it, but will happily flesh it out if people want this to be
more concrete.

First, a general helper function for use below:

    def process(result):
        # process a single result.
        pass


I have the following simple synchronous function and code that calls it:

    # SYNCHRONOUS result producer
    def getResults(uri):
        done = False
        offset = 0
        while not done:
            results, done, offset = fetchPageViaSynchronousHttp(uri, offset)
            for result in results:
                yield result

    # SYNCHRONOUS calling
    for result in getResult(uri):
        process(result)


I.e., there are an indeterminate number of results available out there via
some web page. The iterator above periodically goes to get more, and yields
the new batch one by one to the calling code which processes them one by
one. This has the advantage that process() can be called as soon as any
results are available.


So how to do the above (more or less) in Twisted?  Here's one approach:

    def getResults(page):
        # Helper func: get results from page, return them in a list
        pass

    def needToCallAgain(page):
        # Helper func: see if there are more results, given page. return bool.
        pass

    # ASYNCHRONOUS result producer
    def getResults(uri, offset=0):
        def parsePage(page, offset):
            results = getResults(page)
            if needToCallAgain(page):
                d = getResults(uri, offset + len(results))
            else:
                d = None
            return results, d
        def returnTheseResults(page, offset):
            resultIterator, done, offset = parsePage(page, offset)
            return resultIterator, done
        from twisted.web import client
        return client.getPage(uri).addCallback(returnTheseResults, offset)

    # ASYNCHRONOUS calling
    def processResults(uri):
        def cb(resultIterator, deferred):
            for result in resultIterator:
                process(result)
            if deferred is not None:
                deferred.addCallback(cb)
        return getResults(uri).addCallback(cb)


I'm fairly sure something like this can be made to work. The idea is to
have getResults call a callback that takes a current set of results and a
new deferred that will be called with the next set of results and a new
deferred that will be called with the next set of results and...... so on
until the deferred that comes back is None, at which point you're done
(i.e., there are no more results).

The result is that process() gets called asynchronously with incoming
results, and, as with the synchronous approach, we don't have to wait until
the whole result set is in before we can begin processing results.

But this approach is definitely not simple (or at least it's not, given my
beginner-level of sophistication producing and consuming deferreds). Note
too that you don't actually use the deferred coming back from processResults.

I wanted to have the fun of thinking about this and writing my own
pseudo-solution before I posted here, but I imagine that people working
with Twisted must have many times dealt with something like the above. How
would you handle it? Other approaches are also possible, but I'll stop for
now to see what people say.

Let me know if you want the above fleshed out to working code.

Regards,
Terry



From exarkun at divmod.com  Tue Jun 17 09:46:37 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 17 Jun 2008 11:46:37 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
Message-ID: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>

On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
>
>On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:
>>On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>>>Where do i read to find out how to simply create a production quality
>>>twisted application?
>>
>>There are some better *deployment* techniques documented here -
>>http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
>>but they just make things easier to deploy, they don't make your
>>software "production quality."
>>
>>Production quality software is hard; a good start is having code
>>reviews, well-written unit tests that cover all your code, as well as
>>end-to-end regression tests. The deployment techniques above do tend  to
>>lead to slightly more testable software (by encouraging you to write
>>your software as Services).
>
>Unless I misunderstood the first mail, I don't think this is what  Kevin 
>meant . I believe what he is looking for could better be termed  "best 
>practice" (it is probably the reference to "industrial grade" in  the 
>subject that is misleading). This is something I've struggled with  as well 
>with respect to Twisted. Twisted is large and complex and in  many cases 
>there are several ways to achieve the same functionality.  Frequently, it 
>isn't easy to figure out the "best" approach or even  the generally accepted 
>approach. As Kevin says, the documentation   does make obscure references to 
>there being some "way you usually do  this", without coming out and saying 
>what that way is. All of the code  reviews and unit tests in the world 
>aren't going to catch  unconventional uses of a library unless one of the 
>reviewers knows  better...
>
>I'd offer some advice of my own, but I'm not sure even now that I use 
>Twisted properly - at best I have something that works, and as all of  my 
>work is experimental that has been good enough.
>

A way to get better answers to this question is to file tickets for each
place in the documentation which makes this unsubstantiated claim.  Then
the documentation can be improved, either by replacing the code in the
documentation which doesn't conform to best practices with code which does
conform to best practices, or by removing the claim if it's just so much
B.S.

This helps everyone who reads the documentation in the future, and it makes
for a *much* easier question to answer than "What are the best practices for
developing Twisted applications?" (which I don't even know where to begin to
answer, unless you've got about a week).

Jean-Paul



From c2k_list at gmx.de  Tue Jun 17 12:14:03 2008
From: c2k_list at gmx.de (Torsten A.)
Date: Tue, 17 Jun 2008 20:14:03 +0200
Subject: [Twisted-Python] Twisted Trial
Message-ID: <mailman.1.1574573409.12674.twisted-python@twistedmatrix.com>

Hello,
I received a running project using twisted trial, running meaning that all
test units pass successfully, which I am supposed to edit. Now I'd like to
keep two versions of the project:

a) A backup of the old one, so I can always have it successfully run the
unittests and keep track of its behavious and
b) a copy of the project which I want to modify and test, if the trials
pass.

I have tried to mess with the PYTHONPATH, to run trial in the folder of the
copies, but nothing seems to work. Right now it looks like this (running
under WinXP):

C:\
	some_folder\
		working_project\here_the_module_to_be_checked
		modified_project\here_the_module_to_be_checked

My PYTHONPATH links to C:\some_folder\working_project.

I hopesome understands what I mean ;)

Cheers,
Torsten





From radix at twistedmatrix.com  Tue Jun 17 12:30:56 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 17 Jun 2008 19:30:56 +0100
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <60ed19d40806171130h7b8a1c3bp9c1002a6ce650035@mail.gmail.com>

On Tue, Jun 17, 2008 at 7:14 PM, Torsten A. <c2k_list at gmx.de> wrote:
> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.

Dude, use revision control:

http://bazaar-vcs.org/
http://subversion.tigris.org/

Keeping copies of stuff manually is so 1970s.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From Andy at NewWorldElectric.com  Tue Jun 17 13:05:12 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Tue, 17 Jun 2008 15:05:12 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>

It's not quite an answer to your immediate question, but I would suggest
setting up Subversion (http://tortoisesvn.tigris.org/) to track your
versions.  That way you can keep all your versions modified, partially
modified, unmodified, etc. and pull back any old version as appropriate.
This looks like a tutorial for the kind of setup you'd need for that:

http://www.onlamp.com/lpt/a/2820

-Andy

On Tue, Jun 17, 2008 at 2:14 PM, Torsten A. <c2k_list at gmx.de> wrote:

> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.
>
> I have tried to mess with the PYTHONPATH, to run trial in the folder of the
> copies, but nothing seems to work. Right now it looks like this (running
> under WinXP):
>
> C:\
>        some_folder\
>                working_project\here_the_module_to_be_checked
>                modified_project\here_the_module_to_be_checked
>
> My PYTHONPATH links to C:\some_folder\working_project.
>
> I hopesome understands what I mean ;)
>
> Cheers,
> Torsten
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog: http://channel3b.wordpress.com
Second Life Name: Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080617/b31aa4c7/attachment.html>

From matthieu.brucher at gmail.com  Tue Jun 17 13:30:14 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Tue, 17 Jun 2008 21:30:14 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
Message-ID: <e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>

2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
> It's not quite an answer to your immediate question, but I would suggest
> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
> versions.  That way you can keep all your versions modified, partially
> modified, unmodified, etc. and pull back any old version as appropriate.
> This looks like a tutorial for the kind of setup you'd need for that:
>
> http://www.onlamp.com/lpt/a/2820--

A smaller VCS without a server would be more efficient for private
testing and comparisons. So try bzr (my favorite), hg or git.

Matthieu
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From phil at bubblehouse.org  Tue Jun 17 13:45:06 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 17 Jun 2008 15:45:06 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
Message-ID: <60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>

On Jun 17, 2008, at 3:30 PM, Matthieu Brucher wrote:
> 2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
>> It's not quite an answer to your immediate question, but I would  
>> suggest
>> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
>> versions.  That way you can keep all your versions modified,  
>> partially
>> modified, unmodified, etc. and pull back any old version as  
>> appropriate.
>> This looks like a tutorial for the kind of setup you'd need for that:
>>
>> http://www.onlamp.com/lpt/a/2820--
>
> A smaller VCS without a server would be more efficient for private
> testing and comparisons. So try bzr (my favorite), hg or git.

I'm becoming a pretty big Bazaar fan, but if you're going for  
simplicity, a distributed VCS like Bazaar or git could be difficult  
for someone who has had no exposure to source control.

Even with Subversion, although some will have no problem understanding  
the concepts of updates versus commits, etc, I have definitely been  
somewhat shocked at the amount of guidance needed by trainees of mine  
in the past.

Running Subversion locally is probably a better bet when you're  
starting out; it's a bit easier, it's probably used by a majority of  
open source developers, and it transitions easily to a hosted scenario.

Then as you gain experience working with revisioned code in general,  
you can investigate other options, like bzr-svn or "pure" bzr.

-phil



From christian.simms at gmail.com  Tue Jun 17 13:51:05 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Tue, 17 Jun 2008 15:51:05 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
Message-ID: <cd8fa6f90806171251v42fa2941veeee580828238cce@mail.gmail.com>

On Tue, Jun 17, 2008 at 2:14 PM, Torsten A. <c2k_list at gmx.de> wrote:
> Hello,
> I received a running project using twisted trial, running meaning that all
> test units pass successfully, which I am supposed to edit. Now I'd like to
> keep two versions of the project:
>
> a) A backup of the old one, so I can always have it successfully run the
> unittests and keep track of its behavious and
> b) a copy of the project which I want to modify and test, if the trials
> pass.
>
> I have tried to mess with the PYTHONPATH, to run trial in the folder of the
> copies, but nothing seems to work. Right now it looks like this (running
> under WinXP):
>
> C:\
>        some_folder\
>                working_project\here_the_module_to_be_checked
>                modified_project\here_the_module_to_be_checked
>
> My PYTHONPATH links to C:\some_folder\working_project.
>
> I hopesome understands what I mean ;)
>
> Cheers,
> Torsten
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

I think this is a basic Python question.  If you set your PYTHONPATH
variable to . (period), then when you import a python package it will
look in the current working directory for the package, and then the
standard system directories.  This way, to test both the original and
modified versions, you would do:

  cd \original_project
  trial package_to_test

  cd \modified_project
  trial package_to_test

Cheers,
Christian



From terry at jon.es  Tue Jun 17 13:51:41 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 21:51:41 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: Your message at 21:30:14 on Tuesday, 17 June 2008
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>
	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>
	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
Message-ID: <18520.5581.592635.559250@jon.es>

The various answers recommending version control are just heading off in a
direction that wasn't asked about at all! :-)

Sorry if I sound grouchy, but the OP hasn't done anything to warrant being
curtly told to just use version control, especially when that's not a
solution to the problem he's running into.

There should be no need to add that people often have multiple versions
(branches, often) checked out and want to swap between using them and have
the right version picked up by Python.  That's part of the point/use of
combinator and the *branch commands, as many people here already know.

Torsten, you say your code doesn't work when you have PYTHONPATH set. Can
you be more specific? Send us the output showing it not working, etc?

Terry



From stephen.c.waterbury at nasa.gov  Tue Jun 17 13:51:55 2008
From: stephen.c.waterbury at nasa.gov (Stephen Waterbury)
Date: Tue, 17 Jun 2008 15:51:55 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>
References: <E1K8fhb-0008HH-10@cube.twistedmatrix.com>	<37d49ed40806171205n7a7ee761xba8c82ff563ec257@mail.gmail.com>	<e76aa17f0806171230g7139ea50od4dbd6de3d4a0059@mail.gmail.com>
	<60D8597E-D1B4-4F8E-9F5D-A77CCF338D42@bubblehouse.org>
Message-ID: <485815DB.1030505@nasa.gov>

Phil Christensen wrote:
> On Jun 17, 2008, at 3:30 PM, Matthieu Brucher wrote:
>> 2008/6/17 Andy Fundinger <Andy at newworldelectric.com>:
>>> It's not quite an answer to your immediate question, but I would suggest
>>> setting up Subversion (http://tortoisesvn.tigris.org/) to track your
>>> versions.  That way you can keep all your versions modified, partially
>>> modified, unmodified, etc. and pull back any old version as appropriate.
>>> This looks like a tutorial for the kind of setup you'd need for that:
>>>
>>> http://www.onlamp.com/lpt/a/2820--
>>
>> A smaller VCS without a server would be more efficient for private
>> testing and comparisons. So try bzr (my favorite), hg or git.
> 
> I'm becoming a pretty big Bazaar fan, but if you're going for 
> simplicity, a distributed VCS like Bazaar or git could be difficult for 
> someone who has had no exposure to source control.
> 
> Even with Subversion, although some will have no problem understanding 
> the concepts of updates versus commits, etc, I have definitely been 
> somewhat shocked at the amount of guidance needed by trainees of mine in 
> the past.
> 
> Running Subversion locally is probably a better bet when you're starting 
> out; it's a bit easier, it's probably used by a majority of open source 
> developers, and it transitions easily to a hosted scenario.
> 
> Then as you gain experience working with revisioned code in general, you 
> can investigate other options, like bzr-svn or "pure" bzr.

YMMV.  I found subversion to be cumbersome to configure and use,
whereas for me, hg was easy both for installation and use,
especially as a local repo.

Steve



From terry at jon.es  Tue Jun 17 15:10:48 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 17 Jun 2008 23:10:48 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
In-Reply-To: Your message at 17:41:22 on Tuesday, 17 June 2008
References: <18519.56098.678826.294578@jon.es>
Message-ID: <18520.10328.729525.221355@jon.es>

For the record, here's a followup to my own posting, with working code.
The earlier untested code was a bit of a mess. The below runs fine.

In case it wasn't clear before, you're pulling "results" (e.g., from a
search engine) in off the web. Each results pages comes with an indicator
to tell you whether there are more results. I wanted to write a function
(see processResults below) that, when called, would call the process
function below on each result, all done asynchronously.

This solution feels cumbersome, but it does work (aka prints the expected
output).

Comments welcome (just don't tell me to use version control :-))

Terry


from twisted.internet import defer

def process(result):
    # Stub: process a single result.
    print 'processed result', result

def getPage(uri, offset=0):
    # Stub: return some results and an indicator of whether more are available.
    data = [[0, 1, 2],
            [4, 7, 8, 10],
            [12, 14, 18, 30]]
    results = data[offset]
    more = offset < len(data) - 1
    return defer.succeed((results, more))
        
def getResultsFromPage(page):
    # Stub: get the results from page, return them in a list
    return page[0]

def needToCallAgain(page):
    # Stub: determine if there are more results, given current page. return bool.
    return page[1]
    
# ASYNCHRONOUS result producer
def getResults(uri, offset=0):
    def parsePage(page, offset):
        results = getResultsFromPage(page)
        if needToCallAgain(page):
            d = getResults(uri, offset + 1)
        else:
            d = None
        return results, d
    def returnTheseResults(page, offset):
        resultIterator, done = parsePage(page, offset)
        return resultIterator, done
    return getPage(uri, offset).addCallback(returnTheseResults, offset)

# ASYNCHRONOUS calling
def processResults(uri):
    def cb((resultIterator, deferred)):
        for result in resultIterator:
            process(result)
        if deferred is not None:
            deferred.addCallback(cb)
    return getResults(uri).addCallback(cb)


if __name__ == '__main__':
    def finished(x):
        print 'finished'
    processResults('uri').addCallback(finished)



The above prints

$ python xxx.py
processed result 0
processed result 1
processed result 2
processed result 4
processed result 7
processed result 8
processed result 10
processed result 12
processed result 14
processed result 18
processed result 30
finished



From james at webmynd.com  Tue Jun 17 15:44:53 2008
From: james at webmynd.com (James Brady)
Date: Tue, 17 Jun 2008 14:44:53 -0700
Subject: [Twisted-Python] Executing a number of commands over SSH
In-Reply-To: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>
References: <20080615014351.4714.1116888107.divmod.quotient.9207@ohm>
Message-ID: <F6431E8C-D6A9-4BE3-9157-EB1E22F9D549@webmynd.com>


> Indeed, a Deferred should help.  You can have one which is fired  
> with the
> SSHConnection once it is available.  Then, callbacks on this  
> Deferred will
> be able to start any commands they want.  One way to do this would  
> be to
> pass a Deferred all the way down into the SSHConnection and fire it  
> with
> `self´ in `serviceStarted´.  This basically turns control flow  
> inside-out,
> allowing arbitrary code which is not part of the SSHConnection class  
> to use
> the connection.

Hi Jean-Paul,
Thanks for that advice - as you suggested I'm now passing a Deferred  
down into the SSHConnection to receive a reference to the connection  
object, which works really well.

I now have a follow-on question. This is my situation: I'd like to set  
up an SSHConnection and associate it with a Machine object at program  
startup, then execute arbitrary commands over this SSHConnection at  
run-time.

The problem I'm facing is that after instantiating the Twisted  
objects, calling reactor.run() doesn't return, so I can't create a  
standalone SSHConnection and attach it as a utility to a Machine object.

For example:
class Machine(object):
     def __init__(self, address):
         self.conn = MachineConnection(self, address, 'user')

class MachineConnection(object):
     def __init__(self, address, user):
         self.address = address
         self.port = 22
         self.user = user
         d=defer.Deferred()
         d.addCallback(self.__conn_ready)
         d.addErrback(self.__conn_err)

         factory = protocol.ClientFactory(self.user, d) # I'm actually  
using a subclass
         reactor.connectTCP(self.address, self.port, factory)
         reactor.run()


Here, I've left out definitions of my conch subclasses, and methods on  
Machine and MachineConnection, but I don't think they're relevant.

The issue is that reactor.run() in the last line of  
MachineConnection.__init__ starts Twisted up, creates the connection  
and so on, but doesn't return control to the original flow of code.  
I've tried starting separate threads for the connections, but Twisted  
seems to rely on running in the main thread.

Are the any suggestions on how to set up backgrounded Twisted  
connections that can be interacted with as daemonic threads?

Thank you,
James
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080617/8d39b704/attachment.html>

From kevin at lazyweb.ca  Tue Jun 17 17:10:20 2008
From: kevin at lazyweb.ca (kevin at lazyweb.ca)
Date: Tue, 17 Jun 2008 19:10:20 -0400
Subject: [Twisted-python] Writing industrial grade twisted servers
In-Reply-To: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
Message-ID: <e69cb1c20806171610j31a7b22al316fcbe87198aba6@mail.gmail.com>

Thanks for the answers... I will definitely file some tickets in the
next few days, and the links provided have been helpful.

The docs are good, it's not a quality thing at all... It's just
missing that one "Here's how you put it all together"  doc.

It is true, I should have said "best practices".  That's what i was
looking for.

Ah well, I'll keep chipping away...

Thanks again

On 6/17/08, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
>>
>>On Jun 17, 2008, at 10:08 AM, Itamar Shtull-Trauring wrote:
>>>On Tue, 2008-06-17 at 08:49 -0400, kevin beckford wrote:
>>>>Where do i read to find out how to simply create a production quality
>>>>twisted application?
>>>
>>>There are some better *deployment* techniques documented here -
>>>http://twistedmatrix.com/projects/core/documentation/howto/tap.html -
>>>but they just make things easier to deploy, they don't make your
>>>software "production quality."
>>>
>>>Production quality software is hard; a good start is having code
>>>reviews, well-written unit tests that cover all your code, as well as
>>>end-to-end regression tests. The deployment techniques above do tend  to
>>>lead to slightly more testable software (by encouraging you to write
>>>your software as Services).
>>
>>Unless I misunderstood the first mail, I don't think this is what  Kevin
>>meant . I believe what he is looking for could better be termed  "best
>>practice" (it is probably the reference to "industrial grade" in  the
>>subject that is misleading). This is something I've struggled with  as well
>>
>>with respect to Twisted. Twisted is large and complex and in  many cases
>>there are several ways to achieve the same functionality.  Frequently, it
>>isn't easy to figure out the "best" approach or even  the generally
>> accepted
>>approach. As Kevin says, the documentation   does make obscure references
>> to
>>there being some "way you usually do  this", without coming out and saying
>>what that way is. All of the code  reviews and unit tests in the world
>>aren't going to catch  unconventional uses of a library unless one of the
>>reviewers knows  better...
>>
>>I'd offer some advice of my own, but I'm not sure even now that I use
>>Twisted properly - at best I have something that works, and as all of  my
>>work is experimental that has been good enough.
>>
>
> A way to get better answers to this question is to file tickets for each
> place in the documentation which makes this unsubstantiated claim.  Then
> the documentation can be improved, either by replacing the code in the
> documentation which doesn't conform to best practices with code which does
> conform to best practices, or by removing the claim if it's just so much
> B.S.
>
> This helps everyone who reads the documentation in the future, and it makes
> for a *much* easier question to answer than "What are the best practices for
> developing Twisted applications?" (which I don't even know where to begin to
> answer, unless you've got about a week).
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca



From steve at holdenweb.com  Tue Jun 17 17:21:23 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 17 Jun 2008 19:21:23 -0400
Subject: [Twisted-Python] Re: Writing industrial grade twisted servers
In-Reply-To: <20080617154637.4714.694187557.divmod.quotient.10052@ohm>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
Message-ID: <485846F3.9040008@holdenweb.com>

Jean-Paul Calderone wrote:
> On Tue, 17 Jun 2008 11:36:40 -0400, Black <python at blackslens.com> wrote:
[...]
> A way to get better answers to this question is to file tickets for each
> place in the documentation which makes this unsubstantiated claim.  Then
> the documentation can be improved, either by replacing the code in the
> documentation which doesn't conform to best practices with code which does
> conform to best practices, or by removing the claim if it's just so much
> B.S.
> 
> This helps everyone who reads the documentation in the future, and it makes
> for a *much* easier question to answer than "What are the best practices 
> for
> developing Twisted applications?" (which I don't even know where to 
> begin to
> answer, unless you've got about a week).
> 
Nope. Sorry. Two hours and a bottle of whisky is all you get.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andrew-twisted at puzzling.org  Tue Jun 17 18:09:39 2008
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 18 Jun 2008 10:09:39 +1000
Subject: [Twisted-Python] Re: Writing industrial grade twisted servers
In-Reply-To: <485846F3.9040008@holdenweb.com>
References: <55C8E5A3-3B7C-4D74-AFAA-FAB0D3B8F372@blackslens.com>
	<20080617154637.4714.694187557.divmod.quotient.10052@ohm>
	<485846F3.9040008@holdenweb.com>
Message-ID: <20080618000939.GA27176@steerpike.home.puzzling.org>

Steve Holden wrote:
[...]
> Nope. Sorry. Two hours and a bottle of whisky is all you get.

It's a bit late now, but this makes me think that Teach Me Twisted could have
had a subtitle: “Teach Me Twisted: The blind leading the blind”

-Andrew.




From nathan.stocks at gmail.com  Tue Jun 17 19:33:10 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 17 Jun 2008 19:33:10 -0600
Subject: [Twisted-Python] The twisted way for basic file i/o?
Message-ID: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>

I just want to do some basic text-file manipulations without blocking
the rest of twisted.

I've found "FilePath", which has an open()...which is undocumented:

http://twistedmatrix.com/documents/current/api/twisted.python.filepath.FilePath.html#open

Is that what I should be using???

~ Nathan



From glyph at divmod.com  Tue Jun 17 23:45:03 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 18 Jun 2008 05:45:03 -0000
Subject: [Twisted-Python] The twisted way for basic file i/o?
In-Reply-To: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
References: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
Message-ID: <20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>


On 01:33 am, nathan.stocks at gmail.com wrote:
>I just want to do some basic text-file manipulations without blocking
>the rest of twisted.
>
>I've found "FilePath", which has an open()...which is undocumented:
>
>http://twistedmatrix.com/documents/current/api/twisted.python.filepath.FilePath.html#open
>
>Is that what I should be using???

Yes and no.

Yes, you should use it, FilePath is great.

No, it won't solve your problem.  The APIs in FilePath will just block.

Asynchronous file I/O is a thorny problem, and Twisted doesn't have a 
canned solution for it.

The quick answer is "do it in a subprocess or a thread".

I'll save you time on the long answer, since it's a meandering 
exploration of a dozen platform-specific half-broken under- or un- 
documented APIs, that ends with "Oh, I guess you have to do it in a 
subprocess or a thread."

Hope that helps :).



From matthieu.brucher at gmail.com  Wed Jun 18 00:51:31 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 18 Jun 2008 08:51:31 +0200
Subject: [Twisted-Python] Example for a new protocol over TCP
Message-ID: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>

Hi,

I'm new to twisted and I'm trying to implement a set of protocols
(already available in Java, JXSE). I lamost know how I will set up the
different services that will communicate through the reactor, but I'm
starting from the beginning, so here is my real question.
How can I set up a factory (using a TCP protocol) so that when I want
to send a message to someone, it connects though TCP to the other
computer, they exchange a welcome message, and only then the message
is sent though the TCP protocol ? Of course, it is not as simple as
this, but if someone has a pointer, I will be able to fill the missing
pieces in my design ;)

Thanks,
Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From kevin at lazyweb.ca  Wed Jun 18 02:13:34 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 04:13:34 -0400
Subject: [Twisted-Python] Something like a ThreadPool
Message-ID: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>

Is there any sort of job queue or similar ,  besides AsynQueue, which looked
like exactly what i wanted, but is sadly undocumented,   native to twisted?
 What is the twisted way to do such a thing?  Is there something already
available?

-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080618/86b08712/attachment.html>

From c2k_list at gmx.de  Wed Jun 18 02:48:28 2008
From: c2k_list at gmx.de (Torsten A.)
Date: Wed, 18 Jun 2008 10:48:28 +0200
Subject: AW: [Twisted-Python] Twisted Trial
In-Reply-To: <18520.5581.592635.559250@jon.es>
Message-ID: <mailman.2.1574573409.12674.twisted-python@twistedmatrix.com>

Thank you all for your replies.

@Christian:
I should have mentioned that. The current directory is in the pythonpath. In
the variable PYHTONPATH the dot is set and when I walk through the
filesystem, starting python from different locations, the current path is
always set in sys.path. Hence, I asssume that PythonPath is set correctly.
So your suggestion, what I thought would work
>  cd \original_project
>  trial package_to_test
>
>  cd \modified_project
>  trial package_to_test
does actually not work. Who knows why...

@Terry:
> Torsten, you say your code doesn't work when you have PYTHONPATH set. Can
you be more specific? Send us the output showing it not working, etc?

Actually I'd love to do that, but I really don't know what to send. When I
run the trial as suggested by Christian (see above), the trial runs every
time for the modified package, even if I am in \original_project. How do I
know this? Well, the trial fails at the point where the modified version
fails. If I delete the modified version from the pythonpath, everything runs
fine.


I have never really used a version control system I have to admit. I thought
of control systems to log changes which can in case of severe damage or what
ever reason be made undone. But if I can execute different versions of the
project, e.g. in my case the initial version and the last modified, just by
saying run this one or that one, I am glad to use it. Can this be done
(excuse my probably dumb question)? Can someone please give me catchword to
search for? As I looked briefly in the bazaar guide
(http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
to find anything helpful. 

Thanks again for your help! I really appreciate it!

Cheers,
Torsten




From itamar at itamarst.org  Wed Jun 18 05:25:33 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 18 Jun 2008 07:25:33 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
Message-ID: <1213788333.20839.21.camel@localhost.localdomain>

On Wed, 2008-06-18 at 04:13 -0400, kevin beckford wrote:
> Is there any sort of job queue or similar ,  besides AsynQueue, which
> looked like exactly what i wanted, but is sadly undocumented,   native
> to twisted?  What is the twisted way to do such a thing?  Is there
> something already available?

What kind of work are you queuing? If it's e.g. fetching a web page, you
can just use do it using Twisted's scalable asynchronous APIs (maybe
using a DeferredSemaphore if you want to limit number of conccurent
queries.) If it's a blocking API you're calling (RDBMS queries are the
typical example) then Twisted has a thread pool, as  well as
RDBMS-specific wrapper - see our documentation.




From curtferguson at cfl.rr.com  Wed Jun 18 06:24:54 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Wed, 18 Jun 2008 08:24:54 -0400
Subject: AW: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
References: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
Message-ID: <4858FE96.10200@cfl.rr.com>

Torsten A. wrote:
> I have never really used a version control system I have to admit. I thought
> of control systems to log changes which can in case of severe damage or what
> ever reason be made undone. But if I can execute different versions of the
> project, e.g. in my case the initial version and the last modified, just by
> saying run this one or that one, I am glad to use it. Can this be done
> (excuse my probably dumb question)? Can someone please give me catchword to
> search for? As I looked briefly in the bazaar guide
> (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
> to find anything helpful. 
>
> Thanks again for your help! I really appreciate it!
>
>   
I use bazaar myself for version control, and I highly recommend it.  If
you're popping in and out on different branches/versions all the time
though, you may want to look at combinator from Divmod.  Sounds like
just what you're looking for.

Here is a link to it, the link isn't working for me at this particular
moment, but I know it is a good link, hopefully will be back up sometime
today.

http://divmod.org/trac/wiki/DivmodCombinator








From kevin at lazyweb.ca  Wed Jun 18 07:04:47 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 09:04:47 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <1213788333.20839.21.camel@localhost.localdomain>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
Message-ID: <e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>

>
>
>
> What kind of work are you queuing? If it's e.g. fetching a web page, you
> can just use do it using Twisted's scalable asynchronous APIs (maybe
> using a DeferredSemaphore if you want to limit number of conccurent
> queries.) If it's a blocking API you're calling (RDBMS queries are the
> typical example) then Twisted has a thread pool, as  well as
> RDBMS-specific wrapper - see our documentation.


Thanks very much.  Found and read.

>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080618/1b8bf199/attachment.html>

From nathan.stocks at gmail.com  Wed Jun 18 10:00:35 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 18 Jun 2008 10:00:35 -0600
Subject: [Twisted-Python] The twisted way for basic file i/o?
In-Reply-To: <20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>
References: <96c9d6a80806171833j66324bebla8590b0c184b7c2e@mail.gmail.com>
	<20080618054503.25821.1595058785.divmod.xquotient.9808@joule.divmod.com>
Message-ID: <96c9d6a80806180900r6271ab43vb7e585738327bd09@mail.gmail.com>

On Tue, Jun 17, 2008 at 11:45 PM,  <glyph at divmod.com> wrote:
> The quick answer is "do it in a subprocess or a thread".

Thanks.  It's good to know that I'm not crazy for not being able to
find "the way" that doesn't exist!

~ Nathan



From kevin.horn at gmail.com  Wed Jun 18 10:21:10 2008
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 18 Jun 2008 11:21:10 -0500
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
	<e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
Message-ID: <562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>

For the benefit of future searchers (and myself), would either of you mind
posting a link to specific place in the docs you are talking about?

Kevin Horn


On Wed, Jun 18, 2008 at 8:04 AM, kevin beckford <kevin at lazyweb.ca> wrote:

>
>>
>> What kind of work are you queuing? If it's e.g. fetching a web page, you
>> can just use do it using Twisted's scalable asynchronous APIs (maybe
>> using a DeferredSemaphore if you want to limit number of conccurent
>> queries.) If it's a blocking API you're calling (RDBMS queries are the
>> typical example) then Twisted has a thread pool, as  well as
>> RDBMS-specific wrapper - see our documentation.
>
>
> Thanks very much.  Found and read.
>
>>
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> Kevin Beckford
> Technical Lead,
> Lazyweb Construction Company,
> http://lazyweb.ca
> kevin at lazyweb.ca
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080618/a3f3ccbe/attachment.html>

From general at eepatents.com  Wed Jun 18 10:21:49 2008
From: general at eepatents.com (Ed Suominen)
Date: Wed, 18 Jun 2008 09:21:49 -0700
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
Message-ID: <4859361D.2030806@eepatents.com>

kevin beckford wrote:
> Is there any sort of job queue or similar ,  besides AsynQueue, which 
> looked like exactly what i wanted, but is sadly undocumented,   native 
> to twisted?  What is the twisted way to do such a thing?  Is there 
> something already available?

Kevin, I have to confess that you're right about the "sadly 
undocumented" part. I keep promising myself (and others) that I will 
rectify the situation, but the motivation is just not as high as I'd 
like. I think that's true of a lot of free software; the author write 
the stuff to scratch his particular itch and then moves on. As the 
originator, he of course needs no documentation, and writing code is 
much more fun than writing words.

The only thing I can offer in substitute at the moment are some really 
extensive docstrings in the code itself, and the usage examples embodied 
in the sAsync and AsynCluster packages, which itself are built on 
AsynQueue. Also, see a usage example for AsynCluster at 
http://foss.eepatents.com/trac/AsynCluster/wiki/Example_AsynCluster.

Best regards, Ed



From kevin at lazyweb.ca  Wed Jun 18 13:41:31 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 15:41:31 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<1213788333.20839.21.camel@localhost.localdomain>
	<e69cb1c20806180604p3281b3a9vae0fa88d2349af7b@mail.gmail.com>
	<562bcc10806180921j13c003caof94dc7bd73a54ef4@mail.gmail.com>
Message-ID: <e69cb1c20806181241x727b43a0g9ad7b5d971291dbe@mail.gmail.com>

On Wed, Jun 18, 2008 at 12:21 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> For the benefit of future searchers (and myself), would either of you mind
> posting a link to specific place in the docs you are talking


http://www.cs.lth.se/EDA046/assignments/assignment4/twisted/threading.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080618/1039ce4d/attachment.html>

From kevin at lazyweb.ca  Wed Jun 18 13:49:01 2008
From: kevin at lazyweb.ca (kevin beckford)
Date: Wed, 18 Jun 2008 15:49:01 -0400
Subject: [Twisted-Python] Something like a ThreadPool
In-Reply-To: <4859361D.2030806@eepatents.com>
References: <e69cb1c20806180113u544e06c1h5aa06c9bf87df854@mail.gmail.com>
	<4859361D.2030806@eepatents.com>
Message-ID: <e69cb1c20806181249j32def3f8t67cc729f59cf9872@mail.gmail.com>

>  usage examples embodied in the sAsync and AsynCluster packages, which
> itself are built on AsynQueue. Also, see a usage example for AsynCluster at
> http://foss.eepatents.com/trac/AsynCluster/wiki/Example_AsynCluster.


Acutally Ed, this will help.  I'd like to offer to help you with the
documentation if you would like.  Tell  me what it does and I'll write it up
or something.  I'd love to increase my knowledge of this code by documenting
some examples.  Seriously.



-- 
Kevin Beckford
Technical Lead,
Lazyweb Construction Company,
http://lazyweb.ca
kevin at lazyweb.ca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080618/b14f0268/attachment.html>

From tim at commsecure.com.au  Thu Jun 19 00:21:20 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Thu, 19 Jun 2008 16:21:20 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
Message-ID: <20080619162120.5b0a781f@ws35.commsecure.com.au>

Hi, all.

I'm working on a new system to be deployed in our production
environment, and having already decided on using Twisted, I'm now
trying to figure out how to cleanly and reliably deploy it. I have many
questions, but right now I just want to work through the issue of
logging.

In our existing systems, our code writes messages to syslog, with
'facility' set to LOG_LOCAL0 and 'priority' set according to the
severity of the event - debug, info, warn or alert. Anything logged
with 'alert' severity causes our monitoring to contact the operator on
duty, so they can look into it. For the sake of our operators and
system administrators, I'd prefer to use as much of the existing
monitoring infrastructure as possible. On the other hand, the logging
code we use at the moment is crufty old home-grown code, and I'd much
prefer to use a logging system maintained by somebody else.

My first thought was to use the 'logging' module in the Python 2.3
standard library. It covers all the syslog functionality I want (and
more), and it's pretty easy to use. Unfortunately, using Python's
logging module with Twisted is hard for two reasons: twistd and trial.
Both go to great lengths to Do The Right Thing with logging, and both
totally ignore the Python logging mechanism.

My second thought was to use twisted.python.log, but that brings its
own set of problems:

 1. twisted.python.syslog isn't very... complete. For starters, it
    doesn't let you specify the syslog facility, and even if it did,
    twistd would need to be extended to support it.
 2. As has been discussed in the list archives, t.p.log doesn't support
    log-levels. While I can see glyph's point about the arbitraryness
    of fixed log-levels, I really do want to distinguish between
    "forensic record of ordinary operation" and "Danger, Will Robinson!"

I think the best way of solving my problems would be to:

 a) update t.p.syslog so that it supports a 'facility' parameter.
 b) update t.p.syslog so that log-messages with 'isError' true are
    logged with the LOG_ALERT priority rather than the default.
 c) update the Unix version of twistd to support a 'syslogFacility'
    command-line parameter.

Would such a patch be accepted? If necessary, I could replace (b) with
a syslog-based LogObserver in my own code, but I'm keen to have (a) and
(c) in the Twisted code-base.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080619/d8062ef1/attachment.sig>

From andyhird at gmail.com  Thu Jun 19 00:39:06 2008
From: andyhird at gmail.com (Andy Hird)
Date: Thu, 19 Jun 2008 16:39:06 +1000
Subject: [Twisted-Python] chaining deferreds
Message-ID: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>

Hi all,

I've been trying to get a really basic example of chaining deferreds going
with no luck. I was hoping someone could give me some help and tell me where
I'm going wrong.

I've attached the basic code to this message.

I'd expect output to be:


constructed deferred
setup everything
printing:  hello mr
doing something else: printed something
finishing up with: done something else

But instead the callback chain stops after print_something() has been called
(do_something inbetween and finish_up are never called).

Thanks for any help in advance!

Andy Hird
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080619/67d03bbe/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2.py
Type: text/x-python
Size: 640 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080619/67d03bbe/attachment-0002.py>

From o.fournier at perigord.com  Thu Jun 19 07:44:29 2008
From: o.fournier at perigord.com (Olivier Fournier)
Date: Thu, 19 Jun 2008 15:44:29 +0200
Subject: [Twisted-Python] web client and proxy
Message-ID: <485A62BD.7010201@perigord.com>

Hi,

My english is very bad, sorry...

I don't understand how to access to a web server behind a proxy from 
web.client ?
somebody could explain me how to do?

thanks

Olivier Fournier



From amauryfa at gmail.com  Thu Jun 19 08:06:59 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 19 Jun 2008 16:06:59 +0200
Subject: [Twisted-Python] web client and proxy
In-Reply-To: <485A62BD.7010201@perigord.com>
References: <485A62BD.7010201@perigord.com>
Message-ID: <e27efe130806190706jc2e947ek3f80bafeb26cb756@mail.gmail.com>

Olivier Fournier wrote:
> Hi,
>
> My english is very bad, sorry...
>
> I don't understand how to access to a web server behind a proxy from
> web.client ?
> somebody could explain me how to do?
>
> thanks

Here is a modified version of web.client.getPage() that I use behind a proxy:

def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 1: # use a proxy
        host, port = 'proxy', 6060
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = ssl.ClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred


Hope this helps,

-- 
Amaury Forgeot d'Arc



From phil at bubblehouse.org  Thu Jun 19 08:48:30 2008
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 19 Jun 2008 10:48:30 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080619162120.5b0a781f@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
Message-ID: <DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>

On Jun 19, 2008, at 2:21 AM, Tim Allen wrote:
> My second thought was to use twisted.python.log, but that brings its
> own set of problems:
>
> 1. twisted.python.syslog isn't very... complete. For starters, it
>    doesn't let you specify the syslog facility, and even if it did,
>    twistd would need to be extended to support it.

It's true that the syslog support is very experimental at this point,  
but what would need to be changed about twistd to support the  
necessary development?

I think the most likely scenario is that the standard logging code  
assumes logging will return immediately, but I feel like this could be  
worked around by having some kind of log queue that gets sent to  
syslog by some background thread (or better yet, a callLater pattern).

> 2. As has been discussed in the list archives, t.p.log doesn't support
>    log-levels. While I can see glyph's point about the arbitraryness
>    of fixed log-levels, I really do want to distinguish between
>    "forensic record of ordinary operation" and "Danger, Will  
> Robinson!"

t.p.log doesn't implicitly support log levels, but you can add  
arbitrary keywords to your call to log.msg. Then your observer can  
take care of routing log messages to the right places.

> I think the best way of solving my problems would be to:
>
> a) update t.p.syslog so that it supports a 'facility' parameter.
> b) update t.p.syslog so that log-messages with 'isError' true are
>    logged with the LOG_ALERT priority rather than the default.
> c) update the Unix version of twistd to support a 'syslogFacility'
>    command-line parameter.
>
> Would such a patch be accepted? If necessary, I could replace (b) with
> a syslog-based LogObserver in my own code, but I'm keen to have (a)  
> and
> (c) in the Twisted code-base.

I can't speak to whether such a patch would be accepted, but I know I  
have a couple of projects I've wanted to use syslogging for, and it  
would be great to have a stable solution in Twisted. However, the core  
dev team is fairly well inundated, so while you're working on a patch/ 
review, you might consider investigating another option in parallel.

If you package your code separately and join the Twisted Community  
Code project on Launchpad, you can get your code out there and in  
front of eyeballs while you work on getting a patch accepted into  
Twisted. If you can draw a reasonable amount of user attention, this  
may help with both testing and review, and make it easier to get your  
patch into Twisted proper.

-phil



From exarkun at divmod.com  Thu Jun 19 08:59:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 19 Jun 2008 10:59:03 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080619162120.5b0a781f@ws35.commsecure.com.au>
Message-ID: <20080619145903.4714.1429010304.divmod.quotient.10829@ohm>

On Thu, 19 Jun 2008 16:21:20 +1000, Tim Allen <tim at commsecure.com.au> wrote:
>Hi, all.
>
>I'm working on a new system to be deployed in our production
>environment, and having already decided on using Twisted, I'm now
>trying to figure out how to cleanly and reliably deploy it. I have many
>questions, but right now I just want to work through the issue of
>logging.

There's a ticket open in the issue tracker for log observer
customization, <http://twistedmatrix.com/trac/ticket/638>,
which has had some work done on it.  If you have time to work
on this, you might direct your efforts in the same direction
as that work.

Jean-Paul



From miwinter at cisco.com  Thu Jun 19 11:08:57 2008
From: miwinter at cisco.com (Mike Winter (miwinter))
Date: Thu, 19 Jun 2008 10:08:57 -0700
Subject: [Twisted-Python] RE: ipython & twisted: no module named threading 
Message-ID: <2CCFC74C714C4340B3F699F017F3419705EBA466@xmb-sjc-212.amer.cisco.com>

This is a record of analysis and consequent workaround to enable running
ipython and Twisted's trial. Posting to twisted, it probably requires no
action from twisted team since I suspect IPython is not dealing with the
situation correctly. Ipython needs to resolve the problem w/ a 

try: 
  import thread
except ImportException:  
  print "failed to import thread"
  import dummy_thread as thread

For ipython to 'work' I copy dummy_thread.py thread.py, then when I run
trial or twistd I see the following exception. If I delete the thread.py
this does not show up, but ipython stops working.

Exception exceptions.ImportError: 'No module named threading' in <bound
method local.__del__ of <_threading_local.local object at 0xb72f6874>>
ignored 

(venv)[miwinter at sawwing test]$ twistd -ny finger.tac shows the same
exception (from twisted's finger tutorial).

Python -V 2.4.5 and 2.5.1 and 2.5.2
Ipython-0.8.2       *
Twisted 8.1.0
virtualenv 1.0
CVSToys 1.0.10

python -m virtualenv venv
. venv/bin/activate
(venv)# make InstallTwisted (cd Twisted-8.1.0; python setup.py install)
(venv)# make InstallBuildbot (easy_install buildbot) (venv)# trial
buildbot.test.test_twisted .... Shows the above problem:
[skip]
PASSED (skips=37, successes=271)
Exception exceptions.AttributeError: "'NoneType' object has no attribute
'StringIO'" in <bound method RemoteReference.__del__ of
<twisted.spread.pb.RemoteReference instance at 0xb6856aec>> ignored
Exception exceptions.ImportError: 'No module named threading' in <bound
method local.__del__ of <_threading_local.local object at 0xb72dacfc>>
ignored

test main-trunk]$  md5sum lib/python2.4/thread*py
lib/python2.4/dummy_thread*py
3783492a0969521ff1266ec6c3e570c2  lib/python2.4/threading.py 
38db2323ac32ddbcad69888abd30d21f  lib/python2.4/dummy_threading.py 
52a6d92c98cc5a2eb68a3b1dde16e58b  lib/python2.4/thread.py 
52a6d92c98cc5a2eb68a3b1dde16e58b  lib/python2.4/dummy_thread.py

Without thread.py ipython will fail to start, so in my makefile I do: 

fixThread: bin/python lib/python$(PY_MACRO_VERSION)/thread.py

lib/python$(PY_MACRO_VERSION)/thread.py:
    (cd lib/python$(PY_MACRO_VERSION); cp dummy_thread.py thread.py)

This exception (see start of email) is perhaps caused by dummy.py
lacking some of the guts that some inappropriately intimate part of
threading.py depends upon. 

w/o target fixThread ipython will not start! Since resolving this by
bandaiding Makefile I thought it worthy to report that my patch to my
Makefile was to add target unfixThread: to reverse the effects of
fixThread which was a hack for ipython to work, better fix ipython
somehow.



From deldotdr at gmail.com  Thu Jun 19 15:23:16 2008
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 19 Jun 2008 14:23:16 -0700
Subject: [Twisted-Python] chaining deferreds
In-Reply-To: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>
References: <9f73af260806182339s3e7f0753we9930e3736f6cb05@mail.gmail.com>
Message-ID: <ea3c455d0806191423od69c65dnb55970d651b67265@mail.gmail.com>

Hi Andy,
Your example code is very close to working. The reason the chain didn't
proceed as you expected is because the callbacks of the second
Deferredcreated in the function
print_something were never triggered to run.

You need to keep track of what actually triggers a deferred's callback chain
to run and what each of the callback functions return.
In practice, that second deferred could have been replaced by some
asynchronous function that actually returned a deferred, and your code would
have worked.

The simplest change to make you code work is to change print_something to
this:

def print_something(x):
    print "printing: ", x
    d = defer.Deferred()
    d.addCallbacks(do_something_inbetween, oops)
    d.callback("printed something")
    return d
Doing this is kind of redundant though, because in this case it is
equivalent to:

def print_something(x):
    print "printing: ", x
    return do_something_inbetween('printed_something')


Another thing you can do instead of creating a new deferred is wrap the call
to do_something_inbetween with defer.maybeDeferred. This is convenient
because if do_something_inbetween does not return a deferred (which is the
case here), then maybeDeferred will do this for you.

Here's an example (a slight modification of your original) that includes
calling a function that returns a deferred and using maybeDeferred to
construct a deferred chain.


from twisted.internet import reactor, defer

def do_something_inbetween(x):
    print "doing something else: ", x
    return "done something else"

def print_something(x):
    print "printing: ", x
    d = defer.maybeDeferred(do_something_inbetween,'printed something')
    d.addCallbacks(finish_up, oops)
    return d

def finish_up(x):
    print "finishing up with: ", x

def oops(e):
    print str(e)

def go():
    print "constructed deferred"
    d = defer.Deferred()
    return d

def extra(r):
    print 'extra', r
    return r

d = go()
d.addCallback(print_something)
d.addCallback(extra)
d.addErrback(oops)
reactor.callLater(1, d.callback, "hello mr")
reactor.callLater(5, reactor.stop)
print "setup everything"
reactor.run()

Hope that helps.
-Dorian


On Wed, Jun 18, 2008 at 11:39 PM, Andy Hird <andyhird at gmail.com> wrote:

> Hi all,
>
> I've been trying to get a really basic example of chaining deferreds going
> with no luck. I was hoping someone could give me some help and tell me where
> I'm going wrong.
>
> I've attached the basic code to this message.
>
> I'd expect output to be:
>
>
> constructed deferred
> setup everything
> printing:  hello mr
> doing something else: printed something
> finishing up with: done something else
>
> But instead the callback chain stops after print_something() has been
> called (do_something inbetween and finish_up are never called).
>
> Thanks for any help in advance!
>
> Andy Hird
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080619/4317ae18/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2extra.py
Type: text/x-python
Size: 748 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080619/4317ae18/attachment-0004.py>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tw2-1.py
Type: text/x-python
Size: 651 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080619/4317ae18/attachment-0005.py>

From tim at commsecure.com.au  Thu Jun 19 20:13:46 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 20 Jun 2008 12:13:46 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
Message-ID: <20080620121346.59659d06@ws35.commsecure.com.au>

Phil Christensen <phil at bubblehouse.org> wrote:
> On Jun 19, 2008, at 2:21 AM, Tim Allen wrote:
> > My second thought was to use twisted.python.log, but that brings its
> > own set of problems:
> >
> > 1. twisted.python.syslog isn't very... complete. For starters, it
> >    doesn't let you specify the syslog facility, and even if it did,
> >    twistd would need to be extended to support it.
> 
> It's true that the syslog support is very experimental at this point,  
> but what would need to be changed about twistd to support the  
> necessary development?

As I understood it, twistd's philosophy was that logging-configuration
was a deployment issue and hence ought to be configured by tweaking
twistd command-line parameters rather than pre-configuring the
application to be deployed. twistd already has very simple logging
configuration options in the form of "--logfile" and "--syslog"; I
intended to add a "--syslog-facility=" command-line option [0].

Having skim-read ticket 638 that JP pointed to in another reply,
now I'm not so sure. It's kind of difficult to for me to understand the
current state of play, especially since that ticket predates the merge
of seemingly-related ticket 3052, but it *seems* to be a battle between
the camps of "twistd's logging is limited, it should be infinitely
extensible" and "twistd's logging is limited, applications
should be allowed to override it". Personally, I think I lean
more toward "it should be infinitely extensible" side - but right now I
don't really care about the general case of extensibility, I just want
more flexible syslog support.

At any rate, ticket 638 and other related tickets seem to be high-level
conceptual arguments, and I don't feel I have the domain-knowledge
required to comment intelligibly on them.

> I think the most likely scenario is that the standard logging code  
> assumes logging will return immediately, but I feel like this could be  
> worked around by having some kind of log queue that gets sent to  
> syslog by some background thread (or better yet, a callLater pattern).

I'm not sure what you're getting at here. Python's syslog module calls
syslog(3), which talks to syslogd(8). I don't know whether either or
any of those block waiting for the log message to be delivered; I would
hazard a guess that they don't.

> > I think the best way of solving my problems would be to:
> >
> > a) update t.p.syslog so that it supports a 'facility' parameter.
> > b) update t.p.syslog so that log-messages with 'isError' true are
> >    logged with the LOG_ALERT priority rather than the default.
> > c) update the Unix version of twistd to support a 'syslogFacility'
> >    command-line parameter.
> >
> > Would such a patch be accepted? If necessary, I could replace (b) with
> > a syslog-based LogObserver in my own code, but I'm keen to have (a)  
> > and
> > (c) in the Twisted code-base.
> 
> I can't speak to whether such a patch would be accepted, but I know I  
> have a couple of projects I've wanted to use syslogging for, and it  
> would be great to have a stable solution in Twisted. However, the core  
> dev team is fairly well inundated, so while you're working on a patch/ 
> review, you might consider investigating another option in parallel.
> 
> If you package your code separately and join the Twisted Community  
> Code project on Launchpad, you can get your code out there and in  
> front of eyeballs while you work on getting a patch accepted into  
> Twisted. If you can draw a reasonable amount of user attention, this  
> may help with both testing and review, and make it easier to get your  
> patch into Twisted proper.

Thanks for the advice - I'm not sure that patches to twistd could be
packaged separately, but I'll keep the possibility in mind in case I
think of anything.

Tim Allen

[0] I'm not familiar with t.p.usage; if it were possible to support
syntax like "--syslog=LOG_LOCAL0" while still supporting the "--syslog"
syntax in existing releases, that'd be ideal.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080620/8b293bdb/attachment.sig>

From glyph at divmod.com  Thu Jun 19 21:31:47 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 20 Jun 2008 03:31:47 -0000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620121346.59659d06@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
Message-ID: <20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>

On 02:13 am, tim at commsecure.com.au wrote:
>Having skim-read ticket 638 that JP pointed to in another reply,
>now I'm not so sure. It's kind of difficult to for me to understand the
>current state of play, especially since that ticket predates the merge
>of seemingly-related ticket 3052, but it *seems* to be a battle between
>the camps of "twistd's logging is limited, it should be infinitely
>extensible" and "twistd's logging is limited, applications
>should be allowed to override it". Personally, I think I lean
>more toward "it should be infinitely extensible" side - but right now I
>don't really care about the general case of extensibility, I just want
>more flexible syslog support.

Well, let me first say that your understanding of the issues here is 
remarkably deep and nuanced, despite your modesty :).  I hope that 
you'll stick around to help us take the whole logging system in Twisted 
to the next level...

I don't believe there are actually different "camps" here, and there 
isn't a lot of disagreement.  At least, I believe all of the core 
developers have essentially the same perspective, with differences in 
emphasis, not content.

There are two systems here.  Twisted's logging (i.e. 
twisted.python.log), and twistd's logging 
(twisted.internet._twistd_unix, twisted.internet._twistw, 
twisted.python.syslog, among other things).  Twisted's logging, while it 
could certainly be improved, is in reasonable shape.  It's extremely 
simple, and there is a clear and (mostly) well-specified "do anything 
you want" integration point: addObserver.  While there are some tweaks 
I'd like to see here, I don't think it's what we're talking about.

By contrast, twistd's logging, as the module names I mentioned above may 
indicate, is a squirrely mess of private and undocumented code, ad-hoc 
relationships, and so on.

The ticket which I believe most clearly explains how to fix this issue 
is #2751.  The question of "how do we tell where twistd thinks the logs 
go" is really just a tiny microcosm of "how do we tell what twistd 
thinks is going on around here".  There is no clear, uniform surface 
presented to affect twistd's configuration from anywhere, not even 
internally; let alone in user code.

The problem with the way you phrased the disagreement is the extreme 
vagueness of the word "application".  It really just means "some code". 
The reason you have picked up on opposition to the "applications should 
be allowed to override it" idea is that there is a tendency, when 
creating applications, to customize every aspect of the framework just 
because you can; to create a monolithic, non-cooperative chunk of code 
that just has a mainpoint and sets everything up for you.  An 
application, as in some code that uses Twisted to provide a network 
service, should be written in such a way that it is relatively agnostic 
about logging.  Some users might want to set it up to use syslog, some 
might want to get it in the logging module; some might want something 
really weird like Growl notifications or dbus messages.  Ergo, 
applications should not generally touch logging, no matter what our 
logging APIs look like.  This is what I'm talking about with the "it 
invites abuse" comment near the bottom of #638.

However, some "applications" *are* logging.  For example, if you wanted 
to do write some crazy log monitor that integrates with twistd process, 
you need two things: the "application" needs to allow the framework to 
handle logging, not muck with it itself (i.e. the thing I just said) and 
the framework needs to provide an interface for *your* application (i.e. 
the log monitor) to get in there and call some nice, well-documented 
APIs to reconfigure the way twistd has set up its logging.

The first application that needs to do this is twistd itself.  The 
internal APIs of twistd need to be organized such that it is easy to 
maintain and extend - for example, so that you could do the extension 
that you are proposing with syslog.  Once these APIs are tested, 
documented, and clearly factored, adding a plugin system to allow users 
to replace components of the logging system should be relatively 
straightforward.

Work is underway to do all of this; many of the tickets that we're 
talking about here have already have work underway.
>At any rate, ticket 638 and other related tickets seem to be high-level
>conceptual arguments, and I don't feel I have the domain-knowledge
>required to comment intelligibly on them.

I hope that this summary has improved your understanding somewhat. 
Don't let the depth of the issues here scare you; the best way to 
resolve major architectural headaches like this is one step at a time, 
responding to one specific use-case at a time.  So, I would recommend 
that you file a ticket if you haven't already, and simply add syslog 
facility support to twistd by adding a --syslog-facility command-line 
option (no, usage.Options won't let you have --foo and --foo=bar options 
at the same time, sorry...) and a _syslogFacility attribute to the 
UnixAppLogger object added by the fix to #3052.  You would of course 
need to add this to twisted.python.syslog as well, but I think the way 
to do that should be pretty straightforward.

If you feel the need to get fancy and add more features to t.p.syslog, 
make the factoring of the log configuration object finer-grained, or add 
a plugin system for twistd for log sinks so you can write your own 
syslog support, feel free!  However, ambitious and possibly 
controversial refactorings like that are a lot easier to talk about (and 
get done) when we can look at how they will improve the implementation 
of some existing feature, not for a speculative benefit.  So in any 
event you probably want to do the simple syslog facility addition first.

Also, congratulations on volunteering to maintain Twisted's log 
subsystem!  If you would like to decline, please see David Reid about 
fighting a bear on your way out.  ;-).



From tim at commsecure.com.au  Fri Jun 20 02:32:05 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 20 Jun 2008 18:32:05 +1000
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
	<20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
Message-ID: <20080620183205.258aa0ae@ws35.commsecure.com.au>

glyph at divmod.com wrote:
> On 02:13 am, tim at commsecure.com.au wrote:
> >Having skim-read ticket 638 that JP pointed to in another reply,
> >now I'm not so sure. It's kind of difficult to for me to understand the
> >current state of play, especially since that ticket predates the merge
> >of seemingly-related ticket 3052, but it *seems* to be a battle between
> >the camps of "twistd's logging is limited, it should be infinitely
> >extensible" and "twistd's logging is limited, applications
> >should be allowed to override it". Personally, I think I lean
> >more toward "it should be infinitely extensible" side - but right now I
> >don't really care about the general case of extensibility, I just want
> >more flexible syslog support.
> 
> Well, let me first say that your understanding of the issues here is 
> remarkably deep and nuanced, despite your modesty :). 

Thank you. :)

> I don't believe there are actually different "camps" here, and there 
> isn't a lot of disagreement.  At least, I believe all of the core 
> developers have essentially the same perspective, with differences in 
> emphasis, not content.
> 
> There are two systems here.  Twisted's logging (i.e. 
> twisted.python.log), and twistd's logging 
> (twisted.internet._twistd_unix, twisted.internet._twistw, 
> twisted.python.syslog, among other things).  Twisted's logging, while it 
> could certainly be improved, is in reasonable shape.  It's extremely 
> simple, and there is a clear and (mostly) well-specified "do anything 
> you want" integration point: addObserver.  While there are some tweaks 
> I'd like to see here, I don't think it's what we're talking about.

True; if I had to make a complaint about t.p.log, it would be that this
system for arbitrary event-sources to communicate with arbitrary
event-observers needs a well-defined interface to facilitate
communication. Currently, the only things an event-observer can rely on
are the 'isError' and 'system' fields being present, and probably
'message' and 'time'. Any observer winds up either depending on extra
fields set by a specific event-source (and hoping that no other
event-source happens to use the same field-names for different
purposes), or having to treat every event as a raw text event -
defeating the point of logging complicated events in the first place.

However! That's probably an entirely separate can of worms from the
actual problem I'm currently supposed to be working on, so I shall
leave it there for now. :)

> The ticket which I believe most clearly explains how to fix this issue 
> is #2751.  The question of "how do we tell where twistd thinks the logs 
> go" is really just a tiny microcosm of "how do we tell what twistd 
> thinks is going on around here".  There is no clear, uniform surface 
> presented to affect twistd's configuration from anywhere, not even 
> internally; let alone in user code.

A kind of document-object-model of application deployment
configuration, then?

> The first application that needs to do this is twistd itself.  The 
> internal APIs of twistd need to be organized such that it is easy to 
> maintain and extend - for example, so that you could do the extension 
> that you are proposing with syslog.  Once these APIs are tested, 
> documented, and clearly factored, adding a plugin system to allow users 
> to replace components of the logging system should be relatively 
> straightforward.
> 
> Work is underway to do all of this; many of the tickets that we're 
> talking about here have already have work underway.

Your most recent comment on #2571 is a lot more optimistic, it sounds
like twistd has most of the stuff it needs already.

If I have some free time, I might poke through the twistd code to see
if I can understand the architectural issues better.

> >At any rate, ticket 638 and other related tickets seem to be high-level
> >conceptual arguments, and I don't feel I have the domain-knowledge
> >required to comment intelligibly on them.
> 
> I hope that this summary has improved your understanding somewhat. 
> Don't let the depth of the issues here scare you; the best way to 
> resolve major architectural headaches like this is one step at a time, 
> responding to one specific use-case at a time.  So, I would recommend 
> that you file a ticket if you haven't already, and simply add syslog 
> facility support to twistd by adding a --syslog-facility command-line 
> option (no, usage.Options won't let you have --foo and --foo=bar options 
> at the same time, sorry...) and a _syslogFacility attribute to the 
> UnixAppLogger object added by the fix to #3052.  You would of course 
> need to add this to twisted.python.syslog as well, but I think the way 
> to do that should be pretty straightforward.

Filed as #3300, with patches and explanations.

> Also, congratulations on volunteering to maintain Twisted's log 
> subsystem!  If you would like to decline, please see David Reid about 
> fighting a bear on your way out.  ;-).

Well, we'll see how I go. ;)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080620/b7bc95e1/attachment.sig>

From itamar at itamarst.org  Fri Jun 20 07:40:25 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 20 Jun 2008 09:40:25 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <20080620183205.258aa0ae@ws35.commsecure.com.au>
References: <20080619162120.5b0a781f@ws35.commsecure.com.au>
	<DD3E0333-4B7F-4ED6-8740-A808F316DA7F@bubblehouse.org>
	<20080620121346.59659d06@ws35.commsecure.com.au>
	<20080620033147.25821.1614590854.divmod.xquotient.10083@joule.divmod.com>
	<20080620183205.258aa0ae@ws35.commsecure.com.au>
Message-ID: <1213969225.20839.96.camel@localhost.localdomain>

On Fri, 2008-06-20 at 18:32 +1000, Tim Allen wrote:

> True; if I had to make a complaint about t.p.log, it would be that this
> system for arbitrary event-sources to communicate with arbitrary
> event-observers needs a well-defined interface to facilitate
> communication. Currently, the only things an event-observer can rely on
> are the 'isError' and 'system' fields being present, and probably
> 'message' and 'time'. Any observer winds up either depending on extra
> fields set by a specific event-source (and hoping that no other
> event-source happens to use the same field-names for different
> purposes), or having to treat every event as a raw text event -
> defeating the point of logging complicated events in the first place.

The plan was (is) to switch to requiring a interface=IFooMessageType
keyword. Some day :(





From exarkun at divmod.com  Fri Jun 20 07:45:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 20 Jun 2008 09:45:32 -0400
Subject: [Twisted-Python] Twisted, twistd and logging
In-Reply-To: <1213969225.20839.96.camel@localhost.localdomain>
Message-ID: <20080620134532.4714.761069280.divmod.quotient.11193@ohm>

On Fri, 20 Jun 2008 09:40:25 -0400, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Fri, 2008-06-20 at 18:32 +1000, Tim Allen wrote:
>
>> True; if I had to make a complaint about t.p.log, it would be that this
>> system for arbitrary event-sources to communicate with arbitrary
>> event-observers needs a well-defined interface to facilitate
>> communication. Currently, the only things an event-observer can rely on
>> are the 'isError' and 'system' fields being present, and probably
>> 'message' and 'time'. Any observer winds up either depending on extra
>> fields set by a specific event-source (and hoping that no other
>> event-source happens to use the same field-names for different
>> purposes), or having to treat every event as a raw text event -
>> defeating the point of logging complicated events in the first place.
>
>The plan was (is) to switch to requiring a interface=IFooMessageType
>keyword. Some day :(
>

No changes to twisted.python.log are required for this.  Anyone can log
messages with an interface key and use that in their log observer to
unambiguously interpret the rest of the keys.

It might be nice if Twisted's own log events included an interface, but
it's not really a very big deal.

Jean-Paul



From ninmonkeys at gmail.com  Fri Jun 20 15:04:06 2008
From: ninmonkeys at gmail.com (Jake b)
Date: Fri, 20 Jun 2008 16:04:06 -0500
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <E1K8tLj-00081N-6x@cube.twistedmatrix.com>
References: <18520.5581.592635.559250@jon.es>
	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
Message-ID: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>

On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de> wrote:

> Thank you all for your replies.
>
> @Christian:
> I should have mentioned that. The current directory is in the pythonpath.
> In
> the variable PYHTONPATH the dot is set and when I walk through the
> filesystem, starting python from different locations, the current path is
> always set in sys.path. Hence, I asssume that PythonPath is set correctly.
> So your suggestion, what I thought would work
> >  cd \original_project
> >  trial package_to_test
> >
> >  cd \modified_project
> >  trial package_to_test
> does actually not work. Who knows why...

I'm guessing this is abnormal behavior that's on WinXP only? I on winXP have
tried setting multiple environment variables to include a project path, but
imports did not work. The only way I could add a path to python's import
paths on winXP was to edit the registry.

If PYTHONPATH being set in windowsXP doesn't seem to have any effect (Like
it doesn't seem to work for me ) the only fix I found was a registry edit.
At the path: HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new
key, ie: 'project1', create a new value, name=(Default),
value='c:\data\path\to\project'


> I have never really used a version control system I have to admit. I
> thought
> of control systems to log changes which can in case of severe damage or
> what
> ever reason be made undone. But if I can execute different versions of the
> project, e.g. in my case the initial version and the last modified, just by
> saying run this one or that one, I am glad to use it. Can this be done
> (excuse my probably dumb question)? Can someone please give me catchword to
> search for? As I looked briefly in the bazaar guide
> (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I wasn't able
> to find anything helpful.

( I don't know much about version control, it's something I'm looking into.
) A term to search, maybe you're looking for is 'clone' or 'branch'.

If you meant to search for differnt code versioning programs, here's some:
Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion (
http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )

Hope that helps :P
-- 
Jake
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080620/f54cc406/attachment.html>

From steve at holdenweb.com  Fri Jun 20 15:50:41 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 20 Jun 2008 17:50:41 -0400
Subject: [Twisted-Python] Re: Twisted Trial
In-Reply-To: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
References: <18520.5581.592635.559250@jon.es>	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
	<dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
Message-ID: <485C2631.2070503@holdenweb.com>

Jake b wrote:
> On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de 
> <mailto:c2k_list at gmx.de>> wrote:
> 
>     Thank you all for your replies.
> 
>     @Christian:
>     I should have mentioned that. The current directory is in the
>     pythonpath. In
>     the variable PYHTONPATH the dot is set and when I walk through the
>     filesystem, starting python from different locations, the current
>     path is
>     always set in sys.path. Hence, I asssume that PythonPath is set
>     correctly.
>     So your suggestion, what I thought would work
>      >  cd \original_project
>      >  trial package_to_test
>      >
>      >  cd \modified_project
>      >  trial package_to_test
>     does actually not work. Who knows why...
> 
> I'm guessing this is abnormal behavior that's on WinXP only? I on winXP 
> have tried setting multiple environment variables to include a project 
> path, but imports did not work. The only way I could add a path to 
> python's import paths on winXP was to edit the registry.
> 
> If PYTHONPATH being set in windowsXP doesn't seem to have any effect 
> (Like it doesn't seem to work for me ) the only fix I found was a 
> registry edit. At the path: 
> HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new key, ie: 
> 'project1', create a new value, name=(Default), 
> value='c:\data\path\to\project'
>  
PYTHONPATH works just fine under XP. You need to either set it globally 
(in the System Properties|Advanced|Environment variables) or use a "set" 
statement from the command line in a specific session. And don't forget 
the list should be semicolon separated under Windows.

> 
>     I have never really used a version control system I have to admit. I
>     thought
>     of control systems to log changes which can in case of severe damage
>     or what
>     ever reason be made undone. But if I can execute different versions
>     of the
>     project, e.g. in my case the initial version and the last modified,
>     just by
>     saying run this one or that one, I am glad to use it. Can this be done
>     (excuse my probably dumb question)? Can someone please give me
>     catchword to
>     search for? As I looked briefly in the bazaar guide
>     (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I
>     wasn't able
>     to find anything helpful.
> 
> ( I don't know much about version control, it's something I'm looking 
> into. ) A term to search, maybe you're looking for is 'clone' or 'branch'.
> 
> If you meant to search for differnt code versioning programs, here's 
> some: Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion ( 
> http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )
> 
Subversion might be a friendly place to start. Good documentation anyway!

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From mailing_lists at evotex.ch  Fri Jun 20 16:35:10 2008
From: mailing_lists at evotex.ch (Gabriel Rossetti)
Date: Sat, 21 Jun 2008 00:35:10 +0200
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
References: <18520.5581.592635.559250@jon.es>	<E1K8tLj-00081N-6x@cube.twistedmatrix.com>
	<dc44bb3e0806201404l670405bn49b8865b765aa1a1@mail.gmail.com>
Message-ID: <485C309E.9040707@evotex.ch>

Jake b wrote:
> On Wed, Jun 18, 2008 at 3:48 AM, Torsten A. <c2k_list at gmx.de 
> <mailto:c2k_list at gmx.de>> wrote:
>
>     Thank you all for your replies.
>
>     @Christian:
>     I should have mentioned that. The current directory is in the
>     pythonpath. In
>     the variable PYHTONPATH the dot is set and when I walk through the
>     filesystem, starting python from different locations, the current
>     path is
>     always set in sys.path. Hence, I asssume that PythonPath is set
>     correctly.
>     So your suggestion, what I thought would work
>     >  cd \original_project
>     >  trial package_to_test
>     >
>     >  cd \modified_project
>     >  trial package_to_test
>     does actually not work. Who knows why...
>
> I'm guessing this is abnormal behavior that's on WinXP only? I on 
> winXP have tried setting multiple environment variables to include a 
> project path, but imports did not work. The only way I could add a 
> path to python's import paths on winXP was to edit the registry.
I test Twisted stuff on XP to ensure it will work on inferior ;-) 
systems, and I have no problem setting PYTHONPATH. Seriously though, 
let's say my code is on the desktop (I know, not a good place, but it's 
just for testing):

C:\Documents and 
Settings\User01\Desktop\MyProject                                  <-- 
Project root, not a python package, just a directory
C:\Documents and Settings\User01\Desktop\MyProject\src                   
         <-- Source directory, not a python package, just a directory
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1                   <-- Root 
package
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1\test            <-- Root 
package's test package, this is where the unit tests for this level are
C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1\pkg2          <-- First child 
package
C:\Documents and Settings\User01\Desktop\MyProject\src\pkg1\pkg2\test   
<-- First child package's unit tests

and so on.

Then I set my pythonPath to :

PYTHONPATH=C:\Documents and 
Settings\User01\Desktop\MyProject\src;C:\Documents and 
Settings\User01\Desktop\MyProject\src\pkg1

If I don't add the src (just a directory, not a package) AND the "root" 
package (pkg1 in my example), it doesn't work, try that maybe. I have to 
export the same thing in Linux, so it's not a Windows XP problem. It may 
be because pkg1 contains nothing except pkg2 (and an __init__.py), and 
all the interesting code is in pkg2. In reality, in my case, pgk1 is the 
company name, and pkg2 is one of the products' name, so you have to 
adapt this to your case.

 I suppose you did either reboot or reload the environment before trying 
anything, if not then it won't work. Now to run the project's code, I do 
this :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
python pkg1\pkg2\my_main.py

And for trail it's the same thing (sort of, replace '\' with '.'), I'm 
going to run all of pkg's tests next :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2

or you can specify the test package directly, so it only runs that one :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2.test

or if you want to run individual tests :

cd C:\Documents and Settings\User01\Desktop\MyProject\src
trial pkg1.pkg2.test.test_module1

I hope this helps!
Gabriel
>
> If PYTHONPATH being set in windowsXP doesn't seem to have any effect 
> (Like it doesn't seem to work for me ) the only fix I found was a 
> registry edit. At the path: 
> HKLM\SOFTWARE\Python\PythonCore\2.5\PythonPath create a new key, ie: 
> 'project1', create a new value, name=(Default), 
> value='c:\data\path\to\project'
>  
>
>     I have never really used a version control system I have to admit.
>     I thought
>     of control systems to log changes which can in case of severe
>     damage or what
>     ever reason be made undone. But if I can execute different
>     versions of the
>     project, e.g. in my case the initial version and the last
>     modified, just by
>     saying run this one or that one, I am glad to use it. Can this be done
>     (excuse my probably dumb question)? Can someone please give me
>     catchword to
>     search for? As I looked briefly in the bazaar guide
>     (http://doc.bazaar-vcs.org/bzr.dev/en/user-guide/index.html) I
>     wasn't able
>     to find anything helpful.
>
> ( I don't know much about version control, it's something I'm looking 
> into. ) A term to search, maybe you're looking for is 'clone' or 
> 'branch'.
>
> If you meant to search for differnt code versioning programs, here's 
> some: Mercurial ( http://www.selenic.com/mercurial/wiki/ ), Subversion 
> ( http://subversion.tigris.org/ ), TortoiseSVN ( http://tortoisesvn.net/ )
>
> Hope that helps :P
> -- 
> Jake
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   




From iraehc at hotmail.com  Sat Jun 21 14:26:37 2008
From: iraehc at hotmail.com (Irae Hueck Costa)
Date: Sat, 21 Jun 2008 22:26:37 +0200
Subject: [Twisted-Python] reject all open connections
Message-ID: <BLU125-W460D274CA37899258CC900DBA40@phx.gbl>




hi all!

i just want to clean my reactor - all readers and writer should looseConnection()

but how can i do this? reactor.removeAll() dont do it.
the best solutions i found was a horrible workaround:
a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``

is there a better solution?

thank you

_________________________________________________________________
Conheça o Windows Live Spaces, a rede de relacionamentos do Messenger!
http://www.amigosdomessenger.com.br/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080621/5811aea7/attachment.html>

From exarkun at twistedmatrix.com  Sat Jun 21 22:05:10 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 22 Jun 2008 04:05:10 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1214107510.96.1128874378@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080622/b28d1aac/attachment.html>

From uupandemo at 126.com  Sun Jun 22 21:37:33 2008
From: uupandemo at 126.com (uupandemo)
Date: Mon, 23 Jun 2008 11:37:33 +0800 (CST)
Subject: [Twisted-Python] How to set client timeout with reactor.listenTCP?
Message-ID: <29425003.156751214192253181.JavaMail.coremail@bj126app50.126.com>

When a client to the server socket, server can't close the connection while the idle time exceed the timeout.


How to solve it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080623/e165be08/attachment.html>

From Sean.Burling at v-hr.com  Mon Jun 23 04:53:59 2008
From: Sean.Burling at v-hr.com (Sean Burling)
Date: Mon, 23 Jun 2008 11:53:59 +0100
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>

Hi people,

 

My name is Sean Burling and I am an account manager for V-hr, an IT
recruitment company based in London.

 

I am currently seeking a Senior Python Developer/ Team Lead (ideally
with exposure to either Django or Twisted) for a multimedia company
based in the heart of Amsterdam.

 

I am struggling to find candidates with the relevant experience and as
such wanted to reach out to the list to find out if any of you or your
contacts are interested in new opportunities in Europe.

 

I apologise if this has reached you in error, however to find out more
about this opportunity please contact me on +44 (0)207 500 7992.

 

Kind Regards

 

Sean Burling

Account  Manager

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080623/cf7026a4/attachment.html>

From steve at holdenweb.com  Mon Jun 23 05:08:19 2008
From: steve at holdenweb.com (Steve Holden)
Date: Mon, 23 Jun 2008 07:08:19 -0400
Subject: [Twisted-Python] Re: Urgently Seeking.......
In-Reply-To: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>
References: <7D558B2A202EC14698253F85E2455823707D0C@vhrdc1.V-HR.local>
Message-ID: <485F8423.9070701@holdenweb.com>

Sean:

You might also be interested in knowing about

   http://python.org/community/jobs/howto

regards
  Steve

Sean Burling wrote:
> Hi people,
> 
>  
> 
> My name is Sean Burling and I am an account manager for V-hr, an IT 
> recruitment company based in London.
> 
>  
> 
> I am currently seeking a Senior Python Developer/ Team Lead (ideally 
> with exposure to either Django or Twisted) for a multimedia company 
> based in the heart of Amsterdam.
> 
>  
> 
> I am struggling to find candidates with the relevant experience and as 
> such wanted to reach out to the list to find out if any of you or your 
> contacts are interested in new opportunities in Europe.
> 
>  
> 
> I apologise if this has reached you in error, however to find out more 
> about this opportunity please contact me on +44 (0)207 500 7992.
> 
>  
> 
> Kind Regards
> 
>  
> 
> Sean Burling
> 
> Account  Manager
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From exarkun at divmod.com  Mon Jun 23 05:33:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Jun 2008 07:33:35 -0400
Subject: [Twisted-Python] How to set client timeout with reactor.listenTCP?
In-Reply-To: <29425003.156751214192253181.JavaMail.coremail@bj126app50.126.com>
Message-ID: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>

On Mon, 23 Jun 2008 11:37:33 +0800 (CST), uupandemo <uupandemo at 126.com> wrote:
>When a client to the server socket, server can't close the connection while the idle time exceed the timeout.
>
>
>How to solve it?
>

When a client does what?  Why can't the server close the connection?  Can
you clarify the question a bit?  Perhaps you can include a minimal runnable
example that demonstrates the problem.

Jean-Paul



From anuraguniyal at yahoo.com  Mon Jun 23 06:51:37 2008
From: anuraguniyal at yahoo.com (anurag uniyal)
Date: Mon, 23 Jun 2008 18:21:37 +0530 (IST)
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <302705.41668.qm@web94509.mail.in2.yahoo.com>

Hi,
I have about 8 years of exp.in python and have exp. with both twisted and django and I am currently located in India.
I would like to know more about this oppurtunity
e.g what type of project it is, how technically involved.
and is tellecommuting is an option here?
thanks and regards
Anurag



----- Original Message ----
From: Sean Burling <Sean.Burling at v-hr.com>
To: twisted-python at twistedmatrix.com
Sent: Monday, 23 June, 2008 4:23:59 PM
Subject: [Twisted-Python] Urgently Seeking.......


Hi people,
 
My name is Sean Burling and I am an account manager for V-hr, an IT recruitment company based in London.
 
I am currently seeking a Senior Python Developer/ Team Lead (ideally with exposure to either Django or Twisted) for a multimedia company based in the heart of Amsterdam.
 
I am struggling to find candidates with the relevant experience and as such wanted to reach out to the list to find out if any of you or your contacts are interested in new opportunities in Europe.
 
I apologise if this has reached you in error, however to find out more about this opportunity please contact me on +44 (0)207 500 7992.
 
Kind Regards
 
Sean Burling
Account  Manager


      Explore your hobbies and interests. Go to http://in.promos.yahoo.com/groups/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080623/0f59761f/attachment.html>

From anuraguniyal at yahoo.com  Mon Jun 23 06:55:45 2008
From: anuraguniyal at yahoo.com (anurag uniyal)
Date: Mon, 23 Jun 2008 18:25:45 +0530 (IST)
Subject: [Twisted-Python] Urgently Seeking.......
Message-ID: <892315.14784.qm@web94505.mail.in2.yahoo.com>

I am extremely sorry, please ignore this email.
rgds
Anurag



----- Original Message ----
From: anurag uniyal <anuraguniyal at yahoo.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Monday, 23 June, 2008 6:21:37 PM
Subject: Re: [Twisted-Python] Urgently Seeking.......


Hi,
 
I have about 8 years of exp.in python and have exp. with both twisted and django and I am currently located in India.
 
I would like to know more about this oppurtunity
e.g what type of project it is, how technically involved.
and is tellecommuting is an option here?
 
thanks and regards
Anurag



----- Original Message ----
From: Sean Burling <Sean.Burling at v-hr.com>
To: twisted-python at twistedmatrix.com
Sent: Monday, 23 June, 2008 4:23:59 PM
Subject: [Twisted-Python] Urgently Seeking.......


Hi people,
 
My name is Sean Burling and I am an account manager for V-hr, an IT recruitment company based in London.
 
I am currently seeking a Senior Python Developer/ Team Lead (ideally with exposure to either Django or Twisted) for a multimedia company based in the heart of Amsterdam.
 
I am struggling to find candidates with the relevant experience and as such wanted to reach out to the list to find out if any of you or your contacts are interested in new opportunities in Europe.
 
I apologise if this has reached you in error, however to find out more about this opportunity please contact me on +44 (0)207 500 7992.
 
Kind Regards
 
Sean Burling
Account  Manager
________________________________
From Chandigarh to Chennai - find friends all over India. Click here.


      Best Jokes, Best Friends, Best Food and more. Go to http://in.promos.yahoo.com/groups/bestofyahoo/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080623/80213d1d/attachment.html>

From uupandemo at 126.com  Mon Jun 23 08:36:45 2008
From: uupandemo at 126.com (uupandemo)
Date: Mon, 23 Jun 2008 22:36:45 +0800 (CST)
Subject: [Twisted-Python] How to set client timeout with
	reactor.listenTCP?
In-Reply-To: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>
References: <20080623113335.4714.1522304085.divmod.quotient.12152@ohm>
Message-ID: <3979219.464221214231805162.JavaMail.coremail@bj126app90.126.com>

 
 def main():
    port=8008
    reactor.listenTCP(port,policyServerFactory())
    reactor.run()

$ telnet localhost 8008 
Trying 127.0.0.1...
Connected to policy.126.com (127.0.0.1).
Escape character is '^]'.

--------------
Client will not close the connect unit it disconnects itself. But the server can't control the connect. In some critical environment, the server has to maintain a lot of connect which maybe is idle.

So I want to the server initiative disconnect the idle connection reache timeout.


 
 


在2008-06-23 19:33:35，"Jean-Paul Calderone" <exarkun at divmod.com> 写道：
>On Mon, 23 Jun 2008 11:37:33 +0800 (CST), uupandemo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080623/16783664/attachment.html>

From exarkun at divmod.com  Mon Jun 23 08:46:32 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 23 Jun 2008 10:46:32 -0400
Subject: [Twisted-Python] How to set client timeout with
	reactor.listenTCP?
In-Reply-To: <3979219.464221214231805162.JavaMail.coremail@bj126app90.126.com>
Message-ID: <20080623144632.4714.97679056.divmod.quotient.12195@ohm>

On Mon, 23 Jun 2008 22:36:45 +0800 (CST), uupandemo <uupandemo at 126.com> wrote:
>
> def main():
>    port=8008
>    reactor.listenTCP(port,policyServerFactory())
>    reactor.run()
>
>$ telnet localhost 8008
>Trying 127.0.0.1...
>Connected to policy.126.com (127.0.0.1).
>Escape character is '^]'.
>
>--------------
>Client will not close the connect unit it disconnects itself. But the server can't control the connect. In some critical environment, the server has to maintain a lot of connect which maybe is idle.
>
>So I want to the server initiative disconnect the idle connection reache timeout.
>

You might find twisted.protocols.policies.TimeoutMixin helpful.  Use it
with your protocol implementation to define arbitrary behavior to be run
after the client has been idle for a period of time you define.

Jean-Paul



From jml at mumak.net  Mon Jun 23 23:57:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 24 Jun 2008 15:57:16 +1000
Subject: [Twisted-Python] AMP compliance tests
Message-ID: <d06a5cd30806232257t7f2fa7cfo9afe6dde74a9dd5b@mail.gmail.com>

Hello all,

Where can I find a set of automated tests that check that a particular
AMP implementation is complete?

I seem to recall someone on #twisted mentioning that they were working
on such a suite.

thanks,
jml



From cdelfosse at mandriva.com  Tue Jun 24 07:09:07 2008
From: cdelfosse at mandriva.com (Cedric Delfosse)
Date: Tue, 24 Jun 2008 15:09:07 +0200
Subject: [Twisted-Python] IPv6 support in Python Twisted
Message-ID: <1214312947.3932.33.camel@lolita.localnet>

Hello,
        
I'm wondering what is the current status of IPv6 support in the Twisted
framework. I only found this ipv6.py file there:
http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py

Is IPv6 support scheduled in Twisted roadmap ?

Best regards,

-- 
Cedric Delfosse                                    Mandriva / Linbox
152, rue de Grigy - Technopole Metz              57070 METZ - FRANCE
tel: +33 (0)3 87 50 87 90                        http://mandriva.com




From dripton at ripton.net  Tue Jun 24 08:49:06 2008
From: dripton at ripton.net (David Ripton)
Date: Tue, 24 Jun 2008 07:49:06 -0700
Subject: [Twisted-Python] IPv6 support in Python Twisted
In-Reply-To: <1214312947.3932.33.camel@lolita.localnet>
References: <1214312947.3932.33.camel@lolita.localnet>
Message-ID: <20080624144906.GA31542@vidar.dreamhost.com>

On 2008.06.24 15:09:07 +0200, Cedric Delfosse wrote:
> I'm wondering what is the current status of IPv6 support in the Twisted
> framework. I only found this ipv6.py file there:
> http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py
> 
> Is IPv6 support scheduled in Twisted roadmap ?

I don't think so.

See http://twistedmatrix.com/trac/ticket/3014

The code that's there basically works (TCP only; I didn't tackle UDP
yet).  It hasn't been merged into trunk.

Changing Twisted to support IPv6 is not that hard.  The hard part is
doing so without breaking backward compatibility or making public APIs
uglier.

-- 
David Ripton    dripton at ripton.net



From glyph at divmod.com  Tue Jun 24 13:09:46 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 24 Jun 2008 19:09:46 -0000
Subject: [Twisted-Python] IPv6 support in Python Twisted
In-Reply-To: <20080624144906.GA31542@vidar.dreamhost.com>
References: <1214312947.3932.33.camel@lolita.localnet>
	<20080624144906.GA31542@vidar.dreamhost.com>
Message-ID: <20080624190946.25821.1031921709.divmod.xquotient.10133@joule.divmod.com>


On 02:49 pm, dripton at ripton.net wrote:
>On 2008.06.24 15:09:07 +0200, Cedric Delfosse wrote:
>>I'm wondering what is the current status of IPv6 support in the 
>>Twisted
>>framework. I only found this ipv6.py file there:
>>http://twistedmatrix.com/trac/browser/sandbox/exarkun/ipv6.py
>>
>>Is IPv6 support scheduled in Twisted roadmap ?
>
>I don't think so.

The twisted roadmap is currently the ticket tracker. There's a ticket. 
Therefore, yes it is ;).
>See http://twistedmatrix.com/trac/ticket/3014
>
>The code that's there basically works (TCP only; I didn't tackle UDP
>yet).  It hasn't been merged into trunk.

It's important to note that this ticket is in a state where progress is 
not being made.  For some reason, dripton's patch was not reviewed, 
instead therve put it into a branch and never put it up for review 
again.  I guess some of the comments since then might be construed as 
review feedback, but they look pretty informal (mine certainly weren't 
intended to be that way).

If someone wants this to get merged, there should be another attempt at 
putting it into review again.
>Changing Twisted to support IPv6 is not that hard.  The hard part is
>doing so without breaking backward compatibility or making public APIs
>uglier.

For what it's worth, connectTCP6 satisfies the compatibility 
requirements, it's just unfortunately ugly.  Looking at it now, maybe 
that's unavoidable because IPv6 itself is unfortunately ugly. 
("flowinfo"?  "scopeid"?)  Ugly is unfortunate, but it wins over 
breaking compatibility, which is just not allowed.

Anyway, please feel free to attach further comments to the ticket.  In 
particular it'd be nice if someone could answer my question about 
automatic failover being undesirable :).



From nathan.stocks at gmail.com  Tue Jun 24 16:43:42 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Tue, 24 Jun 2008 16:43:42 -0600
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
Message-ID: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>

Is there a more sane way to get the exit code from a ProcessProtocol
than by parsing it out of reason.value in
ProcessProtocol.processEnded()?  I can't seem to find the error code
by itself anywhere. (see example code at bottom)

If I replace "print reason.value" with "print dir(reason)" below, then
I get the following output for both successful and unsuccessful
spawns:

['__doc__', '__getstate__', '__init__', '__module__', '__repr__',
'__str__', '_findFailure', '_yieldOpcode', 'check', 'cleanFailure',
'count', 'frames', 'getBriefTraceback', 'getErrorMessage',
'getTraceback', 'getTracebackObject', 'parents', 'pickled',
'printBriefTraceback', 'printDetailedTraceback', 'printTraceback',
'raiseException', 'stack', 'tb', 'throwExceptionIntoGenerator',
'trap', 'type', 'value']

Most of the *Traceback functions include the "value" line inside them.
 getErrorMessage() apparently returns "value" itself.  "value" looks
like:

"A process has ended without apparent errors: process finished with
exit code 0."

or

"A process has ended with a probable error condition: process ended
with exit code 1."

...but the actual exit code doesn't seep to appear (by itself) anywhere!

~ Nathan



from twisted.internet import reactor
from twisted.internet.protocol import ProcessProtocol

class TestProtocol(ProcessProtocol):
   def processEnded(self, reason):
      print reason.value

def good():
   good_binary = "/bin/ls"
   good_args = ("/bin/ls", '/')
   good_process = reactor.spawnProcess(TestProtocol(), good_binary,
args=good_args)

def bad():
   bad_binary = "/bad"
   bad_args = ("/bad", '/')
   bad_process = reactor.spawnProcess(TestProtocol(), bad_binary, args=bad_args)

reactor.callWhenRunning(good)
reactor.callLater(1.0, bad)
reactor.callLater(2.0, reactor.stop)
reactor.run()



From itamar at itamarst.org  Tue Jun 24 17:39:48 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 24 Jun 2008 19:39:48 -0400
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
In-Reply-To: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
References: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
Message-ID: <1214350789.20839.112.camel@localhost.localdomain>

On Tue, 2008-06-24 at 16:43 -0600, Nathan wrote:
> Is there a more sane way to get the exit code from a ProcessProtocol
> than by parsing it out of reason.value in
> ProcessProtocol.processEnded()?  I can't seem to find the error code
> by itself anywhere. (see example code at bottom)
> 
> If I replace "print reason.value" with "print dir(reason)" below, then
> I get the following output for both successful and unsuccessful
> spawns:

reason.value will be instance of ProcessExited or something (it's in
twisted.internet.error), which should have exitCode attribute or
something. Check the API reference for twisted.internet.error.




From nathan.stocks at gmail.com  Wed Jun 25 10:55:13 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Wed, 25 Jun 2008 10:55:13 -0600
Subject: [Twisted-Python] Sane way to get the exit code from
	reactor.spawnProcess(SomeProtocol, ...)
In-Reply-To: <1214350789.20839.112.camel@localhost.localdomain>
References: <96c9d6a80806241543y3f20c39ge934edd5a005c8ed@mail.gmail.com>
	<1214350789.20839.112.camel@localhost.localdomain>
Message-ID: <96c9d6a80806250955h576a6fb3v6ed4decc611ef682@mail.gmail.com>

On Tue, Jun 24, 2008 at 5:39 PM, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> reason.value will be instance of ProcessExited or something (it's in
> twisted.internet.error), which should have exitCode attribute or
> something. Check the API reference for twisted.internet.error.

Ah, that's what I was missing.  Since "print reason.value" spit out
such a nice string, I falsely assumed it was just a string.

reason.value.exitCode is what I was looking for.  Thanks!

~ Nathan



From dfarrell at mypublisher.com  Wed Jun 25 11:12:17 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Wed, 25 Jun 2008 13:12:17 -0400
Subject: [Twisted-Python] Question about using a deferred
Message-ID: <318F79422ADC5041A93343721F84474DECF2D5@exchange.mypublisher.local>

Hi all,

 

I've written a twisted server that handles logging messags from the
logging.handlers.SocketHandler class. The protocol I've written handles
the messages and then calls its own instance of a logger to log the
message to. I'm wondering if the file I/O the logger is doing is
something I hand off to a deferred, or is it quick enough to not to
worry about?

 

Thanks!

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080625/6a124338/attachment.html>

From matthieu.brucher at gmail.com  Wed Jun 25 12:28:36 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 25 Jun 2008 20:28:36 +0200
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>
References: <e76aa17f0806172351r5af10e0dyb2b9833ed3c995ea@mail.gmail.com>
Message-ID: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>

Hi again,

Does someone have a pointer ? It should be enough for me to start with ;)
I thought about this:
- creation of the client
- initialization of the messenger
- when building the messenger, I create a DeferredList (or something like that)
- when sending a message, I call a send() method that will either add
the message to the DeferredList or directly send() is the DeferredList
was processed.
- when the initialization is complete, the DeferredList is processed.

Is this realistic?

Matthieu

2008/6/18 Matthieu Brucher <matthieu.brucher at gmail.com>:
> Hi,
>
> I'm new to twisted and I'm trying to implement a set of protocols
> (already available in Java, JXSE). I lamost know how I will set up the
> different services that will communicate through the reactor, but I'm
> starting from the beginning, so here is my real question.
> How can I set up a factory (using a TCP protocol) so that when I want
> to send a message to someone, it connects though TCP to the other
> computer, they exchange a welcome message, and only then the message
> is sent though the TCP protocol ? Of course, it is not as simple as
> this, but if someone has a pointer, I will be able to fill the missing
> pieces in my design ;)
>
> Thanks,
> Matthieu
> --
> French PhD student
> Website : http://matthieu-brucher.developpez.com/
> Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
> LinkedIn : http://www.linkedin.com/in/matthieubrucher
>



-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From exarkun at divmod.com  Wed Jun 25 12:34:08 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 25 Jun 2008 14:34:08 -0400
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>
Message-ID: <20080625183408.4714.11698012.divmod.quotient.13082@ohm>

On Wed, 25 Jun 2008 20:28:36 +0200, Matthieu Brucher <matthieu.brucher at gmail.com> wrote:
>Hi again,
>
>Does someone have a pointer ? It should be enough for me to start with ;)
>I thought about this:
>- creation of the client

Documentation for creating a client is here:

  http://twistedmatrix.com/projects/core/documentation/howto/clients.html

>- initialization of the messenger
>- when building the messenger, I create a DeferredList (or something like that)
>- when sending a message, I call a send() method that will either add
>the message to the DeferredList or directly send() is the DeferredList
>was processed.
>- when the initialization is complete, the DeferredList is processed.

These parts, I don't understand.

Jean-Paul



From matthieu.brucher at gmail.com  Wed Jun 25 13:01:41 2008
From: matthieu.brucher at gmail.com (Matthieu Brucher)
Date: Wed, 25 Jun 2008 21:01:41 +0200
Subject: [Twisted-Python] Re: Example for a new protocol over TCP
In-Reply-To: <20080625183408.4714.11698012.divmod.quotient.13082@ohm>
References: <e76aa17f0806251128l10b34eadnba722566317d629d@mail.gmail.com>
	<20080625183408.4714.11698012.divmod.quotient.13082@ohm>
Message-ID: <e76aa17f0806251201p7e076863jdf95429943fa9874@mail.gmail.com>

>> - initialization of the messenger
>> - when building the messenger, I create a DeferredList (or something like
>> that)
>> - when sending a message, I call a send() method that will either add
>> the message to the DeferredList or directly send() is the DeferredList
>> was processed.
>> - when the initialization is complete, the DeferredList is processed.
>
> These parts, I don't understand.

Thanks for the answer ;) I've already printed and read the complete
tutorial, but I may have missed something.

In my application, I have a pool of peer addresses and I may have
another pool of peer connections (other clients/peers may have
connected to my own TCP server or I'm already connected to them, this
would be handled by the factory). Then I want to send a message to one
of the peers though one of its addresses in the pool (this will even
get harder, as there may be different servers listening to different
interfaces, I don't know if twisted manages this). For this purpose,
I'd like to have something like:

>>> self.get_messenger(peer_address).send(message)

This would look for a connection to this peer address in the peer
connections pool if it is already available, or it will try to connect
to the remote peer address. As it is not a simple TCP connection,
before sending the actual message, several protocol messages are sent
from the client to the server and vice-versa. Only then, when those
messages are exchanged, I can actually send the real message to the
remote peer.

Is it more clear ? It may not be the simplest way of doing stuff, but
the principle behond the protocols I use (which are already
impelemnted in C and Java) is to hide the connection to a remote peer,
and to have a message queue, so twisted seems to be the best tool for
this.

Cheers,
Matthieu
-- 
French PhD student
Website : http://matthieu-brucher.developpez.com/
Blogs : http://matt.eifelle.com and http://blog.developpez.com/?blog=92
LinkedIn : http://www.linkedin.com/in/matthieubrucher



From mpresh at gmail.com  Wed Jun 25 21:29:00 2008
From: mpresh at gmail.com (Mike Preshman)
Date: Wed, 25 Jun 2008 23:29:00 -0400
Subject: [Twisted-Python] LoopingCall question
Message-ID: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>

Hello,

I am trying to run three deferred LoopingCall chains in parallel.
Here is my code below. I am trying to figure out what is the correct way of
exiting the polling after I meet some
condition that the polling satisfies. Right now I am throwing an exception
which is being caught by an errback. I wait for all three deferred chains to
complete
via a DeferredList with (defer.gatherResults) and then I add a callback to
that in order to stop the reactor.

class PollingException(twisted.python.failure.Failure):

    def __init__(self, var):
        self.var = var


def poll(*args):
    print "poll", args
    raise PollingException(args[1])

def errorHandle(failure):
    print "poll exited"
    return True

def stopReactor(result):
    print "about to stop reactor"
    reactor.stop()


t1 = task.LoopingCall(poll, "A")
d1 = t1.start(1, 3)
d1.addErrback(errorHandle)

t2 = task.LoopingCall(poll, "B")
d2 = t2.start(2, 3)
d2.addErrback(errorHandle)

t3 = task.LoopingCall(poll, "C")
d3 = t3.start(3, 3)
d3.addErrback(errorHandle)

dL = defer.gatherResults([d1, d2, d3])
dL.addCallback(lambda _: reactor.stop())

reactor.run()




However, when I run the code and I try to stop the reactor, I get the
following exception which I find puzzling.

poll ('A',)
poll exited
poll ('B',)
poll exited
poll ('C',)
poll exited
Unhandled error in Deferred:
Traceback (most recent call last):
  File "twisted_poll.py", line 36, in <module>
    dL.addCallback(lambda _: reactor.stop())
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 191,
in addCallback
    callbackKeywords=kw)
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 182,
in addCallbacks
    self._runCallbacks()
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\internet\defer.py", line 317,
in _runCallbacks
    self.result = callback(self.result, *args, **kw)
  File "twisted_poll.py", line 36, in <lambda>
    dL.addCallback(lambda _: reactor.stop())
  File "c:\python25\lib\site-packages\twisted\internet\base.py", line 342,
in stop
    raise RuntimeError, "can't stop reactor that isn't running"
exceptions.RuntimeError: can't stop reactor that isn't running


Thanks very much,
-Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080625/c137d0b6/attachment.html>

From exarkun at divmod.com  Thu Jun 26 05:27:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 26 Jun 2008 07:27:10 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
Message-ID: <20080626112710.4714.603660189.divmod.quotient.13391@ohm>

On Wed, 25 Jun 2008 23:29:00 -0400, Mike Preshman <mpresh at gmail.com> wrote:
>Hello,
>
>I am trying to run three deferred LoopingCall chains in parallel.
>Here is my code below. I am trying to figure out what is the correct way of
>exiting the polling after I meet some
>condition that the polling satisfies. Right now I am throwing an exception
>which is being caught by an errback. I wait for all three deferred chains to
>complete
>via a DeferredList with (defer.gatherResults) and then I add a callback to
>that in order to stop the reactor.
>
>class PollingException(twisted.python.failure.Failure):
>
>    def __init__(self, var):
>        self.var = var
>

Don't subclass Failure.  Just subclass Exception.

>
>def poll(*args):
>    print "poll", args
>    raise PollingException(args[1])
>
>def errorHandle(failure):
>    print "poll exited"
>    return True
>
>def stopReactor(result):
>    print "about to stop reactor"
>    reactor.stop()
>
>
>t1 = task.LoopingCall(poll, "A")
>d1 = t1.start(1, 3)
>d1.addErrback(errorHandle)
>
>t2 = task.LoopingCall(poll, "B")
>d2 = t2.start(2, 3)
>d2.addErrback(errorHandle)
>
>t3 = task.LoopingCall(poll, "C")
>d3 = t3.start(3, 3)
>d3.addErrback(errorHandle)
>
>dL = defer.gatherResults([d1, d2, d3])
>dL.addCallback(lambda _: reactor.stop())
>
>reactor.run()
>
>However, when I run the code and I try to stop the reactor, I get the
>following exception which I find puzzling.
>
> [snip]
>    raise RuntimeError, "can't stop reactor that isn't running"
>exceptions.RuntimeError: can't stop reactor that isn't running
>

LoopingCall invokes the function it is given immediately, unless you pass
now=False to its initializer.  This means you're stopping the reactor
several times before it's even started.  Try making sure the reactor is
running before poll is ever called.

Jean-Paul



From iraehc at hotmail.com  Thu Jun 26 15:08:00 2008
From: iraehc at hotmail.com (Irae Hueck Costa)
Date: Thu, 26 Jun 2008 23:08:00 +0200
Subject: [Twisted-Python] FW: reject all open connections
Message-ID: <BLU125-W299CF7A19BA5B5E3266789DBA30@phx.gbl>




From: iraehc at hotmail.com
To: twisted-python at twistedmatrix.com
Subject: reject all open connections
Date: Sat, 21 Jun 2008 22:26:37 +0200










hi all!

i am sorry, its the first time i am asking something twice but its important for me to get a question.
thank you!:

i just want to clean my reactor - all readers and writer should looseConnection()

but how can i do this? reactor.removeAll() dont do it.
the best solutions i found was a horrible workaround:
a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``

is there a better solution?

thank you

Conheça já o Windows Live Spaces, o site de relacionamentos do Messenger! Crie já o seu!

_________________________________________________________________
Conheça o Windows Live Spaces, a rede de relacionamentos do Messenger!
http://www.amigosdomessenger.com.br/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080626/b2c3716d/attachment.html>

From exarkun at divmod.com  Thu Jun 26 15:18:42 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 26 Jun 2008 17:18:42 -0400
Subject: [Twisted-Python] FW: reject all open connections
In-Reply-To: <BLU125-W299CF7A19BA5B5E3266789DBA30@phx.gbl>
Message-ID: <20080626211842.4714.95693517.divmod.quotient.13557@ohm>

On Thu, 26 Jun 2008 23:08:00 +0200, Irae Hueck Costa <iraehc at hotmail.com> wrote:
>
>i just want to clean my reactor - all readers and writer should looseConnection()
>
>but how can i do this? reactor.removeAll() dont do it.
>the best solutions i found was a horrible workaround:
>a thread is tarted, which constantly calls ``[conn.loseConnection() for conn in reactor.removeAll()]``
>
>is there a better solution?
>

This is an unusual thing to want to do.  Any code that does it risks
stomping on other code it doesn't know about.  If you have a factory
serving connections on a particular port, you might want to have that
factory keep track of all clients which are connected to it, then it
can iterate over those clients and disconnect them.

If you use removeAll(), then you'll probably end of breaking some
reactor internals (like threading support and maybe other stuff).
However, if that's your goal, then the list comprehension you
pasted is more or less correct.

Jean-Paul



From hermann.kaser at gmail.com  Fri Jun 27 06:47:03 2008
From: hermann.kaser at gmail.com (Hermann Kaser)
Date: Fri, 27 Jun 2008 14:47:03 +0200
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
Message-ID: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>

Hello all,

I'm trying to write an MSN client but I've run into a problem: for
some reason when I create a Switchboard and try to invite someone it
sends the join command and the invitation command all together and the
MSN server doesn't answer any of them. Here's the relevant bits of the
code I have:

class Switchboard(msn.SwitchboardClient):
   def connectionMade(self):
        self.key = self.factory.key
        self.sessionID = self.factory.sessionID
        self.userHandle = self.factory.userHandle
        self.invite = self.factory.invite

        msn.SwitchboardClient.connectionMade(self)

        d = self.inviteUser(self.invite)
        d.addCallback(self.Invited)

    def Invited(self, *args):
        print 'Running reply callback'

And this is the ngrep stream after the XFR request

# send transfer request
T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
  CHG 6 NLN..XFR 7 SB..

# get transfer response
T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..

T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  CHG 6 NLN 0..

T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..

T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
want to invite]..

If I try to do the same process with pidgin for example, the stream
looks exactly the same except the USR and CAL command are on separate
packets, and the server responds to the USR command before the client
sends the CAL command.

Can anyone help me out figuring this out? I know you can send more
than one command per packet, as seen in the first packet of the ngrep
stream I posted, so I don't see why it wouldn't work to send the USR
and CAL command together, but I suspect that not all commands may be
stuck together. I stuck a time.sleep(20) between the calling
msn.SwitchboardClient.connectionMade(self) and
self.inviteUser(self.invite) to see if it was a timing issue but what
happens is that the USR command gets buffered, and only when the
script tries to send the CAL command does the socket actually write it
out.

Any help on this would be greatly appreciated, I've been digging
around the documentation and the code but I can't seem to figure out
why it's buffering the USR command and I don't know enough about the
MSN protocol to know which commands need a unique packet and which
ones can go with others.

Regards,
Hermann Käser
http://theragingche.com/
http://semicir.cl/user/hermzz

From exarkun at divmod.com  Fri Jun 27 06:57:58 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Jun 2008 08:57:58 -0400
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
In-Reply-To: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
Message-ID: <20080627125758.4714.949403242.divmod.quotient.13899@ohm>

On Fri, 27 Jun 2008 14:47:03 +0200, Hermann Kaser <hermann.kaser at gmail.com> wrote:
>Hello all,
>
>I'm trying to write an MSN client but I've run into a problem: for
>some reason when I create a Switchboard and try to invite someone it
>sends the join command and the invitation command all together and the
>MSN server doesn't answer any of them. Here's the relevant bits of the
>code I have:
>
>class Switchboard(msn.SwitchboardClient):
>   def connectionMade(self):
>        self.key = self.factory.key
>        self.sessionID = self.factory.sessionID
>        self.userHandle = self.factory.userHandle
>        self.invite = self.factory.invite
>
>        msn.SwitchboardClient.connectionMade(self)
>
>        d = self.inviteUser(self.invite)
>        d.addCallback(self.Invited)
>
>    def Invited(self, *args):
>        print 'Running reply callback'
>
>And this is the ngrep stream after the XFR request
>
># send transfer request
>T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
>  CHG 6 NLN..XFR 7 SB..
>
># get transfer response
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..
>
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  CHG 6 NLN 0..
>
>T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..
>
>T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
>  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
>want to invite]..
>
>If I try to do the same process with pidgin for example, the stream
>looks exactly the same except the USR and CAL command are on separate
>packets, and the server responds to the USR command before the client
>sends the CAL command.
>
>Can anyone help me out figuring this out? I know you can send more
>than one command per packet, as seen in the first packet of the ngrep
>stream I posted, so I don't see why it wouldn't work to send the USR
>and CAL command together, but I suspect that not all commands may be
>stuck together. I stuck a time.sleep(20) between the calling
>msn.SwitchboardClient.connectionMade(self) and
>self.inviteUser(self.invite) to see if it was a timing issue but what
>happens is that the USR command gets buffered, and only when the
>script tries to send the CAL command does the socket actually write it
>out.

The way to do this is to let the reactor do some I/O in between the
calls.  Sleeping is almost the right idea (for debugging, at least),
but you need to do it in a way that cooperates with the reactor.  Try
putting the inviteUser call into a separate function and delaying its
execution a bit:

    def connectionMade(self):
        ...
        msn.SwitchboardClient.connectionMade(self)
        reactor.callLater(1, self._doinvite)

    def _doinvite(self):
        d = self.inviteUser(self.invite)
        d.addCallback(self.Invited)

If this works, then you may have demonstrated that USR and CAL
cannot be combined like this.  In that case, I'd say it's a bug
in Twisted's MSN support - it's the protocol's job to know things
like this, so the protocol should automatically buffer the CAL
if it knows a USR is going to be sent with it.

>
>Any help on this would be greatly appreciated, I've been digging
>around the documentation and the code but I can't seem to figure out
>why it's buffering the USR command and I don't know enough about the
>MSN protocol to know which commands need a unique packet and which
>ones can go with others.

It'd be interesting to see if pidgin has code to specifically avoid
combining USR and CAL (or USR and anything else).

Jean-Paul



From itamar at itamarst.org  Fri Jun 27 07:44:07 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 27 Jun 2008 09:44:07 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
Message-ID: <1214574247.20839.143.camel@localhost.localdomain>

On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
> Hello,
> 
> I am trying to run three deferred LoopingCall chains in parallel.
> Here is my code below. I am trying to figure out what is the correct
> way of exiting the polling after I meet some 
> condition that the polling satisfies.

You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:


from twisted.internet import defer, reactor, task

class _LoopUntil(object):

    def __init__(self, delay, check):
        self.delay = delay
        self.check = check
        self.result = defer.Deferred()

    def go(self):
        task.deferLater(reactor, self.delay, check).addCallbacks(
            self._gotResult, self._failed)
    
    def _gotResult(self, r):
         if r:
             d = self.result
             del self.result
             self.result.callback(r)
         else:
             self.go()

    def _failed(self, f):
        self.result.errback(f)
        del self.result


def loopUntil(delay, check):
    l = _LoopUntil(delay, check)
    r = l.result
    l.go()
    return r





From buisson at enseirb.fr  Fri Jun 27 08:02:27 2008
From: buisson at enseirb.fr (=?ISO-8859-1?Q?R=E9mi_BUISSON?=)
Date: Fri, 27 Jun 2008 16:02:27 +0200
Subject: [Twisted-Python] [SIP-Twisted-Python] Sample code
In-Reply-To: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
References: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
Message-ID: <4864F2F3.5070908@enseirb.fr>

Hello all,

I'm a beginner in Python and more in Twisted.

I would like to exchange cc//pp informations between a client and a 
server using SIP.

Can someone give me a basic sample code for the client and the server 
because I am not used to employing the Twisted API and I try to do it 
since this morning ... ?

Thanks in advance.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: buisson.vcf
Type: text/x-vcard
Size: 192 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080627/9c9f9c4b/attachment-0002.vcf>

From mpresh at gmail.com  Fri Jun 27 08:06:07 2008
From: mpresh at gmail.com (Mike Preshman)
Date: Fri, 27 Jun 2008 10:06:07 -0400
Subject: [Twisted-Python] LoopingCall question
In-Reply-To: <1214574247.20839.143.camel@localhost.localdomain>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
Message-ID: <b47be41c0806270706vcdf432etea0bda7ccb95db1c@mail.gmail.com>

I got it to work with classes.

from twisted.internet import utils, reactor, defer, task
import twisted
import time, sys

class Looping:

    def __init__(self, c, t):
        self.c = c
        self.t = t
        self.count = 0

    def myPoll(self, *args):
        print "poll", args

        self.count = self.count + 1

        if self.count > 3:
            self.task.stop()

    def start(self):
        self.task = task.LoopingCall(self.myPoll, self.c)
        return self.task.start(self.t)


c1 = Looping("A", 1)
d1 = c1.start()

c2 = Looping("B", 2)
d2 = c2.start()

c3 = Looping("C", 3)
d3 = c3.start()


dL = defer.gatherResults([d1, d2, d3])
dL.addCallback(lambda _: reactor.stop())

reactor.run()


On Fri, Jun 27, 2008 at 9:44 AM, Itamar Shtull-Trauring <itamar at itamarst.org>
wrote:

> On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
> > Hello,
> >
> > I am trying to run three deferred LoopingCall chains in parallel.
> > Here is my code below. I am trying to figure out what is the correct
> > way of exiting the polling after I meet some
> > condition that the polling satisfies.
>
> You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:
>
>
> from twisted.internet import defer, reactor, task
>
> class _LoopUntil(object):
>
>    def __init__(self, delay, check):
>        self.delay = delay
>        self.check = check
>        self.result = defer.Deferred()
>
>    def go(self):
>        task.deferLater(reactor, self.delay, check).addCallbacks(
>            self._gotResult, self._failed)
>
>    def _gotResult(self, r):
>         if r:
>             d = self.result
>             del self.result
>             self.result.callback(r)
>         else:
>             self.go()
>
>    def _failed(self, f):
>        self.result.errback(f)
>        del self.result
>
>
> def loopUntil(delay, check):
>    l = _LoopUntil(delay, check)
>    r = l.result
>    l.go()
>    return r
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080627/d817e7f6/attachment.html>

From dfarrell at mypublisher.com  Fri Jun 27 09:46:05 2008
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Fri, 27 Jun 2008 11:46:05 -0400
Subject: [Twisted-Python] twisted threading with a long running process
Message-ID: <318F79422ADC5041A93343721F84474DECF3D6@exchange.mypublisher.local>

Hi all,

 

I've built a Twisted server that handles Python logging messages sent
from the logging.handlers.SocketHandler system. Right now my protocol
implementation handles logging the received logRecord to a file and
entering it into an in memory model for statistical purposes. I'm
thinking of off-loading this activity to a separate thread by having the
protocol just send the logRecord it receives into queue that is serviced
by a separate thread. My question is whether using the
twisted.internet.threads.deferToThread() method is a good way to kick
off this other thread. The other thread will be running for as long as
the Twisted server runs so it can handle logRecords in the queue. Would
just starting a threading.Thread based class be a better solution,
giving access to queue inside the class to the protocol?

 

Thanks,

Doug

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080627/a81c7242/attachment.html>

From exarkun at divmod.com  Fri Jun 27 10:37:17 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 27 Jun 2008 12:37:17 -0400
Subject: [Twisted-Python] twisted threading with a long running process
In-Reply-To: <318F79422ADC5041A93343721F84474DECF3D6@exchange.mypublisher.local>
Message-ID: <20080627163717.4714.2080119728.divmod.quotient.13980@ohm>

On Fri, 27 Jun 2008 11:46:05 -0400, Doug Farrell <dfarrell at mypublisher.com> wrote:
>Hi all,
>
>I've built a Twisted server that handles Python logging messages sent
>from the logging.handlers.SocketHandler system. Right now my protocol
>implementation handles logging the received logRecord to a file and
>entering it into an in memory model for statistical purposes. I'm
>thinking of off-loading this activity to a separate thread by having the
>protocol just send the logRecord it receives into queue that is serviced
>by a separate thread. My question is whether using the
>twisted.internet.threads.deferToThread() method is a good way to kick
>off this other thread. The other thread will be running for as long as
>the Twisted server runs so it can handle logRecords in the queue. Would
>just starting a threading.Thread based class be a better solution,
>giving access to queue inside the class to the protocol?
>

deferToThread is based on a thread-pool.  If there will be benefit to
processing log records concurrently in different threads (ie, if most
of the cost is disk I/O or an extension module that releases the GIL)
and you have multiple CPUs, using a threadpool might give you a speed
up.  If any of these things isn't true, then one thread will give you
just as much benefit as a whole pool full.  Of course, even given all
that, using deferToThread is simpler than writing a new Thread with a
queue for input, so you may still want to use deferToThread.

Jean-Paul



From steve at holdenweb.com  Fri Jun 27 21:27:02 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 27 Jun 2008 23:27:02 -0400
Subject: [Twisted-Python] Re: LoopingCall question
In-Reply-To: <1214574247.20839.143.camel@localhost.localdomain>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
Message-ID: <g44b25$6v7$1@ger.gmane.org>

Itamar Shtull-Trauring wrote:
> On Wed, 2008-06-25 at 23:29 -0400, Mike Preshman wrote:
>> Hello,
>>
>> I am trying to run three deferred LoopingCall chains in parallel.
>> Here is my code below. I am trying to figure out what is the correct
>> way of exiting the polling after I meet some 
>> condition that the polling satisfies.
> 
> You needn't use LoopingCall, if it's unsuitable - assuming Twisted 8.1:
> 
> 
> from twisted.internet import defer, reactor, task
> 
> class _LoopUntil(object):
> 
>     def __init__(self, delay, check):
>         self.delay = delay
>         self.check = check
>         self.result = defer.Deferred()
> 
>     def go(self):
>         task.deferLater(reactor, self.delay, check).addCallbacks(
>             self._gotResult, self._failed)
>     
>     def _gotResult(self, r):
>          if r:
>              d = self.result
>              del self.result
>              self.result.callback(r)

What am I missing that stops the above line from raising AttributeError?

>          else:
>              self.go()
> 
>     def _failed(self, f):
>         self.result.errback(f)
>         del self.result
> 
> 
> def loopUntil(delay, check):
>     l = _LoopUntil(delay, check)
>     r = l.result
>     l.go()
>     return r

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From itamar at itamarst.org  Sat Jun 28 10:13:52 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 28 Jun 2008 12:13:52 -0400 (EDT)
Subject: [Twisted-Python] Re: LoopingCall question
In-Reply-To: <g44b25$6v7$1@ger.gmane.org>
References: <b47be41c0806252029u70fdaef9me478229d94f9ef7e@mail.gmail.com>
	<1214574247.20839.143.camel@localhost.localdomain>
	<g44b25$6v7$1@ger.gmane.org>
Message-ID: <53238.74.64.98.80.1214669632.squirrel@webmail.zoteca.com>

> Itamar Shtull-Trauring wrote:
>>     def _gotResult(self, r):
>>          if r:
>>              d = self.result
>>              del self.result
>>              self.result.callback(r)
>
> What am I missing that stops the above line from raising AttributeError?

That was a typo, thanks for pointing it out. Should be d.callback().
(Deferreds should be derefernced once callbacked or errbacked, since
unhandled errors will only get logged on GC.)




From andy at thecablelounge.com  Sat Jun 28 16:26:15 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 18:26:15 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
Message-ID: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>

Hey guys,

I'm really keen to get twisted.vfs to a stable point that is
acceptably releasable.

There's 6 tickets to knock off to get it to this state:

This ticket will give an easily runnable vfs server, which'll be
useful for experimenting with vfs as it is worked on:

* http://twistedmatrix.com/trac/ticket/2821

This ticket ports the backend vfs interface to be firstly async, and
also, not quite so lame:

* http://twistedmatrix.com/trac/ticket/2815

Then we can port the 3 currently supported protocols over to use the
new backend interface:

* http://twistedmatrix.com/trac/ticket/2816
* http://twistedmatrix.com/trac/ticket/2817
* http://twistedmatrix.com/trac/ticket/2818

And finally once everything is ported, there can be a good clean up:

* http://twistedmatrix.com/trac/ticket/2819

Exarkun also has some good suggestions for #2815.  I've gone ahead and
fixed the ones mentioned - but this is defining an interface - which
isn't something to lock into lightly.

As he says:

'What these interfaces should actually say is still an open question,
I think. This would probably benefit from some real-time conversation
with various interested parties involved. You've probably already
noticed IFTPShell which is one take on this interface (it's not
exactly the same shape, but many of the ideas apply here).'

is very reasonable.  Just before the first .au sprint I put a bit of
time into this - and conch's IConchUser interface seemed to be a
better base for vfs than IFTPShell - but this is something that could
use more discussion.

I've quit my job in LA that's sucked up all my life for the last 2 or
so years and I'm now on a road trip around the US. I've hauled up in
vermont for the week to catch up on a bunch of stuff - top of the list
is to try and get vfs up to scratch finally. I'm planning to be in the
Massachusetts area next week - again for around a week.

If anyone is available to meet up and hash this out, that'd be awesome.

It feels like if we can hit #2815 on the head, the rest will fall into
place.  Therve has been awesome at chugging through previous vfs stuff
- porting protocols to use the agreed upon backend interface should be
straight forward.

cheers,
Andy.



From glyph at divmod.com  Sat Jun 28 16:33:37 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 28 Jun 2008 22:33:37 -0000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
Message-ID: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>


On 10:26 pm, andy at thecablelounge.com wrote:
>I'm planning to be in the Massachusetts area next week - again for 
>around a week.
>
>If anyone is available to meet up and hash this out, that'd be awesome.

YES.  PLEASE.

I don't know the rest of the Cambridge Cabal's level of interest but I'd 
definitely like to sort this stuff out.  (I promise to take minutes and 
file tickets for those of you not present.  And we should have an IRC 
conference as well.)

Good to see you again, Andy.  "Welcome back to the stage of history."



From terry at jon.es  Sat Jun 28 16:40:11 2008
From: terry at jon.es (Terry Jones)
Date: Sun, 29 Jun 2008 00:40:11 +0200
Subject: [Twisted-Python] Re-working a synchronous iterator to use Twisted
In-Reply-To: Your message at 23:10:48 on Tuesday, 17 June 2008
References: <18519.56098.678826.294578@jon.es>
	<18520.10328.729525.221355@jon.es>
Message-ID: <18534.48587.810094.803939@jon.es>

Following the massive interest in my earlier postings on this thread, I'm
following up to myself again :-)

Here's what I was trying to do:

> In case it wasn't clear before, you're pulling "results" (e.g., from a
> search engine) in off the web. Each results pages comes with an indicator
> to tell you whether there are more results. I wanted to write a function
> (see processResults below) that, when called, would call the process
> function below on each result, all done asynchronously.

I posted some cumbersome code to roughly do that.  I've since been thinking
about this on and off, with help from Esteve Fernandez, and we've made the
code quite a bit simpler.

I think there's a general pattern here that's worth thinking about.
Roughly: the above need is like the Twisted analogy of using iterators in
regular synchronous programming.

By that I mean that the normal pattern of Twisted usage is: a single event
is anticipated (by the programmer), it occurs once, and its result is
passed down a call/errback chain. That's roughly like a single function
call in synchronous code.

But if you are expecting a sequence of external events to occur and you
want to asynchronously pass their results in turn down a call/errback
chain. The need to do this in synchronous code can be filled with a simple
iterator. But doing this asynchronously (when the fetch of the next batch
of results might take a while) doesn't seem to fit easily into the
single-shot asynchronous Twisted paradigm.

I thought about modifying defer.py to allow a callback chain to be called
multiple times (and to have the "normal" single-shot chain be a special
case). But that was clearly going to get messy. BTW, I find defer.py is
really elegant.

After more thinking about how to make my previously posted code simpler,
Esteve and I came up with what you'll find at

  http://python.pastebin.com/f7df56752   (code) and
  http://python.pastebin.com/f1e582264   (simple tests)

The idea is that you provide a result fetcher function to the TwIterator
class. This function will be called repeatedly, as needed, to get more
results. It returns a deferred whose callback it should call with a list of
next results (which may be empty), a bool to indicate whether to re-call
the function, and a dict of args to pass to it next time.

The TwIterator class provides you with a list() method that you can use
almost like an iterator:

    @inlineCallbacks
    def printer(results):
        for x in results:
            print (yield x)

    fetcher.list().addCallback(printer)

This is in some sense like a general asynchronous iterator for Twisted. The
printer function receives an iterator, each element of which is a deferred,
and when that deferred fires it produces the next result.

The test code gives 4 simple example result-fetching functions, and calls
them all asynchronously. If you run it you'll see the results coming out in
a somewhat random order.

I wont go into more detail, given that no-one responded to the first two
postings. It's still possible that I'm trying to solve a problem that can
already be done by some standard Twisted module. I don't know enough about
Twisted to know for sure.

Terry



From exarkun at divmod.com  Sat Jun 28 16:51:10 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Jun 2008 18:51:10 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
Message-ID: <20080628225110.4714.1787695089.divmod.quotient.14600@ohm>

On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com> wrote:
>
> [snip]
>is very reasonable.  Just before the first .au sprint I put a bit of
>time into this - and conch's IConchUser interface seemed to be a
>better base for vfs than IFTPShell - but this is something that could
>use more discussion.

IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)

Jean-Paul



From jml at mumak.net  Sat Jun 28 16:58:01 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 29 Jun 2008 08:58:01 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
Message-ID: <d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>

On Sun, Jun 29, 2008 at 8:33 AM,  <glyph at divmod.com> wrote:
>
> On 10:26 pm, andy at thecablelounge.com wrote:
>>
>> I'm planning to be in the Massachusetts area next week - again for around
>> a week.
>>
>> If anyone is available to meet up and hash this out, that'd be awesome.
>
> YES.  PLEASE.
>
> I don't know the rest of the Cambridge Cabal's level of interest but I'd
> definitely like to sort this stuff out.  (I promise to take minutes and file
> tickets for those of you not present.  And we should have an IRC conference
> as well.)
>

That'd be great. We've stopped using twisted.vfs at work, but I'm
still keen to see this stuff improve.

Welcome back, Andy :)

jml



From andy at thecablelounge.com  Sat Jun 28 17:04:53 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 19:04:53 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628225110.4714.1787695089.divmod.quotient.14600@ohm>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628225110.4714.1787695089.divmod.quotient.14600@ohm>
Message-ID: <74e109b70806281604g7ab06325nbc72680206968622@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:51 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com>
> wrote:
>>
>> [snip]
>> is very reasonable.  Just before the first .au sprint I put a bit of
>> time into this - and conch's IConchUser interface seemed to be a
>> better base for vfs than IFTPShell - but this is something that could
>> use more discussion.
>
> IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)

Hehe, sorry.  I've been working in vfs.plugin's realm too much.

Would you believe ISFTPServer/ISFTPFile?

Andy.



From andy at thecablelounge.com  Sat Jun 28 17:09:25 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 19:09:25 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
Message-ID: <74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:58 PM, Jonathan Lange <jml at mumak.net> wrote:
> That'd be great. We've stopped using twisted.vfs at work, but I'm
> still keen to see this stuff improve.

Oh man, I think that means *noone* uses twisted.vfs.  What are you
guys doing for sftp access to launchpad?

Andy.



From jml at mumak.net  Sat Jun 28 17:19:24 2008
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 29 Jun 2008 09:19:24 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
	<74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
Message-ID: <d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>

On Sun, Jun 29, 2008 at 9:09 AM, Andy Gayton <andy at thecablelounge.com> wrote:
> On Sat, Jun 28, 2008 at 6:58 PM, Jonathan Lange <jml at mumak.net> wrote:
>> That'd be great. We've stopped using twisted.vfs at work, but I'm
>> still keen to see this stuff improve.
>
> Oh man, I think that means *noone* uses twisted.vfs.  What are you
> guys doing for sftp access to launchpad?
>

Direct implementations of ISFTPServer and ISFTPFile.

Since hacking on that, I've become too familiar with the creepy world
of SFTP protocol drafts. Would love to talk about it with y'all. If
you can arrange to chat at a time during my weekend, I'll adjust my
sleep patterns accordingly.

jml



From exarkun at divmod.com  Sat Jun 28 17:40:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 28 Jun 2008 19:40:36 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806281604g7ab06325nbc72680206968622@mail.gmail.com>
Message-ID: <20080628234036.4714.1498547258.divmod.quotient.14617@ohm>

On Sat, 28 Jun 2008 19:04:53 -0400, Andy Gayton <andy at thecablelounge.com> wrote:
>On Sat, Jun 28, 2008 at 6:51 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>> On Sat, 28 Jun 2008 18:26:15 -0400, Andy Gayton <andy at thecablelounge.com>
>> wrote:
>>>
>>> [snip]
>>> is very reasonable.  Just before the first .au sprint I put a bit of
>>> time into this - and conch's IConchUser interface seemed to be a
>>> better base for vfs than IFTPShell - but this is something that could
>>> use more discussion.
>>
>> IConchUser?  Really?  Yes, I'd definitely like to talk about that. :)
>
>Hehe, sorry.  I've been working in vfs.plugin's realm too much.
>
>Would you believe ISFTPServer/ISFTPFile?
>

Okay, that's a little more plausible. :)  And still definitely worth a
discussion (probably a slightly different one than I had in mind before ;).

Jean-Paul



From andy at thecablelounge.com  Sat Jun 28 18:02:25 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Sat, 28 Jun 2008 20:02:25 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<d06a5cd30806281558q11f3f0a3o453464bd8b400737@mail.gmail.com>
	<74e109b70806281609h6d555d8fsc6fb833d4ef22b5f@mail.gmail.com>
	<d06a5cd30806281619m2179d5f1icacdb567cfe3db99@mail.gmail.com>
Message-ID: <74e109b70806281702p75620010tc85389d9b2875da8@mail.gmail.com>

On Sat, Jun 28, 2008 at 7:19 PM, Jonathan Lange <jml at mumak.net> wrote:
> Since hacking on that, I've become too familiar with the creepy world
> of SFTP protocol drafts. Would love to talk about it with y'all. If
> you can arrange to chat at a time during my weekend, I'll adjust my
> sleep patterns accordingly.

I've got a place in Vermont until next Thursday.  Then its July, 4th,
which is likely to be rowdy.  We could go for a face to face + IRC
meeting next weekend?  We could also virtually bash around ideas
before then - and I'd have the week to code up whatever is discussed.

In the mean time, here's a list of interfaces to draw on:

Some thoughts on async file io for twisted have been documented here:
http://twistedmatrix.com/trac/wiki/Specification/AsynchronousFileInputOutput

Ftp's IFTPShell, IReadFile and IReadFile
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/protocols/ftp.py#L1271

Conch's ISFTPServer and ISFTPFile
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/conch/interfaces.py#L92

The heavily thought out, particularly from a security point of view,
but synchronous, FilePath.
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/python/filepath.py#L257

The currently propsed vfs interface, IVFSNode
http://twistedmatrix.com/trac/browser/branches/vfs-async-backends-2815/twisted/vfs/ivfs.py#L50

There's already an implementation of IVFSNode - FilePathNode, which
takes a FilePath (or ZipPath), and would then make it available over
all protocols which have adapters for IVFSNode.

cheers,
Andy.



From exarkun at twistedmatrix.com  Sat Jun 28 22:05:08 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 29 Jun 2008 04:05:08 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1214712308.25.1015464113@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080629/076c1862/attachment.html>

From duncan.mcgreggor at gmail.com  Sun Jun 29 22:00:56 2008
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Sun, 29 Jun 2008 23:00:56 -0500
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
Message-ID: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>

Hey everyone,

Divmod's been talking to various hosting companies about potential
Twisted deals (and maybe even support). I wanted to get a gauge of
people's level of interest in the services we've been discussing.
We're currently looking at the following options:
 * Dedicated hosts, with Twisted libs pre-installed on them
 * Virtual hosts/"slices" with Twisted libs pre-installed on them
 * Clouds that support uploading and running Twisted apps
 * Potential support contracts where Divmod engineers provide
high-level assistance for paying customers
 * Becoming a reseller and offering these services directly through Divmod

I've been approached privately by a few developers who use Twisted in
their projects at home and at work with questions about Twisted
hosting. They've been interested to know if 1) Divmod does Twisted
hosting, 2) anyone provides "out of the box" support for Twisted, and
3) who we recommend.

I know that as the years pass, I have less and less time to manage my
own systems responsibly. After 6 years, I'm closing down my colocated
boxes. When Twisted makes it to the cloud, I'll close down my virtual
hosts, too. I just don't have the time any more. All I need is
reliable uptime for my apps (most of them are just sites with dynamic
content).

How many others on these lists feel that they would benefit from the
ease of pre-installed Twisted and/or support for Twisted apps in the
cloud?

If you do, what kinds of apps (that you are currently running) do you
want to be able to run in such environments? Simple web sites? DNS
servers? Game servers? Chat applications? Web/data services apps?

And lastly, what hosting companies are your favorites? Where would you
be happiest, if they supported Twisted? Would you consider switching
to a hosting provider that *did* support Twisted?

Looking forward to hearing the people speak,

d



From wpurvis at gmail.com  Sun Jun 29 23:14:32 2008
From: wpurvis at gmail.com (Walter Purvis)
Date: Mon, 30 Jun 2008 01:14:32 -0400
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
In-Reply-To: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
Message-ID: <48686bbe.0661220a.68fa.ffffcbf2@mx.google.com>

My primary use of Twisted is as a web application server behind a reverse
proxy.

Personally, I would love to see some Amazon EC2 images with Twisted
pre-installed.

If there were some *paid* EC2 images availble right now that had an Nginx ->
HAProxy -> Twisted app server (meaning Twisted pre-installed and ready to
go) stack on it, I would definitely use it, simply because I'm going to have
to set that up for myself pretty soon and I am neither a Linux nor an EC2
expert (I have so far only used existing vanilla AMIs for
testing/development).

I probably wouldn't pay much for it, maybe 1 or 2 cents per hour -- but
that's still about $7.20 or $14.40 per month, per server, in perpetuity, for
whoever set up that kind of AMI. If someone created some slick managament
tools/UI, or if some organization wanted to provide professional support not
only for Twisted but for the whole stack/virtual box, I'd pay considerably
more.

Aside from EC2, I don't have any interest, i.e., unless something changes I
don't intend to ever run a web application on anything other than EC2
infrastructure ever again. The mere pre-installation of Twisted, even with
ongoing professional support, on some other hosting provider's
infrastructure wouldn't come close to tempting me to use that provider
instead of EC2.




From tim at commsecure.com.au  Mon Jun 30 02:08:50 2008
From: tim at commsecure.com.au (Tim Allen)
Date: Mon, 30 Jun 2008 18:08:50 +1000
Subject: [Twisted-Python] Implementing startup sanity-checks for twistd
	services.
Message-ID: <20080630180850.62fe78f2@ws35.commsecure.com.au>

The system I'm working on at the moment is talking to MySQL, and in
order to get reasonable behaviour, I need to make sure the "SQL_MODE"
variable is set on both the database connection, and on the stored
procedures I'll be calling. If this is not set up correctly, I expect
to be plagued with silent data corruption issues. I can force the
SQL_MODE per-connection when I connect to the database, but I need to
double-check the procedures whenever I start up.

Ideally, my system would follow a startup procedure something like this:

 - Read configuration
 - Connect to the configured database.
 - Check the SQL_MODE associated with any stored procedures.
 - If everything checks out OK, continue the startup process.
 - Otherwise, log a noisy error and shut down.

Of course, I'd prefer to do things the Twisted Way if at all possible.

I've had some ideas about how to implement this, but none of them seem
terribly useful:

If I launch my queries at startup, and only add my service to the
master Application object if they return successfully, then by the time
I try to start my service twistd will have (I assume) already dropped
privileges and chroot'd and so forth.

If I attach my service to the master Application object at startup
*then* launch my queries, then I might wind up accepting queries before
my sanity checks have completed, defeating the point.

Also, if my service has started and my sanity-checks fail, how can I
cleanly shut down twistd from inside? If my service is just one of
possibly many running inside the master Application object, it seems a
bit rude for me to call reactor.stop(); on the other hand, if I just
stop my service then twistd keeps happily running - confusing
operations staff who often use 'ps' to check whether systems are up.

Is there a better way to do this?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080630/5562910c/attachment.sig>

From hermann.kaser at gmail.com  Mon Jun 30 03:31:28 2008
From: hermann.kaser at gmail.com (Hermann Kaser)
Date: Mon, 30 Jun 2008 11:31:28 +0200
Subject: [Twisted-Python] Issues with creating switchboards with
	twisted.words.protocols.msn
In-Reply-To: <20080627125758.4714.949403242.divmod.quotient.13899@ohm>
References: <611f33b60806270547q7b651889ned23dc454982006a@mail.gmail.com>
	<20080627125758.4714.949403242.divmod.quotient.13899@ohm>
Message-ID: <611f33b60806300231h66713bacm4a536d74918cb919@mail.gmail.com>

On Fri, Jun 27, 2008 at 2:57 PM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 27 Jun 2008 14:47:03 +0200, Hermann Kaser <hermann.kaser at gmail.com>
> wrote:
>>
>> Hello all,
>>
>> I'm trying to write an MSN client but I've run into a problem: for
>> some reason when I create a Switchboard and try to invite someone it
>> sends the join command and the invitation command all together and the
>> MSN server doesn't answer any of them. Here's the relevant bits of the
>> code I have:
>>
>> class Switchboard(msn.SwitchboardClient):
>>  def connectionMade(self):
>>       self.key = self.factory.key
>>       self.sessionID = self.factory.sessionID
>>       self.userHandle = self.factory.userHandle
>>       self.invite = self.factory.invite
>>
>>       msn.SwitchboardClient.connectionMade(self)
>>
>>       d = self.inviteUser(self.invite)
>>       d.addCallback(self.Invited)
>>
>>   def Invited(self, *args):
>>       print 'Running reply callback'
>>
>> And this is the ngrep stream after the XFR request
>>
>> # send transfer request
>> T 192.168.1.36:39816 -> 207.46.110.133:1863 [AP]
>>  CHG 6 NLN..XFR 7 SB..
>>
>> # get transfer response
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  XFR 7 SB 64.4.37.58:1863 CKI 712606054.15830117.2511186..
>>
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  CHG 6 NLN 0..
>>
>> T 207.46.110.133:1863 -> 192.168.1.36:39816 [AP]
>>  ILN 6 NLN [redacted]@hotmail.com [redacted screenname] 1073741856..
>>
>> T 192.168.1.36:44867 -> 64.4.37.58:1863 [AP]
>>  USR 1 [my email] 712606054.15830117.2511186..CAL 2 [email of who i
>> want to invite]..
>>
>> If I try to do the same process with pidgin for example, the stream
>> looks exactly the same except the USR and CAL command are on separate
>> packets, and the server responds to the USR command before the client
>> sends the CAL command.
>>
>> Can anyone help me out figuring this out? I know you can send more
>> than one command per packet, as seen in the first packet of the ngrep
>> stream I posted, so I don't see why it wouldn't work to send the USR
>> and CAL command together, but I suspect that not all commands may be
>> stuck together. I stuck a time.sleep(20) between the calling
>> msn.SwitchboardClient.connectionMade(self) and
>> self.inviteUser(self.invite) to see if it was a timing issue but what
>> happens is that the USR command gets buffered, and only when the
>> script tries to send the CAL command does the socket actually write it
>> out.
>
> The way to do this is to let the reactor do some I/O in between the
> calls.  Sleeping is almost the right idea (for debugging, at least),
> but you need to do it in a way that cooperates with the reactor.  Try
> putting the inviteUser call into a separate function and delaying its
> execution a bit:
>
>   def connectionMade(self):
>       ...
>       msn.SwitchboardClient.connectionMade(self)
>       reactor.callLater(1, self._doinvite)
>
>   def _doinvite(self):
>       d = self.inviteUser(self.invite)
>       d.addCallback(self.Invited)
>
> If this works, then you may have demonstrated that USR and CAL
> cannot be combined like this.  In that case, I'd say it's a bug
> in Twisted's MSN support - it's the protocol's job to know things
> like this, so the protocol should automatically buffer the CAL
> if it knows a USR is going to be sent with it.

Works like a charm. I've looked around for a way to solve this issue
without the need of the sleep, but I can't seem to find a way to tell
FileDescriptor to not buffer the call.

>>
>> Any help on this would be greatly appreciated, I've been digging
>> around the documentation and the code but I can't seem to figure out
>> why it's buffering the USR command and I don't know enough about the
>> MSN protocol to know which commands need a unique packet and which
>> ones can go with others.
>
> It'd be interesting to see if pidgin has code to specifically avoid
> combining USR and CAL (or USR and anything else).

I've looked at their code and it looks like they create a new
transaction when sending out the USR command, and then a new
transaction for each CAL. There aren't any comments or any specific
mention to avoid this issue so I'm not sure if it's just a coincidence
or if they are aware it.

In any case, I've file a bug about it: http://twistedmatrix.com/trac/ticket/3322

Regards,
Hermann Käser
http://theragingche.com/
http://semicir.cl/user/hermzz

From buisson at enseirb.fr  Mon Jun 30 03:40:49 2008
From: buisson at enseirb.fr (=?ISO-8859-1?Q?R=E9mi_BUISSON?=)
Date: Mon, 30 Jun 2008 11:40:49 +0200
Subject: [Twisted-Python] [SIP]
Message-ID: <4868AA21.2040208@enseirb.fr>

Hi everyone,

I didn't succeed in using twisted.protocols.sip ?

Do you have a simple example for me ? It will be very nice ...

Thanks in advance !
-------------- next part --------------
A non-text attachment was scrubbed...
Name: buisson.vcf
Type: text/x-vcard
Size: 192 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080630/6f457c79/attachment-0002.vcf>

From curtferguson at cfl.rr.com  Mon Jun 30 06:11:12 2008
From: curtferguson at cfl.rr.com (Curt)
Date: Mon, 30 Jun 2008 08:11:12 -0400
Subject: [Twisted-Python] Twisted Hosting and Twisted in the Cloud
In-Reply-To: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
References: <4327dfbd0806292100y4723b30ema2698f52773c43da@mail.gmail.com>
Message-ID: <4868CD60.7050801@cfl.rr.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080630/295887f4/attachment.html>

From nathan.stocks at gmail.com  Mon Jun 30 15:52:58 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 30 Jun 2008 15:52:58 -0600
Subject: [Twisted-Python] Returning a DeferredList?
Message-ID: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>

I regularly use the return values of deferreds to simulate synchronous
behaviour like this:

def handle_db_result(result):
   if ({some logic stuff}):
      return True
   else:
      return False

def check_db():
   d = {some db query that returns a deferred}
   d.addCallback(handle_db_result)
   return d

def main_func():
   if check_db():   # This eventually returns True or False
      # Do some stuff
   else:
      # Do some different stuff


So now I'm trying to do the same thing with DeferredList's, but
apparently the semantics aren't the same.  Here's some actual runnable
sample code trying to use the DeferredList:

from twisted.internet import reactor, defer

def callback_function(results):
   return "(--> This is the value that I want to get into retval! <--)"

def make_a_list():
   deferred1 = defer.Deferred()
   deferred2 = defer.Deferred()
   dl = defer.DeferredList([deferred1, deferred2])
   dl.addCallback(callback_function)
   deferred1.callback('one')
   deferred2.callback('two')
   return dl             # The crucial line!

def test():
   retval = make_a_list()
   print "retval is:", retval

reactor.callWhenRunning(test)
reactor.callLater(2.0, reactor.stop)
reactor.run()



The actual output of the above script is:

retval is: <DeferredList at 0x7a30a8  current result: '(--> This is
the value that I want to get into retval! <--)'>

Through some trial and error I found that if I change that "crucial
line" above to "return dl.result", then it appears to work how I like.
 Is that what I should be doing, or did I just get lucky in that
particular instance??

Also, I notice that if one of the deferred's errbacked, then the
DeferredList seems to errback as well.  It shouldn't do that according
to http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto7
... so I filed a bug (#3323).

~ Nathan



From terry at jon.es  Mon Jun 30 16:20:48 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 1 Jul 2008 00:20:48 +0200
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: Your message at 15:52:58 on Monday, 30 June 2008
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
Message-ID: <18537.23616.781117.722224@jon.es>

>>>>> "Nathan" == Nathan  <nathan.stocks at gmail.com> writes:

Nathan> I regularly use the return values of deferreds to simulate
Nathan> synchronous behaviour like this:

[snip]

Nathan> So now I'm trying to do the same thing with DeferredList's, but
Nathan> apparently the semantics aren't the same.  Here's some actual
Nathan> runnable sample code trying to use the DeferredList:

Hi Nathan

You're not using deferreds properly. In the simple/typical case, when you
call a function that returns a deferred, you will want to add (at least) a
callback to that deferred. The callback then gets called with the value
that is being passed down the callback chain.

Change your code to the below and it works.

Your original code appears to work only because you're testing a deferred
result in a Boolean context, which takes you to the true part of your
if.  You need to add call/errbacks to the deferred there too.

Terry

---

from twisted.internet import reactor, defer

def callback_function(results):
   return "(--> This is the value that I want to get into retval! <--)"

def make_a_list():
   deferred1 = defer.Deferred()
   deferred2 = defer.Deferred()
   dl = defer.DeferredList([deferred1, deferred2])
   dl.addCallback(callback_function)
   deferred1.callback('one')
   deferred2.callback('two')
   return dl

def test():
    def cb(val):
        print "retval is:", val
    make_a_list().addCallback(cb)

reactor.callWhenRunning(test)
reactor.callLater(2.0, reactor.stop)
reactor.run()



From nathan.stocks at gmail.com  Mon Jun 30 16:54:33 2008
From: nathan.stocks at gmail.com (Nathan)
Date: Mon, 30 Jun 2008 16:54:33 -0600
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: <18537.23616.781117.722224@jon.es>
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
Message-ID: <96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>

On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
> You're not using deferreds properly. In the simple/typical case, when you
> call a function that returns a deferred, you will want to add (at least) a

I don't think that's true.  Jean-Paul was the one who told me to do it
that way in the first place:

http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html

If your theory was true, I would be getting garbage everywhere I
return (and use) complicated objects, and I'd be getting True
everywhere that I return booleans.

Though you may be right for DeferredLists, which is why I'm asking
here on the list...

~ Nathan



From terry at jon.es  Mon Jun 30 17:05:02 2008
From: terry at jon.es (Terry Jones)
Date: Tue, 1 Jul 2008 01:05:02 +0200
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: Your message at 16:54:33 on Monday, 30 June 2008
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
	<96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
Message-ID: <18537.26270.204683.700465@jon.es>

>>>>> "Nathan" == Nathan  <nathan.stocks at gmail.com> writes:

Nathan> On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
>> You're not using deferreds properly. In the simple/typical case, when you
>> call a function that returns a deferred, you will want to add (at least) a

Nathan> I don't think that's true.  Jean-Paul was the one who told me to do
Nathan> it that way in the first place:

Nathan> http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html

Sorry, but that doesn't seem related - you may have misinterpreted what
Jean-Paul was saying.

Nathan> If your theory was true, I would be getting garbage everywhere I
Nathan> return (and use) complicated objects, and I'd be getting True
Nathan> everywhere that I return booleans.

I don't fully understand this last sentence. Try this:

    from twisted.internet import defer
    d = defer.Deferred()

    if d: print 'hey hey hey'

Python treats the deferred as true here. Exactly the same goes for your
original code:

    def check_db():
       d = {some db query that returns a deferred}
       d.addCallback(handle_db_result)
       return d

    def main_func():
       if check_db():   # This eventually returns True or False
          # Do some stuff
       else:
          # Do some different stuff

The return result of check_db is a deferred. If you test it with an 'if'
it's always going to be true.  If you do this

    def main_func():
       d = check_db()
       print d
       if d:
          # Do some stuff
       else:
          # Do some different stuff


You'll see that d is a deferred.

In both code examples you sent (the pseudo and the working) you are not
treating the return value of a function that returns a deferred as a
deferred. In one example you're testing it in an 'if' and in the other
you're printing it. You need to add a callback in both cases.

Terry



From andy at thecablelounge.com  Mon Jun 30 18:01:12 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Mon, 30 Jun 2008 20:01:12 -0400
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
Message-ID: <74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>

On Sat, Jun 28, 2008 at 6:33 PM,  <glyph at divmod.com> wrote:
> I don't know the rest of the Cambridge Cabal's level of interest but I'd
> definitely like to sort this stuff out.  (I promise to take minutes and file
> tickets for those of you not present.  And we should have an IRC conference
> as well.)

Exarkun is off for 10 days from Thursday arvo.  What do you think of a
pitted cage death match Wednesday (July, 2nd) evening?  No one leaves
until only one person lives, or there's consensus on an interface :)

Jml, I'm guessing this'd be your Thursday morning.

If this is ok - what's the best place to meet?

cheers,
Andy.



From jml at mumak.net  Mon Jun 30 19:06:34 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 1 Jul 2008 11:06:34 +1000
Subject: [Twisted-Python] Bloody Twisted VFS
In-Reply-To: <74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>
References: <74e109b70806281526k2a0ac4eaua7a3d7bc4721c8cc@mail.gmail.com>
	<20080628223337.25821.814910200.divmod.xquotient.11586@joule.divmod.com>
	<74e109b70806301701k772b0929u809a1be715b0d68a@mail.gmail.com>
Message-ID: <d06a5cd30806301806j4b676168if1f6404f7fc5cdea@mail.gmail.com>

On Tue, Jul 1, 2008 at 10:01 AM, Andy Gayton <andy at thecablelounge.com> wrote:
> On Sat, Jun 28, 2008 at 6:33 PM,  <glyph at divmod.com> wrote:
>> I don't know the rest of the Cambridge Cabal's level of interest but I'd
>> definitely like to sort this stuff out.  (I promise to take minutes and file
>> tickets for those of you not present.  And we should have an IRC conference
>> as well.)
>
> Exarkun is off for 10 days from Thursday arvo.  What do you think of a
> pitted cage death match Wednesday (July, 2nd) evening?  No one leaves
> until only one person lives, or there's consensus on an interface :)
>
> Jml, I'm guessing this'd be your Thursday morning.
>

Yeah, that would be a good time for me, as long at it's after 2200 UTC.

jml



From ldanielburr at mac.com  Mon Jun 30 20:02:21 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Mon, 30 Jun 2008 21:02:21 -0500
Subject: [Twisted-Python] Returning a DeferredList?
In-Reply-To: <96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
References: <96c9d6a80806301452y204aa64br5e8ad15b4645bf50@mail.gmail.com>
	<18537.23616.781117.722224@jon.es>
	<96c9d6a80806301554r11ce65d9yb8064996d8db15f2@mail.gmail.com>
Message-ID: <op.udlbx7y53oj628@l-daniel-burrs-computer.local>

On Mon, 30 Jun 2008 17:54:33 -0500, Nathan <nathan.stocks at gmail.com> wrote:

> On Mon, Jun 30, 2008 at 4:20 PM, Terry Jones <terry at jon.es> wrote:
>> You're not using deferreds properly. In the simple/typical case, when  
>> you
>> call a function that returns a deferred, you will want to add (at  
>> least) a
>
> I don't think that's true.  Jean-Paul was the one who told me to do it
> that way in the first place:
>
> http://twistedmatrix.com/pipermail/twisted-python/2008-April/017304.html
>

Terry (hi Terry) is correct here.  Your interpretation of Jean-Paul
Calderone's message is flawed, although I certainly understand how
the misinterpretation could occur.  There's a big difference between
the AMP example in that thread, and the example code you posted to
this thread.

> If your theory was true, I would be getting garbage everywhere I
> return (and use) complicated objects, and I'd be getting True
> everywhere that I return booleans.
>

Not necessarily.  I suspect that your real code isn't working the way
your posted example does.

The bottom line is that the code you posted to this thread does not
produce the synchronous behavior that you think it is providing, so
it might be more helpful to provide an example of your real code,
in order for people here to provide you with some better answers.

Hope this helps,

L. Daniel Burr



