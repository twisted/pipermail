From glyph at twistedmatrix.com  Thu Dec  1 02:22:47 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 1 Dec 2011 02:22:47 -0500
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111201025752.GB3713@boombah.thristian.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
	<20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
	<20111201025752.GB3713@boombah.thristian.org>
Message-ID: <22B2C750-5F68-44B8-BE42-FA1E84D73E19@twistedmatrix.com>


On Nov 30, 2011, at 9:57 PM, Tim Allen wrote:

> On Wed, Nov 30, 2011 at 01:04:27PM -0000, exarkun at twistedmatrix.com wrote:
>> On 04:07 am, screwtape at froup.com wrote:
>>> If the standard Twisted logging functions automatically constructed
>>> LogMessage instances from dict instances, it should be easy enough for
>>> future ILogObserver implementations to do the right thing (by just
>>> calling str(msg)). Of course, they could also do more sophisticated
>>> things like pulling particular keys out of the message to set
>>> observer-specific message properties (like syslog channel and severity,
>>> etc.)
>> 
>> Oooorrrr there could be a function that takes a dict intended to 
>> represent a text message and returns that message as a string.
> 
> As mentioned, we already have one of those in the form of
> textFromEventDict().

Right, I think that's the tone all those extra letters are meant to suggest :).

> The trouble is that everybody who writes
> a LogObserver needs to know that it exists, and remember to call it. If
> it were the __str__() method of a LogMessage object, they'd have to go
> out of their way to *not* do the right thing.

I really don't like using __str__ for structured conversions.  For example, textFromEventDict has very strict error-handling behavior: it will try as hard as it can to give you something so that you don't need to do extra error handling in your log observer.  But if you can get instances of LogMessage or some derived message type or possibly application-derived message types, the behavior might change and the error-handling would be less strict and now the default log observers need to be double-careful; once in LogMessage.__str__, once in the thing that calls it because you can never really know what str(x) is going to do.

For another there's a whole nasty battery of unicode-or-bytes issues that crop up when you start using __str__.

Finally, and I'm leaving it for last because this concern is rather silly, right now log events are constructed and propagated with extremely little copying, and the copying that does happen (ahem, log contexts) needs to be reduced.  Adding a LogMessage object into the mix, even if it is a subclass of dict, means we have to, at the very least, copy all the values from msg()'s keyword arguments into a new object, rather than just propagating them to log observers.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/151c52c3/attachment-0001.htm 

From itamar at itamarst.org  Thu Dec  1 10:24:32 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 01 Dec 2011 10:24:32 -0500
Subject: [Twisted-Python] Using decorator syntax in Twisted
Message-ID: <4ED79C30.8040509@itamarst.org>

Until now we haven't AFAIK used decorator syntax, but I think it's time 
we start to. In places where we were already using decorators without 
the special syntax, that is.

Consider:

    def foo(cls, arg):
        # lalalal
    foo = classmethod(foo)

One has to type "foo" three times (a potential source of error), and the 
special semantics of the function are known to the reader only *after* 
reading the function. On the other hand:

    @classmethod
    def foo(cls, arg):
        # lalalal

This suffers from none of these problems.

Any disagreement?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/ba57c1f8/attachment.htm 

From teratorn at twistedmatrix.com  Thu Dec  1 10:51:30 2011
From: teratorn at twistedmatrix.com (teratorn at twistedmatrix.com)
Date: Thu, 1 Dec 2011 12:51:30 -0300
Subject: [Twisted-Python] Good evening
Message-ID: <2383156829.IUUZSKO3347037@rntzjhrt.mnkkkhduybvcncc.su>

WHAT A GREAT IDEA!

Ring anytime 1-404-549-4731

We provide a concept that will allow anyone with sufficient work experience to
obtain a fully verifiable University Degree.
Bachelors, Masters or even a Doctorate.

Think of it, within four to six weeks, you too could be a college graduate.
Many people share the same frustration, they are doing the work of the person
that has the degree and the person that has the degree is getting all the money.
Don't you think that it is time you were paid fair compensation for the level of
work you are already doing?

This is your chance to finally make the right move and receive your due
benefits.
If you are more than qualified with your experience, but are lacking that
prestigious piece of paper known as a diploma that is often the passport to
success.

CALL US TODAY AND GIVE YOUR WORK
EXPERIENCE THE CHANCE TO EARN YOU
THE HIGHER COMPENSATION YOU DESERVE!

Ring anytime 1-404-549-4731



From exarkun at twistedmatrix.com  Thu Dec  1 10:53:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Dec 2011 15:53:36 -0000
Subject: [Twisted-Python] Using decorator syntax in Twisted
In-Reply-To: <4ED79C30.8040509@itamarst.org>
References: <4ED79C30.8040509@itamarst.org>
Message-ID: <20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain>

On 03:24 pm, itamar at itamarst.org wrote:
>Until now we haven't AFAIK used decorator syntax, but I think it's time 
>we start to. In places where we were already using decorators without 
>the special syntax, that is.
>
>Consider:
>
>    def foo(cls, arg):
>        # lalalal
>    foo = classmethod(foo)
>
>One has to type "foo" three times (a potential source of error), and 
>the special semantics of the function are known to the reader only 
>*after* reading the function. On the other hand:
>
>    @classmethod
>    def foo(cls, arg):
>        # lalalal
>
>This suffers from none of these problems.
>
>Any disagreement?

Can we start with a limited experimental usage?  Some new code can be 
written this way, and we'll see if there's any negative feedback 
following the next release.

I don't want existing code to get ported to the new syntax just because 
it's possible now.

Jean-Paul


From itamar at itamarst.org  Thu Dec  1 11:33:06 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 1 Dec 2011 11:33:06 -0500
Subject: [Twisted-Python] Using decorator syntax in Twisted
In-Reply-To: <20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain
	>
References: <4ED79C30.8040509@itamarst.org>
	<20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain>
Message-ID: <2ffeb08ee1e6b3699737026b418f0c29.squirrel@webmail.zoteca.com>

> Can we start with a limited experimental usage?  Some new code can be
> written this way, and we'll see if there's any negative feedback
> following the next release.
>
> I don't want existing code to get ported to the new syntax just because
> it's possible now.

Sure, just because it's possible doesn't mean we should go and change all
existing code.



From tom.sheffler at gmail.com  Thu Dec  1 12:32:50 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Thu, 1 Dec 2011 09:32:50 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
Message-ID: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>

I am happy with the information I get out of the logging system and the
formatting of errors and tracebacks.  We've recently come across two things
that could be handled nicer however.

1) we use multiple logfiles.  one for *all* messages, and another for
*special* messages.  It would be nice if the concept of multiple logfiles
and the routing of messages to files was part of the system.

2) the above, coupled with the use of twisd and starting the logfiles was a
little weird.  Our main logfile is attached to the application like this

application.setComponent(ILogObserver, FileLogObserver(logfile).emit)

and the other logfile just starts on its own.  I had expected to attach
both of them to the application and set up an event filter for each.  It's
a little non-symmetric the way it is.

-T
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/863c9841/attachment.htm 

From lmorsino at gmail.com  Thu Dec  1 19:12:51 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 16:12:51 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
Message-ID: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>

Hi all,

I'm writing a twisted Telnet server and I want a client to be able to
connect to it through some other interface, such as PuTTY.  I can make the
connection fine. But one of my requirements is to be able to tell the
client to switch back and forth between buffered and unbuffered input modes
depending on the state of the server. (Sometimes, the client should enter
text, then hit enter to send. Other times, the client should send data
character-by-character).

I'm new at this, and maybe I'm missing something, but in my TelnetTransport
object, I do something like this to disable buffering of client data:

self.transport.write(IAC + WILL + LINEMODE)
self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)

Not working though. PuTTY still requires me to hit <enter> after I type.
I've tried various combinations of the above. I'm sure I'm doing something
wrong but its just really hard to find an example of this on the net. I'd
appreciate some advice as to how to proceed, or a simple example if you
have time...

I'm using the twisted Telnet classes found here:
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/0dfffd0d/attachment.htm 

From twisted at patrickmylund.com  Thu Dec  1 19:26:03 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Fri, 2 Dec 2011 01:26:03 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
Message-ID: <CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>

Hi Lee,

Does using TelnetTransport 'will' and 'requestNegotation' work? E.g.

self.will(LINEMODE)
self.requestNegotiation(LINEMODE, '')

I'm not completely sure about LINEMODE, but if the client sends back a
DO, you might use something like:

class MyTransport(TelnetTransport):

    def connectionMade(self):
        self.linemode = False
        self.will(LINEMODE)
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == DO:
                self.requestNegotiation(LINEMODE, '')
                self.linemode = True
            elif command == DONT:
                pass
        else:
            TelnetTransport.commandReceived(self, command, argument)

    def write(self, data):
        if self.linemode:
            # do something special
        else:
            self.transport.write(data)

Best,
Patrick

On Fri, Dec 2, 2011 at 01:12, Lee Orsino <lmorsino at gmail.com> wrote:
> Hi all,
>
> I'm writing a twisted Telnet server and I want a client to be able to
> connect to it through some other interface, such as PuTTY. ?I can make the
> connection fine. But one of my requirements is to be able to tell the client
> to switch back and forth between buffered and unbuffered input modes
> depending on the state of the server. (Sometimes, the client should enter
> text, then hit enter to send. Other times, the client should send data
> character-by-character).
>
> I'm new at this, and maybe I'm missing something, but in my TelnetTransport
> object, I do something like this?to disable buffering of client data:
>
> self.transport.write(IAC + WILL + LINEMODE)
> self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)
>
> Not working though. PuTTY still requires me to hit <enter> after I type.
> I've tried various combinations of the above. I'm sure I'm doing something
> wrong but its just really hard to find an example of this on the net. I'd
> appreciate some advice as to how to proceed, or a simple example if you have
> time...
>
> I'm using the twisted Telnet classes found here:
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From twisted at patrickmylund.com  Thu Dec  1 19:27:43 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Fri, 2 Dec 2011 01:27:43 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
Message-ID: <CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>

For clarity, self.linemode has no special significance--it was just an
easy way to keep track of what was negotiated with the client.

On Fri, Dec 2, 2011 at 01:26, Patrick Mylund Nielsen
<twisted at patrickmylund.com> wrote:
> Hi Lee,
>
> Does using TelnetTransport 'will' and 'requestNegotation' work? E.g.
>
> self.will(LINEMODE)
> self.requestNegotiation(LINEMODE, '')
>
> I'm not completely sure about LINEMODE, but if the client sends back a
> DO, you might use something like:
>
> class MyTransport(TelnetTransport):
>
> ? ?def connectionMade(self):
> ? ? ? ?self.linemode = False
> ? ? ? ?self.will(LINEMODE)
> ? ? ? ?TelnetTransport.connectionMade(self)
>
> ? ?def commandReceived(self, command, argument):
> ? ? ? ?if argument == LINEMODE:
> ? ? ? ? ? ?if command == DO:
> ? ? ? ? ? ? ? ?self.requestNegotiation(LINEMODE, '')
> ? ? ? ? ? ? ? ?self.linemode = True
> ? ? ? ? ? ?elif command == DONT:
> ? ? ? ? ? ? ? ?pass
> ? ? ? ?else:
> ? ? ? ? ? ?TelnetTransport.commandReceived(self, command, argument)
>
> ? ?def write(self, data):
> ? ? ? ?if self.linemode:
> ? ? ? ? ? ?# do something special
> ? ? ? ?else:
> ? ? ? ? ? ?self.transport.write(data)
>
> Best,
> Patrick
>
> On Fri, Dec 2, 2011 at 01:12, Lee Orsino <lmorsino at gmail.com> wrote:
>> Hi all,
>>
>> I'm writing a twisted Telnet server and I want a client to be able to
>> connect to it through some other interface, such as PuTTY. ?I can make the
>> connection fine. But one of my requirements is to be able to tell the client
>> to switch back and forth between buffered and unbuffered input modes
>> depending on the state of the server. (Sometimes, the client should enter
>> text, then hit enter to send. Other times, the client should send data
>> character-by-character).
>>
>> I'm new at this, and maybe I'm missing something, but in my TelnetTransport
>> object, I do something like this?to disable buffering of client data:
>>
>> self.transport.write(IAC + WILL + LINEMODE)
>> self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)
>>
>> Not working though. PuTTY still requires me to hit <enter> after I type.
>> I've tried various combinations of the above. I'm sure I'm doing something
>> wrong but its just really hard to find an example of this on the net. I'd
>> appreciate some advice as to how to proceed, or a simple example if you have
>> time...
>>
>> I'm using the twisted Telnet classes found here:
>> http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py
>>
>> Thanks!
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>


From lmorsino at gmail.com  Thu Dec  1 20:00:28 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 17:00:28 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
Message-ID: <CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>

Hi Patrick! Thanks for the suggestion. After I call self.will(LINEMODE), I
get

Failure: twisted.conch.telnet.OptionRefused:
twisted.conch.telnet.OptionRefused:
'"'

So I know at least something is happening. I guess this just became a
Telnet question instead of a twisted question. But I still don't understand
how enableRemote and requestNegotiation are supposed to be used with this.
Anyway, this happens in PuTTY as well as the Windows telnet client. Below
is the code, if it helps, as simple as I could get it. Maybe there is
something obvious that I need to do:



from twisted.internet.protocol import Protocol, Factory
from twisted.conch.telnet import TelnetTransport, TelnetProtocol,
ITelnetProtocol
from twisted.internet import reactor
import sys

class EchoTransport(TelnetTransport):
def __init__(self, protocolFactory=None, *a, **kw):
TelnetTransport.__init__(self)
if protocolFactory is not None:
self.protocolFactory = protocolFactory
self.protocolArgs = a
self.protocolKwArgs = kw

def connectionMade(self):
TelnetTransport.connectionMade(self)
print ("connection made")

def connectionLost(self, reason):
print ("connection lost")
reactor.stop()
 def applicationDataReceived(self, bytes):
TelnetTransport.applicationDataReceived(self, bytes)
bytes = bytes.strip()
 if (bytes == 'b'):
self.will(chr(34)) # Error here
 if (bytes == 'x'):
self.transport.write("goodbye")
TelnetTransport.loseConnection(self)

def main():
    f = Factory()
    f.protocol = lambda: EchoTransport(TelnetProtocol)
    reactor.listenTCP(8023, f)
    reactor.run()


if __name__ == '__main__':
    main()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/fd4caade/attachment-0001.htm 

From jeff at ocjtech.us  Thu Dec  1 20:34:58 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Thu, 1 Dec 2011 19:34:58 -0600
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
Message-ID: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>

On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
>
> ? ? reactor.listenTCP(8023, f)

It's been a loong time since I've done anything with telnet, but it
used to be the case that telnet clients would not do any negotiation
if they connected to non-standard ports.  Have you tried running your
server on port 23?

-- 
Jeff Ollie


From lmorsino at gmail.com  Thu Dec  1 21:25:23 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 18:25:23 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
Message-ID: <CAE18iQXMovNNE3_yrykfxuLuZGALxdm45=LOPw9K=LYLW5rs-A@mail.gmail.com>

Yeah, unfortunately, same result on port 23    :(




On Thu, Dec 1, 2011 at 5:34 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:

> On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
> >
> >     reactor.listenTCP(8023, f)
>
> It's been a loong time since I've done anything with telnet, but it
> used to be the case that telnet clients would not do any negotiation
> if they connected to non-standard ports.  Have you tried running your
> server on port 23?
>
> --
> Jeff Ollie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/d8f54ee7/attachment.htm 

From mostawesomedude at gmail.com  Thu Dec  1 22:52:44 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Thu, 1 Dec 2011 19:52:44 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
Message-ID: <CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>

On Thu, Dec 1, 2011 at 5:34 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
> On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
>>
>> ? ? reactor.listenTCP(8023, f)
>
> It's been a loong time since I've done anything with telnet, but it
> used to be the case that telnet clients would not do any negotiation
> if they connected to non-standard ports. ?Have you tried running your
> server on port 23?

I just happen to have been doing something similar, with
TERMINAL-TYPE, and negotiation works fine regardless of port used.
Clearly something else is wrong.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From lmorsino at gmail.com  Thu Dec  1 23:43:26 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 20:43:26 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
Message-ID: <CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>

Hmmm. Do I need to do something with the enableRemote/enableLocal methods
of TelnetTransport?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111201/620bd50e/attachment.htm 

From ddwiggins at advpubtech.com  Fri Dec  2 13:01:11 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 02 Dec 2011 10:01:11 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>	<ja16c1$u1t$1@dough.gmane.org>	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>	<4ED52805.7050300@advpubtech.com>
	<20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>
Message-ID: <jbb3p8$7n8$1@dough.gmane.org>

On 11/30/2011 5:20 AM, exarkun at twistedmatrix.com wrote:
> On 29 Nov, 06:44 pm, ddwiggins at advpubtech.com wrote:
>> Looking at the source of log.py, I'm at a bit of a loss to reconcile 
>> these two forces. Certainly, the two log observers implemented there 
>> use textFromEventDict, but one could create a different observer that 
>> does things entirely differently.
>> The best idea I can come up with is, in the documentation for msg,
>> refer to the documentation for the chosen log observer; then, in each log
>> observer's documentation, describe how the formatting is done, either
>> explicitly, or by reference to textFromEventDict.  (And maybe in the
>> documentation for ILogObserver, recommend strongly that each
>> implementation be explicit about message formatting.)  There should
>> probably also be something in the logging howto.
>>
>> Any better suggestions?
> I'm not sure what you mean by "refer to the documentation for the chosen
> log observer".  The only interpretation I can think of involves changing
> the documentation dynamically at runtime, which doesn't make any sense,
> so I don't think it's what you meant. :)

Sorry, I was being a bit too concise.  What I had in mind was that, when 
you're about to write a call to msg(), you know which log observer 
you're using, so you know which observer's documentation to refer to.

Actually, that might not be quite true; if you use one of the LogFile 
classes, for example, you'd have to infer that it's using 
FileLogObserver, or dig into the source to find out -- again, the kind 
of thing I'd like to avoid.

I'm beginning to think that howto/logging.html is the right place to 
explain things, and needs more work than I originally thought.  I'm 
willing to submit something, but unfortunately not in the very near future.

-- 

Don Dwiggins
Advanced Publishing Technology




From exarkun at twistedmatrix.com  Fri Dec  2 19:56:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 00:56:19 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
Message-ID: <20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>

On 2 Dec, 04:43 am, lmorsino at gmail.com wrote:
>Hmmm. Do I need to do something with the enableRemote/enableLocal 
>methods
>of TelnetTransport?

Yes.  The default implementation of enableRemote does not allow any 
options to be enabled.  You must override it if you want the peer to be 
allowed to enable any options.

Jean-Paul


From lmorsino at gmail.com  Fri Dec  2 22:53:40 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Fri, 2 Dec 2011 19:53:40 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
Message-ID: <CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>

Jean-Paul,

Thanks for your response. I still can't get self.will(LINEMODE) to work but
I did get self.telnet_WILL(LINEMODE) to run without throwing an Error. Can
you elaborate on what needs to happen in the enableRemote? My impression
was that once I send the negotiation WILL command from server to the
client, the client will respond with either a DO or a DONT. What further
logic is necessary?

Thanks!

On Fri, Dec 2, 2011 at 4:56 PM, <exarkun at twistedmatrix.com> wrote:

> On 2 Dec, 04:43 am, lmorsino at gmail.com wrote:
> >Hmmm. Do I need to do something with the enableRemote/enableLocal
> >methods
> >of TelnetTransport?
>
> Yes.  The default implementation of enableRemote does not allow any
> options to be enabled.  You must override it if you want the peer to be
> allowed to enable any options.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111202/7f561dda/attachment.htm 

From exarkun at twistedmatrix.com  Sat Dec  3 08:59:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 13:59:06 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
Message-ID: <20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>

On 03:53 am, lmorsino at gmail.com wrote:
>Jean-Paul,
>
>Thanks for your response. I still can't get self.will(LINEMODE) to work 
>but
>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error. 
>Can
>you elaborate on what needs to happen in the enableRemote? My 
>impression
>was that once I send the negotiation WILL command from server to the
>client, the client will respond with either a DO or a DONT. What 
>further
>logic is necessary?

I can't say what further logic is necessary, because I don't know what 
logic you have now.  The description of your code you gave above is a 
good introduction to an actual code listing (<http://sscce.org/>), but 
it's not sufficient on its own.

Jean-Paul


From twisted at patrickmylund.com  Sat Dec  3 09:22:19 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 15:22:19 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
Message-ID: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>

Hi Lee,

Here is a complete example that works with Twisted 11.0. LINEMODE
itself is enabled at connect, but it has different modes that
determine what is sent when by the client. (See section 2.2 of
http://www.faqs.org/rfcs/rfc1184.html)

#####

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import TelnetProtocol,
StatefulTelnetProtocol, TelnetTransport
from twisted.conch.telnet import DO, DONT, WILL, WONT

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LineModeProtocol(TelnetProtocol):

    def connectionMade(self):
        print("Connection made!")

    def connectionLost(self, reason):
        print("Connection lost!")

    def dataReceived(self, data):
        if self.transport.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_TRAPSIG) # Only trap signals locally
                self.transport.lines = False
        else:
            # manually buffer data here
            print("data received (linemode): " + data)
            if data == "n":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_EDIT) # Change to edit mode
                self.transport.lines = True

class LineModeTransport(TelnetTransport):

    def connectionMade(self):
        self.lines = True
        self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == WILL: # Client said OK to our DO; let's... do it
                self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # The
normal (buffered) mode
        else:
            TelnetTransport.commandReceived(self, command, argument)

class LineModeFactory(Factory):

    def buildProtocol(self, addr):
        return LineModeTransport(LineModeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LineModeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()

#####

There is probably an easier way to check the state of LINEMODE, e.g.
with getOptionState, but it works.

Example:

Client:
# telnet localhost 2222
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
How are you?
gounbuffered
testnback again

Server:
# ./linemode.py
Connection made!
data received (normal): How are you?
data received (normal): gounbuffered
data received (linemode): t
data received (linemode): e
data received (linemode): s
data received (linemode): t
data received (linemode): n
data received (normal): back again

Best,
Patrick

On Sat, Dec 3, 2011 at 14:59,  <exarkun at twistedmatrix.com> wrote:
> On 03:53 am, lmorsino at gmail.com wrote:
>>Jean-Paul,
>>
>>Thanks for your response. I still can't get self.will(LINEMODE) to work
>>but
>>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error.
>>Can
>>you elaborate on what needs to happen in the enableRemote? My
>>impression
>>was that once I send the negotiation WILL command from server to the
>>client, the client will respond with either a DO or a DONT. What
>>further
>>logic is necessary?
>
> I can't say what further logic is necessary, because I don't know what
> logic you have now. ?The description of your code you gave above is a
> good introduction to an actual code listing (<http://sscce.org/>), but
> it's not sufficient on its own.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From twisted at patrickmylund.com  Sat Dec  3 09:48:04 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 15:48:04 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
Message-ID: <CAEw2jfz7DOYYip0o6k5iVYZto8uacry=-4-XtzNgPAx=dpppAw@mail.gmail.com>

Pardon my double-posting. Here it is, a little less confusing:

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import TelnetProtocol, TelnetTransport
from twisted.conch.telnet import WILL

# More info: http://www.faqs.org/rfcs/rfc1184.html

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LinemodeProtocol(TelnetProtocol):

    def dataReceived(self, data):
        if self.transport.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_TRAPSIG) # Client should only trap signals locally
                self.transport.lines = False
        else:
            # manually buffer data here
            print("data received (unbuffered): " + data)
            if data == "n":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_EDIT) # Go back to buffered
                self.transport.lines = True

class LinemodeTransport(TelnetTransport):

    def connectionMade(self):
        self.lines = True
        self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == WILL: # Client said OK to our DO; let's... do it
                self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # Buffered mode
        else:
            TelnetTransport.commandReceived(self, command, argument)

class LinemodeFactory(Factory):

    def buildProtocol(self, addr):
        return LinemodeTransport(LinemodeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LinemodeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()



On Sat, Dec 3, 2011 at 15:22, Patrick Mylund Nielsen
<twisted at patrickmylund.com> wrote:
> Hi Lee,
>
> Here is a complete example that works with Twisted 11.0. LINEMODE
> itself is enabled at connect, but it has different modes that
> determine what is sent when by the client. (See section 2.2 of
> http://www.faqs.org/rfcs/rfc1184.html)
>
> #####
>
> #!/usr/bin/env python
> from twisted.internet.protocol import Factory
> from twisted.conch.telnet import TelnetProtocol,
> StatefulTelnetProtocol, TelnetTransport
> from twisted.conch.telnet import DO, DONT, WILL, WONT
>
> LINEMODE = chr(34)
> LINEMODE_EDIT = chr(1) + chr(1)
> LINEMODE_TRAPSIG = chr(1) + chr(2)
> LINEMODE_MODEACK = chr(1) + chr(4)
> LINEMODE_SOFTTAB = chr(1) + chr(8)
> LINEMODE_LITECHO = chr(1) + chr(16)
>
> class LineModeProtocol(TelnetProtocol):
>
> ? ?def connectionMade(self):
> ? ? ? ?print("Connection made!")
>
> ? ?def connectionLost(self, reason):
> ? ? ? ?print("Connection lost!")
>
> ? ?def dataReceived(self, data):
> ? ? ? ?if self.transport.lines:
> ? ? ? ? ? ?line = data.rstrip()
> ? ? ? ? ? ?print("data received (normal): " + line)
> ? ? ? ? ? ?if line == "gounbuffered":
> ? ? ? ? ? ? ? ?self.transport.requestNegotiation(LINEMODE,
> LINEMODE_TRAPSIG) # Only trap signals locally
> ? ? ? ? ? ? ? ?self.transport.lines = False
> ? ? ? ?else:
> ? ? ? ? ? ?# manually buffer data here
> ? ? ? ? ? ?print("data received (linemode): " + data)
> ? ? ? ? ? ?if data == "n":
> ? ? ? ? ? ? ? ?self.transport.requestNegotiation(LINEMODE,
> LINEMODE_EDIT) # Change to edit mode
> ? ? ? ? ? ? ? ?self.transport.lines = True
>
> class LineModeTransport(TelnetTransport):
>
> ? ?def connectionMade(self):
> ? ? ? ?self.lines = True
> ? ? ? ?self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
> ? ? ? ?TelnetTransport.connectionMade(self)
>
> ? ?def commandReceived(self, command, argument):
> ? ? ? ?if argument == LINEMODE:
> ? ? ? ? ? ?if command == WILL: # Client said OK to our DO; let's... do it
> ? ? ? ? ? ? ? ?self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # The
> normal (buffered) mode
> ? ? ? ?else:
> ? ? ? ? ? ?TelnetTransport.commandReceived(self, command, argument)
>
> class LineModeFactory(Factory):
>
> ? ?def buildProtocol(self, addr):
> ? ? ? ?return LineModeTransport(LineModeProtocol)
>
> if __name__ == '__main__':
> ? ?from twisted.internet import reactor
>
> ? ?port = 2222
> ? ?factory = LineModeFactory()
>
> ? ?reactor.listenTCP(port, factory)
> ? ?reactor.run()
>
> #####
>
> There is probably an easier way to check the state of LINEMODE, e.g.
> with getOptionState, but it works.
>
> Example:
>
> Client:
> # telnet localhost 2222
> Trying 127.0.0.1...
> Connected to localhost.
> Escape character is '^]'.
> How are you?
> gounbuffered
> testnback again
>
> Server:
> # ./linemode.py
> Connection made!
> data received (normal): How are you?
> data received (normal): gounbuffered
> data received (linemode): t
> data received (linemode): e
> data received (linemode): s
> data received (linemode): t
> data received (linemode): n
> data received (normal): back again
>
> Best,
> Patrick
>
> On Sat, Dec 3, 2011 at 14:59, ?<exarkun at twistedmatrix.com> wrote:
>> On 03:53 am, lmorsino at gmail.com wrote:
>>>Jean-Paul,
>>>
>>>Thanks for your response. I still can't get self.will(LINEMODE) to work
>>>but
>>>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error.
>>>Can
>>>you elaborate on what needs to happen in the enableRemote? My
>>>impression
>>>was that once I send the negotiation WILL command from server to the
>>>client, the client will respond with either a DO or a DONT. What
>>>further
>>>logic is necessary?
>>
>> I can't say what further logic is necessary, because I don't know what
>> logic you have now. ?The description of your code you gave above is a
>> good introduction to an actual code listing (<http://sscce.org/>), but
>> it's not sufficient on its own.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Sat Dec  3 09:48:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 14:48:56 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
Message-ID: <20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>

On 02:22 pm, twisted at patrickmylund.com wrote:
>Hi Lee,
>
>Here is a complete example that works with Twisted 11.0. LINEMODE
>itself is enabled at connect, but it has different modes that
>determine what is sent when by the client. (See section 2.2 of
>http://www.faqs.org/rfcs/rfc1184.html)

You can manage this without a TelnetTransport subclass:

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import (
    TelnetProtocol, StatefulTelnetProtocol, TelnetTransport)
from twisted.conch.telnet import DO, DONT, WILL, WONT

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LineModeProtocol(TelnetProtocol):

    def connectionMade(self):
        print("Connection made!")
        self.lines = True
        # Ask client to begin sub-negotation of linemode
        self.transport.do(LINEMODE)

    def connectionLost(self, reason):
        print("Connection lost!")

    def enableRemote(self, option):
        if option == LINEMODE:
            # The normal (buffered) mode
            self.transport.requestNegotiation(
                LINEMODE, LINEMODE_EDIT)
            return True
        return False

    def dataReceived(self, data):
        if self.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                # Only trap signals locally
                self.transport.requestNegotiation(
                    LINEMODE, LINEMODE_TRAPSIG)                self.lines 
= False
        else:
            # manually buffer data here
            print("data received (linemode): " + data)
            if data == "n":
                # Change to edit mode
                self.transport.requestNegotiation(
                    LINEMODE, LINEMODE_EDIT)
                self.lines = True

class LineModeFactory(Factory):

    def buildProtocol(self, addr):
        return TelnetTransport(LineModeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LineModeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()

Jean-Paul


From twisted at patrickmylund.com  Sat Dec  3 10:13:31 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 16:13:31 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
Message-ID: <CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>

That's much better, Jean-Paul. Thanks!

On Sat, Dec 3, 2011 at 15:48,  <exarkun at twistedmatrix.com> wrote:
> On 02:22 pm, twisted at patrickmylund.com wrote:
>>Hi Lee,
>>
>>Here is a complete example that works with Twisted 11.0. LINEMODE
>>itself is enabled at connect, but it has different modes that
>>determine what is sent when by the client. (See section 2.2 of
>>http://www.faqs.org/rfcs/rfc1184.html)
>
> You can manage this without a TelnetTransport subclass:
>
> #!/usr/bin/env python
> from twisted.internet.protocol import Factory
> from twisted.conch.telnet import (
> ? ?TelnetProtocol, StatefulTelnetProtocol, TelnetTransport)
> from twisted.conch.telnet import DO, DONT, WILL, WONT
>
> LINEMODE = chr(34)
> LINEMODE_EDIT = chr(1) + chr(1)
> LINEMODE_TRAPSIG = chr(1) + chr(2)
> LINEMODE_MODEACK = chr(1) + chr(4)
> LINEMODE_SOFTTAB = chr(1) + chr(8)
> LINEMODE_LITECHO = chr(1) + chr(16)
>
> class LineModeProtocol(TelnetProtocol):
>
> ? ?def connectionMade(self):
> ? ? ? ?print("Connection made!")
> ? ? ? ?self.lines = True
> ? ? ? ?# Ask client to begin sub-negotation of linemode
> ? ? ? ?self.transport.do(LINEMODE)
>
> ? ?def connectionLost(self, reason):
> ? ? ? ?print("Connection lost!")
>
> ? ?def enableRemote(self, option):
> ? ? ? ?if option == LINEMODE:
> ? ? ? ? ? ?# The normal (buffered) mode
> ? ? ? ? ? ?self.transport.requestNegotiation(
> ? ? ? ? ? ? ? ?LINEMODE, LINEMODE_EDIT)
> ? ? ? ? ? ?return True
> ? ? ? ?return False
>
> ? ?def dataReceived(self, data):
> ? ? ? ?if self.lines:
> ? ? ? ? ? ?line = data.rstrip()
> ? ? ? ? ? ?print("data received (normal): " + line)
> ? ? ? ? ? ?if line == "gounbuffered":
> ? ? ? ? ? ? ? ?# Only trap signals locally
> ? ? ? ? ? ? ? ?self.transport.requestNegotiation(
> ? ? ? ? ? ? ? ? ? ?LINEMODE, LINEMODE_TRAPSIG) ? ? ? ? ? ? ? ?self.lines
> = False
> ? ? ? ?else:
> ? ? ? ? ? ?# manually buffer data here
> ? ? ? ? ? ?print("data received (linemode): " + data)
> ? ? ? ? ? ?if data == "n":
> ? ? ? ? ? ? ? ?# Change to edit mode
> ? ? ? ? ? ? ? ?self.transport.requestNegotiation(
> ? ? ? ? ? ? ? ? ? ?LINEMODE, LINEMODE_EDIT)
> ? ? ? ? ? ? ? ?self.lines = True
>
> class LineModeFactory(Factory):
>
> ? ?def buildProtocol(self, addr):
> ? ? ? ?return TelnetTransport(LineModeProtocol)
>
> if __name__ == '__main__':
> ? ?from twisted.internet import reactor
>
> ? ?port = 2222
> ? ?factory = LineModeFactory()
>
> ? ?reactor.listenTCP(port, factory)
> ? ?reactor.run()
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From lmorsino at gmail.com  Sat Dec  3 22:22:02 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Sat, 3 Dec 2011 19:22:02 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
	<CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
Message-ID: <CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>

Patrick,

Thanks so much for that example, it was really helpful! I understand a
little better about how the protocol works. I tested it on Linux, and it
works just like you said. Perhaps not surprisingly I'm having some
difficulty when running the server on Windows. When I do a

self.will(chr(1)) # set echo mode

I get "DO 1" in return from the client. This is what I would expect. But
when I do

self.do(LINEMODE) # ask client to negotiate LINEMODE

I get "WONT LINEMODE" in return. I get this with both clients I'm testing
with. If I send "WILL LINEMODE" I get "DONT LINEMODE" in return.

So it seems no matter what I do, my clients aren't willing to negotiate
about this. I'm using the same code as the Linux server.

Anyway, thanks for everyone's help so far...! At least it is working in
Linux. Does anyone know if I have to do anything special for Windows? Can
anyone confirm it doesn't work in Win 7? Maybe I am missing some
configuration property, or...?

Thanks!
Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111203/e28b8496/attachment.htm 

From exarkun at twistedmatrix.com  Sun Dec  4 00:05:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Dec 2011 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1322975129.63.2133285789@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111204/dcbc538e/attachment.htm 

From twisted at patrickmylund.com  Sun Dec  4 18:57:22 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Mon, 5 Dec 2011 00:57:22 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
	<CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
	<CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>
Message-ID: <CAEw2jfx=4865B5x1Cwvu+qJHHwgnOqz+B2Qqky7Zj-TdNsM6Uw@mail.gmail.com>

Hi Lee,

You're welcome, although it seems I didn't solve your problem.

I've tried running it on Linux (don't think it's significant) and
connecting from Windows. It seems like Windows Telnet doesn't support
it at all, and PuTTY's implementation is different: It negotiates, but
doesn't actually change modes, e.g. send in real time rather than use
its own editing. Unfortunately I know next to nothing about these
clients' implementation of RFC 1184 (or lack thereof).

If you are willing to divulge a little more information about what you
are building, maybe someone can suggest a more suitable solution.
Perhaps a custom client is your best bet.

Best,
Patrick

On Sun, Dec 4, 2011 at 04:22, Lee Orsino <lmorsino at gmail.com> wrote:
> Patrick,
>
> Thanks so much for that example, it was really helpful! I understand a
> little better about how the protocol works. I tested it on Linux, and it
> works just like you said. Perhaps not surprisingly I'm having some
> difficulty when running the server on Windows. When I do a
>
> self.will(chr(1)) # set echo mode
>
> I get "DO 1" in return from the client. This is what I would expect. But
> when I do
>
> self.do(LINEMODE) # ask client to negotiate LINEMODE
>
> I get "WONT?LINEMODE" in return. I get this with both clients I'm testing
> with. If I send "WILL LINEMODE" I get "DONT LINEMODE" in return.
>
> So it seems no matter what I do, my clients aren't willing to negotiate
> about this. I'm using the same code as the Linux server.
>
> Anyway, thanks for everyone's help so far...! At least it is working in
> Linux. Does anyone know if I have to do anything special for Windows? Can
> anyone confirm it doesn't work in Win 7? Maybe I am missing some
> configuration property, or...?
>
> Thanks!
> Lee
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From m-lists at the-moon.net  Mon Dec  5 07:23:34 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 5 Dec 2011 12:23:34 +0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>

On 5 July 2011 08:31, Wolfgang <tds333+tx at gmail.com> wrote:
> just to note. If a move is preferred I give
> +1 for bitbucket (mercurial)

I thought it might be worth noting that CherryPy have recently
migrated their website from Trac to Bitbucket

 * https://groups.google.com/group/cherrypy-users/browse_thread/thread/80fa8504a2f247da?pli=1

Perhaps in a few months they will have some information about how
successful this has been.

Sorry to bring back an old topic and I know there has been a lot of
work done recently updating and improving the performance of the
Twisted Trac site.

-RichardW.


From exarkun at twistedmatrix.com  Mon Dec  5 08:21:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Dec 2011 13:21:23 -0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to
	somewhere	nicer
In-Reply-To: <CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>
Message-ID: <20111205132123.1778.866412882.divmod.xquotient.69@localhost.localdomain>

On 12:23 pm, m-lists at the-moon.net wrote:
>On 5 July 2011 08:31, Wolfgang <tds333+tx at gmail.com> wrote:
>>just to note. If a move is preferred I give
>>+1 for bitbucket (mercurial)
>
>I thought it might be worth noting that CherryPy have recently
>migrated their website from Trac to Bitbucket
>
>* https://groups.google.com/group/cherrypy- 
>users/browse_thread/thread/80fa8504a2f247da?pli=1
>
>Perhaps in a few months they will have some information about how
>successful this has been.
>
>Sorry to bring back an old topic and I know there has been a lot of
>work done recently updating and improving the performance of the
>Twisted Trac site.

Improvements to the trac deployment shouldn't be seen as a reason not to 
consider entirely new solutions.  Things can improve incrementally while 
plans are being made to improve them more drastically.

Jean-Paul


From glyph at twistedmatrix.com  Mon Dec  5 14:48:43 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 5 Dec 2011 14:48:43 -0500
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>
References: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>
Message-ID: <EEE2D905-B17B-478F-8528-8222099B387C@twistedmatrix.com>


On Dec 1, 2011, at 12:32 PM, Tom Sheffler wrote:

> 1) we use multiple logfiles.  one for *all* messages, and another for *special* messages.  It would be nice if the concept of multiple logfiles and the routing of messages to files was part of the system.

You could implement this by having a single log observer which delegated to multiple other observers, possibly with filters.

Sounds like a nice, simple, self-contained task that you could submit a patch for, if you wanted to  get it into Twisted :).  Please feel free to open a ticket with a patch.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111205/acdf9e32/attachment.htm 

From tenth at twistedmatrix.com  Wed Dec  7 21:05:12 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Wed, 7 Dec 2011 21:05:12 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December Edition
Message-ID: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>

The good news is that it's December, and we're hosting another Boston
Twisted Sprint!

The bad news is that it's going to be this Saturday, December 10th, and I'm
only just announcing it on the list now, due to last minute venue and
schedule change shenanigans.

This will be the last sprint that Exarkun can join us for in Boston,
though, so it's also your last chance to visit and bother him to review
your tickets in person!

As with the last few sprints, we'll be at the Smarterer.com offices in
South End Boston, from about 2:00 PM to 10:00 PM; If you're interested,
please contact me to be added to the official invitation (which includes
more specific info about how to get there, and gain access to the building,
which is locked on weekends).

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111207/3d4d35c7/attachment.htm 

From glyph at twistedmatrix.com  Thu Dec  8 21:23:38 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 8 Dec 2011 21:23:38 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
Message-ID: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>

On Dec 7, 2011, at 9:05 PM, Tenth wrote:

> The good news is that it's December, and we're hosting another Boston Twisted Sprint!
> 
> The bad news is that it's going to be this Saturday, December 10th, and I'm only just announcing it on the list now, due to last minute venue and schedule change shenanigans.
> 
> This will be the last sprint that Exarkun can join us for in Boston, though, so it's also your last chance to visit and bother him to review your tickets in person!
> 
> As with the last few sprints, we'll be at the Smarterer.com offices in South End Boston, from about 2:00 PM to 10:00 PM; If you're interested, please contact me to be added to the official invitation (which includes more specific info about how to get there, and gain access to the building, which is locked on weekends).

I'll be there, and I'll be working on at least 2 exciting and mysterious features :).

If you've gotten an evite, please respond to it so we have an accurate headcount!

If you haven't gotten one, but you'd like to come, please send a personal message to myself or Tenth.

Also, for this sprint or for future sprints, if you're not in the Boston metro area, we'd love to co-ordinate with events in other cities.  If you'd like to host something but you've never organized a sprint before, there are many people on this list who would be happy to help you figure that out :).

-glyph




From tenth at twistedmatrix.com  Fri Dec  9 13:32:23 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Fri, 9 Dec 2011 13:32:23 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
Message-ID: <CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ@mail.gmail.com>

I should also mention that the Sprint will now officially be starting at
Noon, if that makes it more convenient for anyone...

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/c24e4597/attachment.htm 

From kevin.horn at gmail.com  Fri Dec  9 14:00:38 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 9 Dec 2011 13:00:38 -0600
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
Message-ID: <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>

On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> I'll be there, and I'll be working on at least 2 exciting and mysterious
> features :).
>

Exciting!  Mysterious!

Also, for this sprint or for future sprints, if you're not in the Boston
> metro area, we'd love to co-ordinate with events in other cities.  If you'd
> like to host something but you've never organized a sprint before, there
> are many people on this list who would be happy to help you figure that out
> :).
>
> -glyph
>

FYI, the DFW Pythoneers have a coding/presentation session every second
Saturday (where it doesn't conflict with anything really obvious, like
PyCon/PyTexas, etc.)

It's probably a bit too short notice this time to try to hijack the
meeting, but if you have future sprints on second Saturdays (this is at
least the second one, I don't know if that's by accident or design), I'm
happy to try to take it over in furtherance of Twisted.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/7fe48b10/attachment.htm 

From augustocaringi at gmail.com  Fri Dec  9 16:20:44 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Fri, 9 Dec 2011 19:20:44 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
Message-ID: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>

Hi!

    I'm writing a software using Python Twisted with the following architecture:

    [server]<->[providers]

    The providers (that can be thousands) send events to the
centralized server, usually we have a few events per minute for each
provider, but a burst of events can happen.

    So I write a test provider to simulate the sending of millions of
events without any delay, via a thread like that:

    def stressTestTask():
        time.sleep(1)
        c = provider_reference
        for i in range(1000000):
            event = c.createTestEvent()
            reactor.callFromThread(c.transport.write, event)

    Then I started to analyze memory consumption while running this
test code, and I find out that the memory consumption grows to
gigabytes and finally a MemoryError exception raises:

        Traceback (most recent call last):
          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
line 84, in callWithLogger
            return callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 118, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 81, in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 177, in doWrite
            return Connection.doWrite(self)
          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 428, in doWrite
            result = abstract.FileDescriptor.doWrite(self)
          File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
line 199, in doWrite
            self.dataBuffer = buffer(self.dataBuffer, self.offset) +
"".join(self._tempDataBuffer)
        exceptions.MemoryError:

    After a search, I found this ticket:
http://twistedmatrix.com/trac/ticket/3682

    And I think that this is exact my problem.

    What's the best solution? Apply the patch attached on this ticket,
moving to a producer/consumer approach, or any other idea?

    Thanks!

-- 
Augusto Mecking Caringi


From itamar at itamarst.org  Fri Dec  9 16:31:11 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 9 Dec 2011 16:31:11 -0500
Subject: [Twisted-Python] MemoryError in
 twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
Message-ID: <5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>

>     What's the best solution? Apply the patch attached on this ticket,
> moving to a producer/consumer approach, or any other idea?

The patch will just delay the problem... you're creating a huge number of
strings, faster than the transport can write them out. The solution is
indeed to use the consumer API to pause creation of more data until the
transport clears its buffers.



From glyph at twistedmatrix.com  Sat Dec 10 01:37:48 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Dec 2011 01:37:48 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
	<CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>
Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30@twistedmatrix.com>

On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:

> It's probably a bit too short notice this time to try to hijack the meeting,

Understandable.  Possibly worth a shot though ;)

> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),

It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months.  It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).

> I'm happy to try to take it over in furtherance of Twisted.

Twisted Prevails,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111210/937d9572/attachment.htm 

From augustocaringi at gmail.com  Sat Dec 10 12:25:59 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Sat, 10 Dec 2011 15:25:59 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
Message-ID: <CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>

On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
>> ? ? What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>
> The patch will just delay the problem... you're creating a huge number of
> strings, faster than the transport can write them out. The solution is
> indeed to use the consumer API to pause creation of more data until the
> transport clears its buffers.

Right, I will try with the consumer API.

But I have one last question:

In my previous example, the memory usage grows until a MemoryError exception.

But other scenario is when my "event send loop" iterates a high number
of times (but not enough to raise a exception) and then stops.

I expected that when the loop ends, all the strings would be flushed
and as a consequence, the memory usage of the process would return to
a normal level. But this does not happen... It's normal?

Thanks!

-- 
Augusto Mecking Caringi


From smferguson at gmail.com  Sat Dec 10 21:24:26 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sat, 10 Dec 2011 21:24:26 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
Message-ID: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>

Hi all,

A little intro first, I'm a developer by day,
sql/plsql/java/perl/c/c++/... I've been looking for an opensource
project to get to know and contribute to and came across twisted a
week or so ago. It looks pretty interesting, years ago I spent time
writing networking/remote access code.

Anyway, I want to help and am starting to look through the 'easy' bugs
- Python is pretty new to me so I figure that's where I should be. I
took a look at http://twistedmatrix.com/trac/ticket/4966, which might
be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
missing something there?

Also, does the email verification on the website work? I've tried it a
few times and haven't received an email, also nothing in my spam/trash
related to it - sorry if this shouldn't go to the list.

Thanks,
Scott Ferguson

On Sat, Dec 10, 2011 at 12:00 PM,
<twisted-python-request at twistedmatrix.com> wrote:
> Send Twisted-Python mailing list submissions to
> ? ? ? ?twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
> ? ? ? ?http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
> ? ? ? ?twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
> ? ? ? ?twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
> ? 1. Re: Boston Twisted Sprint: Last-Minute December ? Edition (Tenth)
> ? 2. Re: Boston Twisted Sprint: Last-Minute December ? Edition
> ? ? ?(Kevin Horn)
> ? 3. MemoryError in ? ?twisted.internet.abstract.FileDescriptor
> ? ? ?(Augusto Mecking Caringi)
> ? 4. Re: MemoryError in twisted.internet.abstract.FileDescriptor
> ? ? ?(Itamar Turner-Trauring)
> ? 5. Re: Boston Twisted Sprint: Last-Minute December ? Edition (Glyph)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 9 Dec 2011 13:32:23 -0500
> From: Tenth <tenth at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
> ? ? ? ?December ? ? ? ?Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
> ? ? ? ?<CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I should also mention that the Sprint will now officially be starting at
> Noon, if that makes it more convenient for anyone...
>
> Thanks,
>
> - Dave
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/c24e4597/attachment-0001.htm
>
> ------------------------------
>
> Message: 2
> Date: Fri, 9 Dec 2011 13:00:38 -0600
> From: Kevin Horn <kevin.horn at gmail.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
> ? ? ? ?December ? ? ? ?Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
> ? ? ? ?<CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> I'll be there, and I'll be working on at least 2 exciting and mysterious
>> features :).
>>
>
> Exciting! ?Mysterious!
>
> Also, for this sprint or for future sprints, if you're not in the Boston
>> metro area, we'd love to co-ordinate with events in other cities. ?If you'd
>> like to host something but you've never organized a sprint before, there
>> are many people on this list who would be happy to help you figure that out
>> :).
>>
>> -glyph
>>
>
> FYI, the DFW Pythoneers have a coding/presentation session every second
> Saturday (where it doesn't conflict with anything really obvious, like
> PyCon/PyTexas, etc.)
>
> It's probably a bit too short notice this time to try to hijack the
> meeting, but if you have future sprints on second Saturdays (this is at
> least the second one, I don't know if that's by accident or design), I'm
> happy to try to take it over in furtherance of Twisted.
>
> Kevin Horn
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/7fe48b10/attachment-0001.htm
>
> ------------------------------
>
> Message: 3
> Date: Fri, 9 Dec 2011 19:20:44 -0200
> From: Augusto Mecking Caringi <augustocaringi at gmail.com>
> Subject: [Twisted-Python] MemoryError in
> ? ? ? ?twisted.internet.abstract.FileDescriptor
> To: twisted-python at twistedmatrix.com
> Message-ID:
> ? ? ? ?<CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi!
>
> ? ?I'm writing a software using Python Twisted with the following architecture:
>
> ? ?[server]<->[providers]
>
> ? ?The providers (that can be thousands) send events to the
> centralized server, usually we have a few events per minute for each
> provider, but a burst of events can happen.
>
> ? ?So I write a test provider to simulate the sending of millions of
> events without any delay, via a thread like that:
>
> ? ?def stressTestTask():
> ? ? ? ?time.sleep(1)
> ? ? ? ?c = provider_reference
> ? ? ? ?for i in range(1000000):
> ? ? ? ? ? ?event = c.createTestEvent()
> ? ? ? ? ? ?reactor.callFromThread(c.transport.write, event)
>
> ? ?Then I started to analyze memory consumption while running this
> test code, and I find out that the memory consumption grows to
> gigabytes and finally a MemoryError exception raises:
>
> ? ? ? ?Traceback (most recent call last):
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
> line 84, in callWithLogger
> ? ? ? ? ? ?return callWithContext({"system": lp}, func, *args, **kw)
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
> line 69, in callWithContext
> ? ? ? ? ? ?return context.call({ILogContext: newCtx}, func, *args, **kw)
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
> line 118, in callWithContext
> ? ? ? ? ? ?return self.currentContext().callWithContext(ctx, func, *args, **kw)
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
> line 81, in callWithContext
> ? ? ? ? ? ?return func(*args,**kw)
> ? ? ? ?--- <exception caught here> ---
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
> line 146, in _doReadOrWrite
> ? ? ? ? ? ?why = getattr(selectable, method)()
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
> line 177, in doWrite
> ? ? ? ? ? ?return Connection.doWrite(self)
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
> line 428, in doWrite
> ? ? ? ? ? ?result = abstract.FileDescriptor.doWrite(self)
> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
> line 199, in doWrite
> ? ? ? ? ? ?self.dataBuffer = buffer(self.dataBuffer, self.offset) +
> "".join(self._tempDataBuffer)
> ? ? ? ?exceptions.MemoryError:
>
> ? ?After a search, I found this ticket:
> http://twistedmatrix.com/trac/ticket/3682
>
> ? ?And I think that this is exact my problem.
>
> ? ?What's the best solution? Apply the patch attached on this ticket,
> moving to a producer/consumer approach, or any other idea?
>
> ? ?Thanks!
>
> --
> Augusto Mecking Caringi
>
>
>
> ------------------------------
>
> Message: 4
> Date: Fri, 9 Dec 2011 16:31:11 -0500
> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
> Subject: Re: [Twisted-Python] MemoryError in
> ? ? ? ?twisted.internet.abstract.FileDescriptor
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
> ? ? ? ?<5252ce1aebff2c8409ffee1929227075.squirrel at webmail.zoteca.com>
> Content-Type: text/plain;charset=iso-8859-1
>
>> ? ? What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>
> The patch will just delay the problem... you're creating a huge number of
> strings, faster than the transport can write them out. The solution is
> indeed to use the consumer API to pause creation of more data until the
> transport clears its buffers.
>
>
>
>
> ------------------------------
>
> Message: 5
> Date: Sat, 10 Dec 2011 01:37:48 -0500
> From: Glyph <glyph at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
> ? ? ? ?December ? ? ? ?Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30 at twistedmatrix.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:
>
>> It's probably a bit too short notice this time to try to hijack the meeting,
>
> Understandable. ?Possibly worth a shot though ;)
>
>> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),
>
> It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months. ?It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).
>
>> I'm happy to try to take it over in furtherance of Twisted.
>
> Twisted Prevails,
>
> -glyph
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111210/937d9572/attachment-0001.htm
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 93, Issue 12
> **********************************************


From exarkun at twistedmatrix.com  Sun Dec 11 00:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Dec 2011 05:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1323579928.66.1816917297@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111211/61a53c5a/attachment.htm 

From smferguson at gmail.com  Sun Dec 11 10:12:19 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sun, 11 Dec 2011 10:12:19 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
Message-ID: <CAHQmSHfMt4j_R+0=mrx=SJk1wv0yQjFdQ+m-BSLbGkVoeHvUxw@mail.gmail.com>

Scratch that bit about verification emails not sending, turns out it
works fine in firefox, not in chrome.
Thanks,
Scott

On Sat, Dec 10, 2011 at 9:24 PM, Scott M Ferguson <smferguson at gmail.com> wrote:
> Hi all,
>
> A little intro first, I'm a developer by day,
> sql/plsql/java/perl/c/c++/... I've been looking for an opensource
> project to get to know and contribute to and came across twisted a
> week or so ago. It looks pretty interesting, years ago I spent time
> writing networking/remote access code.
>
> Anyway, I want to help and am starting to look through the 'easy' bugs
> - Python is pretty new to me so I figure that's where I should be. I
> took a look at http://twistedmatrix.com/trac/ticket/4966, which might
> be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
> missing something there?
>
> Also, does the email verification on the website work? I've tried it a
> few times and haven't received an email, also nothing in my spam/trash
> related to it - sorry if this shouldn't go to the list.
>
> Thanks,
> Scott Ferguson
>
> On Sat, Dec 10, 2011 at 12:00 PM,
> <twisted-python-request at twistedmatrix.com> wrote:
>> Send Twisted-Python mailing list submissions to
>> ? ? ? ?twisted-python at twistedmatrix.com
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>> ? ? ? ?http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> or, via email, send a message with subject or body 'help' to
>> ? ? ? ?twisted-python-request at twistedmatrix.com
>>
>> You can reach the person managing the list at
>> ? ? ? ?twisted-python-owner at twistedmatrix.com
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of Twisted-Python digest..."
>>
>>
>> Today's Topics:
>>
>> ? 1. Re: Boston Twisted Sprint: Last-Minute December ? Edition (Tenth)
>> ? 2. Re: Boston Twisted Sprint: Last-Minute December ? Edition
>> ? ? ?(Kevin Horn)
>> ? 3. MemoryError in ? ?twisted.internet.abstract.FileDescriptor
>> ? ? ?(Augusto Mecking Caringi)
>> ? 4. Re: MemoryError in twisted.internet.abstract.FileDescriptor
>> ? ? ?(Itamar Turner-Trauring)
>> ? 5. Re: Boston Twisted Sprint: Last-Minute December ? Edition (Glyph)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Fri, 9 Dec 2011 13:32:23 -0500
>> From: Tenth <tenth at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>> ? ? ? ?December ? ? ? ?Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID:
>> ? ? ? ?<CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ at mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> I should also mention that the Sprint will now officially be starting at
>> Noon, if that makes it more convenient for anyone...
>>
>> Thanks,
>>
>> - Dave
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/c24e4597/attachment-0001.htm
>>
>> ------------------------------
>>
>> Message: 2
>> Date: Fri, 9 Dec 2011 13:00:38 -0600
>> From: Kevin Horn <kevin.horn at gmail.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>> ? ? ? ?December ? ? ? ?Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID:
>> ? ? ? ?<CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA at mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>
>>>
>>> I'll be there, and I'll be working on at least 2 exciting and mysterious
>>> features :).
>>>
>>
>> Exciting! ?Mysterious!
>>
>> Also, for this sprint or for future sprints, if you're not in the Boston
>>> metro area, we'd love to co-ordinate with events in other cities. ?If you'd
>>> like to host something but you've never organized a sprint before, there
>>> are many people on this list who would be happy to help you figure that out
>>> :).
>>>
>>> -glyph
>>>
>>
>> FYI, the DFW Pythoneers have a coding/presentation session every second
>> Saturday (where it doesn't conflict with anything really obvious, like
>> PyCon/PyTexas, etc.)
>>
>> It's probably a bit too short notice this time to try to hijack the
>> meeting, but if you have future sprints on second Saturdays (this is at
>> least the second one, I don't know if that's by accident or design), I'm
>> happy to try to take it over in furtherance of Twisted.
>>
>> Kevin Horn
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/7fe48b10/attachment-0001.htm
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Fri, 9 Dec 2011 19:20:44 -0200
>> From: Augusto Mecking Caringi <augustocaringi at gmail.com>
>> Subject: [Twisted-Python] MemoryError in
>> ? ? ? ?twisted.internet.abstract.FileDescriptor
>> To: twisted-python at twistedmatrix.com
>> Message-ID:
>> ? ? ? ?<CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Hi!
>>
>> ? ?I'm writing a software using Python Twisted with the following architecture:
>>
>> ? ?[server]<->[providers]
>>
>> ? ?The providers (that can be thousands) send events to the
>> centralized server, usually we have a few events per minute for each
>> provider, but a burst of events can happen.
>>
>> ? ?So I write a test provider to simulate the sending of millions of
>> events without any delay, via a thread like that:
>>
>> ? ?def stressTestTask():
>> ? ? ? ?time.sleep(1)
>> ? ? ? ?c = provider_reference
>> ? ? ? ?for i in range(1000000):
>> ? ? ? ? ? ?event = c.createTestEvent()
>> ? ? ? ? ? ?reactor.callFromThread(c.transport.write, event)
>>
>> ? ?Then I started to analyze memory consumption while running this
>> test code, and I find out that the memory consumption grows to
>> gigabytes and finally a MemoryError exception raises:
>>
>> ? ? ? ?Traceback (most recent call last):
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
>> line 84, in callWithLogger
>> ? ? ? ? ? ?return callWithContext({"system": lp}, func, *args, **kw)
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
>> line 69, in callWithContext
>> ? ? ? ? ? ?return context.call({ILogContext: newCtx}, func, *args, **kw)
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
>> line 118, in callWithContext
>> ? ? ? ? ? ?return self.currentContext().callWithContext(ctx, func, *args, **kw)
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
>> line 81, in callWithContext
>> ? ? ? ? ? ?return func(*args,**kw)
>> ? ? ? ?--- <exception caught here> ---
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
>> line 146, in _doReadOrWrite
>> ? ? ? ? ? ?why = getattr(selectable, method)()
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
>> line 177, in doWrite
>> ? ? ? ? ? ?return Connection.doWrite(self)
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
>> line 428, in doWrite
>> ? ? ? ? ? ?result = abstract.FileDescriptor.doWrite(self)
>> ? ? ? ? ?File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
>> line 199, in doWrite
>> ? ? ? ? ? ?self.dataBuffer = buffer(self.dataBuffer, self.offset) +
>> "".join(self._tempDataBuffer)
>> ? ? ? ?exceptions.MemoryError:
>>
>> ? ?After a search, I found this ticket:
>> http://twistedmatrix.com/trac/ticket/3682
>>
>> ? ?And I think that this is exact my problem.
>>
>> ? ?What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>>
>> ? ?Thanks!
>>
>> --
>> Augusto Mecking Caringi
>>
>>
>>
>> ------------------------------
>>
>> Message: 4
>> Date: Fri, 9 Dec 2011 16:31:11 -0500
>> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
>> Subject: Re: [Twisted-Python] MemoryError in
>> ? ? ? ?twisted.internet.abstract.FileDescriptor
>> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>> Message-ID:
>> ? ? ? ?<5252ce1aebff2c8409ffee1929227075.squirrel at webmail.zoteca.com>
>> Content-Type: text/plain;charset=iso-8859-1
>>
>>> ? ? What's the best solution? Apply the patch attached on this ticket,
>>> moving to a producer/consumer approach, or any other idea?
>>
>> The patch will just delay the problem... you're creating a huge number of
>> strings, faster than the transport can write them out. The solution is
>> indeed to use the consumer API to pause creation of more data until the
>> transport clears its buffers.
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 5
>> Date: Sat, 10 Dec 2011 01:37:48 -0500
>> From: Glyph <glyph at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>> ? ? ? ?December ? ? ? ?Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30 at twistedmatrix.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:
>>
>>> It's probably a bit too short notice this time to try to hijack the meeting,
>>
>> Understandable. ?Possibly worth a shot though ;)
>>
>>> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),
>>
>> It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months. ?It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).
>>
>>> I'm happy to try to take it over in furtherance of Twisted.
>>
>> Twisted Prevails,
>>
>> -glyph
>>
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111210/937d9572/attachment-0001.htm
>>
>> ------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>> End of Twisted-Python Digest, Vol 93, Issue 12
>> **********************************************


From glyph at twistedmatrix.com  Sun Dec 11 13:29:06 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 11 Dec 2011 13:29:06 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
Message-ID: <589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>


On Dec 10, 2011, at 9:24 PM, Scott M Ferguson wrote:

> A little intro first, I'm a developer by day,
> sql/plsql/java/perl/c/c++/... I've been looking for an opensource
> project to get to know and contribute to and came across twisted a
> week or so ago. It looks pretty interesting, years ago I spent time
> writing networking/remote access code.

Glad to hear it, welcome :).

> Anyway, I want to help and am starting to look through the 'easy' bugs
> - Python is pretty new to me so I figure that's where I should be. I
> took a look at http://twistedmatrix.com/trac/ticket/4966, which might
> be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
> missing something there?

Nope.  __all__ should typically be defined on public modules, just as a hint for documentation and tools, so that's why the ticket sort of refers to it as if it's there.  But twisted/web/server.py is a super old module, one that predates most of the documentation 

Really the thing to do with that ticket is to put a @var declaration into the module docstring, though.  That should be a pretty trivial patch, to help you get comfortable with the process and the tools :).

Feel free to ask if you have any other questions about contributing,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111211/908b85fe/attachment.htm 

From exarkun at twistedmatrix.com  Sun Dec 11 14:11:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Dec 2011 19:11:17 -0000
Subject: [Twisted-Python] MemoryError
	in	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
Message-ID: <20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>

On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
><itamar at itamarst.org> wrote:
>>>? ? What's the best solution? Apply the patch attached on this 
>>>ticket,
>>>moving to a producer/consumer approach, or any other idea?
>>
>>The patch will just delay the problem... you're creating a huge number 
>>of
>>strings, faster than the transport can write them out. The solution is
>>indeed to use the consumer API to pause creation of more data until 
>>the
>>transport clears its buffers.
>
>Right, I will try with the consumer API.
>
>But I have one last question:
>
>In my previous example, the memory usage grows until a MemoryError 
>exception.
>
>But other scenario is when my "event send loop" iterates a high number
>of times (but not enough to raise a exception) and then stops.
>
>I expected that when the loop ends, all the strings would be flushed
>and as a consequence, the memory usage of the process would return to
>a normal level. But this does not happen... It's normal?

Data may or may not be put onto the network as you are directing a 
transport to write it.  It's up to the particular transport 
implementation to decide on buffering logic, including logic about 
whether data is sent immediately when a write() call is, or only later 
after control returns to the event loop.

As of Twisted 11.1, the posix-based reactor implementations all buffer 
data until control is returned to the event loop.  This has been the 
case for some time, but not _all_ time, and it may change in the future.

Jean-Paul


From smferguson at gmail.com  Sun Dec 11 19:29:27 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sun, 11 Dec 2011 19:29:27 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
	<589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>
Message-ID: <CAHQmSHfvDppAwbD1RWi96xsNHp259B3uyRLjHndAoPW4a83dTA@mail.gmail.com>

> On Dec 10, 2011, at 9:24 PM, Scott M Ferguson wrote:
>
>
> Nope. ?__all__ should?typically be defined on public modules, just as a hint
> for documentation and tools, so that's why the ticket sort of refers to it
> as if it's there. ?But twisted/web/server.py is a super old module, one that
> predates most of the documentation
>
> Really the thing to do with that ticket is to put a @var declaration into
> the module docstring, though. ?That should be a pretty trivial patch, to
> help you get comfortable with the process and the tools :).
>
> Feel free to ask if you have any other questions about contributing,
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks for the response, as you mentioned that sounds like a good
place to get comfortable with the process - I'll start there and ping
the list as questions come up.

Thanks,
Scott


From andrewfr_ice at yahoo.com  Sun Dec 11 22:05:54 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 11 Dec 2011 19:05:54 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with Stackless
	and Twisted
Message-ID: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>

Hi Folks:

I don't know what to file this under but here goes:

Santa repeatedly sleeps until wakened by either all of his nine 
reindeer, back from their holidays, or by a group of three of his ten 
elves. If awakened by the reindeer, he harnesses each of them to his 
sleigh, delivers toys with them and finally unharnesses them (allowing 
them to go off on holiday). If awakened by a group of elves, he shows 
each of the group into his study, consults with them on toy R&D and 
finally shows them each out (allowing them to go back to work). Santa 
should give priority to the reindeer in the case that there is both a 
group of elves and a group of reindeer waiting 

I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.


The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.? I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is:?
def santa(reindeer, elves):
??? joinObject = stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
????????????????????????????????? addPattern([ch for _, ch, _ in elves],3)

??? reindeerPattern, elfPattern = joinObject.patterns

??? while True:
??????? pattern = joinObject.join()
??????? if reindeerPattern.ready():
??????????? print "*** REINDEER GET PRIORITY ***"
??????????? reindeerPattern.join()
??????????? pattern = reindeerPattern
??????? if pattern is reindeerPattern:
??????????? harness(reindeerPattern)
??????????? deliveryToys(reindeerPattern)
??????????? unharness(reindeerPattern)
??????? elif pattern is elfPattern:
??????????? consultWithSanta(elfPattern)

??? stopTwisted()

In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used). 

def tick(seconds):
??? tickCh = stackless.channel()
??? reactor.callLater(seconds, tickCh.send, None)
??? tickCh.receive()

However I could just as easily make reindeer and elves web services or RestFull interfaces. I am still working on the? Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111211/5c526a94/attachment.htm 

From shhgs.efhilt at gmail.com  Mon Dec 12 23:15:30 2011
From: shhgs.efhilt at gmail.com (shhgs)
Date: Mon, 12 Dec 2011 23:15:30 -0500
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
 Stackless and Twisted
In-Reply-To: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
Message-ID: <20111213041530.GB11352@laptop.huang.net>

reindeers = dict( rudolf = defer.Deferred()
                , ....
                )
arrivedElvs = []
threeElvsArrived = defer.Deferred()

def onReindeerArrive(who):
    reindeer[who].callback(True)

def onElvArrive(elv):
    global arrivedElvs
    if len(arrivedElvs) <= 1:
        arrivedElvs.append(elv)
    elif len(arrivedElvs) == 2:
        arrivedElvs.append(elv)
        threeElvsArrived.callback(arrivedElvs)
    else:
        pass

defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
elvsArrived.addCallback(playWithElvs)

Above is my pseudo code.  It's not clear if Santa will respond to only to one
of these two events. If so, you may block the other when one get fired.  I
think Twisted's approach is pretty elegant.



On Sun, Dec 11, 2011 at 07:05:54PM -0800, Andrew Francis wrote:
> Hi Folks:
>
> I don't know what to file this under but here goes:
>
> Santa repeatedly sleeps until wakened by either all of his nine
> reindeer, back from their holidays, or by a group of three of his ten
> elves. If awakened by the reindeer, he harnesses each of them to his
> sleigh, delivers toys with them and finally unharnesses them (allowing
> them to go off on holiday). If awakened by a group of elves, he shows
> each of the group into his study, consults with them on toy R&D and
> finally shows them each out (allowing them to go back to work). Santa
> should give priority to the reindeer in the case that there is both a
> group of elves and a group of reindeer waiting
>
> I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.
>
>
> The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.? I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is:?
> def santa(reindeer, elves):
> ??? joinObject = stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
> ????????????????????????????????? addPattern([ch for _, ch, _ in elves],3)
>
> ??? reindeerPattern, elfPattern = joinObject.patterns
>
> ??? while True:
> ??????? pattern = joinObject.join()
> ??????? if reindeerPattern.ready():
> ??????????? print "*** REINDEER GET PRIORITY ***"
> ??????????? reindeerPattern.join()
> ??????????? pattern = reindeerPattern
> ??????? if pattern is reindeerPattern:
> ??????????? harness(reindeerPattern)
> ??????????? deliveryToys(reindeerPattern)
> ??????????? unharness(reindeerPattern)
> ??????? elif pattern is elfPattern:
> ??????????? consultWithSanta(elfPattern)
>
> ??? stopTwisted()
>
> In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used).
>
> def tick(seconds):
> ??? tickCh = stackless.channel()
> ??? reactor.callLater(seconds, tickCh.send, None)
> ??? tickCh.receive()
>
> However I could just as easily make reindeer and elves web services or RestFull interfaces. I am still working on the? Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.
>
> Cheers,
> Andrew

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tobias.oberstein at tavendo.de  Tue Dec 13 11:58:30 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 13 Dec 2011 08:58:30 -0800
Subject: [Twisted-Python] Autobahn WebSockets 0.4.10
Message-ID: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>

Hi,

Autobahn WebSockets 0.4.10 is done:

+ various improvements to RPC / PubSub
+ RFC 6455 support
+ kqueue support on BSD
+ various smaller issues fixed
+ demos updated, docs improved

Special thanks to Peter Thorson for RFC6455 changes and test cases.

Cheers,
Tobias

Project Link:  http://www.tavendo.de/autobahn
Package:  http://pypi.python.org/pypi/autobahn
Docs: http://www.tavendo.de/autobahn/doc/python/index.html
Source: https://github.com/oberstet/Autobahn


From andrewfr_ice at yahoo.com  Tue Dec 13 14:04:09 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 13 Dec 2011 11:04:09 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
	<20111213041530.GB11352@laptop.huang.net> 
Message-ID: <1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>



From: shhgs <shhgs.efhilt at gmail.com>
To: Andrew Francis <andrewfr_ice at yahoo.com>; Twisted general discussion <twisted-python at twistedmatrix.com> 
Sent: Monday, December 12, 2011 11:15 PM
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with Stackless and Twisted

Hi Shhgs:

>defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
>elvsArrived.addCallback(playWithElvs)

>Above is my pseudo code.? It's not clear if Santa will respond to only to one
>of these two events. If so, you may block the other when one get fired.? I
>think Twisted's approach is pretty elegant.


Cool!

Okay, I understand your approach: you count the elves and then the right number arrive, you wake Santa.

Twisted does have one important ingredient for solving Santa Claus: a join mechanism in the form of a deferred list. Also the non-preemptive nature of the reactor guards against a lot of the problems in another solution. In this regard, I think a Twisted solution may be more efficient than most Python mechanisms out there.

The main problem I see with a pure Twisted solution is that it really can't impose the priority rule. Perhaps the? way the reactor works makes priority somewhat moot.? Let's assume we could put timestamps on elves and reindeer arrival times (or force reindeer and elves to arrival at specific times).

Now at time T, there are eight reindeer and two elves ready. At T+1, an additional? reindeer and elf are ready (their timestamps are the same, timer resolution notwithstanding). However the Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from inside the callback, one could check to see if nine reindeer were indeed ready.

Also I suspect once you actually coded out the solution, the ancillary things (looping, callLater) would make the code more difficult to read. However that is minor compared to aforementioned problem. 

Cheers,
Andrew


________________________________
From: shhgs <shhgs.efhilt at gmail.com>
To: Andrew Francis <andrewfr_ice at yahoo.com>; Twisted general discussion <twisted-python at twistedmatrix.com> 
Sent: Monday, December 12, 2011 11:15 PM
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with Stackless and Twisted

reindeers = dict( rudolf = defer.Deferred()
? ? ? ? ? ? ? ? , ....
? ? ? ? ? ? ? ? )
arrivedElvs = []
threeElvsArrived = defer.Deferred()

def onReindeerArrive(who):
? ? reindeer[who].callback(True)

def onElvArrive(elv):
? ? global arrivedElvs
? ? if len(arrivedElvs) <= 1:
? ? ? ? arrivedElvs.append(elv)
? ? elif len(arrivedElvs) == 2:
? ? ? ? arrivedElvs.append(elv)
? ? ? ? threeElvsArrived.callback(arrivedElvs)
? ? else:
? ? ? ? pass

defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
elvsArrived.addCallback(playWithElvs)

Above is my pseudo code.? It's not clear if Santa will respond to only to one
of these two events. If
so, you may block the other when one get fired.? I
think Twisted's approach is pretty elegant.



On Sun, Dec 11, 2011 at 07:05:54PM -0800, Andrew Francis wrote:
> Hi Folks:
>
> I don't know what to file this under but here goes:
>
> Santa repeatedly sleeps until wakened by either all of his nine
> reindeer, back from their holidays, or by a group of three of his ten
> elves. If awakened by the reindeer, he harnesses each of them to his
> sleigh, delivers toys with them and finally unharnesses them (allowing
> them to go off on holiday). If awakened by a group of elves, he shows
> each of the group into his study, consults with them on toy R&D and
> finally shows them each out (allowing them to go back to work). Santa
> should give priority to the reindeer in the case that there is both a
> group of elves and a group of reindeer waiting
>
>
I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.
>
>
> The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.? I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is:?
> def santa(reindeer, elves):
> ??? joinObject =
stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
> ????????????????????????????????? addPattern([ch for _, ch, _ in elves],3)
>
> ??? reindeerPattern, elfPattern = joinObject.patterns
>
> ??? while True:
> ??????? pattern = joinObject.join()
> ??????? if reindeerPattern.ready():
> ??????????? print "*** REINDEER GET PRIORITY ***"
> ??????????? reindeerPattern.join()
> ??????????? pattern = reindeerPattern
> ??????? if
pattern is reindeerPattern:
> ??????????? harness(reindeerPattern)
> ??????????? deliveryToys(reindeerPattern)
> ??????????? unharness(reindeerPattern)
> ??????? elif pattern is elfPattern:
> ??????????? consultWithSanta(elfPattern)
>
> ??? stopTwisted()
>
> In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used).
>
> def tick(seconds):
> ??? tickCh = stackless.channel()
> ??? reactor.callLater(seconds, tickCh.send, None)
> ??? tickCh.receive()
>
> However I could just as easily make
reindeer and elves web services or RestFull interfaces. I am still working on the? Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.
>
> Cheers,
> Andrew

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Tue Dec 13 22:24:14 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 13 Dec 2011 22:24:14 -0500
Subject: [Twisted-Python] Autobahn WebSockets 0.4.10
In-Reply-To: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7379DBFE-16C8-4BA4-A71E-DAE64D3C1C7F@twistedmatrix.com>

On Dec 13, 2011, at 11:58 AM, Tobias Oberstein wrote:

> Hi,
> 
> Autobahn WebSockets 0.4.10 is done:
> 
> + various improvements to RPC / PubSub
> + RFC 6455 support
> + kqueue support on BSD
> + various smaller issues fixed
> + demos updated, docs improved
> 
> Special thanks to Peter Thorson for RFC6455 changes and test cases.
> 
> Cheers,
> Tobias
> 
> Project Link:  http://www.tavendo.de/autobahn
> Package:  http://pypi.python.org/pypi/autobahn
> Docs: http://www.tavendo.de/autobahn/doc/python/index.html
> Source: https://github.com/oberstet/Autobahn

Congratulations on another release, and thanks again for choosing Twisted for your network infrastructure :).

-glyph



From glyph at twistedmatrix.com  Tue Dec 13 23:45:54 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 13 Dec 2011 23:45:54 -0500
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
In-Reply-To: <1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
	<20111213041530.GB11352@laptop.huang.net>
	<1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
Message-ID: <F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>

On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:

> Now at time T, there are eight reindeer and two elves ready. At T+1, an additional  reindeer and elf are ready (their timestamps are the same, timer resolution notwithstanding). However the Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from inside the callback, one could check to see if nine reindeer were indeed ready.

This strikes me as a problem with the way that quantum physics works more than the way that Twisted's reactor works :).  Broadly speaking, no two events can happen at the exact same time; even if they did, relativity says you wouldn't be able to tell if they happened at the exact same time unless they also happened to be exactly the same distance away from you.  (But then "you" would have to be exactly one atom big, which is a pretty demanding size to build a sensor.)

Even if it were possible in reality, once a network gets involved, you have a bunch of additional bits of technology serializing everything.  If your computer has one ethernet card, the reindeer and the elves have to report their readiness either in separate ethernet frames in one order or the other, or in one order or another within the same ethernet frame.  (If it has two ethernet cards, you still only have one PCI bus, et cetera.)

Despite the fundamentally sequential nature of reality, Twisted reactor's scheduling mechanism does leave some things to be desired; the quantum time-slice of Twisted is effectively one reactor iteration, and there aren't really any tools for working with those.  There's some latency between becoming aware of some work that needs to be done (select(), or your chosen multiplexor, returning) and actually doing the work (calling doRead, doWrite, or your timed event), but you don't get to decide on priorities once Twisted's aware of the work; they're executed in a quasi-arbitrary order.

Ultimately however, the order of the work will be arbitrary; if it's not influenced by the vagaries of Twisted's scheduler, it will be influenced by something in the kernel scheduler that you don't understand or can't control, or in the IP stack, or in a switch on your network, or in your hosting provider's firewall configuration, or something on a client machine that you truly have no influence over at all.  Having something give priority to an event that occurs at "the same" time given all of these potential sources of interference is basically pointless.

The only reason that the Santa problem, expressed as a thread-synchronization problem, has to deal with "simultaneous" arrival of 9 reindeer and 3 elves is a quirk of thread scheduling: the Santa thread can be ready to run but not running.  When the final reindeer arrives, a final elf may arrive before the scheduler decides it's time to give Santa a chance to run, and then Santa has the opportunity to make the choice between the two.  In an event-driven system, this state doesn't naturally exist: when you call Deferred.callback(), the callback runs the relevant application code immediately.

Even in a preemptively threaded system though, the notion of simultaneity is pretty arbitrary; you don't get much control over how long Santa will be left in the ready-to-run-but-not-running state.  If you really care about Santa giving priority to the reindeer, then the system requires another input: how long should Santa sleep after the elves become ready, before deciding to go with the elves rather than the reindeer?  Effectively in a threaded system Santa is sleeping, just for a very small and not configurable amount of time.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111213/ef77e3c1/attachment.htm 

From johann.borck at densedata.com  Wed Dec 14 10:31:11 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 14 Dec 2011 16:31:11 +0100
Subject: [Twisted-Python] How to Solve a Problem Like Santa
 with	Stackless and Twisted
In-Reply-To: <F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>	<20111213041530.GB11352@laptop.huang.net>	<1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
	<F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>
Message-ID: <4EE8C13F.4020405@densedata.com>

On 12/14/2011 05:45 AM, Glyph wrote:
> On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:
>
>> Now at time T, there are eight reindeer and two elves ready. At T+1, an additional  reindeer and 
>> elf are ready (their timestamps are the same, timer resolution notwithstanding). However the 
>> Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend 
>> the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The 
>> problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from 
>> inside the callback, one could check to see if nine reindeer were indeed ready.
>
> This strikes me as a problem with the way that quantum physics works more than the way that 
> Twisted's reactor works :).  Broadly speaking, no two events can happen at the /exact/ same time; 
> even if they did, relativity says you wouldn't be able to /tell/ if they happened at the exact 
> same time unless they also happened to be exactly the same distance away from you.  (But then 
> "you" would have to be exactly one atom big, which is a pretty demanding size to build a sensor.)
> [...]
> Ultimately however, the order of the work /will/ be arbitrary; if it's not influenced by the 
> vagaries of Twisted's scheduler, it will be influenced by something in the kernel scheduler that 
> you don't understand or can't control, or in the IP stack, or in a switch on your network, or in 
> your hosting provider's firewall configuration, or something on a client machine that you truly 
> have no influence over at all.  Having something give priority to an event that occurs at "the 
> same" time given all of these potential sources of interference is basically pointless.
>
Isn't that  what logical clocks, using e.g. Lamport timestamps are for? What can be done is letting 
the events happen, wait for another logical tick, possibly triggered by a timeout to prevent 
starvation, looking at the events that have been collected and identified, but not processed yet, 
treating a certain maximum N of logical ticks as "simultaneous" and then decide on how to prioritize 
processing, based on arbitrary rules you choose.

regards,
Johann
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111214/167d6bed/attachment-0001.htm 

From andrewfr_ice at yahoo.com  Wed Dec 14 14:24:21 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 14 Dec 2011 11:24:21 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
In-Reply-To: <mailman.8295.1323876685.5291.twisted-python@twistedmatrix.com>
References: <mailman.8295.1323876685.5291.twisted-python@twistedmatrix.com>
Message-ID: <1323890661.38843.YahooMailNeo@web120705.mail.ne1.yahoo.com>

Hi Glyph:

Message: 3
Date: Tue, 13 Dec 2011 23:45:54 -0500
From: Glyph <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with
??? Stackless and Twisted
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <F1901420-DAD9-4879-8E65-CAFC123BACA4 at twistedmatrix.com>
Content-Type: text/plain; charset="iso-8859-1"

On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:

Hi Glyph:

G>The only reason that the 
Santa problem, expressed as a thread-synchronization problem, has to 
deal with G>"simultaneous" arrival of 9 reindeer and 3 elves is a quirk of
 thread scheduling: the Santa thread can be ready to run G>but not 
running.? When the final reindeer arrives, a final elf may arrive before
 the scheduler decides it's time to give G>Santa a chance to run, and then
 Santa has the opportunity to make the choice between the two. 

I agree: it is the scheduler that introduces quirks. Not that it matters but the important edge case is when three elves have arrived. Santa is awoken and placed on the queue. However additional reindeer have arrived bringing the count to nine. So when Santa runs, both the group of nine reindeer and group of three elves are ready. Hence the need for Santa to check when he is awake. In reality, I have to leave the programme running for a? long time to see this happen.

G>In an 
event-driven system, this state doesn't naturally exist: when you call 
Deferred.callback(), the callback runs the G>relevant application code 
immediately.

In regards to Stackless, if I wanted to greatly simplify the problem, I would immediately schedule Santa once reindeer or a group of elves were ready. This is what Twisted is doing. Perhaps in a real-life case, this would be the correct action since it is obvious that Santa is a high priority task. However I am trying to be true to the original problem. Also a good solution should not depend on scheduling tricks.

Otherwise Twisted with deferred lists would otherwise be pretty effective. Again the secret sauce is that deferred lists are a join pattern of sorts. The component is that Twisted is essentially a non-preemptive first come first served scheduler. This behaviour also simplifies the problem.

G>Despite
 the fundamentally sequential nature of reality, 

Maybe this is the reality of computers based on von Neuman architecture. However reality is fundamentally concurrent.

G>Twisted reactor's 
scheduling mechanism does leave somethings to be desired; the quantum 
time-slice of Twisted is G>effectively one reactor iteration, and there 
aren't really any tools for working with those.? There's some latency 
G>between becoming aware of some work that needs to be done (select(), or 
your chosen multiplexor, returning) and G>actually doing the work (calling
 doRead, doWrite, or your timed event), but you don't get to decide on 
priorities once G>Twisted's aware of the work; they're executed in a 
quasi-arbitrary order.

I feel a Twisted callback and a Stackless tasklet in non-preemptive mode suffer from a bigger problem: one does not know how long the code fragment will execute. The programmer is betting that the CPU slice will be relatively short. An additional assumption is that all tasklets/callbacks are created equally (actually in Stackless, one can use preferences to give some tasklets a limited priority). I feel the reason we have sophisticated schedulers is when throughput and fairness are a big deal. 

G>Ultimately however, the order of the work 
will be arbitrary; if it's not influenced by the vagaries of Twisted's 
scheduler, G>it will be influenced by something in the kernel scheduler 
that you don't understand or can't control, or in the IP stack, G>or in a 
switch on your network, or in your hosting provider's firewall 
configuration, or something on a client machine G>that you truly have no 
influence over at all.? Having something give priority to an event that 
occurs at "the same" G>time given all of these potential sources of 
interference is basically pointless.

I am not an expect in real-time systems. However I would argue that at a pragmatic level,? timestamps have to be of a resolution that allows the application to make reasonable decisions. So if the application is measuring time in seconds to say two decimal places, as far as the application is concerned, it can have a reindeer and elf arriving at the same time if they have the same timestamps.? 

Perhaps my original example leaves something to be desired. However my point still remains. If we constructed a schedule so that the ninth reindeer always arrived at T+11 seconds and three elves always arrived at T+9, T+10, and T+11 seconds, it would be a coin toss in Twisted as to whether reindeer or elves were serviced. Rather than a reindeer being in a queue, in Twisted, its file descriptor would be in a reader set. All I can say is that a Twisted solution would be unbiased (or biased towards elves if there we are playing with 10 of them). When the problem requires it is biased towards reindeer. If one had a burning desire, we could construct cases to measure if there was a bias.

Cheers,
Andrew



From augustocaringi at gmail.com  Wed Dec 14 15:34:45 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 14 Dec 2011 18:34:45 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
Message-ID: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>

On Sun, Dec 11, 2011 at 5:11 PM,  <exarkun at twistedmatrix.com> wrote:
> On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>>
>> On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>>>>
>>>> ? ? What's the best solution? Apply the patch attached on this ticket,
>>>> moving to a producer/consumer approach, or any other idea?
>>>
>>>
>>> The patch will just delay the problem... you're creating a huge number of
>>> strings, faster than the transport can write them out. The solution is
>>> indeed to use the consumer API to pause creation of more data until the
>>> transport clears its buffers.
>>
>>
>> Right, I will try with the consumer API.
>>
>> But I have one last question:
>>
>> In my previous example, the memory usage grows until a MemoryError
>> exception.
>>
>> But other scenario is when my "event send loop" iterates a high number
>> of times (but not enough to raise a exception) and then stops.
>>
>> I expected that when the loop ends, all the strings would be flushed
>> and as a consequence, the memory usage of the process would return to
>> a normal level. But this does not happen... It's normal?
>
>
> Data may or may not be put onto the network as you are directing a transport
> to write it. ?It's up to the particular transport implementation to decide
> on buffering logic, including logic about whether data is sent immediately
> when a write() call is, or only later after control returns to the event
> loop.
>
> As of Twisted 11.1, the posix-based reactor implementations all buffer data
> until control is returned to the event loop. ?This has been the case for
> some time, but not _all_ time, and it may change in the future.
>
> Jean-Paul

Hi!

I understand...

But I'm not convinced.

I found this post on Stackoverflow:
http://stackoverflow.com/questions/4078084/memory-leak-in-python-twisted-where-is-it

The problem that I am facing is the same.

Under heavy load my Twisted based server "leaks memory". Under normal
load its all ok.

Explaining better: Under heavy load the memory usage grows, but when
the load returns to a normal level, the memory usage remains high.

I forgot to say in the previous emails, but the communication is done over SSL.

I'm not a Python specialist, I am a C engineer... But I'm trying to
find out where is the problem with tools like Heapy, meliae, etc.

Meliae gave me this report:

Total 62008 objects, 126 types, Total size = 86.2MiB (90437121 bytes)
 Index   Count   %      Size   % Cum     Max Kind
     0   39061  62  87827505  97  9753120905 str
     1    1682   2    896912   0  98  393352 dict
     2   10067  16    382028   0  98     224 tuple
     3     164   0    246656   0  98    6304 module
     4     422   0    183992   0  99     436 type
     5    2504   4    170272   0  99      68 code

As expected... The problem are the strings that are never freed.

So I tried to tracking this strings, and this let me to this:

>>> om[3082188716]
TLSConnection(3082188716 548B 35refs 38par)

>>> om[3082188716].c
[str(3082713312 39B 8par '_tempDataBuffer'), list(3082225612 112704B
26680refs 1par), str(3086791008 30B 54par 'fileno'),
instancemethod(3084243748 36B 3refs 1par), str(3084439680 32B 58par
'protocol'), Provider(3082216172 552B 23refs 4par), str(3084439648 31B
100par 'reactor'), SelectReactor(3082464620 548B 43refs 21par),
str(3082712592 37B 6par '_userWantRead'), bool(40623276 12B 94par
'True'), str(3082713272 34B 8par 'dataBuffer'), str(2917687304
53120905B 1par 'ype: Test\nDate: 2011-12-14
16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
application/json\n\n{\n '), str(3082831376 36B 6par '_tempDataLen'),
int(165862528 12B 1par 33109881), str(3082714752 35B 6par
'realAddress'), tuple(3082165324 32B 2refs 1par), str(3084479288 33B
29par 'connector'), Connector(3082188684 552B 21refs 1par),
str(3082724352 30B 9par 'logstr'), str(3082181232 39B 1par
'Provider,client'), str(3082723680 27B 5par 'TLS'), int(164303008 12B
100par 1), str(3084439744 30B 80par 'socket'), Connection(3082208356
40B 3refs 1par), str(3084506080 33B 33par 'connected'), int(164303008
12B 100par 1), str(3087080928 30B 10par 'offset'), int(167915152 12B
1par 11436032), str(3082712632 38B 6par '_userWantWrite'),
bool(40623276 12B 94par 'True'), str(3082685960 34B 8par
'ctxFactory'), ClientContextFactory(3082188652 168B 1refs 2par),
str(3086955200 28B 38par 'addr'), tuple(3082649516 32B 2refs 1par),
<ex-reference>(0 0B)]

Thanks and sorry for the insistence.

-- 
Augusto Mecking Caringi


From andrew at bemusement.org  Wed Dec 14 18:49:52 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 15 Dec 2011 10:49:52 +1100
Subject: [Twisted-Python] MemoryError in
 twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
Message-ID: <20111214234952.GC14392@flay.puzzling.org>

Augusto Mecking Caringi wrote:
> >>> om[3082188716].c
[?]
> str(2917687304
> 53120905B 1par 'ype: Test\nDate: 2011-12-14
> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
> application/json\n\n{\n ')

So it appears you have 53 megabyte string that's referenced from your TLS
connection, presumably in a buffer of data waiting to be sent?  At the moment
this memory analysis was captured, do you know how much of this data the client
has received?

Also, how was this data passed to the transport ? in one big 53MB write call, or
via many smaller calls, or via a pull producer, or??

This looks like an HTTP-like protocol, so possibly there's a library between
your code and the transport that means you don't know the direct answer to that
question.  But whatever details you can give about how you are passing the data
you generate to the connection will help locate the problem, I think.

-Andrew.



From exarkun at twistedmatrix.com  Wed Dec 14 18:52:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Dec 2011 23:52:56 -0000
Subject: [Twisted-Python] MemoryError
	in	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
Message-ID: <20111214235256.1828.887704569.divmod.xquotient.280@localhost.localdomain>

On 08:34 pm, augustocaringi at gmail.com wrote:
>On Sun, Dec 11, 2011 at 5:11 PM,  <exarkun at twistedmatrix.com> wrote:
>>On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>>>
>>>On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
>>><itamar at itamarst.org> wrote:
>>>>>
>>>>>? ? What's the best solution? Apply the patch attached on this 
>>>>>ticket,
>>>>>moving to a producer/consumer approach, or any other idea?
>>>>
>>>>
>>>>The patch will just delay the problem... you're creating a huge 
>>>>number of
>>>>strings, faster than the transport can write them out. The solution 
>>>>is
>>>>indeed to use the consumer API to pause creation of more data until 
>>>>the
>>>>transport clears its buffers.
>>>
>>>
>>>Right, I will try with the consumer API.
>>>
>>>But I have one last question:
>>>
>>>In my previous example, the memory usage grows until a MemoryError
>>>exception.
>>>
>>>But other scenario is when my "event send loop" iterates a high 
>>>number
>>>of times (but not enough to raise a exception) and then stops.
>>>
>>>I expected that when the loop ends, all the strings would be flushed
>>>and as a consequence, the memory usage of the process would return to
>>>a normal level. But this does not happen... It's normal?
>>
>>
>>Data may or may not be put onto the network as you are directing a 
>>transport
>>to write it. ?It's up to the particular transport implementation to 
>>decide
>>on buffering logic, including logic about whether data is sent 
>>immediately
>>when a write() call is, or only later after control returns to the 
>>event
>>loop.
>>
>>As of Twisted 11.1, the posix-based reactor implementations all buffer 
>>data
>>until control is returned to the event loop. ?This has been the case 
>>for
>>some time, but not _all_ time, and it may change in the future.
>>
>>Jean-Paul
>
>Hi!
>
>I understand...
>
>But I'm not convinced.
>
>I found this post on Stackoverflow:
>http://stackoverflow.com/questions/4078084/memory-leak-in-python- 
>twisted-where-is-it
>
>The problem that I am facing is the same.
>
>Under heavy load my Twisted based server "leaks memory". Under normal
>load its all ok.
>
>Explaining better: Under heavy load the memory usage grows, but when
>the load returns to a normal level, the memory usage remains high.

This is basically typical.  I won't guarantee that your program isn't 
*leaking* memory, but it sounds like you're just observing the "high 
water mark" behavior of the CPython runtime (and to a lesser extend of 
glibc).  Allocate memory is frequently not released to the platform when 
it is no longer in use, because fragmentation has happened that makes 
this impractical.

Can you clarify if this is what you're seeing, or if you do see memory 
usage continue to rise without bound (under a bounded load)?

Jean-Paul
>I forgot to say in the previous emails, but the communication is done 
>over SSL.
>
>I'm not a Python specialist, I am a C engineer... But I'm trying to
>find out where is the problem with tools like Heapy, meliae, etc.
>
>Meliae gave me this report:
>
>Total 62008 objects, 126 types, Total size = 86.2MiB (90437121 bytes)
>Index   Count   %      Size   % Cum     Max Kind
>     0   39061  62  87827505  97  9753120905 str
>     1    1682   2    896912   0  98  393352 dict
>     2   10067  16    382028   0  98     224 tuple
>     3     164   0    246656   0  98    6304 module
>     4     422   0    183992   0  99     436 type
>     5    2504   4    170272   0  99      68 code
>
>As expected... The problem are the strings that are never freed.
>
>So I tried to tracking this strings, and this let me to this:
>>>>om[3082188716]
>TLSConnection(3082188716 548B 35refs 38par)
>>>>om[3082188716].c
>[str(3082713312 39B 8par '_tempDataBuffer'), list(3082225612 112704B
>26680refs 1par), str(3086791008 30B 54par 'fileno'),
>instancemethod(3084243748 36B 3refs 1par), str(3084439680 32B 58par
>'protocol'), Provider(3082216172 552B 23refs 4par), str(3084439648 31B
>100par 'reactor'), SelectReactor(3082464620 548B 43refs 21par),
>str(3082712592 37B 6par '_userWantRead'), bool(40623276 12B 94par
>'True'), str(3082713272 34B 8par 'dataBuffer'), str(2917687304
>53120905B 1par 'ype: Test\nDate: 2011-12-14
>16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>application/json\n\n{\n '), str(3082831376 36B 6par '_tempDataLen'),
>int(165862528 12B 1par 33109881), str(3082714752 35B 6par
>'realAddress'), tuple(3082165324 32B 2refs 1par), str(3084479288 33B
>29par 'connector'), Connector(3082188684 552B 21refs 1par),
>str(3082724352 30B 9par 'logstr'), str(3082181232 39B 1par
>'Provider,client'), str(3082723680 27B 5par 'TLS'), int(164303008 12B
>100par 1), str(3084439744 30B 80par 'socket'), Connection(3082208356
>40B 3refs 1par), str(3084506080 33B 33par 'connected'), int(164303008
>12B 100par 1), str(3087080928 30B 10par 'offset'), int(167915152 12B
>1par 11436032), str(3082712632 38B 6par '_userWantWrite'),
>bool(40623276 12B 94par 'True'), str(3082685960 34B 8par
>'ctxFactory'), ClientContextFactory(3082188652 168B 1refs 2par),
>str(3086955200 28B 38par 'addr'), tuple(3082649516 32B 2refs 1par),
><ex-reference>(0 0B)]
>
>Thanks and sorry for the insistence.
>
>--
>Augusto Mecking Caringi
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From augustocaringi at gmail.com  Wed Dec 14 19:38:34 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 14 Dec 2011 22:38:34 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <20111214234952.GC14392@flay.puzzling.org>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
	<20111214234952.GC14392@flay.puzzling.org>
Message-ID: <CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>

On Wed, Dec 14, 2011 at 9:49 PM, Andrew Bennetts <andrew at bemusement.org> wrote:
> Augusto Mecking Caringi wrote:
>> >>> om[3082188716].c
> [?]
>> str(2917687304
>> 53120905B 1par 'ype: Test\nDate: 2011-12-14
>> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>> application/json\n\n{\n ')
>
> So it appears you have 53 megabyte string that's referenced from your TLS
> connection, presumably in a buffer of data waiting to be sent? ?At the moment
> this memory analysis was captured, do you know how much of this data the client
> has received?

Yes... I have a 53MB string referenced in my TLS connection, but *all*
the data has already been sent.

At the moment that this memory was captured all the data has been sent.

> Also, how was this data passed to the transport ? in one big 53MB write call, or
> via many smaller calls, or via a pull producer, or??

Via many smaller calls. One call for each event, in a code like that
(running in a thread):

def stressTestTask():
    time.sleep(1)
    c = provider_reference
    for i in range(1000000):
        event = c.createTestEvent()
        reactor.callFromThread(c.transport.write, event)

I have two components in my system: the server and the provider, both
of them written in Python/Twisted. This capture was from a "stress
test provider" that send hundreds of thousands of events to the server
without any "sleep". And I captured this memory analysis after the
server has received all the data.

> This looks like an HTTP-like protocol, so possibly there's a library between
> your code and the transport that means you don't know the direct answer to that
> question. ?But whatever details you can give about how you are passing the data
> you generate to the connection will help locate the problem, I think.

Yes, this a HTTP-like protocol, but there is no library, the protocol
was designed by me.

Thanks.

-- 
Augusto Mecking Caringi


From glyph at twistedmatrix.com  Thu Dec 15 06:52:59 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 15 Dec 2011 06:52:59 -0500
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
	<20111214234952.GC14392@flay.puzzling.org>
	<CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>
Message-ID: <05BDA144-972F-4BF3-A071-8D02959CFF2B@twistedmatrix.com>


On Dec 14, 2011, at 7:38 PM, Augusto Mecking Caringi wrote:

> On Wed, Dec 14, 2011 at 9:49 PM, Andrew Bennetts <andrew at bemusement.org> wrote:
>> Augusto Mecking Caringi wrote:
>>>>>> om[3082188716].c
>> [?]
>>> str(2917687304
>>> 53120905B 1par 'ype: Test\nDate: 2011-12-14
>>> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>>> application/json\n\n{\n ')
>> 
>> So it appears you have 53 megabyte string that's referenced from your TLS
>> connection, presumably in a buffer of data waiting to be sent?  At the moment
>> this memory analysis was captured, do you know how much of this data the client
>> has received?
> 
> Yes... I have a 53MB string referenced in my TLS connection, but *all*
> the data has already been sent.
> 
> At the moment that this memory was captured all the data has been sent.
> 
>> Also, how was this data passed to the transport ? in one big 53MB write call, or
>> via many smaller calls, or via a pull producer, or??
> 
> Via many smaller calls. One call for each event, in a code like that
> (running in a thread):
> 
> def stressTestTask():
>    time.sleep(1)
>    c = provider_reference
>    for i in range(1000000):
>        event = c.createTestEvent()
>        reactor.callFromThread(c.transport.write, event)
> 
> I have two components in my system: the server and the provider, both
> of them written in Python/Twisted. This capture was from a "stress
> test provider" that send hundreds of thousands of events to the server
> without any "sleep". And I captured this memory analysis after the
> server has received all the data.
> 
>> This looks like an HTTP-like protocol, so possibly there's a library between
>> your code and the transport that means you don't know the direct answer to that
>> question.  But whatever details you can give about how you are passing the data
>> you generate to the connection will help locate the problem, I think.
> 
> Yes, this a HTTP-like protocol, but there is no library, the protocol
> was designed by me.
> 
> Thanks.

If everything you've said here is accurate, this is definitely a bug in Twisted.  It would be really valuable if you could boil down your example to be as minimal as possible - ideally a unit test, but failing that, a script which could be trivially run to leak an arbitrary amount of memory would be almost as good.

Does your callFromThread(c.transport.write, ...) code reliably trigger this error when talking to a very simple protocol, like an Echo or Discard protocol?

Thanks a lot for helping us track this down,

-glyph



From a.peta at icsc.it  Fri Dec 16 07:20:12 2011
From: a.peta at icsc.it (PETA Antonio Silvio)
Date: Fri, 16 Dec 2011 12:20:12 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <E4DAD5F102FD8444BAF24E8A9E5E46F436373F@V000EX01.ICSC.LOCAL>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111216/0064c021/attachment.htm 

From exarkun at twistedmatrix.com  Sun Dec 18 00:05:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Dec 2011 05:05:41 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1324184741.17.302424732@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111218/afd1336d/attachment.htm 

From alex.kirp at gmail.com  Tue Dec 20 13:24:24 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Tue, 20 Dec 2011 23:24:24 +0500
Subject: [Twisted-Python] deferred generators in inline callbacks
Message-ID: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>

Hi.

I have a question about inline callbacks usage.

Let's assume I have an iterator that works synchronously. I want to
wrap this generator to work asynchronously in threads:

def some_generator():
    cursor = make_iterator() # cursor's 'next' method uses some nasty
blocking I/O
    while 1:
        yield deferToThread(cursor.next)


Next, I want to asynchronously iterate over this generator in
inlineCallbacks semantics. I should say:

@inlineCallbacks
def do_stuff():
    for item in some_generator():
        try:
            real_item = yield item
            # do stuff with real_item
        except StopIteration:
            break


It somewhat annoys me that I should always convert item to real_item
so inlineCallbacks can properly asynchronize my code. I also need to
implement StopIteration myself :(
Is there any easier way to do this in Twisted?

Thanks in advance!

-- 
Alex


From exarkun at twistedmatrix.com  Tue Dec 20 14:14:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 20 Dec 2011 19:14:10 -0000
Subject: [Twisted-Python] deferred generators in inline callbacks
In-Reply-To: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>
References: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>
Message-ID: <20111220191410.2164.1501005671.divmod.xquotient.42@localhost.localdomain>

On 06:24 pm, alex.kirp at gmail.com wrote:
>Hi.
>
>I have a question about inline callbacks usage.
>
>Let's assume I have an iterator that works synchronously. I want to
>wrap this generator to work asynchronously in threads:
>
>def some_generator():
>    cursor = make_iterator() # cursor's 'next' method uses some nasty
>blocking I/O
>    while 1:
>        yield deferToThread(cursor.next)
>
>
>Next, I want to asynchronously iterate over this generator in
>inlineCallbacks semantics. I should say:
>
>@inlineCallbacks
>def do_stuff():
>    for item in some_generator():
>        try:
>            real_item = yield item
>            # do stuff with real_item
>        except StopIteration:
>            break
>
>
>It somewhat annoys me that I should always convert item to real_item
>so inlineCallbacks can properly asynchronize my code. I also need to
>implement StopIteration myself :(
>Is there any easier way to do this in Twisted?

You're basically looking for coroutines - ie, context switching across 
multiple stack frames (from inside some_generator through do_stuff out 
to the implementation of inlineCallbacks).

There are several coroutine libraries for Python.  Greenlets is probably 
the most popular.  You can use it with Twisted, if you want.

Personally, I'd probably go for something more like:

    def worker(item):
        # do stuff with item

    hook_up(some_generator(), worker)

with some kind of hook_up that does the parts of this task that you're 
tired of repeating over and over again (like turning item into 
real_item).

The result doesn't require figuring out how your coroutines are 
affecting control flow and probably gives you something more composable 
too.

Jean-Paul


From bob.novas at shinkuro.com  Tue Dec 20 17:02:00 2011
From: bob.novas at shinkuro.com (Bob Novas)
Date: Tue, 20 Dec 2011 17:02:00 -0500
Subject: [Twisted-Python] [Twisted] #5437: sys.settrace(None) in
	process.py raises RuntimeError in debugger
In-Reply-To: <059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
References: <050.9bfaa2744aa685b5891ca2b557587aac@twistedmatrix.com>
	<059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
Message-ID: <001001ccbf63$00042180$000c6480$@shinkuro.com>

Well, what wing's debugger does is to raise RuntimeError, and NOT CONTINUE
to execute that path. So the child never runs. That's bad!  What more can I
say?  I have to comment out that line every time I run on a new installation
if I want to debug in linux (Windows doesn't go down that code path).  Bob

> -----Original Message-----
> From: Twisted [mailto:trac at twistedmatrix.com]
> Sent: Tuesday, December 20, 2011 4:40 PM
> Subject: Re: [Twisted] #5437: sys.settrace(None) in process.py raises
> RuntimeError in debugger
> 
> #5437: sys.settrace(None) in process.py raises RuntimeError in debugger
> --------------------------+---------------------------------------------
> --------------------------+----
>      Reporter:  BobNovas  |           Owner:  BobNovas
>          Type:  defect    |          Status:  new
>      Priority:  normal    |       Milestone:
>     Component:  core      |        Keywords:  settrace, process
>        Branch:            |   Branch_author:
> Launchpad_bug:            |
> --------------------------+---------------------------------------------
> --------------------------+----
> Changes (by exarkun):
> 
>   * owner:  => BobNovas
>   * milestone:  regular-releases =>
>   * branch_author:  BobNovas =>
> 
> 
> Comment:
> 
>  The ''regular-releases'' milestone is for release automation.  The
''author'' field
> is for svn branch authorship.  I've unset these two  fields.
> 
>  I'm think the intent of the `sys.settrace(None)` call is to disable
debuggers.  It
> does this because there's very little left to do before the  Python
process is going
> to be replaced by a new process (which will not be  debuggable using the
trace
> hook) and because there are two different  Python processes being debugged
at
> that point in the code, because of the  `os.fork` call which has succeeded
just
> beforehand.
> 
>  Does Wing have some way to meaningfully debug two processes
> simultaneously, where the second is created using `os.fork` in the first?
>  If not, then there's no use in removing the `sys.settrace(None)`, because
it will
> just break in some other way.
> 
>  I have very little experience with Wing's debugger, so I don't know what
it's
> possible to do in this case.  I'm also not really sure what a Wing
debugger user
> (ie you :) expect to happen.
> 
>  Can you shed some more light on this?  Thanks.
> 
> --
> Ticket URL: <http://twistedmatrix.com/trac/ticket/5437#comment:1>
> Twisted <http://twistedmatrix.com/trac/> Engine of your Internet



From andrewfr_ice at yahoo.com  Wed Dec 21 13:06:16 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 21 Dec 2011 10:06:16 -0800 (PST)
Subject: [Twisted-Python] deferred generators in inline callbacks
References: <mailman.1.1324486801.22996.twisted-python@twistedmatrix.com> 
Message-ID: <1324490776.63637.YahooMailNeo@web120705.mail.ne1.yahoo.com>

Message: 2
Date: Tue, 20 Dec 2011 19:14:10 -0000
From: exarkun at twistedmatrix.com
Subject: Re: [Twisted-Python] deferred generators in inline callbacks
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
??? <20111220191410.2164.1501005671.divmod.xquotient.42 at localhost.localdomain>
??? 
Content-Type: text/plain;
 charset="utf-8"; format="flowed"

On 06:24 pm, alex.kirp at gmail.com wrote:

A>Hi.
A>
A>I have a question about inline callbacks usage.

E>You're basically looking for coroutines - ie, context switching across 
E>multiple stack frames (from inside some_generator through do_stuff out 
E>to the implementation of inlineCallbacks).

E>There are several coroutine libraries for Python.? Greenlets is probably 
E>the most popular.? You can use it with Twisted, if you want.


I believe Christopher Armstrong? a long time ago had corotwine. However if you download the greenlet package and stackless.py, it is not hard to make them interoperate with Twisted. Here is a recent example of how I use them: http://wp.me/pdqoq-3Y

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111221/a3d4bd74/attachment.htm 

From glyph at twistedmatrix.com  Wed Dec 21 13:55:32 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 21 Dec 2011 13:55:32 -0500
Subject: [Twisted-Python] [Twisted] #5437: sys.settrace(None) in
	process.py raises RuntimeError in debugger
In-Reply-To: <001001ccbf63$00042180$000c6480$@shinkuro.com>
References: <050.9bfaa2744aa685b5891ca2b557587aac@twistedmatrix.com>
	<059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
	<001001ccbf63$00042180$000c6480$@shinkuro.com>
Message-ID: <B81B37F1-9A5D-49D8-AAAC-675E29933F64@twistedmatrix.com>


On Dec 20, 2011, at 5:02 PM, Bob Novas wrote:

> Well, what wing's debugger does is to raise RuntimeError, and NOT CONTINUE
> to execute that path. So the child never runs. That's bad!  What more can I
> say?  I have to comment out that line every time I run on a new installation
> if I want to debug in linux (Windows doesn't go down that code path).

Sounds like a bug that Wing should really fix, then!

Can you perhaps point some of Wing's developers at <http://twistedmatrix.com/trac/ticket/5437#comment:1> and have them illuminate the situation?  I expect it might be more useful to hear from a paying customer than from some random people on the internet ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111221/716624ae/attachment.htm 

From bino at indoakses-online.com  Wed Dec 21 23:52:32 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 22 Dec 2011 11:52:32 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
Message-ID: <4EF2B790.1060706@indoakses-online.com>

Dear All ..

A year ago, I need send some defined message to a jabber conference.
The message content will depend on a "button-press".
My trick is to use ttyctrl (http://ttyctrl.sourceforge.net/).

So basicaly my "system" is builded from several parts:
1. TTYCTRL : I made some small python XMLRPC client script, that will 
send a msg to my local twisted server
2. Twisted server, contain :
a. an XMLRPC server
b. XMPP Client ... use to send msg to remote jabber conference room

I made a pastebin of that twisted script at : http://pastebin.com/iSRVZNwS

With that script the flow alway one-way only :
serial====>Twisted_XMLRPC--->Twisted_XMPP=====>Jaber

Now I need to do something different, since it's hard to find a Board 
with RS232 onboard.
I Need to replace TTYCTRL with Arduino MCU.
Arduino will Send serial data to my PC.
So I'll need my twisted to able to receive data via serial
There will also incoming XMPP msg from Jabber that will need to be send 
to arduino via Serial port.

so the flow will be like :
serial<====>Twisted_Serial<--->Twisted_XMPP<=====>Jaber


My question is, How to make :
1. twisted.internet.serial to send data via an instance of XMPP client ? and
2. my EchobotProtocol.onMessage (see pastebin), to write data to the 
same serial port used by Point#1 above.



Sincerely
-bino-




From ltaylor.volks at gmail.com  Thu Dec 22 01:12:58 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 21 Dec 2011 23:12:58 -0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
In-Reply-To: <4EF2B790.1060706@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
Message-ID: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>


On Dec 21, 2011, at 9:52 PM, bino oetomo wrote:

> Dear All ..
>
> A year ago, I need send some defined message to a jabber conference.
> The message content will depend on a "button-press".
> My trick is to use ttyctrl (http://ttyctrl.sourceforge.net/).
>
> So basicaly my "system" is builded from several parts:
> 1. TTYCTRL : I made some small python XMLRPC client script, that will
> send a msg to my local twisted server
> 2. Twisted server, contain :
> a. an XMLRPC server
> b. XMPP Client ... use to send msg to remote jabber conference room
>
> I made a pastebin of that twisted script at : http://pastebin.com/iSRVZNwS
>
> With that script the flow alway one-way only :
> serial====>Twisted_XMLRPC--->Twisted_XMPP=====>Jaber
>
> Now I need to do something different, since it's hard to find a Board
> with RS232 onboard.
> I Need to replace TTYCTRL with Arduino MCU.
> Arduino will Send serial data to my PC.
> So I'll need my twisted to able to receive data via serial
> There will also incoming XMPP msg from Jabber that will need to be  
> send
> to arduino via Serial port.
>
> so the flow will be like :
> serial<====>Twisted_Serial<--->Twisted_XMPP<=====>Jaber
>
>
> My question is, How to make :
> 1. twisted.internet.serial to send data via an instance of XMPP  
> client ? and
> 2. my EchobotProtocol.onMessage (see pastebin), to write data to the
> same serial port used by Point#1 above.
>


This is a relevant FAQ for this situation:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

More specifically:
1. Create a Protocol class for your SerialPort that will communicate  
with the Arduino. Instances of this class will have access to the  
serial transport and can write out to the serial port. Incoming  
messages from the Arduino will be handled by the dataReceived method  
of the protocol.

2. Give your EchoBotProtocol a reference to the SerialPort somehow  
(e.g. via init), and set a reference to the EchoBotProtocol on the  
SerialPort.

Here's a quick sketch:

# Basic line receiver protocol
class ArduinoReceiver(LineReceiver):
	def lineReceived(self, line):
		print "Line Received from Arduino"
		self.echobot.send('some xmpp message for which I do not know the  
format')

# Wire up the serial port and protocol...note there are more  
parameters to create the SerialPort (baudrate, etc.)
serial = SerialPort(ArduinoReceiver, '/dev/tty.usbserial', reactor)

# EchoBot gets a reference to the serialport
class EchoBotProtocol(MessageProtocol):
   	def __init__(self, serial, *args, **kwargs):
		self.serial = serial
		# Set a reference to self on the serial protocol
		self.serial.protocol.echobot = self
		MessageProtocol.__init__(self, *args, **kwargs)

	def onMessage(self, msg):
		self.serial.transport.write('some message\n')

echobot = EchoBotProtocol(serial)

...and an update to your pastebin that may be helpful for context: http://pastebin.com/2EJ22wXa



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111221/a9fdf72a/attachment.htm 

From bino at indoakses-online.com  Thu Dec 22 01:26:39 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 22 Dec 2011 13:26:39 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
In-Reply-To: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
Message-ID: <4EF2CD9F.5040107@indoakses-online.com>

Dear Lucas Taylor

Thankyou for your fast enlightment.

It's time for me to re-build my ejabberd turnkey linux

Sincerely
-bino-

On 12/22/2011 01:12 PM, Lucas Taylor wrote:
>
>
> This is a relevant FAQ for this situation:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>
>
> More specifically:
> 1. Create a Protocol class for your SerialPort that will communicate 
> with the Arduino. Instances of this class will have access to the 
> serial transport and can write out to the serial port. Incoming 
> messages from the Arduino will be handled by the dataReceived method 
> of the protocol.
>
> 2. Give your EchoBotProtocol a reference to the SerialPort somehow 
> (e.g. via init), and set a reference to the EchoBotProtocol on the 
> SerialPort.
>
> Here's a quick sketch:
>
> # Basic line receiver protocol
> class ArduinoReceiver(LineReceiver):
>     def lineReceived(self, line):
>         print "Line Received from Arduino"
>         self.echobot.send('some xmpp message for which I do not know 
> the format')
>
> # Wire up the serial port and protocol...note there are more 
> parameters to create the SerialPort (baudrate, etc.)
> serial = SerialPort(ArduinoReceiver, '/dev/tty.usbserial', reactor)
>
> # EchoBot gets a reference to the serialport
> class EchoBotProtocol(MessageProtocol):
>       def __init__(self, serial, *args, **kwargs):
>         self.serial = serial
>         # Set a reference to self on the serial protocol
>         self.serial.protocol.echobot = self
>         MessageProtocol.__init__(self, *args, **kwargs)
>
>     def onMessage(self, msg):
>         self.serial.transport.write('some message\n')
>
> echobot = EchoBotProtocol(serial)
>
> ...and an update to your pastebin that may be helpful for context: 
> http://pastebin.com/2EJ22wXa
>
>
>




From bino at indoakses-online.com  Thu Dec 22 21:50:31 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Fri, 23 Dec 2011 09:50:31 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP
	and	twisted.internet.serial
In-Reply-To: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
Message-ID: <4EF3EC77.50601@indoakses-online.com>

Dear Lucas
I realy appreciate your pastebin
On 12/22/2011 01:12 PM, Lucas Taylor wrote:
>
>
> ...and an update to your pastebin that may be helpful for context: 
> http://pastebin.com/2EJ22wXa
>
When I first try to adapt your script, there is error complaining about 
that "serial" have no "setParent" attribute/methode.
Next I found your enlightment at 
http://www.mentby.com/lucas-taylor/serialport-protocol-as-a-service.html

So here is my adaptation at http://pastebin.com/79qi3TfK

currently I just commented the line that send xmpp, I just want to make 
sure that the serial communication is working well.
When there ls line comming via serial line, the script just work as told :
---from the log file ----
2011-12-23 09:31:29+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:31+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:33+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:35+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:37+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:39+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:41+0700 [-] Line Received from Arduino:  This is arduino
-----------------------------

The problem is when there is msg coming from XMPP part
It's received by the xmpp client part, but script complaining about 
'SerialPort' object has no attribute 'transport'
I tried to send text from another xmppclient (pidgin)
---from the log file ----
2011-12-23 09:31:29+0700 [XmlStream,client] <<<<>>>>>>>
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] DDDDooooooohhhhh
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] <<<<>>>>>>>
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] Unhandled Error
------------------------------
----And the traceback is-------
       File "./mytac01.tac", line 42, in onMessage
         self.serial.transport.write('some message\n')
     exceptions.AttributeError: 'SerialPort' object has no attribute 
'transport'
--------------------------------------

----Line 42 is ----
self.serial.transport.write('some message\n')
---------------------

I tried to google with the error msg as keyword ... mostly about Serial 
port loosing connection.
In my case , the serial port still have it's connection ..... since the 
arduino msg still coming

Sincerely
-bino-


From exarkun at twistedmatrix.com  Thu Dec 22 21:57:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 23 Dec 2011 02:57:23 -0000
Subject: [Twisted-Python] Question : Combining wokel XMPP
	and	twisted.internet.serial
In-Reply-To: <4EF3EC77.50601@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
	<4EF3EC77.50601@indoakses-online.com>
Message-ID: <20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>

On 02:50 am, bino at indoakses-online.com wrote:
>[snip]
>The problem is when there is msg coming from XMPP part
>It's received by the xmpp client part, but script complaining about
>'SerialPort' object has no attribute 'transport'
>I tried to send text from another xmppclient (pidgin)

A SerialPort doesn't have a transport.  It is a transport.  Instead of:

    self.serial.transport.write(foo)

try

    self.serial.write(foo)

Jean-Paul


From bino at indoakses-online.com  Thu Dec 22 23:09:32 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Fri, 23 Dec 2011 11:09:32 +0700
Subject: [Twisted-Python] Question : Combining wokel
	XMPP	and	twisted.internet.serial
In-Reply-To: <20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
References: <4EF2B790.1060706@indoakses-online.com>	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>	<4EF3EC77.50601@indoakses-online.com>
	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
Message-ID: <4EF3FEFC.8060701@indoakses-online.com>

Dear Jean-Paul
Thankyou for your help.
On 12/23/2011 09:57 AM, exarkun at twistedmatrix.com wrote:
>
> A SerialPort doesn't have a transport.  It is a transport.  Instead of:
>
>      self.serial.transport.write(foo)
>
> try
>
>      self.serial.write(foo)
>

Here is my function (edited)
-------START-------
     def onMessage(self, msg):
         #Will just print the msg body to stdout
         self.writethis = msg.body
         print '<<<<>>>>>>>\n'
         print self.writethis
         print '\n<<<<>>>>>>>\n'
         # Send something to serial port
         #self.serial.transport.write('some message\n')
         self.serial.write(self.writethis)
----------------------

the "print self.writethis" do as told

but the "self.serial.write(self.writethis)" line raise an exceptions
----------START-------------
       File "./mytac01.tac", line 44, in onMessage
         self.serial.write(self.writethis)
       File 
"/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line 
191, in write
         self._tempDataLen += len(data)
     exceptions.TypeError: object of type 'Element' has no len()
--------------------------

Sincerely
-bino-

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From tim at commsecure.com.au  Thu Dec 22 23:15:29 2011
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 23 Dec 2011 15:15:29 +1100
Subject: [Twisted-Python] Question : Combining wokel XMPP	and
 twisted.internet.serial
In-Reply-To: <4EF3FEFC.8060701@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
	<4EF3EC77.50601@indoakses-online.com>
	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
	<4EF3FEFC.8060701@indoakses-online.com>
Message-ID: <20111223041528.GA1618@ws35.commsecure.com.au>

On Fri, Dec 23, 2011 at 11:09:32AM +0700, bino oetomo wrote:
> the "print self.writethis" do as told
> 
> but the "self.serial.write(self.writethis)" line raise an exceptions
> ----------START-------------
>        File "./mytac01.tac", line 44, in onMessage
>          self.serial.write(self.writethis)
>        File 
> "/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line 
> 191, in write
>          self._tempDataLen += len(data)
>      exceptions.TypeError: object of type 'Element' has no len()
> --------------------------

It looks like "self.writethis" is an Element, not a string. Python's
print statement will automatically call str() on things before it prints
them, but Twisted's .write() methods do not. You'll have to change your
code to something like this:

    self.serial.write(str(self.writethis))

Tim.


From exarkun at twistedmatrix.com  Sun Dec 25 00:05:31 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Dec 2011 05:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1324789531.99.402283342@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111225/f3a699fd/attachment.htm 

From bino at indoakses-online.com  Sun Dec 25 19:39:29 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Mon, 26 Dec 2011 07:39:29 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP	and
	twisted.internet.serial
In-Reply-To: <20111223041528.GA1618@ws35.commsecure.com.au>
References: <4EF2B790.1060706@indoakses-online.com>	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>	<4EF3EC77.50601@indoakses-online.com>	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>	<4EF3FEFC.8060701@indoakses-online.com>
	<20111223041528.GA1618@ws35.commsecure.com.au>
Message-ID: <4EF7C241.7050907@indoakses-online.com>

Dear Tim Allen and Jean-Paul
I realy appreciate your enlightment .. i try it and it works

Sincerely
-bino-
On 12/23/2011 11:15 AM, Tim Allen wrote:
> It looks like "self.writethis" is an Element, not a string. Python's
> print statement will automatically call str() on things before it prints
> them, but Twisted's .write() methods do not. You'll have to change your
> code to something like this:
>
>      self.serial.write(str(self.writethis))
>
> Tim.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From twisted at ralphm.ik.nu  Mon Dec 26 12:21:05 2011
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 Dec 2011 18:21:05 +0100
Subject: [Twisted-Python] Unknown constants
Message-ID: <4EF8AD01.8030404@ralphm.ik.nu>

Hi,

I've been looking into using twisted.python.constants for representing 
the status codes of the XMPP Multi-User Chat protocol [1]. I will have 
objects representing messages, of which one of the attributes is 
'mucStatuses', a set of status codes. This works out great for the 
initial set of available status codes. The protocol is parsed, and the 
status codes are represented by the ValueConstant instances returned by 
lookupByValue.

However, not all of the possible codes can be known up-front, as the 
protocol allows for registering new ones without changing the 
specification itself. Eventually, applications will receive status codes 
that are not (yet?) part of the set of defined constants in the 
implementation, and application developers (that do know about new 
codes) will want to handle these.

A possible remedy to would be to register new status codes from the 
application itself. My first try of just adding a new attribute to the 
class fails because they are not 'realized' as the _enumerants are cached.

I can imagine this also goes for unknown HTTP methods and HTTP status 
codes, used as examples in the documentation. Any suggestions on how to 
handle such unknown constants?


[1] <http://xmpp.org/extensions/xep-0045.html#statuscodes>

-- 
ralphm


From saghul at gmail.com  Tue Dec 27 07:01:44 2011
From: saghul at gmail.com (=?UTF-8?Q?Sa=C3=BAl_Ibarra_Corretg=C3=A9?=)
Date: Tue, 27 Dec 2011 13:01:44 +0100
Subject: [Twisted-Python] ConnectionMixin.loseConnection (in _newtls)
	lacking arguments
Message-ID: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>

Hi all,

I'm experiencing a TypeError exception in my code since I updated to
Twisted 11.1. After hunting it it seems to be caused because the
loseConnection function from (_newtls) lacks arguments.

If there is no OpenSSL support present in the system the
loseConnection function will be called in abstract.FileDescriptor
(please, correct me if I'm wrong), and the signature for
loseConnection is the following:

def loseConnection(self, _connDone=failure.Failure(main.CONNECTION_DONE)):

Shouldn't it be the same for _newtls.ConnectionMixin ? Or perhaps it
should accept *args and **kw and pass them on? Or am I wrong here?


Thanks and regards,

-- 
/Sa?l
http://saghul.net | http://sipdoc.net


From mostawesomedude at gmail.com  Wed Dec 28 18:22:42 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Wed, 28 Dec 2011 15:22:42 -0800
Subject: [Twisted-Python] [ANNOUNCE] txWS 0.7
Message-ID: <CALiqSLfQHkGSt3RCTaCXPsEnryauMZf=sMhr-bzfLZphUXeQ+w@mail.gmail.com>

Hi,

A new version of the surprisingly-popular txWS is now available. You
can grab it from PyPI (http://pypi.python.org/pypi/txWS) or from
source on Github (https://github.com/MostAwesomeDude/txWS).

As before: txWS is a small, single-module library for augmenting
Twisted with WebSockets support. Unlike other approaches, txWS has a
minimalist philosophy and only provides enough WebSockets machinery to
wrap server factories. Notably, txWS does not provide a WebSockets
client.

New in this release: Underlying protocols using writeSequence() are no
longer broken with txWS, Chrome 16 and other RFC 6455-compatible
browsers are now supported, and there were a couple other cleanups not
really worth mentioning.

A couple people have asked about better examples. Somebody actually
sent me a very full example (https://gist.github.com/1380305) which is
probably a bit too big for docs, but is definitely a real-world bit of
usage. I'll see about getting some complete server examples all lined
up for people to use.

As always, feedback is welcome.

~ C.
Oregon State University Open Source Lab

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>


From moijes12 at gmail.com  Thu Dec 29 07:30:04 2011
From: moijes12 at gmail.com (moses dsouza)
Date: Thu, 29 Dec 2011 18:00:04 +0530
Subject: [Twisted-Python] regarding classes and functions in
	twisted.python.reflect
Message-ID: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>

Hi

I'm new to twisted. While was working on bug #5385 I noticed that classes
AccessorType, PropertyAccessor, Accessor and Summer were rarely used
elsewhere in the code. Similaryly many functions exists which are unused.
Do we need these functions and classes? I do understand that the purpose
t.python.reflect provides  "Standardized versions of various cool and/or
strange things that you can do with Python's reflection capabilities."  but
I feel if we could remove things that we don't need we could make the code
base smaller and move towards making twisted more efficient.

Looking forward to your views

regards
moijes12
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111229/c2f06ca2/attachment.htm 

From ldanielburr at me.com  Thu Dec 29 10:52:22 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Thu, 29 Dec 2011 09:52:22 -0600
Subject: [Twisted-Python] regarding classes and functions in
 twisted.python.reflect
In-Reply-To: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
References: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
Message-ID: <op.v69c1xtmeyn2q3@tiassa.local>

Hi moijes12,


On Thu, 29 Dec 2011 06:30:04 -0600, moses dsouza <moijes12 at gmail.com>  
wrote:

> Hi
>
> I'm new to twisted. While was working on bug #5385 I noticed that classes
> AccessorType, PropertyAccessor, Accessor and Summer were rarely used
> elsewhere in the code. Similaryly many functions exists which are unused.
> Do we need these functions and classes? I do understand that the purpose
> t.python.reflect provides  "Standardized versions of various cool and/or
> strange things that you can do with Python's reflection capabilities."   
> but
> I feel if we could remove things that we don't need we could make the  
> code
> base smaller and move towards making twisted more efficient.
>

How would removing this code make twisted more efficient?  Is the savings  
in disk-space significant?  Also, just because there is code in  
t.p.reflect that is not used within twisted itself does not mean that  
applications written using twisted are not using that code.

I think, in general, everyone likes the notion of making a codebase  
smaller, but you always have to measure the benefit and the risk of doing  
so.

Have a good one,

L. Daniel Burr


From glyph at twistedmatrix.com  Thu Dec 29 18:14:09 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:14:09 -0500
Subject: [Twisted-Python] regarding classes and functions in
	twisted.python.reflect
In-Reply-To: <op.v69c1xtmeyn2q3@tiassa.local>
References: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
	<op.v69c1xtmeyn2q3@tiassa.local>
Message-ID: <800C83A7-B558-4E5B-AB0F-393AB81411AA@twistedmatrix.com>


On Dec 29, 2011, at 10:52 AM, L. Daniel Burr wrote:

> Hi moijes12,
> 
> 
> On Thu, 29 Dec 2011 06:30:04 -0600, moses dsouza <moijes12 at gmail.com>  
> wrote:
> 
>> Hi
>> 
>> I'm new to twisted. While was working on bug #5385 I noticed that classes
>> AccessorType, PropertyAccessor, Accessor and Summer were rarely used
>> elsewhere in the code. Similaryly many functions exists which are unused.
>> Do we need these functions and classes? I do understand that the purpose
>> t.python.reflect provides  "Standardized versions of various cool and/or
>> strange things that you can do with Python's reflection capabilities."   
>> but
>> I feel if we could remove things that we don't need we could make the  
>> code
>> base smaller and move towards making twisted more efficient.
>> 
> 
> How would removing this code make twisted more efficient?  Is the savings  
> in disk-space significant?  Also, just because there is code in  
> t.p.reflect that is not used within twisted itself does not mean that  
> applications written using twisted are not using that code.
> 
> I think, in general, everyone likes the notion of making a codebase  
> smaller, but you always have to measure the benefit and the risk of doing  
> so.
> 
> Have a good one,
> 
> L. Daniel Burr

Hi Moses,

I pretty much agree with everything Daniel said, but I want to make sure you take it at face value, and not as Twisted's excuse for never removing anything :).  If it's truly a bad idea to use these APIs in new code - for example, if there's a Python feature that does what they do better, available in all the versions of Python we support - then they should definitely be removed.  You should file 2 tickets: one for deprecation, and one for removal, according to <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>.  If there are no objections on the ticket, we can close the deprecation one now and the removal one in the next release.

Thanks,

-glyph

From glyph at twistedmatrix.com  Thu Dec 29 18:19:42 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:19:42 -0500
Subject: [Twisted-Python] ConnectionMixin.loseConnection (in _newtls)
	lacking arguments
In-Reply-To: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>
References: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>
Message-ID: <658BF4CE-9FB4-4C7C-A48C-E409AF953721@twistedmatrix.com>


On Dec 27, 2011, at 7:01 AM, Sa?l Ibarra Corretg? wrote:

> Hi all,
> 
> I'm experiencing a TypeError exception in my code since I updated to
> Twisted 11.1. After hunting it it seems to be caused because the
> loseConnection function from (_newtls) lacks arguments.
> 
> If there is no OpenSSL support present in the system the
> loseConnection function will be called in abstract.FileDescriptor
> (please, correct me if I'm wrong), and the signature for
> loseConnection is the following:
> 
> def loseConnection(self, _connDone=failure.Failure(main.CONNECTION_DONE)):
> 
> Shouldn't it be the same for _newtls.ConnectionMixin ? Or perhaps it
> should accept *args and **kw and pass them on? Or am I wrong here?
> 
> 
> Thanks and regards,
> 
> -- 
> /Sa?l
> http://saghul.net | http://sipdoc.net

Hi Sa?l,

The _connDone argument there is an internal convenience for that implementation of loseConnection(); it is not part of the API.  ITransport specifies that loseConnection takes no arguments.  See here: <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html#loseConnection>.  You should fix your code to never pass an argument to loseConnection, as other transport implementations may also lack this argument.  (As a bizarre accident, the IOCP reactor also has this argument in its transport implementation, but there's no reason that it necessarily should.)

However, the fact that you thought otherwise is a bug in our documentation :).  Please feel free to file tickets (<http://twistedmatrix.com/trac/newticket>) describing how you got to the loseConnection that takes an argument and why you didn't realize that you should be looking at ITransport instead :).

Thanks,

-glyph



From glyph at twistedmatrix.com  Thu Dec 29 18:28:17 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:28:17 -0500
Subject: [Twisted-Python] Unknown constants
In-Reply-To: <4EF8AD01.8030404@ralphm.ik.nu>
References: <4EF8AD01.8030404@ralphm.ik.nu>
Message-ID: <888D99D6-092B-47D4-BB26-2C59615665E5@twistedmatrix.com>


On Dec 26, 2011, at 12:21 PM, Ralph Meijer wrote:

> Hi,
> 
> I've been looking into using twisted.python.constants for representing 
> the status codes of the XMPP Multi-User Chat protocol [1]. I will have 
> objects representing messages, of which one of the attributes is 
> 'mucStatuses', a set of status codes. This works out great for the 
> initial set of available status codes. The protocol is parsed, and the 
> status codes are represented by the ValueConstant instances returned by 
> lookupByValue.
> 
> However, not all of the possible codes can be known up-front, as the 
> protocol allows for registering new ones without changing the 
> specification itself. Eventually, applications will receive status codes 
> that are not (yet?) part of the set of defined constants in the 
> implementation, and application developers (that do know about new 
> codes) will want to handle these.
> 
> A possible remedy to would be to register new status codes from the 
> application itself. My first try of just adding a new attribute to the 
> class fails because they are not 'realized' as the _enumerants are cached.
> 
> I can imagine this also goes for unknown HTTP methods and HTTP status 
> codes, used as examples in the documentation. Any suggestions on how to 
> handle such unknown constants?
> 
> 
> [1] <http://xmpp.org/extensions/xep-0045.html#statuscodes>

twisted.python.constants is a work in progress; there are many planned features that it doesn't have yet.  Perhaps you should simply add the feature that you want - the ability to adding new attributes to the class?

-glyph



From muaazhussain128 at gmail.com  Sat Dec 31 20:52:21 2011
From: muaazhussain128 at gmail.com (muaaz)
Date: Sun, 1 Jan 2012 01:52:21 +0000 (GMT)
Subject: [Twisted-Python]
 uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijkklklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljkkoo:Twisted-Python
 Digest, Vol 93, Issue 27
Message-ID: <1079968192.1.1325382741160.JavaMail.javamailuser@localhost>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20120101/fb8122da/attachment.htm 

From sykadul at astalavista.com  Sat Dec 31 20:53:59 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:53:59 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljkkoo?=
	=?utf-8?q?=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_27?=
Message-ID: <20120101015359.14981.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:54:29 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:54:29 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljk?=
	=?utf-8?q?koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_27?=
Message-ID: <20120101015429.15125.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:55:10 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:55:10 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljk?=
	=?utf-8?q?ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_?=
	=?utf-8?q?27?=
Message-ID: <20120101015510.15304.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:55:46 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:55:46 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpoji?=
	=?utf-8?q?ljk=09ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_?=
	=?utf-8?q?Issue_=0927?=
Message-ID: <20120101015546.15382.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:56:15 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:56:15 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmp?=
	=?utf-8?q?oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_?=
	=?utf-8?q?93=2C_=09Issue_=0927?=
Message-ID: <20120101015615.15490.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:56:44 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:56:44 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozouj?=
	=?utf-8?q?lmp=09oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Digest?=
	=?utf-8?b?LCBWb2wgCTkzLCAJSXNzdWUgCTI3?=
Message-ID: <20120101015644.15636.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:57:10 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:57:10 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzoooz?=
	=?utf-8?q?ouj=09lmp=09oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Di?=
	=?utf-8?b?Z2VzdAksIFZvbCAJOTMsIAlJc3N1ZSAJMjc=?=
Message-ID: <20120101015710.15703.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:57:51 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:57:51 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzo?=
	=?utf-8?b?b296CW91aglsbXAJb2ppCWxqawlsamsJa29vCTpUd2lzdGVkLVB5dGhv?=
	=?utf-8?b?biBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015751.15932.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:58:18 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:58:18 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?b?CQkJCQkJCQlrbGtsYmprampqbWtqbG1va2xpbmtvamtvcG9qb2xsb2h6?=
	=?utf-8?b?bwlvb3oJb3VqCWxtcAlvamkJbGprCWxqawlrb28JOlR3aXN0ZWQtUHl0?=
	=?utf-8?b?aG8JbiBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015818.16023.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From sykadul at astalavista.com  Sat Dec 31 20:58:47 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:58:47 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?b?CQkJCQkJCQkJa2xrbGJqa2pqam1ramxtb2tsaW5rb2prb3Bvam9sbG9o?=
	=?utf-8?b?eglvCW9veglvdWoJbG1wCW9qaQlsamsJbGprCWtvbwk6VHdpc3RlZC1Q?=
	=?utf-8?b?eXQJaG8JbiBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015847.16186.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul




From twisted at patrickmylund.com  Sat Dec 31 21:01:17 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sun, 1 Jan 2012 03:01:17 +0100
Subject: [Twisted-Python] uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijk
 klklbjkjjjmkjlmoklinkojkopojollohz o ooz ouj lmp oji ljk ljk koo
 :Twisted-Pyt ho n Di gest , Vol 93, Issue 27
In-Reply-To: <20120101015847.16186.qmail@cfe1.sui-inter.net>
References: <20120101015847.16186.qmail@cfe1.sui-inter.net>
Message-ID: <CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>

Reminds me not to try to make my own auto-reply bot, even if it's in Twisted ;)

On Sun, Jan 1, 2012 at 02:58,  <sykadul at astalavista.com> wrote:
> Ladies and gentleman, I will be unplugged from my email until the 17th of January.
>
> In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs
>
> Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com
>
> Merry christmas and a happy new year!
>
> Best regards,
> Sykadul
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From skaarjj at gmail.com  Sat Dec 31 22:35:03 2011
From: skaarjj at gmail.com (Adrian Overbury)
Date: Sun, 1 Jan 2012 14:35:03 +1100
Subject: [Twisted-Python] uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijk
	klklbjkjjjmkjlmoklinkojkopojollohz o ooz ouj lmp oji ljk ljk
	koo :Twisted-Pyt ho n Di gest , Vol 93, Issue 27
In-Reply-To: <CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>
References: <20120101015847.16186.qmail@cfe1.sui-inter.net>
	<CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>
Message-ID: <8AC72985-1174-4757-9AAE-913A09CD67BA@gmail.com>

Remember: don't try to make your own auto-reply bot, even if it's in Twisted.

On 01/01/2012, at 1:01 PM, Patrick Mylund Nielsen <twisted at patrickmylund.com> wrote:

> Reminds me not to try to make my own auto-reply bot, even if it's in Twisted ;)
> 
> On Sun, Jan 1, 2012 at 02:58,  <sykadul at astalavista.com> wrote:
>> Ladies and gentleman, I will be unplugged from my email until the 17th of January.
>> 
>> In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs
>> 
>> Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com
>> 
>> Merry christmas and a happy new year!
>> 
>> Best regards,
>> Sykadul
>> 
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Thu Dec  1 00:22:47 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 1 Dec 2011 02:22:47 -0500
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111201025752.GB3713@boombah.thristian.org>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>
	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>
	<ja16c1$u1t$1@dough.gmane.org>
	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>
	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>
	<4ED52805.7050300@advpubtech.com>
	<20111130040722.GA3713@boombah.thristian.org>
	<20111130130427.2308.845285623.divmod.xquotient.547@localhost.localdomain>
	<20111201025752.GB3713@boombah.thristian.org>
Message-ID: <22B2C750-5F68-44B8-BE42-FA1E84D73E19@twistedmatrix.com>


On Nov 30, 2011, at 9:57 PM, Tim Allen wrote:

> On Wed, Nov 30, 2011 at 01:04:27PM -0000, exarkun at twistedmatrix.com wrote:
>> On 04:07 am, screwtape at froup.com wrote:
>>> If the standard Twisted logging functions automatically constructed
>>> LogMessage instances from dict instances, it should be easy enough for
>>> future ILogObserver implementations to do the right thing (by just
>>> calling str(msg)). Of course, they could also do more sophisticated
>>> things like pulling particular keys out of the message to set
>>> observer-specific message properties (like syslog channel and severity,
>>> etc.)
>> 
>> Oooorrrr there could be a function that takes a dict intended to 
>> represent a text message and returns that message as a string.
> 
> As mentioned, we already have one of those in the form of
> textFromEventDict().

Right, I think that's the tone all those extra letters are meant to suggest :).

> The trouble is that everybody who writes
> a LogObserver needs to know that it exists, and remember to call it. If
> it were the __str__() method of a LogMessage object, they'd have to go
> out of their way to *not* do the right thing.

I really don't like using __str__ for structured conversions.  For example, textFromEventDict has very strict error-handling behavior: it will try as hard as it can to give you something so that you don't need to do extra error handling in your log observer.  But if you can get instances of LogMessage or some derived message type or possibly application-derived message types, the behavior might change and the error-handling would be less strict and now the default log observers need to be double-careful; once in LogMessage.__str__, once in the thing that calls it because you can never really know what str(x) is going to do.

For another there's a whole nasty battery of unicode-or-bytes issues that crop up when you start using __str__.

Finally, and I'm leaving it for last because this concern is rather silly, right now log events are constructed and propagated with extremely little copying, and the copying that does happen (ahem, log contexts) needs to be reduced.  Adding a LogMessage object into the mix, even if it is a subclass of dict, means we have to, at the very least, copy all the values from msg()'s keyword arguments into a new object, rather than just propagating them to log observers.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/151c52c3/attachment.html>

From itamar at itamarst.org  Thu Dec  1 08:24:32 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 01 Dec 2011 10:24:32 -0500
Subject: [Twisted-Python] Using decorator syntax in Twisted
Message-ID: <4ED79C30.8040509@itamarst.org>

Until now we haven't AFAIK used decorator syntax, but I think it's time 
we start to. In places where we were already using decorators without 
the special syntax, that is.

Consider:

    def foo(cls, arg):
        # lalalal
    foo = classmethod(foo)

One has to type "foo" three times (a potential source of error), and the 
special semantics of the function are known to the reader only *after* 
reading the function. On the other hand:

    @classmethod
    def foo(cls, arg):
        # lalalal

This suffers from none of these problems.

Any disagreement?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/ba57c1f8/attachment-0001.html>

From teratorn at twistedmatrix.com  Thu Dec  1 08:51:30 2011
From: teratorn at twistedmatrix.com (teratorn at twistedmatrix.com)
Date: Thu, 1 Dec 2011 12:51:30 -0300
Subject: [Twisted-Python] Good evening
Message-ID: <2383156829.IUUZSKO3347037@rntzjhrt.mnkkkhduybvcncc.su>

WHAT A GREAT IDEA!

Ring anytime 1-404-549-4731

We provide a concept that will allow anyone with sufficient work experience to
obtain a fully verifiable University Degree.
Bachelors, Masters or even a Doctorate.

Think of it, within four to six weeks, you too could be a college graduate.
Many people share the same frustration, they are doing the work of the person
that has the degree and the person that has the degree is getting all the money.
Don't you think that it is time you were paid fair compensation for the level of
work you are already doing?

This is your chance to finally make the right move and receive your due
benefits.
If you are more than qualified with your experience, but are lacking that
prestigious piece of paper known as a diploma that is often the passport to
success.

CALL US TODAY AND GIVE YOUR WORK
EXPERIENCE THE CHANCE TO EARN YOU
THE HIGHER COMPENSATION YOU DESERVE!

Ring anytime 1-404-549-4731




From exarkun at twistedmatrix.com  Thu Dec  1 08:53:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 01 Dec 2011 15:53:36 -0000
Subject: [Twisted-Python] Using decorator syntax in Twisted
In-Reply-To: <4ED79C30.8040509@itamarst.org>
References: <4ED79C30.8040509@itamarst.org>
Message-ID: <20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain>

On 03:24 pm, itamar at itamarst.org wrote:
>Until now we haven't AFAIK used decorator syntax, but I think it's time 
>we start to. In places where we were already using decorators without 
>the special syntax, that is.
>
>Consider:
>
>    def foo(cls, arg):
>        # lalalal
>    foo = classmethod(foo)
>
>One has to type "foo" three times (a potential source of error), and 
>the special semantics of the function are known to the reader only 
>*after* reading the function. On the other hand:
>
>    @classmethod
>    def foo(cls, arg):
>        # lalalal
>
>This suffers from none of these problems.
>
>Any disagreement?

Can we start with a limited experimental usage?  Some new code can be 
written this way, and we'll see if there's any negative feedback 
following the next release.

I don't want existing code to get ported to the new syntax just because 
it's possible now.

Jean-Paul



From itamar at itamarst.org  Thu Dec  1 09:33:06 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 1 Dec 2011 11:33:06 -0500
Subject: [Twisted-Python] Using decorator syntax in Twisted
In-Reply-To: <20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain
	>
References: <4ED79C30.8040509@itamarst.org>
	<20111201155336.2308.1188591344.divmod.xquotient.605@localhost.localdomain>
Message-ID: <2ffeb08ee1e6b3699737026b418f0c29.squirrel@webmail.zoteca.com>

> Can we start with a limited experimental usage?  Some new code can be
> written this way, and we'll see if there's any negative feedback
> following the next release.
>
> I don't want existing code to get ported to the new syntax just because
> it's possible now.

Sure, just because it's possible doesn't mean we should go and change all
existing code.




From tom.sheffler at gmail.com  Thu Dec  1 10:32:50 2011
From: tom.sheffler at gmail.com (Tom Sheffler)
Date: Thu, 1 Dec 2011 09:32:50 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
Message-ID: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>

I am happy with the information I get out of the logging system and the
formatting of errors and tracebacks.  We've recently come across two things
that could be handled nicer however.

1) we use multiple logfiles.  one for *all* messages, and another for
*special* messages.  It would be nice if the concept of multiple logfiles
and the routing of messages to files was part of the system.

2) the above, coupled with the use of twisd and starting the logfiles was a
little weird.  Our main logfile is attached to the application like this

application.setComponent(ILogObserver, FileLogObserver(logfile).emit)

and the other logfile just starts on its own.  I had expected to attach
both of them to the application and set up an event filter for each.  It's
a little non-symmetric the way it is.

-T
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/863c9841/attachment.html>

From lmorsino at gmail.com  Thu Dec  1 17:12:51 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 16:12:51 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
Message-ID: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>

Hi all,

I'm writing a twisted Telnet server and I want a client to be able to
connect to it through some other interface, such as PuTTY.  I can make the
connection fine. But one of my requirements is to be able to tell the
client to switch back and forth between buffered and unbuffered input modes
depending on the state of the server. (Sometimes, the client should enter
text, then hit enter to send. Other times, the client should send data
character-by-character).

I'm new at this, and maybe I'm missing something, but in my TelnetTransport
object, I do something like this to disable buffering of client data:

self.transport.write(IAC + WILL + LINEMODE)
self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)

Not working though. PuTTY still requires me to hit <enter> after I type.
I've tried various combinations of the above. I'm sure I'm doing something
wrong but its just really hard to find an example of this on the net. I'd
appreciate some advice as to how to proceed, or a simple example if you
have time...

I'm using the twisted Telnet classes found here:
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/0dfffd0d/attachment.html>

From twisted at patrickmylund.com  Thu Dec  1 17:26:03 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Fri, 2 Dec 2011 01:26:03 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
Message-ID: <CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>

Hi Lee,

Does using TelnetTransport 'will' and 'requestNegotation' work? E.g.

self.will(LINEMODE)
self.requestNegotiation(LINEMODE, '')

I'm not completely sure about LINEMODE, but if the client sends back a
DO, you might use something like:

class MyTransport(TelnetTransport):

    def connectionMade(self):
        self.linemode = False
        self.will(LINEMODE)
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == DO:
                self.requestNegotiation(LINEMODE, '')
                self.linemode = True
            elif command == DONT:
                pass
        else:
            TelnetTransport.commandReceived(self, command, argument)

    def write(self, data):
        if self.linemode:
            # do something special
        else:
            self.transport.write(data)

Best,
Patrick

On Fri, Dec 2, 2011 at 01:12, Lee Orsino <lmorsino at gmail.com> wrote:
> Hi all,
>
> I'm writing a twisted Telnet server and I want a client to be able to
> connect to it through some other interface, such as PuTTY.  I can make the
> connection fine. But one of my requirements is to be able to tell the client
> to switch back and forth between buffered and unbuffered input modes
> depending on the state of the server. (Sometimes, the client should enter
> text, then hit enter to send. Other times, the client should send data
> character-by-character).
>
> I'm new at this, and maybe I'm missing something, but in my TelnetTransport
> object, I do something like this to disable buffering of client data:
>
> self.transport.write(IAC + WILL + LINEMODE)
> self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)
>
> Not working though. PuTTY still requires me to hit <enter> after I type.
> I've tried various combinations of the above. I'm sure I'm doing something
> wrong but its just really hard to find an example of this on the net. I'd
> appreciate some advice as to how to proceed, or a simple example if you have
> time...
>
> I'm using the twisted Telnet classes found here:
> http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py
>
> Thanks!
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From twisted at patrickmylund.com  Thu Dec  1 17:27:43 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Fri, 2 Dec 2011 01:27:43 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
Message-ID: <CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>

For clarity, self.linemode has no special significance--it was just an
easy way to keep track of what was negotiated with the client.

On Fri, Dec 2, 2011 at 01:26, Patrick Mylund Nielsen
<twisted at patrickmylund.com> wrote:
> Hi Lee,
>
> Does using TelnetTransport 'will' and 'requestNegotation' work? E.g.
>
> self.will(LINEMODE)
> self.requestNegotiation(LINEMODE, '')
>
> I'm not completely sure about LINEMODE, but if the client sends back a
> DO, you might use something like:
>
> class MyTransport(TelnetTransport):
>
>    def connectionMade(self):
>        self.linemode = False
>        self.will(LINEMODE)
>        TelnetTransport.connectionMade(self)
>
>    def commandReceived(self, command, argument):
>        if argument == LINEMODE:
>            if command == DO:
>                self.requestNegotiation(LINEMODE, '')
>                self.linemode = True
>            elif command == DONT:
>                pass
>        else:
>            TelnetTransport.commandReceived(self, command, argument)
>
>    def write(self, data):
>        if self.linemode:
>            # do something special
>        else:
>            self.transport.write(data)
>
> Best,
> Patrick
>
> On Fri, Dec 2, 2011 at 01:12, Lee Orsino <lmorsino at gmail.com> wrote:
>> Hi all,
>>
>> I'm writing a twisted Telnet server and I want a client to be able to
>> connect to it through some other interface, such as PuTTY.  I can make the
>> connection fine. But one of my requirements is to be able to tell the client
>> to switch back and forth between buffered and unbuffered input modes
>> depending on the state of the server. (Sometimes, the client should enter
>> text, then hit enter to send. Other times, the client should send data
>> character-by-character).
>>
>> I'm new at this, and maybe I'm missing something, but in my TelnetTransport
>> object, I do something like this to disable buffering of client data:
>>
>> self.transport.write(IAC + WILL + LINEMODE)
>> self.transport.write(IAC + SB + LINEMODE + MODE + chr(0) + IAC + SE)
>>
>> Not working though. PuTTY still requires me to hit <enter> after I type.
>> I've tried various combinations of the above. I'm sure I'm doing something
>> wrong but its just really hard to find an example of this on the net. I'd
>> appreciate some advice as to how to proceed, or a simple example if you have
>> time...
>>
>> I'm using the twisted Telnet classes found here:
>> http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/conch/telnet.py
>>
>> Thanks!
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>



From lmorsino at gmail.com  Thu Dec  1 18:00:28 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 17:00:28 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
Message-ID: <CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>

Hi Patrick! Thanks for the suggestion. After I call self.will(LINEMODE), I
get

Failure: twisted.conch.telnet.OptionRefused:
twisted.conch.telnet.OptionRefused:
'"'

So I know at least something is happening. I guess this just became a
Telnet question instead of a twisted question. But I still don't understand
how enableRemote and requestNegotiation are supposed to be used with this.
Anyway, this happens in PuTTY as well as the Windows telnet client. Below
is the code, if it helps, as simple as I could get it. Maybe there is
something obvious that I need to do:



from twisted.internet.protocol import Protocol, Factory
from twisted.conch.telnet import TelnetTransport, TelnetProtocol,
ITelnetProtocol
from twisted.internet import reactor
import sys

class EchoTransport(TelnetTransport):
def __init__(self, protocolFactory=None, *a, **kw):
TelnetTransport.__init__(self)
if protocolFactory is not None:
self.protocolFactory = protocolFactory
self.protocolArgs = a
self.protocolKwArgs = kw

def connectionMade(self):
TelnetTransport.connectionMade(self)
print ("connection made")

def connectionLost(self, reason):
print ("connection lost")
reactor.stop()
 def applicationDataReceived(self, bytes):
TelnetTransport.applicationDataReceived(self, bytes)
bytes = bytes.strip()
 if (bytes == 'b'):
self.will(chr(34)) # Error here
 if (bytes == 'x'):
self.transport.write("goodbye")
TelnetTransport.loseConnection(self)

def main():
    f = Factory()
    f.protocol = lambda: EchoTransport(TelnetProtocol)
    reactor.listenTCP(8023, f)
    reactor.run()


if __name__ == '__main__':
    main()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/fd4caade/attachment.html>

From jeff at ocjtech.us  Thu Dec  1 18:34:58 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Thu, 1 Dec 2011 19:34:58 -0600
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
Message-ID: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>

On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
>
>     reactor.listenTCP(8023, f)

It's been a loong time since I've done anything with telnet, but it
used to be the case that telnet clients would not do any negotiation
if they connected to non-standard ports.  Have you tried running your
server on port 23?

-- 
Jeff Ollie



From lmorsino at gmail.com  Thu Dec  1 19:25:23 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 18:25:23 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
Message-ID: <CAE18iQXMovNNE3_yrykfxuLuZGALxdm45=LOPw9K=LYLW5rs-A@mail.gmail.com>

Yeah, unfortunately, same result on port 23    :(




On Thu, Dec 1, 2011 at 5:34 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:

> On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
> >
> >     reactor.listenTCP(8023, f)
>
> It's been a loong time since I've done anything with telnet, but it
> used to be the case that telnet clients would not do any negotiation
> if they connected to non-standard ports.  Have you tried running your
> server on port 23?
>
> --
> Jeff Ollie
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/d8f54ee7/attachment-0001.html>

From mostawesomedude at gmail.com  Thu Dec  1 20:52:44 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Thu, 1 Dec 2011 19:52:44 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
Message-ID: <CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>

On Thu, Dec 1, 2011 at 5:34 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
> On Thu, Dec 1, 2011 at 7:00 PM, Lee Orsino <lmorsino at gmail.com> wrote:
>>
>>     reactor.listenTCP(8023, f)
>
> It's been a loong time since I've done anything with telnet, but it
> used to be the case that telnet clients would not do any negotiation
> if they connected to non-standard ports.  Have you tried running your
> server on port 23?

I just happen to have been doing something similar, with
TERMINAL-TYPE, and negotiation works fine regardless of port used.
Clearly something else is wrong.

~ C.

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From lmorsino at gmail.com  Thu Dec  1 21:43:26 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Thu, 1 Dec 2011 20:43:26 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
Message-ID: <CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>

Hmmm. Do I need to do something with the enableRemote/enableLocal methods
of TelnetTransport?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111201/620bd50e/attachment.html>

From ddwiggins at advpubtech.com  Fri Dec  2 11:01:11 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Fri, 02 Dec 2011 10:01:11 -0800
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>
References: <CAD-DQxQJ1C8YLNuTb-je5c=UiGVp+inegL0OCyGqQRjfnHE5hQ@mail.gmail.com>	<CAPkRfUSVEtez1zr9z7HHkm7J0M_ikn6ucUqDpm3S3MXRUMdJoA@mail.gmail.com>	<ja16c1$u1t$1@dough.gmane.org>	<CA+U=zK2j8j9W04o=S-1fiKxYsv6sy3W7n-RN=b68nT=8tKeGYg@mail.gmail.com>	<20111117232648.20412.431755001.divmod.xquotient.132@localhost.localdomain>	<4ED52805.7050300@advpubtech.com>
	<20111130132041.2308.327340699.divmod.xquotient.560@localhost.localdomain>
Message-ID: <jbb3p8$7n8$1@dough.gmane.org>

On 11/30/2011 5:20 AM, exarkun at twistedmatrix.com wrote:
> On 29 Nov, 06:44 pm, ddwiggins at advpubtech.com wrote:
>> Looking at the source of log.py, I'm at a bit of a loss to reconcile 
>> these two forces. Certainly, the two log observers implemented there 
>> use textFromEventDict, but one could create a different observer that 
>> does things entirely differently.
>> The best idea I can come up with is, in the documentation for msg,
>> refer to the documentation for the chosen log observer; then, in each log
>> observer's documentation, describe how the formatting is done, either
>> explicitly, or by reference to textFromEventDict.  (And maybe in the
>> documentation for ILogObserver, recommend strongly that each
>> implementation be explicit about message formatting.)  There should
>> probably also be something in the logging howto.
>>
>> Any better suggestions?
> I'm not sure what you mean by "refer to the documentation for the chosen
> log observer".  The only interpretation I can think of involves changing
> the documentation dynamically at runtime, which doesn't make any sense,
> so I don't think it's what you meant. :)

Sorry, I was being a bit too concise.  What I had in mind was that, when 
you're about to write a call to msg(), you know which log observer 
you're using, so you know which observer's documentation to refer to.

Actually, that might not be quite true; if you use one of the LogFile 
classes, for example, you'd have to infer that it's using 
FileLogObserver, or dig into the source to find out -- again, the kind 
of thing I'd like to avoid.

I'm beginning to think that howto/logging.html is the right place to 
explain things, and needs more work than I originally thought.  I'm 
willing to submit something, but unfortunately not in the very near future.

-- 

Don Dwiggins
Advanced Publishing Technology





From exarkun at twistedmatrix.com  Fri Dec  2 17:56:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 00:56:19 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
Message-ID: <20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>

On 2 Dec, 04:43 am, lmorsino at gmail.com wrote:
>Hmmm. Do I need to do something with the enableRemote/enableLocal 
>methods
>of TelnetTransport?

Yes.  The default implementation of enableRemote does not allow any 
options to be enabled.  You must override it if you want the peer to be 
allowed to enable any options.

Jean-Paul



From lmorsino at gmail.com  Fri Dec  2 20:53:40 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Fri, 2 Dec 2011 19:53:40 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
Message-ID: <CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>

Jean-Paul,

Thanks for your response. I still can't get self.will(LINEMODE) to work but
I did get self.telnet_WILL(LINEMODE) to run without throwing an Error. Can
you elaborate on what needs to happen in the enableRemote? My impression
was that once I send the negotiation WILL command from server to the
client, the client will respond with either a DO or a DONT. What further
logic is necessary?

Thanks!

On Fri, Dec 2, 2011 at 4:56 PM, <exarkun at twistedmatrix.com> wrote:

> On 2 Dec, 04:43 am, lmorsino at gmail.com wrote:
> >Hmmm. Do I need to do something with the enableRemote/enableLocal
> >methods
> >of TelnetTransport?
>
> Yes.  The default implementation of enableRemote does not allow any
> options to be enabled.  You must override it if you want the peer to be
> allowed to enable any options.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111202/7f561dda/attachment.html>

From exarkun at twistedmatrix.com  Sat Dec  3 06:59:06 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 13:59:06 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
Message-ID: <20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>

On 03:53 am, lmorsino at gmail.com wrote:
>Jean-Paul,
>
>Thanks for your response. I still can't get self.will(LINEMODE) to work 
>but
>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error. 
>Can
>you elaborate on what needs to happen in the enableRemote? My 
>impression
>was that once I send the negotiation WILL command from server to the
>client, the client will respond with either a DO or a DONT. What 
>further
>logic is necessary?

I can't say what further logic is necessary, because I don't know what 
logic you have now.  The description of your code you gave above is a 
good introduction to an actual code listing (<http://sscce.org/>), but 
it's not sufficient on its own.

Jean-Paul



From twisted at patrickmylund.com  Sat Dec  3 07:22:19 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 15:22:19 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
Message-ID: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>

Hi Lee,

Here is a complete example that works with Twisted 11.0. LINEMODE
itself is enabled at connect, but it has different modes that
determine what is sent when by the client. (See section 2.2 of
http://www.faqs.org/rfcs/rfc1184.html)

#####

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import TelnetProtocol,
StatefulTelnetProtocol, TelnetTransport
from twisted.conch.telnet import DO, DONT, WILL, WONT

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LineModeProtocol(TelnetProtocol):

    def connectionMade(self):
        print("Connection made!")

    def connectionLost(self, reason):
        print("Connection lost!")

    def dataReceived(self, data):
        if self.transport.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_TRAPSIG) # Only trap signals locally
                self.transport.lines = False
        else:
            # manually buffer data here
            print("data received (linemode): " + data)
            if data == "n":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_EDIT) # Change to edit mode
                self.transport.lines = True

class LineModeTransport(TelnetTransport):

    def connectionMade(self):
        self.lines = True
        self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == WILL: # Client said OK to our DO; let's... do it
                self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # The
normal (buffered) mode
        else:
            TelnetTransport.commandReceived(self, command, argument)

class LineModeFactory(Factory):

    def buildProtocol(self, addr):
        return LineModeTransport(LineModeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LineModeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()

#####

There is probably an easier way to check the state of LINEMODE, e.g.
with getOptionState, but it works.

Example:

Client:
# telnet localhost 2222
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
How are you?
gounbuffered
testnback again

Server:
# ./linemode.py
Connection made!
data received (normal): How are you?
data received (normal): gounbuffered
data received (linemode): t
data received (linemode): e
data received (linemode): s
data received (linemode): t
data received (linemode): n
data received (normal): back again

Best,
Patrick

On Sat, Dec 3, 2011 at 14:59,  <exarkun at twistedmatrix.com> wrote:
> On 03:53 am, lmorsino at gmail.com wrote:
>>Jean-Paul,
>>
>>Thanks for your response. I still can't get self.will(LINEMODE) to work
>>but
>>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error.
>>Can
>>you elaborate on what needs to happen in the enableRemote? My
>>impression
>>was that once I send the negotiation WILL command from server to the
>>client, the client will respond with either a DO or a DONT. What
>>further
>>logic is necessary?
>
> I can't say what further logic is necessary, because I don't know what
> logic you have now.  The description of your code you gave above is a
> good introduction to an actual code listing (<http://sscce.org/>), but
> it's not sufficient on its own.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at patrickmylund.com  Sat Dec  3 07:48:04 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 15:48:04 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
Message-ID: <CAEw2jfz7DOYYip0o6k5iVYZto8uacry=-4-XtzNgPAx=dpppAw@mail.gmail.com>

Pardon my double-posting. Here it is, a little less confusing:

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import TelnetProtocol, TelnetTransport
from twisted.conch.telnet import WILL

# More info: http://www.faqs.org/rfcs/rfc1184.html

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LinemodeProtocol(TelnetProtocol):

    def dataReceived(self, data):
        if self.transport.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_TRAPSIG) # Client should only trap signals locally
                self.transport.lines = False
        else:
            # manually buffer data here
            print("data received (unbuffered): " + data)
            if data == "n":
                self.transport.requestNegotiation(LINEMODE,
LINEMODE_EDIT) # Go back to buffered
                self.transport.lines = True

class LinemodeTransport(TelnetTransport):

    def connectionMade(self):
        self.lines = True
        self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
        TelnetTransport.connectionMade(self)

    def commandReceived(self, command, argument):
        if argument == LINEMODE:
            if command == WILL: # Client said OK to our DO; let's... do it
                self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # Buffered mode
        else:
            TelnetTransport.commandReceived(self, command, argument)

class LinemodeFactory(Factory):

    def buildProtocol(self, addr):
        return LinemodeTransport(LinemodeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LinemodeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()



On Sat, Dec 3, 2011 at 15:22, Patrick Mylund Nielsen
<twisted at patrickmylund.com> wrote:
> Hi Lee,
>
> Here is a complete example that works with Twisted 11.0. LINEMODE
> itself is enabled at connect, but it has different modes that
> determine what is sent when by the client. (See section 2.2 of
> http://www.faqs.org/rfcs/rfc1184.html)
>
> #####
>
> #!/usr/bin/env python
> from twisted.internet.protocol import Factory
> from twisted.conch.telnet import TelnetProtocol,
> StatefulTelnetProtocol, TelnetTransport
> from twisted.conch.telnet import DO, DONT, WILL, WONT
>
> LINEMODE = chr(34)
> LINEMODE_EDIT = chr(1) + chr(1)
> LINEMODE_TRAPSIG = chr(1) + chr(2)
> LINEMODE_MODEACK = chr(1) + chr(4)
> LINEMODE_SOFTTAB = chr(1) + chr(8)
> LINEMODE_LITECHO = chr(1) + chr(16)
>
> class LineModeProtocol(TelnetProtocol):
>
>    def connectionMade(self):
>        print("Connection made!")
>
>    def connectionLost(self, reason):
>        print("Connection lost!")
>
>    def dataReceived(self, data):
>        if self.transport.lines:
>            line = data.rstrip()
>            print("data received (normal): " + line)
>            if line == "gounbuffered":
>                self.transport.requestNegotiation(LINEMODE,
> LINEMODE_TRAPSIG) # Only trap signals locally
>                self.transport.lines = False
>        else:
>            # manually buffer data here
>            print("data received (linemode): " + data)
>            if data == "n":
>                self.transport.requestNegotiation(LINEMODE,
> LINEMODE_EDIT) # Change to edit mode
>                self.transport.lines = True
>
> class LineModeTransport(TelnetTransport):
>
>    def connectionMade(self):
>        self.lines = True
>        self.do(LINEMODE) # Ask client to begin sub-negotation of linemode
>        TelnetTransport.connectionMade(self)
>
>    def commandReceived(self, command, argument):
>        if argument == LINEMODE:
>            if command == WILL: # Client said OK to our DO; let's... do it
>                self.requestNegotiation(LINEMODE, LINEMODE_EDIT) # The
> normal (buffered) mode
>        else:
>            TelnetTransport.commandReceived(self, command, argument)
>
> class LineModeFactory(Factory):
>
>    def buildProtocol(self, addr):
>        return LineModeTransport(LineModeProtocol)
>
> if __name__ == '__main__':
>    from twisted.internet import reactor
>
>    port = 2222
>    factory = LineModeFactory()
>
>    reactor.listenTCP(port, factory)
>    reactor.run()
>
> #####
>
> There is probably an easier way to check the state of LINEMODE, e.g.
> with getOptionState, but it works.
>
> Example:
>
> Client:
> # telnet localhost 2222
> Trying 127.0.0.1...
> Connected to localhost.
> Escape character is '^]'.
> How are you?
> gounbuffered
> testnback again
>
> Server:
> # ./linemode.py
> Connection made!
> data received (normal): How are you?
> data received (normal): gounbuffered
> data received (linemode): t
> data received (linemode): e
> data received (linemode): s
> data received (linemode): t
> data received (linemode): n
> data received (normal): back again
>
> Best,
> Patrick
>
> On Sat, Dec 3, 2011 at 14:59,  <exarkun at twistedmatrix.com> wrote:
>> On 03:53 am, lmorsino at gmail.com wrote:
>>>Jean-Paul,
>>>
>>>Thanks for your response. I still can't get self.will(LINEMODE) to work
>>>but
>>>I did get self.telnet_WILL(LINEMODE) to run without throwing an Error.
>>>Can
>>>you elaborate on what needs to happen in the enableRemote? My
>>>impression
>>>was that once I send the negotiation WILL command from server to the
>>>client, the client will respond with either a DO or a DONT. What
>>>further
>>>logic is necessary?
>>
>> I can't say what further logic is necessary, because I don't know what
>> logic you have now.  The description of your code you gave above is a
>> good introduction to an actual code listing (<http://sscce.org/>), but
>> it's not sufficient on its own.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Sat Dec  3 07:48:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 03 Dec 2011 14:48:56 -0000
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
Message-ID: <20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>

On 02:22 pm, twisted at patrickmylund.com wrote:
>Hi Lee,
>
>Here is a complete example that works with Twisted 11.0. LINEMODE
>itself is enabled at connect, but it has different modes that
>determine what is sent when by the client. (See section 2.2 of
>http://www.faqs.org/rfcs/rfc1184.html)

You can manage this without a TelnetTransport subclass:

#!/usr/bin/env python
from twisted.internet.protocol import Factory
from twisted.conch.telnet import (
    TelnetProtocol, StatefulTelnetProtocol, TelnetTransport)
from twisted.conch.telnet import DO, DONT, WILL, WONT

LINEMODE = chr(34)
LINEMODE_EDIT = chr(1) + chr(1)
LINEMODE_TRAPSIG = chr(1) + chr(2)
LINEMODE_MODEACK = chr(1) + chr(4)
LINEMODE_SOFTTAB = chr(1) + chr(8)
LINEMODE_LITECHO = chr(1) + chr(16)

class LineModeProtocol(TelnetProtocol):

    def connectionMade(self):
        print("Connection made!")
        self.lines = True
        # Ask client to begin sub-negotation of linemode
        self.transport.do(LINEMODE)

    def connectionLost(self, reason):
        print("Connection lost!")

    def enableRemote(self, option):
        if option == LINEMODE:
            # The normal (buffered) mode
            self.transport.requestNegotiation(
                LINEMODE, LINEMODE_EDIT)
            return True
        return False

    def dataReceived(self, data):
        if self.lines:
            line = data.rstrip()
            print("data received (normal): " + line)
            if line == "gounbuffered":
                # Only trap signals locally
                self.transport.requestNegotiation(
                    LINEMODE, LINEMODE_TRAPSIG)                self.lines 
= False
        else:
            # manually buffer data here
            print("data received (linemode): " + data)
            if data == "n":
                # Change to edit mode
                self.transport.requestNegotiation(
                    LINEMODE, LINEMODE_EDIT)
                self.lines = True

class LineModeFactory(Factory):

    def buildProtocol(self, addr):
        return TelnetTransport(LineModeProtocol)

if __name__ == '__main__':
    from twisted.internet import reactor

    port = 2222
    factory = LineModeFactory()

    reactor.listenTCP(port, factory)
    reactor.run()

Jean-Paul



From twisted at patrickmylund.com  Sat Dec  3 08:13:31 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sat, 3 Dec 2011 16:13:31 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
Message-ID: <CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>

That's much better, Jean-Paul. Thanks!

On Sat, Dec 3, 2011 at 15:48,  <exarkun at twistedmatrix.com> wrote:
> On 02:22 pm, twisted at patrickmylund.com wrote:
>>Hi Lee,
>>
>>Here is a complete example that works with Twisted 11.0. LINEMODE
>>itself is enabled at connect, but it has different modes that
>>determine what is sent when by the client. (See section 2.2 of
>>http://www.faqs.org/rfcs/rfc1184.html)
>
> You can manage this without a TelnetTransport subclass:
>
> #!/usr/bin/env python
> from twisted.internet.protocol import Factory
> from twisted.conch.telnet import (
>    TelnetProtocol, StatefulTelnetProtocol, TelnetTransport)
> from twisted.conch.telnet import DO, DONT, WILL, WONT
>
> LINEMODE = chr(34)
> LINEMODE_EDIT = chr(1) + chr(1)
> LINEMODE_TRAPSIG = chr(1) + chr(2)
> LINEMODE_MODEACK = chr(1) + chr(4)
> LINEMODE_SOFTTAB = chr(1) + chr(8)
> LINEMODE_LITECHO = chr(1) + chr(16)
>
> class LineModeProtocol(TelnetProtocol):
>
>    def connectionMade(self):
>        print("Connection made!")
>        self.lines = True
>        # Ask client to begin sub-negotation of linemode
>        self.transport.do(LINEMODE)
>
>    def connectionLost(self, reason):
>        print("Connection lost!")
>
>    def enableRemote(self, option):
>        if option == LINEMODE:
>            # The normal (buffered) mode
>            self.transport.requestNegotiation(
>                LINEMODE, LINEMODE_EDIT)
>            return True
>        return False
>
>    def dataReceived(self, data):
>        if self.lines:
>            line = data.rstrip()
>            print("data received (normal): " + line)
>            if line == "gounbuffered":
>                # Only trap signals locally
>                self.transport.requestNegotiation(
>                    LINEMODE, LINEMODE_TRAPSIG)                self.lines
> = False
>        else:
>            # manually buffer data here
>            print("data received (linemode): " + data)
>            if data == "n":
>                # Change to edit mode
>                self.transport.requestNegotiation(
>                    LINEMODE, LINEMODE_EDIT)
>                self.lines = True
>
> class LineModeFactory(Factory):
>
>    def buildProtocol(self, addr):
>        return TelnetTransport(LineModeProtocol)
>
> if __name__ == '__main__':
>    from twisted.internet import reactor
>
>    port = 2222
>    factory = LineModeFactory()
>
>    reactor.listenTCP(port, factory)
>    reactor.run()
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From lmorsino at gmail.com  Sat Dec  3 20:22:02 2011
From: lmorsino at gmail.com (Lee Orsino)
Date: Sat, 3 Dec 2011 19:22:02 -0800
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
	<CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
Message-ID: <CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>

Patrick,

Thanks so much for that example, it was really helpful! I understand a
little better about how the protocol works. I tested it on Linux, and it
works just like you said. Perhaps not surprisingly I'm having some
difficulty when running the server on Windows. When I do a

self.will(chr(1)) # set echo mode

I get "DO 1" in return from the client. This is what I would expect. But
when I do

self.do(LINEMODE) # ask client to negotiate LINEMODE

I get "WONT LINEMODE" in return. I get this with both clients I'm testing
with. If I send "WILL LINEMODE" I get "DONT LINEMODE" in return.

So it seems no matter what I do, my clients aren't willing to negotiate
about this. I'm using the same code as the Linux server.

Anyway, thanks for everyone's help so far...! At least it is working in
Linux. Does anyone know if I have to do anything special for Windows? Can
anyone confirm it doesn't work in Win 7? Maybe I am missing some
configuration property, or...?

Thanks!
Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111203/e28b8496/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Dec  3 22:05:29 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Dec 2011 05:05:29 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1322975129.63.2133285789@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111204/dcbc538e/attachment.html>

From twisted at patrickmylund.com  Sun Dec  4 16:57:22 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Mon, 5 Dec 2011 00:57:22 +0100
Subject: [Twisted-Python] Telnet negotiation with Twisted
In-Reply-To: <CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>
References: <CAE18iQVqugQb9o0WY2Xv8GwYbLA7WiwoyWgSzvPdsxMCbxN38g@mail.gmail.com>
	<CAEw2jfyVZOp=SwMRgR6A=ROWub_S9ferakNzh=h7Y1U4bcExQg@mail.gmail.com>
	<CAEw2jfy8c=Oa1YJgR+ZocLhtFUtZYsmDcnYzcJvokOi-+pzCiw@mail.gmail.com>
	<CAE18iQUvtH-yKBx48kkLBv8rivAaQgd2zjjpdEL3+xA4fLHV_w@mail.gmail.com>
	<CAE18iQWqADzdUqW8fbmaovkmOj6o365DdAv4w52_fkAonB1YQw@mail.gmail.com>
	<CAD-DQxQExrD66NdfTe+Qbw=t04CpAPwsHtz82rcSt6uBPVvgtg@mail.gmail.com>
	<CALiqSLcfCFMJuO+xetsxDUyBvNd9ibGdRd90okO_mVe3gP23NQ@mail.gmail.com>
	<CAE18iQXCzZpchok=un0CvNWtNacaSTbrDH8AJ1MWjWxGL_GoYw@mail.gmail.com>
	<20111203005619.2308.1891942170.divmod.xquotient.622@localhost.localdomain>
	<CAE18iQXoz_ZQFJGJEWK3rk84V4Q1aDqaVJ4AMj7BU3WtWroXow@mail.gmail.com>
	<20111203135906.2308.1125579616.divmod.xquotient.629@localhost.localdomain>
	<CAEw2jfxPtp-Yaigovkru+XwaNePzU-kTf3AwKcOSo9bHqTAuEw@mail.gmail.com>
	<20111203144856.2308.1190615929.divmod.xquotient.633@localhost.localdomain>
	<CAEw2jfwWxtruVo5hSYVFJvX9qDQcb6dP3apeFW20ZnV_0f-q4w@mail.gmail.com>
	<CAE18iQUh=rD01V2LWduSG0=TUDfnE22AKixi92u0fjxXvTgh7A@mail.gmail.com>
Message-ID: <CAEw2jfx=4865B5x1Cwvu+qJHHwgnOqz+B2Qqky7Zj-TdNsM6Uw@mail.gmail.com>

Hi Lee,

You're welcome, although it seems I didn't solve your problem.

I've tried running it on Linux (don't think it's significant) and
connecting from Windows. It seems like Windows Telnet doesn't support
it at all, and PuTTY's implementation is different: It negotiates, but
doesn't actually change modes, e.g. send in real time rather than use
its own editing. Unfortunately I know next to nothing about these
clients' implementation of RFC 1184 (or lack thereof).

If you are willing to divulge a little more information about what you
are building, maybe someone can suggest a more suitable solution.
Perhaps a custom client is your best bet.

Best,
Patrick

On Sun, Dec 4, 2011 at 04:22, Lee Orsino <lmorsino at gmail.com> wrote:
> Patrick,
>
> Thanks so much for that example, it was really helpful! I understand a
> little better about how the protocol works. I tested it on Linux, and it
> works just like you said. Perhaps not surprisingly I'm having some
> difficulty when running the server on Windows. When I do a
>
> self.will(chr(1)) # set echo mode
>
> I get "DO 1" in return from the client. This is what I would expect. But
> when I do
>
> self.do(LINEMODE) # ask client to negotiate LINEMODE
>
> I get "WONT LINEMODE" in return. I get this with both clients I'm testing
> with. If I send "WILL LINEMODE" I get "DONT LINEMODE" in return.
>
> So it seems no matter what I do, my clients aren't willing to negotiate
> about this. I'm using the same code as the Linux server.
>
> Anyway, thanks for everyone's help so far...! At least it is working in
> Linux. Does anyone know if I have to do anything special for Windows? Can
> anyone confirm it doesn't work in Win 7? Maybe I am missing some
> configuration property, or...?
>
> Thanks!
> Lee
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From m-lists at the-moon.net  Mon Dec  5 05:23:34 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 5 Dec 2011 12:23:34 +0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
Message-ID: <CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>

On 5 July 2011 08:31, Wolfgang <tds333+tx at gmail.com> wrote:
> just to note. If a move is preferred I give
> +1 for bitbucket (mercurial)

I thought it might be worth noting that CherryPy have recently
migrated their website from Trac to Bitbucket

 * https://groups.google.com/group/cherrypy-users/browse_thread/thread/80fa8504a2f247da?pli=1

Perhaps in a few months they will have some information about how
successful this has been.

Sorry to bring back an old topic and I know there has been a lot of
work done recently updating and improving the performance of the
Twisted Trac site.

-RichardW.



From exarkun at twistedmatrix.com  Mon Dec  5 06:21:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 05 Dec 2011 13:21:23 -0000
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to
	somewhere	nicer
In-Reply-To: <CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<CABefbUqjEVC2wp_MEqEaHK1+SzvA8QMOdUE9weUQKyxvQEMpiQ@mail.gmail.com>
Message-ID: <20111205132123.1778.866412882.divmod.xquotient.69@localhost.localdomain>

On 12:23 pm, m-lists at the-moon.net wrote:
>On 5 July 2011 08:31, Wolfgang <tds333+tx at gmail.com> wrote:
>>just to note. If a move is preferred I give
>>+1 for bitbucket (mercurial)
>
>I thought it might be worth noting that CherryPy have recently
>migrated their website from Trac to Bitbucket
>
>* https://groups.google.com/group/cherrypy- 
>users/browse_thread/thread/80fa8504a2f247da?pli=1
>
>Perhaps in a few months they will have some information about how
>successful this has been.
>
>Sorry to bring back an old topic and I know there has been a lot of
>work done recently updating and improving the performance of the
>Twisted Trac site.

Improvements to the trac deployment shouldn't be seen as a reason not to 
consider entirely new solutions.  Things can improve incrementally while 
plans are being made to improve them more drastically.

Jean-Paul



From glyph at twistedmatrix.com  Mon Dec  5 12:48:43 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 5 Dec 2011 14:48:43 -0500
Subject: [Twisted-Python] Log output formatting (was Re: logging
	question)
In-Reply-To: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>
References: <CAMBtMcu0xsD0TA9DwZMuyvq1TdKN46bFF=VmHBEKMLohKNQ4+w@mail.gmail.com>
Message-ID: <EEE2D905-B17B-478F-8528-8222099B387C@twistedmatrix.com>


On Dec 1, 2011, at 12:32 PM, Tom Sheffler wrote:

> 1) we use multiple logfiles.  one for *all* messages, and another for *special* messages.  It would be nice if the concept of multiple logfiles and the routing of messages to files was part of the system.

You could implement this by having a single log observer which delegated to multiple other observers, possibly with filters.

Sounds like a nice, simple, self-contained task that you could submit a patch for, if you wanted to  get it into Twisted :).  Please feel free to open a ticket with a patch.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111205/acdf9e32/attachment-0001.html>

From tenth at twistedmatrix.com  Wed Dec  7 19:05:12 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Wed, 7 Dec 2011 21:05:12 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December Edition
Message-ID: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>

The good news is that it's December, and we're hosting another Boston
Twisted Sprint!

The bad news is that it's going to be this Saturday, December 10th, and I'm
only just announcing it on the list now, due to last minute venue and
schedule change shenanigans.

This will be the last sprint that Exarkun can join us for in Boston,
though, so it's also your last chance to visit and bother him to review
your tickets in person!

As with the last few sprints, we'll be at the Smarterer.com offices in
South End Boston, from about 2:00 PM to 10:00 PM; If you're interested,
please contact me to be added to the official invitation (which includes
more specific info about how to get there, and gain access to the building,
which is locked on weekends).

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111207/3d4d35c7/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Dec  8 19:23:38 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 8 Dec 2011 21:23:38 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
Message-ID: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>

On Dec 7, 2011, at 9:05 PM, Tenth wrote:

> The good news is that it's December, and we're hosting another Boston Twisted Sprint!
> 
> The bad news is that it's going to be this Saturday, December 10th, and I'm only just announcing it on the list now, due to last minute venue and schedule change shenanigans.
> 
> This will be the last sprint that Exarkun can join us for in Boston, though, so it's also your last chance to visit and bother him to review your tickets in person!
> 
> As with the last few sprints, we'll be at the Smarterer.com offices in South End Boston, from about 2:00 PM to 10:00 PM; If you're interested, please contact me to be added to the official invitation (which includes more specific info about how to get there, and gain access to the building, which is locked on weekends).

I'll be there, and I'll be working on at least 2 exciting and mysterious features :).

If you've gotten an evite, please respond to it so we have an accurate headcount!

If you haven't gotten one, but you'd like to come, please send a personal message to myself or Tenth.

Also, for this sprint or for future sprints, if you're not in the Boston metro area, we'd love to co-ordinate with events in other cities.  If you'd like to host something but you've never organized a sprint before, there are many people on this list who would be happy to help you figure that out :).

-glyph





From tenth at twistedmatrix.com  Fri Dec  9 11:32:23 2011
From: tenth at twistedmatrix.com (Tenth)
Date: Fri, 9 Dec 2011 13:32:23 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
Message-ID: <CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ@mail.gmail.com>

I should also mention that the Sprint will now officially be starting at
Noon, if that makes it more convenient for anyone...

Thanks,

- Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111209/c24e4597/attachment.html>

From kevin.horn at gmail.com  Fri Dec  9 12:00:38 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 9 Dec 2011 13:00:38 -0600
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
Message-ID: <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>

On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:

>
> I'll be there, and I'll be working on at least 2 exciting and mysterious
> features :).
>

Exciting!  Mysterious!

Also, for this sprint or for future sprints, if you're not in the Boston
> metro area, we'd love to co-ordinate with events in other cities.  If you'd
> like to host something but you've never organized a sprint before, there
> are many people on this list who would be happy to help you figure that out
> :).
>
> -glyph
>

FYI, the DFW Pythoneers have a coding/presentation session every second
Saturday (where it doesn't conflict with anything really obvious, like
PyCon/PyTexas, etc.)

It's probably a bit too short notice this time to try to hijack the
meeting, but if you have future sprints on second Saturdays (this is at
least the second one, I don't know if that's by accident or design), I'm
happy to try to take it over in furtherance of Twisted.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111209/7fe48b10/attachment.html>

From augustocaringi at gmail.com  Fri Dec  9 14:20:44 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Fri, 9 Dec 2011 19:20:44 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
Message-ID: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>

Hi!

    I'm writing a software using Python Twisted with the following architecture:

    [server]<->[providers]

    The providers (that can be thousands) send events to the
centralized server, usually we have a few events per minute for each
provider, but a burst of events can happen.

    So I write a test provider to simulate the sending of millions of
events without any delay, via a thread like that:

    def stressTestTask():
        time.sleep(1)
        c = provider_reference
        for i in range(1000000):
            event = c.createTestEvent()
            reactor.callFromThread(c.transport.write, event)

    Then I started to analyze memory consumption while running this
test code, and I find out that the memory consumption grows to
gigabytes and finally a MemoryError exception raises:

        Traceback (most recent call last):
          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
line 84, in callWithLogger
            return callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
line 69, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 118, in callWithContext
            return self.currentContext().callWithContext(ctx, func, *args, **kw)
          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 81, in callWithContext
            return func(*args,**kw)
        --- <exception caught here> ---
          File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
            why = getattr(selectable, method)()
          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 177, in doWrite
            return Connection.doWrite(self)
          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
line 428, in doWrite
            result = abstract.FileDescriptor.doWrite(self)
          File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
line 199, in doWrite
            self.dataBuffer = buffer(self.dataBuffer, self.offset) +
"".join(self._tempDataBuffer)
        exceptions.MemoryError:

    After a search, I found this ticket:
http://twistedmatrix.com/trac/ticket/3682

    And I think that this is exact my problem.

    What's the best solution? Apply the patch attached on this ticket,
moving to a producer/consumer approach, or any other idea?

    Thanks!

-- 
Augusto Mecking Caringi



From itamar at itamarst.org  Fri Dec  9 14:31:11 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Fri, 9 Dec 2011 16:31:11 -0500
Subject: [Twisted-Python] MemoryError in
 twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
Message-ID: <5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>

>     What's the best solution? Apply the patch attached on this ticket,
> moving to a producer/consumer approach, or any other idea?

The patch will just delay the problem... you're creating a huge number of
strings, faster than the transport can write them out. The solution is
indeed to use the consumer API to pause creation of more data until the
transport clears its buffers.




From glyph at twistedmatrix.com  Fri Dec  9 23:37:48 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 10 Dec 2011 01:37:48 -0500
Subject: [Twisted-Python] Boston Twisted Sprint: Last-Minute December
	Edition
In-Reply-To: <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>
References: <CAKJpRM2HXDCqcXxqgSwYYgsii0WTKcQLqhLgQGCAab6gOx1sug@mail.gmail.com>
	<534A882F-56D0-4AAA-95C2-5835AD89C46E@twistedmatrix.com>
	<CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA@mail.gmail.com>
Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30@twistedmatrix.com>

On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:

> It's probably a bit too short notice this time to try to hijack the meeting,

Understandable.  Possibly worth a shot though ;)

> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),

It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months.  It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).

> I'm happy to try to take it over in furtherance of Twisted.

Twisted Prevails,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111210/937d9572/attachment.html>

From augustocaringi at gmail.com  Sat Dec 10 10:25:59 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Sat, 10 Dec 2011 15:25:59 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
Message-ID: <CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>

On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
>>     What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>
> The patch will just delay the problem... you're creating a huge number of
> strings, faster than the transport can write them out. The solution is
> indeed to use the consumer API to pause creation of more data until the
> transport clears its buffers.

Right, I will try with the consumer API.

But I have one last question:

In my previous example, the memory usage grows until a MemoryError exception.

But other scenario is when my "event send loop" iterates a high number
of times (but not enough to raise a exception) and then stops.

I expected that when the loop ends, all the strings would be flushed
and as a consequence, the memory usage of the process would return to
a normal level. But this does not happen... It's normal?

Thanks!

-- 
Augusto Mecking Caringi



From smferguson at gmail.com  Sat Dec 10 19:24:26 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sat, 10 Dec 2011 21:24:26 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
Message-ID: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>

Hi all,

A little intro first, I'm a developer by day,
sql/plsql/java/perl/c/c++/... I've been looking for an opensource
project to get to know and contribute to and came across twisted a
week or so ago. It looks pretty interesting, years ago I spent time
writing networking/remote access code.

Anyway, I want to help and am starting to look through the 'easy' bugs
- Python is pretty new to me so I figure that's where I should be. I
took a look at http://twistedmatrix.com/trac/ticket/4966, which might
be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
missing something there?

Also, does the email verification on the website work? I've tried it a
few times and haven't received an email, also nothing in my spam/trash
related to it - sorry if this shouldn't go to the list.

Thanks,
Scott Ferguson

On Sat, Dec 10, 2011 at 12:00 PM,
<twisted-python-request at twistedmatrix.com> wrote:
> Send Twisted-Python mailing list submissions to
>        twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>        twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>        twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>   1. Re: Boston Twisted Sprint: Last-Minute December   Edition (Tenth)
>   2. Re: Boston Twisted Sprint: Last-Minute December   Edition
>      (Kevin Horn)
>   3. MemoryError in    twisted.internet.abstract.FileDescriptor
>      (Augusto Mecking Caringi)
>   4. Re: MemoryError in twisted.internet.abstract.FileDescriptor
>      (Itamar Turner-Trauring)
>   5. Re: Boston Twisted Sprint: Last-Minute December   Edition (Glyph)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 9 Dec 2011 13:32:23 -0500
> From: Tenth <tenth at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>        December        Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>        <CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I should also mention that the Sprint will now officially be starting at
> Noon, if that makes it more convenient for anyone...
>
> Thanks,
>
> - Dave
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/c24e4597/attachment-0001.htm
>
> ------------------------------
>
> Message: 2
> Date: Fri, 9 Dec 2011 13:00:38 -0600
> From: Kevin Horn <kevin.horn at gmail.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>        December        Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID:
>        <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>
>>
>> I'll be there, and I'll be working on at least 2 exciting and mysterious
>> features :).
>>
>
> Exciting!  Mysterious!
>
> Also, for this sprint or for future sprints, if you're not in the Boston
>> metro area, we'd love to co-ordinate with events in other cities.  If you'd
>> like to host something but you've never organized a sprint before, there
>> are many people on this list who would be happy to help you figure that out
>> :).
>>
>> -glyph
>>
>
> FYI, the DFW Pythoneers have a coding/presentation session every second
> Saturday (where it doesn't conflict with anything really obvious, like
> PyCon/PyTexas, etc.)
>
> It's probably a bit too short notice this time to try to hijack the
> meeting, but if you have future sprints on second Saturdays (this is at
> least the second one, I don't know if that's by accident or design), I'm
> happy to try to take it over in furtherance of Twisted.
>
> Kevin Horn
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/7fe48b10/attachment-0001.htm
>
> ------------------------------
>
> Message: 3
> Date: Fri, 9 Dec 2011 19:20:44 -0200
> From: Augusto Mecking Caringi <augustocaringi at gmail.com>
> Subject: [Twisted-Python] MemoryError in
>        twisted.internet.abstract.FileDescriptor
> To: twisted-python at twistedmatrix.com
> Message-ID:
>        <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi!
>
>    I'm writing a software using Python Twisted with the following architecture:
>
>    [server]<->[providers]
>
>    The providers (that can be thousands) send events to the
> centralized server, usually we have a few events per minute for each
> provider, but a burst of events can happen.
>
>    So I write a test provider to simulate the sending of millions of
> events without any delay, via a thread like that:
>
>    def stressTestTask():
>        time.sleep(1)
>        c = provider_reference
>        for i in range(1000000):
>            event = c.createTestEvent()
>            reactor.callFromThread(c.transport.write, event)
>
>    Then I started to analyze memory consumption while running this
> test code, and I find out that the memory consumption grows to
> gigabytes and finally a MemoryError exception raises:
>
>        Traceback (most recent call last):
>          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
> line 84, in callWithLogger
>            return callWithContext({"system": lp}, func, *args, **kw)
>          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
> line 69, in callWithContext
>            return context.call({ILogContext: newCtx}, func, *args, **kw)
>          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
> line 118, in callWithContext
>            return self.currentContext().callWithContext(ctx, func, *args, **kw)
>          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
> line 81, in callWithContext
>            return func(*args,**kw)
>        --- <exception caught here> ---
>          File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
> line 146, in _doReadOrWrite
>            why = getattr(selectable, method)()
>          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
> line 177, in doWrite
>            return Connection.doWrite(self)
>          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
> line 428, in doWrite
>            result = abstract.FileDescriptor.doWrite(self)
>          File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
> line 199, in doWrite
>            self.dataBuffer = buffer(self.dataBuffer, self.offset) +
> "".join(self._tempDataBuffer)
>        exceptions.MemoryError:
>
>    After a search, I found this ticket:
> http://twistedmatrix.com/trac/ticket/3682
>
>    And I think that this is exact my problem.
>
>    What's the best solution? Apply the patch attached on this ticket,
> moving to a producer/consumer approach, or any other idea?
>
>    Thanks!
>
> --
> Augusto Mecking Caringi
>
>
>
> ------------------------------
>
> Message: 4
> Date: Fri, 9 Dec 2011 16:31:11 -0500
> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
> Subject: Re: [Twisted-Python] MemoryError in
>        twisted.internet.abstract.FileDescriptor
> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
> Message-ID:
>        <5252ce1aebff2c8409ffee1929227075.squirrel at webmail.zoteca.com>
> Content-Type: text/plain;charset=iso-8859-1
>
>>     What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>
> The patch will just delay the problem... you're creating a huge number of
> strings, faster than the transport can write them out. The solution is
> indeed to use the consumer API to pause creation of more data until the
> transport clears its buffers.
>
>
>
>
> ------------------------------
>
> Message: 5
> Date: Sat, 10 Dec 2011 01:37:48 -0500
> From: Glyph <glyph at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>        December        Edition
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30 at twistedmatrix.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:
>
>> It's probably a bit too short notice this time to try to hijack the meeting,
>
> Understandable.  Possibly worth a shot though ;)
>
>> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),
>
> It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months.  It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).
>
>> I'm happy to try to take it over in furtherance of Twisted.
>
> Twisted Prevails,
>
> -glyph
>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111210/937d9572/attachment-0001.htm
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 93, Issue 12
> **********************************************



From exarkun at twistedmatrix.com  Sat Dec 10 22:05:28 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Dec 2011 05:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1323579928.66.1816917297@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111211/61a53c5a/attachment.html>

From smferguson at gmail.com  Sun Dec 11 08:12:19 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sun, 11 Dec 2011 10:12:19 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
Message-ID: <CAHQmSHfMt4j_R+0=mrx=SJk1wv0yQjFdQ+m-BSLbGkVoeHvUxw@mail.gmail.com>

Scratch that bit about verification emails not sending, turns out it
works fine in firefox, not in chrome.
Thanks,
Scott

On Sat, Dec 10, 2011 at 9:24 PM, Scott M Ferguson <smferguson at gmail.com> wrote:
> Hi all,
>
> A little intro first, I'm a developer by day,
> sql/plsql/java/perl/c/c++/... I've been looking for an opensource
> project to get to know and contribute to and came across twisted a
> week or so ago. It looks pretty interesting, years ago I spent time
> writing networking/remote access code.
>
> Anyway, I want to help and am starting to look through the 'easy' bugs
> - Python is pretty new to me so I figure that's where I should be. I
> took a look at http://twistedmatrix.com/trac/ticket/4966, which might
> be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
> missing something there?
>
> Also, does the email verification on the website work? I've tried it a
> few times and haven't received an email, also nothing in my spam/trash
> related to it - sorry if this shouldn't go to the list.
>
> Thanks,
> Scott Ferguson
>
> On Sat, Dec 10, 2011 at 12:00 PM,
> <twisted-python-request at twistedmatrix.com> wrote:
>> Send Twisted-Python mailing list submissions to
>>        twisted-python at twistedmatrix.com
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> or, via email, send a message with subject or body 'help' to
>>        twisted-python-request at twistedmatrix.com
>>
>> You can reach the person managing the list at
>>        twisted-python-owner at twistedmatrix.com
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of Twisted-Python digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Re: Boston Twisted Sprint: Last-Minute December   Edition (Tenth)
>>   2. Re: Boston Twisted Sprint: Last-Minute December   Edition
>>      (Kevin Horn)
>>   3. MemoryError in    twisted.internet.abstract.FileDescriptor
>>      (Augusto Mecking Caringi)
>>   4. Re: MemoryError in twisted.internet.abstract.FileDescriptor
>>      (Itamar Turner-Trauring)
>>   5. Re: Boston Twisted Sprint: Last-Minute December   Edition (Glyph)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Fri, 9 Dec 2011 13:32:23 -0500
>> From: Tenth <tenth at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>>        December        Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID:
>>        <CAKJpRM0NWgs47FvsodcPKEBpX_D8fbnSGXQ+OSQp1+WiXWPknQ at mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> I should also mention that the Sprint will now officially be starting at
>> Noon, if that makes it more convenient for anyone...
>>
>> Thanks,
>>
>> - Dave
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/c24e4597/attachment-0001.htm
>>
>> ------------------------------
>>
>> Message: 2
>> Date: Fri, 9 Dec 2011 13:00:38 -0600
>> From: Kevin Horn <kevin.horn at gmail.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>>        December        Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID:
>>        <CA+U=zK3TBJBtV-asK7WjGjuwnaS0JT1+74srqBVX4w8CVW4McA at mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> On Thu, Dec 8, 2011 at 8:23 PM, Glyph <glyph at twistedmatrix.com> wrote:
>>
>>>
>>> I'll be there, and I'll be working on at least 2 exciting and mysterious
>>> features :).
>>>
>>
>> Exciting!  Mysterious!
>>
>> Also, for this sprint or for future sprints, if you're not in the Boston
>>> metro area, we'd love to co-ordinate with events in other cities.  If you'd
>>> like to host something but you've never organized a sprint before, there
>>> are many people on this list who would be happy to help you figure that out
>>> :).
>>>
>>> -glyph
>>>
>>
>> FYI, the DFW Pythoneers have a coding/presentation session every second
>> Saturday (where it doesn't conflict with anything really obvious, like
>> PyCon/PyTexas, etc.)
>>
>> It's probably a bit too short notice this time to try to hijack the
>> meeting, but if you have future sprints on second Saturdays (this is at
>> least the second one, I don't know if that's by accident or design), I'm
>> happy to try to take it over in furtherance of Twisted.
>>
>> Kevin Horn
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111209/7fe48b10/attachment-0001.htm
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Fri, 9 Dec 2011 19:20:44 -0200
>> From: Augusto Mecking Caringi <augustocaringi at gmail.com>
>> Subject: [Twisted-Python] MemoryError in
>>        twisted.internet.abstract.FileDescriptor
>> To: twisted-python at twistedmatrix.com
>> Message-ID:
>>        <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg at mail.gmail.com>
>> Content-Type: text/plain; charset=ISO-8859-1
>>
>> Hi!
>>
>>    I'm writing a software using Python Twisted with the following architecture:
>>
>>    [server]<->[providers]
>>
>>    The providers (that can be thousands) send events to the
>> centralized server, usually we have a few events per minute for each
>> provider, but a burst of events can happen.
>>
>>    So I write a test provider to simulate the sending of millions of
>> events without any delay, via a thread like that:
>>
>>    def stressTestTask():
>>        time.sleep(1)
>>        c = provider_reference
>>        for i in range(1000000):
>>            event = c.createTestEvent()
>>            reactor.callFromThread(c.transport.write, event)
>>
>>    Then I started to analyze memory consumption while running this
>> test code, and I find out that the memory consumption grows to
>> gigabytes and finally a MemoryError exception raises:
>>
>>        Traceback (most recent call last):
>>          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
>> line 84, in callWithLogger
>>            return callWithContext({"system": lp}, func, *args, **kw)
>>          File "/usr/lib/python2.5/site-packages/twisted/python/log.py",
>> line 69, in callWithContext
>>            return context.call({ILogContext: newCtx}, func, *args, **kw)
>>          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
>> line 118, in callWithContext
>>            return self.currentContext().callWithContext(ctx, func, *args, **kw)
>>          File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
>> line 81, in callWithContext
>>            return func(*args,**kw)
>>        --- <exception caught here> ---
>>          File "/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py",
>> line 146, in _doReadOrWrite
>>            why = getattr(selectable, method)()
>>          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
>> line 177, in doWrite
>>            return Connection.doWrite(self)
>>          File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py",
>> line 428, in doWrite
>>            result = abstract.FileDescriptor.doWrite(self)
>>          File "/usr/lib/python2.5/site-packages/twisted/internet/abstract.py",
>> line 199, in doWrite
>>            self.dataBuffer = buffer(self.dataBuffer, self.offset) +
>> "".join(self._tempDataBuffer)
>>        exceptions.MemoryError:
>>
>>    After a search, I found this ticket:
>> http://twistedmatrix.com/trac/ticket/3682
>>
>>    And I think that this is exact my problem.
>>
>>    What's the best solution? Apply the patch attached on this ticket,
>> moving to a producer/consumer approach, or any other idea?
>>
>>    Thanks!
>>
>> --
>> Augusto Mecking Caringi
>>
>>
>>
>> ------------------------------
>>
>> Message: 4
>> Date: Fri, 9 Dec 2011 16:31:11 -0500
>> From: "Itamar Turner-Trauring" <itamar at itamarst.org>
>> Subject: Re: [Twisted-Python] MemoryError in
>>        twisted.internet.abstract.FileDescriptor
>> To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
>> Message-ID:
>>        <5252ce1aebff2c8409ffee1929227075.squirrel at webmail.zoteca.com>
>> Content-Type: text/plain;charset=iso-8859-1
>>
>>>     What's the best solution? Apply the patch attached on this ticket,
>>> moving to a producer/consumer approach, or any other idea?
>>
>> The patch will just delay the problem... you're creating a huge number of
>> strings, faster than the transport can write them out. The solution is
>> indeed to use the consumer API to pause creation of more data until the
>> transport clears its buffers.
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 5
>> Date: Sat, 10 Dec 2011 01:37:48 -0500
>> From: Glyph <glyph at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Boston Twisted Sprint: Last-Minute
>>        December        Edition
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Message-ID: <125F2D03-7126-4FE2-BED4-14F4FC2FFD30 at twistedmatrix.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> On Dec 9, 2011, at 2:00 PM, Kevin Horn wrote:
>>
>>> It's probably a bit too short notice this time to try to hijack the meeting,
>>
>> Understandable.  Possibly worth a shot though ;)
>>
>>> but if you have future sprints on second Saturdays (this is at least the second one, I don't know if that's by accident or design),
>>
>> It's just so happened that this is the day that works out the best for those of us who have been attending these last couple of months.  It's not clear if that will continue - it's more likely that we'll move to Sundays at some point to work around this one jerk's World of Warcraft raid schedule (not a joke, and you can probably guess who it is).
>>
>>> I'm happy to try to take it over in furtherance of Twisted.
>>
>> Twisted Prevails,
>>
>> -glyph
>>
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20111210/937d9572/attachment-0001.htm
>>
>> ------------------------------
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>> End of Twisted-Python Digest, Vol 93, Issue 12
>> **********************************************



From glyph at twistedmatrix.com  Sun Dec 11 11:29:06 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 11 Dec 2011 13:29:06 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
Message-ID: <589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>


On Dec 10, 2011, at 9:24 PM, Scott M Ferguson wrote:

> A little intro first, I'm a developer by day,
> sql/plsql/java/perl/c/c++/... I've been looking for an opensource
> project to get to know and contribute to and came across twisted a
> week or so ago. It looks pretty interesting, years ago I spent time
> writing networking/remote access code.

Glad to hear it, welcome :).

> Anyway, I want to help and am starting to look through the 'easy' bugs
> - Python is pretty new to me so I figure that's where I should be. I
> took a look at http://twistedmatrix.com/trac/ticket/4966, which might
> be out-of-date. I don't see __all__ in twisted.web.server.py. Am I
> missing something there?

Nope.  __all__ should typically be defined on public modules, just as a hint for documentation and tools, so that's why the ticket sort of refers to it as if it's there.  But twisted/web/server.py is a super old module, one that predates most of the documentation 

Really the thing to do with that ticket is to put a @var declaration into the module docstring, though.  That should be a pretty trivial patch, to help you get comfortable with the process and the tools :).

Feel free to ask if you have any other questions about contributing,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111211/908b85fe/attachment-0001.html>

From exarkun at twistedmatrix.com  Sun Dec 11 12:11:17 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Dec 2011 19:11:17 -0000
Subject: [Twisted-Python] MemoryError
	in	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
Message-ID: <20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>

On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
><itamar at itamarst.org> wrote:
>>>� � What's the best solution? Apply the patch attached on this 
>>>ticket,
>>>moving to a producer/consumer approach, or any other idea?
>>
>>The patch will just delay the problem... you're creating a huge number 
>>of
>>strings, faster than the transport can write them out. The solution is
>>indeed to use the consumer API to pause creation of more data until 
>>the
>>transport clears its buffers.
>
>Right, I will try with the consumer API.
>
>But I have one last question:
>
>In my previous example, the memory usage grows until a MemoryError 
>exception.
>
>But other scenario is when my "event send loop" iterates a high number
>of times (but not enough to raise a exception) and then stops.
>
>I expected that when the loop ends, all the strings would be flushed
>and as a consequence, the memory usage of the process would return to
>a normal level. But this does not happen... It's normal?

Data may or may not be put onto the network as you are directing a 
transport to write it.  It's up to the particular transport 
implementation to decide on buffering logic, including logic about 
whether data is sent immediately when a write() call is, or only later 
after control returns to the event loop.

As of Twisted 11.1, the posix-based reactor implementations all buffer 
data until control is returned to the event loop.  This has been the 
case for some time, but not _all_ time, and it may change in the future.

Jean-Paul



From smferguson at gmail.com  Sun Dec 11 17:29:27 2011
From: smferguson at gmail.com (Scott M Ferguson)
Date: Sun, 11 Dec 2011 19:29:27 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 93, Issue 12
In-Reply-To: <589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>
References: <mailman.5.1323536401.29614.twisted-python@twistedmatrix.com>
	<CAHQmSHdteLBHBJiWeQJCv7r-4Nt-MUUYZFNicdY-=XVHSJcV4A@mail.gmail.com>
	<589B147F-0459-42E4-AD9D-E4E7F1276E3E@twistedmatrix.com>
Message-ID: <CAHQmSHfvDppAwbD1RWi96xsNHp259B3uyRLjHndAoPW4a83dTA@mail.gmail.com>

> On Dec 10, 2011, at 9:24 PM, Scott M Ferguson wrote:
>
>
> Nope.  __all__ should typically be defined on public modules, just as a hint
> for documentation and tools, so that's why the ticket sort of refers to it
> as if it's there.  But twisted/web/server.py is a super old module, one that
> predates most of the documentation
>
> Really the thing to do with that ticket is to put a @var declaration into
> the module docstring, though.  That should be a pretty trivial patch, to
> help you get comfortable with the process and the tools :).
>
> Feel free to ask if you have any other questions about contributing,
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Thanks for the response, as you mentioned that sounds like a good
place to get comfortable with the process - I'll start there and ping
the list as questions come up.

Thanks,
Scott



From andrewfr_ice at yahoo.com  Sun Dec 11 20:05:54 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 11 Dec 2011 19:05:54 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with Stackless
	and Twisted
Message-ID: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>

Hi Folks:

I don't know what to file this under but here goes:

Santa repeatedly sleeps until wakened by either all of his nine 
reindeer, back from their holidays, or by a group of three of his ten 
elves. If awakened by the reindeer, he harnesses each of them to his 
sleigh, delivers toys with them and finally unharnesses them (allowing 
them to go off on holiday). If awakened by a group of elves, he shows 
each of the group into his study, consults with them on toy R&D and 
finally shows them each out (allowing them to go back to work). Santa 
should give priority to the reindeer in the case that there is both a 
group of elves and a group of reindeer waiting 

I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.


The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.  I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is: 
def santa(reindeer, elves):
    joinObject = stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
                                  addPattern([ch for _, ch, _ in elves],3)

    reindeerPattern, elfPattern = joinObject.patterns

    while True:
        pattern = joinObject.join()
        if reindeerPattern.ready():
            print "*** REINDEER GET PRIORITY ***"
            reindeerPattern.join()
            pattern = reindeerPattern
        if pattern is reindeerPattern:
            harness(reindeerPattern)
            deliveryToys(reindeerPattern)
            unharness(reindeerPattern)
        elif pattern is elfPattern:
            consultWithSanta(elfPattern)

    stopTwisted()

In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used). 

def tick(seconds):
    tickCh = stackless.channel()
    reactor.callLater(seconds, tickCh.send, None)
    tickCh.receive()

However I could just as easily make reindeer and elves web services or RestFull interfaces. I am still working on the  Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111211/5c526a94/attachment.html>

From shhgs.efhilt at gmail.com  Mon Dec 12 21:15:30 2011
From: shhgs.efhilt at gmail.com (shhgs)
Date: Mon, 12 Dec 2011 23:15:30 -0500
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
 Stackless and Twisted
In-Reply-To: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
Message-ID: <20111213041530.GB11352@laptop.huang.net>

reindeers = dict( rudolf = defer.Deferred()
                , ....
                )
arrivedElvs = []
threeElvsArrived = defer.Deferred()

def onReindeerArrive(who):
    reindeer[who].callback(True)

def onElvArrive(elv):
    global arrivedElvs
    if len(arrivedElvs) <= 1:
        arrivedElvs.append(elv)
    elif len(arrivedElvs) == 2:
        arrivedElvs.append(elv)
        threeElvsArrived.callback(arrivedElvs)
    else:
        pass

defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
elvsArrived.addCallback(playWithElvs)

Above is my pseudo code.  It's not clear if Santa will respond to only to one
of these two events. If so, you may block the other when one get fired.  I
think Twisted's approach is pretty elegant.



On Sun, Dec 11, 2011 at 07:05:54PM -0800, Andrew Francis wrote:
> Hi Folks:
>
> I don't know what to file this under but here goes:
>
> Santa repeatedly sleeps until wakened by either all of his nine
> reindeer, back from their holidays, or by a group of three of his ten
> elves. If awakened by the reindeer, he harnesses each of them to his
> sleigh, delivers toys with them and finally unharnesses them (allowing
> them to go off on holiday). If awakened by a group of elves, he shows
> each of the group into his study, consults with them on toy R&D and
> finally shows them each out (allowing them to go back to work). Santa
> should give priority to the reindeer in the case that there is both a
> group of elves and a group of reindeer waiting
>
> I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.
>
>
> The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.  I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is: 
> def santa(reindeer, elves):
>     joinObject = stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
>                                   addPattern([ch for _, ch, _ in elves],3)
>
>     reindeerPattern, elfPattern = joinObject.patterns
>
>     while True:
>         pattern = joinObject.join()
>         if reindeerPattern.ready():
>             print "*** REINDEER GET PRIORITY ***"
>             reindeerPattern.join()
>             pattern = reindeerPattern
>         if pattern is reindeerPattern:
>             harness(reindeerPattern)
>             deliveryToys(reindeerPattern)
>             unharness(reindeerPattern)
>         elif pattern is elfPattern:
>             consultWithSanta(elfPattern)
>
>     stopTwisted()
>
> In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used).
>
> def tick(seconds):
>     tickCh = stackless.channel()
>     reactor.callLater(seconds, tickCh.send, None)
>     tickCh.receive()
>
> However I could just as easily make reindeer and elves web services or RestFull interfaces. I am still working on the  Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.
>
> Cheers,
> Andrew

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From tobias.oberstein at tavendo.de  Tue Dec 13 09:58:30 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 13 Dec 2011 08:58:30 -0800
Subject: [Twisted-Python] Autobahn WebSockets 0.4.10
Message-ID: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>

Hi,

Autobahn WebSockets 0.4.10 is done:

+ various improvements to RPC / PubSub
+ RFC 6455 support
+ kqueue support on BSD
+ various smaller issues fixed
+ demos updated, docs improved

Special thanks to Peter Thorson for RFC6455 changes and test cases.

Cheers,
Tobias

Project Link:  http://www.tavendo.de/autobahn
Package:  http://pypi.python.org/pypi/autobahn
Docs: http://www.tavendo.de/autobahn/doc/python/index.html
Source: https://github.com/oberstet/Autobahn



From andrewfr_ice at yahoo.com  Tue Dec 13 12:04:09 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Tue, 13 Dec 2011 11:04:09 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
	<20111213041530.GB11352@laptop.huang.net> 
Message-ID: <1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>



From: shhgs <shhgs.efhilt at gmail.com>
To: Andrew Francis <andrewfr_ice at yahoo.com>; Twisted general discussion <twisted-python at twistedmatrix.com> 
Sent: Monday, December 12, 2011 11:15 PM
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with Stackless and Twisted

Hi Shhgs:

>defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
>elvsArrived.addCallback(playWithElvs)

>Above is my pseudo code.  It's not clear if Santa will respond to only to one
>of these two events. If so, you may block the other when one get fired.  I
>think Twisted's approach is pretty elegant.


Cool!

Okay, I understand your approach: you count the elves and then the right number arrive, you wake Santa.

Twisted does have one important ingredient for solving Santa Claus: a join mechanism in the form of a deferred list. Also the non-preemptive nature of the reactor guards against a lot of the problems in another solution. In this regard, I think a Twisted solution may be more efficient than most Python mechanisms out there.

The main problem I see with a pure Twisted solution is that it really can't impose the priority rule. Perhaps the  way the reactor works makes priority somewhat moot.  Let's assume we could put timestamps on elves and reindeer arrival times (or force reindeer and elves to arrival at specific times).

Now at time T, there are eight reindeer and two elves ready. At T+1, an additional  reindeer and elf are ready (their timestamps are the same, timer resolution notwithstanding). However the Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from inside the callback, one could check to see if nine reindeer were indeed ready.

Also I suspect once you actually coded out the solution, the ancillary things (looping, callLater) would make the code more difficult to read. However that is minor compared to aforementioned problem. 

Cheers,
Andrew


________________________________
From: shhgs <shhgs.efhilt at gmail.com>
To: Andrew Francis <andrewfr_ice at yahoo.com>; Twisted general discussion <twisted-python at twistedmatrix.com> 
Sent: Monday, December 12, 2011 11:15 PM
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with Stackless and Twisted

reindeers = dict( rudolf = defer.Deferred()
                , ....
                )
arrivedElvs = []
threeElvsArrived = defer.Deferred()

def onReindeerArrive(who):
    reindeer[who].callback(True)

def onElvArrive(elv):
    global arrivedElvs
    if len(arrivedElvs) <= 1:
        arrivedElvs.append(elv)
    elif len(arrivedElvs) == 2:
        arrivedElvs.append(elv)
        threeElvsArrived.callback(arrivedElvs)
    else:
        pass

defer.DeferredList(reindeers.values()).addCallback(lambda _ : True).addCallback(playWithReindeers)
elvsArrived.addCallback(playWithElvs)

Above is my pseudo code.  It's not clear if Santa will respond to only to one
of these two events. If
so, you may block the other when one get fired.  I
think Twisted's approach is pretty elegant.



On Sun, Dec 11, 2011 at 07:05:54PM -0800, Andrew Francis wrote:
> Hi Folks:
>
> I don't know what to file this under but here goes:
>
> Santa repeatedly sleeps until wakened by either all of his nine
> reindeer, back from their holidays, or by a group of three of his ten
> elves. If awakened by the reindeer, he harnesses each of them to his
> sleigh, delivers toys with them and finally unharnesses them (allowing
> them to go off on holiday). If awakened by a group of elves, he shows
> each of the group into his study, consults with them on toy R&D and
> finally shows them each out (allowing them to go back to work). Santa
> should give priority to the reindeer in the case that there is both a
> group of elves and a group of reindeer waiting
>
>
I recently modified the stackless.py library to support yet another new concurrency feature: join patterns. Well I think of my version as a sawed-off version of join patterns. Join patterns are a synchronization and message passing construct. The closest thing to a join pattern in Twisted is a deferred list. Stackless has nothing of the sort.
>
>
> The Santa Claus Problem is a notorious problem in concurrency (http://www.youtube.com/watch?v=pqO6tKN2lc4). I have come up with a relatively short solution.  I think one would be hard pressed to come up with a shorter solution in Python. My desire was to compete with Simon Peyton Jones Haskell version in "Beautiful Code." The full solution is here: http://andrewfr.wordpress.com/2011/11/30/the-santa-claus-problem-with-join-patterns. The nucleus is: 
> def santa(reindeer, elves):
>     joinObject =
stackless.join().addPattern([ch for _, ch, _ in reindeer]).\
>                                   addPattern([ch for _, ch, _ in elves],3)
>
>     reindeerPattern, elfPattern = joinObject.patterns
>
>     while True:
>         pattern = joinObject.join()
>         if reindeerPattern.ready():
>             print "*** REINDEER GET PRIORITY ***"
>             reindeerPattern.join()
>             pattern = reindeerPattern
>         if
pattern is reindeerPattern:
>             harness(reindeerPattern)
>             deliveryToys(reindeerPattern)
>             unharness(reindeerPattern)
>         elif pattern is elfPattern:
>             consultWithSanta(elfPattern)
>
>     stopTwisted()
>
> In this solution I use Twisted to control the timer (I use the blockOn technique that Christopher Armstrong first used).
>
> def tick(seconds):
>     tickCh = stackless.channel()
>     reactor.callLater(seconds, tickCh.send, None)
>     tickCh.receive()
>
> However I could just as easily make
reindeer and elves web services or RestFull interfaces. I am still working on the  Join Pattern API. Also it has also been a goal of mine to write a stacklessreactor to better integrate Stackless with the Twisted Reactor.
>
> Cheers,
> Andrew

> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Dec 13 20:24:14 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 13 Dec 2011 22:24:14 -0500
Subject: [Twisted-Python] Autobahn WebSockets 0.4.10
In-Reply-To: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D42D0D637CDD@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7379DBFE-16C8-4BA4-A71E-DAE64D3C1C7F@twistedmatrix.com>

On Dec 13, 2011, at 11:58 AM, Tobias Oberstein wrote:

> Hi,
> 
> Autobahn WebSockets 0.4.10 is done:
> 
> + various improvements to RPC / PubSub
> + RFC 6455 support
> + kqueue support on BSD
> + various smaller issues fixed
> + demos updated, docs improved
> 
> Special thanks to Peter Thorson for RFC6455 changes and test cases.
> 
> Cheers,
> Tobias
> 
> Project Link:  http://www.tavendo.de/autobahn
> Package:  http://pypi.python.org/pypi/autobahn
> Docs: http://www.tavendo.de/autobahn/doc/python/index.html
> Source: https://github.com/oberstet/Autobahn

Congratulations on another release, and thanks again for choosing Twisted for your network infrastructure :).

-glyph




From glyph at twistedmatrix.com  Tue Dec 13 21:45:54 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 13 Dec 2011 23:45:54 -0500
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
In-Reply-To: <1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>
	<20111213041530.GB11352@laptop.huang.net>
	<1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
Message-ID: <F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>

On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:

> Now at time T, there are eight reindeer and two elves ready. At T+1, an additional  reindeer and elf are ready (their timestamps are the same, timer resolution notwithstanding). However the Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from inside the callback, one could check to see if nine reindeer were indeed ready.

This strikes me as a problem with the way that quantum physics works more than the way that Twisted's reactor works :).  Broadly speaking, no two events can happen at the exact same time; even if they did, relativity says you wouldn't be able to tell if they happened at the exact same time unless they also happened to be exactly the same distance away from you.  (But then "you" would have to be exactly one atom big, which is a pretty demanding size to build a sensor.)

Even if it were possible in reality, once a network gets involved, you have a bunch of additional bits of technology serializing everything.  If your computer has one ethernet card, the reindeer and the elves have to report their readiness either in separate ethernet frames in one order or the other, or in one order or another within the same ethernet frame.  (If it has two ethernet cards, you still only have one PCI bus, et cetera.)

Despite the fundamentally sequential nature of reality, Twisted reactor's scheduling mechanism does leave some things to be desired; the quantum time-slice of Twisted is effectively one reactor iteration, and there aren't really any tools for working with those.  There's some latency between becoming aware of some work that needs to be done (select(), or your chosen multiplexor, returning) and actually doing the work (calling doRead, doWrite, or your timed event), but you don't get to decide on priorities once Twisted's aware of the work; they're executed in a quasi-arbitrary order.

Ultimately however, the order of the work will be arbitrary; if it's not influenced by the vagaries of Twisted's scheduler, it will be influenced by something in the kernel scheduler that you don't understand or can't control, or in the IP stack, or in a switch on your network, or in your hosting provider's firewall configuration, or something on a client machine that you truly have no influence over at all.  Having something give priority to an event that occurs at "the same" time given all of these potential sources of interference is basically pointless.

The only reason that the Santa problem, expressed as a thread-synchronization problem, has to deal with "simultaneous" arrival of 9 reindeer and 3 elves is a quirk of thread scheduling: the Santa thread can be ready to run but not running.  When the final reindeer arrives, a final elf may arrive before the scheduler decides it's time to give Santa a chance to run, and then Santa has the opportunity to make the choice between the two.  In an event-driven system, this state doesn't naturally exist: when you call Deferred.callback(), the callback runs the relevant application code immediately.

Even in a preemptively threaded system though, the notion of simultaneity is pretty arbitrary; you don't get much control over how long Santa will be left in the ready-to-run-but-not-running state.  If you really care about Santa giving priority to the reindeer, then the system requires another input: how long should Santa sleep after the elves become ready, before deciding to go with the elves rather than the reindeer?  Effectively in a threaded system Santa is sleeping, just for a very small and not configurable amount of time.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111213/ef77e3c1/attachment.html>

From johann.borck at densedata.com  Wed Dec 14 08:31:11 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Wed, 14 Dec 2011 16:31:11 +0100
Subject: [Twisted-Python] How to Solve a Problem Like Santa
 with	Stackless and Twisted
In-Reply-To: <F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>
References: <1323659154.8831.YahooMailNeo@web120704.mail.ne1.yahoo.com>	<20111213041530.GB11352@laptop.huang.net>	<1323803049.95250.YahooMailNeo@web120706.mail.ne1.yahoo.com>
	<F1901420-DAD9-4879-8E65-CAFC123BACA4@twistedmatrix.com>
Message-ID: <4EE8C13F.4020405@densedata.com>

On 12/14/2011 05:45 AM, Glyph wrote:
> On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:
>
>> Now at time T, there are eight reindeer and two elves ready. At T+1, an additional  reindeer and 
>> elf are ready (their timestamps are the same, timer resolution notwithstanding). However the 
>> Twisted reactor will serialise the events and trigger the callback. For argument, let us pretend 
>> the elvesArrive callback is activated and that wakes Santa. Santa consults with the elves. The 
>> problem is that all nine reindeer were ready and the priority rule is broken. I am not sure, from 
>> inside the callback, one could check to see if nine reindeer were indeed ready.
>
> This strikes me as a problem with the way that quantum physics works more than the way that 
> Twisted's reactor works :).  Broadly speaking, no two events can happen at the /exact/ same time; 
> even if they did, relativity says you wouldn't be able to /tell/ if they happened at the exact 
> same time unless they also happened to be exactly the same distance away from you.  (But then 
> "you" would have to be exactly one atom big, which is a pretty demanding size to build a sensor.)
> [...]
> Ultimately however, the order of the work /will/ be arbitrary; if it's not influenced by the 
> vagaries of Twisted's scheduler, it will be influenced by something in the kernel scheduler that 
> you don't understand or can't control, or in the IP stack, or in a switch on your network, or in 
> your hosting provider's firewall configuration, or something on a client machine that you truly 
> have no influence over at all.  Having something give priority to an event that occurs at "the 
> same" time given all of these potential sources of interference is basically pointless.
>
Isn't that  what logical clocks, using e.g. Lamport timestamps are for? What can be done is letting 
the events happen, wait for another logical tick, possibly triggered by a timeout to prevent 
starvation, looking at the events that have been collected and identified, but not processed yet, 
treating a certain maximum N of logical ticks as "simultaneous" and then decide on how to prioritize 
processing, based on arbitrary rules you choose.

regards,
Johann
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111214/167d6bed/attachment.html>

From andrewfr_ice at yahoo.com  Wed Dec 14 12:24:21 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 14 Dec 2011 11:24:21 -0800 (PST)
Subject: [Twisted-Python] How to Solve a Problem Like Santa with
	Stackless and Twisted
In-Reply-To: <mailman.8295.1323876685.5291.twisted-python@twistedmatrix.com>
References: <mailman.8295.1323876685.5291.twisted-python@twistedmatrix.com>
Message-ID: <1323890661.38843.YahooMailNeo@web120705.mail.ne1.yahoo.com>

Hi Glyph:

Message: 3
Date: Tue, 13 Dec 2011 23:45:54 -0500
From: Glyph <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] How to Solve a Problem Like Santa with
    Stackless and Twisted
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <F1901420-DAD9-4879-8E65-CAFC123BACA4 at twistedmatrix.com>
Content-Type: text/plain; charset="iso-8859-1"

On Dec 13, 2011, at 2:04 PM, Andrew Francis wrote:

Hi Glyph:

G>The only reason that the 
Santa problem, expressed as a thread-synchronization problem, has to 
deal with G>"simultaneous" arrival of 9 reindeer and 3 elves is a quirk of
 thread scheduling: the Santa thread can be ready to run G>but not 
running.  When the final reindeer arrives, a final elf may arrive before
 the scheduler decides it's time to give G>Santa a chance to run, and then
 Santa has the opportunity to make the choice between the two. 

I agree: it is the scheduler that introduces quirks. Not that it matters but the important edge case is when three elves have arrived. Santa is awoken and placed on the queue. However additional reindeer have arrived bringing the count to nine. So when Santa runs, both the group of nine reindeer and group of three elves are ready. Hence the need for Santa to check when he is awake. In reality, I have to leave the programme running for a  long time to see this happen.

G>In an 
event-driven system, this state doesn't naturally exist: when you call 
Deferred.callback(), the callback runs the G>relevant application code 
immediately.

In regards to Stackless, if I wanted to greatly simplify the problem, I would immediately schedule Santa once reindeer or a group of elves were ready. This is what Twisted is doing. Perhaps in a real-life case, this would be the correct action since it is obvious that Santa is a high priority task. However I am trying to be true to the original problem. Also a good solution should not depend on scheduling tricks.

Otherwise Twisted with deferred lists would otherwise be pretty effective. Again the secret sauce is that deferred lists are a join pattern of sorts. The component is that Twisted is essentially a non-preemptive first come first served scheduler. This behaviour also simplifies the problem.

G>Despite
 the fundamentally sequential nature of reality, 

Maybe this is the reality of computers based on von Neuman architecture. However reality is fundamentally concurrent.

G>Twisted reactor's 
scheduling mechanism does leave somethings to be desired; the quantum 
time-slice of Twisted is G>effectively one reactor iteration, and there 
aren't really any tools for working with those.  There's some latency 
G>between becoming aware of some work that needs to be done (select(), or 
your chosen multiplexor, returning) and G>actually doing the work (calling
 doRead, doWrite, or your timed event), but you don't get to decide on 
priorities once G>Twisted's aware of the work; they're executed in a 
quasi-arbitrary order.

I feel a Twisted callback and a Stackless tasklet in non-preemptive mode suffer from a bigger problem: one does not know how long the code fragment will execute. The programmer is betting that the CPU slice will be relatively short. An additional assumption is that all tasklets/callbacks are created equally (actually in Stackless, one can use preferences to give some tasklets a limited priority). I feel the reason we have sophisticated schedulers is when throughput and fairness are a big deal. 

G>Ultimately however, the order of the work 
will be arbitrary; if it's not influenced by the vagaries of Twisted's 
scheduler, G>it will be influenced by something in the kernel scheduler 
that you don't understand or can't control, or in the IP stack, G>or in a 
switch on your network, or in your hosting provider's firewall 
configuration, or something on a client machine G>that you truly have no 
influence over at all.  Having something give priority to an event that 
occurs at "the same" G>time given all of these potential sources of 
interference is basically pointless.

I am not an expect in real-time systems. However I would argue that at a pragmatic level,  timestamps have to be of a resolution that allows the application to make reasonable decisions. So if the application is measuring time in seconds to say two decimal places, as far as the application is concerned, it can have a reindeer and elf arriving at the same time if they have the same timestamps.  

Perhaps my original example leaves something to be desired. However my point still remains. If we constructed a schedule so that the ninth reindeer always arrived at T+11 seconds and three elves always arrived at T+9, T+10, and T+11 seconds, it would be a coin toss in Twisted as to whether reindeer or elves were serviced. Rather than a reindeer being in a queue, in Twisted, its file descriptor would be in a reader set. All I can say is that a Twisted solution would be unbiased (or biased towards elves if there we are playing with 10 of them). When the problem requires it is biased towards reindeer. If one had a burning desire, we could construct cases to measure if there was a bias.

Cheers,
Andrew




From augustocaringi at gmail.com  Wed Dec 14 13:34:45 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 14 Dec 2011 18:34:45 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
Message-ID: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>

On Sun, Dec 11, 2011 at 5:11 PM,  <exarkun at twistedmatrix.com> wrote:
> On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>>
>> On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
>> <itamar at itamarst.org> wrote:
>>>>
>>>>     What's the best solution? Apply the patch attached on this ticket,
>>>> moving to a producer/consumer approach, or any other idea?
>>>
>>>
>>> The patch will just delay the problem... you're creating a huge number of
>>> strings, faster than the transport can write them out. The solution is
>>> indeed to use the consumer API to pause creation of more data until the
>>> transport clears its buffers.
>>
>>
>> Right, I will try with the consumer API.
>>
>> But I have one last question:
>>
>> In my previous example, the memory usage grows until a MemoryError
>> exception.
>>
>> But other scenario is when my "event send loop" iterates a high number
>> of times (but not enough to raise a exception) and then stops.
>>
>> I expected that when the loop ends, all the strings would be flushed
>> and as a consequence, the memory usage of the process would return to
>> a normal level. But this does not happen... It's normal?
>
>
> Data may or may not be put onto the network as you are directing a transport
> to write it.  It's up to the particular transport implementation to decide
> on buffering logic, including logic about whether data is sent immediately
> when a write() call is, or only later after control returns to the event
> loop.
>
> As of Twisted 11.1, the posix-based reactor implementations all buffer data
> until control is returned to the event loop.  This has been the case for
> some time, but not _all_ time, and it may change in the future.
>
> Jean-Paul

Hi!

I understand...

But I'm not convinced.

I found this post on Stackoverflow:
http://stackoverflow.com/questions/4078084/memory-leak-in-python-twisted-where-is-it

The problem that I am facing is the same.

Under heavy load my Twisted based server "leaks memory". Under normal
load its all ok.

Explaining better: Under heavy load the memory usage grows, but when
the load returns to a normal level, the memory usage remains high.

I forgot to say in the previous emails, but the communication is done over SSL.

I'm not a Python specialist, I am a C engineer... But I'm trying to
find out where is the problem with tools like Heapy, meliae, etc.

Meliae gave me this report:

Total 62008 objects, 126 types, Total size = 86.2MiB (90437121 bytes)
 Index   Count   %      Size   % Cum     Max Kind
     0   39061  62  87827505  97  9753120905 str
     1    1682   2    896912   0  98  393352 dict
     2   10067  16    382028   0  98     224 tuple
     3     164   0    246656   0  98    6304 module
     4     422   0    183992   0  99     436 type
     5    2504   4    170272   0  99      68 code

As expected... The problem are the strings that are never freed.

So I tried to tracking this strings, and this let me to this:

>>> om[3082188716]
TLSConnection(3082188716 548B 35refs 38par)

>>> om[3082188716].c
[str(3082713312 39B 8par '_tempDataBuffer'), list(3082225612 112704B
26680refs 1par), str(3086791008 30B 54par 'fileno'),
instancemethod(3084243748 36B 3refs 1par), str(3084439680 32B 58par
'protocol'), Provider(3082216172 552B 23refs 4par), str(3084439648 31B
100par 'reactor'), SelectReactor(3082464620 548B 43refs 21par),
str(3082712592 37B 6par '_userWantRead'), bool(40623276 12B 94par
'True'), str(3082713272 34B 8par 'dataBuffer'), str(2917687304
53120905B 1par 'ype: Test\nDate: 2011-12-14
16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
application/json\n\n{\n '), str(3082831376 36B 6par '_tempDataLen'),
int(165862528 12B 1par 33109881), str(3082714752 35B 6par
'realAddress'), tuple(3082165324 32B 2refs 1par), str(3084479288 33B
29par 'connector'), Connector(3082188684 552B 21refs 1par),
str(3082724352 30B 9par 'logstr'), str(3082181232 39B 1par
'Provider,client'), str(3082723680 27B 5par 'TLS'), int(164303008 12B
100par 1), str(3084439744 30B 80par 'socket'), Connection(3082208356
40B 3refs 1par), str(3084506080 33B 33par 'connected'), int(164303008
12B 100par 1), str(3087080928 30B 10par 'offset'), int(167915152 12B
1par 11436032), str(3082712632 38B 6par '_userWantWrite'),
bool(40623276 12B 94par 'True'), str(3082685960 34B 8par
'ctxFactory'), ClientContextFactory(3082188652 168B 1refs 2par),
str(3086955200 28B 38par 'addr'), tuple(3082649516 32B 2refs 1par),
<ex-reference>(0 0B)]

Thanks and sorry for the insistence.

-- 
Augusto Mecking Caringi



From andrew at bemusement.org  Wed Dec 14 16:49:52 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 15 Dec 2011 10:49:52 +1100
Subject: [Twisted-Python] MemoryError in
 twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
Message-ID: <20111214234952.GC14392@flay.puzzling.org>

Augusto Mecking Caringi wrote:
> >>> om[3082188716].c
[…]
> str(2917687304
> 53120905B 1par 'ype: Test\nDate: 2011-12-14
> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
> application/json\n\n{\n ')

So it appears you have 53 megabyte string that's referenced from your TLS
connection, presumably in a buffer of data waiting to be sent?  At the moment
this memory analysis was captured, do you know how much of this data the client
has received?

Also, how was this data passed to the transport — in one big 53MB write call, or
via many smaller calls, or via a pull producer, or…?

This looks like an HTTP-like protocol, so possibly there's a library between
your code and the transport that means you don't know the direct answer to that
question.  But whatever details you can give about how you are passing the data
you generate to the connection will help locate the problem, I think.

-Andrew.




From exarkun at twistedmatrix.com  Wed Dec 14 16:52:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Dec 2011 23:52:56 -0000
Subject: [Twisted-Python] MemoryError
	in	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
Message-ID: <20111214235256.1828.887704569.divmod.xquotient.280@localhost.localdomain>

On 08:34 pm, augustocaringi at gmail.com wrote:
>On Sun, Dec 11, 2011 at 5:11 PM,  <exarkun at twistedmatrix.com> wrote:
>>On 10 Dec, 05:25 pm, augustocaringi at gmail.com wrote:
>>>
>>>On Fri, Dec 9, 2011 at 7:31 PM, Itamar Turner-Trauring
>>><itamar at itamarst.org> wrote:
>>>>>
>>>>>� � What's the best solution? Apply the patch attached on this 
>>>>>ticket,
>>>>>moving to a producer/consumer approach, or any other idea?
>>>>
>>>>
>>>>The patch will just delay the problem... you're creating a huge 
>>>>number of
>>>>strings, faster than the transport can write them out. The solution 
>>>>is
>>>>indeed to use the consumer API to pause creation of more data until 
>>>>the
>>>>transport clears its buffers.
>>>
>>>
>>>Right, I will try with the consumer API.
>>>
>>>But I have one last question:
>>>
>>>In my previous example, the memory usage grows until a MemoryError
>>>exception.
>>>
>>>But other scenario is when my "event send loop" iterates a high 
>>>number
>>>of times (but not enough to raise a exception) and then stops.
>>>
>>>I expected that when the loop ends, all the strings would be flushed
>>>and as a consequence, the memory usage of the process would return to
>>>a normal level. But this does not happen... It's normal?
>>
>>
>>Data may or may not be put onto the network as you are directing a 
>>transport
>>to write it. �It's up to the particular transport implementation to 
>>decide
>>on buffering logic, including logic about whether data is sent 
>>immediately
>>when a write() call is, or only later after control returns to the 
>>event
>>loop.
>>
>>As of Twisted 11.1, the posix-based reactor implementations all buffer 
>>data
>>until control is returned to the event loop. �This has been the case 
>>for
>>some time, but not _all_ time, and it may change in the future.
>>
>>Jean-Paul
>
>Hi!
>
>I understand...
>
>But I'm not convinced.
>
>I found this post on Stackoverflow:
>http://stackoverflow.com/questions/4078084/memory-leak-in-python- 
>twisted-where-is-it
>
>The problem that I am facing is the same.
>
>Under heavy load my Twisted based server "leaks memory". Under normal
>load its all ok.
>
>Explaining better: Under heavy load the memory usage grows, but when
>the load returns to a normal level, the memory usage remains high.

This is basically typical.  I won't guarantee that your program isn't 
*leaking* memory, but it sounds like you're just observing the "high 
water mark" behavior of the CPython runtime (and to a lesser extend of 
glibc).  Allocate memory is frequently not released to the platform when 
it is no longer in use, because fragmentation has happened that makes 
this impractical.

Can you clarify if this is what you're seeing, or if you do see memory 
usage continue to rise without bound (under a bounded load)?

Jean-Paul
>I forgot to say in the previous emails, but the communication is done 
>over SSL.
>
>I'm not a Python specialist, I am a C engineer... But I'm trying to
>find out where is the problem with tools like Heapy, meliae, etc.
>
>Meliae gave me this report:
>
>Total 62008 objects, 126 types, Total size = 86.2MiB (90437121 bytes)
>Index   Count   %      Size   % Cum     Max Kind
>     0   39061  62  87827505  97  9753120905 str
>     1    1682   2    896912   0  98  393352 dict
>     2   10067  16    382028   0  98     224 tuple
>     3     164   0    246656   0  98    6304 module
>     4     422   0    183992   0  99     436 type
>     5    2504   4    170272   0  99      68 code
>
>As expected... The problem are the strings that are never freed.
>
>So I tried to tracking this strings, and this let me to this:
>>>>om[3082188716]
>TLSConnection(3082188716 548B 35refs 38par)
>>>>om[3082188716].c
>[str(3082713312 39B 8par '_tempDataBuffer'), list(3082225612 112704B
>26680refs 1par), str(3086791008 30B 54par 'fileno'),
>instancemethod(3084243748 36B 3refs 1par), str(3084439680 32B 58par
>'protocol'), Provider(3082216172 552B 23refs 4par), str(3084439648 31B
>100par 'reactor'), SelectReactor(3082464620 548B 43refs 21par),
>str(3082712592 37B 6par '_userWantRead'), bool(40623276 12B 94par
>'True'), str(3082713272 34B 8par 'dataBuffer'), str(2917687304
>53120905B 1par 'ype: Test\nDate: 2011-12-14
>16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>application/json\n\n{\n '), str(3082831376 36B 6par '_tempDataLen'),
>int(165862528 12B 1par 33109881), str(3082714752 35B 6par
>'realAddress'), tuple(3082165324 32B 2refs 1par), str(3084479288 33B
>29par 'connector'), Connector(3082188684 552B 21refs 1par),
>str(3082724352 30B 9par 'logstr'), str(3082181232 39B 1par
>'Provider,client'), str(3082723680 27B 5par 'TLS'), int(164303008 12B
>100par 1), str(3084439744 30B 80par 'socket'), Connection(3082208356
>40B 3refs 1par), str(3084506080 33B 33par 'connected'), int(164303008
>12B 100par 1), str(3087080928 30B 10par 'offset'), int(167915152 12B
>1par 11436032), str(3082712632 38B 6par '_userWantWrite'),
>bool(40623276 12B 94par 'True'), str(3082685960 34B 8par
>'ctxFactory'), ClientContextFactory(3082188652 168B 1refs 2par),
>str(3086955200 28B 38par 'addr'), tuple(3082649516 32B 2refs 1par),
><ex-reference>(0 0B)]
>
>Thanks and sorry for the insistence.
>
>--
>Augusto Mecking Caringi
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From augustocaringi at gmail.com  Wed Dec 14 17:38:34 2011
From: augustocaringi at gmail.com (Augusto Mecking Caringi)
Date: Wed, 14 Dec 2011 22:38:34 -0200
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <20111214234952.GC14392@flay.puzzling.org>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
	<20111214234952.GC14392@flay.puzzling.org>
Message-ID: <CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>

On Wed, Dec 14, 2011 at 9:49 PM, Andrew Bennetts <andrew at bemusement.org> wrote:
> Augusto Mecking Caringi wrote:
>> >>> om[3082188716].c
> […]
>> str(2917687304
>> 53120905B 1par 'ype: Test\nDate: 2011-12-14
>> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>> application/json\n\n{\n ')
>
> So it appears you have 53 megabyte string that's referenced from your TLS
> connection, presumably in a buffer of data waiting to be sent?  At the moment
> this memory analysis was captured, do you know how much of this data the client
> has received?

Yes... I have a 53MB string referenced in my TLS connection, but *all*
the data has already been sent.

At the moment that this memory was captured all the data has been sent.

> Also, how was this data passed to the transport — in one big 53MB write call, or
> via many smaller calls, or via a pull producer, or…?

Via many smaller calls. One call for each event, in a code like that
(running in a thread):

def stressTestTask():
    time.sleep(1)
    c = provider_reference
    for i in range(1000000):
        event = c.createTestEvent()
        reactor.callFromThread(c.transport.write, event)

I have two components in my system: the server and the provider, both
of them written in Python/Twisted. This capture was from a "stress
test provider" that send hundreds of thousands of events to the server
without any "sleep". And I captured this memory analysis after the
server has received all the data.

> This looks like an HTTP-like protocol, so possibly there's a library between
> your code and the transport that means you don't know the direct answer to that
> question.  But whatever details you can give about how you are passing the data
> you generate to the connection will help locate the problem, I think.

Yes, this a HTTP-like protocol, but there is no library, the protocol
was designed by me.

Thanks.

-- 
Augusto Mecking Caringi



From glyph at twistedmatrix.com  Thu Dec 15 04:52:59 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 15 Dec 2011 06:52:59 -0500
Subject: [Twisted-Python] MemoryError in
	twisted.internet.abstract.FileDescriptor
In-Reply-To: <CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>
References: <CADFy_4GAtgH=_XfyYoxE76JwWCbE-cv4zvjH_Uy4Z4wm9nj3sg@mail.gmail.com>
	<5252ce1aebff2c8409ffee1929227075.squirrel@webmail.zoteca.com>
	<CADFy_4G5VD13ODyapXR3yQcVOommbNr8=6qOMr6AQHDEOsOpxQ@mail.gmail.com>
	<20111211191117.1828.416505314.divmod.xquotient.7@localhost.localdomain>
	<CADFy_4E9YobCwD+huQSgcsz00uKM-_xxbveqySM+6W=w=EhiUQ@mail.gmail.com>
	<20111214234952.GC14392@flay.puzzling.org>
	<CADFy_4Fb-LJkpZdLyc-JEVtnBDPg-nVQUZfBAwYkH-O1iCbKCg@mail.gmail.com>
Message-ID: <05BDA144-972F-4BF3-A071-8D02959CFF2B@twistedmatrix.com>


On Dec 14, 2011, at 7:38 PM, Augusto Mecking Caringi wrote:

> On Wed, Dec 14, 2011 at 9:49 PM, Andrew Bennetts <andrew at bemusement.org> wrote:
>> Augusto Mecking Caringi wrote:
>>>>>> om[3082188716].c
>> […]
>>> str(2917687304
>>> 53120905B 1par 'ype: Test\nDate: 2011-12-14
>>> 16:45:30.995217\nEvent-Subtype: FooBar\nContent-Type:
>>> application/json\n\n{\n ')
>> 
>> So it appears you have 53 megabyte string that's referenced from your TLS
>> connection, presumably in a buffer of data waiting to be sent?  At the moment
>> this memory analysis was captured, do you know how much of this data the client
>> has received?
> 
> Yes... I have a 53MB string referenced in my TLS connection, but *all*
> the data has already been sent.
> 
> At the moment that this memory was captured all the data has been sent.
> 
>> Also, how was this data passed to the transport — in one big 53MB write call, or
>> via many smaller calls, or via a pull producer, or…?
> 
> Via many smaller calls. One call for each event, in a code like that
> (running in a thread):
> 
> def stressTestTask():
>    time.sleep(1)
>    c = provider_reference
>    for i in range(1000000):
>        event = c.createTestEvent()
>        reactor.callFromThread(c.transport.write, event)
> 
> I have two components in my system: the server and the provider, both
> of them written in Python/Twisted. This capture was from a "stress
> test provider" that send hundreds of thousands of events to the server
> without any "sleep". And I captured this memory analysis after the
> server has received all the data.
> 
>> This looks like an HTTP-like protocol, so possibly there's a library between
>> your code and the transport that means you don't know the direct answer to that
>> question.  But whatever details you can give about how you are passing the data
>> you generate to the connection will help locate the problem, I think.
> 
> Yes, this a HTTP-like protocol, but there is no library, the protocol
> was designed by me.
> 
> Thanks.

If everything you've said here is accurate, this is definitely a bug in Twisted.  It would be really valuable if you could boil down your example to be as minimal as possible - ideally a unit test, but failing that, a script which could be trivially run to leak an arbitrary amount of memory would be almost as good.

Does your callFromThread(c.transport.write, ...) code reliably trigger this error when talking to a very simple protocol, like an Echo or Discard protocol?

Thanks a lot for helping us track this down,

-glyph




From a.peta at icsc.it  Fri Dec 16 05:20:12 2011
From: a.peta at icsc.it (PETA Antonio Silvio)
Date: Fri, 16 Dec 2011 12:20:12 +0000
Subject: [Twisted-Python] (no subject)
Message-ID: <E4DAD5F102FD8444BAF24E8A9E5E46F436373F@V000EX01.ICSC.LOCAL>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111216/0064c021/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Dec 17 22:05:41 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Dec 2011 05:05:41 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1324184741.17.302424732@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111218/afd1336d/attachment-0001.html>

From alex.kirp at gmail.com  Tue Dec 20 11:24:24 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Tue, 20 Dec 2011 23:24:24 +0500
Subject: [Twisted-Python] deferred generators in inline callbacks
Message-ID: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>

Hi.

I have a question about inline callbacks usage.

Let's assume I have an iterator that works synchronously. I want to
wrap this generator to work asynchronously in threads:

def some_generator():
    cursor = make_iterator() # cursor's 'next' method uses some nasty
blocking I/O
    while 1:
        yield deferToThread(cursor.next)


Next, I want to asynchronously iterate over this generator in
inlineCallbacks semantics. I should say:

@inlineCallbacks
def do_stuff():
    for item in some_generator():
        try:
            real_item = yield item
            # do stuff with real_item
        except StopIteration:
            break


It somewhat annoys me that I should always convert item to real_item
so inlineCallbacks can properly asynchronize my code. I also need to
implement StopIteration myself :(
Is there any easier way to do this in Twisted?

Thanks in advance!

-- 
Alex



From exarkun at twistedmatrix.com  Tue Dec 20 12:14:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 20 Dec 2011 19:14:10 -0000
Subject: [Twisted-Python] deferred generators in inline callbacks
In-Reply-To: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>
References: <CADGOwRSUR_BKcmGmDUh+vFZZOa26oSN48ars-3UrPeo6rf4Frw@mail.gmail.com>
Message-ID: <20111220191410.2164.1501005671.divmod.xquotient.42@localhost.localdomain>

On 06:24 pm, alex.kirp at gmail.com wrote:
>Hi.
>
>I have a question about inline callbacks usage.
>
>Let's assume I have an iterator that works synchronously. I want to
>wrap this generator to work asynchronously in threads:
>
>def some_generator():
>    cursor = make_iterator() # cursor's 'next' method uses some nasty
>blocking I/O
>    while 1:
>        yield deferToThread(cursor.next)
>
>
>Next, I want to asynchronously iterate over this generator in
>inlineCallbacks semantics. I should say:
>
>@inlineCallbacks
>def do_stuff():
>    for item in some_generator():
>        try:
>            real_item = yield item
>            # do stuff with real_item
>        except StopIteration:
>            break
>
>
>It somewhat annoys me that I should always convert item to real_item
>so inlineCallbacks can properly asynchronize my code. I also need to
>implement StopIteration myself :(
>Is there any easier way to do this in Twisted?

You're basically looking for coroutines - ie, context switching across 
multiple stack frames (from inside some_generator through do_stuff out 
to the implementation of inlineCallbacks).

There are several coroutine libraries for Python.  Greenlets is probably 
the most popular.  You can use it with Twisted, if you want.

Personally, I'd probably go for something more like:

    def worker(item):
        # do stuff with item

    hook_up(some_generator(), worker)

with some kind of hook_up that does the parts of this task that you're 
tired of repeating over and over again (like turning item into 
real_item).

The result doesn't require figuring out how your coroutines are 
affecting control flow and probably gives you something more composable 
too.

Jean-Paul



From bob.novas at shinkuro.com  Tue Dec 20 15:02:00 2011
From: bob.novas at shinkuro.com (Bob Novas)
Date: Tue, 20 Dec 2011 17:02:00 -0500
Subject: [Twisted-Python] [Twisted] #5437: sys.settrace(None) in
	process.py raises RuntimeError in debugger
In-Reply-To: <059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
References: <050.9bfaa2744aa685b5891ca2b557587aac@twistedmatrix.com>
	<059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
Message-ID: <001001ccbf63$00042180$000c6480$@shinkuro.com>

Well, what wing's debugger does is to raise RuntimeError, and NOT CONTINUE
to execute that path. So the child never runs. That's bad!  What more can I
say?  I have to comment out that line every time I run on a new installation
if I want to debug in linux (Windows doesn't go down that code path).  Bob

> -----Original Message-----
> From: Twisted [mailto:trac at twistedmatrix.com]
> Sent: Tuesday, December 20, 2011 4:40 PM
> Subject: Re: [Twisted] #5437: sys.settrace(None) in process.py raises
> RuntimeError in debugger
> 
> #5437: sys.settrace(None) in process.py raises RuntimeError in debugger
> --------------------------+---------------------------------------------
> --------------------------+----
>      Reporter:  BobNovas  |           Owner:  BobNovas
>          Type:  defect    |          Status:  new
>      Priority:  normal    |       Milestone:
>     Component:  core      |        Keywords:  settrace, process
>        Branch:            |   Branch_author:
> Launchpad_bug:            |
> --------------------------+---------------------------------------------
> --------------------------+----
> Changes (by exarkun):
> 
>   * owner:  => BobNovas
>   * milestone:  regular-releases =>
>   * branch_author:  BobNovas =>
> 
> 
> Comment:
> 
>  The ''regular-releases'' milestone is for release automation.  The
''author'' field
> is for svn branch authorship.  I've unset these two  fields.
> 
>  I'm think the intent of the `sys.settrace(None)` call is to disable
debuggers.  It
> does this because there's very little left to do before the  Python
process is going
> to be replaced by a new process (which will not be  debuggable using the
trace
> hook) and because there are two different  Python processes being debugged
at
> that point in the code, because of the  `os.fork` call which has succeeded
just
> beforehand.
> 
>  Does Wing have some way to meaningfully debug two processes
> simultaneously, where the second is created using `os.fork` in the first?
>  If not, then there's no use in removing the `sys.settrace(None)`, because
it will
> just break in some other way.
> 
>  I have very little experience with Wing's debugger, so I don't know what
it's
> possible to do in this case.  I'm also not really sure what a Wing
debugger user
> (ie you :) expect to happen.
> 
>  Can you shed some more light on this?  Thanks.
> 
> --
> Ticket URL: <http://twistedmatrix.com/trac/ticket/5437#comment:1>
> Twisted <http://twistedmatrix.com/trac/> Engine of your Internet




From andrewfr_ice at yahoo.com  Wed Dec 21 11:06:16 2011
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 21 Dec 2011 10:06:16 -0800 (PST)
Subject: [Twisted-Python] deferred generators in inline callbacks
References: <mailman.1.1324486801.22996.twisted-python@twistedmatrix.com> 
Message-ID: <1324490776.63637.YahooMailNeo@web120705.mail.ne1.yahoo.com>

Message: 2
Date: Tue, 20 Dec 2011 19:14:10 -0000
From: exarkun at twistedmatrix.com
Subject: Re: [Twisted-Python] deferred generators in inline callbacks
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <20111220191410.2164.1501005671.divmod.xquotient.42 at localhost.localdomain>
    
Content-Type: text/plain;
 charset="utf-8"; format="flowed"

On 06:24 pm, alex.kirp at gmail.com wrote:

A>Hi.
A>
A>I have a question about inline callbacks usage.

E>You're basically looking for coroutines - ie, context switching across 
E>multiple stack frames (from inside some_generator through do_stuff out 
E>to the implementation of inlineCallbacks).

E>There are several coroutine libraries for Python.  Greenlets is probably 
E>the most popular.  You can use it with Twisted, if you want.


I believe Christopher Armstrong  a long time ago had corotwine. However if you download the greenlet package and stackless.py, it is not hard to make them interoperate with Twisted. Here is a recent example of how I use them: http://wp.me/pdqoq-3Y

Cheers,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111221/a3d4bd74/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Dec 21 11:55:32 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 21 Dec 2011 13:55:32 -0500
Subject: [Twisted-Python] [Twisted] #5437: sys.settrace(None) in
	process.py raises RuntimeError in debugger
In-Reply-To: <001001ccbf63$00042180$000c6480$@shinkuro.com>
References: <050.9bfaa2744aa685b5891ca2b557587aac@twistedmatrix.com>
	<059.650053881521a84d5bade7494bdbed0a@twistedmatrix.com>
	<001001ccbf63$00042180$000c6480$@shinkuro.com>
Message-ID: <B81B37F1-9A5D-49D8-AAAC-675E29933F64@twistedmatrix.com>


On Dec 20, 2011, at 5:02 PM, Bob Novas wrote:

> Well, what wing's debugger does is to raise RuntimeError, and NOT CONTINUE
> to execute that path. So the child never runs. That's bad!  What more can I
> say?  I have to comment out that line every time I run on a new installation
> if I want to debug in linux (Windows doesn't go down that code path).

Sounds like a bug that Wing should really fix, then!

Can you perhaps point some of Wing's developers at <http://twistedmatrix.com/trac/ticket/5437#comment:1> and have them illuminate the situation?  I expect it might be more useful to hear from a paying customer than from some random people on the internet ;-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111221/716624ae/attachment.html>

From bino at indoakses-online.com  Wed Dec 21 21:52:32 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 22 Dec 2011 11:52:32 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
Message-ID: <4EF2B790.1060706@indoakses-online.com>

Dear All ..

A year ago, I need send some defined message to a jabber conference.
The message content will depend on a "button-press".
My trick is to use ttyctrl (http://ttyctrl.sourceforge.net/).

So basicaly my "system" is builded from several parts:
1. TTYCTRL : I made some small python XMLRPC client script, that will 
send a msg to my local twisted server
2. Twisted server, contain :
a. an XMLRPC server
b. XMPP Client ... use to send msg to remote jabber conference room

I made a pastebin of that twisted script at : http://pastebin.com/iSRVZNwS

With that script the flow alway one-way only :
serial====>Twisted_XMLRPC--->Twisted_XMPP=====>Jaber

Now I need to do something different, since it's hard to find a Board 
with RS232 onboard.
I Need to replace TTYCTRL with Arduino MCU.
Arduino will Send serial data to my PC.
So I'll need my twisted to able to receive data via serial
There will also incoming XMPP msg from Jabber that will need to be send 
to arduino via Serial port.

so the flow will be like :
serial<====>Twisted_Serial<--->Twisted_XMPP<=====>Jaber


My question is, How to make :
1. twisted.internet.serial to send data via an instance of XMPP client ? and
2. my EchobotProtocol.onMessage (see pastebin), to write data to the 
same serial port used by Point#1 above.



Sincerely
-bino-





From ltaylor.volks at gmail.com  Wed Dec 21 23:12:58 2011
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 21 Dec 2011 23:12:58 -0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
In-Reply-To: <4EF2B790.1060706@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
Message-ID: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>


On Dec 21, 2011, at 9:52 PM, bino oetomo wrote:

> Dear All ..
>
> A year ago, I need send some defined message to a jabber conference.
> The message content will depend on a "button-press".
> My trick is to use ttyctrl (http://ttyctrl.sourceforge.net/).
>
> So basicaly my "system" is builded from several parts:
> 1. TTYCTRL : I made some small python XMLRPC client script, that will
> send a msg to my local twisted server
> 2. Twisted server, contain :
> a. an XMLRPC server
> b. XMPP Client ... use to send msg to remote jabber conference room
>
> I made a pastebin of that twisted script at : http://pastebin.com/iSRVZNwS
>
> With that script the flow alway one-way only :
> serial====>Twisted_XMLRPC--->Twisted_XMPP=====>Jaber
>
> Now I need to do something different, since it's hard to find a Board
> with RS232 onboard.
> I Need to replace TTYCTRL with Arduino MCU.
> Arduino will Send serial data to my PC.
> So I'll need my twisted to able to receive data via serial
> There will also incoming XMPP msg from Jabber that will need to be  
> send
> to arduino via Serial port.
>
> so the flow will be like :
> serial<====>Twisted_Serial<--->Twisted_XMPP<=====>Jaber
>
>
> My question is, How to make :
> 1. twisted.internet.serial to send data via an instance of XMPP  
> client ? and
> 2. my EchobotProtocol.onMessage (see pastebin), to write data to the
> same serial port used by Point#1 above.
>


This is a relevant FAQ for this situation:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother

More specifically:
1. Create a Protocol class for your SerialPort that will communicate  
with the Arduino. Instances of this class will have access to the  
serial transport and can write out to the serial port. Incoming  
messages from the Arduino will be handled by the dataReceived method  
of the protocol.

2. Give your EchoBotProtocol a reference to the SerialPort somehow  
(e.g. via init), and set a reference to the EchoBotProtocol on the  
SerialPort.

Here's a quick sketch:

# Basic line receiver protocol
class ArduinoReceiver(LineReceiver):
	def lineReceived(self, line):
		print "Line Received from Arduino"
		self.echobot.send('some xmpp message for which I do not know the  
format')

# Wire up the serial port and protocol...note there are more  
parameters to create the SerialPort (baudrate, etc.)
serial = SerialPort(ArduinoReceiver, '/dev/tty.usbserial', reactor)

# EchoBot gets a reference to the serialport
class EchoBotProtocol(MessageProtocol):
   	def __init__(self, serial, *args, **kwargs):
		self.serial = serial
		# Set a reference to self on the serial protocol
		self.serial.protocol.echobot = self
		MessageProtocol.__init__(self, *args, **kwargs)

	def onMessage(self, msg):
		self.serial.transport.write('some message\n')

echobot = EchoBotProtocol(serial)

...and an update to your pastebin that may be helpful for context: http://pastebin.com/2EJ22wXa



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111221/a9fdf72a/attachment.html>

From bino at indoakses-online.com  Wed Dec 21 23:26:39 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Thu, 22 Dec 2011 13:26:39 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP and
	twisted.internet.serial
In-Reply-To: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
Message-ID: <4EF2CD9F.5040107@indoakses-online.com>

Dear Lucas Taylor

Thankyou for your fast enlightment.

It's time for me to re-build my ejabberd turnkey linux

Sincerely
-bino-

On 12/22/2011 01:12 PM, Lucas Taylor wrote:
>
>
> This is a relevant FAQ for this situation:
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother 
>
>
> More specifically:
> 1. Create a Protocol class for your SerialPort that will communicate 
> with the Arduino. Instances of this class will have access to the 
> serial transport and can write out to the serial port. Incoming 
> messages from the Arduino will be handled by the dataReceived method 
> of the protocol.
>
> 2. Give your EchoBotProtocol a reference to the SerialPort somehow 
> (e.g. via init), and set a reference to the EchoBotProtocol on the 
> SerialPort.
>
> Here's a quick sketch:
>
> # Basic line receiver protocol
> class ArduinoReceiver(LineReceiver):
>     def lineReceived(self, line):
>         print "Line Received from Arduino"
>         self.echobot.send('some xmpp message for which I do not know 
> the format')
>
> # Wire up the serial port and protocol...note there are more 
> parameters to create the SerialPort (baudrate, etc.)
> serial = SerialPort(ArduinoReceiver, '/dev/tty.usbserial', reactor)
>
> # EchoBot gets a reference to the serialport
> class EchoBotProtocol(MessageProtocol):
>       def __init__(self, serial, *args, **kwargs):
>         self.serial = serial
>         # Set a reference to self on the serial protocol
>         self.serial.protocol.echobot = self
>         MessageProtocol.__init__(self, *args, **kwargs)
>
>     def onMessage(self, msg):
>         self.serial.transport.write('some message\n')
>
> echobot = EchoBotProtocol(serial)
>
> ...and an update to your pastebin that may be helpful for context: 
> http://pastebin.com/2EJ22wXa
>
>
>





From bino at indoakses-online.com  Thu Dec 22 19:50:31 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Fri, 23 Dec 2011 09:50:31 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP
	and	twisted.internet.serial
In-Reply-To: <8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
Message-ID: <4EF3EC77.50601@indoakses-online.com>

Dear Lucas
I realy appreciate your pastebin
On 12/22/2011 01:12 PM, Lucas Taylor wrote:
>
>
> ...and an update to your pastebin that may be helpful for context: 
> http://pastebin.com/2EJ22wXa
>
When I first try to adapt your script, there is error complaining about 
that "serial" have no "setParent" attribute/methode.
Next I found your enlightment at 
http://www.mentby.com/lucas-taylor/serialport-protocol-as-a-service.html

So here is my adaptation at http://pastebin.com/79qi3TfK

currently I just commented the line that send xmpp, I just want to make 
sure that the serial communication is working well.
When there ls line comming via serial line, the script just work as told :
---from the log file ----
2011-12-23 09:31:29+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:31+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:33+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:35+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:37+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:39+0700 [-] Line Received from Arduino:  This is arduino
2011-12-23 09:31:41+0700 [-] Line Received from Arduino:  This is arduino
-----------------------------

The problem is when there is msg coming from XMPP part
It's received by the xmpp client part, but script complaining about 
'SerialPort' object has no attribute 'transport'
I tried to send text from another xmppclient (pidgin)
---from the log file ----
2011-12-23 09:31:29+0700 [XmlStream,client] <<<<>>>>>>>
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] DDDDooooooohhhhh
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] <<<<>>>>>>>
2011-12-23 09:31:29+0700 [XmlStream,client]
2011-12-23 09:31:29+0700 [XmlStream,client] Unhandled Error
------------------------------
----And the traceback is-------
       File "./mytac01.tac", line 42, in onMessage
         self.serial.transport.write('some message\n')
     exceptions.AttributeError: 'SerialPort' object has no attribute 
'transport'
--------------------------------------

----Line 42 is ----
self.serial.transport.write('some message\n')
---------------------

I tried to google with the error msg as keyword ... mostly about Serial 
port loosing connection.
In my case , the serial port still have it's connection ..... since the 
arduino msg still coming

Sincerely
-bino-



From exarkun at twistedmatrix.com  Thu Dec 22 19:57:23 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Fri, 23 Dec 2011 02:57:23 -0000
Subject: [Twisted-Python] Question : Combining wokel XMPP
	and	twisted.internet.serial
In-Reply-To: <4EF3EC77.50601@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
	<4EF3EC77.50601@indoakses-online.com>
Message-ID: <20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>

On 02:50 am, bino at indoakses-online.com wrote:
>[snip]
>The problem is when there is msg coming from XMPP part
>It's received by the xmpp client part, but script complaining about
>'SerialPort' object has no attribute 'transport'
>I tried to send text from another xmppclient (pidgin)

A SerialPort doesn't have a transport.  It is a transport.  Instead of:

    self.serial.transport.write(foo)

try

    self.serial.write(foo)

Jean-Paul



From bino at indoakses-online.com  Thu Dec 22 21:09:32 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Fri, 23 Dec 2011 11:09:32 +0700
Subject: [Twisted-Python] Question : Combining wokel
	XMPP	and	twisted.internet.serial
In-Reply-To: <20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
References: <4EF2B790.1060706@indoakses-online.com>	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>	<4EF3EC77.50601@indoakses-online.com>
	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
Message-ID: <4EF3FEFC.8060701@indoakses-online.com>

Dear Jean-Paul
Thankyou for your help.
On 12/23/2011 09:57 AM, exarkun at twistedmatrix.com wrote:
>
> A SerialPort doesn't have a transport.  It is a transport.  Instead of:
>
>      self.serial.transport.write(foo)
>
> try
>
>      self.serial.write(foo)
>

Here is my function (edited)
-------START-------
     def onMessage(self, msg):
         #Will just print the msg body to stdout
         self.writethis = msg.body
         print '<<<<>>>>>>>\n'
         print self.writethis
         print '\n<<<<>>>>>>>\n'
         # Send something to serial port
         #self.serial.transport.write('some message\n')
         self.serial.write(self.writethis)
----------------------

the "print self.writethis" do as told

but the "self.serial.write(self.writethis)" line raise an exceptions
----------START-------------
       File "./mytac01.tac", line 44, in onMessage
         self.serial.write(self.writethis)
       File 
"/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line 
191, in write
         self._tempDataLen += len(data)
     exceptions.TypeError: object of type 'Element' has no len()
--------------------------

Sincerely
-bino-

> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From tim at commsecure.com.au  Thu Dec 22 21:15:29 2011
From: tim at commsecure.com.au (Tim Allen)
Date: Fri, 23 Dec 2011 15:15:29 +1100
Subject: [Twisted-Python] Question : Combining wokel XMPP	and
 twisted.internet.serial
In-Reply-To: <4EF3FEFC.8060701@indoakses-online.com>
References: <4EF2B790.1060706@indoakses-online.com>
	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>
	<4EF3EC77.50601@indoakses-online.com>
	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>
	<4EF3FEFC.8060701@indoakses-online.com>
Message-ID: <20111223041528.GA1618@ws35.commsecure.com.au>

On Fri, Dec 23, 2011 at 11:09:32AM +0700, bino oetomo wrote:
> the "print self.writethis" do as told
> 
> but the "self.serial.write(self.writethis)" line raise an exceptions
> ----------START-------------
>        File "./mytac01.tac", line 44, in onMessage
>          self.serial.write(self.writethis)
>        File 
> "/usr/lib/python2.6/dist-packages/twisted/internet/abstract.py", line 
> 191, in write
>          self._tempDataLen += len(data)
>      exceptions.TypeError: object of type 'Element' has no len()
> --------------------------

It looks like "self.writethis" is an Element, not a string. Python's
print statement will automatically call str() on things before it prints
them, but Twisted's .write() methods do not. You'll have to change your
code to something like this:

    self.serial.write(str(self.writethis))

Tim.



From exarkun at twistedmatrix.com  Sat Dec 24 22:05:31 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Dec 2011 05:05:31 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1324789531.99.402283342@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111225/f3a699fd/attachment-0001.html>

From bino at indoakses-online.com  Sun Dec 25 17:39:29 2011
From: bino at indoakses-online.com (bino oetomo)
Date: Mon, 26 Dec 2011 07:39:29 +0700
Subject: [Twisted-Python] Question : Combining wokel XMPP	and
	twisted.internet.serial
In-Reply-To: <20111223041528.GA1618@ws35.commsecure.com.au>
References: <4EF2B790.1060706@indoakses-online.com>	<8744AB16-553F-4361-9EEA-3DA40D9F1861@gmail.com>	<4EF3EC77.50601@indoakses-online.com>	<20111223025723.17627.467256746.divmod.xquotient.14@localhost.localdomain>	<4EF3FEFC.8060701@indoakses-online.com>
	<20111223041528.GA1618@ws35.commsecure.com.au>
Message-ID: <4EF7C241.7050907@indoakses-online.com>

Dear Tim Allen and Jean-Paul
I realy appreciate your enlightment .. i try it and it works

Sincerely
-bino-
On 12/23/2011 11:15 AM, Tim Allen wrote:
> It looks like "self.writethis" is an Element, not a string. Python's
> print statement will automatically call str() on things before it prints
> them, but Twisted's .write() methods do not. You'll have to change your
> code to something like this:
>
>      self.serial.write(str(self.writethis))
>
> Tim.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From twisted at ralphm.ik.nu  Mon Dec 26 10:21:05 2011
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Mon, 26 Dec 2011 18:21:05 +0100
Subject: [Twisted-Python] Unknown constants
Message-ID: <4EF8AD01.8030404@ralphm.ik.nu>

Hi,

I've been looking into using twisted.python.constants for representing 
the status codes of the XMPP Multi-User Chat protocol [1]. I will have 
objects representing messages, of which one of the attributes is 
'mucStatuses', a set of status codes. This works out great for the 
initial set of available status codes. The protocol is parsed, and the 
status codes are represented by the ValueConstant instances returned by 
lookupByValue.

However, not all of the possible codes can be known up-front, as the 
protocol allows for registering new ones without changing the 
specification itself. Eventually, applications will receive status codes 
that are not (yet?) part of the set of defined constants in the 
implementation, and application developers (that do know about new 
codes) will want to handle these.

A possible remedy to would be to register new status codes from the 
application itself. My first try of just adding a new attribute to the 
class fails because they are not 'realized' as the _enumerants are cached.

I can imagine this also goes for unknown HTTP methods and HTTP status 
codes, used as examples in the documentation. Any suggestions on how to 
handle such unknown constants?


[1] <http://xmpp.org/extensions/xep-0045.html#statuscodes>

-- 
ralphm



From saghul at gmail.com  Tue Dec 27 05:01:44 2011
From: saghul at gmail.com (=?UTF-8?Q?Sa=C3=BAl_Ibarra_Corretg=C3=A9?=)
Date: Tue, 27 Dec 2011 13:01:44 +0100
Subject: [Twisted-Python] ConnectionMixin.loseConnection (in _newtls)
	lacking arguments
Message-ID: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>

Hi all,

I'm experiencing a TypeError exception in my code since I updated to
Twisted 11.1. After hunting it it seems to be caused because the
loseConnection function from (_newtls) lacks arguments.

If there is no OpenSSL support present in the system the
loseConnection function will be called in abstract.FileDescriptor
(please, correct me if I'm wrong), and the signature for
loseConnection is the following:

def loseConnection(self, _connDone=failure.Failure(main.CONNECTION_DONE)):

Shouldn't it be the same for _newtls.ConnectionMixin ? Or perhaps it
should accept *args and **kw and pass them on? Or am I wrong here?


Thanks and regards,

-- 
/Saúl
http://saghul.net | http://sipdoc.net



From mostawesomedude at gmail.com  Wed Dec 28 16:22:42 2011
From: mostawesomedude at gmail.com (Corbin Simpson)
Date: Wed, 28 Dec 2011 15:22:42 -0800
Subject: [Twisted-Python] [ANNOUNCE] txWS 0.7
Message-ID: <CALiqSLfQHkGSt3RCTaCXPsEnryauMZf=sMhr-bzfLZphUXeQ+w@mail.gmail.com>

Hi,

A new version of the surprisingly-popular txWS is now available. You
can grab it from PyPI (http://pypi.python.org/pypi/txWS) or from
source on Github (https://github.com/MostAwesomeDude/txWS).

As before: txWS is a small, single-module library for augmenting
Twisted with WebSockets support. Unlike other approaches, txWS has a
minimalist philosophy and only provides enough WebSockets machinery to
wrap server factories. Notably, txWS does not provide a WebSockets
client.

New in this release: Underlying protocols using writeSequence() are no
longer broken with txWS, Chrome 16 and other RFC 6455-compatible
browsers are now supported, and there were a couple other cleanups not
really worth mentioning.

A couple people have asked about better examples. Somebody actually
sent me a very full example (https://gist.github.com/1380305) which is
probably a bit too big for docs, but is definitely a real-world bit of
usage. I'll see about getting some complete server examples all lined
up for people to use.

As always, feedback is welcome.

~ C.
Oregon State University Open Source Lab

-- 
When the facts change, I change my mind. What do you do, sir? ~ Keynes

Corbin Simpson
<MostAwesomeDude at gmail.com>



From moijes12 at gmail.com  Thu Dec 29 05:30:04 2011
From: moijes12 at gmail.com (moses dsouza)
Date: Thu, 29 Dec 2011 18:00:04 +0530
Subject: [Twisted-Python] regarding classes and functions in
	twisted.python.reflect
Message-ID: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>

Hi

I'm new to twisted. While was working on bug #5385 I noticed that classes
AccessorType, PropertyAccessor, Accessor and Summer were rarely used
elsewhere in the code. Similaryly many functions exists which are unused.
Do we need these functions and classes? I do understand that the purpose
t.python.reflect provides  "Standardized versions of various cool and/or
strange things that you can do with Python's reflection capabilities."  but
I feel if we could remove things that we don't need we could make the code
base smaller and move towards making twisted more efficient.

Looking forward to your views

regards
moijes12
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20111229/c2f06ca2/attachment-0001.html>

From ldanielburr at me.com  Thu Dec 29 08:52:22 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Thu, 29 Dec 2011 09:52:22 -0600
Subject: [Twisted-Python] regarding classes and functions in
 twisted.python.reflect
In-Reply-To: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
References: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
Message-ID: <op.v69c1xtmeyn2q3@tiassa.local>

Hi moijes12,


On Thu, 29 Dec 2011 06:30:04 -0600, moses dsouza <moijes12 at gmail.com>  
wrote:

> Hi
>
> I'm new to twisted. While was working on bug #5385 I noticed that classes
> AccessorType, PropertyAccessor, Accessor and Summer were rarely used
> elsewhere in the code. Similaryly many functions exists which are unused.
> Do we need these functions and classes? I do understand that the purpose
> t.python.reflect provides  "Standardized versions of various cool and/or
> strange things that you can do with Python's reflection capabilities."   
> but
> I feel if we could remove things that we don't need we could make the  
> code
> base smaller and move towards making twisted more efficient.
>

How would removing this code make twisted more efficient?  Is the savings  
in disk-space significant?  Also, just because there is code in  
t.p.reflect that is not used within twisted itself does not mean that  
applications written using twisted are not using that code.

I think, in general, everyone likes the notion of making a codebase  
smaller, but you always have to measure the benefit and the risk of doing  
so.

Have a good one,

L. Daniel Burr



From glyph at twistedmatrix.com  Thu Dec 29 16:14:09 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:14:09 -0500
Subject: [Twisted-Python] regarding classes and functions in
	twisted.python.reflect
In-Reply-To: <op.v69c1xtmeyn2q3@tiassa.local>
References: <CAKkXvcYU13OM=__8dWdxWmdsdNRo+vgkHYtcXg8gYBjtOMeOuQ@mail.gmail.com>
	<op.v69c1xtmeyn2q3@tiassa.local>
Message-ID: <800C83A7-B558-4E5B-AB0F-393AB81411AA@twistedmatrix.com>


On Dec 29, 2011, at 10:52 AM, L. Daniel Burr wrote:

> Hi moijes12,
> 
> 
> On Thu, 29 Dec 2011 06:30:04 -0600, moses dsouza <moijes12 at gmail.com>  
> wrote:
> 
>> Hi
>> 
>> I'm new to twisted. While was working on bug #5385 I noticed that classes
>> AccessorType, PropertyAccessor, Accessor and Summer were rarely used
>> elsewhere in the code. Similaryly many functions exists which are unused.
>> Do we need these functions and classes? I do understand that the purpose
>> t.python.reflect provides  "Standardized versions of various cool and/or
>> strange things that you can do with Python's reflection capabilities."   
>> but
>> I feel if we could remove things that we don't need we could make the  
>> code
>> base smaller and move towards making twisted more efficient.
>> 
> 
> How would removing this code make twisted more efficient?  Is the savings  
> in disk-space significant?  Also, just because there is code in  
> t.p.reflect that is not used within twisted itself does not mean that  
> applications written using twisted are not using that code.
> 
> I think, in general, everyone likes the notion of making a codebase  
> smaller, but you always have to measure the benefit and the risk of doing  
> so.
> 
> Have a good one,
> 
> L. Daniel Burr

Hi Moses,

I pretty much agree with everything Daniel said, but I want to make sure you take it at face value, and not as Twisted's excuse for never removing anything :).  If it's truly a bad idea to use these APIs in new code - for example, if there's a Python feature that does what they do better, available in all the versions of Python we support - then they should definitely be removed.  You should file 2 tickets: one for deprecation, and one for removal, according to <http://twistedmatrix.com/trac/wiki/CompatibilityPolicy>.  If there are no objections on the ticket, we can close the deprecation one now and the removal one in the next release.

Thanks,

-glyph


From glyph at twistedmatrix.com  Thu Dec 29 16:19:42 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:19:42 -0500
Subject: [Twisted-Python] ConnectionMixin.loseConnection (in _newtls)
	lacking arguments
In-Reply-To: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>
References: <CANSmkSEY0eTb-=9Okw_Bf8czgqar3PNESu2jNgfUiBgR5YSHGg@mail.gmail.com>
Message-ID: <658BF4CE-9FB4-4C7C-A48C-E409AF953721@twistedmatrix.com>


On Dec 27, 2011, at 7:01 AM, Saúl Ibarra Corretgé wrote:

> Hi all,
> 
> I'm experiencing a TypeError exception in my code since I updated to
> Twisted 11.1. After hunting it it seems to be caused because the
> loseConnection function from (_newtls) lacks arguments.
> 
> If there is no OpenSSL support present in the system the
> loseConnection function will be called in abstract.FileDescriptor
> (please, correct me if I'm wrong), and the signature for
> loseConnection is the following:
> 
> def loseConnection(self, _connDone=failure.Failure(main.CONNECTION_DONE)):
> 
> Shouldn't it be the same for _newtls.ConnectionMixin ? Or perhaps it
> should accept *args and **kw and pass them on? Or am I wrong here?
> 
> 
> Thanks and regards,
> 
> -- 
> /Saúl
> http://saghul.net | http://sipdoc.net

Hi Saúl,

The _connDone argument there is an internal convenience for that implementation of loseConnection(); it is not part of the API.  ITransport specifies that loseConnection takes no arguments.  See here: <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.ITransport.html#loseConnection>.  You should fix your code to never pass an argument to loseConnection, as other transport implementations may also lack this argument.  (As a bizarre accident, the IOCP reactor also has this argument in its transport implementation, but there's no reason that it necessarily should.)

However, the fact that you thought otherwise is a bug in our documentation :).  Please feel free to file tickets (<http://twistedmatrix.com/trac/newticket>) describing how you got to the loseConnection that takes an argument and why you didn't realize that you should be looking at ITransport instead :).

Thanks,

-glyph




From glyph at twistedmatrix.com  Thu Dec 29 16:28:17 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 29 Dec 2011 18:28:17 -0500
Subject: [Twisted-Python] Unknown constants
In-Reply-To: <4EF8AD01.8030404@ralphm.ik.nu>
References: <4EF8AD01.8030404@ralphm.ik.nu>
Message-ID: <888D99D6-092B-47D4-BB26-2C59615665E5@twistedmatrix.com>


On Dec 26, 2011, at 12:21 PM, Ralph Meijer wrote:

> Hi,
> 
> I've been looking into using twisted.python.constants for representing 
> the status codes of the XMPP Multi-User Chat protocol [1]. I will have 
> objects representing messages, of which one of the attributes is 
> 'mucStatuses', a set of status codes. This works out great for the 
> initial set of available status codes. The protocol is parsed, and the 
> status codes are represented by the ValueConstant instances returned by 
> lookupByValue.
> 
> However, not all of the possible codes can be known up-front, as the 
> protocol allows for registering new ones without changing the 
> specification itself. Eventually, applications will receive status codes 
> that are not (yet?) part of the set of defined constants in the 
> implementation, and application developers (that do know about new 
> codes) will want to handle these.
> 
> A possible remedy to would be to register new status codes from the 
> application itself. My first try of just adding a new attribute to the 
> class fails because they are not 'realized' as the _enumerants are cached.
> 
> I can imagine this also goes for unknown HTTP methods and HTTP status 
> codes, used as examples in the documentation. Any suggestions on how to 
> handle such unknown constants?
> 
> 
> [1] <http://xmpp.org/extensions/xep-0045.html#statuscodes>

twisted.python.constants is a work in progress; there are many planned features that it doesn't have yet.  Perhaps you should simply add the feature that you want - the ability to adding new attributes to the class?

-glyph




From muaazhussain128 at gmail.com  Sat Dec 31 18:52:21 2011
From: muaazhussain128 at gmail.com (muaaz)
Date: Sun, 1 Jan 2012 01:52:21 +0000 (GMT)
Subject: [Twisted-Python]
 uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijkklklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljkkoo:Twisted-Python
 Digest, Vol 93, Issue 27
Message-ID: <1079968192.1.1325382741160.JavaMail.javamailuser@localhost>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120101/fb8122da/attachment.html>

From sykadul at astalavista.com  Sat Dec 31 18:53:59 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:53:59 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljkkoo?=
	=?utf-8?q?=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_27?=
Message-ID: <20120101015359.14981.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:54:29 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:54:29 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljkljk?=
	=?utf-8?q?koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_27?=
Message-ID: <20120101015429.15125.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:55:10 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:55:10 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpojiljk?=
	=?utf-8?q?ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_Issue_?=
	=?utf-8?q?27?=
Message-ID: <20120101015510.15304.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:55:46 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:55:46 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmpoji?=
	=?utf-8?q?ljk=09ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_93=2C_?=
	=?utf-8?q?Issue_=0927?=
Message-ID: <20120101015546.15382.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:56:15 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:56:15 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozoujlmp?=
	=?utf-8?q?oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Digest=2C_Vol_?=
	=?utf-8?q?93=2C_=09Issue_=0927?=
Message-ID: <20120101015615.15490.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:56:44 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:56:44 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzooozouj?=
	=?utf-8?q?lmp=09oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Digest?=
	=?utf-8?b?LCBWb2wgCTkzLCAJSXNzdWUgCTI3?=
Message-ID: <20120101015644.15636.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:57:10 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:57:10 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzoooz?=
	=?utf-8?q?ouj=09lmp=09oji=09ljk=09ljk=09koo=09=3ATwisted-Python_Di?=
	=?utf-8?b?Z2VzdAksIFZvbCAJOTMsIAlJc3N1ZSAJMjc=?=
Message-ID: <20120101015710.15703.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:57:51 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:57:51 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?q?=09=09=09=09=09=09=09klklbjkjjjmkjlmoklinkojkopojollohzo?=
	=?utf-8?b?b296CW91aglsbXAJb2ppCWxqawlsamsJa29vCTpUd2lzdGVkLVB5dGhv?=
	=?utf-8?b?biBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015751.15932.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:58:18 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:58:18 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?b?CQkJCQkJCQlrbGtsYmprampqbWtqbG1va2xpbmtvamtvcG9qb2xsb2h6?=
	=?utf-8?b?bwlvb3oJb3VqCWxtcAlvamkJbGprCWxqawlrb28JOlR3aXN0ZWQtUHl0?=
	=?utf-8?b?aG8JbiBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015818.16023.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From sykadul at astalavista.com  Sat Dec 31 18:58:47 2011
From: sykadul at astalavista.com (sykadul at astalavista.com)
Date: 1 Jan 2012 02:58:47 +0100
Subject: [Twisted-Python]
	=?utf-8?q?uhhvvccvv*n=2Ehnjjjjjjjjjjjjjuppiikijk?=
	=?utf-8?b?CQkJCQkJCQkJa2xrbGJqa2pqam1ramxtb2tsaW5rb2prb3Bvam9sbG9o?=
	=?utf-8?b?eglvCW9veglvdWoJbG1wCW9qaQlsamsJbGprCWtvbwk6VHdpc3RlZC1Q?=
	=?utf-8?b?eXQJaG8JbiBEaQlnZXN0CSwgVm9sIAk5MywgCUlzc3VlIAkyNw==?=
Message-ID: <20120101015847.16186.qmail@cfe1.sui-inter.net>

Ladies and gentleman, I will be unplugged from my email until the 17th of January.

In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs

Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com

Merry christmas and a happy new year!

Best regards,
Sykadul





From twisted at patrickmylund.com  Sat Dec 31 19:01:17 2011
From: twisted at patrickmylund.com (Patrick Mylund Nielsen)
Date: Sun, 1 Jan 2012 03:01:17 +0100
Subject: [Twisted-Python] uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijk
 klklbjkjjjmkjlmoklinkojkopojollohz o ooz ouj lmp oji ljk ljk koo
 :Twisted-Pyt ho n Di gest , Vol 93, Issue 27
In-Reply-To: <20120101015847.16186.qmail@cfe1.sui-inter.net>
References: <20120101015847.16186.qmail@cfe1.sui-inter.net>
Message-ID: <CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>

Reminds me not to try to make my own auto-reply bot, even if it's in Twisted ;)

On Sun, Jan 1, 2012 at 02:58,  <sykadul at astalavista.com> wrote:
> Ladies and gentleman, I will be unplugged from my email until the 17th of January.
>
> In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs
>
> Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com
>
> Merry christmas and a happy new year!
>
> Best regards,
> Sykadul
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From skaarjj at gmail.com  Sat Dec 31 20:35:03 2011
From: skaarjj at gmail.com (Adrian Overbury)
Date: Sun, 1 Jan 2012 14:35:03 +1100
Subject: [Twisted-Python] uhhvvccvv*n.hnjjjjjjjjjjjjjuppiikijk
	klklbjkjjjmkjlmoklinkojkopojollohz o ooz ouj lmp oji ljk ljk
	koo :Twisted-Pyt ho n Di gest , Vol 93, Issue 27
In-Reply-To: <CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>
References: <20120101015847.16186.qmail@cfe1.sui-inter.net>
	<CAEw2jfxjfF9MxB91Lem0yc4caMM91Ga76az6Kb6vB3H38GjgPQ@mail.gmail.com>
Message-ID: <8AC72985-1174-4757-9AAE-913A09CD67BA@gmail.com>

Remember: don't try to make your own auto-reply bot, even if it's in Twisted.

On 01/01/2012, at 1:01 PM, Patrick Mylund Nielsen <twisted at patrickmylund.com> wrote:

> Reminds me not to try to make my own auto-reply bot, even if it's in Twisted ;)
> 
> On Sun, Jan 1, 2012 at 02:58,  <sykadul at astalavista.com> wrote:
>> Ladies and gentleman, I will be unplugged from my email until the 17th of January.
>> 
>> In the mean time here's a video of a bunny opening your mail http://www.youtube.com/watch?v=LMyaRmTwdKs
>> 
>> Your mail will not be forwarded and I will contact you when I come back, alternatively you can contact one of the other administrators or email info at astalavista.com
>> 
>> Merry christmas and a happy new year!
>> 
>> Best regards,
>> Sykadul
>> 
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Sat Dec 31 22:05:45 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Jan 2012 05:05:45 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1325394345.44.2061032935@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20120101/b89d3c5c/attachment-0001.html>

