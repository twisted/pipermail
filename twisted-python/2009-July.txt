From bogus@does.not.exist.com  Sun Jul  5 16:38:06 2009
From: bogus@does.not.exist.com ()
Date: Sun, 05 Jul 2009 20:38:06 -0000
Subject: No subject
Message-ID: <mailman.5.1246826597.728.twisted-python@twistedmatrix.com>



From termim at gmail.com  Thu Jul  2 00:08:21 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 2 Jul 2009 04:08:21 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
Message-ID: <loom.20090702T031116-652@post.gmane.org>

IMHO there is a misunderstanding here. The point, at least from my POV is
to have the same functionality provided by twistd but with a different
interface. Right now twistd is a starter script that is used like:

    twistd -noy -l my.log my_app.tac

As far as I can understand the OP is missing (me as well) the possibility
to have the same functionality with:

   python my_app.py -noy -l my.log

or 

   my_app -noy -l my.log

without writing any kind of wrapping shell/python scripts.

In other words, if we consider example from the book:

file reverse_app.py:

    from twisted.application import service
    import reverse

    application = service.Application("Reverser")
    reverserService = reverse.ReverserService(()
    reverserServise.setServiceParent(application)

and:

    twistd -y reverse_app.py

I'd like to be able to have:

file reverse_app2.py:

    from twisted.application import service
    import reverse

    application = service.Application("Reverser")
    reverserService = reverse.ReverserService(()
    reverserServise.setServiceParent(application)

if __name__ == '__main__':
    from twisted.SOMETHING import run

    run(...)

  

Regards,
Mikhail




From chris.yan at saybot.com  Thu Jul  2 03:07:02 2009
From: chris.yan at saybot.com (Chris)
Date: Thu, 02 Jul 2009 15:07:02 +0800
Subject: [Twisted-Python] problem on running apache2 + scgi
Message-ID: <4A4C5C96.5000707@saybot.com>

Hi,
I was working on a project which use twisted.web2 scgi.I chose apache2
as the front end web server.the apache2 server will receive a http POST
message which carry about 200k-1M data.I found that sometimes I get the
correct answer but sometimes there is a exception:
Traceback (most recent call last):
File "//usr/lib64/python2.5/site-packages/twisted/python/log.py", line
84, in callWithLogger
return callWithContext({"system": lp}, func, *args, **kw)
File "//usr/lib64/python2.5/site-packages/twisted/python/log.py", line
69, in callWithContext
return context.call({ILogContext: newCtx}, func, *args, **kw)
File "/usr/lib64/python2.5/site-packages/twisted/python/context.py",
line 59, in callWithContext
return self.currentContext().callWithContext(ctx, func, *args, **kw)
File "/usr/lib64/python2.5/site-packages/twisted/python/context.py",
line 37, in callWithContext
return func(*args,**kw)
--- <exception caught here> ---
File
"/usr/lib64/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
why = getattr(selectable, method)()
File "/usr/lib64/python2.5/site-packages/twisted/internet/tcp.py", line
463, in doRead
return self.protocol.dataReceived(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/channel/scgi.py",
line 72, in dataReceived
self.request.handleContentChunk(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/http.py", line
393, in handleContentChunk
self.stream.write(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/http.py", line
331, in write
stream.ProducerStream.write(self, data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/stream.py", line
667, in write
self.producer.pauseProducing()
exceptions.AttributeError: SCGIChannelRequest instance has no attribute
'pauseProducing'

it seems the error is from the twisted.web2 module,usually when the data
is very big,I will get this exception.how to avoid this exception? I
have to transfer the data in one request anyway.
Any suggestion is helpful.Thank you!

Regards
Chris




From pywinder at monkeydriveengine.com  Thu Jul  2 11:11:02 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 2 Jul 2009 11:11:02 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
	<d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
Message-ID: <b3a40fea0907020811g65480d77yc50264baf174732c@mail.gmail.com>

A very belated reply...

Thanks again for the code. From there, I was able to make a tool to clone
imap mailboxes from server to server. Right now, it's a beast held together
with rubber bands, and completely ignores use of a lot of other twisted
practices and conveniences (application, connection persistance, etc...).
At some point I'll clean it up and share, but in the mean time, if anybody
has any specific questions, let me know and I'll be happy to share what I
learned.



On Fri, Jun 12, 2009 at 4:40 AM, Alex Clemesha <clemesha at gmail.com> wrote:

> Hi,
>
> I've wondered myself how to do this, so thanks Phil.
>
> I extended Phil's solution to work with Gmail, which boils
> down to using SSL and setting the correct servername and port, see here:
> http://gist.github.com/128521
>
> Pywinder, you should be able to just change the username/password
> and it will work for you (you might have to have the python ssl module
> installed - post again if that is the case and it's not working for you)
>
> How to do useful stuff with the 'mailboxes' function in the script is
> another question (which I dont know the answer to).  Maybe post
> your usage if you have a chance.
>
>
> -Alex
>
>
>
>
>
> On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
> Singh<pywinder at monkeydriveengine.com> wrote:
> > Phil,
> >
> > Much obliged.
> >
> > Was able to isolate and confirm that the real issue is that login is
> hanging
> > for some reason, and causing the timeout message. I suspect SSL/TLS
> issues,
> > which at least gives me a decided place to start investigating.
> >
> > Thanks again for the code, it was sanity inducing to say the least. ;)
> >
> >
> > Phil Mayers wrote:
> >>
> >> Pywinder Singh wrote:
> >> >
> >> > Ideally, I'd love to see a snipped which is able to log into an imap
> >> > server and gets a list of mailboxes.  If the example on the site works
> >>
> >> Here you go:
> >>
> >> #!/usr/bin/python
> >>
> >> from twisted.internet import reactor, protocol, defer
> >> from twisted.mail import imap4
> >>
> >> # change these...
> >> username = '?'
> >> password = '?'
> >> servername = '?'
> >>
> >> def mailboxes(list):
> >>      for flags,sep,mbox in list:
> >>          print mbox
> >>
> >> def loggedin(res, proto):
> >>      d = proto.list('','*')
> >>      d.addCallback(mailboxes)
> >>      return d
> >>
> >> def connected(proto):
> >>      print "connected", proto
> >>      d = proto.login(username, password)
> >>      d.addCallback(loggedin, proto)
> >>      return d
> >>
> >> def failed(f):
> >>      print "failed", f
> >>      return f
> >>
> >> def done(_):
> >>      reactor.callLater(0, reactor.stop)
> >>
> >> def main():
> >>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
> >>      d = c.connectTCP(servername, 143)
> >>      d.addCallbacks(connected, failed)
> >>      d.addBoth(done)
> >>
> >> reactor.callLater(0, main)
> >> reactor.run()
> >>
> >>
> >> This example makes use of deferred chaining i.e. returning a deferred
> >> from a callback handler, so you'll want to understand that.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> Alex Clemesha
> clemesha.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090702/54a4510b/attachment.htm 

From phil at bubblehouse.org  Thu Jul  2 11:47:38 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 2 Jul 2009 11:47:38 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <loom.20090702T031116-652@post.gmane.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
Message-ID: <44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>

On Jul 2, 2009, at 12:08 AM, Mikhail wrote:
> IMHO there is a misunderstanding here. The point, at least from my  
> POV is
> to have the same functionality provided by twistd but with a different
> interface. Right now twistd is a starter script that is used like:
>
>    twistd -noy -l my.log my_app.tac
>
> As far as I can understand the OP is missing (me as well) the  
> possibility
> to have the same functionality with:
>
>   python my_app.py -noy -l my.log
>
> or
>
>   my_app -noy -l my.log
>
> without writing any kind of wrapping shell/python scripts.

I think this point is well understood, but thank you for clarifying.

> In other words, if we consider example from the book:
[snip snip]
> I'd like to be able to have:
>
> file reverse_app2.py:
>
>    from twisted.application import service
>    import reverse
>
>    application = service.Application("Reverser")
>    reverserService = reverse.ReverserService(()
>    reverserServise.setServiceParent(application)
>
> if __name__ == '__main__':
>    from twisted.SOMETHING import run
>
>    run(...)

So, how is this not a wrapper script? The solution I provided in my  
last email is already workable, doesn't require shell scripting or  
launching a child process, and doesn't interfere with any of the  
functionality of the twistd feature. On top of that, it's only a few  
lines longer than the example you included here.

Perhaps you could point out some things that you *couldn't* do with  
the example I sent, or other stumbling blocks in using it?

At any rate, I don't think there's any disagreement about the fact  
that it would be nice for the twistd feature to be more flexible in  
the ways suggested, but it's a non-trivial undertaking.

OTOH, I'm quite sure that a patch would be welcomed (hint, hint) ;-)

-phil



From smhollingsworth at gmail.com  Thu Jul  2 16:13:42 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 2 Jul 2009 20:13:42 +0000
Subject: [Twisted-Python] Perspective broker remote calls to multiple
	servers seem to run sequentially
Message-ID: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>

Let me start off by warning everyone that I am extremely new to twisted
(I've been using it maybe a week) and it's highly likely some things don't
work the way I think they should. Or, I'm just using them incorrectly.

Some background on what I'm trying to accomplish:

I have a client/server system that reads in data values from a file
(anywhere between 10k and 1.5M, running every hour) and sends those off to a
server for processing. Processing each value takes some variable amount of
time and, given that I am doing this every hour, I need it to be as fast as
possible, which is why I was drawn to the asynchronous nature of python. I'm
using python because everything we do here is in python. I had the app
working well with a single server, but I need to scale it out to multiple
servers to get the processing time down. At first, I started writing my own
distributedish app, which worked (more or less), but had a enough niggly
issues that I started looking for something else. This morning I discovered
the Perspective Broker and that seemed to be the solution I needed.

The problems:

Right now, for development and testing, I have three servers running on
localhost on three ports. When I run my test code, it seems that each
Perspective Broker runs sequentially, rather than concurrently. For example,
if i watch the debugging output from the server, I see the following:

server 0 processing dataval1
server 0 processing dataval2
server 0 processing dataval3
server 0 processing dataval4
server 1 processing dataval*5*
server 1 processing dataval6
server 1 processing dataval7
server 2 processing dataval8
server 2 processing dataval9
server 2 processing dataval10

My understanding is that the perspective brokers would work concurrently. Is
that incorrect? My guess is that they should work concurrently and I am just
doing something wrong in my code, due to my very, very limited understanding
of how they work. Well, how much of twisted works, really.

Below is my the relevant code for the client (I've taken out code that just
deals with prepping data or debugging). Please keep in mind that this is
mostly testing code, while I get a better understanding of how perspective
brokers work and was cobbled together from examples and docs found online.

CLIENT CODE:

import sys, os
from twisted.spread import pb
from twisted.internet import reactor
import Queue

MY_PORT = 49981
SERVERS = 3

class Client:
    def __init__(self, host):
        self.out_count = 0
        self.in_count = 0
        self.total = 0
        self.in_file = open(sys.argv[1], 'rb')
        self.out_file = open(sys.argv[2], 'wb')

        # Create data queues for each server so that we can send data to
each server
        self.queues = []
        for server in range(0,SERVERS):
            self.queues.append(Queue.Queue())

        # Populate queues with data
        pos = 0
        for dv in self.in_file:
            dv = dv.strip()
            self.queues[pos % len(self.queues)].put(dv)
            pos += 1

        # Conenct to servers
        print 'Connecting to Servers...'
        for server in range(0, COUNT):
            factory = pb.PBClientFactory()
            reactor.connectTCP(host, server + MY_PORT, factory)
            factory.getRootObject().addCallbacks(self.connected,
self.connect_failure, [self.queues[server]])

    def connected(self, perspective, queue):
        print "connected"
        while 1:
            try:
                dv = queue.get_nowait()
            except Queue.Empty:
                break
            else:
                perspective.callRemote('process_data',
dv).addCallbacks(self.success, self.lookup_failure)

    def success(self, result):
        print result
        dv, answer = result
        self.in_count += 1
        self.out_file.write('%s,%s\n' % (dv, answer))
        if(self.in_count == self.out_count):
            self.out_file.close()
            reactor.stop()

    def connect_failure(self, _):
        print "Remote connect failure"
        self.out_file.close()
        reactor.stop()

    def lookup_failure(self, _):
        print "Remote lookup failure"
        self.out_file.close()
        reactor.stop()

Client("127.0.0.1")
reactor.run()

END CLIENT CODE

Any help anyone can provide will be greatly appreciated. I have another
question, too, but it can wait till this one is solved, since, for all I
know, whatever is causing this problem may be causing the other one.

Sean M Hollingsworth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090702/c5be05d0/attachment.htm 

From termim at gmail.com  Thu Jul  2 18:50:58 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 2 Jul 2009 22:50:58 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
	<44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>
Message-ID: <loom.20090702T221942-858@post.gmane.org>

Phil Christensen <phil <at> bubblehouse.org> writes:
> 
> So, how is this not a wrapper script? The solution I provided in my  

Yes, in a sense everything is a wrapper for something. :)

> last email is already workable, doesn't require shell scripting or  
> launching a child process, and doesn't interfere with any of the  
> functionality of the twistd feature. On top of that, it's only a few  
> lines longer than the example you included here.
> 

In my example I should have written 

    run(application)

instead of 

    run(...)

Then the difference would be more apparent. Namely, in my 'wrapper'
it is explicit what application will be run and where all the services
came from, your 'wrapper' is just a customized version of twistd and 
what will be run depends on the command line and what will be found 
in the file system. In some cases I'd like to _explicitly_ code into 
main script what functionality my application provides and I do not
want twistd search file system for plugins at all.

> Perhaps you could point out some things that you *couldn't* do with  
> the example I sent, or other stumbling blocks in using it?
>

I couldn't figure out how to use it without plugins. Obviously I'm 
missing something simple here. If you could extend your example to 
show how to use twistd functionality without writing plugins then it
would be just great.

> At any rate, I don't think there's any disagreement about the fact  
> that it would be nice for the twistd feature to be more flexible in  
> the ways suggested, but it's a non-trivial undertaking.
> 

Yes, that is probably why it is called twisted :)

Mikhail




From spongelavapaul at googlemail.com  Fri Jul  3 05:30:35 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Fri, 3 Jul 2009 10:30:35 +0100
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <loom.20090702T221942-858@post.gmane.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
	<44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>
	<loom.20090702T221942-858@post.gmane.org>
Message-ID: <58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>


On 2 Jul 2009, at 23:50, Mikhail wrote:

>
> In my example I should have written
>
>    run(application)
>
> instead of
>
>    run(...)
>
> Then the difference would be more apparent. Namely, in my 'wrapper'
> it is explicit what application will be run and where all the services
> came from, your 'wrapper' is just a customized version of twistd and
> what will be run depends on the command line and what will be found
> in the file system. In some cases I'd like to _explicitly_ code into
> main script what functionality my application provides and I do not
> want twistd search file system for plugins at all.

I'm not using plugins, but I had the same requirement as you to  
explicitly create the app and then run it - because I need the freeze  
scripts to make a single application.

My solution looked something like:

# myapp.py

from twisted.scripts._twistd_unix import UnixApplicationRunner
# Of course, that's just because the app is unix only


class MyRunner(UnixApplicationRunner):
	def createOrGetApplication(self):
		# The stuff that's usually in a tac file
		application = # ...
		return application

def main():
	setup_logging()
	config = { # stuff pinched by dumping 'config' during a twistd run
		}
	# Also do the ServerOptions thing here if necessary
	MyRunner(config).run()

if __name__ == '__main__'
	main()



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090703/097bf0ef/attachment.htm 

From johann.borck at densedata.com  Fri Jul  3 07:52:37 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Fri, 03 Jul 2009 13:52:37 +0200
Subject: [Twisted-Python] Perspective broker remote calls to multiple
 servers seem to run sequentially
In-Reply-To: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
References: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
Message-ID: <4A4DF105.9010000@densedata.com>

Sean Hollingsworth wrote:
> Let me start off by warning everyone that I am extremely new to 
> twisted (I've been using it maybe a week) and it's highly likely some 
> things don't work the way I think they should. Or, I'm just using them 
> incorrectly.
>
> [..]
>
> The problems:
>
> Right now, for development and testing, I have three servers running 
> on localhost on three ports. 
Are you running them in a single process?
> When I run my test code, it seems that each Perspective Broker runs 
> sequentially, rather than concurrently. For example, if i watch the 
> debugging output from the server, I see the following:
>
> server 0 processing dataval1
> server 0 processing dataval2
> server 0 processing dataval3
> server 0 processing dataval4
> server 1 processing dataval*5*
> server 1 processing dataval6
> server 1 processing dataval7
> server 2 processing dataval8
> server 2 processing dataval9
> server 2 processing dataval10
>
> My understanding is that the perspective brokers would work 
> concurrently. Is that incorrect? My guess is that they should work 
> concurrently and I am just doing something wrong in my code, due to my 
> very, very limited understanding of how they work. Well, how much of 
> twisted works, really.
>

> Below is my the relevant code for the client (I've taken out code that 
> just deals with prepping data or debugging). Please keep in mind that 
> this is mostly testing code, while I get a better understanding of how 
> perspective brokers work and was cobbled together from examples and 
> docs found online.
>

[...]

With the client code, nothing seems wrong, since it doesn't enforce one 
job to be finished before starting the next one - the problem has to be 
on the server side. Actually I suspect you're running the same service 
on 3 ports but within one process, right?. If this is the case it's no 
wonder the order of jobs completed matches exactly the order they're 
arriving in  because it all happens in a single thread. If you want 
parallel processing you will have to use multiple processes. As a side 
note (which doesn't seem to apply here): if the work they're doing is 
not CPU-bound, but IO-bound (meaning the work is nothing but waiting for 
something to complete, which for some reason can't be done in an 
asynchronous manner, the most prominent examples being blocking database 
interfaces), you also have the alternative of using threads.

I think the basic problem is you're assuming twisted to somehow schedule 
the work to different cores/cpus, which it doesn't do by default. You 
might want to look at ampoule https://launchpad.net/ampoule, which is a 
process pool, there was another similar thing called AsynQueue, but the 
site is down atm: http://foss.eepatents.com/AsynQueue.

hth,
Johann






From smhollingsworth at gmail.com  Fri Jul  3 09:34:53 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Fri, 3 Jul 2009 09:34:53 -0400
Subject: [Twisted-Python] Perspective broker remote calls to multiple
	servers seem to run sequentially
In-Reply-To: <4A4DF105.9010000@densedata.com>
References: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
	<4A4DF105.9010000@densedata.com>
Message-ID: <66dccc4d0907030634q1fd092c5lafd54f5d9d2d818a@mail.gmail.com>

Geez .... what a HUGE duh moment. This will ultimately run on multiple
remote servers, but, while doing initial testing, I have been running it on
just my dev box. And, of course, I keep forgetting that twisted (well,
python) doesn't make use of multiple cores. I wasted all yesterday trying to
figure out why this was running the way it was.....
A million thanks.

Sean

On Fri, Jul 3, 2009 at 7:52 AM, Johann Borck <johann.borck at densedata.com>wrote:

> Sean Hollingsworth wrote:
> > Let me start off by warning everyone that I am extremely new to
> > twisted (I've been using it maybe a week) and it's highly likely some
> > things don't work the way I think they should. Or, I'm just using them
> > incorrectly.
> >
> > [..]
> >
> > The problems:
> >
> > Right now, for development and testing, I have three servers running
> > on localhost on three ports.
> Are you running them in a single process?
> > When I run my test code, it seems that each Perspective Broker runs
> > sequentially, rather than concurrently. For example, if i watch the
> > debugging output from the server, I see the following:
> >
> > server 0 processing dataval1
> > server 0 processing dataval2
> > server 0 processing dataval3
> > server 0 processing dataval4
> > server 1 processing dataval*5*
> > server 1 processing dataval6
> > server 1 processing dataval7
> > server 2 processing dataval8
> > server 2 processing dataval9
> > server 2 processing dataval10
> >
> > My understanding is that the perspective brokers would work
> > concurrently. Is that incorrect? My guess is that they should work
> > concurrently and I am just doing something wrong in my code, due to my
> > very, very limited understanding of how they work. Well, how much of
> > twisted works, really.
> >
>
> > Below is my the relevant code for the client (I've taken out code that
> > just deals with prepping data or debugging). Please keep in mind that
> > this is mostly testing code, while I get a better understanding of how
> > perspective brokers work and was cobbled together from examples and
> > docs found online.
> >
>
> [...]
>
> With the client code, nothing seems wrong, since it doesn't enforce one
> job to be finished before starting the next one - the problem has to be
> on the server side. Actually I suspect you're running the same service
> on 3 ports but within one process, right?. If this is the case it's no
> wonder the order of jobs completed matches exactly the order they're
> arriving in  because it all happens in a single thread. If you want
> parallel processing you will have to use multiple processes. As a side
> note (which doesn't seem to apply here): if the work they're doing is
> not CPU-bound, but IO-bound (meaning the work is nothing but waiting for
> something to complete, which for some reason can't be done in an
> asynchronous manner, the most prominent examples being blocking database
> interfaces), you also have the alternative of using threads.
>
> I think the basic problem is you're assuming twisted to somehow schedule
> the work to different cores/cpus, which it doesn't do by default. You
> might want to look at ampoule https://launchpad.net/ampoule, which is a
> process pool, there was another similar thing called AsynQueue, but the
> site is down atm: http://foss.eepatents.com/AsynQueue.
>
> hth,
> Johann
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090703/4d481e25/attachment.htm 

From grickert at coldstorage.com  Fri Jul  3 10:17:12 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 10:17:12 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>

I have a (Twisted) program that saves & uses a file in the current
working directory.
When running tests for the program, Trial changes the working directory,
causing this file to be written into the '_trial_temp' directory
instead.
...so the program works differently when run via Trial vs. in normal
use.

There are a number of solutions to this, but I'd just like to understand
the reasoning behind this surprising behaviour.
The docs say that this: "...allows them to write whatever data they like
to disk, and not worry about polluting the current working directory"
...couldn't they just do this without changing the working directory?

One of the things I love about python is that things just seem to work
like you expect - I'm rarely surprised by it's behaviour.
Twisted, OTOH, continually surprises me...and not like
getting-a-pony-on-your-10th-birthday type of surprise.

Don't get me wrong, I love Twisted...it makes writing
networked/asynchronous programs a breeze.  
...everything I write now (in Python), just seems to "need" Twisted.
I just find Twisted's idiosyncrasies frustrating sometimes.

Sorry for the rant,
	Gerrat




From grickert at coldstorage.com  Fri Jul  3 10:32:07 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 10:32:07 -0400
Subject: [Twisted-Python] (Mis)indented Posts
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>

...ok, I've created a new post twice on this list twice, and both times
my post has been indented and placed under a completely
different/irrelevant post

Here:
http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.html
And Here:
http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.html

...if this post hijacks a thread as well, then it will be 3 times.

...this seems to be something specific to the twisted python mailing
list:
http://www.mail-archive.com/mailman-users%40python.org/msg53996.html


Gerrat



From exarkun at divmod.com  Fri Jul  3 11:26:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 11:26:48 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>
Message-ID: <20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>

On Fri, 3 Jul 2009 10:17:12 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>I have a (Twisted) program that saves & uses a file in the current
>working directory.
>When running tests for the program, Trial changes the working directory,
>causing this file to be written into the '_trial_temp' directory
>instead.
>...so the program works differently when run via Trial vs. in normal
>use.

The only difference I can infer from your description is whether the file
in question is created in the directory you invoke the program from (in
the non-trial case) or in the _trial_temp subdirectory of that directory
(in the trial case).  It's not obvious to me why this might be a problem.

>
>There are a number of solutions to this, but I'd just like to understand
>the reasoning behind this surprising behaviour.
>The docs say that this: "...allows them to write whatever data they like
>to disk, and not worry about polluting the current working directory"
>...couldn't they just do this without changing the working directory?

This is an ancient feature of trial, from the days when Twisted's own test
suite (the primary driver of trial development for many years) was even
more crufty than it is today.  In those days, many tests just created files
in the working directory.  The _trial_temp feature provided a single fix
which addressed the mess created by all of the tests in one fell swoop.  The
behavior is still convenient for tests which aren't written carefully in
this regard.

Jean-Paul



From exarkun at divmod.com  Fri Jul  3 11:49:05 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 11:49:05 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
Message-ID: <20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>

On Fri, 3 Jul 2009 10:32:07 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>...ok, I've created a new post twice on this list twice, and both times
>my post has been indented and placed under a completely
>different/irrelevant post
>
>Here:
>http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.html
>And Here:
>http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.html
>
>...if this post hijacks a thread as well, then it will be 3 times.
>
>...this seems to be something specific to the twisted python mailing
>list:
>http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>

I don't really know much about how mailman generates those threaded views.
twisted-python is running on an unmodified mailman 1:2.1.9-9ubuntu1 install.
Perhaps this could be caused by exim4 configuration somehow (we do have
various exim4 configuration customizations), but that's the only thing I
can think of.  Any pointers on what information is used to determine the
threading structure of messages?

Jean-Paul



From grickert at coldstorage.com  Fri Jul  3 12:18:26 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 12:18:26 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
In-Reply-To: <20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>
	<20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE8A8@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>Sent: Friday, July 03, 2009 11:27 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Twisted Trial changes working directory
>
>On Fri, 3 Jul 2009 10:17:12 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>>I have a (Twisted) program that saves & uses a file in the current
>>working directory.
>>When running tests for the program, Trial changes the working
>directory,
>>causing this file to be written into the '_trial_temp' directory
>>instead.
>>...so the program works differently when run via Trial vs. in normal
>>use.
>
>The only difference I can infer from your description is whether the
>file
>in question is created in the directory you invoke the program from (in
>the non-trial case) or in the _trial_temp subdirectory of that
directory
>(in the trial case).  It's not obvious to me why this might be a
>problem.

...and it turns out not to really be a Trial-specific problem - more a
problem with my expectations.
The file takes a while to generate, and I just expected it to be there
after running the program the first time.
- it will get regenerated if it doesn't exist, and I can easily copy it
to the _trial_temp directory for testing

>
>>
>>There are a number of solutions to this, but I'd just like to
>understand
>>the reasoning behind this surprising behaviour.
>>The docs say that this: "...allows them to write whatever data they
>like
>>to disk, and not worry about polluting the current working directory"
>>...couldn't they just do this without changing the working directory?
>
>This is an ancient feature of trial, from the days when Twisted's own
>test
>suite (the primary driver of trial development for many years) was even
>more crufty than it is today.  In those days, many tests just created
>files
>in the working directory.  The _trial_temp feature provided a single
fix
>which addressed the mess created by all of the tests in one fell swoop.
>The
>behavior is still convenient for tests which aren't written carefully
in
>this regard.
>
>Jean-Paul

Thanks for the explanation.  




From grickert at coldstorage.com  Fri Jul  3 16:11:38 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 16:11:38 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
	<20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04647084@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: Jean-Paul Calderone [mailto:exarkun at divmod.com]
>Sent: Friday, July 03, 2009 11:49 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts (list
administrativia)
>
>On Fri, 3 Jul 2009 10:32:07 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>>...ok, I've created a new post twice on this list twice, and both
times
>>my post has been indented and placed under a completely
>>different/irrelevant post
>>
>>Here:
>>http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.htm
l
>>And Here:
>>http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.htm
l
>>
>>...if this post hijacks a thread as well, then it will be 3 times.
>>
>>...this seems to be something specific to the twisted python mailing
>>list:
>>http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>>
>
>I don't really know much about how mailman generates those threaded
>views.
>twisted-python is running on an unmodified mailman 1:2.1.9-9ubuntu1
>install.
>Perhaps this could be caused by exim4 configuration somehow (we do have
>various exim4 configuration customizations), but that's the only thing
I
>can think of.  Any pointers on what information is used to determine
the
>threading structure of messages?
>
>Jean-Paul
>

Well, according to Mark Sapiro on the mailman list, in general, 
"It is based on In-Reply-To: and/or References: headers"

...but I assume you're looking for something a little more specific
here.




From exarkun at divmod.com  Fri Jul  3 16:42:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 16:42:44 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04647084@ccs-ex01.coldstorage.com>
Message-ID: <20090703204244.22176.351896624.divmod.quotient.12575@henry.divmod.com>

On Fri, 3 Jul 2009 16:11:38 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>
>Well, according to Mark Sapiro on the mailman list, in general,
>"It is based on In-Reply-To: and/or References: headers"
>
>...but I assume you're looking for something a little more specific
>here.
>

A bit.  Looking at the messages in question, there are no In-Reply-To or
References headers which would suggest the threading structure mailman is
deciding on.

Jean-Paul



From asset at impactdamage.com  Sat Jul  4 05:11:36 2009
From: asset at impactdamage.com (asset)
Date: Sat, 4 Jul 2009 02:11:36 -0700
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
	and terminal protocol instance of all connected users.
Message-ID: <c87459b$71ff328b$70618c95$@com>

Ive been at it for several days now trying to get at the username 
(avatarId), session id (SSHChannel session # I imagine), and terminal 
protocol instance (recvline.HistoricRecvLine) of my application's SSH 
terminal service's clients.  Specifically, I'm trying to expose these three 
things (for all connected users) to my terminal commands which are using 
the plugin system.

I'm not considerably far off from this example for the setup, 
http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvline
.tac, minus the telnet support.

For the life of me I can't seem to determine how best to approach this.  
Ive come as far as getting a list of the terminal recvline.HistoricRecvLine 
instances and then being able to manipulate the client terminals directly, 
but I need the usernames from the avatars and session id as well.

I imagine this is a pretty common and simple thing, so I'm hoping that 
somebody can point me in the right direction.  Please help if you can.

Thx,

TWKiel
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090704/8a91c2b6/attachment.htm 

From exarkun at divmod.com  Sat Jul  4 13:16:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 4 Jul 2009 13:16:48 -0400
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
 and terminal protocol instance of all connected users.
In-Reply-To: <c87459b$71ff328b$70618c95$@com>
Message-ID: <20090704171648.22176.757872348.divmod.quotient.12888@henry.divmod.com>

On Sat, 4 Jul 2009 02:11:36 -0700, asset <asset at impactdamage.com> wrote:
>Ive been at it for several days now trying to get at the username
>(avatarId), session id (SSHChannel session # I imagine), and terminal
>protocol instance (recvline.HistoricRecvLine) of my application's SSH
>terminal service's clients.  Specifically, I'm trying to expose these three
>things (for all connected users) to my terminal commands which are using
>the plugin system.
>
>I'm not considerably far off from this example for the setup,
>http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvline
>.tac, minus the telnet support.
>
>For the life of me I can't seem to determine how best to approach this.
>Ive come as far as getting a list of the terminal recvline.HistoricRecvLine
>instances and then being able to manipulate the client terminals directly,
>but I need the usernames from the avatars and session id as well.
>
>I imagine this is a pretty common and simple thing, so I'm hoping that
>somebody can point me in the right direction.  Please help if you can.

The realm's requestAvatar is passed the avatarId:

http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole_ssh.py#L82

See how this realm (which I assume is the one you're using, since it is the
one used by demo_recvline) passes the avatarId to its `userFactory?, but the
`TerminalUser? which is the default `userFactory? ignores it.

It seems like you want to provide an alternate `userFactory? which saves the
avatarId passed to it.

For the session id, perhaps this information you can find on the connection
object.  See the API documentation:

http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.connection.SSHConnection.html

Jean-Paul



From travis+ml-twisted at subspacefield.org  Sat Jul  4 20:08:42 2009
From: travis+ml-twisted at subspacefield.org (travis+ml-twisted at subspacefield.org)
Date: Sat, 4 Jul 2009 19:08:42 -0500
Subject: [Twisted-Python] buildProtocol never called
In-Reply-To: <20090530231754.GA10964@subspacefield.org>
References: <20090530231754.GA10964@subspacefield.org>
Message-ID: <20090705000842.GB12378@subspacefield.org>

On Sat, May 30, 2009 at 06:17:54PM -0500, travis+ml-twisted at subspacefield.org wrote:
> The problem I'm having is this; I upgraded my firewall from OpenBSD
> 4.2 or so to OpenBSD 4.5, and now I'm working with newer versions of
> all the software including Twisted.
> 
> The program works fine normally, and can run in the background, but if I
> invoke a daemonize() routine that turns it into a network daemon, it
> refuses to serve incoming TCP connections.  Actually the TCP connection
> is made, but the software never responds to it.
> 
> Specifically, my twisted.internet.protocol.Factory instance is created,
> but buildProtocol is never called.
> 
> Before I dive deeply into debugging the software, I thought I'd ask if
> anyone knew off the top of their head any reason why Twisted might not
> act the same if it was daemonized (no controlling terminal, no
> stdin/out/err, forked as a background process).

I ran ktrace/kdump against the binary and it appears that python likes to
open file handles to the script and certain modules for file descriptors
5-7 or so (depending on how much you import), and if you close those file
descriptors, unusual things happen when python tries to access them.

In the end I decided it was not important enough to close all the parent's
file descriptors, and it runs fine as a deamon leaving them open.
-- 
Obama Nation | My emails do not have attachments; it's a digital signature
that your mail program doesn't understand. | http://www.subspacefield.org/~travis/ 
If you are a spammer, please email john at subspacefield.org to get blacklisted.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090704/6193fcb4/attachment.pgp 

From exarkun at twistedmatrix.com  Sun Jul  5 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1246766712.09.192113370@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090705/a3cede39/attachment.htm 

From foom at fuhm.net  Sun Jul  5 16:51:00 2009
From: foom at fuhm.net (James Y Knight)
Date: Sun, 5 Jul 2009 16:51:00 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
Message-ID: <461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>


On Jul 3, 2009, at 10:32 AM, Gerrat Rickert wrote:

> ...ok, I've created a new post twice on this list twice, and both  
> times
> my post has been indented and placed under a completely
> different/irrelevant post
>
> Here:
> http://twistedmatrix.com/pipermail/twisted-python/2009-June/ 
> 019859.html
> And Here:
> http://twistedmatrix.com/pipermail/twisted-python/2009-July/ 
> 019902.html
>
> ...if this post hijacks a thread as well, then it will be 3 times.
>
> ...this seems to be something specific to the twisted python mailing
> list:
> http://www.mail-archive.com/mailman-users%40python.org/msg53996.html

I really don't know how that could be specific to the twisted python  
list. I notice in the referenced message, Mark Sapiro says that  
rebuilding the archives from the mbox file generated correct threading  
for him. Well, I just did that, ("mmarch --wipe twisted-python") and  
it generated the same incorrect bad threading.

Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed  
already upstream?

James

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From kristian at spritelink.net  Sun Jul  5 18:32:20 2009
From: kristian at spritelink.net (Kristian Larsson)
Date: Mon, 6 Jul 2009 00:32:20 +0200
Subject: [Twisted-Python] XML-RPC over Unix Sockets?
Message-ID: <20090705223220.GJ66062@spritelink.se>

Hello!
 
I'm trying to build a client / server setup using
XML-RPC run over UNIX sockets.

Putting together the server part was a breeze,
just define an xmlrpc class and have the reactor
use it with a listenUNIX() call.

Now, since I've been unable to put together a
client I don't really know that the server works,
but I'm assuming it is. At least it does not
generate any run-time errors.

Now, on the client on the other hand I've
basically copied this example:
http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html#auto5 

but replaced the Proxy connection string with:
	proxy = Proxy('file:///tmp/my_socket')
in the hope that it would just magically work.
It did not. 

Having a look at
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/web/xmlrpc.py#L328 
I see that the callRemote() method only seem to
support connectTCP() and connectSSL(). Should it
not also support connectUNIX? Is there any reason
it does not?

Am I insane? Is XML-RPC over UNIX domain sockets
just plain crazy, or is there even some flaw that
makes it impossible?

Any suggestions are most welcome. Thank you.
 
Kind regards,
   Kristian. 

-- 
Kristian Larsson                                        KLL-RIPE
+46 704 910401			              kll at spritelink.net

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Sun Jul  5 21:30:23 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 06 Jul 2009 01:30:23 -0000
Subject: [Twisted-Python] XML-RPC over Unix Sockets?
In-Reply-To: <20090705223220.GJ66062@spritelink.se>
References: <20090705223220.GJ66062@spritelink.se>
Message-ID: <20090706013023.12555.694685340.divmod.xquotient.14762@weber.divmod.com>


On 5 Jul, 10:32 pm, kristian at spritelink.net wrote:
>I'm trying to build a client / server setup using
>XML-RPC run over UNIX sockets.

>Now, on the client on the other hand I've
>basically copied this example:
>http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html#auto5
>
>but replaced the Proxy connection string with:
>         proxy = Proxy('file:///tmp/my_socket')

>Am I insane? Is XML-RPC over UNIX domain sockets
>just plain crazy, or is there even some flaw that
>makes it impossible?
>
>Any suggestions are most welcome. Thank you.

It may be possible to do, but there are a number of ugly details that 
you've ignored.  For example, when one has an URL like 
'http://example.com/my/custom/site/RPC2', it's very clear where the host 
(network endpoint) is and where the path (thing that you send to that 
network endpoint to identify the resource) is.

But if you have 'file:///tmp/example_com/my/custom/site/RPC2' it's not 
at a all clear which of those things is a directory, which is a socket, 
and which is a path for the HTTP part which isn't present in the 
filesystem at all.

This would certainly require some reworking of Twisted's HTTP internals 
and the creation of a new URL scheme so that those things could be 
identified.  I wouldn't say that these changes would be rejected out of 
hand, necessarily, but you would have to have pretty good test coverage, 
good documentation and an explanation of why such a thing would be a 
better idea than an HTTP server listening only on localhost :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From grickert at coldstorage.com  Mon Jul  6 08:46:39 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 6 Jul 2009 08:46:39 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
	<461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of James Y Knight
>Sent: Sunday, July 05, 2009 4:51 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>
>On Jul 3, 2009, at 10:32 AM, Gerrat Rickert wrote:
>
>> ...ok, I've created a new post twice on this list twice, and both
>> times
>> my post has been indented and placed under a completely
>> different/irrelevant post
>>
>> Here:
>> http://twistedmatrix.com/pipermail/twisted-python/2009-June/
>> 019859.html
>> And Here:
>> http://twistedmatrix.com/pipermail/twisted-python/2009-July/
>> 019902.html
>>
>> ...if this post hijacks a thread as well, then it will be 3 times.
>>
>> ...this seems to be something specific to the twisted python mailing
>> list:
>> http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>
>I really don't know how that could be specific to the twisted python
>list. I notice in the referenced message, Mark Sapiro says that
>rebuilding the archives from the mbox file generated correct threading
>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>it generated the same incorrect bad threading.
>
>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>already upstream?
>
>James

Thanks for testing this James.  Before I send this back to the mailman
list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1 mailman
installation you rebuilt on?  ie. is there any custom configuration
specific to this list that could be causing this odd behaviour (instead
of a bug with the ubuntu version)?  [please excuse my ignorance if this
question doesn't make sense - I know nothing about mailman...I just want
to stop hijacking threads when I post here]

Thanks, Gerrat

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jared.gisin at isilon.com  Mon Jul  6 13:58:29 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Mon, 6 Jul 2009 10:58:29 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com><AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org><loom.20090702T031116-652@post.gmane.org><44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org><loom.20090702T221942-858@post.gmane.org>
	<58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
Message-ID: <0C40B34038FD824FACDB387E7788728702D19693@seaxch08.desktop.isilon.com>

Mikhail is correct in what needs to be done here. Twistd should provide
helpers to writing an application without being the application. Not
every wants to make it look like they're using twisted, even if they
are. Having a twistd process appear in my process list is unacceptable,
and my applications takes a well know and singular config. Twistd should
be nothing more than a general helper.

 

Ultimately what Mikhail shows is very similar to what I have done by
import directly the ApplicationRunner I want to use (my app is also
Unix-only), and then subclassing ServerOptions. I also modified
createorGetApplication to return an application object instead  of
loading it from some damned .tac file that is passed in on the CLI,
which was exactly the thing that was trying to be avoided. My
application is defined already in code, so I should be able to create my
application object, and pass it right into a runner with proper
application options and have it fire up avoiding the generalities of
twistd that don't apply to me. Again, twistd is great at supporting one
use case. It needs to support others, and it needs to be refactored just
a bit more to do that. It wouldn't be as difficult to do this as you
probably imagine, and proper documentation on more ways it could be used
would save developers a ton of time. Now, if I only had the time to get
this done.... I'll see if I can refactor and provide some sample code to
at serves the use case we are discussing here. As I was told early on in
this inquiry, this problem isn't an uncommon complaint, so solving it
seems useful.

 

-Jared

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Paul
Thomas
Sent: Friday, July 03, 2009 2:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] untwisting twistd

 

 

On 2 Jul 2009, at 23:50, Mikhail wrote:






In my example I should have written 

   run(application)

instead of 

   run(...)

Then the difference would be more apparent. Namely, in my 'wrapper'
it is explicit what application will be run and where all the services
came from, your 'wrapper' is just a customized version of twistd and 
what will be run depends on the command line and what will be found 
in the file system. In some cases I'd like to _explicitly_ code into 
main script what functionality my application provides and I do not
want twistd search file system for plugins at all.

 

I'm not using plugins, but I had the same requirement as you to
explicitly create the app and then run it - because I need the freeze
scripts to make a single application.

 

My solution looked something like:

 

# myapp.py

 

from twisted.scripts._twistd_unix import UnixApplicationRunner

# Of course, that's just because the app is unix only

 

 

class MyRunner(UnixApplicationRunner):

            def createOrGetApplication(self):

                        # The stuff that's usually in a tac file

                        application = # ...

                        return application

 

def main():

            setup_logging()

            config = { # stuff pinched by dumping 'config' during a
twistd run

                        }

            # Also do the ServerOptions thing here if necessary

            MyRunner(config).run()

 

if __name__ == '__main__'

            main()

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090706/8d5dfcd9/attachment.htm 

From jml at mumak.net  Tue Jul  7 03:54:19 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 7 Jul 2009 17:54:19 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
Message-ID: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>

Hello all,

With some trepidation and a complete willingness to fail, I'm offering
my services as Twisted release manager, starting Tuesday next week.

I have only two questions:
  - Am I accepted?
  - Where do I begin?

jml


From glyph at divmod.com  Tue Jul  7 06:07:15 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 07 Jul 2009 10:07:15 -0000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
Message-ID: <20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>


On 07:54 am, jml at mumak.net wrote:
>Hello all,
>
>With some trepidation and a complete willingness to fail, I'm offering
>my services as Twisted release manager, starting Tuesday next week.

Hooray!
>I have only two questions:
>  - Am I accepted?

MWAHAHAHAHAHA, WELCOME TO YOUR DOOM!

By which I mean, "yes".  radix and exarkun have both dedicated some 
effort to making this release happen, and I'm sure we'll all continue to 
help you in this role, but there has been a discernable ... lack of 
enthusiasm for anyone to wear the official "release manager" hat.  We 
all appreciate your brave sacrifice.
>  - Where do I begin?

There is a ticket, <http://twistedmatrix.com/trac/ticket/3860>, which 
you will now find is assigned to you.

Some work has already taken place to update the NEWS files on a branch 
for that ticket, which is the bulk of the work associated with the 
releases, but it's not complete.  Also, since this branch was made, some 
features have been added and some regressions fixed, so it should be 
merged forward.

So, you should start with those two things.  Once that's done, it needs 
to be reviewed and merged, like a regular branch.  Since you've been so 
gracious as to be the release manager, I'll volunteer for some deputy- 
release-manager responsibilities and be personally responsible for that 
review.  I don't mind if somebody beats me to it, but let me know when 
you think you'll be done and I'll make an effort to be available on IRC 
to do the review immediately once you're done.

There are still some outstanding tickets in the "8.2+1" milestone: you 
should either harass someone to fix them, or remove them from the 
milestone and roll them over into a new one, so that they don't linger 
past the actual release: <http://bit.ly/twisted-9-milestone>.

Finally, you have to actually cut the release.  A bewildering array of 
out-of-date, incomplete, and incorrect information about how to do that 
can be found here:

    <http://twistedmatrix.com/trac/wiki/ReleaseProcedure>

and can be inferred from here:

    <http://twistedmatrix.com/trac/wiki/ReleaseAutomation>

Chris can correct me if I'm wrong, but I believe the most up-to-date and 
correct information is to be found encoded in the tools linked from 
tickets on the ReleaseAutomation page.  There are a couple of command- 
line tools which you have to run, and once you've got their output it 
should be fairly obvious what to do.

Thanks again, and good luck!


From jesper at taxboel.dk  Tue Jul  7 11:20:41 2009
From: jesper at taxboel.dk (=?ISO-8859-1?Q?Jesper_Taxb=F8l?=)
Date: Tue, 7 Jul 2009 17:20:41 +0200
Subject: [Twisted-Python] Failed to load application: cannot import name app
Message-ID: <e78558910907070820q2bdff4b8j75fe3ea40a788417@mail.gmail.com>

Hi Guys,

I stumpled upon a small dns filter program, that I am having trouble
running, due to "twisted.internet.app" being deprecated. I get the following
output "Failed to load application: cannot import name app"

Im running "twistd (the Twisted daemon) 2.5.0"

Any advice on how to proceed?

Kind regards

Tax

#!/usr/bin/python
#
# Run this as root with the command
#   twistd -y dnsfilter.py

from twisted.internet import app, defer
from twisted.protocols import dns
from twisted.names import client, server

roots = [
('198.41.0.4',53), ('128.9.0.107',53), ('192.33.4.12',53),
('128.8.10.90',53),
('192.203.230.10',53), ('192.5.5.241',53), ('192.112.36.4',53),
('128.63.2.53',53), ('192.36.148.17',53), ('192.58.128.30',53),
('193.0.14.129',53), ('198.32.64.12',53), ('202.12.27.33',53), ]

#roots = [('202.129.64.42',53)]   # just use my ISP's DNS

VERISIGN='@^n\x0b' # 64.94.110.11

class AntiVerisignResolver(client.Resolver):
    def filterAnswers(self, message):
        if message.trunc:
            return
self.queryTCP(message.queries).addCallback(self.filterAnswers)
        else:
            for i in range(len(message.answers)):
                x = message.answers[i]
                if x.type==1 and x.payload and x.payload.address==VERISIGN:
                    message.answers[i] = None
            return (filter(lambda x:x,message.answers),
                    message.authority,
                    message.additional)

verbosity = 0
resolver = AntiVerisignResolver(servers=roots)
f = server.DNSServerFactory(clients=[resolver], verbose=verbosity)
p = dns.DNSDatagramProtocol(f)
f.noisy = p.noisy = verbosity

application = app.Application('Non caching anti-verisign domain name
resolver')
application.listenUDP(53, p)
application.listenTCP(53, f)


src:
http://osdir.com/ml/python.twisted/2003-09/msg00055.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090707/28f63316/attachment.htm 

From exarkun at divmod.com  Tue Jul  7 11:37:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Jul 2009 11:37:19 -0400
Subject: [Twisted-Python] Failed to load application: cannot import name
 app
In-Reply-To: <e78558910907070820q2bdff4b8j75fe3ea40a788417@mail.gmail.com>
Message-ID: <20090707153719.22176.558594791.divmod.quotient.13976@henry.divmod.com>

On Tue, 7 Jul 2009 17:20:41 +0200, Jesper Taxb?l <jesper at taxboel.dk> wrote:
>Hi Guys,
>
>I stumpled upon a small dns filter program, that I am having trouble
>running, due to "twisted.internet.app" being deprecated. I get the following
>output "Failed to load application: cannot import name app"
>
>Im running "twistd (the Twisted daemon) 2.5.0"
>
>Any advice on how to proceed?
>
>Kind regards
>
>Tax
>
> [snip]
>application = app.Application('Non caching anti-verisign domain name
>resolver')
>application.listenUDP(53, p)
>application.listenTCP(53, f)
>

I think the `listenUDP? line probably causes an AttributeError to be raised.
This prevents the tac file from being evaluated completely, so twistd ends
up with an exception instead of an application.  Take a look at the classes
in twisted.application.internet (eg UDPServer, TCPServer) for the way to set
up servers the new way.

Jean-Paul


From antonio.beamud at gmail.com  Tue Jul  7 13:13:33 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Tue, 07 Jul 2009 19:13:33 +0200
Subject: [Twisted-Python] Connecting to multiple servers
Message-ID: <4A53823D.8040303@gmail.com>

Hi all:
What's the smart way to close the reactor and exit in an app like that:

-------------------------
from twisted.internet import reactor
from twisted.web.client import getPage

def gotPageCallback(page):
     print "got a page!"

getPage('http://www.google.com').addCallback(gotPageCallback)
getPage('http://www.yahoo.com').addCallback(gotPageCallback)

reactor.run()
--------------------------

For example with a global counter and when reach to 2, then reactor.stop()?

If I use reactor.connectTCP a Connector object is returned and no
deferred to work with... How do I know when the connection has finished?

Greetings.



From grickert at coldstorage.com  Tue Jul  7 13:34:32 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 7 Jul 2009 13:34:32 -0400
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <4A53823D.8040303@gmail.com>
References: <4A53823D.8040303@gmail.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Antonio Beamud Montero
>Sent: Tuesday, July 07, 2009 1:14 PM
>To: Twisted general discussion
>Subject: [Twisted-Python] Connecting to multiple servers
>
>Hi all:
>What's the smart way to close the reactor and exit in an app like that:
>

...you could try this (slightly modified from your example):

from twisted.internet import reactor, defer
from twisted.web.client import getPage

def gotPageCallback(page):
     print "got a page!"

dlist = [getPage('http://www.google.com').addCallback(gotPageCallback)]
dlist.append(getPage('http://www.yahoo.com').addCallback(gotPageCallback
))

defer.DeferredList(dlist).addCallback(lambda _: reactor.stop())

reactor.run()



From sflist at ihonk.com  Tue Jul  7 17:18:17 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 14:18:17 -0700
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
Message-ID: <1247001497.8271.22089.camel@lothar>

Hi all,

If from inside my twisted program I do...

commands.getstatusoutput('sudo blah blah')

...it works great. If instead I do...

utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin',
args=('blah blah',))

...it gets stuck asking for the sudo password. I've tried a bunch of
variations in the latter call, like lumping the args into the executable
string, getting rid of "/usr/bin" in the executable, changing the path
to the executing user's home directory and so on. Any ideas?

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090707/926275f1/attachment.htm 

From maarten at treewalker.org  Tue Jul  7 17:46:39 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 7 Jul 2009 23:46:39 +0200
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
In-Reply-To: <1247001497.8271.22089.camel@lothar>
References: <1247001497.8271.22089.camel@lothar>
Message-ID: <200907072346.40323.maarten@treewalker.org>

On Tuesday 07 July 2009, Steve Freitas wrote:

> If from inside my twisted program I do...
>
> commands.getstatusoutput('sudo blah blah')
>
> ...it works great. If instead I do...
>
> utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin',
> args=('blah blah',))

Did you try "args=('blah', 'blah')"?

Unlike when using the full command line, spaces in arguments are most likely 
preserved instead of acting as separators.

Bye,
		Maarten



From michaelnt at gmail.com  Tue Jul  7 17:41:32 2009
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 7 Jul 2009 22:41:32 +0100
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
In-Reply-To: <1247001497.8271.22089.camel@lothar>
References: <1247001497.8271.22089.camel@lothar>
Message-ID: <4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>

2009/7/7 Steve Freitas <sflist at ihonk.com>:
> Hi all,
>
> If from inside my twisted program I do...
>
> commands.getstatusoutput('sudo blah blah')
>
> ...it works great. If instead I do...

Does working mean it sucessfully asks for the password or that it
doesn't ask for the password?

>
> utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin', args=('blah
> blah',))
>
> ...it gets stuck asking for the sudo password. I've tried a bunch of
> variations in the latter call, like lumping the args into the executable
> string, getting rid of "/usr/bin" in the executable, changing the path to
> the executing user's home directory and so on. Any ideas?

sudo can cache your password for a period of time, so you won't have
to enter it every time you run a sudo command.

Michael


From sflist at ihonk.com  Tue Jul  7 18:05:57 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 15:05:57 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>
References: <1247001497.8271.22089.camel@lothar>
	<4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>
Message-ID: <1247004357.8271.22235.camel@lothar>

Hi Michael

On Tue, 2009-07-07 at 22:41 +0100, Michael Thompson wrote:

> Does working mean it sucessfully asks for the password or that it
> doesn't ask for the password?


It successfully doesn't ask for the password.


> sudo can cache your password for a period of time, so you won't have
> to enter it every time you run a sudo command.


I have /etc/sudoers set up to never request a password for this case.

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090707/4de1cad3/attachment.htm 

From sflist at ihonk.com  Tue Jul  7 18:06:49 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 15:06:49 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <200907072346.40323.maarten@treewalker.org>
References: <1247001497.8271.22089.camel@lothar>
	<200907072346.40323.maarten@treewalker.org>
Message-ID: <1247004409.8271.22240.camel@lothar>

Hi Maarten,

On Tue, 2009-07-07 at 23:46 +0200, Maarten ter Huurne wrote:

> Did you try "args=('blah', 'blah')"?


Ah ha! That did it. Wonder why that works.

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090707/10c7f7f1/attachment.htm 

From exarkun at divmod.com  Tue Jul  7 19:25:16 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Jul 2009 19:25:16 -0400
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <1247004409.8271.22240.camel@lothar>
Message-ID: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>

On Tue, 07 Jul 2009 15:06:49 -0700, Steve Freitas <sflist at ihonk.com> wrote:
>Hi Maarten,
>
>On Tue, 2009-07-07 at 23:46 +0200, Maarten ter Huurne wrote:
>
>> Did you try "args=('blah', 'blah')"?
>
>
>Ah ha! That did it. Wonder why that works.
>

I suppose your sudoers configuration file wasn't recognizing the command
before (since it was indeed a different command) and so wasn't letting you
go through the no-password case.

Jean-Paul


From termim at gmail.com  Tue Jul  7 23:56:26 2009
From: termim at gmail.com (Mikhail)
Date: Wed, 8 Jul 2009 03:56:26 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com><AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org><loom.20090702T031116-652@post.gmane.org><44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org><loom.20090702T221942-858@post.gmane.org>
	<58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
	<0C40B34038FD824FACDB387E7788728702D19693@seaxch08.desktop.isilon.com>
Message-ID: <loom.20090708T035353-91@post.gmane.org>

Thanks Jared, this is exactly what I was missing!



From jml at mumak.net  Wed Jul  8 00:31:53 2009
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Jul 2009 14:31:53 +1000
Subject: [Twisted-Python] Possible Twisted sprint
Message-ID: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>

Hello all,

I've recently returned from EuroPython where I got a chance to work
with Thomas Herv? on Twisted. In the giddy rush of success I thought,
"Wouldn't it be great if we could get a whole week to do this?".

I propose that:
  - we arrange a week long sprint in Boston this year.
  - we ask the PSF & the TSF to assist with travel expenses for some
of the more distant community members
  - the Boston folk arrange a venue
  - individuals figure out how to get the time to attend.
  - we determine a date asap.

In the absence of any better ideas, I suggest that the theme of the
sprint be "fix as many bugs as possible".

As for the date, it should be no sooner than September 7. As a
starting point, let's say Sep 28-Oct 2.

Because we'll be asking external entities for money, it's important
that we get the details sorted out as soon as possible: when is it
going to be, who is flying in, how much do we need.

And, of course, the most important detail -- do you think we should do this?

psyched,
jml


From asset at impactdamage.com  Wed Jul  8 03:00:53 2009
From: asset at impactdamage.com (asset)
Date: Wed, 8 Jul 2009 00:00:53 -0700
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
	and terminal protocol instance of all connected users.
Message-ID: <40cb09f4$41615ff9$1d4e205$@com>

I got just what I needed with a custom TerminalRealm sending the avatarId 
and TerminalUser to a custom TerminalSession, grabbing client host, port, 
sessionno and terminal at openShell(); then put in some cleanup on 
closed().

Thanks for pointing me right where I needed to go!

------------------------------

On Sat, 4 Jul 2009 02:11:36 -0700, asset  wrote:
>Ive been at it for several days now trying to get at the username
>(avatarId), session id (SSHChannel session # I imagine), and terminal
>protocol instance (recvline.HistoricRecvLine) of my application's SSH
>terminal service's clients.  Specifically, I'm trying to expose these 
three
>things (for all connected users) to my terminal commands which are using
>the plugin system.
>
>I'm not considerably far off from this example for the setup,
>http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvlin
e
>.tac, minus the telnet support.
>
>For the life of me I can't seem to determine how best to approach this.
>Ive come as far as getting a list of the terminal 
recvline.HistoricRecvLine
>instances and then being able to manipulate the client terminals 
directly,
>but I need the usernames from the avatars and session id as well.
>
>I imagine this is a pretty common and simple thing, so I'm hoping that
>somebody can point me in the right direction.  Please help if you can.

The realm's requestAvatar is passed the avatarId:

http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole_ssh.py#L82


See how this realm (which I assume is the one you're using, since it is 
the
one used by demo_recvline) passes the avatarId to its `userFactory?, but 
the
`TerminalUser? which is the default `userFactory? ignores it.

It seems like you want to provide an alternate `userFactory? which saves 
the
avatarId passed to it.

For the session id, perhaps this information you can find on the 
connection
object.  See the API documentation:

http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.connection.
SSHConnection.html

Jean-Paul

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090708/db67f539/attachment-0001.htm 

From antonio.beamud at gmail.com  Wed Jul  8 04:41:45 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Wed, 08 Jul 2009 10:41:45 +0200
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
References: <4A53823D.8040303@gmail.com>
	<BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
Message-ID: <4A545BC9.4050608@gmail.com>

Gerrat Rickert escribi?:
> ...you could try this (slightly modified from your example):
>
> from twisted.internet import reactor, defer
> from twisted.web.client import getPage
>
> def gotPageCallback(page):
>      print "got a page!"
>
> dlist = [getPage('http://www.google.com').addCallback(gotPageCallback)]
> dlist.append(getPage('http://www.yahoo.com').addCallback(gotPageCallback
> ))
>
> defer.DeferredList(dlist).addCallback(lambda _: reactor.stop())
>
> reactor.run()
>   
Ok, but when I use reactor.connectTCP no deferred is returned.. How I 
can stop the reactor when all connections has finished?

Thanks.



From grickert at coldstorage.com  Wed Jul  8 09:22:54 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 8 Jul 2009 09:22:54 -0400
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <4A545BC9.4050608@gmail.com>
References: <4A53823D.8040303@gmail.com><BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
	<4A545BC9.4050608@gmail.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Antonio Beamud Montero
>Sent: Wednesday, July 08, 2009 4:42 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Connecting to multiple servers

<snip>

>Ok, but when I use reactor.connectTCP no deferred is returned.. How I
>can stop the reactor when all connections has finished?
>
>Thanks.

...it would be helpful if you provided an actual example 
(your example did not use a "reactor.connectTCP");
but in general terms, if you're connecting to multiple servers
and want to wait till all connections are finished, you'll need to 
track the connections, and call reactor.stop() once the last
connection is closed.

...so, using the example at:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTw
istedtalktomultipleclientsconnecttomultipleservers
- just call reactor.stop() in connectionLost method
after all connections have been lost

Regards,
	Gerrat


From antonio.beamud at gmail.com  Wed Jul  8 10:33:07 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Wed, 08 Jul 2009 16:33:07 +0200
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>
References: <4A53823D.8040303@gmail.com><BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>	<4A545BC9.4050608@gmail.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>
Message-ID: <4A54AE23.5000204@gmail.com>

Gerrat Rickert escribi?:
>> Ok, but when I use reactor.connectTCP no deferred is returned.. How I
>> can stop the reactor when all connections has finished?
>>
>> Thanks.
>>     
>
> ...it would be helpful if you provided an actual example 
> (your example did not use a "reactor.connectTCP");
> but in general terms, if you're connecting to multiple servers
> and want to wait till all connections are finished, you'll need to 
> track the connections, and call reactor.stop() once the last
> connection is closed.
>   
Well, finally I solved the problem next way:

I've created a factory that inherits from ReconnectingClientFactory. In 
the __init__, I've created a deferred:

  def __init__(self):
        self.deferred = defer.Deferred()

If all goes ok, then self.deferred.callback('ok'), else 
(clientConnectionLost, etc) self.deferred.errback(reason).
When I create the factory to pass it to reactor.connectTCP, I save the 
deferred in a list:

  dlist = []
  myf = MyFactory(args)
  reactor.connectTCP(host, port, myf)
  myf.deferred.addCallback(lambda _: None)
  myf.deferred.addErrback(lambda _:None)
  dlist.append(myf.deferred)
  ...
  flist = defer.DeferredList(dlist)
  flist.addCallback(lambda _: reactor.stop())
  flist.addErrback(lambda _: reactor.stop())

  reactor.run()

I think it's the best way, only when all connections have finished the 
reactor is stopped.

Greetings.



From dsyzling at gmail.com  Wed Jul  8 10:33:49 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 15:33:49 +0100
Subject: [Twisted-Python] imap and noop
Message-ID: <4A54AE4D.8040601@gmail.com>

I'm new to twisted and was experimenting trying to create an imap server 
based on the example within Twisted Network Programming Essentials. My 
test client is Thunderbird.

I'm wondering if anyone has had any experience handling the 'noop' 
command here's my scenario:
- I have two unread messages in a folder, I open thunderbird, select 
this folder and then select trash - trash has no messages.
- Each folder is selected and fetched with a uid:*
- My server correctly responds.
- Each time I now select the trash folder since it didn't have any 
messages to start with Thunderbird continues to send noops. I think it's 
waiting for my server to respond with exists or recent.
- Ok so I continue, I read and delete the two messages in my folder, 
Thunderbird issues copy commands, I dutifully flag the messages in the 
folder as \Deleted and the messages are added (via addMessage) to the 
Trash folder with the correct flags - \Seen.
- But now if I select the Trash folder thunderbird just sends noop - 
again it looks like it wants the server to send back exists or recent to 
indicate there are now messages in that folder - even though it's just 
copied stuff to the folder.

If in the above scenario I don't select the trash folder first and 
messages are deleted everything works fine - but in that case the client 
is sending fetch uid:*. It seems that if Thunderbird detects no messages 
in a folder it will noop until the server responds with an update.

Anyone seen or worked around this? Are there hooks in the imap framework 
to allow a mailbox or my mailserver to respond to noops? I don't appear 
to have any mailbox listeners subscribed and I tried overriding the noop 
for my derived IMAP4Server protocol derived class - but to no avail.


Darren


From exarkun at divmod.com  Wed Jul  8 10:58:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Jul 2009 10:58:46 -0400
Subject: [Twisted-Python] imap and noop
In-Reply-To: <4A54AE4D.8040601@gmail.com>
Message-ID: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>

On Wed, 08 Jul 2009 15:33:49 +0100, Darren Syzling <dsyzling at gmail.com> wrote:
>I'm new to twisted and was experimenting trying to create an imap server
>based on the example within Twisted Network Programming Essentials. My
>test client is Thunderbird.
>
>I'm wondering if anyone has had any experience handling the 'noop'
>command here's my scenario:
>- I have two unread messages in a folder, I open thunderbird, select
>this folder and then select trash - trash has no messages.
>- Each folder is selected and fetched with a uid:*
>- My server correctly responds.
>- Each time I now select the trash folder since it didn't have any
>messages to start with Thunderbird continues to send noops. I think it's
>waiting for my server to respond with exists or recent.
>- Ok so I continue, I read and delete the two messages in my folder,
>Thunderbird issues copy commands, I dutifully flag the messages in the
>folder as \Deleted and the messages are added (via addMessage) to the
>Trash folder with the correct flags - \Seen.
>- But now if I select the Trash folder thunderbird just sends noop -
>again it looks like it wants the server to send back exists or recent to
>indicate there are now messages in that folder - even though it's just
>copied stuff to the folder.
>
>If in the above scenario I don't select the trash folder first and
>messages are deleted everything works fine - but in that case the client
>is sending fetch uid:*. It seems that if Thunderbird detects no messages
>in a folder it will noop until the server responds with an update.
>
>Anyone seen or worked around this? Are there hooks in the imap framework
>to allow a mailbox or my mailserver to respond to noops? I don't appear
>to have any mailbox listeners subscribed and I tried overriding the noop
>for my derived IMAP4Server protocol derived class - but to no avail.
>

You may want to use the IMailboxListener implementation on IMAP4Server to
handle this case (IMAP4's complicated, I'm not sure this is the right
direction to pursue, but it's *a* direction :).

The modeChanged, flagsChanged, and newMessages methods on IMAP4Server are
intended for use by your mailbox implementation.  In this case, it sounds
like you want to have your trash mailbox call newMessages when the messages
are copied into it.  This requires a bit of legwork on your part, keeping
track of the IMAP4Server protocol (or possibly more than one!) from the
mailbox code, but the result should be that when Thunderbird sends those
NOOPs, the server responds with one or both of EXISTS or RECENT (untagged).

Jean-Paul


From dsyzling at gmail.com  Wed Jul  8 11:32:37 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 16:32:37 +0100
Subject: [Twisted-Python] imap and noop
In-Reply-To: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
References: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
Message-ID: <4A54BC15.8070502@gmail.com>

Jean-Paul Calderone wrote:
>
> You may want to use the IMailboxListener implementation on IMAP4Server to
> handle this case (IMAP4's complicated, I'm not sure this is the right
> direction to pursue, but it's *a* direction :).
>   
I'm glad you said that I thought I was going mad, I'm mired in stateful 
conversations between client and server. This started out as a simple 
internal test tool. I spiked it and thought ok that's simple I can 
read/view messages, the code looked straight forward. Store some state 
for each mailbox pickle to a file for simplicity. But then I got deeper 
into the whole delete to trash (which is in fact copy) and that's when 
it all went horribly wrong. Thunderbird can start multiple sessions 
which creates multiple mailbox instances server side and that throws the 
whole state management issue up in the air. So I went stateless and 
re-read the pickle file on each mailbox entry point - ugly but it 
improved consistency and made the whole thing easier to reason.  But the 
noop has thrown me because this may expect me to respond to the 
individual session (mailbox instance) - something you're alluding to 
below about tracking the IMAP4Server protocol.
> The modeChanged, flagsChanged, and newMessages methods on IMAP4Server are
> intended for use by your mailbox implementation.  In this case, it sounds
> like you want to have your trash mailbox call newMessages when the messages
> are copied into it.  This requires a bit of legwork on your part, keeping
> track of the IMAP4Server protocol (or possibly more than one!) from the
> mailbox code, but the result should be that when Thunderbird sends those
> NOOPs, the server responds with one or both of EXISTS or RECENT (untagged).
>   
Thanks I'll have a poke around and see how this looks. I really ought to 
cap my time on this, it was only an internal test helper. I may end up 
telling my test users - 'ah yeah well, just close Thunderbird, restart 
and sign in and those messages will magically appear.' Although knowing 
me it will niggle at me until I've solved it.


Darren


From dsyzling at gmail.com  Wed Jul  8 18:42:44 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 23:42:44 +0100
Subject: [Twisted-Python] imap and noop
In-Reply-To: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
References: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
Message-ID: <4A5520E4.9020505@gmail.com>

Jean-Paul Calderone wrote:
> You may want to use the IMailboxListener implementation on IMAP4Server to
> handle this case (IMAP4's complicated, I'm not sure this is the right
> direction to pursue, but it's *a* direction :).
>
>   
There seems to be an immediate issue with this approach and Thunderbird. 
The IMAP4Server implementation implements IMailboxListener but only 
subscribes (addListener) to the mailbox during _cbSelectWork - i.e. when 
the folder is selected. Thunderbird creates multiple mailbox instances 
(connections) but doesn't issue a select on all of them. When addMessage 
is called the mailbox instance that's used sometimes happens to be the 
one which has not been 'selected' therefore has no listeners so I can't 
notify the IMAP4Server.

I'll take a look tomorrow to see if anything in IMAP4Server can be 
overriden to add the listener earlier and for my mailbox to ignore a 
listener being registered twice.


Darren


From glyph at divmod.com  Wed Jul  8 23:26:43 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 09 Jul 2009 03:26:43 -0000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>


On 8 Jul, 04:31 am, jml at mumak.net wrote:
>I've recently returned from EuroPython where I got a chance to work
>with Thomas Herv? on Twisted. In the giddy rush of success I thought,
>"Wouldn't it be great if we could get a whole week to do this?".

Yay!
>I propose that:
>  - we arrange a week long sprint in Boston this year.
>  - we ask the PSF & the TSF to assist with travel expenses for some
>of the more distant community members
>  - the Boston folk arrange a venue
>  - individuals figure out how to get the time to attend.
>  - we determine a date asap.

Sounds like a good proposal to me, but I recommend getting individuals 
to accept responsibilities for parts of this so that there are fewer 
"we"s in it.
>In the absence of any better ideas, I suggest that the theme of the
>sprint be "fix as many bugs as possible".

Good goals are as arbitrary as possible, so how about this to modify 
your proposal:

"Under 1000 Open Tickets"

Generally speaking I think sprints are better for feature development 
than bugfixing, but mature projects like Twisted tend to suffer under 
the weight of collected bugs, making it difficult to file tickets for 
new features and get them closed in a timely manner.  Let's lighten that 
load.

Even more specifically: I recommend that we dedicate at least one day of 
the sprint purely to triage.  Being together in person will allow us to 
quickly discuss the relative priority of different goals for Twisted, as 
well as identify duplicates.  It's much easier to yell out "does anybody 
remember a ticket like this" in a sprint room than to fight with Trac, 
or even Google, search.
>As for the date, it should be no sooner than September 7. As a
>starting point, let's say Sep 28-Oct 2.

This should be a pretty good time for me, and it's in my calendar now. 
Anyone else going to have problems making it to an end-of-September 
sprint?
>Because we'll be asking external entities for money, it's important
>that we get the details sorted out as soon as possible: when is it
>going to be, who is flying in, how much do we need.

It sounds like our current attendance is 2.
>And, of course, the most important detail -- do you think we should do 
>this?

I think so, yes.


From sflist at ihonk.com  Thu Jul  9 05:32:25 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 09 Jul 2009 02:32:25 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>
References: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>
Message-ID: <1247131945.8271.28651.camel@lothar>

On Tue, 2009-07-07 at 19:25 -0400, Jean-Paul Calderone wrote:

> I suppose your sudoers configuration file wasn't recognizing the command
> before (since it was indeed a different command) and so wasn't letting you
> go through the no-password case.


Ahh, okay. Between that and Maarten's illumination, I've got it.

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090709/cc350d19/attachment.htm 

From paulswartz at gmail.com  Thu Jul  9 09:20:35 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Thu, 9 Jul 2009 09:20:35 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com> 
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
Message-ID: <324cfb540907090620q492f30f0gecb42551d1e29928@mail.gmail.com>

On Wed, Jul 8, 2009 at 11:26 PM, <glyph at divmod.com> wrote:
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>
> This should be a pretty good time for me, and it's in my calendar now.
> Anyone else going to have problems making it to an end-of-September sprint?

If it's before mid-October, I can only make it for Wednesday-Friday.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin


From smhollingsworth at gmail.com  Thu Jul  9 11:23:04 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 9 Jul 2009 15:23:04 +0000
Subject: [Twisted-Python] Perspective broker and SSL
Message-ID: <66dccc4d0907090823l123454adw18ade26df1de1f5d@mail.gmail.com>

I'm trying to add SSL support to an app that makes use of Perspective
Broker. In my server I have the following:

ccf = ssl.ContextFactory()
ccf.method = SSL.TLSv1_METHOD
reactor.listenSSL(PORT, pb.PBServerFactory(RLFactory()), ccf)

and in my client I have this:

ccf = ssl.ClientContextFactory()
ccf.method = SSL.TLSv1_METHOD
reactor.connectSSL(server, MY_PORT, factory, ccf)
factory.getRootObject().addCallbacks(self._connected, self._connectFail)

When the client connects to the server, I get this:

2009/07/09 15:18 +0000 [Broker,0,216.162.33.146] Unhandled Error
    Traceback (most recent call last):
      File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line
48, in callWithLogger
        return callWithContext({"system": lp}, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line
33, in callWithContext
        return context.call({ILogContext: newCtx}, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 59, in callWithContext
        return self.currentContext().callWithContext(ctx, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 37, in callWithContext
        return func(*args,**kw)
    --- <exception caught here> ---
      File
"/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py", line
139, in _doReadOrWrite
        why = getattr(selectable, method)()
      File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line
362, in doRead
        return self.protocol.dataReceived(data)
      File "/usr/lib/python2.5/site-packages/twisted/spread/banana.py", line
215, in dataReceived
        raise NotImplementedError(("Invalid Type Byte %r" % (typebyte,)))
    exceptions.NotImplementedError: Invalid Type Byte '\xbd'

Am I going about this wrong or leaving something out?

Sean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090709/5eb79c3c/attachment.htm 

From jkakar at kakar.ca  Thu Jul  9 12:42:31 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 9 Jul 2009 09:42:31 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>

Hi Jono,

On Tue, Jul 7, 2009 at 9:31 PM, Jonathan Lange<jml at mumak.net> wrote:
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Herv? on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".

Indeed, sprinting is super great!

> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
>
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.
>
> And, of course, the most important detail -- do you think we should do this?

I'm interested in attending.  The dates you've proposed sound fine.

Thanks,
J.


From lists at collab.nl  Thu Jul  9 13:05:55 2009
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 9 Jul 2009 18:05:55 +0100
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
Message-ID: <D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>

On 9 Jul 2009, at 17:42, Jamu Kakar wrote:

> Hi Jono,
>
> On Tue, Jul 7, 2009 at 9:31 PM, Jonathan Lange<jml at mumak.net> wrote:
>> I've recently returned from EuroPython where I got a chance to work
>> with Thomas Herv? on Twisted. In the giddy rush of success I thought,
>> "Wouldn't it be great if we could get a whole week to do this?".
>
> Indeed, sprinting is super great!
>
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>>
>> Because we'll be asking external entities for money, it's important
>> that we get the details sorted out as soon as possible: when is it
>> going to be, who is flying in, how much do we need.
>>
>> And, of course, the most important detail -- do you think we should  
>> do this?
>
> I'm interested in attending.  The dates you've proposed sound fine.

I'm also interesting in attending. I'd fly over from London so the  
sooner we have a confirmed date the better.

Cheers,

Thijs

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090709/345842d2/attachment.pgp 

From listsin at integrateddevcorp.com  Thu Jul  9 13:35:32 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 9 Jul 2009 13:35:32 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
	<D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
Message-ID: <BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>

>>> As for the date, it should be no sooner than September 7. As a
>>> starting point, let's say Sep 28-Oct 2.


Works for me, as well.  I'm just an hour North in New Hampshire so I'm  
pretty flexible around anyone else's schedule.

S




From rgacote at AppropriateSolutions.com  Thu Jul  9 15:10:18 2009
From: rgacote at AppropriateSolutions.com (Raymond Cote)
Date: Thu, 09 Jul 2009 15:10:18 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>	<D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
	<BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>
Message-ID: <4A56409A.9030004@AppropriateSolutions.com>

Steve Steiner (listsin) wrote:
>>>> As for the date, it should be no sooner than September 7. As a
>>>> starting point, let's say Sep 28-Oct 2.
>>>>         
>
>   
I'm hoping to be able to come for a day or two -- perhaps work on 
testing and/or documentation.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090709/4b66a8dd/attachment.htm 

From micahel at gmail.com  Thu Jul  9 18:00:37 2009
From: micahel at gmail.com (Michael Hudson)
Date: Fri, 10 Jul 2009 10:00:37 +1200
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <aa0dfd860907091500p6ced99an5e924f0bffe57ce4@mail.gmail.com>

2009/7/8 Jonathan Lange <jml at mumak.net>:
> Hello all,
>
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Herv? on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".
>
> I propose that:
> ?- we arrange a week long sprint in Boston this year.
> ?- we ask the PSF & the TSF to assist with travel expenses for some
> of the more distant community members
> ?- the Boston folk arrange a venue
> ?- individuals figure out how to get the time to attend.
> ?- we determine a date asap.
>
> In the absence of any better ideas, I suggest that the theme of the
> sprint be "fix as many bugs as possible".
>
> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
>
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.

In no particular order:

1) It sounds cool.
2) gosh New Zealand is a long way from everywhere
3) there's an event I wanted to get to here in New Zealand on the 3rd
of October.

I hope something comes of this, whether or not I make it!

Cheers,
mwh


From therve at free.fr  Sat Jul 11 04:49:24 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Jul 2009 10:49:24 +0200
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <1247302164.3960.11.camel@minime>

Le mercredi 08 juillet 2009 ? 14:31 +1000, Jonathan Lange a ?crit :
> Hello all,
> 
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Herv? on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".
> 
> I propose that:
>   - we arrange a week long sprint in Boston this year.
>   - we ask the PSF & the TSF to assist with travel expenses for some
> of the more distant community members
>   - the Boston folk arrange a venue
>   - individuals figure out how to get the time to attend.
>   - we determine a date asap.
> 
> In the absence of any better ideas, I suggest that the theme of the
> sprint be "fix as many bugs as possible".
> 
> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
> 
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.
> 
> And, of course, the most important detail -- do you think we should do this?

I'd be glad to be here, of course. I don't have anything scheduled
around September/October for now, so those dates are great for me.

Regarding the topic, I'd like to at least come up with a list of tasks,
so that we can discuss a bit about them before and really get stuff done
during the sprint.

My suggestions, which may be attached to lists of tickets:
 * general twistd improvements, logging in particular
 * conch bugs fixing
 * any bugs that will make some buildbot slaves green (and kill
intermittent failures)
 * maybe twisted web client?

-- 
Thomas



From vilmos.gyorgy at gmail.com  Sat Jul 11 13:16:26 2009
From: vilmos.gyorgy at gmail.com (=?ISO-8859-1?Q?Gy=F6rgy_Vilmos?=)
Date: Sat, 11 Jul 2009 19:16:26 +0200
Subject: [Twisted-Python] Twisted and unladen swallow
In-Reply-To: <dac6660e0907090030l4927894etd44a5b4569088954@mail.gmail.com>
References: <dac6660e0907090030l4927894etd44a5b4569088954@mail.gmail.com>
Message-ID: <dac6660e0907111016n576f1f39q151b89d86a04c910@mail.gmail.com>

Hi All,

I use twisted as a flexible (authoritative) DNS server, and apart from its
speed, I'm completely pleased with it.
As you may know, Google has started a project -named unladen swallow- to
improve python's performance, so I've taken a quick look at it, compiling
the latest version (from svn trunk, which is based on python 2.6.1) on
FreeBSD and compared the numbers with plain python's (2.6.2) performance.

As this is a DNS server, the performance indicator is queries per second.

The numbers are here (in hungarian):
http://suckit.blog.hu/2009/07/05/unladen_swallow

The first table has the stock 2.6.2 python vs unladen python performance
numbers (with an average of 3.5% speed increase), while the next table shows
relative performance between unladen's -j whenhot and -j always settings
(the first compiles code only when it's frequently executed, while the
latter compiles everything at the first occurrence).
-j always of course eats a lot of CPU power when compiling and also
maintains a big memory footprint (712 MiB resident memory) throughout the
process lifecycle.

I hope the guys will be able to squeeze more out of python...

-- 
http://suckit.blog.hu/


From exarkun at twistedmatrix.com  Sun Jul 12 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jul 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1247371513.98.1062952497@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090712/f1159903/attachment.htm 

From jml at mumak.net  Tue Jul 14 03:59:07 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 14 Jul 2009 17:59:07 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
Message-ID: <d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>

On Tue, Jul 7, 2009 at 8:07 PM, <glyph at divmod.com> wrote:
>
> On 07:54 am, jml at mumak.net wrote:
>>Hello all,
>>
>>With some trepidation and a complete willingness to fail, I'm offering
>>my services as Twisted release manager, starting Tuesday next week.
>
> Hooray!
>>I have only two questions:
>> ?- Am I accepted?
>
> MWAHAHAHAHAHA, WELCOME TO YOUR DOOM!
>
> By which I mean, "yes". ?radix and exarkun have both dedicated some
> effort to making this release happen, and I'm sure we'll all continue to
> help you in this role, but there has been a discernable ... lack of
> enthusiasm for anyone to wear the official "release manager" hat. ?We
> all appreciate your brave sacrifice.

Why, thank you. I can only hope it's something of a sub-prime doom.

>> ?- Where do I begin?
>
> There is a ticket, <http://twistedmatrix.com/trac/ticket/3860>, which
> you will now find is assigned to you.
>

Rock and roll.

> Some work has already taken place to update the NEWS files on a branch
> for that ticket, which is the bulk of the work associated with the
> releases, but it's not complete. ?Also, since this branch was made, some
> features have been added and some regressions fixed, so it should be
> merged forward.
>

I'll try to get started on this tonight.

Also, unless you object, I'll try to send weekly emails on the status
of the release until it's actually out.

jml


From jml at mumak.net  Tue Jul 14 05:54:13 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 14 Jul 2009 19:54:13 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
Message-ID: <d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>

On Thu, Jul 9, 2009 at 1:26 PM, <glyph at divmod.com> wrote:
>
> On 8 Jul, 04:31 am, jml at mumak.net wrote:
>>
>> I've recently returned from EuroPython where I got a chance to work
>> with Thomas Herv? on Twisted. In the giddy rush of success I thought,
>> "Wouldn't it be great if we could get a whole week to do this?".
>
> Yay!

Thanks everyone for your replies & enthusiasm!

Rather than reply to emails individually, I'm just going to reply to this one.

I've also set up http://twistedmatrix.com/trac/wiki/Sprint2009 to
track all of the details.

>>
>> I propose that:
>> ?- we arrange a week long sprint in Boston this year.
>> ?- we ask the PSF & the TSF to assist with travel expenses for some
>> of the more distant community members
>> ?- the Boston folk arrange a venue
>> ?- individuals figure out how to get the time to attend.
>> ?- we determine a date asap.
>
> Sounds like a good proposal to me, but I recommend getting individuals to
> accept responsibilities for parts of this so that there are fewer "we"s in
> it.

To clarify:

- jml arranges a week-long Twisted sprint.
- People who want the TSF or PSF to assist with travel expenses say so
on the wiki page. I'll then speak to the TSF & PSF on behalf of the
sprint as a whole.
- Individuals figure out how they can get the time to attend
- *** I need a volunteer to arrange a venue in Boston. ***

READ THIS BIT!

1. If you are attending, add your name; if you are attending subject
to other conditions (funding, leave etc) then add your name & say
'tentative'; if you are _not_ attending, add your name to the not
attending list.

2. This really is a meeting of individuals.  I cannot promise who will
be there or how good it will be. I can promise that as of Friday, July
17th, the date & city will be set in concrete, even if I can't attend.

3. Put your attendance information on the wiki asap & keep it up to
date. This will help others.

>>
>> In the absence of any better ideas, I suggest that the theme of the
>> sprint be "fix as many bugs as possible".
>
> Good goals are as arbitrary as possible, so how about this to modify your
> proposal:
>
> "Under 1000 Open Tickets"
>

Yes, that's much better :)

> Even more specifically: I recommend that we dedicate at least one day of the
> sprint purely to triage. ?Being together in person will allow us to quickly
> discuss the relative priority of different goals for Twisted, as well as
> identify duplicates. ?It's much easier to yell out "does anybody remember a
> ticket like this" in a sprint room than to fight with Trac, or even Google,
> search.

In the context of Twisted's bug tracker, I don't really know what
"triage" would mean. Care to clarify (perhaps on the wiki page?)

>>
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>
> This should be a pretty good time for me, and it's in my calendar now.
> Anyone else going to have problems making it to an end-of-September sprint?

This seems to be as good a date as any.

jml


From vishal_shetye at persistent.co.in  Tue Jul 14 10:29:07 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 14 Jul 2009 19:59:07 +0530
Subject: [Twisted-Python] Re adbapi and multiple queries in single
	transaction.
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B9A78536@EXCHANGE.persistent.co.in>

Hi,

I went through several posts and blogs regarding long lived transactions in twisted.

Some of them are

-        A bug with current status won't fix. http://twistedmatrix.com/trac/ticket/303

-        Laxdb from sandbox. http://archives.free.net.ph/message/20050831.235536.440061b8.en.html#twisted-python

-        A blog entry by glyph. http://glyph.twistedmatrix.com/2008/12/databases-and-twisted-when-threads-are.html


I have a scenario as given below. All the steps to be done sequentially and in a single transaction.
1. do some db queries.
2. interact with some module that uses twisted framework.
3. do some db queries.

As I can see adbapi's runInteraction runs the interaction in a new thread.
I read that most of the twisted code is not thread safe so it is recommended not to use anything except for the reactor.callFromThread in the threads other than reactor's main thread.
Does this mean that only approach remains is something similar to laxdb?

The bug mentioned above says patch provided has a DOS problem and solution is to use separate threadpools. Does the same problem exist with laxdb?

Regards,
vishal

DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090714/4a0616c4/attachment.htm 

From vitaly at synapticvision.com  Tue Jul 14 11:10:10 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 14 Jul 2009 11:10:10 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
Message-ID: <20090714111010.67973qnlxsgjlxgk@216.129.205.5>

Hello,

is there any way to cancel the Deferred callback in those examples?

1.
d = defer.Deferred()
d.addCallback(methodA).addErrback(methodErr)
d.callback(None)

2.
d = methodB().addErrback(methodErr)
wfd = defer.waitForDeferred(d)



Appreciate any help.



From exarkun at divmod.com  Tue Jul 14 11:21:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Jul 2009 11:21:40 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714111010.67973qnlxsgjlxgk@216.129.205.5>
Message-ID: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>

On Tue, 14 Jul 2009 11:10:10 -0400, vitaly at synapticvision.com wrote:
>Hello,
>
>is there any way to cancel the Deferred callback in those examples?
>
>1.
>d = defer.Deferred()
>d.addCallback(methodA).addErrback(methodErr)
>d.callback(None)
>
>2.
>d = methodB().addErrback(methodErr)
>wfd = defer.waitForDeferred(d)
>
>
>
>Appreciate any help.
>

Deferred doesn't have any cancellation features.  You can generally achieve
some sort of cancellation by supporting this in the application code creating
and consuming the Deferreds involved.

The details of how to do this depend on what exactly you want to happen when
you "cancel" the operation.

You can find one example of this in the implementation of Twisted's internal
thread-based name resolver:

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/base.py#L193

You can find other examples in the implementation of any other Deferred-
returning API which also supports timeouts, eg the web client:

http://twistedmatrix.com/trac/browser/trunk/twisted/web/client.py#L198

Hope this helps,

Jean-Paul


From vitaly at synapticvision.com  Tue Jul 14 12:37:36 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 14 Jul 2009 12:37:36 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
Message-ID: <20090714123736.11049riy99ph5yrk@216.129.205.5>

Thank you,

"cancel" callback - stop running now what you've been asked to exec.
Example: some SQL query that takes 5 min and I need to cancel it  
anywhere in the middle and it, of course, it doesn't matter what the  
result set.

As far as I see from base.py and client.py, some sort of timeout now  
could achieve the cancel operation ?


Quoting "Jean-Paul Calderone" <exarkun at divmod.com>:

> On Tue, 14 Jul 2009 11:10:10 -0400, vitaly at synapticvision.com wrote:
>> Hello,
>>
>> is there any way to cancel the Deferred callback in those examples?
>>
>> 1.
>> d = defer.Deferred()
>> d.addCallback(methodA).addErrback(methodErr)
>> d.callback(None)
>>
>> 2.
>> d = methodB().addErrback(methodErr)
>> wfd = defer.waitForDeferred(d)
>>
>>
>>
>> Appreciate any help.
>>
>
> Deferred doesn't have any cancellation features.  You can generally achieve
> some sort of cancellation by supporting this in the application code creating
> and consuming the Deferreds involved.
>
> The details of how to do this depend on what exactly you want to happen when
> you "cancel" the operation.
>
> You can find one example of this in the implementation of Twisted's internal
> thread-based name resolver:
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/internet/base.py#L193
>
> You can find other examples in the implementation of any other Deferred-
> returning API which also supports timeouts, eg the web client:
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/web/client.py#L198
>
> Hope this helps,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From jkakar at kakar.ca  Tue Jul 14 14:33:03 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Tue, 14 Jul 2009 11:33:03 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
	<d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>
Message-ID: <aa66e7aa0907141133o300be2b3ld8f099fdd45a97ef@mail.gmail.com>

Hi,

On Tue, Jul 14, 2009 at 2:54 AM, Jonathan Lange<jml at mumak.net> wrote:
> 1. If you are attending, add your name; if you are attending subject
> to other conditions (funding, leave etc) then add your name & say
> 'tentative'; if you are _not_ attending, add your name to the not
> attending list.

I logged into the wiki and, it's very likely that it's obvious, but
I could find a way to edit the page.  I'm (tenative/Probably not).

Thanks,
J.


From exarkun at divmod.com  Tue Jul 14 15:43:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Jul 2009 15:43:56 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <aa66e7aa0907141133o300be2b3ld8f099fdd45a97ef@mail.gmail.com>
Message-ID: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>

On Tue, 14 Jul 2009 11:33:03 -0700, Jamu Kakar <jkakar at kakar.ca> wrote:
>Hi,
>
>On Tue, Jul 14, 2009 at 2:54 AM, Jonathan Lange<jml at mumak.net> wrote:
>> 1. If you are attending, add your name; if you are attending subject
>> to other conditions (funding, leave etc) then add your name & say
>> 'tentative'; if you are _not_ attending, add your name to the not
>> attending list.
>
>I logged into the wiki and, it's very likely that it's obvious, but
>I could find a way to edit the page.  I'm (tenative/Probably not).

Oops.  You probably can't, because wiki editing is disabled, even for
registered accounts unless you have a special wiki editing permission,
as a spam prevention measure.

Jean-Paul


From db3l.net at gmail.com  Tue Jul 14 17:22:29 2009
From: db3l.net at gmail.com (David Bolen)
Date: Tue, 14 Jul 2009 17:22:29 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
	<20090714123736.11049riy99ph5yrk@216.129.205.5>
Message-ID: <m2ljmrdkoa.fsf@valheru.db3l.homeip.net>

vitaly at synapticvision.com writes:

> "cancel" callback - stop running now what you've been asked to exec.
> Example: some SQL query that takes 5 min and I need to cancel it  
> anywhere in the middle and it, of course, it doesn't matter what the  
> result set.

Note that the Deferred itself has no notion of the underlying
operation - it's just a placeholder for the callback chain to run.  So
trying to get from the deferred back to, for example, the database
query that will eventually use it for the result, is sort of like the
classic Python question of asking what name refers to an object, when
the object really has no idea who holds a reference to it.

If you actually want to try to interrupt a specific operation, then
you'll have to go to the actual application code performing the
operation, and that code will have to have a way to actually cancel an
ongoing activity.  It can then trigger the deferred chain with an
appropriate result (or probably Failure) that indicates cancellation.
That's going to be application-code specific, as Jean-Paul suggested.
In the database case, some database wrappers may support requesting an
interruption of an active query, but some might not.

If, however, you just want to avoid any existing deferred callback
chain from being triggered, but can let the operation proceed while
ignoring its result, I'd think you could just pause the deferred and
never resume it.  That will keep the deferred from triggering any
further callbacks past the point when it was paused, but won't
actually interrupt any currently active operations that the deferred
represents.  If you have code blocked waiting on that deferred (your
second example) it'll never complete without additional cheating -
perhaps initiating a fake callback on the chain first, though you'd
have to use some internals of Deferred or else risk a pause during the
callback opening up a window where the original source could attempt
to re-trigger the callback.

-- David



From shywolf9982 at gmail.com  Wed Jul 15 09:06:46 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 15 Jul 2009 15:06:46 +0200
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714123736.11049riy99ph5yrk@216.129.205.5>
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
	<20090714123736.11049riy99ph5yrk@216.129.205.5>
Message-ID: <h3kjo2$avq$1@ger.gmane.org>

On 07/14/2009 06:37 PM, vitaly at synapticvision.com wrote:
>
> "cancel" callback - stop running now what you've been asked to exec.
> Example: some SQL query that takes 5 min and I need to cancel it
> anywhere in the middle and it, of course, it doesn't matter what the
> result set.
>

It seems like the problem you have is similar to what is described here:

http://www.dabeaz.com/python/GIL.pdf

Although this deals with Python's threading (and technology-wise, it's 
completely unrelated to Twisted), the fundamental problems that they are 
trying to solve are the same that Twisted tries to.

Unless I got it all wrong, you might need to "cancel the deferred" 
because the actual operation being performed "locks" the CPU. The 
example of the query taking five minutes is a bit misleading, I think, 
because that is actually an operation that is deferred to an external 
service and so it's more IO-bound than CPU-bound.

So maybe you do not actually need that. In case you do, as others have 
pointed out, the application code must either "quit" by itself or some 
sort of timeout (a "watchdog") has to be put in place.

Hope this will help and not confuse more ;)

Simone



From lrekucki at gmail.com  Wed Jul 15 18:36:33 2009
From: lrekucki at gmail.com (=?UTF-8?Q?=C5=81ukasz_Rekucki?=)
Date: Thu, 16 Jul 2009 00:36:33 +0200
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
Message-ID: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>

Hello,

I'm writing a simple chat client using twisted and pygtk. I have a problem
with a chained deferred not being continued. Here is my call chain:

* MyProtocol.dataReceived -> fires a predefined Deferred [call it A]
* A.callback1 -> creates a new Deferred B, adds a single callback to it,
displays a GtkDialog returns B
* [A stops]
* dialog exits, I call B.callback(result_id) from the signal callback
* all callback in B's chains are called
* program hangs instead calling A.callback2

Is this a thread related problem ? Am I doing something terribly wrong by
calling a deferred from the gtk thread ?

Thanks for help,
Lucas Rekucki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090716/e69d2d53/attachment.htm 

From exarkun at divmod.com  Wed Jul 15 21:14:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Jul 2009 21:14:46 -0400
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
In-Reply-To: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
Message-ID: <20090716011446.2543.1240938108.divmod.quotient.2763@henry.divmod.com>

On Thu, 16 Jul 2009 00:36:33 +0200, ?ukasz Rekucki <lrekucki at gmail.com> wrote:
>Hello,
>
>I'm writing a simple chat client using twisted and pygtk. I have a problem
>with a chained deferred not being continued. Here is my call chain:
>
>* MyProtocol.dataReceived -> fires a predefined Deferred [call it A]
>* A.callback1 -> creates a new Deferred B, adds a single callback to it,
>displays a GtkDialog returns B
>* [A stops]
>* dialog exits, I call B.callback(result_id) from the signal callback
>* all callback in B's chains are called
>* program hangs instead calling A.callback2
>
>Is this a thread related problem ? Am I doing something terribly wrong by
>calling a deferred from the gtk thread ?

It sounds like you're doing the right thing.  There is no gtk thread when you
use one of the gtk integration reactors - gtk and Twisted coexist in the same
thread.  So it's just fine to use Twisted APIs from a gtk signal callback.

Perhaps there is an unexpected error occurring.  Do you have a final errback
on your Deferred (one on A in this case would be fine) which logs the error
or otherwise makes it visible?  If not, you have to rely on luck and the
garbage collector to make this report.

Jean-Paul


From andrew at bemusement.org  Wed Jul 15 22:55:05 2009
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 16 Jul 2009 12:55:05 +1000
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
In-Reply-To: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
References: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
Message-ID: <20090716025505.GT28628@steerpike.home.puzzling.org>

?ukasz Rekucki wrote:
[...]
>    Is this a thread related problem ? Am I doing something terribly wrong by
>    calling a deferred from the gtk thread ?

Twisted in general is not thread-safe.  If you need to call Twisted code from a
thread other than the one you started the reactor in, use
reactor.callFromThread.

See also:

    http://twistedmatrix.com/projects/core/documentation/howto/threading.html

-Andrew.



From itamar at itamarst.org  Thu Jul 16 13:23:24 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jul 2009 13:23:24 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>
References: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>
Message-ID: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>

So how many people are we expecting, if this happens? Number would impact
possible locations for the event.



From exarkun at divmod.com  Thu Jul 16 14:12:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 16 Jul 2009 14:12:45 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
Message-ID: <20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>

On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>So how many people are we expecting, if this happens? Number would impact
>possible locations for the event.
>

It's likely I'll be there.

I suggest people respond to this thread if they're going to attend, since
editing the wiki probably isn't going to be feasible. :)

Jean-Paul


From glyph at divmod.com  Thu Jul 16 16:29:07 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 16 Jul 2009 20:29:07 -0000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
Message-ID: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>




On 06:12 pm, exarkun at divmod.com wrote:
>On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring 
><itamar at itamarst.org> wrote:
>>So how many people are we expecting, if this happens? Number would 
>>impact
>>possible locations for the event.
>
>It's likely I'll be there.
>
>I suggest people respond to this thread if they're going to attend, 
>since
>editing the wiki probably isn't going to be feasible. :)

I'll be there too.  So far, we've got jml, exarkun, therve, glyph, 
itamar: that's 5 people.  Anyone I forgot to count?


From listsin at integrateddevcorp.com  Thu Jul 16 18:09:12 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 18:09:12 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <09B86D0F-FD02-4B58-9041-D57D1564962C@integrateddevcorp.com>

>
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?

I'l be there if I can be of any use.

S
aka/ssteiner



From toreason at fastmail.fm  Thu Jul 16 18:21:51 2009
From: toreason at fastmail.fm (V S P)
Date: Thu, 16 Jul 2009 18:21:51 -0400
Subject: [Twisted-Python] [Q] twisted in a 'non-main' thread
Message-ID: <1247782911.28269.1325439345@webmail.messagingengine.com>

Hello
I am 'contemplating' two uses of twisted

a) from within OmniORB, twisted as wsgi server

b) for Python QT application




From rgacote at appropriatesolutions.com  Thu Jul 16 18:28:22 2009
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Thu, 16 Jul 2009 18:28:22 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <09B86D0F-FD02-4B58-9041-D57D1564962C@integrateddevcorp.com>
Message-ID: <9405619.22331247783507305.JavaMail.rgacote@ip-210.Corp.AppropriateSolutions.com>

And I hope to be there for a day or two.
--Ray


----- Original Message -----
From: "Steve Steiner (listsin)" <listsin at integrateddevcorp.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Thursday, July 16, 2009 6:09:12 PM GMT -05:00 US/Canada Eastern
Subject: Re: [Twisted-Python] Possible Twisted sprint

>
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?

I'l be there if I can be of any use.

S
aka/ssteiner


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Ray Cote, President
Appropriate Solutions, Inc.
We Build Software
603.924.6079


From jkakar at kakar.ca  Thu Jul 16 18:46:33 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 16 Jul 2009 15:46:33 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <aa66e7aa0907161546g476a4d5rd305d723db960b54@mail.gmail.com>

Hi,

On Thu, Jul 16, 2009 at 1:29 PM, <glyph at divmod.com> wrote:
> I'll be there too. ?So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people. ?Anyone I forgot to count?

I'd like to attend.  I'm still a maybe at this point, though.

Thanks,
J.


From jml at mumak.net  Thu Jul 16 22:58:09 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 17 Jul 2009 12:58:09 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>

On Fri, Jul 17, 2009 at 6:29 AM, <glyph at divmod.com> wrote:
>
>
>
> On 06:12 pm, exarkun at divmod.com wrote:
>>On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring
>><itamar at itamarst.org> wrote:
>>>So how many people are we expecting, if this happens? Number would
>>>impact
>>>possible locations for the event.
>>
>>It's likely I'll be there.
>>
>>I suggest people respond to this thread if they're going to attend,
>>since
>>editing the wiki probably isn't going to be feasible. :)
>
> I'll be there too. ?So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people. ?Anyone I forgot to count?
>

I've updated the wiki page. If you don't have edit privs and I've got
something wrong, or you aren't list & want to be, or circumstances
change, please contact me via email off list & I'll get the page up to
date.

jml


From listsin at integrateddevcorp.com  Thu Jul 16 23:20:36 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 23:20:36 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
Message-ID: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>

> I've updated the wiki page.

"the wiki page" at...

S



From jml at mumak.net  Thu Jul 16 23:23:56 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 17 Jul 2009 13:23:56 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
Message-ID: <d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>

On Fri, Jul 17, 2009 at 1:20 PM, Steve Steiner
(listsin)<listsin at integrateddevcorp.com> wrote:
>> I've updated the wiki page.
>
> "the wiki page" at...
>

http://twistedmatrix.com/trac/wiki/Sprint2009

as mentioned in an earlier post on this thread.

jml


From listsin at integrateddevcorp.com  Thu Jul 16 23:27:46 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 23:27:46 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
Message-ID: <104CE06D-4213-421F-B761-94CF8642E15E@integrateddevcorp.com>


On Jul 16, 2009, at 11:20 PM, Steve Steiner (listsin) wrote:

>> I've updated the wiki page.
>
> "the wiki page" at...

Sorry, went back in the list and found it.

I think it's better to give links like that in context.

Why search when the writer has it "to hand" as it were?

S



From itamar at itamarst.org  Fri Jul 17 11:15:31 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 17 Jul 2009 11:15:31 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
	<d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>
Message-ID: <41826.63.107.91.99.1247843731.squirrel@webmail.zoteca.com>

I am not quite sure I can make it, I probably can for at least part of the
time.




From JOHN at egh.com  Fri Jul 17 15:01:28 2009
From: JOHN at egh.com (John Santos)
Date: Fri, 17 Jul 2009 15:01:28 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <41826.63.107.91.99.1247843731.squirrel@webmail.zoteca.com>
Message-ID: <1090717131439.63148F-100000@Ives.egh.com>


I think I may be able to attend, but as pretty much a nooby to both
Twisted and Python, I don't know how much use I would be.

On the plus side, I live about 2.5mi from Porter Square, so travel
wouldn't be an issue.


-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539



From andrewfr_ice at yahoo.com  Sat Jul 18 14:41:08 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 18 Jul 2009 11:41:08 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
Message-ID: <510022.73786.qm@web34203.mail.mud.yahoo.com>


Hi Folks:

I am trying to use the epollreactor. I read the "Choosing a Reactor" page. However I am not clear on how to actually install and use epollreactor.

I thought I could do the following:

from twisted.internet    import  epollreactor

....
# epollreactor.install()
epollreactor.listenTCP(8000, MyHttpFactory())
epollreactor.run()

I get
AttributeError: 'module' object has no attribute 'listenTCP' 

What am I doing wrong? Thanks in advance.

Cheers,
Andrew







      


From cary.hull at gmail.com  Sat Jul 18 15:00:46 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 18 Jul 2009 12:00:46 -0700
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <510022.73786.qm@web34203.mail.mud.yahoo.com>
References: <510022.73786.qm@web34203.mail.mud.yahoo.com>
Message-ID: <3fce0ae70907181200wa95fc26j37ac652ec1c01700@mail.gmail.com>

Why are you commenting out the 'install' line?
After 'install' I normally do 'from twisted.internet import reactor' and
use 'reactor' as one would normally.

-Cary

On Sat, Jul 18, 2009 at 11:41 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi Folks:
>
> I am trying to use the epollreactor. I read the "Choosing a Reactor" page. However I am not clear on how to actually install and use epollreactor.
>
> I thought I could do the following:
>
> from twisted.internet ? ?import ?epollreactor
>
> ....
> # epollreactor.install()
> epollreactor.listenTCP(8000, MyHttpFactory())
> epollreactor.run()
>
> I get
> AttributeError: 'module' object has no attribute 'listenTCP'
>
> What am I doing wrong? Thanks in advance.
>
> Cheers,
> Andrew
>
>
>
>
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
01100011 01100001 01110010 01111001


From ilya at glas.net  Sat Jul 18 15:33:51 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sat, 18 Jul 2009 23:33:51 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
Message-ID: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>


Dear Twisters,

I can't get Twisted reactor calling my function in a more or less 
periodic fashion with the LoopingCall mechanics.

With select()-based reactor, the LoopingCall object seems to call back my 
timer function only on select() timeout. If I/O pace does not allow 
select() to time out, LoopingCall never calls my function.

How do I implement a "timer" function what would work regardless of the 
rate of I/O events?

thanks,
ilya


From glyph at twistedmatrix.com  Sat Jul 18 16:06:16 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jul 2009 16:06:16 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
Message-ID: <d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>

On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:

> I can't get Twisted reactor calling my function in a more or less
> periodic fashion with the LoopingCall mechanics.
>
> With select()-based reactor, the LoopingCall object seems to call back my
> timer function only on select() timeout. If I/O pace does not allow
> select() to time out, LoopingCall never calls my function.

This doesn't sound accurate to me.  If your reactor is constantly
doing I/O, the timed call in question will be called when the
appropriate amount of time has passed.

Select does not "time out"; it just returns some result.  If it is
returning purely do to the passage of time, then the result will be
empty, but Twisted doesn't treat that type of result specially.

Can you provide a short, sample program which demonstrates the
behavior you're talking about?


From exarkun at divmod.com  Sat Jul 18 16:10:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 18 Jul 2009 16:10:44 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
Message-ID: <20090718201044.2543.948423221.divmod.quotient.3415@henry.divmod.com>

On Sat, 18 Jul 2009 23:33:51 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>Dear Twisters,
>
>I can't get Twisted reactor calling my function in a more or less
>periodic fashion with the LoopingCall mechanics.
>
>With select()-based reactor, the LoopingCall object seems to call back my
>timer function only on select() timeout. If I/O pace does not allow
>select() to time out, LoopingCall never calls my function.
>
>How do I implement a "timer" function what would work regardless of the
>rate of I/O events?
>

Are you using threads?

Jean-Paul


From glyph at twistedmatrix.com  Sat Jul 18 16:11:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jul 2009 16:11:42 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <510022.73786.qm@web34203.mail.mud.yahoo.com>
References: <510022.73786.qm@web34203.mail.mud.yahoo.com>
Message-ID: <d9047f780907181311r29018280n3d4fdd578d60a270@mail.gmail.com>

On Sat, Jul 18, 2009 at 2:41 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> What am I doing wrong? Thanks in advance.

The first google hit for "epollreactor api" is:
<http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.epollreactor.html>.

The two lines of code there are the *only* things your program should
do in order to use the epoll reactor.  (Actually, you should just use
the '-r' option to 'twistd', but I digress.)  After those lines are
run, your program should 'from twisted.internet import reactor' as
usual.


From terry at jon.es  Sat Jul 18 16:20:06 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 18 Jul 2009 22:20:06 +0200
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: Your message at 16:06:16 on Saturday, 18 July 2009
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
	<d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
Message-ID: <19042.11894.482474.212831@jon.es>

>>>>> "Glyph" == Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
Glyph> On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:
>> I can't get Twisted reactor calling my function in a more or less
>> periodic fashion with the LoopingCall mechanics.
>> 
>> With select()-based reactor, the LoopingCall object seems to call back my
>> timer function only on select() timeout. If I/O pace does not allow
>> select() to time out, LoopingCall never calls my function.

Glyph> This doesn't sound accurate to me.  If your reactor is constantly
Glyph> doing I/O, the timed call in question will be called when the
Glyph> appropriate amount of time has passed.

The thing that occurred to me was that the function called by the looping
call is taking a while (i.e., longer than the loop time) but that Ilya is
expecting his function to be called every X seconds no matter what.

If that's the case Ilya, LoopingCall doesn't work that way. Only one call
can be in progress at a time. When that call is done, another is scheduled.
See the _reschedule method in t.i.task#LoopingCall for more detail.

Terry


From ilya at glas.net  Sat Jul 18 17:04:25 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 01:04:25 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
	<d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.0907190045560.16904@cray.glas.net>


After doing some more research, I've realised that my previous 
conclusion and complaint was indeed inaccurate. Sorry for that!

Now it looks to me that if my datagram receiver function takes some
time for data processing, rapidly coming datagrams tend to stack up and
my timer function is not getting called at time.

Here's example code:

from time import time, sleep
from twisted.internet import reactor, task
from twisted.internet.protocol import DatagramProtocol

def timerCbFun():
   print 'timer called', time()

loopingCall = task.LoopingCall(timerCbFun)
loopingCall.start(1, False)

class MyProtocol(DatagramProtocol):
   def datagramReceived(self, datagram, address):
     print 'datagramReceived', time()
     sleep(0.2) # simulate data processing

reactor.listenUDP(1024, MyProtocol(), '127.0.0.1')

reactor.run()

and here's its test run under relatively high incoming datagrams rate:

timer called 1247949866.62
timer called 1247949867.62
timer called 1247949868.62
datagramReceived 1247949869.16
datagramReceived 1247949869.36
datagramReceived 1247949869.56
datagramReceived 1247949869.76
datagramReceived 1247949869.96
.... no timer calls here ...
datagramReceived 1247949877.56
datagramReceived 1247949877.76
timer called 1247949877.96
timer called 1247949878.62
timer called 1247949879.62

So we missed eight timer calls in a row in the course of this run. What 
I need is that reactor would call my timer function at scheduled times
regardless of pending datagrams.

I do not think I'm using threads here.

thanks,
ilya

On Sat, 18 Jul 2009, Glyph Lefkowitz wrote:

> On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:
>
>> I can't get Twisted reactor calling my function in a more or less
>> periodic fashion with the LoopingCall mechanics.
>>
>> With select()-based reactor, the LoopingCall object seems to call back my
>> timer function only on select() timeout. If I/O pace does not allow
>> select() to time out, LoopingCall never calls my function.
>
> This doesn't sound accurate to me.  If your reactor is constantly
> doing I/O, the timed call in question will be called when the
> appropriate amount of time has passed.
>
> Select does not "time out"; it just returns some result.  If it is
> returning purely do to the passage of time, then the result will be
> empty, but Twisted doesn't treat that type of result specially.
>
> Can you provide a short, sample program which demonstrates the
> behavior you're talking about?


From exarkun at divmod.com  Sat Jul 18 18:49:13 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 18 Jul 2009 18:49:13 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907190045560.16904@cray.glas.net>
Message-ID: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>

On Sun, 19 Jul 2009 01:04:25 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>After doing some more research, I've realised that my previous
>conclusion and complaint was indeed inaccurate. Sorry for that!
>
>Now it looks to me that if my datagram receiver function takes some
>time for data processing, rapidly coming datagrams tend to stack up and
>my timer function is not getting called at time.

Ah, it looks like Terry probably guessed the cause of your difficulties
correctly.

>
>Here's example code:
>
>from time import time, sleep
>from twisted.internet import reactor, task
>from twisted.internet.protocol import DatagramProtocol
>
>def timerCbFun():
>   print 'timer called', time()
>
>loopingCall = task.LoopingCall(timerCbFun)
>loopingCall.start(1, False)
>
>class MyProtocol(DatagramProtocol):
>   def datagramReceived(self, datagram, address):
>     print 'datagramReceived', time()
>     sleep(0.2) # simulate data processing

The above is something which you're more or less not allowed to do in a
Twisted application.  That simulated data processing is blocking the
main event loop.  Nothing else happens until it finishes - that includes
handling more UDP packets and it includes running timed events like the
ones LoopingCall sets up.

You need to find another way to do your data processing if this behavior
isn't acceptable.  You can use Twisted's thread pool, if the data processing
is thread safe, or you could try Ampoule to distribute the processing to a
process pool instead of a thread pool, or if the data processing involves a
blocking operation which can be be handled asynchronously somehow, there
might be another Twisted API which can help you out.

Also, aside from that, LoopingCall is designed to handle missed intervals
gracefully.  It will skip calls which cannot be made because the process
was too busy doing something else.  For a 1 second looping call, once you
fix your data processing code, this probably won't happen very often, but
it may happen.  There's some work in progress to make it possible to at
least learn when a call has been skipped, but short of a real time platform
(which Twisted is certainly not), you can't get a 100% guarantee.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Jul 19 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1247976312.2.944481807@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090719/94e4268d/attachment-0001.htm 

From kieran at digital-crocus.com  Sun Jul 19 01:34:21 2009
From: kieran at digital-crocus.com (Kieran Simkin)
Date: Sun, 19 Jul 2009 06:34:21 +0100
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
Message-ID: <4A62B05D.2070504@digital-crocus.com>

Hi there,
I'm trying to do some reverse DNS lookups with twisted and I don't seem 
to be able to get even the most simple of test cases to work. I've tried 
it on a couple of different installations with the same results, perhaps 
someone can help me?
My test case is this:
----------------------------------------------------------------------------------
from twisted.names import client
from twisted.internet import reactor
def callback(a):
    print repr(a)

client.lookupPointer('128.244.209.91.in-addr.arpa').addCallback(callback)
reactor.run()
----------------------------------------------------------------------------------

The output I'm getting from this program is as follows:
([<RR name=128.244.209.91.in-addr.arpa type=PTR class=IN ttl=9777s 
auth=False>], [<RR name=244.209.91.in-addr.arpa type=NS class=IN 
ttl=8348s auth=False>, <RR name=244.209.91.in-addr.arpa type=NS class=IN 
ttl=8348s auth=False>], [<RR name=ns1.solsticehosting.net type=A 
class=IN ttl=8348s auth=False>, <RR name=ns2.solsticehosting.net type=A 
class=IN ttl=8348s auth=False>])

Nowhere in this output is the actual PTR record - the first entry looks 
like it should be the PTR record, but the name is 
'128.244.209.91.in-addr.arpa' - I'm expecting it to be 
node2.digital-crocus.com. Can anyone clarify whether I'm doing something 
wrong or if this is in fact a bug?

Cheers,


~Kieran Simkin
Digital Crocus affordable web hosting <http://digital-crocus.com/> - 
http://digital-crocus.com/
Personal Portfolio <http://slinq.com/> - http://slinq.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090719/8337ad3f/attachment.htm 

From ilya at glas.net  Sun Jul 19 04:01:34 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 12:01:34 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
Message-ID: <alpine.LNX.2.00.0907191152010.17866@cray.glas.net>


[ skipped ]

> The above is something which you're more or less not allowed to do in a
> Twisted application.  That simulated data processing is blocking the
> main event loop.  Nothing else happens until it finishes - that includes
> handling more UDP packets and it includes running timed events like the
> ones LoopingCall sets up.

But why main loop does not fire timed events when it has a chance to do 
that? Note that my data processor takes 0.2 sec on each run, while my 
timed event period is 1 sec.

In other words, I'd understand this behavior if my data processor
would block main loop for a few periods of timed event, but this
is not the case.

thanks,
ilya


From p.mayers at imperial.ac.uk  Sun Jul 19 07:17:40 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 12:17:40 +0100
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
In-Reply-To: <4A62B05D.2070504@digital-crocus.com>
References: <4A62B05D.2070504@digital-crocus.com>
Message-ID: <20090719111740.GA26994@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 06:34:21AM +0100, Kieran Simkin wrote:
>
>Nowhere in this output is the actual PTR record - the first entry looks like it should be the PTR record, but the name is '128.244.209.91.in-addr.arpa' - I'm expecting it to be node2.digital-crocus.com. Can anyone clarify whether I'm doing something wrong or if this is in fact a bug?
>

The name of the PTR record *is* a.b.c.d.in-addr.arpa. You want the 
*value*, which you can get from answer[0].payload.name. e.g.

def printPTR(results):
    answer, auth, additional = results
    if answer:
	print answer[0].payload.name

d = resolver.queryUDP([
	dns.Query('4.3.1.2.in-addr.arpa', dns.PTR)
    ])
d.addCallback(printPTR)

Obviously this code needs more error checking.


From p.mayers at imperial.ac.uk  Sun Jul 19 07:27:46 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 12:27:46 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
	<alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
Message-ID: <20090719112746.GB26994@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 09:01:34AM +0100, Ilya Etingof wrote:
>
>[ skipped ]
>
>> The above is something which you're more or less not allowed to do in a
>> Twisted application.  That simulated data processing is blocking the
>> main event loop.  Nothing else happens until it finishes - that includes
>> handling more UDP packets and it includes running timed events like the
>> ones LoopingCall sets up.
>
>But why main loop does not fire timed events when it has a chance to do 
>that? Note that my data processor takes 0.2 sec on each run, while my 
>timed event period is 1 sec.
>
>In other words, I'd understand this behavior if my data processor
>would block main loop for a few periods of timed event, but this
>is not the case.

Because Twisted receives as many datagrams as possible before going back 
round the select loop (I think). So, 10 calls to datagramReceived are 
done (taking 10*0.2 seconds) before twisted gets a chance to schedule 
any other things.

As JP has said, you're not allowed to block the main loop like that, but 
I've seen similar problems with even relatively quick datagramReceived 
handlers (~0.1msec) under very high load (1000pps) resulting in a form 
of starvation. This isn't generally a problem with TCP calls due to flow 
control.

The solution is:

  def datagramReceived(...):
    reactor.callLater(0, dorealwork, ...)

  def dorealwork(self, ...):
    ...

This will schedule the "real" work as soon as possible in the next 
reactor loop, but also "fairly" in line with other calls.


You still shouldn't block the reactor for a "long" time (the exact value 
is dependent on your app)



From exarkun at divmod.com  Sun Jul 19 07:51:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Jul 2009 07:51:56 -0400
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
In-Reply-To: <4A62B05D.2070504@digital-crocus.com>
Message-ID: <20090719115156.2543.220339135.divmod.quotient.3463@henry.divmod.com>

On Sun, 19 Jul 2009 06:34:21 +0100, Kieran Simkin <kieran at digital-crocus.com> wrote:
>Hi there,
>I'm trying to do some reverse DNS lookups with twisted and I don't seem to 
>be able to get even the most simple of test cases to work. I've tried it on 
>a couple of different installations with the same results, perhaps someone 
>can help me?

lookupPointer is a pretty low-level interface.  It's just going to give you
back the records that the DNS server it talks to gives back.  This also means
that its behavior can very based on which DNS servers it ends up using.  You
are probably interested in a higher level API that does the additional
sorting-out that's required to get the value you're actually asking for.
Unfortunately, this API isn't provided by Twisted Names (yet! :).

That said, you might be encountering a problem not related to this.

>My test case is this:
>----------------------------------------------------------------------------------
>from twisted.names import client
>from twisted.internet import reactor
>def callback(a):
>    print repr(a)
>
>client.lookupPointer('128.244.209.91.in-addr.arpa').addCallback(callback)
>reactor.run()
>----------------------------------------------------------------------------------
>
>The output I'm getting from this program is as follows:
>([<RR name=128.244.209.91.in-addr.arpa type=PTR class=IN ttl=9777s 
>auth=False>], [<RR name=244.209.91.in-addr.arpa type=NS class=IN ttl=8348s 
>auth=False>, <RR name=244.209.91.in-addr.arpa type=NS class=IN ttl=8348s 
>auth=False>], [<RR name=ns1.solsticehosting.net type=A class=IN ttl=8348s 
>auth=False>, <RR name=ns2.solsticehosting.net type=A class=IN ttl=8348s 
>auth=False>])
>
>Nowhere in this output is the actual PTR record - the first entry looks like 
>it should be the PTR record, but the name is '128.244.209.91.in-addr.arpa' - 
>I'm expecting it to be node2.digital-crocus.com. Can anyone clarify whether 
>I'm doing something wrong or if this is in fact a bug?

What you get back from the lookup methods are "RR" objects.  These are the
generic wrapping layer around any record-specific data.  If you look at the
first entry's "payload" attribute, I think you'll find a Record_PTR instance
which has the information you're after.

Jean-Paul


From ilya at glas.net  Sun Jul 19 09:20:46 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 17:20:46 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719112746.GB26994@wildfire.net.ic.ac.uk>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
	<alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
	<20090719112746.GB26994@wildfire.net.ic.ac.uk>
Message-ID: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>


>> But why main loop does not fire timed events when it has a chance to do
>> that? Note that my data processor takes 0.2 sec on each run, while my
>> timed event period is 1 sec.
>>
>> In other words, I'd understand this behavior if my data processor
>> would block main loop for a few periods of timed event, but this
>> is not the case.
>
> Because Twisted receives as many datagrams as possible before going back
> round the select loop (I think). So, 10 calls to datagramReceived are
> done (taking 10*0.2 seconds) before twisted gets a chance to schedule
> any other things.

Perhaps it works that way. And what makes things worse is that if datagram 
input rate is steady and higher than datagram processing time, the 
LoopingCall calls will never be invoked.

> As JP has said, you're not allowed to block the main loop like that, but
> I've seen similar problems with even relatively quick datagramReceived
> handlers (~0.1msec) under very high load (1000pps) resulting in a form
> of starvation. This isn't generally a problem with TCP calls due to flow
> control.

I do not think I'm blocking the main loop so much. I'd say I create a
condition when data processing time is a little bit longer than the period 
of incoming datagrams arrival.

By way of feedback, it looks to me that if reactor API would give 
user some degree of control on timed versus receiption calls sequencing, 
that would become a more-or-less elegant solution for issues like mine.

> The solution is:
>
>  def datagramReceived(...):
>    reactor.callLater(0, dorealwork, ...)
>
>  def dorealwork(self, ...):
>    ...
>
> This will schedule the "real" work as soon as possible in the next
> reactor loop, but also "fairly" in line with other calls.

Thanks for the hint!

With this callLater approach, timer function works better, though, still 
not absolutely fair:

timer called 1248008220.19
dorealwork 1248008220.81
dorealwork 1248008221.21
timer called 1248008221.41
dorealwork 1248008221.41
[ 2 dorealwork calls here ]
dorealwork 1248008222.01
timer called 1248008222.21
dorealwork 1248008222.21
[ 7 dorealwork calls here ]
dorealwork 1248008223.81
timer called 1248008224.01
dorealwork 1248008224.01
[ 17 dorealwork calls here ]
dorealwork 1248008227.61
timer called 1248008227.81
dorealwork 1248008227.81
[ 39 dorealwork calls here ]
dorealwork 1248008235.81
timer called 1248008236.02
dorealwork 1248008236.02
[ 87 dorealwork calls here ]
dorealwork 1248008253.62
timer called 1248008253.83

As we can see, timer call period seems to grow over high load.

thanks,
ilya


From exarkun at divmod.com  Sun Jul 19 09:58:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Jul 2009 09:58:40 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
Message-ID: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>

On Sun, 19 Jul 2009 17:20:46 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>>> But why main loop does not fire timed events when it has a chance to do
>>> that? Note that my data processor takes 0.2 sec on each run, while my
>>> timed event period is 1 sec.
>>>
>>> In other words, I'd understand this behavior if my data processor
>>> would block main loop for a few periods of timed event, but this
>>> is not the case.
>>
>> Because Twisted receives as many datagrams as possible before going back
>> round the select loop (I think). So, 10 calls to datagramReceived are
>> done (taking 10*0.2 seconds) before twisted gets a chance to schedule
>> any other things.
>
>Perhaps it works that way. And what makes things worse is that if datagram
>input rate is steady and higher than datagram processing time, the
>LoopingCall calls will never be invoked.

It will eventually stop reading datagrams and go do something else.  The
exact way it decides when to stop is completely arbitrary and I don't
think anyone has ever demonstrated that it's clever or appropriate in the
general case (it stops after reading 256k of datagrams).

>
>> As JP has said, you're not allowed to block the main loop like that, but
>> I've seen similar problems with even relatively quick datagramReceived
>> handlers (~0.1msec) under very high load (1000pps) resulting in a form
>> of starvation. This isn't generally a problem with TCP calls due to flow
>> control.
>
>I do not think I'm blocking the main loop so much. I'd say I create a
>condition when data processing time is a little bit longer than the period
>of incoming datagrams arrival.
>
>By way of feedback, it looks to me that if reactor API would give
>user some degree of control on timed versus receiption calls sequencing,
>that would become a more-or-less elegant solution for issues like mine.

One possibility is that we could document the limit I described above and
tell people to adjust it upwards or downwards as they so desire.

>
>> The solution is:
>>
>>  def datagramReceived(...):
>>    reactor.callLater(0, dorealwork, ...)
>>
>>  def dorealwork(self, ...):
>>    ...
>>
>> This will schedule the "real" work as soon as possible in the next
>> reactor loop, but also "fairly" in line with other calls.
>
>Thanks for the hint!
>
>With this callLater approach, timer function works better, though, still
>not absolutely fair:
>
> [snip]
>
>As we can see, timer call period seems to grow over high load.
>

reactor.callLater(0, f) isn't magic.  I probably wouldn't have suggested
it as a solution here.  All it means (more or less) is "do this work after
all current i/o events have been dispatched."  You still might end up with
more than one second of processing bunched up together, and so you'll still
miss a LoopingCall iteration.

Jean-Paul


From p.mayers at imperial.ac.uk  Sun Jul 19 10:43:58 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 15:43:58 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
Message-ID: <20090719144358.GA28616@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 02:58:40PM +0100, Jean-Paul Calderone wrote:
>
>It will eventually stop reading datagrams and go do something else.  The
>exact way it decides when to stop is completely arbitrary and I don't
>think anyone has ever demonstrated that it's clever or appropriate in the
>general case (it stops after reading 256k of datagrams).

That's interesting. I didn't know that. Has it always done this, or is 
that a recent thing?

As I say, I used to experience starvation of the reactor doing SNMP 
walks of hundreds of devices (in addition to UDP socket buffer 
overflows) which is why I adopted my solution (see below)

>
>reactor.callLater(0, f) isn't magic.  I probably wouldn't have suggested
>it as a solution here.  All it means (more or less) is "do this work after
>all current i/o events have been dispatched."  You still might end up with
>more than one second of processing bunched up together, and so you'll still
>miss a LoopingCall iteration.

For what it's worth, I actually do something a lot more sophisticated. 
My UDP IO, the protocol parsing, re-transmission logic and so forth 
actually happen in a "farm" of N sub-processes (which lets me make use 
of the multi-core CPU) and I talk to the parent process over TCP.

Viewing the reactor as a device that emits a stream of events (timer 
ticks, socket reads, write requests etc.) the problem can be considered 
a QoS issue.  It's hard to see how the reactor could "know" how to do 
the right thing in all cases, absent a hinting mechanism from the 
application:

queue = reactor.getDefaultQueue()
subq = queue.newChild()
subq.setMode('round-robin')
subq.listenUDP(CONTROL, importantProto(), weight=10)
subq.listenUDP(DATA, lessimportantProto(), weight=1)

...or something ;o) This isn't a serious suggestion obviously!


From andrewfr_ice at yahoo.com  Sun Jul 19 12:08:12 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 19 Jul 2009 09:08:12 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
Message-ID: <549184.71747.qm@web34208.mail.mud.yahoo.com>


Hello Glyph et al:

Message: 6
Date: Sat, 18 Jul 2009 16:11:42 -0400
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Simple Epoll Reactor question
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
? ? <d9047f780907181311r29018280n3d4fdd578d60a270 at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Sat, Jul 18, 2009 at 2:41 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> What am I doing wrong? Thanks in advance.

The first google hit for "epollreactor api" is:
<http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.epollreactor.html>.

And I read that page.

>The two lines of code there are the *only* things your program should
>do in order to use the epoll reactor.? (Actually, you should just use
>the '-r' option to 'twistd', but I digress.)? After those lines are
>run, your program should 'from twisted.internet import reactor' as
>usual.

Okay I restructured the code as

from twisted.internet import epollreactor
epollreactor.install()
from twisted.internet import reactor

and this works. Thanks. Before I was getting "reactor already installed" errors when I used epollreactor.install() (this is to answer Cary Hull's question about commenting out that line).

Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

Cheers,
Andrew? 








      


From jonathan+twisted at jsphere.com  Sun Jul 19 12:34:41 2009
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Sun, 19 Jul 2009 18:34:41 +0200
Subject: [Twisted-Python] Commit access
Message-ID: <ee08d1630907190934pbdce6b0me1abce3d9dd8040f@mail.gmail.com>

Hello Twisted,

I've been contributing to Twisted (jonathanj on the Trac instance, k4y on
IRC) for around a year now.

I'd be grateful for commit access to the Twisted repo and, as per glyph's
suggestion, I'd like to formally request it.

I'm not sure if I'm supposed to bow or not, so I'll just exit left.
-- 
Jonathan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090719/94da14ba/attachment.htm 

From glyph at twistedmatrix.com  Sun Jul 19 12:59:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 12:59:22 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <d9047f780907190955m40317097i78d6066e467ea378@mail.gmail.com>
References: <549184.71747.qm@web34208.mail.mud.yahoo.com>
	<d9047f780907190955m40317097i78d6066e467ea378@mail.gmail.com>
Message-ID: <d9047f780907190959k60c53022qb4d348ac886e2d80@mail.gmail.com>

On Sun, Jul 19, 2009 at 12:08 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

The "choosing a reactor" document could definitely be made clearer;
please feel free to submit a doc patch that will help others with
this.


From glyph at twistedmatrix.com  Sun Jul 19 13:07:29 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 13:07:29 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719144358.GA28616@wildfire.net.ic.ac.uk>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
Message-ID: <d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>

On Sun, Jul 19, 2009 at 10:43 AM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:

> Viewing the reactor as a device that emits a stream of events (timer
> ticks, socket reads, write requests etc.) the problem can be considered
> a QoS issue. ?It's hard to see how the reactor could "know" how to do
> the right thing in all cases, absent a hinting mechanism from the
> application:
>
> queue = reactor.getDefaultQueue()
> subq = queue.newChild()
> subq.setMode('round-robin')
> subq.listenUDP(CONTROL, importantProto(), weight=10)
> subq.listenUDP(DATA, lessimportantProto(), weight=1)
>
> ...or something ;o) This isn't a serious suggestion obviously!

I know what you mean.  If you trawl through my really old blog posts
(I think the one I'm thinking of is on livejournal, but I can't find
it quickly) you'll see that I've thought about this before.  The two
main deterrents to changing the reactor to be a set of abstract
"events" placed into a queue by event handlers rather than a  loop
that just calls everything immediately are:

 1) it might be slower, since it's extra code being run for every event, and
 2) it's a massive amount of work to actually implement it :).

You could help out with #1 by implementing something and measuring it,
and you can help out with #2 by just implementing it and letting
someone else measure it :).


From lvh at laurensvh.be  Sun Jul 19 15:37:19 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 19 Jul 2009 21:37:19 +0200
Subject: [Twisted-Python] An alternative Twisted GPS protocol implementation
Message-ID: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>

Hi everyone :-)


I'm writing a GPS-based app and I was kind of unhappy with the
existing GPS implementation. It probably works, but it has two
problems that you might care about if you're using it:

1. it's interface isn't very friendly
(twisted.protocols.gps.nmea.NMEAReceiver.decode_fix has _fourteen_
positional arguments, which are essentially raw sentence data -- this
reminds me of MFC too much for me to stay in my comfort zone)
2. it doesn't seem to have any unit tests, so behavior is up in the air a little

Also, if you want to to extend it (admittedly not very likely with a
rusty protocol like NMEA), well, the current implementation is kind of
terse.

Anyway, I've been working on a friendlier interface for a few days
now, and if people like it, it might be a candidate for inclusion in
Twisted itself. This would mean deprecating twisted.protocols.gps in
favor of the shiny new twisted.protocols.positioning. I was originally
going to make it a Twisted community project, but glyph expressed
interest in putting it in Twisted itself instead.

It does nice conversions like parse the timestamps into Python
time/date/datetime objects and automatically adding sign information
for coordinates, stuff like that. Also, it provides a much nicer
interface to the information, so you can use code like:

point.position.latitude
point.position.longitude.inDegreesMinutesSeconds
point.altitude
point.altitude.aboveMeanSeaLevel.inFeet
point.heading.trueHeading

Et cetera. Use of this interface is optional, there's also straight
dict access (which is roughly like the current API except with a
dictionary instead of positional arguments).

Right now it only supports NMEA. The old system supported Rockwell as
well. What I'd like to hear from you (you mostly being potential users
of this piece of code): do you care about Rockwell (aka Zodiac)
support? If you're just using twisted.protocols.gps now, I'm
interested in hearing from you as well of course :-)

SiRF support for now is probably out of the question. It's a whole
different ball game. Parsing it is *hard* (it's much more complicated
than just a binary representation of the same data).

Replies welcome, alternatively you can usually catch me at this email
address or as lvh on freenode (in the usual suspects: #python,
#twisted...)

Thanks for-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.6)

iEYEARECAAYFAkpjdcMACgkQT5v5zGkvKT5EpwCeLhrOe1tHXuJQKc78jAQ+ALQA
s5IAn3vn5kVEZ++eUGuRb3zsxynQPCR4
=7Cyx
-----END PGP SIGNATURE-----
reading,
Laurens


From glyph at twistedmatrix.com  Sun Jul 19 16:58:23 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 16:58:23 -0400
Subject: [Twisted-Python] An alternative Twisted GPS protocol
	implementation
In-Reply-To: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
References: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
Message-ID: <d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>

On Sun, Jul 19, 2009 at 3:37 PM, Laurens Van Houtven<lvh at laurensvh.be> wrote:

> Right now it only supports NMEA. The old system supported Rockwell as
> well. What I'd like to hear from you (you mostly being potential users
> of this piece of code): do you care about Rockwell (aka Zodiac)
> support? If you're just using twisted.protocols.gps now, I'm
> interested in hearing from you as well of course :-)

The default assumption, if nobody replies to this, should be that
nobody is using Rockwell support and we can safely deprecate it
without a replacement.

> SiRF support for now is probably out of the question. It's a whole
> different ball game. Parsing it is *hard* (it's much more complicated
> than just a binary representation of the same data).

For the time being (at least, for the purposes of including a new
implementation in Twisted), I don't think we need to worry about this
- it would be great to file an enhancement later, but we don't have it
yet so we shouldn't have to consider it to improve the implementation
of existing protocols.

> Replies welcome, alternatively you can usually catch me at this email
> address or as lvh on freenode (in the usual suspects: #python,
> #twisted...)

I would appreciate it if we could keep the discussion, or at least the
conclusions of this discussion, archived in some relevant place.  The
mailing list could be a good be a good place to start the discussion,
but there should be a ticket, and the ticket should link to that
discussion.  Similarly, if you talk about it on #twisted, you should
attach a comment at the end of that conversation, pasting any
conclusions that happened there.  (You shouldn't really talk about it
on #python.  It's a difficult place to have a focused technical
discussion.)

Sorry if this all seems overly fussy, but repetitive discussions and
half-remembered conclusions are the bane of open source in general,
and have long been a problem on Twisted specifically.  A little bit of
effort to record everything on a ticket now will save someone ? maybe
even you ? a lot of effort in a couple of months when they're looking
at it in a few months if you get distracted and can't work on it.


From p.mayers at imperial.ac.uk  Mon Jul 20 06:52:43 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jul 2009 11:52:43 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
	<d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
Message-ID: <4A644C7B.4000500@imperial.ac.uk>

> 
> I know what you mean.  If you trawl through my really old blog posts
> (I think the one I'm thinking of is on livejournal, but I can't find
> it quickly) you'll see that I've thought about this before.  The two
> main deterrents to changing the reactor to be a set of abstract
> "events" placed into a queue by event handlers rather than a  loop
> that just calls everything immediately are:
> 
>  1) it might be slower, since it's extra code being run for every event, and

I wonder if wrapping one of the C event libraries and doing the bulk of 
the work in there would ameliorate that aspect.

>  2) it's a massive amount of work to actually implement it :).
> 
> You could help out with #1 by implementing something and measuring it,
> and you can help out with #2 by just implementing it and letting
> someone else measure it :).

Fascinating though the topic is, I very much doubt I'll have any time to 
even look at it.

That said; is there a reactor "performance" test?


From glyph at twistedmatrix.com  Mon Jul 20 07:11:08 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 07:11:08 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <4A644C7B.4000500@imperial.ac.uk>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
	<d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
	<4A644C7B.4000500@imperial.ac.uk>
Message-ID: <d9047f780907200411u1b26ee3aybea9daec377242be@mail.gmail.com>

On Mon, Jul 20, 2009 at 6:52 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Fascinating though the topic is, I very much doubt I'll have any time to
> even look at it.
>

A familiar refrain.

That said; is there a reactor "performance" test?


Hmm.  No, not really.  It would be helpful to develop one, I think.
Especially if you could run it somewhere in an automated fashion and graph
its performance against different SVN revisions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/c97a07d0/attachment.htm 

From ilya at glas.net  Mon Jul 20 07:33:12 2009
From: ilya at glas.net (Ilya Etingof)
Date: Mon, 20 Jul 2009 15:33:12 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
References: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
Message-ID: <alpine.LNX.2.00.0907201519490.19317@cray.glas.net>


>> Perhaps it works that way. And what makes things worse is that if datagram
>> input rate is steady and higher than datagram processing time, the
>> LoopingCall calls will never be invoked.
>
> It will eventually stop reading datagrams and go do something else.  The
> exact way it decides when to stop is completely arbitrary and I don't
> think anyone has ever demonstrated that it's clever or appropriate in the
> general case (it stops after reading 256k of datagrams).

Isn't this call priority policy appears somewhat rigid and obscure?

Would it be clearer if user would be allowed to assign relative
weights to his/her receiption and timer functions so that main loop
could choose what to call in case of their competition for time slot?

thanks,
ilya


From glyph at twistedmatrix.com  Mon Jul 20 07:47:08 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 07:47:08 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907201519490.19317@cray.glas.net>
References: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<alpine.LNX.2.00.0907201519490.19317@cray.glas.net>
Message-ID: <d9047f780907200447x7258950as32c2d9997d179924@mail.gmail.com>

On Mon, Jul 20, 2009 at 7:33 AM, Ilya Etingof <ilya at glas.net> wrote:

> Isn't this call priority policy appears somewhat rigid and obscure?
>
> Would it be clearer if user would be allowed to assign relative
> weights to his/her receiption and timer functions so that main loop
> could choose what to call in case of their competition for time slot?


As we have already said in this thread, yes, it would be nice if the call
priorities were adjustable and the queue of "work yet to do" could be easily
inspected and accounted for.  Somebody still has to actually *do* it though,
and there are over a thousand other issues just in Twisted which require our
attention.

If you would contribute a patch I'm sure someone would look at it.  I, for
one, would be very excited to get this feature in some form.

("relative weights" is kind of a silly way to do it though, because a
Twisted program is inevitably a collection of event handlers from disparate
codebases which don't know how the other codebases might interpret a
priority.  If a Twisted mail library thinks that 0.5 is a "low" priority and
0.8 is a "high" priority, it will interact poorly with a Twisted monitoring
library that thinks "20000" is a "low" priority and "1e10" is a "high"
priority.  Arbitrary numbers are never a good API.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/550b5454/attachment-0001.htm 

From gabriel.rossetti at arimaz.com  Mon Jul 20 07:52:06 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 20 Jul 2009 13:52:06 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
Message-ID: <4A645A66.1000301@arimaz.com>

Hello everyone,

I have been experiencing the ConnectionError with adbapi & 
cp_reconnect=True. I know that because of the cp_reconnect=True param 
tha is reconnects and that the query is not re-run. I have written some 
code that should re-run the query in that case (if I get a Failure back 
because of a ConnectionError), but it doesn't seem to work. My question 
is if anyone knows how to make mysql's idle timeouts shorter so that I 
can debug my code? I searched google and the mysql site with no luck.

thank you,
Gabriel


From david at strotos.com  Mon Jul 20 08:26:23 2009
From: david at strotos.com (David Guerin)
Date: Mon, 20 Jul 2009 13:26:23 +0100
Subject: [Twisted-Python] Timers in Twisted
Message-ID: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>

Hey all,

I'm pretty new to Twisted Framework but things are going along nicely.  
At the moment I am trying to get a timer to fire off say every 5  
minutes.
What's the best way to do this with twisted?
I found an old link to a how to with timers in twisted on the  
twistedmatrix.com site but there wasn't a web page there when I clicked

Thanks

Regards
David




From glyph at twistedmatrix.com  Mon Jul 20 08:36:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 08:36:47 -0400
Subject: [Twisted-Python] Timers in Twisted
In-Reply-To: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
References: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
Message-ID: <d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>

On Mon, Jul 20, 2009 at 8:26 AM, David Guerin <david at strotos.com> wrote:

> Hey all,
>
> I'm pretty new to Twisted Framework but things are going along nicely.
> At the moment I am trying to get a timer to fire off say every 5
> minutes.
> What's the best way to do this with twisted?
> I found an old link to a how to with timers in twisted on the
> twistedmatrix.com site but there wasn't a web page there when I clicked
>

You can use LoopingCall: <
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html>,
like so:

from twisted.internet.task import LoopingCall
MINUTES = 60.0
def myTimer():
      doSomeStuff()
repeater = LoopingCall(myTimer)
repeater.start(5 * MINUTES)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/cdfd58ce/attachment.htm 

From david at strotos.com  Mon Jul 20 09:01:13 2009
From: david at strotos.com (David Guerin)
Date: Mon, 20 Jul 2009 14:01:13 +0100
Subject: [Twisted-Python] Timers in Twisted
In-Reply-To: <d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>
References: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
	<d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>
Message-ID: <3E7D1DCC-B1D0-43C8-8AFE-3C5275EEFA85@strotos.com>

Hey,

Thanks for the quick response, this is exactly what I am looking for  
am works great.

Thanks again

Regards
David


On 20 Jul 2009, at 13:36, Glyph Lefkowitz wrote:

>
> On Mon, Jul 20, 2009 at 8:26 AM, David Guerin <david at strotos.com>  
> wrote:
> Hey all,
>
> I'm pretty new to Twisted Framework but things are going along nicely.
> At the moment I am trying to get a timer to fire off say every 5
> minutes.
> What's the best way to do this with twisted?
> I found an old link to a how to with timers in twisted on the
> twistedmatrix.com site but there wasn't a web page there when I  
> clicked
>
> You can use LoopingCall: <http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html  
> >, like so:
>
> from twisted.internet.task import LoopingCall
> MINUTES = 60.0
> def myTimer():
>       doSomeStuff()
> repeater = LoopingCall(myTimer)
> repeater.start(5 * MINUTES)
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/f67a63c1/attachment.htm 

From paulswartz at gmail.com  Mon Jul 20 18:48:03 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 20 Jul 2009 18:48:03 -0400
Subject: [Twisted-Python] Twisted words: Oscar
In-Reply-To: <6fe425b00907132326o34cee2c0q5cf21bff43f22aa2@mail.gmail.com>
References: <6fe425b00907132326o34cee2c0q5cf21bff43f22aa2@mail.gmail.com>
Message-ID: <324cfb540907201548t509872aese756baed50b7f1b3@mail.gmail.com>

On Tue, Jul 14, 2009 at 2:26 AM, Nida <crazyturkey at gmail.com> wrote:

> Hi there,
>
> I noticed that you are on the twisted words mailing list and it says that
> you are the maintainer too, so I was hoping I could ask you a few questions:
> I would like to use the twisted words oscar protocols.
> I am trying to use the oscardemo.py example as a guide and I would like to
> use sendMessage without call back and I don't want to use the reactor
> (because I don't want it to loop).
> I would like the bot to log in, but I want some user interaction to type in
> a message to send to others. My problem is I want to use sendMessage as well
> as getting a buddyList.
> Is there a better way then using ClientCreator? Or a simpler way to log in?
>

(I'm cc-ing the twisted list, since that's the place where questions should
go)

ClientCreator is just an easier way to connection client protocols, without
having to make your own Factory.

You have to use the reactor; that's how the TCP data gets to your client.
I'm not sure what "I don't want it to loop" means, but you can always stop
the reactor after you're done with whatever networking you're doing.

You don't need to have a callback for sendMessage.  Just don't pass the
wantAck kwarg to the method, and you won't get a Deferred back.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/fc376440/attachment.htm 

From itamar at itamarst.org  Mon Jul 20 21:27:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Jul 2009 21:27:16 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <1090717131439.63148F-100000@Ives.egh.com>
References: <1090717131439.63148F-100000@Ives.egh.com>
Message-ID: <1248139636.19310.306.camel@pintsize>

I asked, and ITA seems willing to provide a conference room or two with
Internet for sprinters. I will try for official signoff given more
details like dates and # of people.



From glyph at twistedmatrix.com  Mon Jul 20 21:40:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 21:40:54 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <1248139636.19310.306.camel@pintsize>
References: <1090717131439.63148F-100000@Ives.egh.com>
	<1248139636.19310.306.camel@pintsize>
Message-ID: <d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>

On Mon, Jul 20, 2009 at 9:27 PM, Itamar Shtull-Trauring <itamar at itamarst.org
> wrote:

> I asked, and ITA seems willing to provide a conference room or two with
> Internet for sprinters. I will try for official signoff given more
> details like dates and # of people.


Great.  Thanks for setting this up.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090720/906ddb77/attachment.htm 

From newptcai at gmail.com  Tue Jul 21 07:33:26 2009
From: newptcai at gmail.com (Peter Cai)
Date: Tue, 21 Jul 2009 19:33:26 +0800
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
Message-ID: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>

When my server reboot after an unexpected power cut,
supervisord tried to start a twisted app after an unexpected power cut,
but it fails because "Another twistd server is running, PID 4607"
4607 is the PID of the twisted app before power cut.

After I stopped and restart supervisord, everything is OK.

What might cause twistd to think that an non-exist process is running?

-- 
look to the things around you,the immediate world around you, if you are
alive,it will mean something to you ??Paul Strand
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090721/f71baad8/attachment.htm 

From exarkun at divmod.com  Tue Jul 21 10:06:03 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Jul 2009 10:06:03 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
Message-ID: <20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>

On Tue, 21 Jul 2009 19:33:26 +0800, Peter Cai <newptcai at gmail.com> wrote:
>When my server reboot after an unexpected power cut,
>supervisord tried to start a twisted app after an unexpected power cut,
>but it fails because "Another twistd server is running, PID 4607"
>4607 is the PID of the twisted app before power cut.
>
>After I stopped and restart supervisord, everything is OK.
>
>What might cause twistd to think that an non-exist process is running?
>

This is probably due to <http://twistedmatrix.com/trac/ticket/3851>.  It's
not clear what the best solution is yet.

Jean-Paul


From shywolf9982 at gmail.com  Tue Jul 21 13:02:47 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Tue, 21 Jul 2009 19:02:47 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
Message-ID: <h44rq7$7jd$1@ger.gmane.org>

On 07/21/2009 04:06 PM, Jean-Paul Calderone wrote:
> This is probably due to<http://twistedmatrix.com/trac/ticket/3851>.  It's
> not clear what the best solution is yet.

Hi all,

In the bug report I see:

 > after an unclean shutdown by a previous twistd, a new process is
 > started and is allocated the same pid as is in the pidfile which was
 > left behind. This process now causes twistd to think another twistd
 > process is still running in the directory.

If I understand well, the (rather unlucky, but not all that improbable) 
case we are talking about here is twisted getting reassigned the same 
PID that it was running with before?

Example:
1. Twisted is running with PID 401 and suffers an unclean shutdown.
2. Twisted is restarted and is reassigned the same PID (likely if it's a 
daemon launched during startup and a reboot has happened)
3. Twisted invokes checkPID (which reads from the stale pidfile) and 
sees that, after all, there is a process 401 running
4. Twisted claims another process is running

Why this can't be solved by comparing the pid in the file with 
os.getpid() (before throwing the error)?



From radix at twistedmatrix.com  Tue Jul 21 13:10:30 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 21 Jul 2009 13:10:30 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <h44rq7$7jd$1@ger.gmane.org>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
	<h44rq7$7jd$1@ger.gmane.org>
Message-ID: <60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>

On Tue, Jul 21, 2009 at 1:02 PM, Simone Deponti<shywolf9982 at gmail.com> wrote:
> On 07/21/2009 04:06 PM, Jean-Paul Calderone wrote:
>> This is probably due to<http://twistedmatrix.com/trac/ticket/3851>. ?It's
>> not clear what the best solution is yet.
>
> Hi all,
>
> In the bug report I see:
>
> ?> after an unclean shutdown by a previous twistd, a new process is
> ?> started and is allocated the same pid as is in the pidfile which was
> ?> left behind. This process now causes twistd to think another twistd
> ?> process is still running in the directory.
>
> If I understand well, the (rather unlucky, but not all that improbable)
> case we are talking about here is twisted getting reassigned the same
> PID that it was running with before?

It's not necessarily a twistd process. It could be any process with
the same pid. checkPID only checks to see if the pid exists, not that
it's the PID of a twistd process.

> Example:
> 1. Twisted is running with PID 401 and suffers an unclean shutdown.
> 2. Twisted is restarted and is reassigned the same PID (likely if it's a
> daemon launched during startup and a reboot has happened)
> 3. Twisted invokes checkPID (which reads from the stale pidfile) and
> sees that, after all, there is a process 401 running
> 4. Twisted claims another process is running
>
> Why this can't be solved by comparing the pid in the file with
> os.getpid() (before throwing the error)?

I don't think I understand this proposal.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/


From wthie at thiengineering.ch  Tue Jul 21 17:05:04 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 21 Jul 2009 23:05:04 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A645A66.1000301@arimaz.com>
References: <4A645A66.1000301@arimaz.com>
Message-ID: <4A662D80.1060009@thiengineering.ch>

Hi Gabriel

had the same problem, solved it by having keepalive() called in a 
LoopingCall(), MySQL sitting at defaults timingwise.

DB_DRIVER = "MySQLdb"

USERDB_ARGS = {
   'host': '',
   'db': '',
   'user': '',
   'passwd': '',
   'cp_reconnect': True
}

storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)

ka = task.LoopingCall(storekeeper.store.keepAlive)
ka.start(300)

class StoreKeeper(object):
   def __init__(self, dbapiName, **params):
     self.store = Store(dbapiName, **params)

   def dbdisconn(self, reason):
     print 'db disconnected for ', reason

   def keepAlive(self):
     d = self.store.runQuery('SELECT 1')
     d.addErrback(self.dbdisconn)


#with store being something like:

class Store(object):
   def __init__(self, dbapiName, **params):
     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
     print self.__pool.__getstate__()
     self.runOperation('SET autocommit = %s', 1)

   def runQuery(self, query, *args):
     d = self.__pool.runInteraction(self.mapQuery, query, args)
     return d

   def mapQuery(self, curs, query, *args):
     try:
       curs.execute(query, *args)
     except adbapi.ConnectionLost:
       print
       print '++++++++++++ rerunning query'
       print
       curs.execute(query, *args)                    #simply resend 
query, assuming cp_reconnect=True
     result = curs.fetchall()
     columns = [d[0] for d in curs.description]
     return [dict(zip(columns, r)) for r in result]

   def runOperation(self, query, *args):
     d = self.__pool.runOperation(query, args)
     return d

   def runInteraction(self, fun, queries=(), args=()):
     d = self.__pool.runInteraction(fun, queries, args)
     return d


HTH, Werner

Gabriel Rossetti wrote:
> Hello everyone,
> 
> I have been experiencing the ConnectionError with adbapi & 
> cp_reconnect=True. I know that because of the cp_reconnect=True param 
> tha is reconnects and that the query is not re-run. I have written some 
> code that should re-run the query in that case (if I get a Failure back 
> because of a ConnectionError), but it doesn't seem to work. My question 
> is if anyone knows how to make mysql's idle timeouts shorter so that I 
> can debug my code? I searched google and the mysql site with no luck.
> 
> thank you,
> Gabriel
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From clay.gerrard at rackspace.com  Tue Jul 21 17:18:08 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Tue, 21 Jul 2009 16:18:08 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A662D80.1060009@thiengineering.ch>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
Message-ID: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>

Regarding the original question:
"how to make mysql's idle timeouts shorter so that I can debug my code?"

You should be able to do that in the mysql shell:
mysql> show variables like '%timeout%';
+----------------------------+-------+
| Variable_name              | Value |
+----------------------------+-------+
| connect_timeout            | 5     |
| delayed_insert_timeout     | 300   |
| innodb_lock_wait_timeout   | 50    |
| innodb_rollback_on_timeout | OFF   |
| interactive_timeout        | 600   |
| net_read_timeout           | 30    |
| net_write_timeout          | 60    |
| slave_net_timeout          | 3600  |
| table_lock_wait_timeout    | 50    |
| wait_timeout               | 600   |
+----------------------------+-------+
10 rows in set (0.00 sec)

> set global variable interactive_timeout = 5;

But in my experience MySQLdb makes the idle connection timeout very difficult to debug effectively.

Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like sqlalchemy?

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
Sent: Tuesday, July 21, 2009 4:05 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

Hi Gabriel

had the same problem, solved it by having keepalive() called in a
LoopingCall(), MySQL sitting at defaults timingwise.

DB_DRIVER = "MySQLdb"

USERDB_ARGS = {
   'host': '',
   'db': '',
   'user': '',
   'passwd': '',
   'cp_reconnect': True
}

storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)

ka = task.LoopingCall(storekeeper.store.keepAlive)
ka.start(300)

class StoreKeeper(object):
   def __init__(self, dbapiName, **params):
     self.store = Store(dbapiName, **params)

   def dbdisconn(self, reason):
     print 'db disconnected for ', reason

   def keepAlive(self):
     d = self.store.runQuery('SELECT 1')
     d.addErrback(self.dbdisconn)


#with store being something like:

class Store(object):
   def __init__(self, dbapiName, **params):
     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
     print self.__pool.__getstate__()
     self.runOperation('SET autocommit = %s', 1)

   def runQuery(self, query, *args):
     d = self.__pool.runInteraction(self.mapQuery, query, args)
     return d

   def mapQuery(self, curs, query, *args):
     try:
       curs.execute(query, *args)
     except adbapi.ConnectionLost:
       print
       print '++++++++++++ rerunning query'
       print
       curs.execute(query, *args)                    #simply resend
query, assuming cp_reconnect=True
     result = curs.fetchall()
     columns = [d[0] for d in curs.description]
     return [dict(zip(columns, r)) for r in result]

   def runOperation(self, query, *args):
     d = self.__pool.runOperation(query, args)
     return d

   def runInteraction(self, fun, queries=(), args=()):
     d = self.__pool.runInteraction(fun, queries, args)
     return d


HTH, Werner

Gabriel Rossetti wrote:
> Hello everyone,
>
> I have been experiencing the ConnectionError with adbapi &
> cp_reconnect=True. I know that because of the cp_reconnect=True param
> tha is reconnects and that the query is not re-run. I have written some
> code that should re-run the query in that case (if I get a Failure back
> because of a ConnectionError), but it doesn't seem to work. My question
> is if anyone knows how to make mysql's idle timeouts shorter so that I
> can debug my code? I searched google and the mysql site with no luck.
>
> thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace. 
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message. 
Your cooperation is appreciated.



From shywolf9982 at gmail.com  Tue Jul 21 18:41:20 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 22 Jul 2009 00:41:20 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>	<h44rq7$7jd$1@ger.gmane.org>
	<60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>
Message-ID: <h45fl0$fdt$1@ger.gmane.org>

On 07/21/2009 07:10 PM, Christopher Armstrong wrote:
> It's not necessarily a twistd process. It could be any process with
> the same pid. checkPID only checks to see if the pid exists, not that
> it's the PID of a twistd process.

Disclaimer is, I might be extremely naive here. I have to admit I wasn't 
able to figure out when checkPID is called (before or after a possible 
daemonization? Since with how you have to write daemons in UNIX, doing a 
os.getpid() _before_ daemonizing is not going to work the way I intend 
it to).

Anyway, what is currently done is: os.kill is invoked with signal 0, if 
we get no OSError then sys.exit is invoked.

What I propose is if no OSError is raised, we first check that 
os.getpid() is different from the pid we read from the file, and if they 
are equal we remove the stale file.

Patch against r27172 attached.

Don't shout at me if I haven't got it (it honestly seems way too easy: 
there must be the trick ;))
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twisted_samepid_r27172.patch
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090722/afb33559/attachment.txt 

From exarkun at divmod.com  Tue Jul 21 20:16:01 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Jul 2009 20:16:01 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <h45fl0$fdt$1@ger.gmane.org>
Message-ID: <20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>

On Wed, 22 Jul 2009 00:41:20 +0200, Simone Deponti <shywolf9982 at gmail.com> wrote:
>On 07/21/2009 07:10 PM, Christopher Armstrong wrote:
>>It's not necessarily a twistd process. It could be any process with
>>the same pid. checkPID only checks to see if the pid exists, not that
>>it's the PID of a twistd process.
>
>Disclaimer is, I might be extremely naive here. I have to admit I wasn't 
>able to figure out when checkPID is called (before or after a possible 
>daemonization? Since with how you have to write daemons in UNIX, doing a 
>os.getpid() _before_ daemonizing is not going to work the way I intend it 
>to).
>
>Anyway, what is currently done is: os.kill is invoked with signal 0, if we 
>get no OSError then sys.exit is invoked.
>
>What I propose is if no OSError is raised, we first check that os.getpid() 
>is different from the pid we read from the file, and if they are equal we 
>remove the stale file.
>
>Patch against r27172 attached.
>
>Don't shout at me if I haven't got it (it honestly seems way too easy: there 
>must be the trick ;))
>


This will fix the problem in one very unlikely case, but leave it broken in
the other somewhat more likely cases.  The problem is that some *other*
process may have been started on your system and given the PID from the
pidfile.  Your proposed change won't fix that case.

Jean-Paul


From powdahound at gmail.com  Tue Jul 21 23:14:58 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Tue, 21 Jul 2009 20:14:58 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>

Instead of trying to keep the connection alive you can also just reconnect
when necessary. Example code here:
http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873

On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard <clay.gerrard at rackspace.com>wrote:

> Regarding the original question:
> "how to make mysql's idle timeouts shorter so that I can debug my code?"
>
> You should be able to do that in the mysql shell:
> mysql> show variables like '%timeout%';
> +----------------------------+-------+
> | Variable_name              | Value |
> +----------------------------+-------+
> | connect_timeout            | 5     |
> | delayed_insert_timeout     | 300   |
> | innodb_lock_wait_timeout   | 50    |
> | innodb_rollback_on_timeout | OFF   |
> | interactive_timeout        | 600   |
> | net_read_timeout           | 30    |
> | net_write_timeout          | 60    |
> | slave_net_timeout          | 3600  |
> | table_lock_wait_timeout    | 50    |
> | wait_timeout               | 600   |
> +----------------------------+-------+
> 10 rows in set (0.00 sec)
>
> > set global variable interactive_timeout = 5;
>
> But in my experience MySQLdb makes the idle connection timeout very
> difficult to debug effectively.
>
> Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like
> sqlalchemy?
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
> Sent: Tuesday, July 21, 2009 4:05 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>   'host': '',
>   'db': '',
>   'user': '',
>   'passwd': '',
>   'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>   def __init__(self, dbapiName, **params):
>     self.store = Store(dbapiName, **params)
>
>   def dbdisconn(self, reason):
>     print 'db disconnected for ', reason
>
>   def keepAlive(self):
>     d = self.store.runQuery('SELECT 1')
>     d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>   def __init__(self, dbapiName, **params):
>     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>     print self.__pool.__getstate__()
>     self.runOperation('SET autocommit = %s', 1)
>
>   def runQuery(self, query, *args):
>     d = self.__pool.runInteraction(self.mapQuery, query, args)
>     return d
>
>   def mapQuery(self, curs, query, *args):
>     try:
>       curs.execute(query, *args)
>     except adbapi.ConnectionLost:
>       print
>       print '++++++++++++ rerunning query'
>       print
>       curs.execute(query, *args)                    #simply resend
> query, assuming cp_reconnect=True
>     result = curs.fetchall()
>     columns = [d[0] for d in curs.description]
>     return [dict(zip(columns, r)) for r in result]
>
>   def runOperation(self, query, *args):
>     d = self.__pool.runOperation(query, args)
>     return d
>
>   def runInteraction(self, fun, queries=(), args=()):
>     d = self.__pool.runInteraction(fun, queries, args)
>     return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
> > Hello everyone,
> >
> > I have been experiencing the ConnectionError with adbapi &
> > cp_reconnect=True. I know that because of the cp_reconnect=True param
> > tha is reconnects and that the query is not re-run. I have written some
> > code that should re-run the query in that case (if I get a Failure back
> > because of a ConnectionError), but it doesn't seem to work. My question
> > is if anyone knows how to make mysql's idle timeouts shorter so that I
> > can debug my code? I searched google and the mysql site with no luck.
> >
> > thank you,
> > Gabriel
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of
> the
> individual or entity to which this message is addressed, and unless
> otherwise
> expressly indicated, is confidential and privileged information of
> Rackspace.
> Any dissemination, distribution or copying of the enclosed material is
> prohibited.
> If you receive this transmission in error, please notify us immediately by
> e-mail
> at abuse at rackspace.com, and delete the original message.
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090721/3410ca11/attachment-0001.htm 

From gabriel.rossetti at arimaz.com  Wed Jul 22 02:32:12 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:32:12 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A662D80.1060009@thiengineering.ch>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
Message-ID: <4A66B26C.5070708@arimaz.com>

Hello Werner,

Thanks for your idea, I will give it a try if my current "fix" doesn't 
work well (reconnecting if I get a connection lost exception and 
re-running the query).

Gabriel

Werner Thie wrote:
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a 
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>    'host': '',
>    'db': '',
>    'user': '',
>    'passwd': '',
>    'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>    def __init__(self, dbapiName, **params):
>      self.store = Store(dbapiName, **params)
>
>    def dbdisconn(self, reason):
>      print 'db disconnected for ', reason
>
>    def keepAlive(self):
>      d = self.store.runQuery('SELECT 1')
>      d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>    def __init__(self, dbapiName, **params):
>      self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>      print self.__pool.__getstate__()
>      self.runOperation('SET autocommit = %s', 1)
>
>    def runQuery(self, query, *args):
>      d = self.__pool.runInteraction(self.mapQuery, query, args)
>      return d
>
>    def mapQuery(self, curs, query, *args):
>      try:
>        curs.execute(query, *args)
>      except adbapi.ConnectionLost:
>        print
>        print '++++++++++++ rerunning query'
>        print
>        curs.execute(query, *args)                    #simply resend 
> query, assuming cp_reconnect=True
>      result = curs.fetchall()
>      columns = [d[0] for d in curs.description]
>      return [dict(zip(columns, r)) for r in result]
>
>    def runOperation(self, query, *args):
>      d = self.__pool.runOperation(query, args)
>      return d
>
>    def runInteraction(self, fun, queries=(), args=()):
>      d = self.__pool.runInteraction(fun, queries, args)
>      return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
>   
>> Hello everyone,
>>
>> I have been experiencing the ConnectionError with adbapi & 
>> cp_reconnect=True. I know that because of the cp_reconnect=True param 
>> tha is reconnects and that the query is not re-run. I have written some 
>> code that should re-run the query in that case (if I get a Failure back 
>> because of a ConnectionError), but it doesn't seem to work. My question 
>> is if anyone knows how to make mysql's idle timeouts shorter so that I 
>> can debug my code? I searched google and the mysql site with no luck.
>>
>> thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From gabriel.rossetti at arimaz.com  Wed Jul 22 02:33:11 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:33:11 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <4A66B2A7.2010102@arimaz.com>

Hello Clay,

thanks! It will help me debug my code by setting a low timout.

Gabriel

Clay Gerrard wrote:
> Regarding the original question:
> "how to make mysql's idle timeouts shorter so that I can debug my code?"
>
> You should be able to do that in the mysql shell:
> mysql> show variables like '%timeout%';
> +----------------------------+-------+
> | Variable_name              | Value |
> +----------------------------+-------+
> | connect_timeout            | 5     |
> | delayed_insert_timeout     | 300   |
> | innodb_lock_wait_timeout   | 50    |
> | innodb_rollback_on_timeout | OFF   |
> | interactive_timeout        | 600   |
> | net_read_timeout           | 30    |
> | net_write_timeout          | 60    |
> | slave_net_timeout          | 3600  |
> | table_lock_wait_timeout    | 50    |
> | wait_timeout               | 600   |
> +----------------------------+-------+
> 10 rows in set (0.00 sec)
>
>   
>> set global variable interactive_timeout = 5;
>>     
>
> But in my experience MySQLdb makes the idle connection timeout very difficult to debug effectively.
>
> Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like sqlalchemy?
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
> Sent: Tuesday, July 21, 2009 4:05 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>    'host': '',
>    'db': '',
>    'user': '',
>    'passwd': '',
>    'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>    def __init__(self, dbapiName, **params):
>      self.store = Store(dbapiName, **params)
>
>    def dbdisconn(self, reason):
>      print 'db disconnected for ', reason
>
>    def keepAlive(self):
>      d = self.store.runQuery('SELECT 1')
>      d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>    def __init__(self, dbapiName, **params):
>      self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>      print self.__pool.__getstate__()
>      self.runOperation('SET autocommit = %s', 1)
>
>    def runQuery(self, query, *args):
>      d = self.__pool.runInteraction(self.mapQuery, query, args)
>      return d
>
>    def mapQuery(self, curs, query, *args):
>      try:
>        curs.execute(query, *args)
>      except adbapi.ConnectionLost:
>        print
>        print '++++++++++++ rerunning query'
>        print
>        curs.execute(query, *args)                    #simply resend
> query, assuming cp_reconnect=True
>      result = curs.fetchall()
>      columns = [d[0] for d in curs.description]
>      return [dict(zip(columns, r)) for r in result]
>
>    def runOperation(self, query, *args):
>      d = self.__pool.runOperation(query, args)
>      return d
>
>    def runInteraction(self, fun, queries=(), args=()):
>      d = self.__pool.runInteraction(fun, queries, args)
>      return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
>   
>> Hello everyone,
>>
>> I have been experiencing the ConnectionError with adbapi &
>> cp_reconnect=True. I know that because of the cp_reconnect=True param
>> tha is reconnects and that the query is not re-run. I have written some
>> code that should re-run the query in that case (if I get a Failure back
>> because of a ConnectionError), but it doesn't seem to work. My question
>> is if anyone knows how to make mysql's idle timeouts shorter so that I
>> can debug my code? I searched google and the mysql site with no luck.
>>
>> thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of the
> individual or entity to which this message is addressed, and unless otherwise
> expressly indicated, is confidential and privileged information of Rackspace. 
> Any dissemination, distribution or copying of the enclosed material is prohibited.
> If you receive this transmission in error, please notify us immediately by e-mail
> at abuse at rackspace.com, and delete the original message. 
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From gabriel.rossetti at arimaz.com  Wed Jul 22 02:34:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:34:21 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
Message-ID: <4A66B2ED.3090503@arimaz.com>

Hello Garret,

yes, I finally did did something like that, I am currently testing the code.

Thanks,
Gabriel

Garret Heaton wrote:
> Instead of trying to keep the connection alive you can also just 
> reconnect when necessary. Example code here: 
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
>
> On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard 
> <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
>
>     Regarding the original question:
>     "how to make mysql's idle timeouts shorter so that I can debug my
>     code?"
>
>     You should be able to do that in the mysql shell:
>     mysql> show variables like '%timeout%';
>     +----------------------------+-------+
>     | Variable_name              | Value |
>     +----------------------------+-------+
>     | connect_timeout            | 5     |
>     | delayed_insert_timeout     | 300   |
>     | innodb_lock_wait_timeout   | 50    |
>     | innodb_rollback_on_timeout | OFF   |
>     | interactive_timeout        | 600   |
>     | net_read_timeout           | 30    |
>     | net_write_timeout          | 60    |
>     | slave_net_timeout          | 3600  |
>     | table_lock_wait_timeout    | 50    |
>     | wait_timeout               | 600   |
>     +----------------------------+-------+
>     10 rows in set (0.00 sec)
>
>     > set global variable interactive_timeout = 5;
>
>     But in my experience MySQLdb makes the idle connection timeout
>     very difficult to debug effectively.
>
>     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
>     like sqlalchemy?
>
>     Clay Gerrard
>     Office: 210-312-3443
>     Mobile: 210-788-9431
>     -----Original Message-----
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Werner Thie
>     Sent: Tuesday, July 21, 2009 4:05 PM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
>     mysql - OT
>
>     Hi Gabriel
>
>     had the same problem, solved it by having keepalive() called in a
>     LoopingCall(), MySQL sitting at defaults timingwise.
>
>     DB_DRIVER = "MySQLdb"
>
>     USERDB_ARGS = {
>       'host': '',
>       'db': '',
>       'user': '',
>       'passwd': '',
>       'cp_reconnect': True
>     }
>
>     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
>     ka = task.LoopingCall(storekeeper.store.keepAlive)
>     ka.start(300)
>
>     class StoreKeeper(object):
>       def __init__(self, dbapiName, **params):
>         self.store = Store(dbapiName, **params)
>
>       def dbdisconn(self, reason):
>         print 'db disconnected for ', reason
>
>       def keepAlive(self):
>         d = self.store.runQuery('SELECT 1')
>         d.addErrback(self.dbdisconn)
>
>
>     #with store being something like:
>
>     class Store(object):
>       def __init__(self, dbapiName, **params):
>         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>         print self.__pool.__getstate__()
>         self.runOperation('SET autocommit = %s', 1)
>
>       def runQuery(self, query, *args):
>         d = self.__pool.runInteraction(self.mapQuery, query, args)
>         return d
>
>       def mapQuery(self, curs, query, *args):
>         try:
>           curs.execute(query, *args)
>         except adbapi.ConnectionLost:
>           print
>           print '++++++++++++ rerunning query'
>           print
>           curs.execute(query, *args)                    #simply resend
>     query, assuming cp_reconnect=True
>         result = curs.fetchall()
>         columns = [d[0] for d in curs.description]
>         return [dict(zip(columns, r)) for r in result]
>
>       def runOperation(self, query, *args):
>         d = self.__pool.runOperation(query, args)
>         return d
>
>       def runInteraction(self, fun, queries=(), args=()):
>         d = self.__pool.runInteraction(fun, queries, args)
>         return d
>
>
>     HTH, Werner
>
>     Gabriel Rossetti wrote:
>     > Hello everyone,
>     >
>     > I have been experiencing the ConnectionError with adbapi &
>     > cp_reconnect=True. I know that because of the cp_reconnect=True
>     param
>     > tha is reconnects and that the query is not re-run. I have
>     written some
>     > code that should re-run the query in that case (if I get a
>     Failure back
>     > because of a ConnectionError), but it doesn't seem to work. My
>     question
>     > is if anyone knows how to make mysql's idle timeouts shorter so
>     that I
>     > can debug my code? I searched google and the mysql site with no
>     luck.
>     >
>     > thank you,
>     > Gabriel
>     >
>     > _______________________________________________
>     > Twisted-Python mailing list
>     > Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     Confidentiality Notice: This e-mail message (including any attached or
>     embedded documents) is intended for the exclusive and confidential
>     use of the
>     individual or entity to which this message is addressed, and
>     unless otherwise
>     expressly indicated, is confidential and privileged information of
>     Rackspace.
>     Any dissemination, distribution or copying of the enclosed
>     material is prohibited.
>     If you receive this transmission in error, please notify us
>     immediately by e-mail
>     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
>     the original message.
>     Your cooperation is appreciated.
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   


From shywolf9982 at gmail.com  Wed Jul 22 03:57:38 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 22 Jul 2009 09:57:38 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>
References: <h45fl0$fdt$1@ger.gmane.org>
	<20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>
Message-ID: <h46g81$lt2$1@ger.gmane.org>

On 07/22/2009 02:16 AM, Jean-Paul Calderone wrote:
>
> This will fix the problem in one very unlikely case, but leave it broken in
> the other somewhat more likely cases.  The problem is that some *other*
> process may have been started on your system and given the PID from the
> pidfile.  Your proposed change won't fix that case.
>

Duh, silly me.




From lvh at laurensvh.be  Wed Jul 22 09:13:47 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 22 Jul 2009 15:13:47 +0200
Subject: [Twisted-Python] An alternative Twisted GPS protocol
	implementation
In-Reply-To: <d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>
References: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
	<d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>
Message-ID: <cedc0c090907220613h2fa990c5g621167d11a9c69f5@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

As requested: a ticket! Woo.


http://twistedmatrix.com/trac/ticket/3926
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.6)

iEYEARECAAYFAkpnEFwACgkQT5v5zGkvKT7CrgCgqnlqYsh6yTMZUpscpcbTRnDc
3VEAn0FrBmxChcycDoRdrpalG4Dc+K8O
=//m0
-----END PGP SIGNATURE-----


From clay.gerrard at rackspace.com  Wed Jul 22 10:06:35 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 22 Jul 2009 09:06:35 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A66B2ED.3090503@arimaz.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
Message-ID: <31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>

In my experience "re-running the query" has not been sufficient.

All of the connections in the pool time out around the same time.

Using cp_reconnect just forces the "idle" connection (cursor) to be removed from the pool before raising the generic "ConnectionLost":

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

But when I go to re-run the query it's very unlikely that I'll get that same thread id again (and therefore a fresh connection).  More than likely I'll get another stale connection which will also get dropped.  Repeat ad infinitum

I'm fairly sure the right thing to do is to make adbapi.Connection objects aware of their created time, and allow adbapi.ConnectionPool.connect to potentially refresh "old" connections based on an optional kwarg when creating the connection pool:

"pool_recycle"

That's what I'm working on anyway...

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Gabriel Rossetti
Sent: Wednesday, July 22, 2009 1:34 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

Hello Garret,

yes, I finally did did something like that, I am currently testing the code.

Thanks,
Gabriel

Garret Heaton wrote:
> Instead of trying to keep the connection alive you can also just
> reconnect when necessary. Example code here:
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
>
> On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard
> <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
>
>     Regarding the original question:
>     "how to make mysql's idle timeouts shorter so that I can debug my
>     code?"
>
>     You should be able to do that in the mysql shell:
>     mysql> show variables like '%timeout%';
>     +----------------------------+-------+
>     | Variable_name              | Value |
>     +----------------------------+-------+
>     | connect_timeout            | 5     |
>     | delayed_insert_timeout     | 300   |
>     | innodb_lock_wait_timeout   | 50    |
>     | innodb_rollback_on_timeout | OFF   |
>     | interactive_timeout        | 600   |
>     | net_read_timeout           | 30    |
>     | net_write_timeout          | 60    |
>     | slave_net_timeout          | 3600  |
>     | table_lock_wait_timeout    | 50    |
>     | wait_timeout               | 600   |
>     +----------------------------+-------+
>     10 rows in set (0.00 sec)
>
>     > set global variable interactive_timeout = 5;
>
>     But in my experience MySQLdb makes the idle connection timeout
>     very difficult to debug effectively.
>
>     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
>     like sqlalchemy?
>
>     Clay Gerrard
>     Office: 210-312-3443
>     Mobile: 210-788-9431
>     -----Original Message-----
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Werner Thie
>     Sent: Tuesday, July 21, 2009 4:05 PM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
>     mysql - OT
>
>     Hi Gabriel
>
>     had the same problem, solved it by having keepalive() called in a
>     LoopingCall(), MySQL sitting at defaults timingwise.
>
>     DB_DRIVER = "MySQLdb"
>
>     USERDB_ARGS = {
>       'host': '',
>       'db': '',
>       'user': '',
>       'passwd': '',
>       'cp_reconnect': True
>     }
>
>     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
>     ka = task.LoopingCall(storekeeper.store.keepAlive)
>     ka.start(300)
>
>     class StoreKeeper(object):
>       def __init__(self, dbapiName, **params):
>         self.store = Store(dbapiName, **params)
>
>       def dbdisconn(self, reason):
>         print 'db disconnected for ', reason
>
>       def keepAlive(self):
>         d = self.store.runQuery('SELECT 1')
>         d.addErrback(self.dbdisconn)
>
>
>     #with store being something like:
>
>     class Store(object):
>       def __init__(self, dbapiName, **params):
>         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>         print self.__pool.__getstate__()
>         self.runOperation('SET autocommit = %s', 1)
>
>       def runQuery(self, query, *args):
>         d = self.__pool.runInteraction(self.mapQuery, query, args)
>         return d
>
>       def mapQuery(self, curs, query, *args):
>         try:
>           curs.execute(query, *args)
>         except adbapi.ConnectionLost:
>           print
>           print '++++++++++++ rerunning query'
>           print
>           curs.execute(query, *args)                    #simply resend
>     query, assuming cp_reconnect=True
>         result = curs.fetchall()
>         columns = [d[0] for d in curs.description]
>         return [dict(zip(columns, r)) for r in result]
>
>       def runOperation(self, query, *args):
>         d = self.__pool.runOperation(query, args)
>         return d
>
>       def runInteraction(self, fun, queries=(), args=()):
>         d = self.__pool.runInteraction(fun, queries, args)
>         return d
>
>
>     HTH, Werner
>
>     Gabriel Rossetti wrote:
>     > Hello everyone,
>     >
>     > I have been experiencing the ConnectionError with adbapi &
>     > cp_reconnect=True. I know that because of the cp_reconnect=True
>     param
>     > tha is reconnects and that the query is not re-run. I have
>     written some
>     > code that should re-run the query in that case (if I get a
>     Failure back
>     > because of a ConnectionError), but it doesn't seem to work. My
>     question
>     > is if anyone knows how to make mysql's idle timeouts shorter so
>     that I
>     > can debug my code? I searched google and the mysql site with no
>     luck.
>     >
>     > thank you,
>     > Gabriel
>     >
>     > _______________________________________________
>     > Twisted-Python mailing list
>     > Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     Confidentiality Notice: This e-mail message (including any attached or
>     embedded documents) is intended for the exclusive and confidential
>     use of the
>     individual or entity to which this message is addressed, and
>     unless otherwise
>     expressly indicated, is confidential and privileged information of
>     Rackspace.
>     Any dissemination, distribution or copying of the enclosed
>     material is prohibited.
>     If you receive this transmission in error, please notify us
>     immediately by e-mail
>     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
>     the original message.
>     Your cooperation is appreciated.
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace.
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message.
Your cooperation is appreciated.



From exarkun at divmod.com  Thu Jul 23 09:26:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Jul 2009 09:26:36 -0400
Subject: [Twisted-Python] Commit access
In-Reply-To: <ee08d1630907190934pbdce6b0me1abce3d9dd8040f@mail.gmail.com>
Message-ID: <20090723132636.2543.44365649.divmod.quotient.4688@henry.divmod.com>

On Sun, 19 Jul 2009 18:34:41 +0200, Jonathan Jacobs <jonathan+twisted at jsphere.com> wrote:
>Hello Twisted,
>
>I've been contributing to Twisted (jonathanj on the Trac instance, k4y on
>IRC) for around a year now.
>
>I'd be grateful for commit access to the Twisted repo and, as per glyph's
>suggestion, I'd like to formally request it.
>
>I'm not sure if I'm supposed to bow or not, so I'll just exit left.

Hi Jonathan,

This sounds great.  I'll talk to you on IRC about the details.

Jean-Paul


From vishalshetye at gmail.com  Thu Jul 23 11:39:53 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Thu, 23 Jul 2009 21:09:53 +0530
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
Message-ID: <6a2dc2340907230839v3820eba4vab24dc513894f5aa@mail.gmail.com>

> Hi,
>
> In response to the announcement of the Twisted Asynchronous Database Api
> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
> mention something I wrote.
>
> [Unfortunately, tada does not use threads correctly so it's likely to
> break. The author knows this and has added a warning to the module for
now.]
>
> A while back, I started messing around with making a standard, blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.
>
>     svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>     http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>
> laxdb is quite literally an async db-api interface and not a
> t.enterprise.adbapi style interface. In particular, it provides exactly
> the same API (but deferred) and it doesn't take over transaction
> management. It also doesn't wrongly call a cursor, "Transaction" ;-).
>
> I recently went back to laxdb and finished it off, also adding a
> connection pool implementation.
>
> Now, I haven't used laxdb in a real project and there are no unit tests
> but I think it's reasonably complete. It should work with any dbapi
> module that has threadsafety level 1 or higher, just like adbapi.
>
> If there's interest in this way of accessing a database then I would be
> happy to write tests etc, move it into Twisted and maintain it.
>
> Cheers, Matt

I guess there have not been any additions to this module in recent time.
I just tried to use it, sample code, actually a failure test, is as below
which does not actually do any query. Reactor is stopped without commit or
rollback.
This raises an exception in removeTrigger_BASE.
    exceptions.ValueError: list.remove(x): x not in list

I could fix it, in class WorkerThread, function _start has line
    self._shutdownTriggerId = reactor.addSystemEventTrigger('after',
'shutdown', self.shutdown)

self.shutdown is called by Connection.close() or reactor.stop(). In case of
second, reactor.stop, registered function, self.shutdown in this case,
should not do
    reactor.removeSystemEventTrigger(self._shutdownTriggerId)

However, this raises some doubts about overall code as there are no test
cases to prove the correctness.
Has anyone used this before? Can somebody provide pointers on what
scenarios/conditions should be tested?
laxdb is good match for what I want, interleaved calls and async interface
to db. Is there any alternative available?

[code]
from laxdb import ConnectionPool
from twisted.internet import reactor

pool = ConnectionPool("sqlite3", database='laxdbTest', timeout=5.0,
check_same_thread=False)

def connect(pool):
    d = pool.connect()
    d.addCallback(connected)

def connected(conn):
    curs = conn.cursor()
    reactor.stop()

reactor.callWhenRunning(connect, pool)
reactor.run()
[/code]

Regards,
vishal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090723/7844f470/attachment.htm 

From peter.westlake at pobox.com  Fri Jul 24 09:35:13 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 14:35:13 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
Message-ID: <1248442513.23282.1326608381@webmail.messagingengine.com>

Hello,

I'm having trouble with an AMP connection that doesn't fire
the Deferred returned by callRemote. The AMP command copies
files from the client (called a "worker" in the code below)
to a server ("controller"). It sends a chunk of text at a
time - 16K originally, but I tried smaller amounts too.
The server appends the text to a queue to be written;
it shouldn't take long, because it doesn't do the I/O
synchronously, just starts a thread.

What happens is that the client calls callRemote, but the
Deferred that callRemote returns is never fired. I know
the command reaches the server, because the client keeps
track of how many bytes have been sent successfully, and
the file on the server is bigger than that. I know that
the Deferred doesn't fire, because I can examine it using
a manhole and it has called = False.

There are no error messages in the log. That's consistent
with the Deferred not firing, because the error callback
(self.next_or_retry) would log a message if the remote
command failed.

So, what can possibly be happening?
And how can I find out?

All suggestions most gratefully received.

Peter.


Client-side code:

class ConnectionBuffer(object):
    """Class to store AMP commands and retry them after network outages.
    ...
    """

    def send(self, adv_arg, *a, **kw):
        if self.protocol:
            # call_d is here purely to make the Deferred accessible when
            debugging.
            self.call_d  = self.protocol.callRemote(*a,
            **kw).addBoth(self.next_or_retry, adv_arg)

    def connected(self, protocol):
        self.protocol = protocol
        self.send_next()

    def disconnected(self):
        self.protocol = None


Server:

class ControllerProtocol(amp.AMP):
    """Protocol used by the controller to communicate with a worker.
    ...
    """

    def logoutput(self, product, branch, site, job, action, number,
    data, stream):
        """Receive stdout or stderr from an action running on a
        worker."""
        actid = (product, branch, site, job, action)
        ac = self.factory.controller.actions.find(actid)
        ac.instances[number].logfile[stream].write(data)
        return {'status': True}
    commands.LogOutput.responder(logoutput)


From drew.smathers at gmail.com  Fri Jul 24 10:44:35 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 24 Jul 2009 10:44:35 -0400
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248442513.23282.1326608381@webmail.messagingengine.com>
References: <1248442513.23282.1326608381@webmail.messagingengine.com>
Message-ID: <368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>

On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com> wrote:
> Hello,
>
> I'm having trouble with an AMP connection that doesn't fire
> the Deferred returned by callRemote. The AMP command copies
> files from the client (called a "worker" in the code below)
> to a server ("controller"). It sends a chunk of text at a
> time - 16K originally, but I tried smaller amounts too.
> The server appends the text to a queue to be written;
> it shouldn't take long, because it doesn't do the I/O
> synchronously, just starts a thread.
>

"justs starts a thread"? Where are you starting a thread in the code
example you've posted?


> What happens is that the client calls callRemote, but the
> Deferred that callRemote returns is never fired. I know
> the command reaches the server, because the client keeps
> track of how many bytes have been sent successfully, and
> the file on the server is bigger than that. I know that
> the Deferred doesn't fire, because I can examine it using
> a manhole and it has called = False.
>
> There are no error messages in the log. That's consistent
> with the Deferred not firing, because the error callback
> (self.next_or_retry) would log a message if the remote
> command failed.
>
> So, what can possibly be happening?
> And how can I find out?
>
> All suggestions most gratefully received.
>


Please post a complete example; I don't see methods on client code
below such as send_next() or next_or_retry().  It's hard to help
without a complete example.  In general, though, if you're trying to
debug Deferreds you might try setting debugging with
defer.setDebugging(1).


> Peter.
>
>
> Client-side code:
>
> class ConnectionBuffer(object):
> ? ?"""Class to store AMP commands and retry them after network outages.
> ? ?...
> ? ?"""
>
> ? ?def send(self, adv_arg, *a, **kw):
> ? ? ? ?if self.protocol:
> ? ? ? ? ? ?# call_d is here purely to make the Deferred accessible when
> ? ? ? ? ? ?debugging.
> ? ? ? ? ? ?self.call_d ?= self.protocol.callRemote(*a,
> ? ? ? ? ? ?**kw).addBoth(self.next_or_retry, adv_arg)
>
> ? ?def connected(self, protocol):
> ? ? ? ?self.protocol = protocol
> ? ? ? ?self.send_next()
>
> ? ?def disconnected(self):
> ? ? ? ?self.protocol = None
>
>
> Server:
>
> class ControllerProtocol(amp.AMP):
> ? ?"""Protocol used by the controller to communicate with a worker.
> ? ?...
> ? ?"""
>
> ? ?def logoutput(self, product, branch, site, job, action, number,
> ? ?data, stream):
> ? ? ? ?"""Receive stdout or stderr from an action running on a
> ? ? ? ?worker."""
> ? ? ? ?actid = (product, branch, site, job, action)
> ? ? ? ?ac = self.factory.controller.actions.find(actid)
> ? ? ? ?ac.instances[number].logfile[stream].write(data)
> ? ? ? ?return {'status': True}
> ? ?commands.LogOutput.responder(logoutput)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From peter.westlake at pobox.com  Fri Jul 24 11:12:28 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 16:12:28 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>
References: <1248442513.23282.1326608381@webmail.messagingengine.com>
	<368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>
Message-ID: <1248448348.7691.1326625921@webmail.messagingengine.com>



On Fri, 24 Jul 2009 10:44 -0400, "Drew Smathers"
<drew.smathers at gmail.com> wrote:
> On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com>
> wrote:
> > Hello,
> >
> > I'm having trouble with an AMP connection that doesn't fire
> > the Deferred returned by callRemote. The AMP command copies
> > files from the client (called a "worker" in the code below)
> > to a server ("controller"). It sends a chunk of text at a
> > time - 16K originally, but I tried smaller amounts too.
> > The server appends the text to a queue to be written;
> > it shouldn't take long, because it doesn't do the I/O
> > synchronously, just starts a thread.
> >
> 
> "justs starts a thread"? Where are you starting a thread in the code
> example you've posted?

> Please post a complete example; I don't see methods on client code
> below such as send_next() or next_or_retry().  It's hard to help
> without a complete example.

Sorry - I was trying to avoid clogging everyone's inboxes with too
much code. So far I haven't been able to reproduce the bug in a
simple way. In the meantime, here's the code that starts the thread.
It's one of the very first bits of code I wrote with either Twisted
or Python, so it may do things in quite the wrong way. It serialises
writes to a file by storing requests in a queue, and it gets called
by the line

       ac.instances[number].logfile[stream].write(data)

in the command handler.


from twisted.internet import defer, threads
import os, errno

class FileMan(object):
    def __init__(self, filename):
        self.filename = filename
        self.queue = []
        self.started = False

    def check_file(self):
        self.started = os.path.exists(self.filename)
        return self.started

    def makedir(self):
        dirname = os.path.dirname(self.filename)
        if not os.path.isdir(dirname):
            os.makedirs(dirname)

    def add(self, op, *a, **kw):
        def getnext(result):
            del(self.queue[0])
            if len(self.queue) > 0:
                self.queue[0].callback('unused')
            return result

        d = defer.Deferred()
        d.addCallback(op, *a, **kw)
        d.addBoth(getnext)
        self.queue.append(d)
        if len(self.queue) == 1:
            d.callback('unused')
        return d

    def write(self, data, mode='a'):
        def do_write(result, filename, data):
            def write_in_thread(filename, data):
                f = open(filename, mode)
                try:
                    f.write(data)
                finally:
                    f.close()
                self.started = True
            d = threads.deferToThread(write_in_thread, filename, data)
            return d
        return self.add(do_write, self.filename, data)


>  In general, though, if you're trying to
> debug Deferreds you might try setting debugging with
> defer.setDebugging(1).

What kind of output does that produce? I did try it,
but didn't see anything out of the ordinary.
 
Peter.


> > Client-side code:
> >
> > class ConnectionBuffer(object):
> > ? ?"""Class to store AMP commands and retry them after network outages.
> > ? ?...
> > ? ?"""
> >
> > ? ?def send(self, adv_arg, *a, **kw):
> > ? ? ? ?if self.protocol:
> > ? ? ? ? ? ?# call_d is here purely to make the Deferred accessible when
> > ? ? ? ? ? ?debugging.
> > ? ? ? ? ? ?self.call_d ?= self.protocol.callRemote(*a,
> > ? ? ? ? ? ?**kw).addBoth(self.next_or_retry, adv_arg)
> >
> > ? ?def connected(self, protocol):
> > ? ? ? ?self.protocol = protocol
> > ? ? ? ?self.send_next()
> >
> > ? ?def disconnected(self):
> > ? ? ? ?self.protocol = None
> >
> >
> > Server:
> >
> > class ControllerProtocol(amp.AMP):
> > ? ?"""Protocol used by the controller to communicate with a worker.
> > ? ?...
> > ? ?"""
> >
> > ? ?def logoutput(self, product, branch, site, job, action, number,
> > ? ?data, stream):
> > ? ? ? ?"""Receive stdout or stderr from an action running on a
> > ? ? ? ?worker."""
> > ? ? ? ?actid = (product, branch, site, job, action)
> > ? ? ? ?ac = self.factory.controller.actions.find(actid)
> > ? ? ? ?ac.instances[number].logfile[stream].write(data)
> > ? ? ? ?return {'status': True}
> > ? ?commands.LogOutput.responder(logoutput)
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at divmod.com  Fri Jul 24 12:01:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Jul 2009 12:01:19 -0400
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248448348.7691.1326625921@webmail.messagingengine.com>
Message-ID: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>

On Fri, 24 Jul 2009 16:12:28 +0100, Peter Westlake <peter.westlake at pobox.com> wrote:
>
>
>On Fri, 24 Jul 2009 10:44 -0400, "Drew Smathers"
><drew.smathers at gmail.com> wrote:
>> On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com>
>> wrote:
>> > Hello,
>> >
>> > I'm having trouble with an AMP connection that doesn't fire
>> > the Deferred returned by callRemote. The AMP command copies
>> > files from the client (called a "worker" in the code below)
>> > to a server ("controller"). It sends a chunk of text at a
>> > time - 16K originally, but I tried smaller amounts too.
>> > The server appends the text to a queue to be written;
>> > it shouldn't take long, because it doesn't do the I/O
>> > synchronously, just starts a thread.
>> >
>>
>> "justs starts a thread"? Where are you starting a thread in the code
>> example you've posted?
>
>> Please post a complete example; I don't see methods on client code
>> below such as send_next() or next_or_retry().  It's hard to help
>> without a complete example.
>
>Sorry - I was trying to avoid clogging everyone's inboxes with too
>much code. So far I haven't been able to reproduce the bug in a
>simple way. In the meantime, here's the code that starts the thread.
>It's one of the very first bits of code I wrote with either Twisted
>or Python, so it may do things in quite the wrong way. It serialises
>writes to a file by storing requests in a queue, and it gets called
>by the line
>
>       ac.instances[number].logfile[stream].write(data)
>
>in the command handler.
>
>
>from twisted.internet import defer, threads
>import os, errno
>
>class FileMan(object):
>    def __init__(self, filename):
>        self.filename = filename
>        self.queue = []
>        self.started = False
>
>    def check_file(self):
>        self.started = os.path.exists(self.filename)
>        return self.started
>
>    def makedir(self):
>        dirname = os.path.dirname(self.filename)
>        if not os.path.isdir(dirname):
>            os.makedirs(dirname)
>
>    def add(self, op, *a, **kw):
>        def getnext(result):
>            del(self.queue[0])
>            if len(self.queue) > 0:
>                self.queue[0].callback('unused')
>            return result
>
>        d = defer.Deferred()
>        d.addCallback(op, *a, **kw)
>        d.addBoth(getnext)
>        self.queue.append(d)
>        if len(self.queue) == 1:
>            d.callback('unused')
>        return d
>
>    def write(self, data, mode='a'):
>        def do_write(result, filename, data):
>            def write_in_thread(filename, data):
>                f = open(filename, mode)
>                try:
>                    f.write(data)
>                finally:
>                    f.close()
>                self.started = True
>            d = threads.deferToThread(write_in_thread, filename, data)
>            return d
>        return self.add(do_write, self.filename, data)
>
>
>>  In general, though, if you're trying to
>> debug Deferreds you might try setting debugging with
>> defer.setDebugging(1).
>
>What kind of output does that produce? I did try it,
>but didn't see anything out of the ordinary.

It makes Deferreds keep track of the call stack when they are created and
when they are invoked.  This can be helpful tracking down Deferred failures
that don't otherwise identify themselves very well.  If you're not seeing
any failures being logged, then this probably won't help much, since there
won't be anything to increase the verbosity of. :)

Another thing to check out would be a network capture, to see if the server
is actually sending back a response.  If not, then you know you should look
at the server code more carefully.  If so, then the client code is probably
at fault.

Jean-Paul


From andrewfr_ice at yahoo.com  Fri Jul 24 13:22:52 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 24 Jul 2009 10:22:52 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
Message-ID: <718184.80659.qm@web34203.mail.mud.yahoo.com>


Hi Glyph:

Can do. Tell me how to submit a document patch.

Cheers,
Andrew

Message: 3
Date: Sun, 19 Jul 2009 12:59:22 -0400
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Simple Epoll Reactor question
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <d9047f780907190959k60c53022qb4d348ac886e2d80 at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Sun, Jul 19, 2009 at 12:08 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

The "choosing a reactor" document could definitely be made clearer;
please feel free to submit a doc patch that will help others with
this.


      


From peter.westlake at pobox.com  Fri Jul 24 13:43:55 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 18:43:55 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
Message-ID: <1248457435.32636.1326651287@webmail.messagingengine.com>

On Fri, 24 Jul 2009 12:01 -0400, "Jean-Paul Calderone"
<exarkun at divmod.com> wrote:
> On Fri, 24 Jul 2009 16:12:28 +0100, Peter Westlake
> <peter.westlake at pobox.com> wrote:

> >>  In general, though, if you're trying to debug Deferreds you might
> >>  try setting debugging with defer.setDebugging(1).
> >
> >What kind of output does that produce? I did try it, but didn't see
> >anything out of the ordinary.
>
> It makes Deferreds keep track of the call stack when they are created
> and when they are invoked.  This can be helpful tracking down
> Deferred failures that don't otherwise identify themselves very well.
> If you're not seeing any failures being logged, then this probably
> won't help much, since there won't be anything to increase the
> verbosity of. :)

That would explain it :-)

> Another thing to check out would be a network capture, to see if the
> server is actually sending back a response.  If not, then you know you
> should look at the server code more carefully.  If so, then the client
> code is probably at fault.

I tried that, and was somewhat overwhelmed by the amount of data!
But now I've found the python-pcapy package and I'm well on the
way to having a script that can match AMP commands and responses
and report any that don't match up. If it turns out to be useful,
I could post it, as long as my employers don't mind.

Thanks for the help,

Peter.


From glyph at twistedmatrix.com  Sat Jul 25 15:36:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Jul 2009 15:36:54 -0400
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
	<d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
Message-ID: <d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>

On Tue, Jul 14, 2009 at 3:59 AM, Jonathan Lange <jml at mumak.net> wrote:


> Also, unless you object, I'll try to send weekly emails on the status of
> the release until it's actually out.
>

So... this sounded like a great idea, but where are those emails?  :)  It's
been a bit more than a week, I think.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090725/debd8bd7/attachment.htm 

From jml at mumak.net  Sat Jul 25 19:37:26 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 26 Jul 2009 09:37:26 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
	<d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
	<d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>
Message-ID: <d06a5cd30907251637o598d3250x575770d5386ae50b@mail.gmail.com>

On Sun, Jul 26, 2009 at 5:36 AM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> On Tue, Jul 14, 2009 at 3:59 AM, Jonathan Lange <jml at mumak.net> wrote:
>
>>
>> Also, unless you object, I'll try to send weekly emails on the status of
>> the release until it's actually out.
>
> So... this sounded like a great idea, but where are those emails?? :)? It's
> been a bit more than a week, I think.
>

Emphasis on 'try'. :)

Thank you very much for the gentle nudge, thought. Something will happen soon.

jml


From exarkun at twistedmatrix.com  Sun Jul 26 00:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1248581112.68.339078527@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090726/3d60bcbc/attachment.htm 

From exarkun at divmod.com  Mon Jul 27 09:07:08 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Jul 2009 09:07:08 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>
Message-ID: <20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>

On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
> [snip]
>>
>>I really don't know how that could be specific to the twisted python
>>list. I notice in the referenced message, Mark Sapiro says that
>>rebuilding the archives from the mbox file generated correct threading
>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>it generated the same incorrect bad threading.
>>
>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>already upstream?
>>
>>James
>
>Thanks for testing this James.  Before I send this back to the mailman
>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1 mailman
>installation you rebuilt on?  ie. is there any custom configuration
>specific to this list that could be causing this odd behaviour (instead
>of a bug with the ubuntu version)?  [please excuse my ignorance if this
>question doesn't make sense - I know nothing about mailman...I just want
>to stop hijacking threads when I post here]
>

I was reminded of this thread when I came across what appears to be the same
bug on the Tahoe list:

  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html

Notice multiple posts in threads they don't look like they belong to, as
well as many threads which have nonsensical levels of indentation.

I'm not sure if anyone ever answered your question about twisted-python's
mailman installation being "stock" or not.  If not, then I think I can
confirm that it is.  There is also no configuration that would alter this
behavior, as far as I know.  We've probably set a few options via the admin
interface, but I don't think any of those should affect this behavior.

Jean-Paul


From vishalshetye at gmail.com  Mon Jul 27 10:34:19 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Mon, 27 Jul 2009 20:04:19 +0530
Subject: [Twisted-Python] License for code in twisted's sandbox?
Message-ID: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>

Hi,
I had posted a query about laxdb on this list
http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
laxdb code is in sandbox and is not released with twisted. The file itself
does not have any license.
Can it be used assuming the same license as that of twisted.

-- 
vishal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090727/27a34ba3/attachment.htm 

From grickert at coldstorage.com  Mon Jul 27 10:54:20 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 27 Jul 2009 10:54:20 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>
	<20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>Sent: Monday, July 27, 2009 9:07 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>> [snip]
>>>
>>>I really don't know how that could be specific to the twisted python
>>>list. I notice in the referenced message, Mark Sapiro says that
>>>rebuilding the archives from the mbox file generated correct
threading
>>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>>it generated the same incorrect bad threading.
>>>
>>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>>already upstream?
>>>
>>>James
>>
>>Thanks for testing this James.  Before I send this back to the mailman
>>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1
mailman
>>installation you rebuilt on?  ie. is there any custom configuration
>>specific to this list that could be causing this odd behaviour
(instead
>>of a bug with the ubuntu version)?  [please excuse my ignorance if
this
>>question doesn't make sense - I know nothing about mailman...I just
>want
>>to stop hijacking threads when I post here]
>>
>
>I was reminded of this thread when I came across what appears to be the
>same
>bug on the Tahoe list:
>
>  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html
>
>Notice multiple posts in threads they don't look like they belong to,
as
>well as many threads which have nonsensical levels of indentation.
>
>I'm not sure if anyone ever answered your question about twisted-
>python's
>mailman installation being "stock" or not.  If not, then I think I can
>confirm that it is.  There is also no configuration that would alter
>this
>behavior, as far as I know.  We've probably set a few options via the
>admin
>interface, but I don't think any of those should affect this behavior.
>
>Jean-Paul

Thanks for the reply, Jean-Paul (until now, nobody did answer my
question).
...I'll forward this back to the mailman list - maybe they can determine
if it's an Ubuntu-specific issue.

Regards,
	Gerrat



From odie5533 at gmail.com  Mon Jul 27 11:18:07 2009
From: odie5533 at gmail.com (David Bern)
Date: Mon, 27 Jul 2009 10:18:07 -0500
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <718184.80659.qm@web34203.mail.mud.yahoo.com>
References: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
	<718184.80659.qm@web34203.mail.mud.yahoo.com>
Message-ID: <c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>

On Fri, Jul 24, 2009 at 12:22 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:
>
> Hi Glyph:
>
> Can do. Tell me how to submit a document patch.
>
> Cheers,
> Andrew
>

Browse the SVN for the doc in question
<http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml>
and at the bottom is a download link
<http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml?format=raw>.
Make a backup of the document, modify it to your liking, then at a
console run
>diff -u choosing-reactor_orig.xhtml choosing-reactor.xhtml > choosing-reactor.patch
Then submit the patch with a New Ticket to the Twisted Trac site
<http://twistedmatrix.com/trac/newticket>.

-- 
Regards,
David Bern


From esteve at sindominio.net  Mon Jul 27 13:55:21 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Mon, 27 Jul 2009 19:55:21 +0200 (CEST)
Subject: [Twisted-Python] PPA repo
Message-ID: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>

Hi all,

could any of the admins of the twisted-dev Launchpad team create a PPA? I'd do
it myself, but I don't have permission (AFAIK, only admins do). We're
currently providing packages for Ubuntu Hardy from Fluidinfo's PPA (see ticket
#3102 - http://twistedmatrix.com/trac/ticket/3102), but I think it's more
appropriate to host them at Twisted's.

Another reason for that is that we've been building some custom packages for
Twisted at Fluidinfo, which contain backported stuff from trunk and I'd rather
keep them separated (the "official" ones and Fluidinfo's). These custom
packages currently live in one of my PPAs, but I'd like to move them to
Fluidinfo's.

Thanks!





From grickert at coldstorage.com  Mon Jul 27 14:53:56 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 27 Jul 2009 14:53:56 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com><20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0479BB55@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Gerrat Rickert
>Sent: Monday, July 27, 2009 10:54 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>>-----Original Message-----
>>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>>Sent: Monday, July 27, 2009 9:07 AM
>>To: Twisted general discussion
>>Subject: Re: [Twisted-Python] (Mis)indented Posts
>>
>>On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert
>><grickert at coldstorage.com> wrote:
>>> [snip]
>>>>
>>>>I really don't know how that could be specific to the twisted python
>>>>list. I notice in the referenced message, Mark Sapiro says that
>>>>rebuilding the archives from the mbox file generated correct
>threading
>>>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>>>it generated the same incorrect bad threading.
>>>>
>>>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>>>already upstream?
>>>>
>>>>James
>>>
>>>Thanks for testing this James.  Before I send this back to the
mailman
>>>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1
>mailman
>>>installation you rebuilt on?  ie. is there any custom configuration
>>>specific to this list that could be causing this odd behaviour
>(instead
>>>of a bug with the ubuntu version)?  [please excuse my ignorance if
>this
>>>question doesn't make sense - I know nothing about mailman...I just
>>want
>>>to stop hijacking threads when I post here]
>>>
>>
>>I was reminded of this thread when I came across what appears to be
the
>>same
>>bug on the Tahoe list:
>>
>>  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html
>>
>>Notice multiple posts in threads they don't look like they belong to,
>as
>>well as many threads which have nonsensical levels of indentation.
>>
>>I'm not sure if anyone ever answered your question about twisted-
>>python's
>>mailman installation being "stock" or not.  If not, then I think I can
>>confirm that it is.  There is also no configuration that would alter
>>this
>>behavior, as far as I know.  We've probably set a few options via the
>>admin
>>interface, but I don't think any of those should affect this behavior.
>>
>>Jean-Paul
>
>Thanks for the reply, Jean-Paul (until now, nobody did answer my
>question).
>...I'll forward this back to the mailman list - maybe they can
determine
>if it's an Ubuntu-specific issue.
>
>Regards,
>	Gerrat


...and now (finally), we get to the heart of the issue:
as explained by Mark Sapiro, on the mailman list:
...
>Ubuntu is based on Debian.
>
>I have just confirmed by testing that this problem is caused by the
Debian Mailman patch "30_pipermail_threads.patch".
>
>This patch can be found by following the links from
<http://patch-tracking.debian.net/package/mailman> (I don't want to give
a more specific URL >because the URLs below this level are unstable).
>
>Thus, the problem potentially exists in all Debian/Ubuntu Mailman
packages. The patch attempts to fix Debian bug  #167758
<http://bugs.debian.org/cgi->bin/bugreport.cgi?bug=167758>, and it may
do that, but it clearly breaks this.
>
>I'll try to report this to Debian.


Thanks all for your help - hopefully this will be resolved in the near
future.

Gerrat


From glyph at twistedmatrix.com  Mon Jul 27 20:41:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 20:41:42 -0400
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>
References: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>
Message-ID: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>

On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:

> I had posted a query about laxdb on this list
> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
> laxdb code is in sandbox and is not released with twisted. The file itself
> does not have any license.
> Can it be used assuming the same license as that of twisted.
>

In general you can assume code in Twisted's sandbox is released under the
same license as Twisted itself.  It's safest to check with the author
personally (in this case, mg) in case there is some reason for an exception.

However, I would strongly discourage you from using this code in any
capacity other than trying to contribute patches which add it (and by "it" I
mean tested, working versions of it) to some existing twisted module, in
this case adbapi.  As it says, it is "experimental, untested, incomplete",
it hasn't been updated in 4 years, and I assume it is totally unsupported,
both by its author and by the Twisted team in general.  If it breaks, you
can't even keep both pieces, you have to dispose of them as toxic waste.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090727/f07b541c/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul 27 21:07:19 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 21:07:19 -0400
Subject: [Twisted-Python] PPA repo
In-Reply-To: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
References: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
Message-ID: <d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>

On Mon, Jul 27, 2009 at 1:55 PM, Esteve Fernandez <esteve at sindominio.net>wrote:


> could any of the admins of the twisted-dev Launchpad team create a PPA? I'd
> do
> it myself, but I don't have permission (AFAIK, only admins do). We're
> currently providing packages for Ubuntu Hardy from Fluidinfo's PPA (see
> ticket
> #3102 - http://twistedmatrix.com/trac/ticket/3102), but I think it's more
> appropriate to host them at Twisted's.
>

I've now created the PPA (and as a result, apparently blocked any possible
renaming of the team?  what's up with that?).

However!  Please note that people may already have their sources.list
pointing at fluidinfo.  Is there any way to notify them that the URLs have
changed, and they're going to start getting unofficial patches if they
don't?

Also, as per the ticket, <http://twistedmatrix.com/trac/wiki/Downloads>
still points at the fluidinfo PPA.  This also needs to be updated before we
change the "official" location.  Esteve, do you have wiki edit permission?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090727/600eeae8/attachment.htm 

From glyph at twistedmatrix.com  Mon Jul 27 21:20:40 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 21:20:40 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>
References: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
	<718184.80659.qm@web34203.mail.mud.yahoo.com>
	<c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>
Message-ID: <d9047f780907271820r3b78e5d6j2297075ebc696363@mail.gmail.com>

On Mon, Jul 27, 2009 at 11:18 AM, David Bern <odie5533 at gmail.com> wrote:

> On Fri, Jul 24, 2009 at 12:22 PM, Andrew Francis<andrewfr_ice at yahoo.com>
> wrote:
>


> Can do. Tell me how to submit a document patch.
>

David, thanks for trying to answer, but you described a few of the
particulars in a slightly non-standard way and you skipped a few steps.

The process for editing code and submitting patches is documented in detail
here: http://twistedmatrix.com/trac/wiki/TwistedDevelopment

I'll attach a few additional notes on editing docs.

<
> http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml
> >
> and at the bottom is a download link
> <
> http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml?format=raw
> >.


Instead of doing a diff on a single document like this ? it's very hard to
test to make sure that you can actually generate the docs that way ? you
should make a checkout of Twisted, like this:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted/trunk
~/my-code-dir/Twisted/trunk

 This ensures you have the most up-to-date copy of Twisted.  You only have
to download it once; in the future you can just do

cd ~/my-code-dir/Twisted/trunk
svn update

Then, edit the document (or documents) that you want to change under doc/.
In order to make sure your changes are complete and correct, as well as to
preview what they will look like on the website, you need to run 'lore' on
them.  In this specific case, you can do

cd ~/my-code-dir/Twisted/trunk/doc/core/howto
lore choosing-reactor.xhtml

Then you can look at "choosing-reactor.html" (notice the input is ".xhtml"
and the output is ".html") in the web browser of your choice.

Please note that lore is rather picky.  You *can't* do 'lore
my-code-dir/Twisted/.../howto/choosing-reactor.xhtml' unless you know how to
set up lore's environment properly; it looks for certain things in its
current directory which are only present in the 'howto' directory.

Make a backup of the document, modify it to your liking, then at a
> console run
> >diff -u choosing-reactor_orig.xhtml choosing-reactor.xhtml >
> choosing-reactor.patch


In order to streamline the process of getting the diff accepted, please diff
it from the root of the repository.  In the case of more complex patches,
this helps to avoid forgetting to include things; it also allows the
reviewer to apply your patch more easily without inspecting it or manually
specifying all the names of the files to be patched.  Given the directory
structure I described above, this would be:

cd ~/my-code-dir/Twisted/trunk
svn diff > choosing-reactor.patch

Then submit the patch for review as described above.

Thanks a lot for your interest in contributing!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090727/d68cba45/attachment.htm 

From exarkun at divmod.com  Mon Jul 27 22:35:04 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Jul 2009 22:35:04 -0400
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>
Message-ID: <20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>

On Mon, 27 Jul 2009 20:41:42 -0400, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:
>
>> I had posted a query about laxdb on this list
>> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
>> laxdb code is in sandbox and is not released with twisted. The file itself
>> does not have any license.
>> Can it be used assuming the same license as that of twisted.
>>
>
>In general you can assume code in Twisted's sandbox is released under the
>same license as Twisted itself.

You can assume it, but it'd be safer to read the license file :)

    http://twistedmatrix.com/trac/browser/sandbox/LICENSE

>It's safest to check with the author personally (in this case, mg) in case
>there is some reason for an exception.

So you definitely should do this.

>
>However, I would strongly discourage you from using this code in any
>capacity other than trying to contribute patches which add it (and by "it" I
>mean tested, working versions of it) to some existing twisted module, in
>this case adbapi.  As it says, it is "experimental, untested, incomplete",
>it hasn't been updated in 4 years, and I assume it is totally unsupported,
>both by its author and by the Twisted team in general.  If it breaks, you
>can't even keep both pieces, you have to dispose of them as toxic waste.
>

That's all still excellent advice.

Jean-Paul


From vishalshetye at gmail.com  Tue Jul 28 02:11:24 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Tue, 28 Jul 2009 11:41:24 +0530
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>
References: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>
	<20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>
Message-ID: <6a2dc2340907272311v741e748aq156b6fc1d07e44d2@mail.gmail.com>

On Tue, Jul 28, 2009 at 8:05 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Mon, 27 Jul 2009 20:41:42 -0400, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> >On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:
> >
> >> I had posted a query about laxdb on this list
> >> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
> >> laxdb code is in sandbox and is not released with twisted. The file itself
> >> does not have any license.
> >> Can it be used assuming the same license as that of twisted.
> >>
> >
> >In general you can assume code in Twisted's sandbox is released under the
> >same license as Twisted itself.
>
> You can assume it, but it'd be safer to read the license file :)
>
> ? ?http://twistedmatrix.com/trac/browser/sandbox/LICENSE
>
> >It's safest to check with the author personally (in this case, mg) in case
> >there is some reason for an exception.
>
> So you definitely should do this.
>
> >
> >However, I would strongly discourage you from using this code in any
> >capacity other than trying to contribute patches which add it (and by "it" I
> >mean tested, working versions of it) to some existing twisted module, in
> >this case adbapi. ?As it says, it is "experimental, untested, incomplete",
> >it hasn't been updated in 4 years, and I assume it is totally unsupported,
> >both by its author and by the Twisted team in general. ?If it breaks, you
> >can't even keep both pieces, you have to dispose of them as toxic waste.
> >
>
> That's all still excellent advice.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Thanks, I will check with the author.

I assume License file for sandbox warns against use of experimental,
untested code but it still allows one to use it at his own risk :)
Regarding contributing patches; I am not very much sure about what
scenarios should be tested, that is exactly what I tried to ask in my
post that I referred to here.
Anyways, if someone guides me as to what should be tested, I will be
more than happy to contribute.
I am not sure though, whether Laxdb, which has completely different
api, can be added as patch to existing adbapi.
--
vishal


From esteve at sindominio.net  Tue Jul 28 06:17:32 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Tue, 28 Jul 2009 12:17:32 +0200 (CEST)
Subject: [Twisted-Python] PPA repo
In-Reply-To: <d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>
References: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
	<d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>
Message-ID: <8dd819d99342e77d16fa4a0601706b29.squirrel@webmail.sindominio.net>

> On Mon, Jul 27, 2009 at 1:55 PM, Esteve Fernandez
> <esteve at sindominio.net>wrote:
> I've now created the PPA (and as a result, apparently blocked any possible
> renaming of the team?  what's up with that?).

Thanks! I've already uploaded a set of packages.

> However!  Please note that people may already have their sources.list
> pointing at fluidinfo.  Is there any way to notify them that the URLs have
> changed, and they're going to start getting unofficial patches if they
> don't?

And, to add insult to injury, I made a mistake in Fluidinfo's packages (always
fail publicly! :-)), I forgot to add a ~ suffix (e.g. ~ppaX) and I'm not sure
if they'll upgrade cleanly to the official ones. Anyway, I fixed that in the
packages uploaded to Twisted's PPA, although those who are using the previous
ones should downgrade to 8.2.0-2~ppa1~hardy1 or remove them completely and
reinstall the ones from Twisted's PPA.

> Also, as per the ticket, <http://twistedmatrix.com/trac/wiki/Downloads>
> still points at the fluidinfo PPA.  This also needs to be updated before we
> change the "official" location.  Esteve, do you have wiki edit permission?

No, I don't. If you don't mind, I'd like to add a note telling users to use
Fluidinfo's PPA if they want to grab packages with backported stuff (right now
they mainly contain fixes for Twisted.web from trunk), but which are
completely unofficial and subject to breakage.

Cheers.



From kevin.horn at gmail.com  Wed Jul 29 01:54:20 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 00:54:20 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
Message-ID: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>

I was digging through the Twisted IMAP code tonight and I noticed something
puzzling...

PLAINAuthenticator.challengeResponse() uses the following statement to send
auth credentials to the server

        return '%s\0%s\0' % (self.user, secret)

which would give auth credentials of the form:

        authid<NUL>password<NUL>

        (where <NUL> is the NUL character)

However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
say that credentials should be passed this way:

        [authzid]<NUL>authnid<NUL>password

        (where <NUL> is the NUL character and [authzid] is optional)

Now even if one was to leave the authzid out of the equation, you would end
up with something like this:

        <NUL>authnid<NUL>password

and the version Twisted's IMAP code uses appears to be invalid.

Am I crazy?
Am I missing something?
Is it just way too late and I should put the RFCs down and back away slowly?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/881af7b5/attachment.htm 

From exarkun at divmod.com  Wed Jul 29 07:29:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Jul 2009 07:29:33 -0400
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
Message-ID: <20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>

On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>I was digging through the Twisted IMAP code tonight and I noticed something
>puzzling...
>
>PLAINAuthenticator.challengeResponse() uses the following statement to send
>auth credentials to the server
>
>        return '%s\0%s\0' % (self.user, secret)
>
>which would give auth credentials of the form:
>
>        authid<NUL>password<NUL>
>
>        (where <NUL> is the NUL character)
>
>However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
>say that credentials should be passed this way:
>
>        [authzid]<NUL>authnid<NUL>password
>
>        (where <NUL> is the NUL character and [authzid] is optional)
>
>Now even if one was to leave the authzid out of the equation, you would end
>up with something like this:
>
>        <NUL>authnid<NUL>password
>
>and the version Twisted's IMAP code uses appears to be invalid.
>
>Am I crazy?
>Am I missing something?
>Is it just way too late and I should put the RFCs down and back away slowly?

My early morning reading of the RFC agrees with yours.  Someone else brought
this up a long time ago, I think, but never pointed out the RFC.

Can you file a ticket?

Jean-Paul


From kevin.horn at gmail.com  Wed Jul 29 11:51:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 10:51:01 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
Message-ID: <562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>

On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
> >I was digging through the Twisted IMAP code tonight and I noticed
> something
> >puzzling...
> >
> >PLAINAuthenticator.challengeResponse() uses the following statement to
> send
> >auth credentials to the server
> >
> >        return '%s\0%s\0' % (self.user, secret)
> >
> >which would give auth credentials of the form:
> >
> >        authid<NUL>password<NUL>
> >
> >        (where <NUL> is the NUL character)
> >
> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
> >say that credentials should be passed this way:
> >
> >        [authzid]<NUL>authnid<NUL>password
> >
> >        (where <NUL> is the NUL character and [authzid] is optional)
> >
> >Now even if one was to leave the authzid out of the equation, you would
> end
> >up with something like this:
> >
> >        <NUL>authnid<NUL>password
> >
> >and the version Twisted's IMAP code uses appears to be invalid.
> >
> >Am I crazy?
> >Am I missing something?
> >Is it just way too late and I should put the RFCs down and back away
> slowly?
>
> My early morning reading of the RFC agrees with yours.  Someone else
> brought
> this up a long time ago, I think, but never pointed out the RFC.
>
> Can you file a ticket?
>
> Jean-Paul
>
>

At least I'm not crazy... :)

Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939

also added a note in the ticket that PLAINCredentials may need to be
modified to match

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/c73a88f6/attachment.htm 

From kevin.horn at gmail.com  Wed Jul 29 12:03:19 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 11:03:19 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
Message-ID: <562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>

On Wed, Jul 29, 2009 at 10:51 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
>> wrote:
>> >I was digging through the Twisted IMAP code tonight and I noticed
>> something
>> >puzzling...
>> >
>> >PLAINAuthenticator.challengeResponse() uses the following statement to
>> send
>> >auth credentials to the server
>> >
>> >        return '%s\0%s\0' % (self.user, secret)
>> >
>> >which would give auth credentials of the form:
>> >
>> >        authid<NUL>password<NUL>
>> >
>> >        (where <NUL> is the NUL character)
>> >
>> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
>> >say that credentials should be passed this way:
>> >
>> >        [authzid]<NUL>authnid<NUL>password
>> >
>> >        (where <NUL> is the NUL character and [authzid] is optional)
>> >
>> >Now even if one was to leave the authzid out of the equation, you would
>> end
>> >up with something like this:
>> >
>> >        <NUL>authnid<NUL>password
>> >
>> >and the version Twisted's IMAP code uses appears to be invalid.
>> >
>> >Am I crazy?
>> >Am I missing something?
>> >Is it just way too late and I should put the RFCs down and back away
>> slowly?
>>
>> My early morning reading of the RFC agrees with yours.  Someone else
>> brought
>> this up a long time ago, I think, but never pointed out the RFC.
>>
>> Can you file a ticket?
>>
>> Jean-Paul
>>
>>
>
> At least I'm not crazy... :)
>
> Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939
>
> also added a note in the ticket that PLAINCredentials may need to be
> modified to match
>
> Kevin Horn
>
>
>
FYI, attached a patch to the ticket. I haven't really tested it, but if
someone could take a look and let me know what they think I'd appreciate it.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/41d2c82a/attachment.htm 

From kevin.horn at gmail.com  Wed Jul 29 12:55:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 11:55:54 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
	<562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
Message-ID: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>

On Wed, Jul 29, 2009 at 11:03 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Jul 29, 2009 at 10:51 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>>
>>> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
>>> wrote:
>>> >I was digging through the Twisted IMAP code tonight and I noticed
>>> something
>>> >puzzling...
>>> >
>>> >PLAINAuthenticator.challengeResponse() uses the following statement to
>>> send
>>> >auth credentials to the server
>>> >
>>> >        return '%s\0%s\0' % (self.user, secret)
>>> >
>>> >which would give auth credentials of the form:
>>> >
>>> >        authid<NUL>password<NUL>
>>> >
>>> >        (where <NUL> is the NUL character)
>>> >
>>> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL
>>> mechanism),
>>> >say that credentials should be passed this way:
>>> >
>>> >        [authzid]<NUL>authnid<NUL>password
>>> >
>>> >        (where <NUL> is the NUL character and [authzid] is optional)
>>> >
>>> >Now even if one was to leave the authzid out of the equation, you would
>>> end
>>> >up with something like this:
>>> >
>>> >        <NUL>authnid<NUL>password
>>> >
>>> >and the version Twisted's IMAP code uses appears to be invalid.
>>> >
>>> >Am I crazy?
>>> >Am I missing something?
>>> >Is it just way too late and I should put the RFCs down and back away
>>> slowly?
>>>
>>> My early morning reading of the RFC agrees with yours.  Someone else
>>> brought
>>> this up a long time ago, I think, but never pointed out the RFC.
>>>
>>> Can you file a ticket?
>>>
>>> Jean-Paul
>>>
>>>
>>
>> At least I'm not crazy... :)
>>
>> Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939
>>
>> also added a note in the ticket that PLAINCredentials may need to be
>> modified to match
>>
>> Kevin Horn
>>
>>
>>
> FYI, attached a patch to the ticket. I haven't really tested it, but if
> someone could take a look and let me know what they think I'd appreciate it.
>
> Kevin Horn
>

Can anyone tell me what the recommended way to run the twisted test suite
against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
just get a bunch of DeprecationWarnings and then a stack trace complaining
about not being able to remove my
_trial_temp directory...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/1c5bda82/attachment.htm 

From exarkun at divmod.com  Wed Jul 29 13:07:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Jul 2009 13:07:06 -0400
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
Message-ID: <20090729170706.11822.2123972461.divmod.quotient.366@henry.divmod.com>

On Wed, 29 Jul 2009 11:55:54 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
> [snip]
>
>Can anyone tell me what the recommended way to run the twisted test suite
>against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
>just get a bunch of DeprecationWarnings and then a stack trace complaining
>about not being able to remove my
>_trial_temp directory...

You're close, I think.  Unfortunately, a recent change to trial to make its
temporary directory feature safer has some inconvenient interaction with
state left behind by trial invocations made prior to that change.

Specifically, trial will no longer delete the directory it intends to use as
the temporary working directory (_trial_temp by default) unless it finds a
special marker inside it.  This makes it less likely that a user will delete
a directory they care about by accident.

If you just delete your _trial_temp directory, the problem should go away.
Trial will create the new one such that it recognizes it and will delete it
on its own.

Jean-Paul


From kevin.horn at gmail.com  Wed Jul 29 13:10:53 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 12:10:53 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
	<562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
	<562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
Message-ID: <562bcc10907291010i3a789818o7fe42eb3b5c65df2@mail.gmail.com>

On Wed, Jul 29, 2009 at 11:55 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

>
> Can anyone tell me what the recommended way to run the twisted test suite
> against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
> just get a bunch of DeprecationWarnings and then a stack trace complaining
> about not being able to remove my
> _trial_temp directory...
>
> Kevin Horn
>

Doh!  Forgot to run 'setup.py develop'...

OK, tests have been run, ticket updated.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/9ec791c5/attachment.htm 

From lvh at laurensvh.be  Wed Jul 29 18:08:24 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 00:08:24 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request for
	comments/feedback
Message-ID: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!


Most of you might remember that I was working on a twisted generic
positioning (GPS and things like it) framework, and here's a
preliminary status report. First of all, we've moved from
twisted.protocols.positioning to twisted.positioning. Yay! Seriously
though: work is mostly coming along nicely, and a serious patch for
separate review is probably only a few days' work away.

For those interested, the ticket is here:
http://twistedmatrix.com/trac/ticket/3926
And you can check out work in progress from launchpad:
https://code.launchpad.net/~lvh/twisted/positioning

As you might remember, we (thanks to the adhoc code reviews from
glyph, tazle, dash andexarkun) decided on an implementation slightly
different from the original one, using:
    - an NMEAReceiver class, which *only* does the receiving bit and
is perfectly stateless: this does things like unpacking the sentence
and checking the checksum
    - an IPositioningReceiver (now renamed IPositioningProvider, but
I'm not sure that's the right name yet) interface that has a bunch of
*sane* callbacks -- ones you actually want instead of ones that are
directly a consequence of NMEA being a steaming pile of dung
    - an NMEAAdapter that would adapt the receiver and keep as much
state as necessary internally to produce the meaningful callbacks as
defined in the interface

I'm having a bit of trouble implementing this this way, and I'd love
to hear your comments or suggestions on the topic.

Here's the code right now: http://bit.ly/1azA5q
The interface lives in this file: http://bit.ly/3wWL2c

I originally thought that the NMEAAdapter (which adapts an
NMEAReceiver to the  IPositioningReceiver interface) was really an
adapter in the twisted.python.components sense of the word, so that
you could do something like  PositioningReceiver(NMEAReceiver()) and
you'd get and NMEAAdapter object, as described in the Twisted
components howto.

The problem is attaching the method stubs in NMEAReceiver (nmea_GPGGA,
nmea_GPRMC, nmea_GPGSV) to the methods in the NMEAAdapter that
actually interpret these sentences. Ordinarily, you'd subclass that
class to override those stubs. How do you feel this should be done
while keeping the adapter? Should we keep the adapter at all?

Of course, I could do ugly things in the adapters' __init__ like:

def __init__(self, receiver):
   receiver.nmea_GPGGA = self.nmea_GPGGA
   receiver.nmea_GPRMC = self.nmea_GPRMC
   receiver.nmea_GPGSV = self.nmea_GPGSV

But that looks like a really bad idea: it's like I'm subverting
inheritance. Instead, I'm currently doing this by subclassing the
receiver (thanks to exarkun for this suggestion):

class NMEAAdapter(NMEAReceiver):

This fixes the method stubs being correctly assigned (I suppose the
correct term would be overriding, through plain old inheritance). The
problem is that neither the interface nor components/adapters are
involved in any way, so I feel like I'm missing something important.


Thanks for reading
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.7)

iEYEARECAAYFAkpwyB4ACgkQT5v5zGkvKT5zPwCbB9IXwaUhP4mr33961ifG7Q92
exMAoLMh5pMXgBT0Q6kvkppCQCWJ26eZ
=9Rfs
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Wed Jul 29 18:56:29 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jul 2009 18:56:29 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>
References: <1090717131439.63148F-100000@Ives.egh.com>
	<1248139636.19310.306.camel@pintsize>
	<d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>
Message-ID: <d9047f780907291556w582fefhae1a1a2374cb498c@mail.gmail.com>

On Mon, Jul 20, 2009 at 9:40 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Mon, Jul 20, 2009 at 9:27 PM, Itamar Shtull-Trauring <
> itamar at itamarst.org> wrote:
>
>> I asked, and ITA seems willing to provide a conference room or two with
>> Internet for sprinters. I will try for official signoff given more
>> details like dates and # of people.
>
>
> Great.  Thanks for setting this up.
>

Any progress on this?  Is there an official number of people yet?

For what it's worth, two people thus far (Jim Fulton and David Sturgis) have
told me that it would be a lot easier to make this if it extended over a
weekend, as it would be easier to attend without taking time off of work.  I
suspect there may be others for whom this is true.  I realize that many
international participants can take *less* time off work by traveling on the
weekend.

But, as Jonathan Lange put it in his July 14th email, "as of Friday, July
17th, the date & city will be set in concrete, even if I can't attend".  Has
the concrete dried yet?  Should we try to extend it over a weekend, or
should we just schedule another sprint before or after?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/f0e46c8f/attachment-0001.htm 

From mike at mv3d.com  Wed Jul 29 20:18:32 2009
From: mike at mv3d.com (Michael Handverger)
Date: Wed, 29 Jul 2009 20:18:32 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d9047f780907291556w582fefhae1a1a2374cb498c@mail.gmail.com>
Message-ID: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>


----- "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:
> For what it's worth, two people thus far (Jim Fulton and David Sturgis) have told me that it 
> would be a lot easier to make this if it extended over a weekend, as it would be easier to 
> attend without taking time off of work.  I suspect there may be others for whom this is true.  I 
> realize that many international participants can take less time off work by traveling on the 
> weekend.

Add me to the list of those who can only make it on a weekend as well.

Mike


From listsin at integrateddevcorp.com  Wed Jul 29 20:43:00 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Wed, 29 Jul 2009 20:43:00 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>
References: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>
Message-ID: <98CFECB1-517B-4017-A9AF-30C6797D4ECE@integrateddevcorp.com>

On Jul 29, 2009, at 8:18 PM, Michael Handverger wrote:

>
> ----- "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:
>> For what it's worth, two people thus far (Jim Fulton and David  
>> Sturgis) have told me that it
>> would be a lot easier to make this if it extended over a weekend,  
>> as it would be easier to
>> attend without taking time off of work.  I suspect there may be  
>> others for whom this is true.  I
>> realize that many international participants can take less time off  
>> work by traveling on the
>> weekend.
>
> Add me to the list of those who can only make it on a weekend as well.

Weekend would be better for me, too.  I could do Thurs -> Sun much  
better than any other 4 day time period though my wife would probably  
kill me when I got home Sunday night.  At least the sprint would be  
over... ;-)

S





From glyph at twistedmatrix.com  Wed Jul 29 21:01:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jul 2009 21:01:42 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
Message-ID: <d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>

On Wed, Jul 29, 2009 at 6:08 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> As you might remember, we (thanks to the adhoc code reviews from
> glyph, tazle, dash andexarkun) decided on an implementation slightly
> different from the original one, using:
>    - an NMEAReceiver class, which *only* does the receiving bit and
> is perfectly stateless: this does things like unpacking the sentence
> and checking the checksum
>    - an IPositioningReceiver (now renamed IPositioningProvider, but
> I'm not sure that's the right name yet) interface that has a bunch of
> *sane* callbacks -- ones you actually want instead of ones that are
> directly a consequence of NMEA being a steaming pile of dung


Presumably the future plan is to have IPositioningProvider that receives
data from something other than NMEA, as well?  (Other GPS protocols,
whatever cell phones give you for triangulation, skyhook, etc.)


>    - an NMEAAdapter that would adapt the receiver and keep as much
> state as necessary internally to produce the meaningful callbacks as
> defined in the interface
>

This all sounds good.

Here's the code right now: http://bit.ly/1azA5q
> The interface lives in this file: http://bit.ly/3wWL2c
>

I think you mean the interface lives in this file: http://bit.ly/5Jc7p
(Your second link was to a directory.)

A minor nit here, would you put the interfaces in their own module,
'twisted.position.ipositioning'?  There are use-cases where one may want to
import interfaces, but not actually load any of the code from a package, so
in new code we try to segregate them out into their own modules.

I originally thought that the NMEAAdapter (which adapts an
> NMEAReceiver to the  IPositioningReceiver interface) was really an
> adapter in the twisted.python.components sense of the word, so that
> you could do something like PositioningReceiver(NMEAReceiver()) and
> you'd get and NMEAAdapter object, as described in the Twisted
> components howto.
>

This is the relationship, but it's backwards :).


> The problem is attaching the method stubs in NMEAReceiver (nmea_GPGGA,
> nmea_GPRMC, nmea_GPGSV) to the methods in the NMEAAdapter that
> actually interpret these sentences. Ordinarily, you'd subclass that
> class to override those stubs. How do you feel this should be done
> while keeping the adapter? Should we keep the adapter at all?


There are multiple layers here.  Let's have an object for each layer.  The
NMEA protocol parser object should send NMEA-sentence events to a sentence
receiver object, then there should be an implementation of the
sentence-receiver interface which generates positioning events and sends
them on to a positioning-receiver interface.

The dispatch from the nmea-sentence-received method to the nmea_-prefixed
methods is an internal implementation detail of the specific implementation
of the NMEA-event-to-positioning-event object, which users can subclass if
they want to get the same dispatch.

I've attached a sketch, but it elides certain details like set-up and
tear-down; there should be methods which allow users to tell when sentences
and positions start and stop arriving.  The gist would be to have a
connectionMade and connectionLost invoke startReceivingNMEA,
stopReceivingNMEA, which in turn would invoke startReceivingPositions, and
stopReceivingPositions.

There should also be a factory which nicely hooks everything together and
takes only a factory for your IPositioningProvider, so that users can
quickly get started with a positioning provider.

Of course, I could do ugly things in the adapters' __init__ like:
>

Let's please not do that; there's no reason to.

But that looks like a really bad idea: it's like I'm subverting
> inheritance. Instead, I'm currently doing this by subclassing the
> receiver (thanks to exarkun for this suggestion):



> class NMEAAdapter(NMEAReceiver):
>


> This fixes the method stubs being correctly assigned (I suppose the
> correct term would be overriding, through plain old inheritance). The
> problem is that neither the interface nor components/adapters are
> involved in any way, so I feel like I'm missing something important.
>

This is an OK approach, convenient, and less code than what I'm proposing,
but it means that users need to subclass something to get the functionality
they want, and there's no nice, clean interface that just describes what
your application needs to do at each level.

That might be fine if you really want to punt on allowing anyone to deal
with NMEA data directly, but given that the object is going to be public and
subclassing is going to be possible anyway, I'd rather that it be nice and
clean.  When we did twisted.words for example, I assumed that everyone would
want the nice, "high level" interface that abstractly defined chat events,
but instead users want to write XMPP and IRC bots directly, dealing with
gross protocol implementation details in their applications.  I suspect that
will be less common in the world of positioning data, but I certainly don't
know for sure, and it would be nice to avoid having to suppot a grotty
subclassing interface in the future, since the whole point of this nice new
system is to get rid of our old grotty interfaces :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/7e690e48/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: positioning-sketch.py
Type: application/x-python
Size: 2322 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090729/7e690e48/attachment.bin 

From lvh at laurensvh.be  Thu Jul 30 08:26:09 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 14:26:09 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
Message-ID: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>

On Thu, Jul 30, 2009 at 3:01 AM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> Presumably the future plan is to have IPositioningProvider that receives
> data from something other than NMEA, as well?? (Other GPS protocols,
> whatever cell phones give you for triangulation, skyhook, etc.)

Yep, that's the idea.

> A minor nit here, would you put the interfaces in their own module,
> 'twisted.position.ipositioning'?

Done in new revision.

> There are multiple layers here.? Let's have an object for each layer.? The
> NMEA protocol parser object should send NMEA-sentence events to a sentence
> receiver object, then there should be an implementation of the
> sentence-receiver interface which generates positioning events and sends
> them on to a positioning-receiver interface.

Agreed. That's what I'm doing now -- see nmea.NMEASentence. This will
perpetuate through the rest of the code.

> I've attached a sketch, but it elides certain details like set-up and
> tear-down; there should be methods which allow users to tell when sentences
> and positions start and stop arriving.? The gist would be to have a
> connectionMade and connectionLost invoke startReceivingNMEA,
> stopReceivingNMEA, which in turn would invoke startReceivingPositions, and
> stopReceivingPositions.

Extremely helpful, thank you. I think I was confused because
LineReceivers, which make sense for NMEA since it's a line based text
protocol delimited by '\r\n', is-a protocol but is called "receiver",
so I figured my receiver should be a LineReceiver, and not that it
should be delegated from by a LineReceiver subclass. To be honest, it
still looks kind of wonky that a LineReceiver (well, a subclass)
delegates to a receiver, but maybe that's just my inexperience showing
:-)

What exactly would those
startReceivingNMEA/stopReceivingNMEA/startReceivingPositions/stopReceivingPositions
do? I don't think there's any setup to be done, so I guess that I
should just have an instance attribute on the appropriate class that
is set by startFoo/stopFoo. If it's false, callbacks don't fire.
Right?

> There should also be a factory which nicely hooks everything together and
> takes only a factory for your IPositioningProvider, so that users can
> quickly get started with a positioning provider.

Okay, I'll do that as soon as people have reviewed the changes
suggested in your last mail, so that I know I got it right :-)

(also, sorry for the late reply -- the mailing list decided to make me
wait three hours before I could see my own mail, let alone yours)

Thanks for your input
Laurens


From glyph at twistedmatrix.com  Thu Jul 30 10:13:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Jul 2009 10:13:54 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <d9047f780907300713v5efb6125h1601697647f0f447@mail.gmail.com>

On Thu, Jul 30, 2009 at 8:26 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> On Thu, Jul 30, 2009 at 3:01 AM, Glyph Lefkowitz<glyph at twistedmatrix.com>
> wrote:
>  > I've attached a sketch
> Extremely helpful, thank you.


You're welcome.


> To be honest, it
> still looks kind of wonky that a LineReceiver (well, a subclass)
> delegates to a receiver, but maybe that's just my inexperience showing
> :-)
>

Does it also bother you that 'dataReceived' delegates to 'lineReceived'? :)

What exactly would those
>
> startReceivingNMEA/stopReceivingNMEA/startReceivingPositions/stopReceivingPositions
> do? I don't think there's any setup to be done, so I guess that I
> should just have an instance attribute on the appropriate class that
> is set by startFoo/stopFoo. If it's false, callbacks don't fire.
> Right?
>

You don't need to do anything at all in these callbacks.  The important
point is to provide them, so that applications which, for example, wish to
show a little "GPS active" icon will know when data starts and stops
arriving.  Also important so that an application can re-connect or
re-initialize the device or whatever, without hooking implementing multiple
interfaces and hooking in at multiple levels.

Given that data for positioning may come from a variety of sources it's
important to have a positioning-specific method that marks the start and
stop, rather than depending on connectionMade or similar.  One could for
example imagine a hypothetical HTTP-polling-based positioning provider which
would have a connectionMade for every sentence of data, but that wouldn't
represent a start and a stop at the positioning level.  start would simply
be called before the first position, and stop would be called after a
timeout or after certain varieties of HTTP error.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/9bda480a/attachment-0001.htm 

From lvh at laurensvh.be  Thu Jul 30 10:14:28 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 16:14:28 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>

Oh, by the way: would you guys expect NMEASentences to be immutable objects?

I suppose it makes sense, but maybe I've been thinking too much
Haskell recently. After all, an NMEASentence is an alternative way of
describing a past event (namely, something that a GPS told you).
Changing it would be like changing history, you can't do that -- even
if you're really replacing it with the same data but encoded
differently.

Right now, I'm assuming immutable sentences.

I know that you can't *really* make immutable python objects, but
they'd be immutable in the sense that:

sentence.latitude, sentence.longitude = Coordinate(50.49),  Coordinate(-3.34)

... wouldn't work (specifically, latitude and longitude aren't really
attributes of the class, but things you can get with my __getattr__ --
and I don't set __setattr__, so you'd need to know the guts of the
class, which currently are public but I might make private before the
code review).

Thanks for your input,
Laurens


From glyph at twistedmatrix.com  Thu Jul 30 10:20:38 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Jul 2009 10:20:38 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>
Message-ID: <d9047f780907300720m4696cd0gd0c435d6493437e3@mail.gmail.com>

On Thu, Jul 30, 2009 at 10:14 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Oh, by the way: would you guys expect NMEASentences to be immutable
> objects?
>

Yes, but by convention, not necessarily by enforcement.  The really
important thing is that the framework should not share or mutate
NMEASentence objects internally.


> I suppose it makes sense, but maybe I've been thinking too much
> Haskell recently. After all, an NMEASentence is an alternative way of
> describing a past event (namely, something that a GPS told you).
> Changing it would be like changing history, you can't do that -- even
> if you're really replacing it with the same data but encoded
> differently.
>


> I know that you can't *really* make immutable python objects, but
> they'd be immutable in the sense that:
>
> sentence.latitude, sentence.longitude = Coordinate(50.49),
>  Coordinate(-3.34)
>
> ... wouldn't work (specifically, latitude and longitude aren't really
> attributes of the class, but things you can get with my __getattr__ --
> and I don't set __setattr__, so you'd need to know the guts of the
> class, which currently are public but I might make private before the
> code review).
>

Ugh.  __getattr__, really?  Is that necessary?  It would be nice not to rely
on this kind of magic.

For NMEASentence, I don't really care, because I hope I'm never going to
write an application that actually deals with one of those.  But if you have
a Point object or something like that, then I think it's important to have a
return-a-modified-copy API if mutation is actually disallowed.  For example,
point.moveTo(50.49, -3.34) => a new Point.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/a0aaa18e/attachment.htm 

From santiago.aguiar at gmail.com  Thu Jul 30 12:18:40 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Thu, 30 Jul 2009 13:18:40 -0300
Subject: [Twisted-Python] twisted.positioning: status report and request
 for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <4A71C7E0.4070404@gmail.com>

Hello list!

This is my first post, and I would like to join in the discussion :).

Laurens Van Houtven wrote:
> Okay, I'll do that as soon as people have reviewed the changes
> suggested in your last mail, so that I know I got it right :-)
>   
I agree with Glyph suggestions.

NMEAAdapter should delegate to a IPositionReceiver (which should be a 
Receiver, right? It's called Provider, maybe I'm missing something?), 
and avoid having to make the receiver inherit from the NMEAAdapter 
(which seems to be the case now, by looking at 
NMEAAdapter._sentence_received getattr(self, callbackName)). There will 
probably be tons of different GPS protocols (I sometimes work on 
tracking systems, and truth is many trackers don't send NMEA data but a 
proprietary protocol), and you don't want to have to subclass each to 
handle data from multiple sources.

I also would refrain from using getattr tricks on the NMEA sentence 
classes. For me, the first line of python doc (specially on twisted!) is 
doing dir(obj) (and some IDEs/docgen tools actually do something like 
this for completion). getattr tricks and similar constructions makes it 
impossible to do this. It could be OK if you use getattr to handle an 
unknown case (for example, if you want to delegate based on whether the 
class has a method or not, even if in twisted interfaces world this 
wouldn't be the way to do, it I think), but in this case you know 
exactly what fields will the NMEA sentences have (and they won't change 
much!), so you could code them, even if this require much more code. 
It's the old motto of "write once maintain always" ;).

You could also do other tricks, like update the class __dict__, so it 
would show as a regular field when the object is created, or dinamically 
create the class (like is done for TCPServer and friends, ugh), but 
really, it could be better to just write it.

Thanks for the code!! :)



From ezyang at MIT.EDU  Thu Jul 30 14:24:08 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Thu, 30 Jul 2009 14:24:08 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
Message-ID: <1248977158-sup-6989@javelin>

Hello all,

I have been prodded by the members of #twisted into rewriting the
Deferred documentation.  You can check out the plan at this
ticket:

http://twistedmatrix.com/trac/ticket/3943

Comments would be appreciated.

Cheers,
Edward

P.S. If you reply on the mailing list, please CC me.


From jkakar at kakar.ca  Thu Jul 30 15:03:16 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 30 Jul 2009 12:03:16 -0700
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248977158-sup-6989@javelin>
References: <1248977158-sup-6989@javelin>
Message-ID: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>

Hi Edward,

On Thu, Jul 30, 2009 at 11:24 AM, Edward Z. Yang<ezyang at mit.edu> wrote:
> I have been prodded by the members of #twisted into rewriting the
> Deferred documentation. ?You can check out the plan at this
> ticket:
>
> http://twistedmatrix.com/trac/ticket/3943
>
> Comments would be appreciated.

Your outline looks nice.  Something that *really* helped me a lot
with Deferreds was seeing how they are modelled after standard
Python flow control behaviour.  I guess that's what the first
section your proposing is about.

Jono Lange gave a presentation recently (can't remember what it was
called... maybe something about being an evil hacker or about how
your code sucks and he hates you) where he presented step-by-step
slides that shows some normal Python code and then the asynchronous
Deferred-using equivalent.  Even though I understood the principles
reasonably well before attending his talk, the way he presented them
in his slides was very effective and helped me clarify that
understanding.  If he's willing, which I suspect he will be, I
recommend you look at the slides and steal his good ideas. :)

Thanks,
J.


From konrads at smelkovs.com  Thu Jul 30 15:15:31 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 30 Jul 2009 22:15:31 +0300
Subject: [Twisted-Python] getPage using ssl proxy
Message-ID: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>

Hello,

I am writing some scraper scripts and need to pass them through an
intercepting proxy. getPage does not support a proxy argument and this code
I found on internet won't work with SSL proxy (stalls indefinitely):

def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 0: # use a proxy
        host, port = 'localhost', 8080
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = ssl.ClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred

Plain http proxying works. My guess is that there is an issue with
self-signed or otherwise invalid certificate the http proxy supplies. Any
clues?

--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/16e6f04a/attachment.htm 

From kevin.horn at gmail.com  Thu Jul 30 15:27:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 14:27:54 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
Message-ID: <562bcc10907301227s5dbb7b14x92a7182ca5e81c42@mail.gmail.com>

This looks really great...looking forward to the results!

Kevin Horn

On Thu, Jul 30, 2009 at 2:03 PM, Jamu Kakar <jkakar at kakar.ca> wrote:

> Hi Edward,
>
> On Thu, Jul 30, 2009 at 11:24 AM, Edward Z. Yang<ezyang at mit.edu> wrote:
> > I have been prodded by the members of #twisted into rewriting the
> > Deferred documentation.  You can check out the plan at this
> > ticket:
> >
> > http://twistedmatrix.com/trac/ticket/3943
> >
> > Comments would be appreciated.
>
> Your outline looks nice.  Something that *really* helped me a lot
> with Deferreds was seeing how they are modelled after standard
> Python flow control behaviour.  I guess that's what the first
> section your proposing is about.
>
> Jono Lange gave a presentation recently (can't remember what it was
> called... maybe something about being an evil hacker or about how
> your code sucks and he hates you) where he presented step-by-step
> slides that shows some normal Python code and then the asynchronous
> Deferred-using equivalent.  Even though I understood the principles
> reasonably well before attending his talk, the way he presented them
> in his slides was very effective and helped me clarify that
> understanding.  If he's willing, which I suspect he will be, I
> recommend you look at the slides and steal his good ideas. :)
>
> Thanks,
> J.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/b297a256/attachment.htm 

From ezyang at MIT.EDU  Thu Jul 30 16:41:14 2009
From: ezyang at MIT.EDU (ezyang)
Date: Thu, 30 Jul 2009 16:41:14 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
Message-ID: <1248986420-sup-4086@javelin>

Excerpts from Jamu Kakar's message of Thu Jul 30 15:03:16 -0400 2009:
> Your outline looks nice.  Something that *really* helped me a lot
> with Deferreds was seeing how they are modelled after standard
> Python flow control behaviour.  I guess that's what the first
> section your proposing is about.

Right.  Everything you could do synchronously, you can do
asynchronously (and a bit more too).  It just /looks/ really
weird.

> Jono Lange gave a presentation recently (can't remember what it was
> called... maybe something about being an evil hacker or about how
> your code sucks and he hates you) where he presented step-by-step
> slides that shows some normal Python code and then the asynchronous
> Deferred-using equivalent.  Even though I understood the principles
> reasonably well before attending his talk, the way he presented them
> in his slides was very effective and helped me clarify that
> understanding.  If he's willing, which I suspect he will be, I
> recommend you look at the slides and steal his good ideas. :)

That would be very helpful!

Cheers,
Edward


From terry at jon.es  Thu Jul 30 17:27:59 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 30 Jul 2009 23:27:59 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: Your message at 16:41:14 on Thursday, 30 July 2009
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <19058.4191.690751.359019@jon.es>

> Right.  Everything you could do synchronously, you can do asynchronously
> (and a bit more too).  It just /looks/ really weird.

At some point I realized that it helps to realize that code that looks
synchronous really isn't at all. Probably all the programming that almost
all of us will ever do is not synchronous. You type

  x = y + 3

and you get into the habit of thinking that x just got assigned the value
of y + 3. But there's a whole set of levels of operations, all invisible to
you, that are frantically rearranging atoms behind the scenes to pull off
this tiny miracle. Instead of trying to wrap your head around the so-called
"weird" asynchronous operation of Twisted, it's easier to let fall the
comforting illusion that you're in the synchronous world to begin with -
whatever that's supposed to mean (it's more like a fairy tale IMO). You're
not.

It's more accurate to think that that line of code arranges for x to
*eventually* hold the value of y + 3. Then it's a small step to thinking
that

  x = y + 3
  z = f(x)

is just another slightly bigger part of the same illusion. Those lines of
code aren't executed one after another at all. You're just brought up with
the fairy tale that they are - or at least you study computer science and
spend so much time with high-level languages that you start to take it for
granted that they are done one after the other. But the second line is
*eventually* executed after the first, assuming nothing went wrong (e.g., y
could be None).

At that point - everything is asynchronous - you have the right mindset to
think perfectly clearly about Twisted code. And there's no jump to make at
all. The only things you have to get your head around are 1) the fact that
Twisted code doesn't give you the comforting linear illusion of so-called
synchronous code as you type it in your editor (inlineCallbacks helps a lot
with improving that), and 2) that Twisted's deferreds are the way of
maintaining the flow of results (both correct and incorrect) through time
as your program executes. I.e., you've lost the step-at-a-time line-by-line
results computed on line N are available on line N+1 flow of code you can
so easily read in your editor, and in exchange you have deferreds.

I could go on, obviously :-) But I just wanted to point out that the shift
from thinking "synchronously" to "asynchronously" is much easier to make if
you realize the former is a convenient illusion and in fact you've always
been doing things asynchronously.

Terry


From kevin.horn at gmail.com  Thu Jul 30 17:45:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 16:45:54 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <19058.4191.690751.359019@jon.es>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <19058.4191.690751.359019@jon.es>
Message-ID: <562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>

On Thu, Jul 30, 2009 at 4:27 PM, Terry Jones <terry at jon.es> wrote:

> > Right.  Everything you could do synchronously, you can do asynchronously
> > (and a bit more too).  It just /looks/ really weird.
>
> At some point I realized that it helps to realize that code that looks
> synchronous really isn't at all. Probably all the programming that almost
> all of us will ever do is not synchronous. You type
>
>  x = y + 3
>
> and you get into the habit of thinking that x just got assigned the value
> of y + 3. But there's a whole set of levels of operations, all invisible to
> you, that are frantically rearranging atoms behind the scenes to pull off
> this tiny miracle. Instead of trying to wrap your head around the so-called
> "weird" asynchronous operation of Twisted, it's easier to let fall the
> comforting illusion that you're in the synchronous world to begin with -
> whatever that's supposed to mean (it's more like a fairy tale IMO). You're
> not.
>
> It's more accurate to think that that line of code arranges for x to
> *eventually* hold the value of y + 3. Then it's a small step to thinking
> that
>
>  x = y + 3
>  z = f(x)
>
> is just another slightly bigger part of the same illusion. Those lines of
> code aren't executed one after another at all. You're just brought up with
> the fairy tale that they are - or at least you study computer science and
> spend so much time with high-level languages that you start to take it for
> granted that they are done one after the other. But the second line is
> *eventually* executed after the first, assuming nothing went wrong (e.g., y
> could be None).
>
> At that point - everything is asynchronous - you have the right mindset to
> think perfectly clearly about Twisted code. And there's no jump to make at
> all. The only things you have to get your head around are 1) the fact that
> Twisted code doesn't give you the comforting linear illusion of so-called
> synchronous code as you type it in your editor (inlineCallbacks helps a lot
> with improving that), and 2) that Twisted's deferreds are the way of
> maintaining the flow of results (both correct and incorrect) through time
> as your program executes. I.e., you've lost the step-at-a-time line-by-line
> results computed on line N are available on line N+1 flow of code you can
> so easily read in your editor, and in exchange you have deferreds.
>
> I could go on, obviously :-) But I just wanted to point out that the shift
> from thinking "synchronously" to "asynchronously" is much easier to make if
> you realize the former is a convenient illusion and in fact you've always
> been doing things asynchronously.
>
> Terry
>

Thanks for this, Terry.  I'd never thought of it that way, and it's quite a
good point.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/847a3a40/attachment-0001.htm 

From micahel at gmail.com  Thu Jul 30 17:57:10 2009
From: micahel at gmail.com (Michael Hudson)
Date: Fri, 31 Jul 2009 09:57:10 +1200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248986420-sup-4086@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>

2009/7/31 ezyang <ezyang at mit.edu>:
> Excerpts from Jamu Kakar's message of Thu Jul 30 15:03:16 -0400 2009:
>> Jono Lange gave a presentation recently (can't remember what it was
>> called... maybe something about being an evil hacker or about how
>> your code sucks and he hates you) where he presented step-by-step
>> slides that shows some normal Python code and then the asynchronous
>> Deferred-using equivalent. ?Even though I understood the principles
>> reasonably well before attending his talk, the way he presented them
>> in his slides was very effective and helped me clarify that
>> understanding. ?If he's willing, which I suspect he will be, I
>> recommend you look at the slides and steal his good ideas. :)
>
> That would be very helpful!

The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

Cheers,
mwh


From nitro at dr-code.org  Thu Jul 30 18:07:30 2009
From: nitro at dr-code.org (Nitro)
Date: Fri, 31 Jul 2009 00:07:30 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <19058.4191.690751.359019@jon.es>
	<562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>
Message-ID: <op.uxwiesr7z3pzfc@nitrogenycs2>

Am 30.07.2009, 23:45 Uhr, schrieb Kevin Horn <kevin.horn at gmail.com>:

> Thanks for this, Terry.  I'd never thought of it that way, and it's  
> quite a
> good point.

I agree. I've come to think it's partially a fault of using normal text  
based editors. Those fit the programming models from 30 years ago well,  
but today lots of things are more involved. Text is linear and doesn't  
branch. Asynchronous code is more like a bunch of pipelines which can  
branch, melt together at points or are dead-ends. In my opinion a good  
code editor would visualize this for me, but so far I've never came across  
one which does this job.

-Matthias


From lvh at laurensvh.be  Thu Jul 30 20:38:45 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 31 Jul 2009 02:38:45 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <4A71C7E0.4070404@gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
Message-ID: <cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>

Hi, and welcome to the discussion :-)

On Thu, Jul 30, 2009 at 6:18 PM, Santiago
Aguiar<santiago.aguiar at gmail.com> wrote:
> NMEAAdapter should delegate to a IPositionReceiver (which should be a
> Receiver, right? It's called Provider, maybe I'm missing something?),

Yes, it's been called IPositioningReceiver and IPositioningProvider at
different point in the past, I'm not sure which name is better.

> and avoid having to make the receiver inherit from the NMEAAdapter
> (which seems to be the case now, by looking at
> NMEAAdapter._sentence_received getattr(self, callbackName)). There will
> probably be tons of different GPS protocols (I sometimes work on
> tracking systems, and truth is many trackers don't send NMEA data but a
> proprietary protocol), and you don't want to have to subclass each to
> handle data from multiple sources.

Yes, I've been working with a number of GPS protocols as well from a
different project, I'm just porting it to Twisted (and making it much
better). However, in most commercial applications the only dominant
(and by dominant I mean "used by more than 1 manufacturer") protocol
seems to be SIRF. That's being implemented at some point in time too.

The suggested timeline right now is:

finalize NMEA implementation -> review -> work on GPSD (I've talked to
esr -- working on this sooner is mostly useless, the new gpsd protocol
is much preferred)

The downside of the new protocol in gpsd is that it introduces a new
dependency (gpsd). The upside is that it's json, so parsing it will be
easy, and we'll get something similar to NMEA, except immediately in a
good format.


> I also would refrain from using getattr tricks on the NMEA sentence
> classes. For me, the first line of python doc (specially on twisted!) is
> doing dir(obj) (and some IDEs/docgen tools actually do something like
> this for completion). getattr tricks and similar constructions makes it
> impossible to do this. It could be OK if you use getattr to handle an
> unknown case (for example, if you want to delegate based on whether the
> class has a method or not, even if in twisted interfaces world this
> wouldn't be the way to do, it I think), but in this case you know
> exactly what fields will the NMEA sentences have (and they won't change
> much!), so you could code them, even if this require much more code.
> It's the old motto of "write once maintain always" ;).

Yes, the point of dir working is a strong one -- I'm convinced that
this is a good idea too.

How about a bunch of properties, and have docstrings instead of @ivar
clauses in the class docstring? That way it'd be API compatible with
what I have now. It looks okay (from an API point). I'm more worried
about it being lots of duplicate and similar looking code. Well -- not
worried -- that's what put me off from doing it :-)

> You could also do other tricks, like update the class __dict__, so it
> would show as a regular field when the object is created, or dinamically
> create the class (like is done for TCPServer and friends, ugh), but
> really, it could be better to just write it.

Yeah,  abusing __dict__ sounds like a cure worse than the disease.

> Thanks for the code!! :)

Thanks for your comments :-)

So anyway, short summary on what I'm still going to do:

   - change the fixer methods so they produce abstract objects instead
of just nicer representations of NMEA string values in primitives
(from "1234.567", "N" -> 12 + 34.567/60 is already being done -- now,
it will produce a Coordinate object, too)
   - document all of NMEA's silly sentences in the NMEASentence object
   - change the fixer method to not rely on NMEASentence's internal dictionary

It might be a good idea to do the mapping from "good primitives" data
(eg, a float in decimal degrees with meaningful sign for a latitude)
to the abstract objects (Coordinate objects for example) separately.
This would mean an extra pass, but perhaps code could be shared
between the nmea and gpsd implementations then :-)

Laurens


From dave at davebritton.com  Thu Jul 30 20:48:26 2009
From: dave at davebritton.com (Dave Britton)
Date: Thu, 30 Jul 2009 20:48:26 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
References: <1248977158-sup-6989@javelin><aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com><1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
Message-ID: <183901ca1178$9df7f060$0500a8c0@yoda>

----- Original Message ----- 
From: "Michael Hudson" <micahel at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

Thanks for this incredibly helpful link!
-Dave



From jessica.mckellar at gmail.com  Thu Jul 30 20:49:54 2009
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Thu, 30 Jul 2009 20:49:54 -0400
Subject: [Twisted-Python] Questions about adding documentation
Message-ID: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>

Hi everyone,

I would like to help Twisted by adding documentation or reviewing existing
documentation. However, I don't see many (any?) unassigned tickets regarding
documentation of specific items, and because I am quite new to Twisted this
makes it hard for me to determine where you wish I would focus my attention.

Where should I focus my attention? Want to open some tickets for me to
claim? Is adding to API docs more important than updating the examples and
howtos?

It looks like to add to the API docs you just update the doc strings for
functions and let someone let pydoctor do its magic later. Is that true? Is
there a special Twisted pydoctor incant to see how they'd look on the web
before doing any hasty patch-submitting?

I'd like to update
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs to include some
of this information as well as help I got earlier for updating xhtml
documentation.

Thanks,
-Jessica
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/b1909833/attachment.htm 

From exarkun at divmod.com  Thu Jul 30 23:35:35 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Jul 2009 23:35:35 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
Message-ID: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>

On Thu, 30 Jul 2009 20:49:54 -0400, Jessica McKellar <jessica.mckellar at gmail.com> wrote:
>Hi everyone,
>
>I would like to help Twisted by adding documentation or reviewing existing
>documentation. However, I don't see many (any?) unassigned tickets regarding
>documentation of specific items, and because I am quite new to Twisted this
>makes it hard for me to determine where you wish I would focus my attention.

Hi Jessica,

First let me say hooray. :)  Any attention you can direct at any of Twisted's
documentation will be much appreciated. :)

Don't worry about trying to find an unassigned ticket.  We try to keep all
tickets assigned to someone.  That doesn't mean the person is actively
working on resolving the ticket, just that at some point in time, someone
felt like that assignee should have responsibility for it.  You may want to
comment on a ticket before starting to work on it, asking if anyone is
really working on it, or if there is any work which has been started which
you can pick up.  However, for most tickets, you'll very likely find answers
in the negative for both these questions.

>
>Where should I focus my attention? Want to open some tickets for me to
>claim? Is adding to API docs more important than updating the examples and
>howtos?

Either API doc work or howto work will be appreciated.  I find that the API
docs are in better shape overall (except for a few dark corners), so I would
probably recommend focusing on howtos (and perhaps examples).

Here are a few tickets in particular which I think it would be worthwhile to
resolve:

    http://twistedmatrix.com/trac/ticket/1136
    http://twistedmatrix.com/trac/ticket/1627
    http://twistedmatrix.com/trac/ticket/3784
    http://twistedmatrix.com/trac/ticket/3835

    

>It looks like to add to the API docs you just update the doc strings for
>functions and let someone let pydoctor do its magic later. Is that true? Is
>there a special Twisted pydoctor incant to see how they'd look on the web
>before doing any hasty patch-submitting?

Yep, that's right.  There's just a little specialness involved in the
pydoctor invocation.  Here's a decent command line to use:

    pydoctor --quiet --make-html --system-class \
        pydoctor.twistedmodel.TwistedSystem --add-package twisted

where the final "twisted" is the path to the "twisted" directory beneath a
Twisted checkout (ie, the path which has as a sibling the "doc" directory,
the "README" file, etc).

Make sure you have epydoc installed or pydoctor will give you unpleasant
looking results with unparsed epytext strings in it.

There are two other areas in which I think documentation work would yield a
great benefit.  First, in general editing for readability, coherency, and
general ease of understandability of any of the existing documents.  These
are often rough first drafts which no one was interested in polishing, or
rough first drafts which have had dozens of minor edits by multiple authors
with little concern for the overall document flow.

Second, in a comprehensive high-level overview of what documentation is
missing, what documentation exists, and how it all fits together.  The
output of this would be recommendations about what new documentation to
write, what old documentation to scrape, what documents could be merged,
more closely linked, or otherwise made to cooperate to provide easier
access to the information they present.  This is probably a big task, and
one which requires familiarity with a lot of Twisted.  I'm not sure how
much Twisted experience you already have, but I wanted to mention it in
case it sounds like something you'd be interested in.

Finally, a couple years ago an attempt was made to seriously do something
about the state of the documentation.  It didn't get far enough to produce
actual changes to the documentation, but it did produce some output.  This
may be useful.  You can find it on the wiki:

  http://twistedmatrix.com/trac/wiki/DocumentationAnalysis

>
>I'd like to update
>http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs to include some
>of this information as well as help I got earlier for updating xhtml
>documentation.

That sounds like a great idea.  Wiki pages require a special permission to
be set on your trac user.  If you let me know what your username is, I can
take care of adding that for you.

Thanks!

Jean-Paul


From listsin at integrateddevcorp.com  Thu Jul 30 23:45:53 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 30 Jul 2009 23:45:53 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
Message-ID: <562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>


On Jul 30, 2009, at 11:35 PM, Jean-Paul Calderone wrote:
> Here are a few tickets in particular which I think it would be  
> worthwhile to
> resolve:
>
>    http://twistedmatrix.com/trac/ticket/1136
>    http://twistedmatrix.com/trac/ticket/1627
>    http://twistedmatrix.com/trac/ticket/3784
>    http://twistedmatrix.com/trac/ticket/3835

Traceback (most recent call last):
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
api.py", line 382, in send_error
     'text/html')
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
chrome.py", line 475, in render_template
     return stream.render(method, doctype=doctype)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 146, in render
     output = u''.join(list(generator))
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 200, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 486, in __call__
     for kind, data, pos in chain(stream, [(None, None, None)]):
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 436, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 207, in _ensure
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 207, in _ensure
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
chrome.py", line 478, in _strip_accesskeys
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
filters.py", line 313, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1145, in _match
     content = list(content)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
filters.py", line 313, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1120, in _match
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1109, in _strip
     event = stream.next()
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 941, in _eval
     for event in substream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 920, in _eval
     ctxt):
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 930, in _eval
     result = data.evaluate(ctxt)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py",  
line 101, in evaluate
     {'data': data})
   File "/home/trac/.local/share/trac/templates/error.html", line 36,  
in <Expression u"get_reporter_id(req)">
     <input type="hidden" name="reporter" value="${get_reporter_id 
(req)}" />
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/ 
__init__.py", line 50, in get_reporter_id
     name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'

Yikes...

S




From kevin.horn at gmail.com  Thu Jul 30 23:51:19 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 22:51:19 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
Message-ID: <562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>

Steve.

Same thing happened to me.  In my case it was corrected by a page refresh.

Kevin Horn

On Thu, Jul 30, 2009 at 10:45 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

>
> On Jul 30, 2009, at 11:35 PM, Jean-Paul Calderone wrote:
> > Here are a few tickets in particular which I think it would be
> > worthwhile to
> > resolve:
> >
> >    http://twistedmatrix.com/trac/ticket/1136
> >    http://twistedmatrix.com/trac/ticket/1627
> >    http://twistedmatrix.com/trac/ticket/3784
> >    http://twistedmatrix.com/trac/ticket/3835
>
> Traceback (most recent call last):
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> api.py", line 382, in send_error
>     'text/html')
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> chrome.py", line 475, in render_template
>     return stream.render(method, doctype=doctype)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 146, in render
>     output = u''.join(list(generator))
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 200, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 486, in __call__
>     for kind, data, pos in chain(stream, [(None, None, None)]):
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 436, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 207, in _ensure
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 207, in _ensure
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> chrome.py", line 478, in _strip_accesskeys
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> filters.py", line 313, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1145, in _match
>     content = list(content)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> filters.py", line 313, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1120, in _match
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1109, in _strip
>     event = stream.next()
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 941, in _eval
>     for event in substream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 920, in _eval
>     ctxt):
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 930, in _eval
>     result = data.evaluate(ctxt)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py",
> line 101, in evaluate
>     {'data': data})
>   File "/home/trac/.local/share/trac/templates/error.html", line 36,
> in <Expression u"get_reporter_id(req)">
>     <input type="hidden" name="reporter" value="${get_reporter_id
> (req)}" />
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/
> __init__.py", line 50, in get_reporter_id
>     name = req.session.get('name', None)
> AttributeError: 'NoneType' object has no attribute 'get'
>
> Yikes...
>
> S
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/f3d77e2f/attachment-0001.htm 

From listsin at integrateddevcorp.com  Thu Jul 30 23:58:47 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 30 Jul 2009 23:58:47 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
	<562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
Message-ID: <21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>


On Jul 30, 2009, at 11:51 PM, Kevin Horn wrote:

> Steve.
>
> Same thing happened to me.  In my case it was corrected by a page  
> refresh.

Yah, it's just a little scary when Twisted's own site does things like  
this.

S



From drew.smathers at gmail.com  Fri Jul 31 00:05:58 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 31 Jul 2009 00:05:58 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
	<562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
	<21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>
Message-ID: <368574aa0907302105g3219a0dpaba49dbf5becaa78@mail.gmail.com>

On Thu, Jul 30, 2009 at 11:58 PM, Steve Steiner
(listsin)<listsin at integrateddevcorp.com> wrote:
>
> On Jul 30, 2009, at 11:51 PM, Kevin Horn wrote:
>
>> Steve.
>>
>> Same thing happened to me. ?In my case it was corrected by a page
>> refresh.
>
> Yah, it's just a little scary when Twisted's own site does things like
> this.
>

Well, mind please the site is just trac -- don't blame Twisted ;-)


From kevin.horn at gmail.com  Fri Jul 31 00:31:18 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 23:31:18 -0500
Subject: [Twisted-Python] Missing Interface?
Message-ID: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>

the following classes:

twisted.cred.credentials.CramMD5Credentials
twisted.mail.imap4.PLAINCredentials
twisted.mail.imap4.LOGINCredentials

all seem to implement the same interface, yet there is no Interface defined
for these objects.

"But Kevin", you might be thinking, "They all implement
twisted.cred.credentials.IUsernameHashedPassword or
t.c.c.IUsernamePassword".  That's true, but they all have additional methods
which make them useful for handling SASL authentication in various
protocols.  And those methods aren't included in those interfaces.

So, should there be an Interface which describes the interface that these
objects implement?
Would that make it easier for protocol implementors to deal with SASL in
their protocols?
If it is desirable to have such an Interface, what should it be called?
Would this be of any use to anyone out there? (besides possibly me)
And why are two of these in the IMAP package and the third in cred?  Why not
in the same place?

Thoughts?  Anyone?  Bueller?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090730/f690b73c/attachment.htm 

From kevin.horn at gmail.com  Fri Jul 31 01:11:48 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 00:11:48 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
Message-ID: <562bcc10907302211q4ec0f670kfa1820f398061eea@mail.gmail.com>

On Thu, Jul 30, 2009 at 10:35 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 30 Jul 2009 20:49:54 -0400, Jessica McKellar <
> jessica.mckellar at gmail.com> wrote:
> >Hi everyone,
> >
> >I would like to help Twisted by adding documentation or reviewing existing
> >documentation. However, I don't see many (any?) unassigned tickets
> regarding
> >documentation of specific items, and because I am quite new to Twisted
> this
> >makes it hard for me to determine where you wish I would focus my
> attention.
>
> Hi Jessica,
>
> First let me say hooray. :)  Any attention you can direct at any of
> Twisted's
> documentation will be much appreciated. :)
>
>
Let me second that Hooray!

I thought I would jump in here with sort of an outsiders perspective on what
I think needs to happen with the Twisted docs.  Even though I've been using
Twisted for a couple of years, I'm still new enough at it that I remember
what my frustrations were (and sometimes still are) with the docs.  This is
all just my opinion, though...I don't mean to ruffle anyone's feathers.


>
> >
> >Where should I focus my attention? Want to open some tickets for me to
> >claim? Is adding to API docs more important than updating the examples and
> >howtos?
>
> Either API doc work or howto work will be appreciated.  I find that the API
> docs are in better shape overall (except for a few dark corners), so I
> would
> probably recommend focusing on howtos (and perhaps examples).
>

I agree.  The API docs need some work (there are a LOT of undocumented
methods), but overall I think they are in much better shape than the rest.

Howtos and examples would be fantastic, as well as clean up of some of the
existing stuff (as Jean-Paul notes below).  Browsing through the source code
for long enough should give most coders the idea that all the pieces are
there to build, e.g. an IMAP server, and those pieces ARE there, but it
takes a lots of reading of lots of stuff in lots of different places (text
docs, API docs, cred docs, application docs, etc., etc.) to figure out which
pieces you need and how to put them together.

I picked an IMAP server as an example, because of the AHA! moment I had when
I read the following in the in the Abe Fettig O'Reilly book"

"To make an IMAP server, write classes to implement the IAccount, IMailbox,
IMessage, and IMessagePart interfaces defined in twisted.mail.imap4"

The next two sentences complete the description of the process, but the key
point is that for most parts of Twisted, there isn't much that tells you how
all of the various parts fit together.
And Twisted is BIG.  It's hard to find things sometimes...

Some of this could be improved by expounding on the API docs for these
interfaces, but I think a broad overview for many of these areas would help
immensely.


> There are two other areas in which I think documentation work would yield a
> great benefit.  First, in general editing for readability, coherency, and
> general ease of understandability of any of the existing documents.  These
> are often rough first drafts which no one was interested in polishing, or
> rough first drafts which have had dozens of minor edits by multiple authors
> with little concern for the overall document flow.
>

More true in some places than others, but a definite problem in some places.
A personal pet peeve of mine is the "What Deferreds don't do: make your code
asynchronous"
section of
http://twistedmatrix.com/projects/core/documentation/howto/gendefer.html

There's a nice big example of what Deferred's don't do.  OK, great, but if
I'm new to Twisted
and the async style of coding in general, then what *DO* I do to make my
code asynchronous?
(NOTE: some of this I think will be helped in the upcoming Deferred
documentation rewrite...see the
"Deferred documentation rewrite" thread on this list for the last day or
two)


> Second, in a comprehensive high-level overview of what documentation is
> missing, what documentation exists, and how it all fits together.  The
> output of this would be recommendations about what new documentation to
> write, what old documentation to scrape, what documents could be merged,
> more closely linked, or otherwise made to cooperate to provide easier
> access to the information they present.  This is probably a big task, and
> one which requires familiarity with a lot of Twisted.  I'm not sure how
> much Twisted experience you already have, but I wanted to mention it in
> case it sounds like something you'd be interested in.
>

Emphasis on "how it fits together", IMHO.  Navigating Twisted's'
documentation (outside the API docs)
is a nightmare.  I often find myself just having to use Google searches.


> Finally, a couple years ago an attempt was made to seriously do something
> about the state of the documentation.  It didn't get far enough to produce
> actual changes to the documentation, but it did produce some output.  This
> may be useful.  You can find it on the wiki:
>
>  http://twistedmatrix.com/trac/wiki/DocumentationAnalysis
>

I looked at this a while back, but I found it pretty much incomprehensible.


>
> Thanks!
>
> Jean-Paul
>

A couple of other things:

There are several barriers to improving Twisted's docs
- you have to know a fair amount about Twisted to write about some parts of
it
- you have to know a lot about Twisted to write about Twisted from a high
level, big-picture sort of perspective
- you have to know some seriously deep Twisted magic to even speak
intelligibly about certain things
- once you know enough about Twisted to really explain it...it seems you are
no longer able to explain it :)

Not trying to offend...everyone in the Twisted community I've talked to has
been very helpful, but sometimes when you know a complex topic really well,
it becomes difficult to explain things in such a way that someone new to
that topic will understand.  Does this make sense?

Sometimes I think what is needed is someone who knows basically nothing
about Twisted to go about learning it...and then writing down how they did
it.

Also:
Some (more) documentation about how to write docs for Twisted would really
help people who are willing (and in some cases eager!) to contribute, but
feel the barrier to entry is too high (they don't want to figure out
pydoctor + epydoc + xml processing + ...).

Anyway, I hope my rambling is helpful...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/4fc7d3f6/attachment.htm 

From glyph at twistedmatrix.com  Fri Jul 31 01:23:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 01:23:47 -0400
Subject: [Twisted-Python] Missing Interface?
In-Reply-To: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
References: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
Message-ID: <d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:31 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> the following classes:
>
> twisted.cred.credentials.CramMD5Credentials
> twisted.mail.imap4.PLAINCredentials
> twisted.mail.imap4.LOGINCredentials
>
> all seem to implement the same interface, yet there is no Interface defined
> for these objects.
>

It would be great if there were such an interface.

"But Kevin", you might be thinking, "They all implement
> twisted.cred.credentials.IUsernameHashedPassword or
> t.c.c.IUsernamePassword".  That's true, but they all have additional methods
> which make them useful for handling SASL authentication in various
> protocols.  And those methods aren't included in those interfaces.
>

Aaah, SASL.  There has been *quite* a bit of discussion of this, which
resulted in a branch that looked near completion but eventually stalled,
here:  http://twistedmatrix.com/trac/ticket/2015

I don't think that unifying this interface would *necessarily* require the
resolution of this ticket, but it would at least be useful to see where
things have been.

So, should there be an Interface which describes the interface that these
> objects implement?


Sounds good to me, but then, I haven't done a lot of work with SASL.


> And why are two of these in the IMAP package and the third in cred?  Why
> not in the same place?
>

LOGIN and PLAIN authentication methods were implemented specifically for
IMAP, since as with all things IMAP it had special requirements.  The
general idea of hashed passwords was around before that in cred, but as you
can see in the changeset that introduced it ?
http://twistedmatrix.com/trac/changeset/8290 ? something was apparently
(and, I suspect, naughtily) expecting to call moreChallenges and setResponse
on an IUsernameHashedPassword.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/5c8335e2/attachment-0001.htm 

From kevin.horn at gmail.com  Fri Jul 31 01:49:47 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 00:49:47 -0500
Subject: [Twisted-Python] Missing Interface?
In-Reply-To: <d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>
References: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
	<d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>
Message-ID: <562bcc10907302249x65c974f2xfa356cf44ff17665@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:23 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Fri, Jul 31, 2009 at 12:31 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> the following classes:
>>
>> twisted.cred.credentials.CramMD5Credentials
>> twisted.mail.imap4.PLAINCredentials
>> twisted.mail.imap4.LOGINCredentials
>>
>> all seem to implement the same interface, yet there is no Interface
>> defined for these objects.
>>
>
> It would be great if there were such an interface.
>

Seems pretty simple, since teh de facto interface is already there.  What
should such an interface be called?  Where should it live?


> "But Kevin", you might be thinking, "They all implement
>> twisted.cred.credentials.IUsernameHashedPassword or
>> t.c.c.IUsernamePassword".  That's true, but they all have additional methods
>> which make them useful for handling SASL authentication in various
>> protocols.  And those methods aren't included in those interfaces.
>>
>
> Aaah, SASL.  There has been *quite* a bit of discussion of this, which
> resulted in a branch that looked near completion but eventually stalled,
> here:  http://twistedmatrix.com/trac/ticket/2015
>
> I don't think that unifying this interface would *necessarily* require the
> resolution of this ticket, but it would at least be useful to see where
> things have been.
>

Great, I'll try to take a look at this.


>
> So, should there be an Interface which describes the interface that these
>> objects implement?
>
>
> Sounds good to me, but then, I haven't done a lot of work with SASL.
>
>
>> And why are two of these in the IMAP package and the third in cred?  Why
>> not in the same place?
>>
>
> LOGIN and PLAIN authentication methods were implemented specifically for
> IMAP, since as with all things IMAP it had special requirements.  The
> general idea of hashed passwords was around before that in cred, but as you
> can see in the changeset that introduced it ?
> http://twistedmatrix.com/trac/changeset/8290 ? something was apparently
> (and, I suspect, naughtily) expecting to call moreChallenges and setResponse
> on an IUsernameHashedPassword.
>
>
LOGIN I can understand, since it's basically IMAP-specific, but it seems to
me that PLAIN should be more general, since it's a SASL mechanism that's
used (or at least can be used) in several protocols.

It might be worth pointing out though, that something very similar to the
IMAP LOGIN mechanism is implemented in the Infotrope ACAP server (just about
he only open source ACAP server out there...something I'm trying to
remedy...which is how I got interested in all this in the first place) so
maybe LOGIN could be generalized as well.  Probably not necessary, though.

As for the changeset you referenced, it looks like the intent was to expand
the IUsernameHashedPassword interface, which I'm not sure is the right
approach.  Of course I'm not sure it's NOT the right approach, either.
Perhaps a new interface that inherits from IUsernameHashedPassword?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/f3ccda77/attachment.htm 

From terry at jon.es  Fri Jul 31 10:07:44 2009
From: terry at jon.es (Terry Jones)
Date: Fri, 31 Jul 2009 16:07:44 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: Your message at 09:57:10 on Friday, 31 July 2009
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
Message-ID: <19058.64176.108008.963718@jon.es>

>>>>> "Michael" == Michael Hudson <micahel at gmail.com> writes:
Michael> The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

I agree, that's a really nicely done document.  It would be good to extend
it, moving into a description and explanation of deferreds.

Terry


From santiago.aguiar at gmail.com  Fri Jul 31 10:19:42 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Fri, 31 Jul 2009 11:19:42 -0300
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
Message-ID: <4A72FD7E.8010205@gmail.com>

Hi Jessica!

I'm quite a newbie at twisted yet, and a newcomer to the project, so I 
do think that twisted documentation is one of it's more problematic areas!.

My suggestion would be that more than *adding* documentation, I would 
suggest to first search-and-destroy deprecated documentation. For me, 
one of the most frustrating parts of using twisted was reading through 
the twisted core doc, trying to do things and failing, and then 
accessing #twisted and get people tell me thinks like 'oh, 
tap/tac/tml/mktap are no longer used', or things like that (I don't yet 
know which ones are supposed to be used and which don't).

I understand that *rewriting* outdated doc is a major task, that's why I 
just suggest deleting it ;) (maybe in a new Revised Twiste Doc section 
of the web site or the like), then it probably would be clearer where to 
start and what needs most work.

It could also be a good idea to try to make it more wiki-like at the 
beginning; I think there's quite a lot of people that would like to 
contribute with this, but having different documents/styles for 
different areas of the doc is not good, a wiki like doc might allow some 
people to work on giving a more cohesive look to the whole doc, and 
others to add the meat and bones, provide examples, etc, while allowing 
everyone to review it easily. Thinking about it, of course a doc on SVN 
would help in the same way ;).

Truth is that I really don't know which are twisted best practices at 
the time (what I do works, but I don't know if it's the best way to do 
it), and checking outdated doc just confuses things even more... better 
no doc at all.

I stop my suggestions here before someone yells me 'then do it!' :).

--
Santiago


From phil at bubblehouse.org  Fri Jul 31 10:34:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 10:34:32 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A72FD7E.8010205@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
Message-ID: <7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>

On Jul 31, 2009, at 10:19 AM, Santiago Aguiar wrote:
> It could also be a good idea to try to make it more wiki-like at the
> beginning; I think there's quite a lot of people that would like to
> contribute with this, but having different documents/styles for
> different areas of the doc is not good, a wiki like doc might allow  
> some
> people to work on giving a more cohesive look to the whole doc, and
> others to add the meat and bones, provide examples, etc, while  
> allowing
> everyone to review it easily. Thinking about it, of course a doc on  
> SVN
> would help in the same way ;).

I'd like to second this, for at least the third or fourth time over  
the last several years ;-)

To respond in advance to previous criticisms of the idea:

  * wiki syntax sucks
  * it doesn't have an acceptable form of version control
  * it's frustrating that it can't be easily bundled with
    a release tarball
  * the same info is on the mailing list, just use google
    to find it

All 100% true. Nevertheless, I say wiki. It would provide the least  
complicated route for new users to document things they discover  
during the learning process, which is *exactly* the phase that is so  
hard for the more experienced users to properly explain.

Hopefully over time the various technical writers who volunteer often  
could rewrite this content into the formal collection that is  
distributed with Twisted proper, but in the meantime, a community- 
edited wiki would also provide another window into the community for  
new developers.

I also would recommend MediaWiki. Yes, less than perfect, not as good  
as this, that, or the other wiki. In the interest of keeping the bar  
for entry low, however, we would be harnessing a familiarity with  
MediaWiki provided by exposure to Wikipedia.

Pragmatism, not idealism, and all that...

-phil


From kevin.horn at gmail.com  Fri Jul 31 11:40:13 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 10:40:13 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
Message-ID: <562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>

On Fri, Jul 31, 2009 at 9:34 AM, Phil Christensen <phil at bubblehouse.org>wrote:

> On Jul 31, 2009, at 10:19 AM, Santiago Aguiar wrote:
> > It could also be a good idea to try to make it more wiki-like at the
> > beginning; I think there's quite a lot of people that would like to
> > contribute with this, but having different documents/styles for
> > different areas of the doc is not good, a wiki like doc might allow
> > some
> > people to work on giving a more cohesive look to the whole doc, and
> > others to add the meat and bones, provide examples, etc, while
> > allowing
> > everyone to review it easily. Thinking about it, of course a doc on
> > SVN
> > would help in the same way ;).
>
> I'd like to second this, for at least the third or fourth time over
> the last several years ;-)
>
> To respond in advance to previous criticisms of the idea:
>
>  * wiki syntax sucks
>  * it doesn't have an acceptable form of version control
>  * it's frustrating that it can't be easily bundled with
>    a release tarball
>  * the same info is on the mailing list, just use google
>    to find it
>
> All 100% true. Nevertheless, I say wiki. It would provide the least
> complicated route for new users to document things they discover
> during the learning process, which is *exactly* the phase that is so
> hard for the more experienced users to properly explain.
>
> Hopefully over time the various technical writers who volunteer often
> could rewrite this content into the formal collection that is
> distributed with Twisted proper, but in the meantime, a community-
> edited wiki would also provide another window into the community for
> new developers.
>
> I also would recommend MediaWiki. Yes, less than perfect, not as good
> as this, that, or the other wiki. In the interest of keeping the bar
> for entry low, however, we would be harnessing a familiarity with
> MediaWiki provided by exposure to Wikipedia.
>
> Pragmatism, not idealism, and all that...
>
> -phil
>

Well, if there *were* to be a change in the documentation system used, I
would push for moving to Sphinx, rather than a wiki.

* it's rapidly becoming a "standard" for docs in the Python world
* it has lots of neat  features
* it can be version controlled
* multiple output formats (html, chm, Latex(and therefore PDF), etc.)
* I just like it :)

Just sayin'

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/84214411/attachment.htm 

From dave at davebritton.com  Fri Jul 31 11:48:49 2009
From: dave at davebritton.com (Dave Britton)
Date: Fri, 31 Jul 2009 11:48:49 -0400
Subject: [Twisted-Python] Questions about adding documentation
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com><20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562bcc10907302211q4ec0f670kfa1820f398061eea@mail.gmail.com>
Message-ID: <18fe01ca11f6$66023c50$0500a8c0@yoda>


----- Original Message -----
From: Kevin Horn
"Sometimes I think what is needed is someone who knows basically nothing
about Twisted to go about learning it...and then writing down how they did
it."

I'm trying to do this, by keeping notes as I learn twisted to build a custom
email system. It's hard to admit how dumb I feel sometimes though.
Frequently what happens is I get stuck when something doesn't work, and
while searching through the docs I stumble upon something I already read
earlier and thought I understood, and in re-reading it I get an insight or
better understanding of what the doc means now that I can connect it to a
specific problem and I have more experience. That's not usually how I use or
experience documentation. Generally I use documentation to first find out
what the tool is able to do, what it's supposed to be good for and good at,
and then when I want to exploit one of those things I drill down to the
specific instructions for it. That's hard to do as the docs are now, proably
because the specific instructions depend so much on other specific
instructions you may not know about yet.

-Dave




From rlotun at gmail.com  Fri Jul 31 11:51:05 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 31 Jul 2009 16:51:05 +0100
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
Message-ID: <95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>

Hi All,

> Well, if there *were* to be a change in the documentation system used, I
> would push for moving to Sphinx, rather than a wiki.
>
> * it's rapidly becoming a "standard" for docs in the Python world
> * it has lots of neat? features
> * it can be version controlled
> * multiple output formats (html, chm, Latex(and therefore PDF), etc.)
> * I just like it :)

Rather than change the documentation system entirely, who don't we
just create a new resource for Twisted documentation - a Twisted
Documentation Wiki. At the very least it can be a repository of
various tips and tricks we happen to find, and maybe it can even be a
staging ground for documentation that makes it into Twisted proper.

Reza


-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com


From kevin.horn at gmail.com  Fri Jul 31 12:12:33 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 11:12:33 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <19058.64176.108008.963718@jon.es>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
	<19058.64176.108008.963718@jon.es>
Message-ID: <562bcc10907310912j103db2d5yb3a4876c28127bf5@mail.gmail.com>

On Fri, Jul 31, 2009 at 9:07 AM, Terry Jones <terry at jon.es> wrote:

> >>>>> "Michael" == Michael Hudson <micahel at gmail.com> writes:
> Michael> The accompanying paper is here:
> http://mumak.net/stuff/twisted-intro.html
>
> I agree, that's a really nicely done document.  It would be good to extend
> it, moving into a description and explanation of deferreds.
>
> Terry
>
>
Yes, indeed, a very nice paper.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/59c09025/attachment.htm 

From santiago.aguiar at gmail.com  Fri Jul 31 12:14:51 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Fri, 31 Jul 2009 13:14:51 -0300
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>	<4A72FD7E.8010205@gmail.com>	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
Message-ID: <4A73187B.3070400@gmail.com>

Reza Lotun wrote:
> Rather than change the documentation system entirely, who don't we
> just create a new resource for Twisted documentation - a Twisted
> Documentation Wiki. At the very least it can be a repository of
> various tips and tricks we happen to find, and maybe it can even be a
> staging ground for documentation that makes it into Twisted proper.
>   
Even if I re-suggested the wiki based documentation, I think it's 
important to be extra careful on how it's used. One thing I personally 
hate is projects whose documentation is basically wiki-based, and what 
you end having is a disconnected set of tips, many out of date, of how 
to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not 
'Documentation' :).

As you say, I think that the wiki could be useful as a staging ground to 
build a formal documentation, but it shouldn't be even suggested for new 
users, since what they will probably find are many unfinished ideas.

Alternatively, a separate doc repo with sphinx based doc could be built 
so that it will allow for collaborative development making clear that is 
a work in progress and a product with 'releases'. I say a different repo 
to avoid having to give commit access to code for people who are working 
on doc,  maybe same repo with different permissions would be better. And 
I suggest sphinx to a) start from scratch and add existing doc as we see 
it's relevant, b) have a more flexible base than HTML docs, and for the 
reasons mentioned by Kevin (plus I want to learn it :P).

--
Santiago.


From rlotun at gmail.com  Fri Jul 31 12:32:29 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 31 Jul 2009 17:32:29 +0100
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A73187B.3070400@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
Message-ID: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>

> Even if I re-suggested the wiki based documentation, I think it's
> important to be extra careful on how it's used. One thing I personally
> hate is projects whose documentation is basically wiki-based, and what
> you end having is a disconnected set of tips, many out of date, of how
> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
> 'Documentation' :).

I agree - the wiki shouldn't *replace* the documentation, but the
reality is I have loads of bookmarks of blog posts and discussions on
the mailing list, and it'd be nice if I could to go one place to find
all that type of info. A "recipe" or "cookbook" wiki might be all we
need, with the ability to comment on each. The Activestate Python
Cookbook is kinda what I'm thinking about:
http://code.activestate.com/recipes/langs/python/

> Alternatively, a separate doc repo with sphinx based doc could be built
> so that it will allow for collaborative development making clear that is
> a work in progress and a product with 'releases'. I say a different repo
> to avoid having to give commit access to code for people who are working
> on doc, ?maybe same repo with different permissions would be better. And
> I suggest sphinx to a) start from scratch and add existing doc as we see
> it's relevant, b) have a more flexible base than HTML docs, and for the
> reasons mentioned by Kevin (plus I want to learn it :P).

I haven't yet looked at lore or sphinx, but is there a way to support
sphinx via lore?

Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com


From phil at bubblehouse.org  Fri Jul 31 12:52:52 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 12:52:52 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
Message-ID: <819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>

On Jul 31, 2009, at 12:32 PM, Reza Lotun wrote:
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I  
>> personally
>> hate is projects whose documentation is basically wiki-based, and  
>> what
>> you end having is a disconnected set of tips, many out of date, of  
>> how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but  
>> not
>> 'Documentation' :).
>
> I agree - the wiki shouldn't *replace* the documentation, but the
> reality is I have loads of bookmarks of blog posts and discussions on
> the mailing list, and it'd be nice if I could to go one place to find
> all that type of info. A "recipe" or "cookbook" wiki might be all we
> need, with the ability to comment on each. The Activestate Python
> Cookbook is kinda what I'm thinking about:
> http://code.activestate.com/recipes/langs/python/

I agree with all of the above. A wiki is nice when there is no  
suitable formal documentation available for a topic. I think I may  
have used the aphorism once before, "documentation is like sex, when  
it's good, it's great, when it's bad it's still better than  
nothing." (no offense intended to any with delicate sensibilities,  
btw ;-)

My only question about Sphinx, isn't it just for API docs? Also, can  
it interpret Zope interfaces like pydoctor can?

Personally I'm pretty happy with the API docs (although there's always  
room for improvement in the actual docstrings), I think if there's a  
documentation need that's more dire, it's the long-form instructional  
kind.

I just don't want to sidetrack *that* discussion by getting into API  
documentation concerns.

-phil


From kevin.horn at gmail.com  Fri Jul 31 12:55:08 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 11:55:08 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A73187B.3070400@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
Message-ID: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:14 AM, Santiago Aguiar <santiago.aguiar at gmail.com
> wrote:

> Reza Lotun wrote:
> > Rather than change the documentation system entirely, who don't we
> > just create a new resource for Twisted documentation - a Twisted
> > Documentation Wiki. At the very least it can be a repository of
> > various tips and tricks we happen to find, and maybe it can even be a
> > staging ground for documentation that makes it into Twisted proper.
> >
> Even if I re-suggested the wiki based documentation, I think it's
> important to be extra careful on how it's used. One thing I personally
> hate is projects whose documentation is basically wiki-based, and what
> you end having is a disconnected set of tips, many out of date, of how
> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
> 'Documentation' :).


In my experience, this what happens to every project that a) uses a wiki for
core documentation and b) has more than one person editing the wiki.

>
>
> As you say, I think that the wiki could be useful as a staging ground to
> build a formal documentation, but it shouldn't be even suggested for new
> users, since what they will probably find are many unfinished ideas.
>
> Alternatively, a separate doc repo with sphinx based doc could be built
> so that it will allow for collaborative development making clear that is
> a work in progress and a product with 'releases'. I say a different repo
> to avoid having to give commit access to code for people who are working
> on doc,  maybe same repo with different permissions would be better. And
> I suggest sphinx to a) start from scratch and add existing doc as we see
> it's relevant, b) have a more flexible base than HTML docs, and for the
> reasons mentioned by Kevin (plus I want to learn it :P).
>
> --
> Santiago.
>
>
I'd love to see a documentation "reboot" using Sphinx, but not if it's going
to be a half-baked, never-finished project.

Since Jessica started this thread, and is the only person (so far) who has
given any sort of commitment to actually working on new/revised docs, I'd
really like to hear her opinion.

Jessica?  You still out there?  Hope we haven't scared you off...

I'd also be interested in hearing the opinions of some of the core Twisted
guys on the various things we've been talking about here.  What do you guys
think about using a different docs system than what is being used now?  If
you guys are all dead set against it, there's not much point hashing out the
details...

Also, what do the Twisted core devs think about having a secondary
wiki/cookbook thingy outside of the core docs?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/0f6218ba/attachment.htm 

From kevin.horn at gmail.com  Fri Jul 31 13:11:25 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:11:25 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
Message-ID: <562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:52 AM, Phil Christensen <phil at bubblehouse.org>wrote:

>
> My only question about Sphinx, isn't it just for API docs? Also, can
> it interpret Zope interfaces like pydoctor can?
>

Sphinx is great for writing all sorts of docs.  At its core, it's basically
a system for gluing together a bunch of RestructiredText documents and
automatically cross-linking them, building an index, a javascript-based
search capability, handling tables of contents, and outputing the results in
various formats.

But then it's extensible...so you can write plugins for it.  One of the
earliest (and included with the base package) is the "autodoc" extension
which makes generating nice clean API docs from your docstrings.  What it
does _not_ do is process all those epydoc bits that are in Twisted's
docstrings, though you might be able to write an extension for that.  It
expects docstrings to be in RestructuredText.

AFAIK Sphinx does not have support for Zope interfaces, but I haven't looked
in a while, and I seem to remember that someone was working on adding
it...though I may be making that up.

At any rate, I think using Sphinx for Twisted's API docs (at this juncture,
anyway) would be a bad idea.  But Sphinx excels at the kind of "long-form,
instructional" docs you mention below.  I use it for all my PHP projects
(which of course, the autodoc extension doesn't work on), and I'm really
happy with it.


>
> Personally I'm pretty happy with the API docs (although there's always
> room for improvement in the actual docstrings), I think if there's a
> documentation need that's more dire, it's the long-form instructional
> kind.
>

Agreed.


>
> I just don't want to sidetrack *that* discussion by getting into API
> documentation concerns.


Double Agreed.


>
>
> -phil
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/d915c7a1/attachment.htm 

From exarkun at divmod.com  Fri Jul 31 13:11:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 31 Jul 2009 13:11:36 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
Message-ID: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>

On Fri, 31 Jul 2009 11:55:08 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
> [snip]
>
>I'd love to see a documentation "reboot" using Sphinx, but not if it's going
>to be a half-baked, never-finished project.
>
> [snip]
>
>I'd also be interested in hearing the opinions of some of the core Twisted
>guys on the various things we've been talking about here.  What do you guys
>think about using a different docs system than what is being used now?  If
>you guys are all dead set against it, there's not much point hashing out the
>details...

I don't find that people trying to use Twisted complain about the
presentation of the documentation.  I find that they complain about
its content.

So, I think that it's the content that needs to be addressed.  I don't
*think* that switching to Sphinx (or anything else) is going to make any
different to the content of the current documentation.  One might argue
that Lore is a significant barrier to entry for new contributions to the
documentation, but you'd have to try pretty hard to convince me.  Pretty
much anyone can write some simple (Lore x)html.  And if they can't, then
there are other people willing to translate plain text into Lore input
documents.

>Also, what do the Twisted core devs think about having a secondary
>wiki/cookbook thingy outside of the core docs?

As a staging area for development of future core docs, I think I would
recommend using a version control system (perhaps a distributed one),
not a wiki.

As something intended to be user-facing, I don't think it's a great idea.
Of course, there *is* a wiki hosted on the website already...  And it has
some documentation on it...  So what's being proposed, exactly? :)

Obviously I'm speaking for myself, not for all the other people who have
contributed to Twisted.

Jean-Paul


From jessica.mckellar at gmail.com  Fri Jul 31 13:16:39 2009
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Fri, 31 Jul 2009 13:16:39 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
Message-ID: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>

I am not scared off. In fact, I'm updating the
wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
right now.

I think adding content to and restructuring the howtos gives me a full plate
already, and to be honest I'm more interested in the content than the
presentation. People who have more experience with the successes and
failures of the various ways to organize project content online can make
that decision and I'd happily help move content over to another format
should that be necessary.

Thanks for all the help and feedback, everyone.

-Jessica

On Fri, Jul 31, 2009 at 12:55 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Fri, Jul 31, 2009 at 11:14 AM, Santiago Aguiar <
> santiago.aguiar at gmail.com> wrote:
>
>> Reza Lotun wrote:
>> > Rather than change the documentation system entirely, who don't we
>> > just create a new resource for Twisted documentation - a Twisted
>> > Documentation Wiki. At the very least it can be a repository of
>> > various tips and tricks we happen to find, and maybe it can even be a
>> > staging ground for documentation that makes it into Twisted proper.
>> >
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I personally
>> hate is projects whose documentation is basically wiki-based, and what
>> you end having is a disconnected set of tips, many out of date, of how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>> 'Documentation' :).
>
>
> In my experience, this what happens to every project that a) uses a wiki
> for core documentation and b) has more than one person editing the wiki.
>
>>
>>
>> As you say, I think that the wiki could be useful as a staging ground to
>> build a formal documentation, but it shouldn't be even suggested for new
>> users, since what they will probably find are many unfinished ideas.
>>
>> Alternatively, a separate doc repo with sphinx based doc could be built
>> so that it will allow for collaborative development making clear that is
>> a work in progress and a product with 'releases'. I say a different repo
>> to avoid having to give commit access to code for people who are working
>> on doc,  maybe same repo with different permissions would be better. And
>> I suggest sphinx to a) start from scratch and add existing doc as we see
>> it's relevant, b) have a more flexible base than HTML docs, and for the
>> reasons mentioned by Kevin (plus I want to learn it :P).
>>
>> --
>> Santiago.
>>
>>
> I'd love to see a documentation "reboot" using Sphinx, but not if it's
> going to be a half-baked, never-finished project.
>
> Since Jessica started this thread, and is the only person (so far) who has
> given any sort of commitment to actually working on new/revised docs, I'd
> really like to hear her opinion.
>
> Jessica?  You still out there?  Hope we haven't scared you off...
>
> I'd also be interested in hearing the opinions of some of the core Twisted
> guys on the various things we've been talking about here.  What do you guys
> think about using a different docs system than what is being used now?  If
> you guys are all dead set against it, there's not much point hashing out the
> details...
>
> Also, what do the Twisted core devs think about having a secondary
> wiki/cookbook thingy outside of the core docs?
>
> Kevin Horn
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/6b443815/attachment.htm 

From phil at bubblehouse.org  Fri Jul 31 13:22:36 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 13:22:36 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
References: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
Message-ID: <75FF110B-18AE-4C34-B61B-AB6E9EA4F5F8@bubblehouse.org>

On Jul 31, 2009, at 1:11 PM, Jean-Paul Calderone wrote:
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.

What I was suggesting originally was that a wiki would be a staging  
ground for those core docs. IMO, traditional version control is not  
generally well-suited for collaborative document development.

I guess what I'm thinking is, no one likes writing docs, so when we  
have to good fortune to encounter someone who does, let's make it as  
easy as possible.

> As something intended to be user-facing, I don't think it's a great  
> idea.
> Of course, there *is* a wiki hosted on the website already...  And  
> it has
> some documentation on it...  So what's being proposed, exactly? :)

True. I guess there's only two considerations.

  1. Using the current Trac installation for a user-edited wiki might
     convey that the contents are endorsed by Twisted proper.

  2. Although I've become fairly used to it, Trac's wiki isn't the
     greatest, and more importantly, Trac itself sometimes seems to
     be held together with bubble gum and scotch tape.

-phil



From kevin.horn at gmail.com  Fri Jul 31 13:34:22 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:34:22 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
Message-ID: <562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:11 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 31 Jul 2009 11:55:08 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
> > [snip]
> >
> >I'd love to see a documentation "reboot" using Sphinx, but not if it's
> going
> >to be a half-baked, never-finished project.
> >
> > [snip]
> >
> >I'd also be interested in hearing the opinions of some of the core Twisted
> >guys on the various things we've been talking about here.  What do you
> guys
> >think about using a different docs system than what is being used now?  If
> >you guys are all dead set against it, there's not much point hashing out
> the
> >details...
>
> I don't find that people trying to use Twisted complain about the
> presentation of the documentation.  I find that they complain about
> its content.
>

True enough.  And in my case, at least, navigation.


>
> So, I think that it's the content that needs to be addressed.  I don't
> *think* that switching to Sphinx (or anything else) is going to make any
> different to the content of the current documentation.  One might argue
> that Lore is a significant barrier to entry for new contributions to the
> documentation, but you'd have to try pretty hard to convince me.  Pretty
> much anyone can write some simple (Lore x)html.  And if they can't, then
> there are other people willing to translate plain text into Lore input
> documents.
>

I don't think using Lore is a problem particularly...but it need to be
documented more clearly, and all in one place.  Right now, there's stuff on
the tracwiki, in the main docs, on the mailing list, etc.

Particularly, the answers to the questions:
- How do I build the documentation using Lore?
- What is the Lore xhtml syntax, and how should I use it?
- What is the process for making a documentation contribution?

Please note, that I was originally suggesting Sphinx primarily as an
alternative to a wiki-based system, rather than as a replacement for
Lore...but the conversation kind of mutated. :)



> >Also, what do the Twisted core devs think about having a secondary
> >wiki/cookbook thingy outside of the core docs?
>
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.
>

Agreed, wiki = yuck (for this).  Even as a "staging ground".

IMO trac-wiki is really only suited for "marketing" type content.


> As something intended to be user-facing, I don't think it's a great idea.
> Of course, there *is* a wiki hosted on the website already...  And it has
> some documentation on it...  So what's being proposed, exactly? :)
>
> Obviously I'm speaking for myself, not for all the other people who have
> contributed to Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/528ff578/attachment.htm 

From kevin.horn at gmail.com  Fri Jul 31 13:39:00 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:39:00 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
	<562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>
Message-ID: <562bcc10907311039m7ae99bd9la281ef5bbc119b4a@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:11 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Fri, Jul 31, 2009 at 11:52 AM, Phil Christensen <phil at bubblehouse.org>wrote:
>
>>
>> My only question about Sphinx, isn't it just for API docs? Also, can
>> it interpret Zope interfaces like pydoctor can?
>>
>
> AFAIK Sphinx does not have support for Zope interfaces, but I haven't
> looked in a while, and I seem to remember that someone was working on adding
> it...though I may be making that up.
>

OK, having Googled around, it seems I was *not* making this up.  There is
some support for Zope interfaces in Sphinx, though it looks pretty minimal
at the moment.  Just, you know, in case anyone was interested. :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/62d69258/attachment.htm 

From phil at bubblehouse.org  Fri Jul 31 13:57:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 13:57:32 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
Message-ID: <6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>


On Jul 31, 2009, at 1:34 PM, Kevin Horn wrote:
> >Also, what do the Twisted core devs think about having a secondary
> >wiki/cookbook thingy outside of the core docs?
>
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.
>
> Agreed, wiki = yuck (for this).  Even as a "staging ground".

Okay, tell me again what exactly the problem is with a wiki?

I feel like the same thing happens every time we discuss  
documentation. Someone makes a recommendation to do it the easy way,  
and someone else dismisses any solution that doesn't satisfy their  
programmer's OCD.

Yes, I'd love to see version controlled XML documentation that adheres  
to a common writing style that is enforced across the board, but this  
talk has been happening for *YEARS* and there has been little  
improvement of significance (I have to emphasize that I understand a  
number of people have worked very hard on this, and I don't mean to  
denigrate their contributions).

People keep telling me wikis are bad, but I'm still not getting the  
'why' -- I just hear "wikis are bad for documentation" repeatedly  
presented as a fact.

They do seem to work reasonably well for scores of other projects.

PRAGMATISM!!! ;-)

-phil


From kevin.horn at gmail.com  Fri Jul 31 14:00:30 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 13:00:30 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
Message-ID: <562bcc10907311100g2c848599v5a086577fdcf12cd@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:16 PM, Jessica McKellar <
jessica.mckellar at gmail.com> wrote:

> I am not scared off. In fact, I'm updating the
> wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
> right now.
>

Great!  I think that this is a critical first step.


> I think adding content to and restructuring the howtos gives me a full
> plate already, and to be honest I'm more interested in the content than the
> presentation.


Fantastic.  Content is definitely more important, and as this thread proves,
its easy to get bogged down in the "how" rather than the "what".


> People who have more experience with the successes and failures of the
> various ways to organize project content online can make that decision and
> I'd happily help move content over to another format should that be
> necessary.
>
> Thanks for all the help and feedback, everyone.
>
> -Jessica


Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/b651749d/attachment.htm 

From kevin.horn at gmail.com  Fri Jul 31 14:15:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 13:15:01 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
	<6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
Message-ID: <562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:57 PM, Phil Christensen <phil at bubblehouse.org>wrote:

>
> On Jul 31, 2009, at 1:34 PM, Kevin Horn wrote:
> > >Also, what do the Twisted core devs think about having a secondary
> > >wiki/cookbook thingy outside of the core docs?
> >
> > As a staging area for development of future core docs, I think I would
> > recommend using a version control system (perhaps a distributed one),
> > not a wiki.
> >
> > Agreed, wiki = yuck (for this).  Even as a "staging ground".
>
> Okay, tell me again what exactly the problem is with a wiki?
>
> I feel like the same thing happens every time we discuss
> documentation. Someone makes a recommendation to do it the easy way,
> and someone else dismisses any solution that doesn't satisfy their
> programmer's OCD.
>
> Yes, I'd love to see version controlled XML documentation that adheres
> to a common writing style that is enforced across the board, but this
> talk has been happening for *YEARS* and there has been little
> improvement of significance (I have to emphasize that I understand a
> number of people have worked very hard on this, and I don't mean to
> denigrate their contributions).
>
> People keep telling me wikis are bad, but I'm still not getting the
> 'why' -- I just hear "wikis are bad for documentation" repeatedly
> presented as a fact.
>
> They do seem to work reasonably well for scores of other projects.
>
> PRAGMATISM!!! ;-)
>
> -phil
>

Well, pragmatism is my basic reason for not liking wikis for docs. :)

For me, it boils down to every time I've worked on or with a project that
used wikis for docs (assuming that the project is of at least moderate size
and has more than a couple of editors) that documentation has been
terrible.  It's ended up as a disjointed mess, that's hard to navigate, and
has a bajillion half-completed thoughts, and lots of outdated cruft.

Of course, some could say the same of (at least parts of) the current
Twisted documentation. ;)

It's not that there's anything wrong with wiki's per se, it's just that they
encourage "bad habits".  If there were a solid editorial process in place,
where someone was specifically responsible for reviewing, editing,
splitting, merging, and correcting documents, then a wiki could probably
work.  But I think it's easier to get coherent docs using tools that
encourage "good habits".

Obviously my definitions of "good habits" and "bad habits" are pretty
vague...and not entirely spelled out even in my own mind.  Er, sorry about
that...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/8b6691cb/attachment.htm 

From cyli.ying.li at gmail.com  Fri Jul 31 15:37:00 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Fri, 31 Jul 2009 15:37:00 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A72FD7E.8010205@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
Message-ID: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>

On Fri, Jul 31, 2009 at 10:19 AM, Santiago
Aguiar<santiago.aguiar at gmail.com> wrote:
> My suggestion would be that more than *adding* documentation, I would
> suggest to first search-and-destroy deprecated documentation. For me,
> one of the most frustrating parts of using twisted was reading through
> the twisted core doc, trying to do things and failing, and then
> accessing #twisted and get people tell me thinks like 'oh,
> tap/tac/tml/mktap are no longer used', or things like that (I don't yet
> know which ones are supposed to be used and which don't).


Something that I find irritating about a lot of documentation that I
read is that it is not dated.  All the twisted docs are labeled with a
version (currently 8.2.0) but this is meaningless to me.  I think a
big improvement would be putting in a small bit of context around the
documentation , such as:

* when the howto/tutorial was last updated
* what version (of deferreds/imap/whatever the howto/tutorial is
about) the howto/tutorial was written for

What would be even more useful, although it would also be a lot more
work, is to perhaps link to a diff between the code as it is now and
as it was when the tutorial was written.  Or just a changelog.

Also, I oppose deleting outdated documentation outright, as I think
limited information is better than none.  However, I think it should
be clearly marked as such, so readers understand that the doc may not
give them correct instructions.

(This does not apply to the API docs as since the API docs are
automatically generated, they should always current given the Twisted
coding standards.)


From phil at bubblehouse.org  Fri Jul 31 16:01:03 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 16:01:03 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
	<6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
	<562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>
Message-ID: <5224CFB1-7876-4D1F-942D-376244DA5DD4@bubblehouse.org>

On Jul 31, 2009, at 2:15 PM, Kevin Horn wrote:
> Well, pragmatism is my basic reason for not liking wikis for docs. :)
>
> For me, it boils down to every time I've worked on or with a project  
> that used wikis for docs (assuming that the project is of at least  
> moderate size and has more than a couple of editors) that  
> documentation has been terrible.  It's ended up as a disjointed  
> mess, that's hard to navigate, and has a bajillion half-completed  
> thoughts, and lots of outdated cruft.
>
> Of course, some could say the same of (at least parts of) the  
> current Twisted documentation. ;)

Indeed; I wouldn't use those particular words because of their  
pejorative qualities, but I think the end result is that way because  
of the level of interest in maintaining documentation for a particular  
project. That's a different issue, but it is the reason why I'd like  
the documentation process to be easy for 'regular developers' (e.g.,  
not the proto-deities that make up the core devs ;-) to contribute to.

> It's not that there's anything wrong with wiki's per se, it's just  
> that they encourage "bad habits".  If there were a solid editorial  
> process in place, where someone was specifically responsible for  
> reviewing, editing, splitting, merging, and correcting documents,  
> then a wiki could probably work.  But I think it's easier to get  
> coherent docs using tools that encourage "good habits".
>
> Obviously my definitions of "good habits" and "bad habits" are  
> pretty vague...and not entirely spelled out even in my own mind.   
> Er, sorry about that...

Well, honestly, I don't disagree with you at all. A good set of  
documentation requires a great deal of work, and the amount of  
rewriting and fact-checking required is proportional to the amount of  
development going on. Twisted development has slowed somewhat over the  
years in a few areas, but it still moves quite quickly in others.

I don't see any documentation system making this go away. It will  
always have to be edited and revised, and it will often be out of date.

I think the issue is one of not 'scaring away' potential writers with  
a cumbersome process. Correct me if I'm wrong, but the current process  
for writing Twisted documentation is as follows (at least for people  
without commit access):

  1. check out a directory of Lore XHTML files
  2. make my changes or create a new file, making sure not
     to work against the sparsely documented schema ;-)
  3. generate a patch
  4. create a ticket, attach the patch
  5. bug someone on #twisted or the mailing list to do a review
  6. wait some unspecified amount of time
  7. code is merged into trunk
  8. wait for the live docs to be regenerated

Compared to a wiki:

  1. create an account (let's assume it's email-verified)
  2. write or edit some docs
  3. see your docs live immediately

Which do you think is going to be a more compelling process for people  
to get involved with? The first process is straight from the software  
development playbook, so it seems like a good idea, but I don't agree  
with the need for the same regimented process to exist w.r.t.  
documentation, especially when we are in such dire straights in that  
regard.

I'm not really married to the idea of a wiki per se, it's just that it  
seems to be the closest thing that provides contributors a low bar for  
entry and instant gratification by seeing their work online (and on a  
list of recent changes). Plus, it addresses a concern Ying Li just  
posted as I was writing this: you automatically get revisions, last- 
modified dates, and diffs of those revisions.

Yes, some of this documentation will not be of the quality we would  
like it to be. But it will still exist, which is a hell of a lot  
better than nothing. Plus, it gives the technical writers we  
occasionally see interest from some source material to work with in  
the first place, which has got to be helpful towards the ultimate goal  
of formally written core documentation.

-phil


From listsin at integrateddevcorp.com  Fri Jul 31 16:04:18 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 16:04:18 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
Message-ID: <4C3E789F-A649-43E8-9C2A-42B00286625D@integrateddevcorp.com>


On Jul 31, 2009, at 3:37 PM, Ying Li wrote:

> On Fri, Jul 31, 2009 at 10:19 AM, Santiago
> Aguiar<santiago.aguiar at gmail.com> wrote:
>> My suggestion would be that more than *adding* documentation, I would
>> suggest to first search-and-destroy deprecated documentation. For me,
>> one of the most frustrating parts of using twisted was reading  
>> through
>> the twisted core doc, trying to do things and failing, and then
>> accessing #twisted and get people tell me thinks like 'oh,
>> tap/tac/tml/mktap are no longer used', or things like that (I don't  
>> yet
>> know which ones are supposed to be used and which don't).
>
>
> Something that I find irritating about a lot of documentation that I
> read is that it is not dated.  All the twisted docs are labeled with a
> version (currently 8.2.0) but this is meaningless to me.  I think a
> big improvement would be putting in a small bit of context around the
> documentation , such as:
>
> * when the howto/tutorial was last updated
> * what version (of deferreds/imap/whatever the howto/tutorial is
> about) the howto/tutorial was written for

That is one of my pet peeves about project documents of any type.    
Tutorials, and examples especially.  There's nothing more frustrating  
than getting 1/2 way through a tutorial, only to realize that the rest  
of it is just not going to work with the current version and that all  
that effort was wasted because that's not how it's done any more.

If it's not dated, and perhaps tagged with the first version with  
which it was released, and the most recent version at which it was  
modified, it's impossible to figure out what's current, relevent, and  
likely to actually work with the current release.

S



From lvh at laurensvh.be  Fri Jul 31 16:20:42 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 31 Jul 2009 22:20:42 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
	<cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
Message-ID: <cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>

Also, regarding the message classes at every level: does this include
the top level? I thought the top level (eg most abstracted) would
contain a number of callbacks, such as:

    positionReceived(self, latitude, longitude)
    positionErrorReceived(self, hdop, vdop, pdop)
    altitudeReceived(self, altitude)
    altitudeErrorReceived(self, ...)

Et cetera. A sentence at this level seems a bit superfluous, but I can
see it being somewhat useful internally.

Laurens


From glyph at twistedmatrix.com  Fri Jul 31 16:23:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 16:23:49 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
Message-ID: <d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>

On Fri, Jul 31, 2009 at 1:16 PM, Jessica McKellar <
jessica.mckellar at gmail.com> wrote:

> I am not scared off. In fact, I'm updating the
> wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
> right now.
>

I see the edits in the timeline.  They look great!  Thanks! :-D

Do you have any ideas for improving the front page as well?  I think the
random-list-of-links approach to its information architecture hasn't been
terribly effective.

I think adding content to and restructuring the howtos gives me a full plate
> already, and to be honest I'm more interested in the content than the
> presentation.


This is good to hear.  I think it should definitely be our first priority.

Thanks for all the help and feedback, everyone.
>

Please don't hesitate to ask for any other help or feedback you might need.

People who have more experience with the successes and failures of the
> various ways to organize project content online can make that decision (...)


I don't want to stifle the possible discussion of using a different system,
but for those of you interested in switching to Sphinx or something else,
there are several things you need to address:

First and foremost, you need to make a commitment to *maintaining* the
documentation infrastructure.  This includes teaching other folks how to use
it.

Second, you need to submit a complete proposal.  This means we need a clear
enumeration of what benefits the different documentation technology will
have; this needs to be written up in one place so that we can evaluate it
and discuss it without chasing down a million little email threads or ticket
comments.

Such a proposal also needs to address integration of automated testing and
automated doc-building with the examples.  You'll need to set up a builder
that will replace our current documentation builder.  You'll need to update
all the relevant wiki pages.

Third, you need to address the transition plan.  Just translating all the
documentation by hand is a possibility, but it has potential problems.  What
happens if we discover a problem with the new tool?  How do we roll back?

and I'd happily help move content over to another format should that be
> necessary.


Lucky for you, Jessica appears to have volunteered to do this for you :-).
(You might want to confirm that first, though.)

I certainly wouldn't mind switching to a tool that has lots of fancy
features that lore lacks, but a hit-and-run approach where we just switch
tools in the hopes that it will make something better may leave us in a
worse situation than we already are.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/4b1f3f28/attachment-0001.htm 

From glyph at twistedmatrix.com  Fri Jul 31 16:28:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 16:28:22 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
	<cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
	<cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>
Message-ID: <d9047f780907311328m22351495yd23ec4583cfb44bd@mail.gmail.com>

On Fri, Jul 31, 2009 at 4:20 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Also, regarding the message classes at every level: does this include
> the top level? I thought the top level (eg most abstracted) would
> contain a number of callbacks, such as:
>
>    positionReceived(self, latitude, longitude)
>    positionErrorReceived(self, hdop, vdop, pdop)
>    altitudeReceived(self, altitude)
>    altitudeErrorReceived(self, ...)
>
> Et cetera. A sentence at this level seems a bit superfluous, but I can
> see it being somewhat useful internally.


I don't have a strong preference either way.  My point about having a
"sentenceReceived" at the lower levels has more to do with the question of
where to factor the dispatch: *interfaces* typically shouldn't have
prefix_Foo methods on them, since you can always have an unexpected
prefix_Bar if the dispatch mechanism is expanded.  However,
"positionReceived" has nice, well-defined semantics of its own, so the
interface you've outlined here sounds good to me.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/6bf2d6be/attachment.htm 

From ezyang at MIT.EDU  Fri Jul 31 18:40:59 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Fri, 31 Jul 2009 18:40:59 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248986420-sup-4086@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <1249079820-sup-3441@javelin>

You can view an initial draft of the rewrite here:

http://ezyang.com/twisted/defer2.html

For reference, this is the planned outline (X means done, ? means
almost done):

X Synchronous to Asynchronous: The Method to the Madness
    X Convert synchronous code to asynchronous code
    X Why asynchronous?
- Deferred
    X Basic operation
    - Convenience primitives (succeed, fail, execute, maybeDeferred)
    ? Callback/Errback chaining
    - Timeouts
- Composing deferreds
    - DeferredList/gatherResults
    - chainDeferred
- Advanced topics
    - Deferred asynchronous primitives
    - Sugar syntax

Cheers,
Edward

P.S. Please CC me in your replies! Thanks.


From itamar at itamarst.org  Fri Jul 31 22:16:39 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 31 Jul 2009 22:16:39 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249079820-sup-3441@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>  <1249079820-sup-3441@javelin>
Message-ID: <1249092999.3782.84.camel@pintsize>

On Fri, 2009-07-31 at 18:40 -0400, Edward Z. Yang wrote:
> You can view an initial draft of the rewrite here:
> 
> http://ezyang.com/twisted/defer2.html
> 
> For reference, this is the planned outline (X means done, ? means
> almost done):
> 
> X Synchronous to Asynchronous: The Method to the Madness
>     X Convert synchronous code to asynchronous code
>     X Why asynchronous?

It's great you're working on this! The docs on deferreds certainly need
help.

The problem with this is that it perpetuates the misunderstanding the
Deferreds *make* things asynchronous, even with the intro that says
otherwise. I think it's better to assume already asynchronous code,
handling the transition from synchronous to async in an intro event loop
howto. 

A better comparative exposition might be with normal callbacks, e.g.:

"def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
Deferred".

At the very least having that async but callbacky version in the middle
helps understanding.

It also omits half the story: how you *create* Deferreds. There should
be a section on that as well.

An example involving a parser, where you just wave your hands about who
pushes data in to the parser exactly (so no need to go into event loop
details), may work well. In particular, the object that wants the result
of the parsing wants to get parse errors, *not* whoever pushes data in.
Often it's same object, but not always. Deferreds help with that.





From itamar at itamarst.org  Fri Jul 31 22:25:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 31 Jul 2009 22:25:16 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
Message-ID: <1249093516.3782.89.camel@pintsize>

On Fri, 2009-07-31 at 15:37 -0400, Ying Li wrote:

> version (currently 8.2.0) but this is meaningless to me.  I think a
> big improvement would be putting in a small bit of context around the
> documentation , such as:
> 
> * when the howto/tutorial was last updated
> * what version (of deferreds/imap/whatever the howto/tutorial is
> about) the howto/tutorial was written for
> 
> What would be even more useful, although it would also be a lot more
> work, is to perhaps link to a diff between the code as it is now and
> as it was when the tutorial was written.  Or just a changelog.

Could you file some bugs to that effect, so we don't forget these
suggestions? Thanks!




From listsin at integrateddevcorp.com  Fri Jul 31 22:46:25 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 22:46:25 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <1249093516.3782.89.camel@pintsize>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
	<1249093516.3782.89.camel@pintsize>
Message-ID: <3274AEB9-10CC-44C9-A334-4A7CBB418C38@integrateddevcorp.com>


On Jul 31, 2009, at 10:25 PM, Itamar Shtull-Trauring wrote:

> On Fri, 2009-07-31 at 15:37 -0400, Ying Li wrote:
>
>> version (currently 8.2.0) but this is meaningless to me.  I think a
>> big improvement would be putting in a small bit of context around the
>> documentation , such as:
>>
>> * when the howto/tutorial was last updated
>> * what version (of deferreds/imap/whatever the howto/tutorial is
>> about) the howto/tutorial was written for
>>
>> What would be even more useful, although it would also be a lot more
>> work, is to perhaps link to a diff between the code as it is now and
>> as it was when the tutorial was written.  Or just a changelog.
>
> Could you file some bugs to that effect, so we don't forget these
> suggestions? Thanks!

Sorry for not being familiar with the overall system, but where would  
one put a suggestion regarding the overall date/time/version stamping  
of every document in the system?

I'd be happy to propose a standard format but I'm not sure where to  
put it so it's universally applied (across all products).

I know Jessica McKellar <jessica.mckellar at gmail.com> started working  
on the "ContributingToTwistedLabs" wiki how-to-edit-documentation docs.

Can we get it in there, or where would be the best place to get this  
started?

I've CC's Jessica to see how she thinks this might be integrated as  
well.

Thanks,

S
AKA/ssteiner
AKA/ssteinerX at gmail.com



From listsin at integrateddevcorp.com  Fri Jul 31 23:10:37 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 23:10:37 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
Message-ID: <7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>


On Jul 31, 2009, at 4:23 PM, Glyph Lefkowitz wrote:
...
> I certainly wouldn't mind switching to a tool that has lots of fancy  
> features that lore lacks, but a hit-and-run approach where we just  
> switch tools in the hopes that it will make something better may  
> leave us in a worse situation than we already are.

I'm wondering if there's an inventory of the various types of  
documentation systems currently in use.

Not just "systems" but mostly "stray documentation."

 From this discussion, it doesn't seem that the Lore formatted and  
built docs are as much of a problem as the fragmentation into  
tracwiki, main docs, mailing list, etc. that we've discovered as we've  
been discussing it.

Since "everything" is not in the build system anyway, perhaps starting  
a branch, in a new build system (Sphinx), where we pull things in, one  
chunk at a time, will not be a hit and run approach, but will force  
the reorganization of the docs into one, actually unified format.

Presentation is another issue, for another day.

Then we can all see what's documented, what's not, what's old and out  
of date, etc.

With a dating system as discussed elsewhere, the docs will actually  
improve over time instead of becoming more fractured and out of date  
with no traceability.

Just my 13.4 cents.

S




From cyli.ying.li at gmail.com  Fri Jul 31 23:22:50 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Fri, 31 Jul 2009 23:22:50 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <1249093516.3782.89.camel@pintsize>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
	<1249093516.3782.89.camel@pintsize>
Message-ID: <668503780907312022x5991cf96k7116e60ad75ec816@mail.gmail.com>

On Fri, Jul 31, 2009 at 10:25 PM, Itamar
Shtull-Trauring<itamar at itamarst.org> wrote:
> Could you file some bugs to that effect, so we don't forget these
> suggestions? Thanks!


Done:  http://twistedmatrix.com/trac/ticket/3945

The formatting on the description is off though (I tried to make
bullet points and failed), and I don't have permission to change it.


From glyph at twistedmatrix.com  Fri Jul 31 23:27:12 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 23:27:12 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
Message-ID: <d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:10 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

> Since "everything" is not in the build system anyway, perhaps starting
> a branch, in a new build system (Sphinx), where we pull things in, one
> chunk at a time, will not be a hit and run approach, but will force
> the reorganization of the docs into one, actually unified format.
>

"This time for sure, Rocky!"

If you actually want to volunteer to do all of the work for this (which I
outlined in my previous message) then feel free.  But attempts to fix the
world by blowing it up are rarely successful.  A better approach would be to
incrementally enumerate the things which have been covered on the mailing
list and wiki, then pull them into the lore docs one at a time.

Of course, the people who have actually volunteered their time, rather than
their suggestions, seem to agree with this general outline :).

Something you have to keep in mind with grand efforts like "let's rewrite
all the docs in the hottest new ReFrumpledText format" is that Twisted is a
product mostly of people's spare time, and therefore the person working on
it may suddenly become busy and lose interest.  When they *do* lose interest
? possibly for a year or longer ? we need to make sure that things are in a
good state in the meanwhile, and their efforts have improved things.  Each
small improvement to the lore documentation will improve the overall
documentation situation.

As you put it, a big problem here is:

the fragmentation into tracwiki, main docs, mailing list, etc
>

if the fragmentation is instead into tracwiki, main docs, sphinx docs,
mailing list, etc, the problem has actually gotten *worse*, not better.
Especially if the sphinx person walks away halfway through the effort, and
then some other person comes along and says, "oh hey, what we should *really
* do is rewrite all the docs in YAML", then rewrites another small subset of
them and leaves.

I hope you can see why I want to hold on to our current toolchain until we
have someone around who has demonstrated a much deeper commitment to
documentation than anyone yet has.  For example, Steve, if you close 100
existing documentation tickets in the next week, then make the exact same
suggestion again, I'll be a lot less resistant ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090731/02ef6e87/attachment-0001.htm 

From ezyang at MIT.EDU  Fri Jul 31 23:35:40 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Fri, 31 Jul 2009 23:35:40 -0400
Subject: [Twisted-Python] [Fwd: Re:  Deferred documentation rewrite]
In-Reply-To: <1249093589.3782.91.camel@pintsize>
References: <1249093589.3782.91.camel@pintsize>
Message-ID: <1249097275-sup-1055@javelin>

Excerpts from Itamar Shtull-Trauring's message of Fri Jul 31 22:26:29 -0400 2009:
> The problem with this is that it perpetuates the misunderstanding the
> Deferreds *make* things asynchronous, even with the intro that says
> otherwise. I think it's better to assume already asynchronous code,
> handling the transition from synchronous to async in an intro event loop
> howto. 

Either way, the function that the first segment of the new docs do belong
somewhere.  The documentation that traditionally served this purpose
has been removed.

As for perpetuating the misunderstanding of Deferreds making things
asynchronous, I completely agree!  However, I think this is something
that can be fixed by spelling out the distinction between "writing
asynchronous code" and "interacting with asynchronous code", and not
just omitting the important paradigm shift that comes with sync->async.

> A better comparative exposition might be with normal callbacks, e.g.:
> 
> "def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
> Deferred".
> 
> At the very least having that async but callbacky version in the middle
> helps understanding.

I briefly gloss on this, but I agree that this is an important point
that could be further expanded.  We could have implemented asynchronous
mechanisms using normal callbacks, but we decided to use Deferreds instead.

It's not clear to me if the common case of confusion of Deferreds occurs
in people who "know callbacks" but "don't know Deferreds."  As an incoming
developer who was familiar with asynchronous programming, my primary problem
was the ill-defined behavior of callback chains (which I resolved by
hunkering down and reading the source code) rather than any fundamental
misunderstanding of what Deferreds were supposed to do.

> It also omits half the story: how you *create* Deferreds. There should
> be a section on that as well.

I agree.  In fact, it might be worth making the document a little longer
to address this point, because I realize now that even if you're not
writing asynchronous code, you'll often need to baton Deferreds to
make the execution flow work the way you want them to.

> An example involving a parser, where you just wave your hands about who
> pushes data in to the parser exactly (so no need to go into event loop
> details), may work well. In particular, the object that wants the result
> of the parsing wants to get parse errors, *not* whoever pushes data in.
> Often it's same object, but not always. Deferreds help with that.

That's a good distinction.  I'll see how I can work that in.

Cheers,
Edward


From termim at gmail.com  Wed Jul  1 22:08:21 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 2 Jul 2009 04:08:21 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
Message-ID: <loom.20090702T031116-652@post.gmane.org>

IMHO there is a misunderstanding here. The point, at least from my POV is
to have the same functionality provided by twistd but with a different
interface. Right now twistd is a starter script that is used like:

    twistd -noy -l my.log my_app.tac

As far as I can understand the OP is missing (me as well) the possibility
to have the same functionality with:

   python my_app.py -noy -l my.log

or 

   my_app -noy -l my.log

without writing any kind of wrapping shell/python scripts.

In other words, if we consider example from the book:

file reverse_app.py:

    from twisted.application import service
    import reverse

    application = service.Application("Reverser")
    reverserService = reverse.ReverserService(()
    reverserServise.setServiceParent(application)

and:

    twistd -y reverse_app.py

I'd like to be able to have:

file reverse_app2.py:

    from twisted.application import service
    import reverse

    application = service.Application("Reverser")
    reverserService = reverse.ReverserService(()
    reverserServise.setServiceParent(application)

if __name__ == '__main__':
    from twisted.SOMETHING import run

    run(...)

  

Regards,
Mikhail




From chris.yan at saybot.com  Thu Jul  2 01:07:02 2009
From: chris.yan at saybot.com (Chris)
Date: Thu, 02 Jul 2009 15:07:02 +0800
Subject: [Twisted-Python] problem on running apache2 + scgi
Message-ID: <4A4C5C96.5000707@saybot.com>

Hi,
I was working on a project which use twisted.web2 scgi.I chose apache2
as the front end web server.the apache2 server will receive a http POST
message which carry about 200k-1M data.I found that sometimes I get the
correct answer but sometimes there is a exception:
Traceback (most recent call last):
File "//usr/lib64/python2.5/site-packages/twisted/python/log.py", line
84, in callWithLogger
return callWithContext({"system": lp}, func, *args, **kw)
File "//usr/lib64/python2.5/site-packages/twisted/python/log.py", line
69, in callWithContext
return context.call({ILogContext: newCtx}, func, *args, **kw)
File "/usr/lib64/python2.5/site-packages/twisted/python/context.py",
line 59, in callWithContext
return self.currentContext().callWithContext(ctx, func, *args, **kw)
File "/usr/lib64/python2.5/site-packages/twisted/python/context.py",
line 37, in callWithContext
return func(*args,**kw)
--- <exception caught here> ---
File
"/usr/lib64/python2.5/site-packages/twisted/internet/selectreactor.py",
line 146, in _doReadOrWrite
why = getattr(selectable, method)()
File "/usr/lib64/python2.5/site-packages/twisted/internet/tcp.py", line
463, in doRead
return self.protocol.dataReceived(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/channel/scgi.py",
line 72, in dataReceived
self.request.handleContentChunk(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/http.py", line
393, in handleContentChunk
self.stream.write(data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/http.py", line
331, in write
stream.ProducerStream.write(self, data)
File "/usr/lib64/python2.5/site-packages/twisted/web2/stream.py", line
667, in write
self.producer.pauseProducing()
exceptions.AttributeError: SCGIChannelRequest instance has no attribute
'pauseProducing'

it seems the error is from the twisted.web2 module,usually when the data
is very big,I will get this exception.how to avoid this exception? I
have to transfer the data in one request anyway.
Any suggestion is helpful.Thank you!

Regards
Chris




From pywinder at monkeydriveengine.com  Thu Jul  2 09:11:02 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 2 Jul 2009 11:11:02 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
	<d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
Message-ID: <b3a40fea0907020811g65480d77yc50264baf174732c@mail.gmail.com>

A very belated reply...

Thanks again for the code. From there, I was able to make a tool to clone
imap mailboxes from server to server. Right now, it's a beast held together
with rubber bands, and completely ignores use of a lot of other twisted
practices and conveniences (application, connection persistance, etc...).
At some point I'll clean it up and share, but in the mean time, if anybody
has any specific questions, let me know and I'll be happy to share what I
learned.



On Fri, Jun 12, 2009 at 4:40 AM, Alex Clemesha <clemesha at gmail.com> wrote:

> Hi,
>
> I've wondered myself how to do this, so thanks Phil.
>
> I extended Phil's solution to work with Gmail, which boils
> down to using SSL and setting the correct servername and port, see here:
> http://gist.github.com/128521
>
> Pywinder, you should be able to just change the username/password
> and it will work for you (you might have to have the python ssl module
> installed - post again if that is the case and it's not working for you)
>
> How to do useful stuff with the 'mailboxes' function in the script is
> another question (which I dont know the answer to).  Maybe post
> your usage if you have a chance.
>
>
> -Alex
>
>
>
>
>
> On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
> Singh<pywinder at monkeydriveengine.com> wrote:
> > Phil,
> >
> > Much obliged.
> >
> > Was able to isolate and confirm that the real issue is that login is
> hanging
> > for some reason, and causing the timeout message. I suspect SSL/TLS
> issues,
> > which at least gives me a decided place to start investigating.
> >
> > Thanks again for the code, it was sanity inducing to say the least. ;)
> >
> >
> > Phil Mayers wrote:
> >>
> >> Pywinder Singh wrote:
> >> >
> >> > Ideally, I'd love to see a snipped which is able to log into an imap
> >> > server and gets a list of mailboxes.  If the example on the site works
> >>
> >> Here you go:
> >>
> >> #!/usr/bin/python
> >>
> >> from twisted.internet import reactor, protocol, defer
> >> from twisted.mail import imap4
> >>
> >> # change these...
> >> username = '?'
> >> password = '?'
> >> servername = '?'
> >>
> >> def mailboxes(list):
> >>      for flags,sep,mbox in list:
> >>          print mbox
> >>
> >> def loggedin(res, proto):
> >>      d = proto.list('','*')
> >>      d.addCallback(mailboxes)
> >>      return d
> >>
> >> def connected(proto):
> >>      print "connected", proto
> >>      d = proto.login(username, password)
> >>      d.addCallback(loggedin, proto)
> >>      return d
> >>
> >> def failed(f):
> >>      print "failed", f
> >>      return f
> >>
> >> def done(_):
> >>      reactor.callLater(0, reactor.stop)
> >>
> >> def main():
> >>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
> >>      d = c.connectTCP(servername, 143)
> >>      d.addCallbacks(connected, failed)
> >>      d.addBoth(done)
> >>
> >> reactor.callLater(0, main)
> >> reactor.run()
> >>
> >>
> >> This example makes use of deferred chaining i.e. returning a deferred
> >> from a callback handler, so you'll want to understand that.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> Alex Clemesha
> clemesha.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090702/54a4510b/attachment.html>

From phil at bubblehouse.org  Thu Jul  2 09:47:38 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Thu, 2 Jul 2009 11:47:38 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <loom.20090702T031116-652@post.gmane.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
Message-ID: <44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>

On Jul 2, 2009, at 12:08 AM, Mikhail wrote:
> IMHO there is a misunderstanding here. The point, at least from my  
> POV is
> to have the same functionality provided by twistd but with a different
> interface. Right now twistd is a starter script that is used like:
>
>    twistd -noy -l my.log my_app.tac
>
> As far as I can understand the OP is missing (me as well) the  
> possibility
> to have the same functionality with:
>
>   python my_app.py -noy -l my.log
>
> or
>
>   my_app -noy -l my.log
>
> without writing any kind of wrapping shell/python scripts.

I think this point is well understood, but thank you for clarifying.

> In other words, if we consider example from the book:
[snip snip]
> I'd like to be able to have:
>
> file reverse_app2.py:
>
>    from twisted.application import service
>    import reverse
>
>    application = service.Application("Reverser")
>    reverserService = reverse.ReverserService(()
>    reverserServise.setServiceParent(application)
>
> if __name__ == '__main__':
>    from twisted.SOMETHING import run
>
>    run(...)

So, how is this not a wrapper script? The solution I provided in my  
last email is already workable, doesn't require shell scripting or  
launching a child process, and doesn't interfere with any of the  
functionality of the twistd feature. On top of that, it's only a few  
lines longer than the example you included here.

Perhaps you could point out some things that you *couldn't* do with  
the example I sent, or other stumbling blocks in using it?

At any rate, I don't think there's any disagreement about the fact  
that it would be nice for the twistd feature to be more flexible in  
the ways suggested, but it's a non-trivial undertaking.

OTOH, I'm quite sure that a patch would be welcomed (hint, hint) ;-)

-phil



From smhollingsworth at gmail.com  Thu Jul  2 14:13:42 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 2 Jul 2009 20:13:42 +0000
Subject: [Twisted-Python] Perspective broker remote calls to multiple
	servers seem to run sequentially
Message-ID: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>

Let me start off by warning everyone that I am extremely new to twisted
(I've been using it maybe a week) and it's highly likely some things don't
work the way I think they should. Or, I'm just using them incorrectly.

Some background on what I'm trying to accomplish:

I have a client/server system that reads in data values from a file
(anywhere between 10k and 1.5M, running every hour) and sends those off to a
server for processing. Processing each value takes some variable amount of
time and, given that I am doing this every hour, I need it to be as fast as
possible, which is why I was drawn to the asynchronous nature of python. I'm
using python because everything we do here is in python. I had the app
working well with a single server, but I need to scale it out to multiple
servers to get the processing time down. At first, I started writing my own
distributedish app, which worked (more or less), but had a enough niggly
issues that I started looking for something else. This morning I discovered
the Perspective Broker and that seemed to be the solution I needed.

The problems:

Right now, for development and testing, I have three servers running on
localhost on three ports. When I run my test code, it seems that each
Perspective Broker runs sequentially, rather than concurrently. For example,
if i watch the debugging output from the server, I see the following:

server 0 processing dataval1
server 0 processing dataval2
server 0 processing dataval3
server 0 processing dataval4
server 1 processing dataval*5*
server 1 processing dataval6
server 1 processing dataval7
server 2 processing dataval8
server 2 processing dataval9
server 2 processing dataval10

My understanding is that the perspective brokers would work concurrently. Is
that incorrect? My guess is that they should work concurrently and I am just
doing something wrong in my code, due to my very, very limited understanding
of how they work. Well, how much of twisted works, really.

Below is my the relevant code for the client (I've taken out code that just
deals with prepping data or debugging). Please keep in mind that this is
mostly testing code, while I get a better understanding of how perspective
brokers work and was cobbled together from examples and docs found online.

CLIENT CODE:

import sys, os
from twisted.spread import pb
from twisted.internet import reactor
import Queue

MY_PORT = 49981
SERVERS = 3

class Client:
    def __init__(self, host):
        self.out_count = 0
        self.in_count = 0
        self.total = 0
        self.in_file = open(sys.argv[1], 'rb')
        self.out_file = open(sys.argv[2], 'wb')

        # Create data queues for each server so that we can send data to
each server
        self.queues = []
        for server in range(0,SERVERS):
            self.queues.append(Queue.Queue())

        # Populate queues with data
        pos = 0
        for dv in self.in_file:
            dv = dv.strip()
            self.queues[pos % len(self.queues)].put(dv)
            pos += 1

        # Conenct to servers
        print 'Connecting to Servers...'
        for server in range(0, COUNT):
            factory = pb.PBClientFactory()
            reactor.connectTCP(host, server + MY_PORT, factory)
            factory.getRootObject().addCallbacks(self.connected,
self.connect_failure, [self.queues[server]])

    def connected(self, perspective, queue):
        print "connected"
        while 1:
            try:
                dv = queue.get_nowait()
            except Queue.Empty:
                break
            else:
                perspective.callRemote('process_data',
dv).addCallbacks(self.success, self.lookup_failure)

    def success(self, result):
        print result
        dv, answer = result
        self.in_count += 1
        self.out_file.write('%s,%s\n' % (dv, answer))
        if(self.in_count == self.out_count):
            self.out_file.close()
            reactor.stop()

    def connect_failure(self, _):
        print "Remote connect failure"
        self.out_file.close()
        reactor.stop()

    def lookup_failure(self, _):
        print "Remote lookup failure"
        self.out_file.close()
        reactor.stop()

Client("127.0.0.1")
reactor.run()

END CLIENT CODE

Any help anyone can provide will be greatly appreciated. I have another
question, too, but it can wait till this one is solved, since, for all I
know, whatever is causing this problem may be causing the other one.

Sean M Hollingsworth
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090702/c5be05d0/attachment.html>

From termim at gmail.com  Thu Jul  2 16:50:58 2009
From: termim at gmail.com (Mikhail)
Date: Thu, 2 Jul 2009 22:50:58 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
	<44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>
Message-ID: <loom.20090702T221942-858@post.gmane.org>

Phil Christensen <phil <at> bubblehouse.org> writes:
> 
> So, how is this not a wrapper script? The solution I provided in my  

Yes, in a sense everything is a wrapper for something. :)

> last email is already workable, doesn't require shell scripting or  
> launching a child process, and doesn't interfere with any of the  
> functionality of the twistd feature. On top of that, it's only a few  
> lines longer than the example you included here.
> 

In my example I should have written 

    run(application)

instead of 

    run(...)

Then the difference would be more apparent. Namely, in my 'wrapper'
it is explicit what application will be run and where all the services
came from, your 'wrapper' is just a customized version of twistd and 
what will be run depends on the command line and what will be found 
in the file system. In some cases I'd like to _explicitly_ code into 
main script what functionality my application provides and I do not
want twistd search file system for plugins at all.

> Perhaps you could point out some things that you *couldn't* do with  
> the example I sent, or other stumbling blocks in using it?
>

I couldn't figure out how to use it without plugins. Obviously I'm 
missing something simple here. If you could extend your example to 
show how to use twistd functionality without writing plugins then it
would be just great.

> At any rate, I don't think there's any disagreement about the fact  
> that it would be nice for the twistd feature to be more flexible in  
> the ways suggested, but it's a non-trivial undertaking.
> 

Yes, that is probably why it is called twisted :)

Mikhail




From spongelavapaul at googlemail.com  Fri Jul  3 03:30:35 2009
From: spongelavapaul at googlemail.com (Paul Thomas)
Date: Fri, 3 Jul 2009 10:30:35 +0100
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <loom.20090702T221942-858@post.gmane.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<loom.20090702T031116-652@post.gmane.org>
	<44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org>
	<loom.20090702T221942-858@post.gmane.org>
Message-ID: <58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>


On 2 Jul 2009, at 23:50, Mikhail wrote:

>
> In my example I should have written
>
>    run(application)
>
> instead of
>
>    run(...)
>
> Then the difference would be more apparent. Namely, in my 'wrapper'
> it is explicit what application will be run and where all the services
> came from, your 'wrapper' is just a customized version of twistd and
> what will be run depends on the command line and what will be found
> in the file system. In some cases I'd like to _explicitly_ code into
> main script what functionality my application provides and I do not
> want twistd search file system for plugins at all.

I'm not using plugins, but I had the same requirement as you to  
explicitly create the app and then run it - because I need the freeze  
scripts to make a single application.

My solution looked something like:

# myapp.py

from twisted.scripts._twistd_unix import UnixApplicationRunner
# Of course, that's just because the app is unix only


class MyRunner(UnixApplicationRunner):
	def createOrGetApplication(self):
		# The stuff that's usually in a tac file
		application = # ...
		return application

def main():
	setup_logging()
	config = { # stuff pinched by dumping 'config' during a twistd run
		}
	# Also do the ServerOptions thing here if necessary
	MyRunner(config).run()

if __name__ == '__main__'
	main()



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090703/097bf0ef/attachment.html>

From johann.borck at densedata.com  Fri Jul  3 05:52:37 2009
From: johann.borck at densedata.com (Johann Borck)
Date: Fri, 03 Jul 2009 13:52:37 +0200
Subject: [Twisted-Python] Perspective broker remote calls to multiple
 servers seem to run sequentially
In-Reply-To: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
References: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
Message-ID: <4A4DF105.9010000@densedata.com>

Sean Hollingsworth wrote:
> Let me start off by warning everyone that I am extremely new to 
> twisted (I've been using it maybe a week) and it's highly likely some 
> things don't work the way I think they should. Or, I'm just using them 
> incorrectly.
>
> [..]
>
> The problems:
>
> Right now, for development and testing, I have three servers running 
> on localhost on three ports. 
Are you running them in a single process?
> When I run my test code, it seems that each Perspective Broker runs 
> sequentially, rather than concurrently. For example, if i watch the 
> debugging output from the server, I see the following:
>
> server 0 processing dataval1
> server 0 processing dataval2
> server 0 processing dataval3
> server 0 processing dataval4
> server 1 processing dataval*5*
> server 1 processing dataval6
> server 1 processing dataval7
> server 2 processing dataval8
> server 2 processing dataval9
> server 2 processing dataval10
>
> My understanding is that the perspective brokers would work 
> concurrently. Is that incorrect? My guess is that they should work 
> concurrently and I am just doing something wrong in my code, due to my 
> very, very limited understanding of how they work. Well, how much of 
> twisted works, really.
>

> Below is my the relevant code for the client (I've taken out code that 
> just deals with prepping data or debugging). Please keep in mind that 
> this is mostly testing code, while I get a better understanding of how 
> perspective brokers work and was cobbled together from examples and 
> docs found online.
>

[...]

With the client code, nothing seems wrong, since it doesn't enforce one 
job to be finished before starting the next one - the problem has to be 
on the server side. Actually I suspect you're running the same service 
on 3 ports but within one process, right?. If this is the case it's no 
wonder the order of jobs completed matches exactly the order they're 
arriving in  because it all happens in a single thread. If you want 
parallel processing you will have to use multiple processes. As a side 
note (which doesn't seem to apply here): if the work they're doing is 
not CPU-bound, but IO-bound (meaning the work is nothing but waiting for 
something to complete, which for some reason can't be done in an 
asynchronous manner, the most prominent examples being blocking database 
interfaces), you also have the alternative of using threads.

I think the basic problem is you're assuming twisted to somehow schedule 
the work to different cores/cpus, which it doesn't do by default. You 
might want to look at ampoule https://launchpad.net/ampoule, which is a 
process pool, there was another similar thing called AsynQueue, but the 
site is down atm: http://foss.eepatents.com/AsynQueue.

hth,
Johann






From smhollingsworth at gmail.com  Fri Jul  3 07:34:53 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Fri, 3 Jul 2009 09:34:53 -0400
Subject: [Twisted-Python] Perspective broker remote calls to multiple
	servers seem to run sequentially
In-Reply-To: <4A4DF105.9010000@densedata.com>
References: <66dccc4d0907021313s168c448bx9a12ba551e94f942@mail.gmail.com>
	<4A4DF105.9010000@densedata.com>
Message-ID: <66dccc4d0907030634q1fd092c5lafd54f5d9d2d818a@mail.gmail.com>

Geez .... what a HUGE duh moment. This will ultimately run on multiple
remote servers, but, while doing initial testing, I have been running it on
just my dev box. And, of course, I keep forgetting that twisted (well,
python) doesn't make use of multiple cores. I wasted all yesterday trying to
figure out why this was running the way it was.....
A million thanks.

Sean

On Fri, Jul 3, 2009 at 7:52 AM, Johann Borck <johann.borck at densedata.com>wrote:

> Sean Hollingsworth wrote:
> > Let me start off by warning everyone that I am extremely new to
> > twisted (I've been using it maybe a week) and it's highly likely some
> > things don't work the way I think they should. Or, I'm just using them
> > incorrectly.
> >
> > [..]
> >
> > The problems:
> >
> > Right now, for development and testing, I have three servers running
> > on localhost on three ports.
> Are you running them in a single process?
> > When I run my test code, it seems that each Perspective Broker runs
> > sequentially, rather than concurrently. For example, if i watch the
> > debugging output from the server, I see the following:
> >
> > server 0 processing dataval1
> > server 0 processing dataval2
> > server 0 processing dataval3
> > server 0 processing dataval4
> > server 1 processing dataval*5*
> > server 1 processing dataval6
> > server 1 processing dataval7
> > server 2 processing dataval8
> > server 2 processing dataval9
> > server 2 processing dataval10
> >
> > My understanding is that the perspective brokers would work
> > concurrently. Is that incorrect? My guess is that they should work
> > concurrently and I am just doing something wrong in my code, due to my
> > very, very limited understanding of how they work. Well, how much of
> > twisted works, really.
> >
>
> > Below is my the relevant code for the client (I've taken out code that
> > just deals with prepping data or debugging). Please keep in mind that
> > this is mostly testing code, while I get a better understanding of how
> > perspective brokers work and was cobbled together from examples and
> > docs found online.
> >
>
> [...]
>
> With the client code, nothing seems wrong, since it doesn't enforce one
> job to be finished before starting the next one - the problem has to be
> on the server side. Actually I suspect you're running the same service
> on 3 ports but within one process, right?. If this is the case it's no
> wonder the order of jobs completed matches exactly the order they're
> arriving in  because it all happens in a single thread. If you want
> parallel processing you will have to use multiple processes. As a side
> note (which doesn't seem to apply here): if the work they're doing is
> not CPU-bound, but IO-bound (meaning the work is nothing but waiting for
> something to complete, which for some reason can't be done in an
> asynchronous manner, the most prominent examples being blocking database
> interfaces), you also have the alternative of using threads.
>
> I think the basic problem is you're assuming twisted to somehow schedule
> the work to different cores/cpus, which it doesn't do by default. You
> might want to look at ampoule https://launchpad.net/ampoule, which is a
> process pool, there was another similar thing called AsynQueue, but the
> site is down atm: http://foss.eepatents.com/AsynQueue.
>
> hth,
> Johann
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090703/4d481e25/attachment.html>

From grickert at coldstorage.com  Fri Jul  3 08:17:12 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 10:17:12 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>

I have a (Twisted) program that saves & uses a file in the current
working directory.
When running tests for the program, Trial changes the working directory,
causing this file to be written into the '_trial_temp' directory
instead.
...so the program works differently when run via Trial vs. in normal
use.

There are a number of solutions to this, but I'd just like to understand
the reasoning behind this surprising behaviour.
The docs say that this: "...allows them to write whatever data they like
to disk, and not worry about polluting the current working directory"
...couldn't they just do this without changing the working directory?

One of the things I love about python is that things just seem to work
like you expect - I'm rarely surprised by it's behaviour.
Twisted, OTOH, continually surprises me...and not like
getting-a-pony-on-your-10th-birthday type of surprise.

Don't get me wrong, I love Twisted...it makes writing
networked/asynchronous programs a breeze.  
...everything I write now (in Python), just seems to "need" Twisted.
I just find Twisted's idiosyncrasies frustrating sometimes.

Sorry for the rant,
	Gerrat




From grickert at coldstorage.com  Fri Jul  3 08:32:07 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 10:32:07 -0400
Subject: [Twisted-Python] (Mis)indented Posts
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>

...ok, I've created a new post twice on this list twice, and both times
my post has been indented and placed under a completely
different/irrelevant post

Here:
http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.html
And Here:
http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.html

...if this post hijacks a thread as well, then it will be 3 times.

...this seems to be something specific to the twisted python mailing
list:
http://www.mail-archive.com/mailman-users%40python.org/msg53996.html


Gerrat



From exarkun at divmod.com  Fri Jul  3 09:26:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 11:26:48 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>
Message-ID: <20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>

On Fri, 3 Jul 2009 10:17:12 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>I have a (Twisted) program that saves & uses a file in the current
>working directory.
>When running tests for the program, Trial changes the working directory,
>causing this file to be written into the '_trial_temp' directory
>instead.
>...so the program works differently when run via Trial vs. in normal
>use.

The only difference I can infer from your description is whether the file
in question is created in the directory you invoke the program from (in
the non-trial case) or in the _trial_temp subdirectory of that directory
(in the trial case).  It's not obvious to me why this might be a problem.

>
>There are a number of solutions to this, but I'd just like to understand
>the reasoning behind this surprising behaviour.
>The docs say that this: "...allows them to write whatever data they like
>to disk, and not worry about polluting the current working directory"
>...couldn't they just do this without changing the working directory?

This is an ancient feature of trial, from the days when Twisted's own test
suite (the primary driver of trial development for many years) was even
more crufty than it is today.  In those days, many tests just created files
in the working directory.  The _trial_temp feature provided a single fix
which addressed the mess created by all of the tests in one fell swoop.  The
behavior is still convenient for tests which aren't written carefully in
this regard.

Jean-Paul



From exarkun at divmod.com  Fri Jul  3 09:49:05 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 11:49:05 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
Message-ID: <20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>

On Fri, 3 Jul 2009 10:32:07 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>...ok, I've created a new post twice on this list twice, and both times
>my post has been indented and placed under a completely
>different/irrelevant post
>
>Here:
>http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.html
>And Here:
>http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.html
>
>...if this post hijacks a thread as well, then it will be 3 times.
>
>...this seems to be something specific to the twisted python mailing
>list:
>http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>

I don't really know much about how mailman generates those threaded views.
twisted-python is running on an unmodified mailman 1:2.1.9-9ubuntu1 install.
Perhaps this could be caused by exim4 configuration somehow (we do have
various exim4 configuration customizations), but that's the only thing I
can think of.  Any pointers on what information is used to determine the
threading structure of messages?

Jean-Paul



From grickert at coldstorage.com  Fri Jul  3 10:18:26 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 12:18:26 -0400
Subject: [Twisted-Python] Twisted Trial changes working directory
In-Reply-To: <20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE7F6@ccs-ex01.coldstorage.com>
	<20090703152648.22176.92537969.divmod.quotient.12475@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F045DE8A8@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>Sent: Friday, July 03, 2009 11:27 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Twisted Trial changes working directory
>
>On Fri, 3 Jul 2009 10:17:12 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>>I have a (Twisted) program that saves & uses a file in the current
>>working directory.
>>When running tests for the program, Trial changes the working
>directory,
>>causing this file to be written into the '_trial_temp' directory
>>instead.
>>...so the program works differently when run via Trial vs. in normal
>>use.
>
>The only difference I can infer from your description is whether the
>file
>in question is created in the directory you invoke the program from (in
>the non-trial case) or in the _trial_temp subdirectory of that
directory
>(in the trial case).  It's not obvious to me why this might be a
>problem.

...and it turns out not to really be a Trial-specific problem - more a
problem with my expectations.
The file takes a while to generate, and I just expected it to be there
after running the program the first time.
- it will get regenerated if it doesn't exist, and I can easily copy it
to the _trial_temp directory for testing

>
>>
>>There are a number of solutions to this, but I'd just like to
>understand
>>the reasoning behind this surprising behaviour.
>>The docs say that this: "...allows them to write whatever data they
>like
>>to disk, and not worry about polluting the current working directory"
>>...couldn't they just do this without changing the working directory?
>
>This is an ancient feature of trial, from the days when Twisted's own
>test
>suite (the primary driver of trial development for many years) was even
>more crufty than it is today.  In those days, many tests just created
>files
>in the working directory.  The _trial_temp feature provided a single
fix
>which addressed the mess created by all of the tests in one fell swoop.
>The
>behavior is still convenient for tests which aren't written carefully
in
>this regard.
>
>Jean-Paul

Thanks for the explanation.  




From grickert at coldstorage.com  Fri Jul  3 14:11:38 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri, 3 Jul 2009 16:11:38 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
	<20090703154905.22176.847146078.divmod.quotient.12486@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04647084@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: Jean-Paul Calderone [mailto:exarkun at divmod.com]
>Sent: Friday, July 03, 2009 11:49 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts (list
administrativia)
>
>On Fri, 3 Jul 2009 10:32:07 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>>...ok, I've created a new post twice on this list twice, and both
times
>>my post has been indented and placed under a completely
>>different/irrelevant post
>>
>>Here:
>>http://twistedmatrix.com/pipermail/twisted-python/2009-June/019859.htm
l
>>And Here:
>>http://twistedmatrix.com/pipermail/twisted-python/2009-July/019902.htm
l
>>
>>...if this post hijacks a thread as well, then it will be 3 times.
>>
>>...this seems to be something specific to the twisted python mailing
>>list:
>>http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>>
>
>I don't really know much about how mailman generates those threaded
>views.
>twisted-python is running on an unmodified mailman 1:2.1.9-9ubuntu1
>install.
>Perhaps this could be caused by exim4 configuration somehow (we do have
>various exim4 configuration customizations), but that's the only thing
I
>can think of.  Any pointers on what information is used to determine
the
>threading structure of messages?
>
>Jean-Paul
>

Well, according to Mark Sapiro on the mailman list, in general, 
"It is based on In-Reply-To: and/or References: headers"

...but I assume you're looking for something a little more specific
here.




From exarkun at divmod.com  Fri Jul  3 14:42:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Jul 2009 16:42:44 -0400
Subject: [Twisted-Python] (Mis)indented Posts (list administrativia)
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04647084@ccs-ex01.coldstorage.com>
Message-ID: <20090703204244.22176.351896624.divmod.quotient.12575@henry.divmod.com>

On Fri, 3 Jul 2009 16:11:38 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
>
>Well, according to Mark Sapiro on the mailman list, in general,
>"It is based on In-Reply-To: and/or References: headers"
>
>...but I assume you're looking for something a little more specific
>here.
>

A bit.  Looking at the messages in question, there are no In-Reply-To or
References headers which would suggest the threading structure mailman is
deciding on.

Jean-Paul



From asset at impactdamage.com  Sat Jul  4 03:11:36 2009
From: asset at impactdamage.com (asset)
Date: Sat, 4 Jul 2009 02:11:36 -0700
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
	and terminal protocol instance of all connected users.
Message-ID: <c87459b$71ff328b$70618c95$@com>

Ive been at it for several days now trying to get at the username 
(avatarId), session id (SSHChannel session # I imagine), and terminal 
protocol instance (recvline.HistoricRecvLine) of my application's SSH 
terminal service's clients.  Specifically, I'm trying to expose these three 
things (for all connected users) to my terminal commands which are using 
the plugin system.

I'm not considerably far off from this example for the setup, 
http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvline
.tac, minus the telnet support.

For the life of me I can't seem to determine how best to approach this.  
Ive come as far as getting a list of the terminal recvline.HistoricRecvLine 
instances and then being able to manipulate the client terminals directly, 
but I need the usernames from the avatars and session id as well.

I imagine this is a pretty common and simple thing, so I'm hoping that 
somebody can point me in the right direction.  Please help if you can.

Thx,

TWKiel
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090704/8a91c2b6/attachment.html>

From exarkun at divmod.com  Sat Jul  4 11:16:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 4 Jul 2009 13:16:48 -0400
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
 and terminal protocol instance of all connected users.
In-Reply-To: <c87459b$71ff328b$70618c95$@com>
Message-ID: <20090704171648.22176.757872348.divmod.quotient.12888@henry.divmod.com>

On Sat, 4 Jul 2009 02:11:36 -0700, asset <asset at impactdamage.com> wrote:
>Ive been at it for several days now trying to get at the username
>(avatarId), session id (SSHChannel session # I imagine), and terminal
>protocol instance (recvline.HistoricRecvLine) of my application's SSH
>terminal service's clients.  Specifically, I'm trying to expose these three
>things (for all connected users) to my terminal commands which are using
>the plugin system.
>
>I'm not considerably far off from this example for the setup,
>http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvline
>.tac, minus the telnet support.
>
>For the life of me I can't seem to determine how best to approach this.
>Ive come as far as getting a list of the terminal recvline.HistoricRecvLine
>instances and then being able to manipulate the client terminals directly,
>but I need the usernames from the avatars and session id as well.
>
>I imagine this is a pretty common and simple thing, so I'm hoping that
>somebody can point me in the right direction.  Please help if you can.

The realm's requestAvatar is passed the avatarId:

http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole_ssh.py#L82

See how this realm (which I assume is the one you're using, since it is the
one used by demo_recvline) passes the avatarId to its `userFactory´, but the
`TerminalUser´ which is the default `userFactory´ ignores it.

It seems like you want to provide an alternate `userFactory´ which saves the
avatarId passed to it.

For the session id, perhaps this information you can find on the connection
object.  See the API documentation:

http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.connection.SSHConnection.html

Jean-Paul



From travis+ml-twisted at subspacefield.org  Sat Jul  4 18:08:42 2009
From: travis+ml-twisted at subspacefield.org (travis+ml-twisted at subspacefield.org)
Date: Sat, 4 Jul 2009 19:08:42 -0500
Subject: [Twisted-Python] buildProtocol never called
In-Reply-To: <20090530231754.GA10964@subspacefield.org>
References: <20090530231754.GA10964@subspacefield.org>
Message-ID: <20090705000842.GB12378@subspacefield.org>

On Sat, May 30, 2009 at 06:17:54PM -0500, travis+ml-twisted at subspacefield.org wrote:
> The problem I'm having is this; I upgraded my firewall from OpenBSD
> 4.2 or so to OpenBSD 4.5, and now I'm working with newer versions of
> all the software including Twisted.
> 
> The program works fine normally, and can run in the background, but if I
> invoke a daemonize() routine that turns it into a network daemon, it
> refuses to serve incoming TCP connections.  Actually the TCP connection
> is made, but the software never responds to it.
> 
> Specifically, my twisted.internet.protocol.Factory instance is created,
> but buildProtocol is never called.
> 
> Before I dive deeply into debugging the software, I thought I'd ask if
> anyone knew off the top of their head any reason why Twisted might not
> act the same if it was daemonized (no controlling terminal, no
> stdin/out/err, forked as a background process).

I ran ktrace/kdump against the binary and it appears that python likes to
open file handles to the script and certain modules for file descriptors
5-7 or so (depending on how much you import), and if you close those file
descriptors, unusual things happen when python tries to access them.

In the end I decided it was not important enough to close all the parent's
file descriptors, and it runs fine as a deamon leaving them open.
-- 
Obama Nation | My emails do not have attachments; it's a digital signature
that your mail program doesn't understand. | http://www.subspacefield.org/~travis/ 
If you are a spammer, please email john at subspacefield.org to get blacklisted.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 833 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090704/6193fcb4/attachment.sig>

From exarkun at twistedmatrix.com  Sat Jul  4 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 05 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1246766712.09.192113370@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090705/a3cede39/attachment.html>

From foom at fuhm.net  Sun Jul  5 14:51:00 2009
From: foom at fuhm.net (James Y Knight)
Date: Sun, 5 Jul 2009 16:51:00 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
Message-ID: <461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>


On Jul 3, 2009, at 10:32 AM, Gerrat Rickert wrote:

> ...ok, I've created a new post twice on this list twice, and both  
> times
> my post has been indented and placed under a completely
> different/irrelevant post
>
> Here:
> http://twistedmatrix.com/pipermail/twisted-python/2009-June/ 
> 019859.html
> And Here:
> http://twistedmatrix.com/pipermail/twisted-python/2009-July/ 
> 019902.html
>
> ...if this post hijacks a thread as well, then it will be 3 times.
>
> ...this seems to be something specific to the twisted python mailing
> list:
> http://www.mail-archive.com/mailman-users%40python.org/msg53996.html

I really don't know how that could be specific to the twisted python  
list. I notice in the referenced message, Mark Sapiro says that  
rebuilding the archives from the mbox file generated correct threading  
for him. Well, I just did that, ("mmarch --wipe twisted-python") and  
it generated the same incorrect bad threading.

Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed  
already upstream?

James

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From kristian at spritelink.net  Sun Jul  5 16:32:20 2009
From: kristian at spritelink.net (Kristian Larsson)
Date: Mon, 6 Jul 2009 00:32:20 +0200
Subject: [Twisted-Python] XML-RPC over Unix Sockets?
Message-ID: <20090705223220.GJ66062@spritelink.se>

Hello!
 
I'm trying to build a client / server setup using
XML-RPC run over UNIX sockets.

Putting together the server part was a breeze,
just define an xmlrpc class and have the reactor
use it with a listenUNIX() call.

Now, since I've been unable to put together a
client I don't really know that the server works,
but I'm assuming it is. At least it does not
generate any run-time errors.

Now, on the client on the other hand I've
basically copied this example:
http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html#auto5 

but replaced the Proxy connection string with:
	proxy = Proxy('file:///tmp/my_socket')
in the hope that it would just magically work.
It did not. 

Having a look at
http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/web/xmlrpc.py#L328 
I see that the callRemote() method only seem to
support connectTCP() and connectSSL(). Should it
not also support connectUNIX? Is there any reason
it does not?

Am I insane? Is XML-RPC over UNIX domain sockets
just plain crazy, or is there even some flaw that
makes it impossible?

Any suggestions are most welcome. Thank you.
 
Kind regards,
   Kristian. 

-- 
Kristian Larsson                                        KLL-RIPE
+46 704 910401			              kll at spritelink.net

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Sun Jul  5 19:30:23 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 06 Jul 2009 01:30:23 -0000
Subject: [Twisted-Python] XML-RPC over Unix Sockets?
In-Reply-To: <20090705223220.GJ66062@spritelink.se>
References: <20090705223220.GJ66062@spritelink.se>
Message-ID: <20090706013023.12555.694685340.divmod.xquotient.14762@weber.divmod.com>


On 5 Jul, 10:32 pm, kristian at spritelink.net wrote:
>I'm trying to build a client / server setup using
>XML-RPC run over UNIX sockets.

>Now, on the client on the other hand I've
>basically copied this example:
>http://twistedmatrix.com/projects/web/documentation/howto/xmlrpc.html#auto5
>
>but replaced the Proxy connection string with:
>         proxy = Proxy('file:///tmp/my_socket')

>Am I insane? Is XML-RPC over UNIX domain sockets
>just plain crazy, or is there even some flaw that
>makes it impossible?
>
>Any suggestions are most welcome. Thank you.

It may be possible to do, but there are a number of ugly details that 
you've ignored.  For example, when one has an URL like 
'http://example.com/my/custom/site/RPC2', it's very clear where the host 
(network endpoint) is and where the path (thing that you send to that 
network endpoint to identify the resource) is.

But if you have 'file:///tmp/example_com/my/custom/site/RPC2' it's not 
at a all clear which of those things is a directory, which is a socket, 
and which is a path for the HTTP part which isn't present in the 
filesystem at all.

This would certainly require some reworking of Twisted's HTTP internals 
and the creation of a new URL scheme so that those things could be 
identified.  I wouldn't say that these changes would be rejected out of 
hand, necessarily, but you would have to have pretty good test coverage, 
good documentation and an explanation of why such a thing would be a 
better idea than an HTTP server listening only on localhost :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From grickert at coldstorage.com  Mon Jul  6 06:46:39 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 6 Jul 2009 08:46:39 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>
References: <BB13E4C4D649234F84A01F6DF64BB87F045DE80A@ccs-ex01.coldstorage.com>
	<461EE39F-635D-4BB4-89C3-167D449DAA30@fuhm.net>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of James Y Knight
>Sent: Sunday, July 05, 2009 4:51 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>
>On Jul 3, 2009, at 10:32 AM, Gerrat Rickert wrote:
>
>> ...ok, I've created a new post twice on this list twice, and both
>> times
>> my post has been indented and placed under a completely
>> different/irrelevant post
>>
>> Here:
>> http://twistedmatrix.com/pipermail/twisted-python/2009-June/
>> 019859.html
>> And Here:
>> http://twistedmatrix.com/pipermail/twisted-python/2009-July/
>> 019902.html
>>
>> ...if this post hijacks a thread as well, then it will be 3 times.
>>
>> ...this seems to be something specific to the twisted python mailing
>> list:
>> http://www.mail-archive.com/mailman-users%40python.org/msg53996.html
>
>I really don't know how that could be specific to the twisted python
>list. I notice in the referenced message, Mark Sapiro says that
>rebuilding the archives from the mbox file generated correct threading
>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>it generated the same incorrect bad threading.
>
>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>already upstream?
>
>James

Thanks for testing this James.  Before I send this back to the mailman
list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1 mailman
installation you rebuilt on?  ie. is there any custom configuration
specific to this list that could be causing this odd behaviour (instead
of a bug with the ubuntu version)?  [please excuse my ignorance if this
question doesn't make sense - I know nothing about mailman...I just want
to stop hijacking threads when I post here]

Thanks, Gerrat

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jared.gisin at isilon.com  Mon Jul  6 11:58:29 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Mon, 6 Jul 2009 10:58:29 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com><AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org><loom.20090702T031116-652@post.gmane.org><44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org><loom.20090702T221942-858@post.gmane.org>
	<58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
Message-ID: <0C40B34038FD824FACDB387E7788728702D19693@seaxch08.desktop.isilon.com>

Mikhail is correct in what needs to be done here. Twistd should provide
helpers to writing an application without being the application. Not
every wants to make it look like they're using twisted, even if they
are. Having a twistd process appear in my process list is unacceptable,
and my applications takes a well know and singular config. Twistd should
be nothing more than a general helper.

 

Ultimately what Mikhail shows is very similar to what I have done by
import directly the ApplicationRunner I want to use (my app is also
Unix-only), and then subclassing ServerOptions. I also modified
createorGetApplication to return an application object instead  of
loading it from some damned .tac file that is passed in on the CLI,
which was exactly the thing that was trying to be avoided. My
application is defined already in code, so I should be able to create my
application object, and pass it right into a runner with proper
application options and have it fire up avoiding the generalities of
twistd that don't apply to me. Again, twistd is great at supporting one
use case. It needs to support others, and it needs to be refactored just
a bit more to do that. It wouldn't be as difficult to do this as you
probably imagine, and proper documentation on more ways it could be used
would save developers a ton of time. Now, if I only had the time to get
this done.... I'll see if I can refactor and provide some sample code to
at serves the use case we are discussing here. As I was told early on in
this inquiry, this problem isn't an uncommon complaint, so solving it
seems useful.

 

-Jared

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Paul
Thomas
Sent: Friday, July 03, 2009 2:31 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] untwisting twistd

 

 

On 2 Jul 2009, at 23:50, Mikhail wrote:






In my example I should have written 

   run(application)

instead of 

   run(...)

Then the difference would be more apparent. Namely, in my 'wrapper'
it is explicit what application will be run and where all the services
came from, your 'wrapper' is just a customized version of twistd and 
what will be run depends on the command line and what will be found 
in the file system. In some cases I'd like to _explicitly_ code into 
main script what functionality my application provides and I do not
want twistd search file system for plugins at all.

 

I'm not using plugins, but I had the same requirement as you to
explicitly create the app and then run it - because I need the freeze
scripts to make a single application.

 

My solution looked something like:

 

# myapp.py

 

from twisted.scripts._twistd_unix import UnixApplicationRunner

# Of course, that's just because the app is unix only

 

 

class MyRunner(UnixApplicationRunner):

            def createOrGetApplication(self):

                        # The stuff that's usually in a tac file

                        application = # ...

                        return application

 

def main():

            setup_logging()

            config = { # stuff pinched by dumping 'config' during a
twistd run

                        }

            # Also do the ServerOptions thing here if necessary

            MyRunner(config).run()

 

if __name__ == '__main__'

            main()

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090706/8d5dfcd9/attachment.html>

From jml at mumak.net  Tue Jul  7 01:54:19 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 7 Jul 2009 17:54:19 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
Message-ID: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>

Hello all,

With some trepidation and a complete willingness to fail, I'm offering
my services as Twisted release manager, starting Tuesday next week.

I have only two questions:
  - Am I accepted?
  - Where do I begin?

jml



From glyph at divmod.com  Tue Jul  7 04:07:15 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 07 Jul 2009 10:07:15 -0000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
Message-ID: <20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>


On 07:54 am, jml at mumak.net wrote:
>Hello all,
>
>With some trepidation and a complete willingness to fail, I'm offering
>my services as Twisted release manager, starting Tuesday next week.

Hooray!
>I have only two questions:
>  - Am I accepted?

MWAHAHAHAHAHA, WELCOME TO YOUR DOOM!

By which I mean, "yes".  radix and exarkun have both dedicated some 
effort to making this release happen, and I'm sure we'll all continue to 
help you in this role, but there has been a discernable ... lack of 
enthusiasm for anyone to wear the official "release manager" hat.  We 
all appreciate your brave sacrifice.
>  - Where do I begin?

There is a ticket, <http://twistedmatrix.com/trac/ticket/3860>, which 
you will now find is assigned to you.

Some work has already taken place to update the NEWS files on a branch 
for that ticket, which is the bulk of the work associated with the 
releases, but it's not complete.  Also, since this branch was made, some 
features have been added and some regressions fixed, so it should be 
merged forward.

So, you should start with those two things.  Once that's done, it needs 
to be reviewed and merged, like a regular branch.  Since you've been so 
gracious as to be the release manager, I'll volunteer for some deputy- 
release-manager responsibilities and be personally responsible for that 
review.  I don't mind if somebody beats me to it, but let me know when 
you think you'll be done and I'll make an effort to be available on IRC 
to do the review immediately once you're done.

There are still some outstanding tickets in the "8.2+1" milestone: you 
should either harass someone to fix them, or remove them from the 
milestone and roll them over into a new one, so that they don't linger 
past the actual release: <http://bit.ly/twisted-9-milestone>.

Finally, you have to actually cut the release.  A bewildering array of 
out-of-date, incomplete, and incorrect information about how to do that 
can be found here:

    <http://twistedmatrix.com/trac/wiki/ReleaseProcedure>

and can be inferred from here:

    <http://twistedmatrix.com/trac/wiki/ReleaseAutomation>

Chris can correct me if I'm wrong, but I believe the most up-to-date and 
correct information is to be found encoded in the tools linked from 
tickets on the ReleaseAutomation page.  There are a couple of command- 
line tools which you have to run, and once you've got their output it 
should be fairly obvious what to do.

Thanks again, and good luck!



From jesper at taxboel.dk  Tue Jul  7 09:20:41 2009
From: jesper at taxboel.dk (=?ISO-8859-1?Q?Jesper_Taxb=F8l?=)
Date: Tue, 7 Jul 2009 17:20:41 +0200
Subject: [Twisted-Python] Failed to load application: cannot import name app
Message-ID: <e78558910907070820q2bdff4b8j75fe3ea40a788417@mail.gmail.com>

Hi Guys,

I stumpled upon a small dns filter program, that I am having trouble
running, due to "twisted.internet.app" being deprecated. I get the following
output "Failed to load application: cannot import name app"

Im running "twistd (the Twisted daemon) 2.5.0"

Any advice on how to proceed?

Kind regards

Tax

#!/usr/bin/python
#
# Run this as root with the command
#   twistd -y dnsfilter.py

from twisted.internet import app, defer
from twisted.protocols import dns
from twisted.names import client, server

roots = [
('198.41.0.4',53), ('128.9.0.107',53), ('192.33.4.12',53),
('128.8.10.90',53),
('192.203.230.10',53), ('192.5.5.241',53), ('192.112.36.4',53),
('128.63.2.53',53), ('192.36.148.17',53), ('192.58.128.30',53),
('193.0.14.129',53), ('198.32.64.12',53), ('202.12.27.33',53), ]

#roots = [('202.129.64.42',53)]   # just use my ISP's DNS

VERISIGN='@^n\x0b' # 64.94.110.11

class AntiVerisignResolver(client.Resolver):
    def filterAnswers(self, message):
        if message.trunc:
            return
self.queryTCP(message.queries).addCallback(self.filterAnswers)
        else:
            for i in range(len(message.answers)):
                x = message.answers[i]
                if x.type==1 and x.payload and x.payload.address==VERISIGN:
                    message.answers[i] = None
            return (filter(lambda x:x,message.answers),
                    message.authority,
                    message.additional)

verbosity = 0
resolver = AntiVerisignResolver(servers=roots)
f = server.DNSServerFactory(clients=[resolver], verbose=verbosity)
p = dns.DNSDatagramProtocol(f)
f.noisy = p.noisy = verbosity

application = app.Application('Non caching anti-verisign domain name
resolver')
application.listenUDP(53, p)
application.listenTCP(53, f)


src:
http://osdir.com/ml/python.twisted/2003-09/msg00055.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090707/28f63316/attachment.html>

From exarkun at divmod.com  Tue Jul  7 09:37:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Jul 2009 11:37:19 -0400
Subject: [Twisted-Python] Failed to load application: cannot import name
 app
In-Reply-To: <e78558910907070820q2bdff4b8j75fe3ea40a788417@mail.gmail.com>
Message-ID: <20090707153719.22176.558594791.divmod.quotient.13976@henry.divmod.com>

On Tue, 7 Jul 2009 17:20:41 +0200, Jesper Taxbøl <jesper at taxboel.dk> wrote:
>Hi Guys,
>
>I stumpled upon a small dns filter program, that I am having trouble
>running, due to "twisted.internet.app" being deprecated. I get the following
>output "Failed to load application: cannot import name app"
>
>Im running "twistd (the Twisted daemon) 2.5.0"
>
>Any advice on how to proceed?
>
>Kind regards
>
>Tax
>
> [snip]
>application = app.Application('Non caching anti-verisign domain name
>resolver')
>application.listenUDP(53, p)
>application.listenTCP(53, f)
>

I think the `listenUDP´ line probably causes an AttributeError to be raised.
This prevents the tac file from being evaluated completely, so twistd ends
up with an exception instead of an application.  Take a look at the classes
in twisted.application.internet (eg UDPServer, TCPServer) for the way to set
up servers the new way.

Jean-Paul



From antonio.beamud at gmail.com  Tue Jul  7 11:13:33 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Tue, 07 Jul 2009 19:13:33 +0200
Subject: [Twisted-Python] Connecting to multiple servers
Message-ID: <4A53823D.8040303@gmail.com>

Hi all:
What's the smart way to close the reactor and exit in an app like that:

-------------------------
from twisted.internet import reactor
from twisted.web.client import getPage

def gotPageCallback(page):
     print "got a page!"

getPage('http://www.google.com').addCallback(gotPageCallback)
getPage('http://www.yahoo.com').addCallback(gotPageCallback)

reactor.run()
--------------------------

For example with a global counter and when reach to 2, then reactor.stop()?

If I use reactor.connectTCP a Connector object is returned and no
deferred to work with... How do I know when the connection has finished?

Greetings.




From grickert at coldstorage.com  Tue Jul  7 11:34:32 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 7 Jul 2009 13:34:32 -0400
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <4A53823D.8040303@gmail.com>
References: <4A53823D.8040303@gmail.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Antonio Beamud Montero
>Sent: Tuesday, July 07, 2009 1:14 PM
>To: Twisted general discussion
>Subject: [Twisted-Python] Connecting to multiple servers
>
>Hi all:
>What's the smart way to close the reactor and exit in an app like that:
>

...you could try this (slightly modified from your example):

from twisted.internet import reactor, defer
from twisted.web.client import getPage

def gotPageCallback(page):
     print "got a page!"

dlist = [getPage('http://www.google.com').addCallback(gotPageCallback)]
dlist.append(getPage('http://www.yahoo.com').addCallback(gotPageCallback
))

defer.DeferredList(dlist).addCallback(lambda _: reactor.stop())

reactor.run()




From sflist at ihonk.com  Tue Jul  7 15:18:17 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 14:18:17 -0700
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
Message-ID: <1247001497.8271.22089.camel@lothar>

Hi all,

If from inside my twisted program I do...

commands.getstatusoutput('sudo blah blah')

...it works great. If instead I do...

utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin',
args=('blah blah',))

...it gets stuck asking for the sudo password. I've tried a bunch of
variations in the latter call, like lumping the args into the executable
string, getting rid of "/usr/bin" in the executable, changing the path
to the executing user's home directory and so on. Any ideas?

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090707/926275f1/attachment.html>

From maarten at treewalker.org  Tue Jul  7 15:46:39 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Tue, 7 Jul 2009 23:46:39 +0200
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
In-Reply-To: <1247001497.8271.22089.camel@lothar>
References: <1247001497.8271.22089.camel@lothar>
Message-ID: <200907072346.40323.maarten@treewalker.org>

On Tuesday 07 July 2009, Steve Freitas wrote:

> If from inside my twisted program I do...
>
> commands.getstatusoutput('sudo blah blah')
>
> ...it works great. If instead I do...
>
> utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin',
> args=('blah blah',))

Did you try "args=('blah', 'blah')"?

Unlike when using the full command line, spaces in arguments are most likely 
preserved instead of acting as separators.

Bye,
		Maarten




From michaelnt at gmail.com  Tue Jul  7 15:41:32 2009
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 7 Jul 2009 22:41:32 +0100
Subject: [Twisted-Python] sudo asking for a password during
	utils.getProcessOutputAndValue()
In-Reply-To: <1247001497.8271.22089.camel@lothar>
References: <1247001497.8271.22089.camel@lothar>
Message-ID: <4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>

2009/7/7 Steve Freitas <sflist at ihonk.com>:
> Hi all,
>
> If from inside my twisted program I do...
>
> commands.getstatusoutput('sudo blah blah')
>
> ...it works great. If instead I do...

Does working mean it sucessfully asks for the password or that it
doesn't ask for the password?

>
> utils.getProcessOutputAndValue('/usr/bin/sudo', path='/usr/bin', args=('blah
> blah',))
>
> ...it gets stuck asking for the sudo password. I've tried a bunch of
> variations in the latter call, like lumping the args into the executable
> string, getting rid of "/usr/bin" in the executable, changing the path to
> the executing user's home directory and so on. Any ideas?

sudo can cache your password for a period of time, so you won't have
to enter it every time you run a sudo command.

Michael



From sflist at ihonk.com  Tue Jul  7 16:05:57 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 15:05:57 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>
References: <1247001497.8271.22089.camel@lothar>
	<4d6ba3de0907071441u68a8bcafs90387d4bcef6158f@mail.gmail.com>
Message-ID: <1247004357.8271.22235.camel@lothar>

Hi Michael

On Tue, 2009-07-07 at 22:41 +0100, Michael Thompson wrote:

> Does working mean it sucessfully asks for the password or that it
> doesn't ask for the password?


It successfully doesn't ask for the password.


> sudo can cache your password for a period of time, so you won't have
> to enter it every time you run a sudo command.


I have /etc/sudoers set up to never request a password for this case.

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090707/4de1cad3/attachment.html>

From sflist at ihonk.com  Tue Jul  7 16:06:49 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Tue, 07 Jul 2009 15:06:49 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <200907072346.40323.maarten@treewalker.org>
References: <1247001497.8271.22089.camel@lothar>
	<200907072346.40323.maarten@treewalker.org>
Message-ID: <1247004409.8271.22240.camel@lothar>

Hi Maarten,

On Tue, 2009-07-07 at 23:46 +0200, Maarten ter Huurne wrote:

> Did you try "args=('blah', 'blah')"?


Ah ha! That did it. Wonder why that works.

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090707/10c7f7f1/attachment.html>

From exarkun at divmod.com  Tue Jul  7 17:25:16 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 7 Jul 2009 19:25:16 -0400
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <1247004409.8271.22240.camel@lothar>
Message-ID: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>

On Tue, 07 Jul 2009 15:06:49 -0700, Steve Freitas <sflist at ihonk.com> wrote:
>Hi Maarten,
>
>On Tue, 2009-07-07 at 23:46 +0200, Maarten ter Huurne wrote:
>
>> Did you try "args=('blah', 'blah')"?
>
>
>Ah ha! That did it. Wonder why that works.
>

I suppose your sudoers configuration file wasn't recognizing the command
before (since it was indeed a different command) and so wasn't letting you
go through the no-password case.

Jean-Paul



From termim at gmail.com  Tue Jul  7 21:56:26 2009
From: termim at gmail.com (Mikhail)
Date: Wed, 8 Jul 2009 03:56:26 +0000 (UTC)
Subject: [Twisted-Python] untwisting twistd
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com><AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org><loom.20090702T031116-652@post.gmane.org><44AF9808-CD1F-47E8-91A3-BDE098628749@bubblehouse.org><loom.20090702T221942-858@post.gmane.org>
	<58B8E1E7-538C-43D2-A9C7-92C9B27285FD@googlemail.com>
	<0C40B34038FD824FACDB387E7788728702D19693@seaxch08.desktop.isilon.com>
Message-ID: <loom.20090708T035353-91@post.gmane.org>

Thanks Jared, this is exactly what I was missing!




From jml at mumak.net  Tue Jul  7 22:31:53 2009
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 8 Jul 2009 14:31:53 +1000
Subject: [Twisted-Python] Possible Twisted sprint
Message-ID: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>

Hello all,

I've recently returned from EuroPython where I got a chance to work
with Thomas Hervé on Twisted. In the giddy rush of success I thought,
"Wouldn't it be great if we could get a whole week to do this?".

I propose that:
  - we arrange a week long sprint in Boston this year.
  - we ask the PSF & the TSF to assist with travel expenses for some
of the more distant community members
  - the Boston folk arrange a venue
  - individuals figure out how to get the time to attend.
  - we determine a date asap.

In the absence of any better ideas, I suggest that the theme of the
sprint be "fix as many bugs as possible".

As for the date, it should be no sooner than September 7. As a
starting point, let's say Sep 28-Oct 2.

Because we'll be asking external entities for money, it's important
that we get the details sorted out as soon as possible: when is it
going to be, who is flying in, how much do we need.

And, of course, the most important detail -- do you think we should do this?

psyched,
jml



From asset at impactdamage.com  Wed Jul  8 01:00:53 2009
From: asset at impactdamage.com (asset)
Date: Wed, 8 Jul 2009 00:00:53 -0700
Subject: [Twisted-Python] Conch, getting the avatarId, session number,
	and terminal protocol instance of all connected users.
Message-ID: <40cb09f4$41615ff9$1d4e205$@com>

I got just what I needed with a custom TerminalRealm sending the avatarId 
and TerminalUser to a custom TerminalSession, grabbing client host, port, 
sessionno and terminal at openShell(); then put in some cleanup on 
closed().

Thanks for pointing me right where I needed to go!

------------------------------

On Sat, 4 Jul 2009 02:11:36 -0700, asset  wrote:
>Ive been at it for several days now trying to get at the username
>(avatarId), session id (SSHChannel session # I imagine), and terminal
>protocol instance (recvline.HistoricRecvLine) of my application's SSH
>terminal service's clients.  Specifically, I'm trying to expose these 
three
>things (for all connected users) to my terminal commands which are using
>the plugin system.
>
>I'm not considerably far off from this example for the setup,
>http://twistedmatrix.com/projects/conch/documentation/examples/demo_recvlin
e
>.tac, minus the telnet support.
>
>For the life of me I can't seem to determine how best to approach this.
>Ive come as far as getting a list of the terminal 
recvline.HistoricRecvLine
>instances and then being able to manipulate the client terminals 
directly,
>but I need the usernames from the avatars and session id as well.
>
>I imagine this is a pretty common and simple thing, so I'm hoping that
>somebody can point me in the right direction.  Please help if you can.

The realm's requestAvatar is passed the avatarId:

http://twistedmatrix.com/trac/browser/trunk/twisted/conch/manhole_ssh.py#L82


See how this realm (which I assume is the one you're using, since it is 
the
one used by demo_recvline) passes the avatarId to its `userFactory?, but 
the
`TerminalUser? which is the default `userFactory? ignores it.

It seems like you want to provide an alternate `userFactory? which saves 
the
avatarId passed to it.

For the session id, perhaps this information you can find on the 
connection
object.  See the API documentation:

http://twistedmatrix.com/documents/current/api/twisted.conch.ssh.connection.
SSHConnection.html

Jean-Paul

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090708/db67f539/attachment.html>

From antonio.beamud at gmail.com  Wed Jul  8 02:41:45 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Wed, 08 Jul 2009 10:41:45 +0200
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
References: <4A53823D.8040303@gmail.com>
	<BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
Message-ID: <4A545BC9.4050608@gmail.com>

Gerrat Rickert escribió:
> ...you could try this (slightly modified from your example):
>
> from twisted.internet import reactor, defer
> from twisted.web.client import getPage
>
> def gotPageCallback(page):
>      print "got a page!"
>
> dlist = [getPage('http://www.google.com').addCallback(gotPageCallback)]
> dlist.append(getPage('http://www.yahoo.com').addCallback(gotPageCallback
> ))
>
> defer.DeferredList(dlist).addCallback(lambda _: reactor.stop())
>
> reactor.run()
>   
Ok, but when I use reactor.connectTCP no deferred is returned.. How I 
can stop the reactor when all connections has finished?

Thanks.




From grickert at coldstorage.com  Wed Jul  8 07:22:54 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 8 Jul 2009 09:22:54 -0400
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <4A545BC9.4050608@gmail.com>
References: <4A53823D.8040303@gmail.com><BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>
	<4A545BC9.4050608@gmail.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Antonio Beamud Montero
>Sent: Wednesday, July 08, 2009 4:42 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Connecting to multiple servers

<snip>

>Ok, but when I use reactor.connectTCP no deferred is returned.. How I
>can stop the reactor when all connections has finished?
>
>Thanks.

...it would be helpful if you provided an actual example 
(your example did not use a "reactor.connectTCP");
but in general terms, if you're connecting to multiple servers
and want to wait till all connections are finished, you'll need to 
track the connections, and call reactor.stop() once the last
connection is closed.

...so, using the example at:
http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeTw
istedtalktomultipleclientsconnecttomultipleservers
- just call reactor.stop() in connectionLost method
after all connections have been lost

Regards,
	Gerrat



From antonio.beamud at gmail.com  Wed Jul  8 08:33:07 2009
From: antonio.beamud at gmail.com (Antonio Beamud Montero)
Date: Wed, 08 Jul 2009 16:33:07 +0200
Subject: [Twisted-Python] Connecting to multiple servers
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>
References: <4A53823D.8040303@gmail.com><BB13E4C4D649234F84A01F6DF64BB87F046475B3@ccs-ex01.coldstorage.com>	<4A545BC9.4050608@gmail.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0464777E@ccs-ex01.coldstorage.com>
Message-ID: <4A54AE23.5000204@gmail.com>

Gerrat Rickert escribió:
>> Ok, but when I use reactor.connectTCP no deferred is returned.. How I
>> can stop the reactor when all connections has finished?
>>
>> Thanks.
>>     
>
> ...it would be helpful if you provided an actual example 
> (your example did not use a "reactor.connectTCP");
> but in general terms, if you're connecting to multiple servers
> and want to wait till all connections are finished, you'll need to 
> track the connections, and call reactor.stop() once the last
> connection is closed.
>   
Well, finally I solved the problem next way:

I've created a factory that inherits from ReconnectingClientFactory. In 
the __init__, I've created a deferred:

  def __init__(self):
        self.deferred = defer.Deferred()

If all goes ok, then self.deferred.callback('ok'), else 
(clientConnectionLost, etc) self.deferred.errback(reason).
When I create the factory to pass it to reactor.connectTCP, I save the 
deferred in a list:

  dlist = []
  myf = MyFactory(args)
  reactor.connectTCP(host, port, myf)
  myf.deferred.addCallback(lambda _: None)
  myf.deferred.addErrback(lambda _:None)
  dlist.append(myf.deferred)
  ...
  flist = defer.DeferredList(dlist)
  flist.addCallback(lambda _: reactor.stop())
  flist.addErrback(lambda _: reactor.stop())

  reactor.run()

I think it's the best way, only when all connections have finished the 
reactor is stopped.

Greetings.




From dsyzling at gmail.com  Wed Jul  8 08:33:49 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 15:33:49 +0100
Subject: [Twisted-Python] imap and noop
Message-ID: <4A54AE4D.8040601@gmail.com>

I'm new to twisted and was experimenting trying to create an imap server 
based on the example within Twisted Network Programming Essentials. My 
test client is Thunderbird.

I'm wondering if anyone has had any experience handling the 'noop' 
command here's my scenario:
- I have two unread messages in a folder, I open thunderbird, select 
this folder and then select trash - trash has no messages.
- Each folder is selected and fetched with a uid:*
- My server correctly responds.
- Each time I now select the trash folder since it didn't have any 
messages to start with Thunderbird continues to send noops. I think it's 
waiting for my server to respond with exists or recent.
- Ok so I continue, I read and delete the two messages in my folder, 
Thunderbird issues copy commands, I dutifully flag the messages in the 
folder as \Deleted and the messages are added (via addMessage) to the 
Trash folder with the correct flags - \Seen.
- But now if I select the Trash folder thunderbird just sends noop - 
again it looks like it wants the server to send back exists or recent to 
indicate there are now messages in that folder - even though it's just 
copied stuff to the folder.

If in the above scenario I don't select the trash folder first and 
messages are deleted everything works fine - but in that case the client 
is sending fetch uid:*. It seems that if Thunderbird detects no messages 
in a folder it will noop until the server responds with an update.

Anyone seen or worked around this? Are there hooks in the imap framework 
to allow a mailbox or my mailserver to respond to noops? I don't appear 
to have any mailbox listeners subscribed and I tried overriding the noop 
for my derived IMAP4Server protocol derived class - but to no avail.


Darren



From exarkun at divmod.com  Wed Jul  8 08:58:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Jul 2009 10:58:46 -0400
Subject: [Twisted-Python] imap and noop
In-Reply-To: <4A54AE4D.8040601@gmail.com>
Message-ID: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>

On Wed, 08 Jul 2009 15:33:49 +0100, Darren Syzling <dsyzling at gmail.com> wrote:
>I'm new to twisted and was experimenting trying to create an imap server
>based on the example within Twisted Network Programming Essentials. My
>test client is Thunderbird.
>
>I'm wondering if anyone has had any experience handling the 'noop'
>command here's my scenario:
>- I have two unread messages in a folder, I open thunderbird, select
>this folder and then select trash - trash has no messages.
>- Each folder is selected and fetched with a uid:*
>- My server correctly responds.
>- Each time I now select the trash folder since it didn't have any
>messages to start with Thunderbird continues to send noops. I think it's
>waiting for my server to respond with exists or recent.
>- Ok so I continue, I read and delete the two messages in my folder,
>Thunderbird issues copy commands, I dutifully flag the messages in the
>folder as \Deleted and the messages are added (via addMessage) to the
>Trash folder with the correct flags - \Seen.
>- But now if I select the Trash folder thunderbird just sends noop -
>again it looks like it wants the server to send back exists or recent to
>indicate there are now messages in that folder - even though it's just
>copied stuff to the folder.
>
>If in the above scenario I don't select the trash folder first and
>messages are deleted everything works fine - but in that case the client
>is sending fetch uid:*. It seems that if Thunderbird detects no messages
>in a folder it will noop until the server responds with an update.
>
>Anyone seen or worked around this? Are there hooks in the imap framework
>to allow a mailbox or my mailserver to respond to noops? I don't appear
>to have any mailbox listeners subscribed and I tried overriding the noop
>for my derived IMAP4Server protocol derived class - but to no avail.
>

You may want to use the IMailboxListener implementation on IMAP4Server to
handle this case (IMAP4's complicated, I'm not sure this is the right
direction to pursue, but it's *a* direction :).

The modeChanged, flagsChanged, and newMessages methods on IMAP4Server are
intended for use by your mailbox implementation.  In this case, it sounds
like you want to have your trash mailbox call newMessages when the messages
are copied into it.  This requires a bit of legwork on your part, keeping
track of the IMAP4Server protocol (or possibly more than one!) from the
mailbox code, but the result should be that when Thunderbird sends those
NOOPs, the server responds with one or both of EXISTS or RECENT (untagged).

Jean-Paul



From dsyzling at gmail.com  Wed Jul  8 09:32:37 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 16:32:37 +0100
Subject: [Twisted-Python] imap and noop
In-Reply-To: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
References: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
Message-ID: <4A54BC15.8070502@gmail.com>

Jean-Paul Calderone wrote:
>
> You may want to use the IMailboxListener implementation on IMAP4Server to
> handle this case (IMAP4's complicated, I'm not sure this is the right
> direction to pursue, but it's *a* direction :).
>   
I'm glad you said that I thought I was going mad, I'm mired in stateful 
conversations between client and server. This started out as a simple 
internal test tool. I spiked it and thought ok that's simple I can 
read/view messages, the code looked straight forward. Store some state 
for each mailbox pickle to a file for simplicity. But then I got deeper 
into the whole delete to trash (which is in fact copy) and that's when 
it all went horribly wrong. Thunderbird can start multiple sessions 
which creates multiple mailbox instances server side and that throws the 
whole state management issue up in the air. So I went stateless and 
re-read the pickle file on each mailbox entry point - ugly but it 
improved consistency and made the whole thing easier to reason.  But the 
noop has thrown me because this may expect me to respond to the 
individual session (mailbox instance) - something you're alluding to 
below about tracking the IMAP4Server protocol.
> The modeChanged, flagsChanged, and newMessages methods on IMAP4Server are
> intended for use by your mailbox implementation.  In this case, it sounds
> like you want to have your trash mailbox call newMessages when the messages
> are copied into it.  This requires a bit of legwork on your part, keeping
> track of the IMAP4Server protocol (or possibly more than one!) from the
> mailbox code, but the result should be that when Thunderbird sends those
> NOOPs, the server responds with one or both of EXISTS or RECENT (untagged).
>   
Thanks I'll have a poke around and see how this looks. I really ought to 
cap my time on this, it was only an internal test helper. I may end up 
telling my test users - 'ah yeah well, just close Thunderbird, restart 
and sign in and those messages will magically appear.' Although knowing 
me it will niggle at me until I've solved it.


Darren



From dsyzling at gmail.com  Wed Jul  8 16:42:44 2009
From: dsyzling at gmail.com (Darren Syzling)
Date: Wed, 08 Jul 2009 23:42:44 +0100
Subject: [Twisted-Python] imap and noop
In-Reply-To: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
References: <20090708145846.2543.1812967854.divmod.quotient.285@henry.divmod.com>
Message-ID: <4A5520E4.9020505@gmail.com>

Jean-Paul Calderone wrote:
> You may want to use the IMailboxListener implementation on IMAP4Server to
> handle this case (IMAP4's complicated, I'm not sure this is the right
> direction to pursue, but it's *a* direction :).
>
>   
There seems to be an immediate issue with this approach and Thunderbird. 
The IMAP4Server implementation implements IMailboxListener but only 
subscribes (addListener) to the mailbox during _cbSelectWork - i.e. when 
the folder is selected. Thunderbird creates multiple mailbox instances 
(connections) but doesn't issue a select on all of them. When addMessage 
is called the mailbox instance that's used sometimes happens to be the 
one which has not been 'selected' therefore has no listeners so I can't 
notify the IMAP4Server.

I'll take a look tomorrow to see if anything in IMAP4Server can be 
overriden to add the listener earlier and for my mailbox to ignore a 
listener being registered twice.


Darren



From glyph at divmod.com  Wed Jul  8 21:26:43 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 09 Jul 2009 03:26:43 -0000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>


On 8 Jul, 04:31 am, jml at mumak.net wrote:
>I've recently returned from EuroPython where I got a chance to work
>with Thomas Herv� on Twisted. In the giddy rush of success I thought,
>"Wouldn't it be great if we could get a whole week to do this?".

Yay!
>I propose that:
>  - we arrange a week long sprint in Boston this year.
>  - we ask the PSF & the TSF to assist with travel expenses for some
>of the more distant community members
>  - the Boston folk arrange a venue
>  - individuals figure out how to get the time to attend.
>  - we determine a date asap.

Sounds like a good proposal to me, but I recommend getting individuals 
to accept responsibilities for parts of this so that there are fewer 
"we"s in it.
>In the absence of any better ideas, I suggest that the theme of the
>sprint be "fix as many bugs as possible".

Good goals are as arbitrary as possible, so how about this to modify 
your proposal:

"Under 1000 Open Tickets"

Generally speaking I think sprints are better for feature development 
than bugfixing, but mature projects like Twisted tend to suffer under 
the weight of collected bugs, making it difficult to file tickets for 
new features and get them closed in a timely manner.  Let's lighten that 
load.

Even more specifically: I recommend that we dedicate at least one day of 
the sprint purely to triage.  Being together in person will allow us to 
quickly discuss the relative priority of different goals for Twisted, as 
well as identify duplicates.  It's much easier to yell out "does anybody 
remember a ticket like this" in a sprint room than to fight with Trac, 
or even Google, search.
>As for the date, it should be no sooner than September 7. As a
>starting point, let's say Sep 28-Oct 2.

This should be a pretty good time for me, and it's in my calendar now. 
Anyone else going to have problems making it to an end-of-September 
sprint?
>Because we'll be asking external entities for money, it's important
>that we get the details sorted out as soon as possible: when is it
>going to be, who is flying in, how much do we need.

It sounds like our current attendance is 2.
>And, of course, the most important detail -- do you think we should do 
>this?

I think so, yes.



From sflist at ihonk.com  Thu Jul  9 03:32:25 2009
From: sflist at ihonk.com (Steve Freitas)
Date: Thu, 09 Jul 2009 02:32:25 -0700
Subject: [Twisted-Python] sudo asking for a password during
 utils.getProcessOutputAndValue()
In-Reply-To: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>
References: <20090707232516.2543.1736772973.divmod.quotient.136@henry.divmod.com>
Message-ID: <1247131945.8271.28651.camel@lothar>

On Tue, 2009-07-07 at 19:25 -0400, Jean-Paul Calderone wrote:

> I suppose your sudoers configuration file wasn't recognizing the command
> before (since it was indeed a different command) and so wasn't letting you
> go through the no-password case.


Ahh, okay. Between that and Maarten's illumination, I've got it.

Thanks!

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090709/cc350d19/attachment-0001.html>

From paulswartz at gmail.com  Thu Jul  9 07:20:35 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Thu, 9 Jul 2009 09:20:35 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com> 
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
Message-ID: <324cfb540907090620q492f30f0gecb42551d1e29928@mail.gmail.com>

On Wed, Jul 8, 2009 at 11:26 PM, <glyph at divmod.com> wrote:
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>
> This should be a pretty good time for me, and it's in my calendar now.
> Anyone else going to have problems making it to an end-of-September sprint?

If it's before mid-October, I can only make it for Wednesday-Friday.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin



From smhollingsworth at gmail.com  Thu Jul  9 09:23:04 2009
From: smhollingsworth at gmail.com (Sean Hollingsworth)
Date: Thu, 9 Jul 2009 15:23:04 +0000
Subject: [Twisted-Python] Perspective broker and SSL
Message-ID: <66dccc4d0907090823l123454adw18ade26df1de1f5d@mail.gmail.com>

I'm trying to add SSL support to an app that makes use of Perspective
Broker. In my server I have the following:

ccf = ssl.ContextFactory()
ccf.method = SSL.TLSv1_METHOD
reactor.listenSSL(PORT, pb.PBServerFactory(RLFactory()), ccf)

and in my client I have this:

ccf = ssl.ClientContextFactory()
ccf.method = SSL.TLSv1_METHOD
reactor.connectSSL(server, MY_PORT, factory, ccf)
factory.getRootObject().addCallbacks(self._connected, self._connectFail)

When the client connects to the server, I get this:

2009/07/09 15:18 +0000 [Broker,0,216.162.33.146] Unhandled Error
    Traceback (most recent call last):
      File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line
48, in callWithLogger
        return callWithContext({"system": lp}, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/log.py", line
33, in callWithContext
        return context.call({ILogContext: newCtx}, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 59, in callWithContext
        return self.currentContext().callWithContext(ctx, func, *args, **kw)
      File "/usr/lib/python2.5/site-packages/twisted/python/context.py",
line 37, in callWithContext
        return func(*args,**kw)
    --- <exception caught here> ---
      File
"/usr/lib/python2.5/site-packages/twisted/internet/selectreactor.py", line
139, in _doReadOrWrite
        why = getattr(selectable, method)()
      File "/usr/lib/python2.5/site-packages/twisted/internet/tcp.py", line
362, in doRead
        return self.protocol.dataReceived(data)
      File "/usr/lib/python2.5/site-packages/twisted/spread/banana.py", line
215, in dataReceived
        raise NotImplementedError(("Invalid Type Byte %r" % (typebyte,)))
    exceptions.NotImplementedError: Invalid Type Byte '\xbd'

Am I going about this wrong or leaving something out?

Sean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090709/5eb79c3c/attachment.html>

From jkakar at kakar.ca  Thu Jul  9 10:42:31 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 9 Jul 2009 09:42:31 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>

Hi Jono,

On Tue, Jul 7, 2009 at 9:31 PM, Jonathan Lange<jml at mumak.net> wrote:
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Hervé on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".

Indeed, sprinting is super great!

> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
>
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.
>
> And, of course, the most important detail -- do you think we should do this?

I'm interested in attending.  The dates you've proposed sound fine.

Thanks,
J.



From lists at collab.nl  Thu Jul  9 11:05:55 2009
From: lists at collab.nl (Thijs Triemstra | Collab)
Date: Thu, 9 Jul 2009 18:05:55 +0100
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
Message-ID: <D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>

On 9 Jul 2009, at 17:42, Jamu Kakar wrote:

> Hi Jono,
>
> On Tue, Jul 7, 2009 at 9:31 PM, Jonathan Lange<jml at mumak.net> wrote:
>> I've recently returned from EuroPython where I got a chance to work
>> with Thomas Hervé on Twisted. In the giddy rush of success I thought,
>> "Wouldn't it be great if we could get a whole week to do this?".
>
> Indeed, sprinting is super great!
>
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>>
>> Because we'll be asking external entities for money, it's important
>> that we get the details sorted out as soon as possible: when is it
>> going to be, who is flying in, how much do we need.
>>
>> And, of course, the most important detail -- do you think we should  
>> do this?
>
> I'm interested in attending.  The dates you've proposed sound fine.

I'm also interesting in attending. I'd fly over from London so the  
sooner we have a confirmed date the better.

Cheers,

Thijs

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20090709/345842d2/attachment.sig>

From listsin at integrateddevcorp.com  Thu Jul  9 11:35:32 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 9 Jul 2009 13:35:32 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>
	<D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
Message-ID: <BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>

>>> As for the date, it should be no sooner than September 7. As a
>>> starting point, let's say Sep 28-Oct 2.


Works for me, as well.  I'm just an hour North in New Hampshire so I'm  
pretty flexible around anyone else's schedule.

S





From rgacote at AppropriateSolutions.com  Thu Jul  9 13:10:18 2009
From: rgacote at AppropriateSolutions.com (Raymond Cote)
Date: Thu, 09 Jul 2009 15:10:18 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>	<aa66e7aa0907090942r238a2bc4w3a0d5596990fd7fa@mail.gmail.com>	<D632FF23-CAB7-40C9-829E-EB656FDD51BC@collab.nl>
	<BE5D4E29-FB1B-48A7-84B9-07A18A3F7D4E@integrateddevcorp.com>
Message-ID: <4A56409A.9030004@AppropriateSolutions.com>

Steve Steiner (listsin) wrote:
>>>> As for the date, it should be no sooner than September 7. As a
>>>> starting point, let's say Sep 28-Oct 2.
>>>>         
>
>   
I'm hoping to be able to come for a day or two -- perhaps work on 
testing and/or documentation.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090709/4b66a8dd/attachment.html>

From micahel at gmail.com  Thu Jul  9 16:00:37 2009
From: micahel at gmail.com (Michael Hudson)
Date: Fri, 10 Jul 2009 10:00:37 +1200
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <aa0dfd860907091500p6ced99an5e924f0bffe57ce4@mail.gmail.com>

2009/7/8 Jonathan Lange <jml at mumak.net>:
> Hello all,
>
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Hervé on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".
>
> I propose that:
>  - we arrange a week long sprint in Boston this year.
>  - we ask the PSF & the TSF to assist with travel expenses for some
> of the more distant community members
>  - the Boston folk arrange a venue
>  - individuals figure out how to get the time to attend.
>  - we determine a date asap.
>
> In the absence of any better ideas, I suggest that the theme of the
> sprint be "fix as many bugs as possible".
>
> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
>
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.

In no particular order:

1) It sounds cool.
2) gosh New Zealand is a long way from everywhere
3) there's an event I wanted to get to here in New Zealand on the 3rd
of October.

I hope something comes of this, whether or not I make it!

Cheers,
mwh



From therve at free.fr  Sat Jul 11 02:49:24 2009
From: therve at free.fr (Thomas =?ISO-8859-1?Q?Herv=E9?=)
Date: Sat, 11 Jul 2009 10:49:24 +0200
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
Message-ID: <1247302164.3960.11.camel@minime>

Le mercredi 08 juillet 2009 à 14:31 +1000, Jonathan Lange a écrit :
> Hello all,
> 
> I've recently returned from EuroPython where I got a chance to work
> with Thomas Hervé on Twisted. In the giddy rush of success I thought,
> "Wouldn't it be great if we could get a whole week to do this?".
> 
> I propose that:
>   - we arrange a week long sprint in Boston this year.
>   - we ask the PSF & the TSF to assist with travel expenses for some
> of the more distant community members
>   - the Boston folk arrange a venue
>   - individuals figure out how to get the time to attend.
>   - we determine a date asap.
> 
> In the absence of any better ideas, I suggest that the theme of the
> sprint be "fix as many bugs as possible".
> 
> As for the date, it should be no sooner than September 7. As a
> starting point, let's say Sep 28-Oct 2.
> 
> Because we'll be asking external entities for money, it's important
> that we get the details sorted out as soon as possible: when is it
> going to be, who is flying in, how much do we need.
> 
> And, of course, the most important detail -- do you think we should do this?

I'd be glad to be here, of course. I don't have anything scheduled
around September/October for now, so those dates are great for me.

Regarding the topic, I'd like to at least come up with a list of tasks,
so that we can discuss a bit about them before and really get stuff done
during the sprint.

My suggestions, which may be attached to lists of tickets:
 * general twistd improvements, logging in particular
 * conch bugs fixing
 * any bugs that will make some buildbot slaves green (and kill
intermittent failures)
 * maybe twisted web client?

-- 
Thomas




From vilmos.gyorgy at gmail.com  Sat Jul 11 11:16:26 2009
From: vilmos.gyorgy at gmail.com (=?ISO-8859-1?Q?Gy=F6rgy_Vilmos?=)
Date: Sat, 11 Jul 2009 19:16:26 +0200
Subject: [Twisted-Python] Twisted and unladen swallow
In-Reply-To: <dac6660e0907090030l4927894etd44a5b4569088954@mail.gmail.com>
References: <dac6660e0907090030l4927894etd44a5b4569088954@mail.gmail.com>
Message-ID: <dac6660e0907111016n576f1f39q151b89d86a04c910@mail.gmail.com>

Hi All,

I use twisted as a flexible (authoritative) DNS server, and apart from its
speed, I'm completely pleased with it.
As you may know, Google has started a project -named unladen swallow- to
improve python's performance, so I've taken a quick look at it, compiling
the latest version (from svn trunk, which is based on python 2.6.1) on
FreeBSD and compared the numbers with plain python's (2.6.2) performance.

As this is a DNS server, the performance indicator is queries per second.

The numbers are here (in hungarian):
http://suckit.blog.hu/2009/07/05/unladen_swallow

The first table has the stock 2.6.2 python vs unladen python performance
numbers (with an average of 3.5% speed increase), while the next table shows
relative performance between unladen's -j whenhot and -j always settings
(the first compiles code only when it's frequently executed, while the
latter compiles everything at the first occurrence).
-j always of course eats a lot of CPU power when compiling and also
maintains a big memory footprint (712 MiB resident memory) throughout the
process lifecycle.

I hope the guys will be able to squeeze more out of python...

-- 
http://suckit.blog.hu/



From exarkun at twistedmatrix.com  Sat Jul 11 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 12 Jul 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1247371513.98.1062952497@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090712/f1159903/attachment-0001.html>

From jml at mumak.net  Tue Jul 14 01:59:07 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 14 Jul 2009 17:59:07 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
Message-ID: <d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>

On Tue, Jul 7, 2009 at 8:07 PM, <glyph at divmod.com> wrote:
>
> On 07:54 am, jml at mumak.net wrote:
>>Hello all,
>>
>>With some trepidation and a complete willingness to fail, I'm offering
>>my services as Twisted release manager, starting Tuesday next week.
>
> Hooray!
>>I have only two questions:
>>  - Am I accepted?
>
> MWAHAHAHAHAHA, WELCOME TO YOUR DOOM!
>
> By which I mean, "yes".  radix and exarkun have both dedicated some
> effort to making this release happen, and I'm sure we'll all continue to
> help you in this role, but there has been a discernable ... lack of
> enthusiasm for anyone to wear the official "release manager" hat.  We
> all appreciate your brave sacrifice.

Why, thank you. I can only hope it's something of a sub-prime doom.

>>  - Where do I begin?
>
> There is a ticket, <http://twistedmatrix.com/trac/ticket/3860>, which
> you will now find is assigned to you.
>

Rock and roll.

> Some work has already taken place to update the NEWS files on a branch
> for that ticket, which is the bulk of the work associated with the
> releases, but it's not complete.  Also, since this branch was made, some
> features have been added and some regressions fixed, so it should be
> merged forward.
>

I'll try to get started on this tonight.

Also, unless you object, I'll try to send weekly emails on the status
of the release until it's actually out.

jml



From jml at mumak.net  Tue Jul 14 03:54:13 2009
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 14 Jul 2009 19:54:13 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
Message-ID: <d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>

On Thu, Jul 9, 2009 at 1:26 PM, <glyph at divmod.com> wrote:
>
> On 8 Jul, 04:31 am, jml at mumak.net wrote:
>>
>> I've recently returned from EuroPython where I got a chance to work
>> with Thomas Hervé on Twisted. In the giddy rush of success I thought,
>> "Wouldn't it be great if we could get a whole week to do this?".
>
> Yay!

Thanks everyone for your replies & enthusiasm!

Rather than reply to emails individually, I'm just going to reply to this one.

I've also set up http://twistedmatrix.com/trac/wiki/Sprint2009 to
track all of the details.

>>
>> I propose that:
>>  - we arrange a week long sprint in Boston this year.
>>  - we ask the PSF & the TSF to assist with travel expenses for some
>> of the more distant community members
>>  - the Boston folk arrange a venue
>>  - individuals figure out how to get the time to attend.
>>  - we determine a date asap.
>
> Sounds like a good proposal to me, but I recommend getting individuals to
> accept responsibilities for parts of this so that there are fewer "we"s in
> it.

To clarify:

- jml arranges a week-long Twisted sprint.
- People who want the TSF or PSF to assist with travel expenses say so
on the wiki page. I'll then speak to the TSF & PSF on behalf of the
sprint as a whole.
- Individuals figure out how they can get the time to attend
- *** I need a volunteer to arrange a venue in Boston. ***

READ THIS BIT!

1. If you are attending, add your name; if you are attending subject
to other conditions (funding, leave etc) then add your name & say
'tentative'; if you are _not_ attending, add your name to the not
attending list.

2. This really is a meeting of individuals.  I cannot promise who will
be there or how good it will be. I can promise that as of Friday, July
17th, the date & city will be set in concrete, even if I can't attend.

3. Put your attendance information on the wiki asap & keep it up to
date. This will help others.

>>
>> In the absence of any better ideas, I suggest that the theme of the
>> sprint be "fix as many bugs as possible".
>
> Good goals are as arbitrary as possible, so how about this to modify your
> proposal:
>
> "Under 1000 Open Tickets"
>

Yes, that's much better :)

> Even more specifically: I recommend that we dedicate at least one day of the
> sprint purely to triage.  Being together in person will allow us to quickly
> discuss the relative priority of different goals for Twisted, as well as
> identify duplicates.  It's much easier to yell out "does anybody remember a
> ticket like this" in a sprint room than to fight with Trac, or even Google,
> search.

In the context of Twisted's bug tracker, I don't really know what
"triage" would mean. Care to clarify (perhaps on the wiki page?)

>>
>> As for the date, it should be no sooner than September 7. As a
>> starting point, let's say Sep 28-Oct 2.
>
> This should be a pretty good time for me, and it's in my calendar now.
> Anyone else going to have problems making it to an end-of-September sprint?

This seems to be as good a date as any.

jml



From vishal_shetye at persistent.co.in  Tue Jul 14 08:29:07 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 14 Jul 2009 19:59:07 +0530
Subject: [Twisted-Python] Re adbapi and multiple queries in single
	transaction.
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B9A78536@EXCHANGE.persistent.co.in>

Hi,

I went through several posts and blogs regarding long lived transactions in twisted.

Some of them are

-        A bug with current status won't fix. http://twistedmatrix.com/trac/ticket/303

-        Laxdb from sandbox. http://archives.free.net.ph/message/20050831.235536.440061b8.en.html#twisted-python

-        A blog entry by glyph. http://glyph.twistedmatrix.com/2008/12/databases-and-twisted-when-threads-are.html


I have a scenario as given below. All the steps to be done sequentially and in a single transaction.
1. do some db queries.
2. interact with some module that uses twisted framework.
3. do some db queries.

As I can see adbapi's runInteraction runs the interaction in a new thread.
I read that most of the twisted code is not thread safe so it is recommended not to use anything except for the reactor.callFromThread in the threads other than reactor's main thread.
Does this mean that only approach remains is something similar to laxdb?

The bug mentioned above says patch provided has a DOS problem and solution is to use separate threadpools. Does the same problem exist with laxdb?

Regards,
vishal

DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090714/4a0616c4/attachment-0001.html>

From vitaly at synapticvision.com  Tue Jul 14 09:10:10 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 14 Jul 2009 11:10:10 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
Message-ID: <20090714111010.67973qnlxsgjlxgk@216.129.205.5>

Hello,

is there any way to cancel the Deferred callback in those examples?

1.
d = defer.Deferred()
d.addCallback(methodA).addErrback(methodErr)
d.callback(None)

2.
d = methodB().addErrback(methodErr)
wfd = defer.waitForDeferred(d)



Appreciate any help.




From exarkun at divmod.com  Tue Jul 14 09:21:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Jul 2009 11:21:40 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714111010.67973qnlxsgjlxgk@216.129.205.5>
Message-ID: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>

On Tue, 14 Jul 2009 11:10:10 -0400, vitaly at synapticvision.com wrote:
>Hello,
>
>is there any way to cancel the Deferred callback in those examples?
>
>1.
>d = defer.Deferred()
>d.addCallback(methodA).addErrback(methodErr)
>d.callback(None)
>
>2.
>d = methodB().addErrback(methodErr)
>wfd = defer.waitForDeferred(d)
>
>
>
>Appreciate any help.
>

Deferred doesn't have any cancellation features.  You can generally achieve
some sort of cancellation by supporting this in the application code creating
and consuming the Deferreds involved.

The details of how to do this depend on what exactly you want to happen when
you "cancel" the operation.

You can find one example of this in the implementation of Twisted's internal
thread-based name resolver:

http://twistedmatrix.com/trac/browser/trunk/twisted/internet/base.py#L193

You can find other examples in the implementation of any other Deferred-
returning API which also supports timeouts, eg the web client:

http://twistedmatrix.com/trac/browser/trunk/twisted/web/client.py#L198

Hope this helps,

Jean-Paul



From vitaly at synapticvision.com  Tue Jul 14 10:37:36 2009
From: vitaly at synapticvision.com (vitaly at synapticvision.com)
Date: Tue, 14 Jul 2009 12:37:36 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
Message-ID: <20090714123736.11049riy99ph5yrk@216.129.205.5>

Thank you,

"cancel" callback - stop running now what you've been asked to exec.
Example: some SQL query that takes 5 min and I need to cancel it  
anywhere in the middle and it, of course, it doesn't matter what the  
result set.

As far as I see from base.py and client.py, some sort of timeout now  
could achieve the cancel operation ?


Quoting "Jean-Paul Calderone" <exarkun at divmod.com>:

> On Tue, 14 Jul 2009 11:10:10 -0400, vitaly at synapticvision.com wrote:
>> Hello,
>>
>> is there any way to cancel the Deferred callback in those examples?
>>
>> 1.
>> d = defer.Deferred()
>> d.addCallback(methodA).addErrback(methodErr)
>> d.callback(None)
>>
>> 2.
>> d = methodB().addErrback(methodErr)
>> wfd = defer.waitForDeferred(d)
>>
>>
>>
>> Appreciate any help.
>>
>
> Deferred doesn't have any cancellation features.  You can generally achieve
> some sort of cancellation by supporting this in the application code creating
> and consuming the Deferreds involved.
>
> The details of how to do this depend on what exactly you want to happen when
> you "cancel" the operation.
>
> You can find one example of this in the implementation of Twisted's internal
> thread-based name resolver:
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/internet/base.py#L193
>
> You can find other examples in the implementation of any other Deferred-
> returning API which also supports timeouts, eg the web client:
>
> http://twistedmatrix.com/trac/browser/trunk/twisted/web/client.py#L198
>
> Hope this helps,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From jkakar at kakar.ca  Tue Jul 14 12:33:03 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Tue, 14 Jul 2009 11:33:03 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>
References: <d06a5cd30907072131k7acdc6b6xe75f1dc03e1e97d0@mail.gmail.com>
	<20090709032643.27019.364746689.divmod.xquotient.103@weber.divmod.com>
	<d06a5cd30907140254n4a7fe281gb65b3cbe4121a4fb@mail.gmail.com>
Message-ID: <aa66e7aa0907141133o300be2b3ld8f099fdd45a97ef@mail.gmail.com>

Hi,

On Tue, Jul 14, 2009 at 2:54 AM, Jonathan Lange<jml at mumak.net> wrote:
> 1. If you are attending, add your name; if you are attending subject
> to other conditions (funding, leave etc) then add your name & say
> 'tentative'; if you are _not_ attending, add your name to the not
> attending list.

I logged into the wiki and, it's very likely that it's obvious, but
I could find a way to edit the page.  I'm (tenative/Probably not).

Thanks,
J.



From exarkun at divmod.com  Tue Jul 14 13:43:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 14 Jul 2009 15:43:56 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <aa66e7aa0907141133o300be2b3ld8f099fdd45a97ef@mail.gmail.com>
Message-ID: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>

On Tue, 14 Jul 2009 11:33:03 -0700, Jamu Kakar <jkakar at kakar.ca> wrote:
>Hi,
>
>On Tue, Jul 14, 2009 at 2:54 AM, Jonathan Lange<jml at mumak.net> wrote:
>> 1. If you are attending, add your name; if you are attending subject
>> to other conditions (funding, leave etc) then add your name & say
>> 'tentative'; if you are _not_ attending, add your name to the not
>> attending list.
>
>I logged into the wiki and, it's very likely that it's obvious, but
>I could find a way to edit the page.  I'm (tenative/Probably not).

Oops.  You probably can't, because wiki editing is disabled, even for
registered accounts unless you have a special wiki editing permission,
as a spam prevention measure.

Jean-Paul



From db3l.net at gmail.com  Tue Jul 14 15:22:29 2009
From: db3l.net at gmail.com (David Bolen)
Date: Tue, 14 Jul 2009 17:22:29 -0400
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
	<20090714123736.11049riy99ph5yrk@216.129.205.5>
Message-ID: <m2ljmrdkoa.fsf@valheru.db3l.homeip.net>

vitaly at synapticvision.com writes:

> "cancel" callback - stop running now what you've been asked to exec.
> Example: some SQL query that takes 5 min and I need to cancel it  
> anywhere in the middle and it, of course, it doesn't matter what the  
> result set.

Note that the Deferred itself has no notion of the underlying
operation - it's just a placeholder for the callback chain to run.  So
trying to get from the deferred back to, for example, the database
query that will eventually use it for the result, is sort of like the
classic Python question of asking what name refers to an object, when
the object really has no idea who holds a reference to it.

If you actually want to try to interrupt a specific operation, then
you'll have to go to the actual application code performing the
operation, and that code will have to have a way to actually cancel an
ongoing activity.  It can then trigger the deferred chain with an
appropriate result (or probably Failure) that indicates cancellation.
That's going to be application-code specific, as Jean-Paul suggested.
In the database case, some database wrappers may support requesting an
interruption of an active query, but some might not.

If, however, you just want to avoid any existing deferred callback
chain from being triggered, but can let the operation proceed while
ignoring its result, I'd think you could just pause the deferred and
never resume it.  That will keep the deferred from triggering any
further callbacks past the point when it was paused, but won't
actually interrupt any currently active operations that the deferred
represents.  If you have code blocked waiting on that deferred (your
second example) it'll never complete without additional cheating -
perhaps initiating a fake callback on the chain first, though you'd
have to use some internals of Deferred or else risk a pause during the
callback opening up a window where the original source could attempt
to re-trigger the callback.

-- David




From shywolf9982 at gmail.com  Wed Jul 15 07:06:46 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 15 Jul 2009 15:06:46 +0200
Subject: [Twisted-Python] Cancel/stop Deferred() at any time
In-Reply-To: <20090714123736.11049riy99ph5yrk@216.129.205.5>
References: <20090714152140.2543.2037445873.divmod.quotient.2342@henry.divmod.com>
	<20090714123736.11049riy99ph5yrk@216.129.205.5>
Message-ID: <h3kjo2$avq$1@ger.gmane.org>

On 07/14/2009 06:37 PM, vitaly at synapticvision.com wrote:
>
> "cancel" callback - stop running now what you've been asked to exec.
> Example: some SQL query that takes 5 min and I need to cancel it
> anywhere in the middle and it, of course, it doesn't matter what the
> result set.
>

It seems like the problem you have is similar to what is described here:

http://www.dabeaz.com/python/GIL.pdf

Although this deals with Python's threading (and technology-wise, it's 
completely unrelated to Twisted), the fundamental problems that they are 
trying to solve are the same that Twisted tries to.

Unless I got it all wrong, you might need to "cancel the deferred" 
because the actual operation being performed "locks" the CPU. The 
example of the query taking five minutes is a bit misleading, I think, 
because that is actually an operation that is deferred to an external 
service and so it's more IO-bound than CPU-bound.

So maybe you do not actually need that. In case you do, as others have 
pointed out, the application code must either "quit" by itself or some 
sort of timeout (a "watchdog") has to be put in place.

Hope this will help and not confuse more ;)

Simone




From lrekucki at gmail.com  Wed Jul 15 16:36:33 2009
From: lrekucki at gmail.com (=?UTF-8?Q?=C5=81ukasz_Rekucki?=)
Date: Thu, 16 Jul 2009 00:36:33 +0200
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
Message-ID: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>

Hello,

I'm writing a simple chat client using twisted and pygtk. I have a problem
with a chained deferred not being continued. Here is my call chain:

* MyProtocol.dataReceived -> fires a predefined Deferred [call it A]
* A.callback1 -> creates a new Deferred B, adds a single callback to it,
displays a GtkDialog returns B
* [A stops]
* dialog exits, I call B.callback(result_id) from the signal callback
* all callback in B's chains are called
* program hangs instead calling A.callback2

Is this a thread related problem ? Am I doing something terribly wrong by
calling a deferred from the gtk thread ?

Thanks for help,
Lucas Rekucki
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090716/e69d2d53/attachment-0001.html>

From exarkun at divmod.com  Wed Jul 15 19:14:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Jul 2009 21:14:46 -0400
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
In-Reply-To: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
Message-ID: <20090716011446.2543.1240938108.divmod.quotient.2763@henry.divmod.com>

On Thu, 16 Jul 2009 00:36:33 +0200, Łukasz Rekucki <lrekucki at gmail.com> wrote:
>Hello,
>
>I'm writing a simple chat client using twisted and pygtk. I have a problem
>with a chained deferred not being continued. Here is my call chain:
>
>* MyProtocol.dataReceived -> fires a predefined Deferred [call it A]
>* A.callback1 -> creates a new Deferred B, adds a single callback to it,
>displays a GtkDialog returns B
>* [A stops]
>* dialog exits, I call B.callback(result_id) from the signal callback
>* all callback in B's chains are called
>* program hangs instead calling A.callback2
>
>Is this a thread related problem ? Am I doing something terribly wrong by
>calling a deferred from the gtk thread ?

It sounds like you're doing the right thing.  There is no gtk thread when you
use one of the gtk integration reactors - gtk and Twisted coexist in the same
thread.  So it's just fine to use Twisted APIs from a gtk signal callback.

Perhaps there is an unexpected error occurring.  Do you have a final errback
on your Deferred (one on A in this case would be fine) which logs the error
or otherwise makes it visible?  If not, you have to rely on luck and the
garbage collector to make this report.

Jean-Paul



From andrew at bemusement.org  Wed Jul 15 20:55:05 2009
From: andrew at bemusement.org (Andrew Bennetts)
Date: Thu, 16 Jul 2009 12:55:05 +1000
Subject: [Twisted-Python] Chaining deferreds - Twisted+PyGtk
In-Reply-To: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
References: <dfbefb090907151536g139259bbo78fd304d948c1b99@mail.gmail.com>
Message-ID: <20090716025505.GT28628@steerpike.home.puzzling.org>

Łukasz Rekucki wrote:
[...]
>    Is this a thread related problem ? Am I doing something terribly wrong by
>    calling a deferred from the gtk thread ?

Twisted in general is not thread-safe.  If you need to call Twisted code from a
thread other than the one you started the reactor in, use
reactor.callFromThread.

See also:

    http://twistedmatrix.com/projects/core/documentation/howto/threading.html

-Andrew.




From itamar at itamarst.org  Thu Jul 16 11:23:24 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jul 2009 13:23:24 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>
References: <20090714194356.2543.1155162372.divmod.quotient.2411@henry.divmod.com>
Message-ID: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>

So how many people are we expecting, if this happens? Number would impact
possible locations for the event.




From exarkun at divmod.com  Thu Jul 16 12:12:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 16 Jul 2009 14:12:45 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
Message-ID: <20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>

On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>So how many people are we expecting, if this happens? Number would impact
>possible locations for the event.
>

It's likely I'll be there.

I suggest people respond to this thread if they're going to attend, since
editing the wiki probably isn't going to be feasible. :)

Jean-Paul



From glyph at divmod.com  Thu Jul 16 14:29:07 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 16 Jul 2009 20:29:07 -0000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
Message-ID: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>




On 06:12 pm, exarkun at divmod.com wrote:
>On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring 
><itamar at itamarst.org> wrote:
>>So how many people are we expecting, if this happens? Number would 
>>impact
>>possible locations for the event.
>
>It's likely I'll be there.
>
>I suggest people respond to this thread if they're going to attend, 
>since
>editing the wiki probably isn't going to be feasible. :)

I'll be there too.  So far, we've got jml, exarkun, therve, glyph, 
itamar: that's 5 people.  Anyone I forgot to count?



From listsin at integrateddevcorp.com  Thu Jul 16 16:09:12 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 18:09:12 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <09B86D0F-FD02-4B58-9041-D57D1564962C@integrateddevcorp.com>

>
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?

I'l be there if I can be of any use.

S
aka/ssteiner




From toreason at fastmail.fm  Thu Jul 16 16:21:51 2009
From: toreason at fastmail.fm (V S P)
Date: Thu, 16 Jul 2009 18:21:51 -0400
Subject: [Twisted-Python] [Q] twisted in a 'non-main' thread
Message-ID: <1247782911.28269.1325439345@webmail.messagingengine.com>

Hello
I am 'contemplating' two uses of twisted

a) from within OmniORB, twisted as wsgi server

b) for Python QT application



>From omni Orb, I wanted to give the 'main' thread to Omni Python runtime
system
(so that it can receive corba messages)

on the other hand, I wanted twisted to listen on port 80 to receive
synchronious HTTP 
request (using twisted wsgi)


and for the item 2) Python QT application, I think QT needs to be in
'main' loop
but I want the application to use twisted infrastructure for
communication to twisted servers
and be a 'twisted' server as well


So wanted just to ask for pointers for above directions.  I admittedly
did not 
do extensive documents reading on the above, so just high-level pointers
to where
I should look -- would be very much appreciated.


Thank you 
-- 
Vlad P
author of C++  ORM  http://github.com/vladp/CppOrm/tree/master


-- 
http://www.fastmail.fm - A fast, anti-spam email service.




From rgacote at appropriatesolutions.com  Thu Jul 16 16:28:22 2009
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Thu, 16 Jul 2009 18:28:22 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <09B86D0F-FD02-4B58-9041-D57D1564962C@integrateddevcorp.com>
Message-ID: <9405619.22331247783507305.JavaMail.rgacote@ip-210.Corp.AppropriateSolutions.com>

And I hope to be there for a day or two.
--Ray


----- Original Message -----
From: "Steve Steiner (listsin)" <listsin at integrateddevcorp.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
Sent: Thursday, July 16, 2009 6:09:12 PM GMT -05:00 US/Canada Eastern
Subject: Re: [Twisted-Python] Possible Twisted sprint

>
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?

I'l be there if I can be of any use.

S
aka/ssteiner


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Ray Cote, President
Appropriate Solutions, Inc.
We Build Software
603.924.6079



From jkakar at kakar.ca  Thu Jul 16 16:46:33 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 16 Jul 2009 15:46:33 -0700
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <aa66e7aa0907161546g476a4d5rd305d723db960b54@mail.gmail.com>

Hi,

On Thu, Jul 16, 2009 at 1:29 PM, <glyph at divmod.com> wrote:
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?

I'd like to attend.  I'm still a maybe at this point, though.

Thanks,
J.



From jml at mumak.net  Thu Jul 16 20:58:09 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 17 Jul 2009 12:58:09 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
Message-ID: <d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>

On Fri, Jul 17, 2009 at 6:29 AM, <glyph at divmod.com> wrote:
>
>
>
> On 06:12 pm, exarkun at divmod.com wrote:
>>On Thu, 16 Jul 2009 13:23:24 -0400 (EDT), Itamar Shtull-Trauring
>><itamar at itamarst.org> wrote:
>>>So how many people are we expecting, if this happens? Number would
>>>impact
>>>possible locations for the event.
>>
>>It's likely I'll be there.
>>
>>I suggest people respond to this thread if they're going to attend,
>>since
>>editing the wiki probably isn't going to be feasible. :)
>
> I'll be there too.  So far, we've got jml, exarkun, therve, glyph,
> itamar: that's 5 people.  Anyone I forgot to count?
>

I've updated the wiki page. If you don't have edit privs and I've got
something wrong, or you aren't list & want to be, or circumstances
change, please contact me via email off list & I'll get the page up to
date.

jml



From listsin at integrateddevcorp.com  Thu Jul 16 21:20:36 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 23:20:36 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
Message-ID: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>

> I've updated the wiki page.

"the wiki page" at...

S




From jml at mumak.net  Thu Jul 16 21:23:56 2009
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 17 Jul 2009 13:23:56 +1000
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
Message-ID: <d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>

On Fri, Jul 17, 2009 at 1:20 PM, Steve Steiner
(listsin)<listsin at integrateddevcorp.com> wrote:
>> I've updated the wiki page.
>
> "the wiki page" at...
>

http://twistedmatrix.com/trac/wiki/Sprint2009

as mentioned in an earlier post on this thread.

jml



From listsin at integrateddevcorp.com  Thu Jul 16 21:27:46 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 16 Jul 2009 23:27:46 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
Message-ID: <104CE06D-4213-421F-B761-94CF8642E15E@integrateddevcorp.com>


On Jul 16, 2009, at 11:20 PM, Steve Steiner (listsin) wrote:

>> I've updated the wiki page.
>
> "the wiki page" at...

Sorry, went back in the list and found it.

I think it's better to give links like that in context.

Why search when the writer has it "to hand" as it were?

S




From itamar at itamarst.org  Fri Jul 17 09:15:31 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 17 Jul 2009 11:15:31 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>
References: <33925.63.107.91.99.1247765004.squirrel@webmail.zoteca.com>
	<20090716181245.2543.1199314298.divmod.quotient.2944@henry.divmod.com>
	<20090716202907.27019.1883544926.divmod.xquotient.1989@weber.divmod.com>
	<d06a5cd30907161958x85083e2td1b8e82245e62d13@mail.gmail.com>
	<FC840B8B-2B2C-4289-8636-8231316418EB@integrateddevcorp.com>
	<d06a5cd30907162023s6c3669c5wd107d2e5d0a8ac37@mail.gmail.com>
Message-ID: <41826.63.107.91.99.1247843731.squirrel@webmail.zoteca.com>

I am not quite sure I can make it, I probably can for at least part of the
time.





From JOHN at egh.com  Fri Jul 17 13:01:28 2009
From: JOHN at egh.com (John Santos)
Date: Fri, 17 Jul 2009 15:01:28 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <41826.63.107.91.99.1247843731.squirrel@webmail.zoteca.com>
Message-ID: <1090717131439.63148F-100000@Ives.egh.com>


I think I may be able to attend, but as pretty much a nooby to both
Twisted and Python, I don't know how much use I would be.

On the plus side, I live about 2.5mi from Porter Square, so travel
wouldn't be an issue.


-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From andrewfr_ice at yahoo.com  Sat Jul 18 12:41:08 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 18 Jul 2009 11:41:08 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
Message-ID: <510022.73786.qm@web34203.mail.mud.yahoo.com>


Hi Folks:

I am trying to use the epollreactor. I read the "Choosing a Reactor" page. However I am not clear on how to actually install and use epollreactor.

I thought I could do the following:

from twisted.internet    import  epollreactor

....
# epollreactor.install()
epollreactor.listenTCP(8000, MyHttpFactory())
epollreactor.run()

I get
AttributeError: 'module' object has no attribute 'listenTCP' 

What am I doing wrong? Thanks in advance.

Cheers,
Andrew







      



From cary.hull at gmail.com  Sat Jul 18 13:00:46 2009
From: cary.hull at gmail.com (Cary Hull)
Date: Sat, 18 Jul 2009 12:00:46 -0700
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <510022.73786.qm@web34203.mail.mud.yahoo.com>
References: <510022.73786.qm@web34203.mail.mud.yahoo.com>
Message-ID: <3fce0ae70907181200wa95fc26j37ac652ec1c01700@mail.gmail.com>

Why are you commenting out the 'install' line?
After 'install' I normally do 'from twisted.internet import reactor' and
use 'reactor' as one would normally.

-Cary

On Sat, Jul 18, 2009 at 11:41 AM, Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>
> Hi Folks:
>
> I am trying to use the epollreactor. I read the "Choosing a Reactor" page. However I am not clear on how to actually install and use epollreactor.
>
> I thought I could do the following:
>
> from twisted.internet    import  epollreactor
>
> ....
> # epollreactor.install()
> epollreactor.listenTCP(8000, MyHttpFactory())
> epollreactor.run()
>
> I get
> AttributeError: 'module' object has no attribute 'listenTCP'
>
> What am I doing wrong? Thanks in advance.
>
> Cheers,
> Andrew
>
>
>
>
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



--
01100011 01100001 01110010 01111001



From ilya at glas.net  Sat Jul 18 13:33:51 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sat, 18 Jul 2009 23:33:51 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
Message-ID: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>


Dear Twisters,

I can't get Twisted reactor calling my function in a more or less 
periodic fashion with the LoopingCall mechanics.

With select()-based reactor, the LoopingCall object seems to call back my 
timer function only on select() timeout. If I/O pace does not allow 
select() to time out, LoopingCall never calls my function.

How do I implement a "timer" function what would work regardless of the 
rate of I/O events?

thanks,
ilya



From glyph at twistedmatrix.com  Sat Jul 18 14:06:16 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jul 2009 16:06:16 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
Message-ID: <d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>

On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:

> I can't get Twisted reactor calling my function in a more or less
> periodic fashion with the LoopingCall mechanics.
>
> With select()-based reactor, the LoopingCall object seems to call back my
> timer function only on select() timeout. If I/O pace does not allow
> select() to time out, LoopingCall never calls my function.

This doesn't sound accurate to me.  If your reactor is constantly
doing I/O, the timed call in question will be called when the
appropriate amount of time has passed.

Select does not "time out"; it just returns some result.  If it is
returning purely do to the passage of time, then the result will be
empty, but Twisted doesn't treat that type of result specially.

Can you provide a short, sample program which demonstrates the
behavior you're talking about?



From exarkun at divmod.com  Sat Jul 18 14:10:44 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 18 Jul 2009 16:10:44 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
Message-ID: <20090718201044.2543.948423221.divmod.quotient.3415@henry.divmod.com>

On Sat, 18 Jul 2009 23:33:51 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>Dear Twisters,
>
>I can't get Twisted reactor calling my function in a more or less
>periodic fashion with the LoopingCall mechanics.
>
>With select()-based reactor, the LoopingCall object seems to call back my
>timer function only on select() timeout. If I/O pace does not allow
>select() to time out, LoopingCall never calls my function.
>
>How do I implement a "timer" function what would work regardless of the
>rate of I/O events?
>

Are you using threads?

Jean-Paul



From glyph at twistedmatrix.com  Sat Jul 18 14:11:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jul 2009 16:11:42 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <510022.73786.qm@web34203.mail.mud.yahoo.com>
References: <510022.73786.qm@web34203.mail.mud.yahoo.com>
Message-ID: <d9047f780907181311r29018280n3d4fdd578d60a270@mail.gmail.com>

On Sat, Jul 18, 2009 at 2:41 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> What am I doing wrong? Thanks in advance.

The first google hit for "epollreactor api" is:
<http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.epollreactor.html>.

The two lines of code there are the *only* things your program should
do in order to use the epoll reactor.  (Actually, you should just use
the '-r' option to 'twistd', but I digress.)  After those lines are
run, your program should 'from twisted.internet import reactor' as
usual.



From terry at jon.es  Sat Jul 18 14:20:06 2009
From: terry at jon.es (Terry Jones)
Date: Sat, 18 Jul 2009 22:20:06 +0200
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: Your message at 16:06:16 on Saturday, 18 July 2009
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
	<d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
Message-ID: <19042.11894.482474.212831@jon.es>

>>>>> "Glyph" == Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
Glyph> On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:
>> I can't get Twisted reactor calling my function in a more or less
>> periodic fashion with the LoopingCall mechanics.
>> 
>> With select()-based reactor, the LoopingCall object seems to call back my
>> timer function only on select() timeout. If I/O pace does not allow
>> select() to time out, LoopingCall never calls my function.

Glyph> This doesn't sound accurate to me.  If your reactor is constantly
Glyph> doing I/O, the timed call in question will be called when the
Glyph> appropriate amount of time has passed.

The thing that occurred to me was that the function called by the looping
call is taking a while (i.e., longer than the loop time) but that Ilya is
expecting his function to be called every X seconds no matter what.

If that's the case Ilya, LoopingCall doesn't work that way. Only one call
can be in progress at a time. When that call is done, another is scheduled.
See the _reschedule method in t.i.task#LoopingCall for more detail.

Terry



From ilya at glas.net  Sat Jul 18 15:04:25 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 01:04:25 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
References: <alpine.LNX.2.00.0907182320380.16904@cray.glas.net>
	<d9047f780907181306ia8220e4l6b0c06536eaf4247@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.0907190045560.16904@cray.glas.net>


After doing some more research, I've realised that my previous 
conclusion and complaint was indeed inaccurate. Sorry for that!

Now it looks to me that if my datagram receiver function takes some
time for data processing, rapidly coming datagrams tend to stack up and
my timer function is not getting called at time.

Here's example code:

from time import time, sleep
from twisted.internet import reactor, task
from twisted.internet.protocol import DatagramProtocol

def timerCbFun():
   print 'timer called', time()

loopingCall = task.LoopingCall(timerCbFun)
loopingCall.start(1, False)

class MyProtocol(DatagramProtocol):
   def datagramReceived(self, datagram, address):
     print 'datagramReceived', time()
     sleep(0.2) # simulate data processing

reactor.listenUDP(1024, MyProtocol(), '127.0.0.1')

reactor.run()

and here's its test run under relatively high incoming datagrams rate:

timer called 1247949866.62
timer called 1247949867.62
timer called 1247949868.62
datagramReceived 1247949869.16
datagramReceived 1247949869.36
datagramReceived 1247949869.56
datagramReceived 1247949869.76
datagramReceived 1247949869.96
.... no timer calls here ...
datagramReceived 1247949877.56
datagramReceived 1247949877.76
timer called 1247949877.96
timer called 1247949878.62
timer called 1247949879.62

So we missed eight timer calls in a row in the course of this run. What 
I need is that reactor would call my timer function at scheduled times
regardless of pending datagrams.

I do not think I'm using threads here.

thanks,
ilya

On Sat, 18 Jul 2009, Glyph Lefkowitz wrote:

> On Sat, Jul 18, 2009 at 3:33 PM, Ilya Etingof<ilya at glas.net> wrote:
>
>> I can't get Twisted reactor calling my function in a more or less
>> periodic fashion with the LoopingCall mechanics.
>>
>> With select()-based reactor, the LoopingCall object seems to call back my
>> timer function only on select() timeout. If I/O pace does not allow
>> select() to time out, LoopingCall never calls my function.
>
> This doesn't sound accurate to me.  If your reactor is constantly
> doing I/O, the timed call in question will be called when the
> appropriate amount of time has passed.
>
> Select does not "time out"; it just returns some result.  If it is
> returning purely do to the passage of time, then the result will be
> empty, but Twisted doesn't treat that type of result specially.
>
> Can you provide a short, sample program which demonstrates the
> behavior you're talking about?



From exarkun at divmod.com  Sat Jul 18 16:49:13 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 18 Jul 2009 18:49:13 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907190045560.16904@cray.glas.net>
Message-ID: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>

On Sun, 19 Jul 2009 01:04:25 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>After doing some more research, I've realised that my previous
>conclusion and complaint was indeed inaccurate. Sorry for that!
>
>Now it looks to me that if my datagram receiver function takes some
>time for data processing, rapidly coming datagrams tend to stack up and
>my timer function is not getting called at time.

Ah, it looks like Terry probably guessed the cause of your difficulties
correctly.

>
>Here's example code:
>
>from time import time, sleep
>from twisted.internet import reactor, task
>from twisted.internet.protocol import DatagramProtocol
>
>def timerCbFun():
>   print 'timer called', time()
>
>loopingCall = task.LoopingCall(timerCbFun)
>loopingCall.start(1, False)
>
>class MyProtocol(DatagramProtocol):
>   def datagramReceived(self, datagram, address):
>     print 'datagramReceived', time()
>     sleep(0.2) # simulate data processing

The above is something which you're more or less not allowed to do in a
Twisted application.  That simulated data processing is blocking the
main event loop.  Nothing else happens until it finishes - that includes
handling more UDP packets and it includes running timed events like the
ones LoopingCall sets up.

You need to find another way to do your data processing if this behavior
isn't acceptable.  You can use Twisted's thread pool, if the data processing
is thread safe, or you could try Ampoule to distribute the processing to a
process pool instead of a thread pool, or if the data processing involves a
blocking operation which can be be handled asynchronously somehow, there
might be another Twisted API which can help you out.

Also, aside from that, LoopingCall is designed to handle missed intervals
gracefully.  It will skip calls which cannot be made because the process
was too busy doing something else.  For a 1 second looping call, once you
fix your data processing code, this probably won't happen very often, but
it may happen.  There's some work in progress to make it possible to at
least learn when a call has been skipped, but short of a real time platform
(which Twisted is certainly not), you can't get a 100% guarantee.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jul 18 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 19 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1247976312.2.944481807@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090719/94e4268d/attachment.html>

From kieran at digital-crocus.com  Sat Jul 18 23:34:21 2009
From: kieran at digital-crocus.com (Kieran Simkin)
Date: Sun, 19 Jul 2009 06:34:21 +0100
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
Message-ID: <4A62B05D.2070504@digital-crocus.com>

Hi there,
I'm trying to do some reverse DNS lookups with twisted and I don't seem 
to be able to get even the most simple of test cases to work. I've tried 
it on a couple of different installations with the same results, perhaps 
someone can help me?
My test case is this:
----------------------------------------------------------------------------------
from twisted.names import client
from twisted.internet import reactor
def callback(a):
    print repr(a)

client.lookupPointer('128.244.209.91.in-addr.arpa').addCallback(callback)
reactor.run()
----------------------------------------------------------------------------------

The output I'm getting from this program is as follows:
([<RR name=128.244.209.91.in-addr.arpa type=PTR class=IN ttl=9777s 
auth=False>], [<RR name=244.209.91.in-addr.arpa type=NS class=IN 
ttl=8348s auth=False>, <RR name=244.209.91.in-addr.arpa type=NS class=IN 
ttl=8348s auth=False>], [<RR name=ns1.solsticehosting.net type=A 
class=IN ttl=8348s auth=False>, <RR name=ns2.solsticehosting.net type=A 
class=IN ttl=8348s auth=False>])

Nowhere in this output is the actual PTR record - the first entry looks 
like it should be the PTR record, but the name is 
'128.244.209.91.in-addr.arpa' - I'm expecting it to be 
node2.digital-crocus.com. Can anyone clarify whether I'm doing something 
wrong or if this is in fact a bug?

Cheers,


~Kieran Simkin
Digital Crocus affordable web hosting <http://digital-crocus.com/> - 
http://digital-crocus.com/
Personal Portfolio <http://slinq.com/> - http://slinq.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090719/8337ad3f/attachment.html>

From ilya at glas.net  Sun Jul 19 02:01:34 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 12:01:34 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
Message-ID: <alpine.LNX.2.00.0907191152010.17866@cray.glas.net>


[ skipped ]

> The above is something which you're more or less not allowed to do in a
> Twisted application.  That simulated data processing is blocking the
> main event loop.  Nothing else happens until it finishes - that includes
> handling more UDP packets and it includes running timed events like the
> ones LoopingCall sets up.

But why main loop does not fire timed events when it has a chance to do 
that? Note that my data processor takes 0.2 sec on each run, while my 
timed event period is 1 sec.

In other words, I'd understand this behavior if my data processor
would block main loop for a few periods of timed event, but this
is not the case.

thanks,
ilya



From p.mayers at imperial.ac.uk  Sun Jul 19 05:17:40 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 12:17:40 +0100
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
In-Reply-To: <4A62B05D.2070504@digital-crocus.com>
References: <4A62B05D.2070504@digital-crocus.com>
Message-ID: <20090719111740.GA26994@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 06:34:21AM +0100, Kieran Simkin wrote:
>
>Nowhere in this output is the actual PTR record - the first entry looks like it should be the PTR record, but the name is '128.244.209.91.in-addr.arpa' - I'm expecting it to be node2.digital-crocus.com. Can anyone clarify whether I'm doing something wrong or if this is in fact a bug?
>

The name of the PTR record *is* a.b.c.d.in-addr.arpa. You want the 
*value*, which you can get from answer[0].payload.name. e.g.

def printPTR(results):
    answer, auth, additional = results
    if answer:
	print answer[0].payload.name

d = resolver.queryUDP([
	dns.Query('4.3.1.2.in-addr.arpa', dns.PTR)
    ])
d.addCallback(printPTR)

Obviously this code needs more error checking.



From p.mayers at imperial.ac.uk  Sun Jul 19 05:27:46 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 12:27:46 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
	<alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
Message-ID: <20090719112746.GB26994@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 09:01:34AM +0100, Ilya Etingof wrote:
>
>[ skipped ]
>
>> The above is something which you're more or less not allowed to do in a
>> Twisted application.  That simulated data processing is blocking the
>> main event loop.  Nothing else happens until it finishes - that includes
>> handling more UDP packets and it includes running timed events like the
>> ones LoopingCall sets up.
>
>But why main loop does not fire timed events when it has a chance to do 
>that? Note that my data processor takes 0.2 sec on each run, while my 
>timed event period is 1 sec.
>
>In other words, I'd understand this behavior if my data processor
>would block main loop for a few periods of timed event, but this
>is not the case.

Because Twisted receives as many datagrams as possible before going back 
round the select loop (I think). So, 10 calls to datagramReceived are 
done (taking 10*0.2 seconds) before twisted gets a chance to schedule 
any other things.

As JP has said, you're not allowed to block the main loop like that, but 
I've seen similar problems with even relatively quick datagramReceived 
handlers (~0.1msec) under very high load (1000pps) resulting in a form 
of starvation. This isn't generally a problem with TCP calls due to flow 
control.

The solution is:

  def datagramReceived(...):
    reactor.callLater(0, dorealwork, ...)

  def dorealwork(self, ...):
    ...

This will schedule the "real" work as soon as possible in the next 
reactor loop, but also "fairly" in line with other calls.


You still shouldn't block the reactor for a "long" time (the exact value 
is dependent on your app)




From exarkun at divmod.com  Sun Jul 19 05:51:56 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Jul 2009 07:51:56 -0400
Subject: [Twisted-Python] Problem with twisted.names.client.lookupPointer
In-Reply-To: <4A62B05D.2070504@digital-crocus.com>
Message-ID: <20090719115156.2543.220339135.divmod.quotient.3463@henry.divmod.com>

On Sun, 19 Jul 2009 06:34:21 +0100, Kieran Simkin <kieran at digital-crocus.com> wrote:
>Hi there,
>I'm trying to do some reverse DNS lookups with twisted and I don't seem to 
>be able to get even the most simple of test cases to work. I've tried it on 
>a couple of different installations with the same results, perhaps someone 
>can help me?

lookupPointer is a pretty low-level interface.  It's just going to give you
back the records that the DNS server it talks to gives back.  This also means
that its behavior can very based on which DNS servers it ends up using.  You
are probably interested in a higher level API that does the additional
sorting-out that's required to get the value you're actually asking for.
Unfortunately, this API isn't provided by Twisted Names (yet! :).

That said, you might be encountering a problem not related to this.

>My test case is this:
>----------------------------------------------------------------------------------
>from twisted.names import client
>from twisted.internet import reactor
>def callback(a):
>    print repr(a)
>
>client.lookupPointer('128.244.209.91.in-addr.arpa').addCallback(callback)
>reactor.run()
>----------------------------------------------------------------------------------
>
>The output I'm getting from this program is as follows:
>([<RR name=128.244.209.91.in-addr.arpa type=PTR class=IN ttl=9777s 
>auth=False>], [<RR name=244.209.91.in-addr.arpa type=NS class=IN ttl=8348s 
>auth=False>, <RR name=244.209.91.in-addr.arpa type=NS class=IN ttl=8348s 
>auth=False>], [<RR name=ns1.solsticehosting.net type=A class=IN ttl=8348s 
>auth=False>, <RR name=ns2.solsticehosting.net type=A class=IN ttl=8348s 
>auth=False>])
>
>Nowhere in this output is the actual PTR record - the first entry looks like 
>it should be the PTR record, but the name is '128.244.209.91.in-addr.arpa' - 
>I'm expecting it to be node2.digital-crocus.com. Can anyone clarify whether 
>I'm doing something wrong or if this is in fact a bug?

What you get back from the lookup methods are "RR" objects.  These are the
generic wrapping layer around any record-specific data.  If you look at the
first entry's "payload" attribute, I think you'll find a Record_PTR instance
which has the information you're after.

Jean-Paul



From ilya at glas.net  Sun Jul 19 07:20:46 2009
From: ilya at glas.net (Ilya Etingof)
Date: Sun, 19 Jul 2009 17:20:46 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719112746.GB26994@wildfire.net.ic.ac.uk>
References: <20090718224913.2543.1268327525.divmod.quotient.3426@henry.divmod.com>
	<alpine.LNX.2.00.0907191152010.17866@cray.glas.net>
	<20090719112746.GB26994@wildfire.net.ic.ac.uk>
Message-ID: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>


>> But why main loop does not fire timed events when it has a chance to do
>> that? Note that my data processor takes 0.2 sec on each run, while my
>> timed event period is 1 sec.
>>
>> In other words, I'd understand this behavior if my data processor
>> would block main loop for a few periods of timed event, but this
>> is not the case.
>
> Because Twisted receives as many datagrams as possible before going back
> round the select loop (I think). So, 10 calls to datagramReceived are
> done (taking 10*0.2 seconds) before twisted gets a chance to schedule
> any other things.

Perhaps it works that way. And what makes things worse is that if datagram 
input rate is steady and higher than datagram processing time, the 
LoopingCall calls will never be invoked.

> As JP has said, you're not allowed to block the main loop like that, but
> I've seen similar problems with even relatively quick datagramReceived
> handlers (~0.1msec) under very high load (1000pps) resulting in a form
> of starvation. This isn't generally a problem with TCP calls due to flow
> control.

I do not think I'm blocking the main loop so much. I'd say I create a
condition when data processing time is a little bit longer than the period 
of incoming datagrams arrival.

By way of feedback, it looks to me that if reactor API would give 
user some degree of control on timed versus receiption calls sequencing, 
that would become a more-or-less elegant solution for issues like mine.

> The solution is:
>
>  def datagramReceived(...):
>    reactor.callLater(0, dorealwork, ...)
>
>  def dorealwork(self, ...):
>    ...
>
> This will schedule the "real" work as soon as possible in the next
> reactor loop, but also "fairly" in line with other calls.

Thanks for the hint!

With this callLater approach, timer function works better, though, still 
not absolutely fair:

timer called 1248008220.19
dorealwork 1248008220.81
dorealwork 1248008221.21
timer called 1248008221.41
dorealwork 1248008221.41
[ 2 dorealwork calls here ]
dorealwork 1248008222.01
timer called 1248008222.21
dorealwork 1248008222.21
[ 7 dorealwork calls here ]
dorealwork 1248008223.81
timer called 1248008224.01
dorealwork 1248008224.01
[ 17 dorealwork calls here ]
dorealwork 1248008227.61
timer called 1248008227.81
dorealwork 1248008227.81
[ 39 dorealwork calls here ]
dorealwork 1248008235.81
timer called 1248008236.02
dorealwork 1248008236.02
[ 87 dorealwork calls here ]
dorealwork 1248008253.62
timer called 1248008253.83

As we can see, timer call period seems to grow over high load.

thanks,
ilya



From exarkun at divmod.com  Sun Jul 19 07:58:40 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 19 Jul 2009 09:58:40 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
Message-ID: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>

On Sun, 19 Jul 2009 17:20:46 +0400 (MSD), Ilya Etingof <ilya at glas.net> wrote:
>
>>> But why main loop does not fire timed events when it has a chance to do
>>> that? Note that my data processor takes 0.2 sec on each run, while my
>>> timed event period is 1 sec.
>>>
>>> In other words, I'd understand this behavior if my data processor
>>> would block main loop for a few periods of timed event, but this
>>> is not the case.
>>
>> Because Twisted receives as many datagrams as possible before going back
>> round the select loop (I think). So, 10 calls to datagramReceived are
>> done (taking 10*0.2 seconds) before twisted gets a chance to schedule
>> any other things.
>
>Perhaps it works that way. And what makes things worse is that if datagram
>input rate is steady and higher than datagram processing time, the
>LoopingCall calls will never be invoked.

It will eventually stop reading datagrams and go do something else.  The
exact way it decides when to stop is completely arbitrary and I don't
think anyone has ever demonstrated that it's clever or appropriate in the
general case (it stops after reading 256k of datagrams).

>
>> As JP has said, you're not allowed to block the main loop like that, but
>> I've seen similar problems with even relatively quick datagramReceived
>> handlers (~0.1msec) under very high load (1000pps) resulting in a form
>> of starvation. This isn't generally a problem with TCP calls due to flow
>> control.
>
>I do not think I'm blocking the main loop so much. I'd say I create a
>condition when data processing time is a little bit longer than the period
>of incoming datagrams arrival.
>
>By way of feedback, it looks to me that if reactor API would give
>user some degree of control on timed versus receiption calls sequencing,
>that would become a more-or-less elegant solution for issues like mine.

One possibility is that we could document the limit I described above and
tell people to adjust it upwards or downwards as they so desire.

>
>> The solution is:
>>
>>  def datagramReceived(...):
>>    reactor.callLater(0, dorealwork, ...)
>>
>>  def dorealwork(self, ...):
>>    ...
>>
>> This will schedule the "real" work as soon as possible in the next
>> reactor loop, but also "fairly" in line with other calls.
>
>Thanks for the hint!
>
>With this callLater approach, timer function works better, though, still
>not absolutely fair:
>
> [snip]
>
>As we can see, timer call period seems to grow over high load.
>

reactor.callLater(0, f) isn't magic.  I probably wouldn't have suggested
it as a solution here.  All it means (more or less) is "do this work after
all current i/o events have been dispatched."  You still might end up with
more than one second of processing bunched up together, and so you'll still
miss a LoopingCall iteration.

Jean-Paul



From p.mayers at imperial.ac.uk  Sun Jul 19 08:43:58 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 19 Jul 2009 15:43:58 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
Message-ID: <20090719144358.GA28616@wildfire.net.ic.ac.uk>

On Sun, Jul 19, 2009 at 02:58:40PM +0100, Jean-Paul Calderone wrote:
>
>It will eventually stop reading datagrams and go do something else.  The
>exact way it decides when to stop is completely arbitrary and I don't
>think anyone has ever demonstrated that it's clever or appropriate in the
>general case (it stops after reading 256k of datagrams).

That's interesting. I didn't know that. Has it always done this, or is 
that a recent thing?

As I say, I used to experience starvation of the reactor doing SNMP 
walks of hundreds of devices (in addition to UDP socket buffer 
overflows) which is why I adopted my solution (see below)

>
>reactor.callLater(0, f) isn't magic.  I probably wouldn't have suggested
>it as a solution here.  All it means (more or less) is "do this work after
>all current i/o events have been dispatched."  You still might end up with
>more than one second of processing bunched up together, and so you'll still
>miss a LoopingCall iteration.

For what it's worth, I actually do something a lot more sophisticated. 
My UDP IO, the protocol parsing, re-transmission logic and so forth 
actually happen in a "farm" of N sub-processes (which lets me make use 
of the multi-core CPU) and I talk to the parent process over TCP.

Viewing the reactor as a device that emits a stream of events (timer 
ticks, socket reads, write requests etc.) the problem can be considered 
a QoS issue.  It's hard to see how the reactor could "know" how to do 
the right thing in all cases, absent a hinting mechanism from the 
application:

queue = reactor.getDefaultQueue()
subq = queue.newChild()
subq.setMode('round-robin')
subq.listenUDP(CONTROL, importantProto(), weight=10)
subq.listenUDP(DATA, lessimportantProto(), weight=1)

...or something ;o) This isn't a serious suggestion obviously!



From andrewfr_ice at yahoo.com  Sun Jul 19 10:08:12 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 19 Jul 2009 09:08:12 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
Message-ID: <549184.71747.qm@web34208.mail.mud.yahoo.com>


Hello Glyph et al:

Message: 6
Date: Sat, 18 Jul 2009 16:11:42 -0400
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Simple Epoll Reactor question
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <d9047f780907181311r29018280n3d4fdd578d60a270 at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Sat, Jul 18, 2009 at 2:41 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> What am I doing wrong? Thanks in advance.

The first google hit for "epollreactor api" is:
<http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.epollreactor.html>.

And I read that page.

>The two lines of code there are the *only* things your program should
>do in order to use the epoll reactor.  (Actually, you should just use
>the '-r' option to 'twistd', but I digress.)  After those lines are
>run, your program should 'from twisted.internet import reactor' as
>usual.

Okay I restructured the code as

from twisted.internet import epollreactor
epollreactor.install()
from twisted.internet import reactor

and this works. Thanks. Before I was getting "reactor already installed" errors when I used epollreactor.install() (this is to answer Cary Hull's question about commenting out that line).

Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

Cheers,
Andrew  








      



From jonathan+twisted at jsphere.com  Sun Jul 19 10:34:41 2009
From: jonathan+twisted at jsphere.com (Jonathan Jacobs)
Date: Sun, 19 Jul 2009 18:34:41 +0200
Subject: [Twisted-Python] Commit access
Message-ID: <ee08d1630907190934pbdce6b0me1abce3d9dd8040f@mail.gmail.com>

Hello Twisted,

I've been contributing to Twisted (jonathanj on the Trac instance, k4y on
IRC) for around a year now.

I'd be grateful for commit access to the Twisted repo and, as per glyph's
suggestion, I'd like to formally request it.

I'm not sure if I'm supposed to bow or not, so I'll just exit left.
-- 
Jonathan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090719/94da14ba/attachment.html>

From glyph at twistedmatrix.com  Sun Jul 19 10:59:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 12:59:22 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <d9047f780907190955m40317097i78d6066e467ea378@mail.gmail.com>
References: <549184.71747.qm@web34208.mail.mud.yahoo.com>
	<d9047f780907190955m40317097i78d6066e467ea378@mail.gmail.com>
Message-ID: <d9047f780907190959k60c53022qb4d348ac886e2d80@mail.gmail.com>

On Sun, Jul 19, 2009 at 12:08 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

The "choosing a reactor" document could definitely be made clearer;
please feel free to submit a doc patch that will help others with
this.



From glyph at twistedmatrix.com  Sun Jul 19 11:07:29 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 13:07:29 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719144358.GA28616@wildfire.net.ic.ac.uk>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
Message-ID: <d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>

On Sun, Jul 19, 2009 at 10:43 AM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:

> Viewing the reactor as a device that emits a stream of events (timer
> ticks, socket reads, write requests etc.) the problem can be considered
> a QoS issue.  It's hard to see how the reactor could "know" how to do
> the right thing in all cases, absent a hinting mechanism from the
> application:
>
> queue = reactor.getDefaultQueue()
> subq = queue.newChild()
> subq.setMode('round-robin')
> subq.listenUDP(CONTROL, importantProto(), weight=10)
> subq.listenUDP(DATA, lessimportantProto(), weight=1)
>
> ...or something ;o) This isn't a serious suggestion obviously!

I know what you mean.  If you trawl through my really old blog posts
(I think the one I'm thinking of is on livejournal, but I can't find
it quickly) you'll see that I've thought about this before.  The two
main deterrents to changing the reactor to be a set of abstract
"events" placed into a queue by event handlers rather than a  loop
that just calls everything immediately are:

 1) it might be slower, since it's extra code being run for every event, and
 2) it's a massive amount of work to actually implement it :).

You could help out with #1 by implementing something and measuring it,
and you can help out with #2 by just implementing it and letting
someone else measure it :).



From lvh at laurensvh.be  Sun Jul 19 13:37:19 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Sun, 19 Jul 2009 21:37:19 +0200
Subject: [Twisted-Python] An alternative Twisted GPS protocol implementation
Message-ID: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>

Hi everyone :-)


I'm writing a GPS-based app and I was kind of unhappy with the
existing GPS implementation. It probably works, but it has two
problems that you might care about if you're using it:

1. it's interface isn't very friendly
(twisted.protocols.gps.nmea.NMEAReceiver.decode_fix has _fourteen_
positional arguments, which are essentially raw sentence data -- this
reminds me of MFC too much for me to stay in my comfort zone)
2. it doesn't seem to have any unit tests, so behavior is up in the air a little

Also, if you want to to extend it (admittedly not very likely with a
rusty protocol like NMEA), well, the current implementation is kind of
terse.

Anyway, I've been working on a friendlier interface for a few days
now, and if people like it, it might be a candidate for inclusion in
Twisted itself. This would mean deprecating twisted.protocols.gps in
favor of the shiny new twisted.protocols.positioning. I was originally
going to make it a Twisted community project, but glyph expressed
interest in putting it in Twisted itself instead.

It does nice conversions like parse the timestamps into Python
time/date/datetime objects and automatically adding sign information
for coordinates, stuff like that. Also, it provides a much nicer
interface to the information, so you can use code like:

point.position.latitude
point.position.longitude.inDegreesMinutesSeconds
point.altitude
point.altitude.aboveMeanSeaLevel.inFeet
point.heading.trueHeading

Et cetera. Use of this interface is optional, there's also straight
dict access (which is roughly like the current API except with a
dictionary instead of positional arguments).

Right now it only supports NMEA. The old system supported Rockwell as
well. What I'd like to hear from you (you mostly being potential users
of this piece of code): do you care about Rockwell (aka Zodiac)
support? If you're just using twisted.protocols.gps now, I'm
interested in hearing from you as well of course :-)

SiRF support for now is probably out of the question. It's a whole
different ball game. Parsing it is *hard* (it's much more complicated
than just a binary representation of the same data).

Replies welcome, alternatively you can usually catch me at this email
address or as lvh on freenode (in the usual suspects: #python,
#twisted...)

Thanks for-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.6)

iEYEARECAAYFAkpjdcMACgkQT5v5zGkvKT5EpwCeLhrOe1tHXuJQKc78jAQ+ALQA
s5IAn3vn5kVEZ++eUGuRb3zsxynQPCR4
=7Cyx
-----END PGP SIGNATURE-----
reading,
Laurens



From glyph at twistedmatrix.com  Sun Jul 19 14:58:23 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Jul 2009 16:58:23 -0400
Subject: [Twisted-Python] An alternative Twisted GPS protocol
	implementation
In-Reply-To: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
References: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
Message-ID: <d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>

On Sun, Jul 19, 2009 at 3:37 PM, Laurens Van Houtven<lvh at laurensvh.be> wrote:

> Right now it only supports NMEA. The old system supported Rockwell as
> well. What I'd like to hear from you (you mostly being potential users
> of this piece of code): do you care about Rockwell (aka Zodiac)
> support? If you're just using twisted.protocols.gps now, I'm
> interested in hearing from you as well of course :-)

The default assumption, if nobody replies to this, should be that
nobody is using Rockwell support and we can safely deprecate it
without a replacement.

> SiRF support for now is probably out of the question. It's a whole
> different ball game. Parsing it is *hard* (it's much more complicated
> than just a binary representation of the same data).

For the time being (at least, for the purposes of including a new
implementation in Twisted), I don't think we need to worry about this
- it would be great to file an enhancement later, but we don't have it
yet so we shouldn't have to consider it to improve the implementation
of existing protocols.

> Replies welcome, alternatively you can usually catch me at this email
> address or as lvh on freenode (in the usual suspects: #python,
> #twisted...)

I would appreciate it if we could keep the discussion, or at least the
conclusions of this discussion, archived in some relevant place.  The
mailing list could be a good be a good place to start the discussion,
but there should be a ticket, and the ticket should link to that
discussion.  Similarly, if you talk about it on #twisted, you should
attach a comment at the end of that conversation, pasting any
conclusions that happened there.  (You shouldn't really talk about it
on #python.  It's a difficult place to have a focused technical
discussion.)

Sorry if this all seems overly fussy, but repetitive discussions and
half-remembered conclusions are the bane of open source in general,
and have long been a problem on Twisted specifically.  A little bit of
effort to record everything on a ticket now will save someone — maybe
even you — a lot of effort in a couple of months when they're looking
at it in a few months if you get distracted and can't work on it.



From p.mayers at imperial.ac.uk  Mon Jul 20 04:52:43 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 20 Jul 2009 11:52:43 +0100
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
	<d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
Message-ID: <4A644C7B.4000500@imperial.ac.uk>

> 
> I know what you mean.  If you trawl through my really old blog posts
> (I think the one I'm thinking of is on livejournal, but I can't find
> it quickly) you'll see that I've thought about this before.  The two
> main deterrents to changing the reactor to be a set of abstract
> "events" placed into a queue by event handlers rather than a  loop
> that just calls everything immediately are:
> 
>  1) it might be slower, since it's extra code being run for every event, and

I wonder if wrapping one of the C event libraries and doing the bulk of 
the work in there would ameliorate that aspect.

>  2) it's a massive amount of work to actually implement it :).
> 
> You could help out with #1 by implementing something and measuring it,
> and you can help out with #2 by just implementing it and letting
> someone else measure it :).

Fascinating though the topic is, I very much doubt I'll have any time to 
even look at it.

That said; is there a reactor "performance" test?



From glyph at twistedmatrix.com  Mon Jul 20 05:11:08 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 07:11:08 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <4A644C7B.4000500@imperial.ac.uk>
References: <alpine.LNX.2.00.0907191657320.18108@cray.glas.net>
	<20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<20090719144358.GA28616@wildfire.net.ic.ac.uk>
	<d9047f780907191007xfdec230yd8f19efabc9b1b81@mail.gmail.com>
	<4A644C7B.4000500@imperial.ac.uk>
Message-ID: <d9047f780907200411u1b26ee3aybea9daec377242be@mail.gmail.com>

On Mon, Jul 20, 2009 at 6:52 AM, Phil Mayers <p.mayers at imperial.ac.uk>wrote:

> Fascinating though the topic is, I very much doubt I'll have any time to
> even look at it.
>

A familiar refrain.

That said; is there a reactor "performance" test?


Hmm.  No, not really.  It would be helpful to develop one, I think.
Especially if you could run it somewhere in an automated fashion and graph
its performance against different SVN revisions.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/c97a07d0/attachment.html>

From ilya at glas.net  Mon Jul 20 05:33:12 2009
From: ilya at glas.net (Ilya Etingof)
Date: Mon, 20 Jul 2009 15:33:12 +0400 (MSD)
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
References: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
Message-ID: <alpine.LNX.2.00.0907201519490.19317@cray.glas.net>


>> Perhaps it works that way. And what makes things worse is that if datagram
>> input rate is steady and higher than datagram processing time, the
>> LoopingCall calls will never be invoked.
>
> It will eventually stop reading datagrams and go do something else.  The
> exact way it decides when to stop is completely arbitrary and I don't
> think anyone has ever demonstrated that it's clever or appropriate in the
> general case (it stops after reading 256k of datagrams).

Isn't this call priority policy appears somewhat rigid and obscure?

Would it be clearer if user would be allowed to assign relative
weights to his/her receiption and timer functions so that main loop
could choose what to call in case of their competition for time slot?

thanks,
ilya



From glyph at twistedmatrix.com  Mon Jul 20 05:47:08 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 07:47:08 -0400
Subject: [Twisted-Python] LoopingCall at a non-idling reactor
In-Reply-To: <alpine.LNX.2.00.0907201519490.19317@cray.glas.net>
References: <20090719135840.2543.2030947582.divmod.quotient.3472@henry.divmod.com>
	<alpine.LNX.2.00.0907201519490.19317@cray.glas.net>
Message-ID: <d9047f780907200447x7258950as32c2d9997d179924@mail.gmail.com>

On Mon, Jul 20, 2009 at 7:33 AM, Ilya Etingof <ilya at glas.net> wrote:

> Isn't this call priority policy appears somewhat rigid and obscure?
>
> Would it be clearer if user would be allowed to assign relative
> weights to his/her receiption and timer functions so that main loop
> could choose what to call in case of their competition for time slot?


As we have already said in this thread, yes, it would be nice if the call
priorities were adjustable and the queue of "work yet to do" could be easily
inspected and accounted for.  Somebody still has to actually *do* it though,
and there are over a thousand other issues just in Twisted which require our
attention.

If you would contribute a patch I'm sure someone would look at it.  I, for
one, would be very excited to get this feature in some form.

("relative weights" is kind of a silly way to do it though, because a
Twisted program is inevitably a collection of event handlers from disparate
codebases which don't know how the other codebases might interpret a
priority.  If a Twisted mail library thinks that 0.5 is a "low" priority and
0.8 is a "high" priority, it will interact poorly with a Twisted monitoring
library that thinks "20000" is a "low" priority and "1e10" is a "high"
priority.  Arbitrary numbers are never a good API.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/550b5454/attachment.html>

From gabriel.rossetti at arimaz.com  Mon Jul 20 05:52:06 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 20 Jul 2009 13:52:06 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
Message-ID: <4A645A66.1000301@arimaz.com>

Hello everyone,

I have been experiencing the ConnectionError with adbapi & 
cp_reconnect=True. I know that because of the cp_reconnect=True param 
tha is reconnects and that the query is not re-run. I have written some 
code that should re-run the query in that case (if I get a Failure back 
because of a ConnectionError), but it doesn't seem to work. My question 
is if anyone knows how to make mysql's idle timeouts shorter so that I 
can debug my code? I searched google and the mysql site with no luck.

thank you,
Gabriel



From david at strotos.com  Mon Jul 20 06:26:23 2009
From: david at strotos.com (David Guerin)
Date: Mon, 20 Jul 2009 13:26:23 +0100
Subject: [Twisted-Python] Timers in Twisted
Message-ID: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>

Hey all,

I'm pretty new to Twisted Framework but things are going along nicely.  
At the moment I am trying to get a timer to fire off say every 5  
minutes.
What's the best way to do this with twisted?
I found an old link to a how to with timers in twisted on the  
twistedmatrix.com site but there wasn't a web page there when I clicked

Thanks

Regards
David





From glyph at twistedmatrix.com  Mon Jul 20 06:36:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 08:36:47 -0400
Subject: [Twisted-Python] Timers in Twisted
In-Reply-To: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
References: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
Message-ID: <d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>

On Mon, Jul 20, 2009 at 8:26 AM, David Guerin <david at strotos.com> wrote:

> Hey all,
>
> I'm pretty new to Twisted Framework but things are going along nicely.
> At the moment I am trying to get a timer to fire off say every 5
> minutes.
> What's the best way to do this with twisted?
> I found an old link to a how to with timers in twisted on the
> twistedmatrix.com site but there wasn't a web page there when I clicked
>

You can use LoopingCall: <
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html>,
like so:

from twisted.internet.task import LoopingCall
MINUTES = 60.0
def myTimer():
      doSomeStuff()
repeater = LoopingCall(myTimer)
repeater.start(5 * MINUTES)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/cdfd58ce/attachment.html>

From david at strotos.com  Mon Jul 20 07:01:13 2009
From: david at strotos.com (David Guerin)
Date: Mon, 20 Jul 2009 14:01:13 +0100
Subject: [Twisted-Python] Timers in Twisted
In-Reply-To: <d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>
References: <07CB04FE-FBF6-4FF3-9CB4-68AD68988C21@strotos.com>
	<d9047f780907200536m15866c67ta03e4b5e549ec17c@mail.gmail.com>
Message-ID: <3E7D1DCC-B1D0-43C8-8AFE-3C5275EEFA85@strotos.com>

Hey,

Thanks for the quick response, this is exactly what I am looking for  
am works great.

Thanks again

Regards
David


On 20 Jul 2009, at 13:36, Glyph Lefkowitz wrote:

>
> On Mon, Jul 20, 2009 at 8:26 AM, David Guerin <david at strotos.com>  
> wrote:
> Hey all,
>
> I'm pretty new to Twisted Framework but things are going along nicely.
> At the moment I am trying to get a timer to fire off say every 5
> minutes.
> What's the best way to do this with twisted?
> I found an old link to a how to with timers in twisted on the
> twistedmatrix.com site but there wasn't a web page there when I  
> clicked
>
> You can use LoopingCall: <http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html  
> >, like so:
>
> from twisted.internet.task import LoopingCall
> MINUTES = 60.0
> def myTimer():
>       doSomeStuff()
> repeater = LoopingCall(myTimer)
> repeater.start(5 * MINUTES)
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/f67a63c1/attachment.html>

From paulswartz at gmail.com  Mon Jul 20 16:48:03 2009
From: paulswartz at gmail.com (Paul Swartz)
Date: Mon, 20 Jul 2009 18:48:03 -0400
Subject: [Twisted-Python] Twisted words: Oscar
In-Reply-To: <6fe425b00907132326o34cee2c0q5cf21bff43f22aa2@mail.gmail.com>
References: <6fe425b00907132326o34cee2c0q5cf21bff43f22aa2@mail.gmail.com>
Message-ID: <324cfb540907201548t509872aese756baed50b7f1b3@mail.gmail.com>

On Tue, Jul 14, 2009 at 2:26 AM, Nida <crazyturkey at gmail.com> wrote:

> Hi there,
>
> I noticed that you are on the twisted words mailing list and it says that
> you are the maintainer too, so I was hoping I could ask you a few questions:
> I would like to use the twisted words oscar protocols.
> I am trying to use the oscardemo.py example as a guide and I would like to
> use sendMessage without call back and I don't want to use the reactor
> (because I don't want it to loop).
> I would like the bot to log in, but I want some user interaction to type in
> a message to send to others. My problem is I want to use sendMessage as well
> as getting a buddyList.
> Is there a better way then using ClientCreator? Or a simpler way to log in?
>

(I'm cc-ing the twisted list, since that's the place where questions should
go)

ClientCreator is just an easier way to connection client protocols, without
having to make your own Factory.

You have to use the reactor; that's how the TCP data gets to your client.
I'm not sure what "I don't want it to loop" means, but you can always stop
the reactor after you're done with whatever networking you're doing.

You don't need to have a callback for sendMessage.  Just don't pass the
wantAck kwarg to the method, and you won't get a Deferred back.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://paulswartz.net/
AIM: z3penguin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/fc376440/attachment.html>

From itamar at itamarst.org  Mon Jul 20 19:27:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Jul 2009 21:27:16 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <1090717131439.63148F-100000@Ives.egh.com>
References: <1090717131439.63148F-100000@Ives.egh.com>
Message-ID: <1248139636.19310.306.camel@pintsize>

I asked, and ITA seems willing to provide a conference room or two with
Internet for sprinters. I will try for official signoff given more
details like dates and # of people.




From glyph at twistedmatrix.com  Mon Jul 20 19:40:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Jul 2009 21:40:54 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <1248139636.19310.306.camel@pintsize>
References: <1090717131439.63148F-100000@Ives.egh.com>
	<1248139636.19310.306.camel@pintsize>
Message-ID: <d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>

On Mon, Jul 20, 2009 at 9:27 PM, Itamar Shtull-Trauring <itamar at itamarst.org
> wrote:

> I asked, and ITA seems willing to provide a conference room or two with
> Internet for sprinters. I will try for official signoff given more
> details like dates and # of people.


Great.  Thanks for setting this up.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090720/906ddb77/attachment.html>

From newptcai at gmail.com  Tue Jul 21 05:33:26 2009
From: newptcai at gmail.com (Peter Cai)
Date: Tue, 21 Jul 2009 19:33:26 +0800
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
Message-ID: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>

When my server reboot after an unexpected power cut,
supervisord tried to start a twisted app after an unexpected power cut,
but it fails because "Another twistd server is running, PID 4607"
4607 is the PID of the twisted app before power cut.

After I stopped and restart supervisord, everything is OK.

What might cause twistd to think that an non-exist process is running?

-- 
look to the things around you,the immediate world around you, if you are
alive,it will mean something to you ——Paul Strand
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090721/f71baad8/attachment.html>

From exarkun at divmod.com  Tue Jul 21 08:06:03 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Jul 2009 10:06:03 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
Message-ID: <20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>

On Tue, 21 Jul 2009 19:33:26 +0800, Peter Cai <newptcai at gmail.com> wrote:
>When my server reboot after an unexpected power cut,
>supervisord tried to start a twisted app after an unexpected power cut,
>but it fails because "Another twistd server is running, PID 4607"
>4607 is the PID of the twisted app before power cut.
>
>After I stopped and restart supervisord, everything is OK.
>
>What might cause twistd to think that an non-exist process is running?
>

This is probably due to <http://twistedmatrix.com/trac/ticket/3851>.  It's
not clear what the best solution is yet.

Jean-Paul



From shywolf9982 at gmail.com  Tue Jul 21 11:02:47 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Tue, 21 Jul 2009 19:02:47 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
Message-ID: <h44rq7$7jd$1@ger.gmane.org>

On 07/21/2009 04:06 PM, Jean-Paul Calderone wrote:
> This is probably due to<http://twistedmatrix.com/trac/ticket/3851>.  It's
> not clear what the best solution is yet.

Hi all,

In the bug report I see:

 > after an unclean shutdown by a previous twistd, a new process is
 > started and is allocated the same pid as is in the pidfile which was
 > left behind. This process now causes twistd to think another twistd
 > process is still running in the directory.

If I understand well, the (rather unlucky, but not all that improbable) 
case we are talking about here is twisted getting reassigned the same 
PID that it was running with before?

Example:
1. Twisted is running with PID 401 and suffers an unclean shutdown.
2. Twisted is restarted and is reassigned the same PID (likely if it's a 
daemon launched during startup and a reboot has happened)
3. Twisted invokes checkPID (which reads from the stale pidfile) and 
sees that, after all, there is a process 401 running
4. Twisted claims another process is running

Why this can't be solved by comparing the pid in the file with 
os.getpid() (before throwing the error)?




From radix at twistedmatrix.com  Tue Jul 21 11:10:30 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 21 Jul 2009 13:10:30 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <h44rq7$7jd$1@ger.gmane.org>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>
	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>
	<h44rq7$7jd$1@ger.gmane.org>
Message-ID: <60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>

On Tue, Jul 21, 2009 at 1:02 PM, Simone Deponti<shywolf9982 at gmail.com> wrote:
> On 07/21/2009 04:06 PM, Jean-Paul Calderone wrote:
>> This is probably due to<http://twistedmatrix.com/trac/ticket/3851>.  It's
>> not clear what the best solution is yet.
>
> Hi all,
>
> In the bug report I see:
>
>  > after an unclean shutdown by a previous twistd, a new process is
>  > started and is allocated the same pid as is in the pidfile which was
>  > left behind. This process now causes twistd to think another twistd
>  > process is still running in the directory.
>
> If I understand well, the (rather unlucky, but not all that improbable)
> case we are talking about here is twisted getting reassigned the same
> PID that it was running with before?

It's not necessarily a twistd process. It could be any process with
the same pid. checkPID only checks to see if the pid exists, not that
it's the PID of a twistd process.

> Example:
> 1. Twisted is running with PID 401 and suffers an unclean shutdown.
> 2. Twisted is restarted and is reassigned the same PID (likely if it's a
> daemon launched during startup and a reboot has happened)
> 3. Twisted invokes checkPID (which reads from the stale pidfile) and
> sees that, after all, there is a process 401 running
> 4. Twisted claims another process is running
>
> Why this can't be solved by comparing the pid in the file with
> os.getpid() (before throwing the error)?

I don't think I understand this proposal.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From wthie at thiengineering.ch  Tue Jul 21 15:05:04 2009
From: wthie at thiengineering.ch (Werner Thie)
Date: Tue, 21 Jul 2009 23:05:04 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A645A66.1000301@arimaz.com>
References: <4A645A66.1000301@arimaz.com>
Message-ID: <4A662D80.1060009@thiengineering.ch>

Hi Gabriel

had the same problem, solved it by having keepalive() called in a 
LoopingCall(), MySQL sitting at defaults timingwise.

DB_DRIVER = "MySQLdb"

USERDB_ARGS = {
   'host': '',
   'db': '',
   'user': '',
   'passwd': '',
   'cp_reconnect': True
}

storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)

ka = task.LoopingCall(storekeeper.store.keepAlive)
ka.start(300)

class StoreKeeper(object):
   def __init__(self, dbapiName, **params):
     self.store = Store(dbapiName, **params)

   def dbdisconn(self, reason):
     print 'db disconnected for ', reason

   def keepAlive(self):
     d = self.store.runQuery('SELECT 1')
     d.addErrback(self.dbdisconn)


#with store being something like:

class Store(object):
   def __init__(self, dbapiName, **params):
     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
     print self.__pool.__getstate__()
     self.runOperation('SET autocommit = %s', 1)

   def runQuery(self, query, *args):
     d = self.__pool.runInteraction(self.mapQuery, query, args)
     return d

   def mapQuery(self, curs, query, *args):
     try:
       curs.execute(query, *args)
     except adbapi.ConnectionLost:
       print
       print '++++++++++++ rerunning query'
       print
       curs.execute(query, *args)                    #simply resend 
query, assuming cp_reconnect=True
     result = curs.fetchall()
     columns = [d[0] for d in curs.description]
     return [dict(zip(columns, r)) for r in result]

   def runOperation(self, query, *args):
     d = self.__pool.runOperation(query, args)
     return d

   def runInteraction(self, fun, queries=(), args=()):
     d = self.__pool.runInteraction(fun, queries, args)
     return d


HTH, Werner

Gabriel Rossetti wrote:
> Hello everyone,
> 
> I have been experiencing the ConnectionError with adbapi & 
> cp_reconnect=True. I know that because of the cp_reconnect=True param 
> tha is reconnects and that the query is not re-run. I have written some 
> code that should re-run the query in that case (if I get a Failure back 
> because of a ConnectionError), but it doesn't seem to work. My question 
> is if anyone knows how to make mysql's idle timeouts shorter so that I 
> can debug my code? I searched google and the mysql site with no luck.
> 
> thank you,
> Gabriel
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From clay.gerrard at rackspace.com  Tue Jul 21 15:18:08 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Tue, 21 Jul 2009 16:18:08 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A662D80.1060009@thiengineering.ch>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
Message-ID: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>

Regarding the original question:
"how to make mysql's idle timeouts shorter so that I can debug my code?"

You should be able to do that in the mysql shell:
mysql> show variables like '%timeout%';
+----------------------------+-------+
| Variable_name              | Value |
+----------------------------+-------+
| connect_timeout            | 5     |
| delayed_insert_timeout     | 300   |
| innodb_lock_wait_timeout   | 50    |
| innodb_rollback_on_timeout | OFF   |
| interactive_timeout        | 600   |
| net_read_timeout           | 30    |
| net_write_timeout          | 60    |
| slave_net_timeout          | 3600  |
| table_lock_wait_timeout    | 50    |
| wait_timeout               | 600   |
+----------------------------+-------+
10 rows in set (0.00 sec)

> set global variable interactive_timeout = 5;

But in my experience MySQLdb makes the idle connection timeout very difficult to debug effectively.

Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like sqlalchemy?

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
Sent: Tuesday, July 21, 2009 4:05 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

Hi Gabriel

had the same problem, solved it by having keepalive() called in a
LoopingCall(), MySQL sitting at defaults timingwise.

DB_DRIVER = "MySQLdb"

USERDB_ARGS = {
   'host': '',
   'db': '',
   'user': '',
   'passwd': '',
   'cp_reconnect': True
}

storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)

ka = task.LoopingCall(storekeeper.store.keepAlive)
ka.start(300)

class StoreKeeper(object):
   def __init__(self, dbapiName, **params):
     self.store = Store(dbapiName, **params)

   def dbdisconn(self, reason):
     print 'db disconnected for ', reason

   def keepAlive(self):
     d = self.store.runQuery('SELECT 1')
     d.addErrback(self.dbdisconn)


#with store being something like:

class Store(object):
   def __init__(self, dbapiName, **params):
     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
     print self.__pool.__getstate__()
     self.runOperation('SET autocommit = %s', 1)

   def runQuery(self, query, *args):
     d = self.__pool.runInteraction(self.mapQuery, query, args)
     return d

   def mapQuery(self, curs, query, *args):
     try:
       curs.execute(query, *args)
     except adbapi.ConnectionLost:
       print
       print '++++++++++++ rerunning query'
       print
       curs.execute(query, *args)                    #simply resend
query, assuming cp_reconnect=True
     result = curs.fetchall()
     columns = [d[0] for d in curs.description]
     return [dict(zip(columns, r)) for r in result]

   def runOperation(self, query, *args):
     d = self.__pool.runOperation(query, args)
     return d

   def runInteraction(self, fun, queries=(), args=()):
     d = self.__pool.runInteraction(fun, queries, args)
     return d


HTH, Werner

Gabriel Rossetti wrote:
> Hello everyone,
>
> I have been experiencing the ConnectionError with adbapi &
> cp_reconnect=True. I know that because of the cp_reconnect=True param
> tha is reconnects and that the query is not re-run. I have written some
> code that should re-run the query in that case (if I get a Failure back
> because of a ConnectionError), but it doesn't seem to work. My question
> is if anyone knows how to make mysql's idle timeouts shorter so that I
> can debug my code? I searched google and the mysql site with no luck.
>
> thank you,
> Gabriel
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace. 
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message. 
Your cooperation is appreciated.




From shywolf9982 at gmail.com  Tue Jul 21 16:41:20 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 22 Jul 2009 00:41:20 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>
References: <befee6d80907210433p10afade2mcba6c30780bbfcc2@mail.gmail.com>	<20090721140603.2543.39102560.divmod.quotient.3959@henry.divmod.com>	<h44rq7$7jd$1@ger.gmane.org>
	<60ed19d40907211010w5cd62a64x213b7474e4d8f21d@mail.gmail.com>
Message-ID: <h45fl0$fdt$1@ger.gmane.org>

On 07/21/2009 07:10 PM, Christopher Armstrong wrote:
> It's not necessarily a twistd process. It could be any process with
> the same pid. checkPID only checks to see if the pid exists, not that
> it's the PID of a twistd process.

Disclaimer is, I might be extremely naive here. I have to admit I wasn't 
able to figure out when checkPID is called (before or after a possible 
daemonization? Since with how you have to write daemons in UNIX, doing a 
os.getpid() _before_ daemonizing is not going to work the way I intend 
it to).

Anyway, what is currently done is: os.kill is invoked with signal 0, if 
we get no OSError then sys.exit is invoked.

What I propose is if no OSError is raised, we first check that 
os.getpid() is different from the pid we read from the file, and if they 
are equal we remove the stale file.

Patch against r27172 attached.

Don't shout at me if I haven't got it (it honestly seems way too easy: 
there must be the trick ;))
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: twisted_samepid_r27172.patch
URL: </pipermail/twisted-python/attachments/20090722/afb33559/attachment.ksh>

From exarkun at divmod.com  Tue Jul 21 18:16:01 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 21 Jul 2009 20:16:01 -0400
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <h45fl0$fdt$1@ger.gmane.org>
Message-ID: <20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>

On Wed, 22 Jul 2009 00:41:20 +0200, Simone Deponti <shywolf9982 at gmail.com> wrote:
>On 07/21/2009 07:10 PM, Christopher Armstrong wrote:
>>It's not necessarily a twistd process. It could be any process with
>>the same pid. checkPID only checks to see if the pid exists, not that
>>it's the PID of a twistd process.
>
>Disclaimer is, I might be extremely naive here. I have to admit I wasn't 
>able to figure out when checkPID is called (before or after a possible 
>daemonization? Since with how you have to write daemons in UNIX, doing a 
>os.getpid() _before_ daemonizing is not going to work the way I intend it 
>to).
>
>Anyway, what is currently done is: os.kill is invoked with signal 0, if we 
>get no OSError then sys.exit is invoked.
>
>What I propose is if no OSError is raised, we first check that os.getpid() 
>is different from the pid we read from the file, and if they are equal we 
>remove the stale file.
>
>Patch against r27172 attached.
>
>Don't shout at me if I haven't got it (it honestly seems way too easy: there 
>must be the trick ;))
>


This will fix the problem in one very unlikely case, but leave it broken in
the other somewhat more likely cases.  The problem is that some *other*
process may have been started on your system and given the PID from the
pidfile.  Your proposed change won't fix that case.

Jean-Paul



From powdahound at gmail.com  Tue Jul 21 21:14:58 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Tue, 21 Jul 2009 20:14:58 -0700
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>

Instead of trying to keep the connection alive you can also just reconnect
when necessary. Example code here:
http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873

On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard <clay.gerrard at rackspace.com>wrote:

> Regarding the original question:
> "how to make mysql's idle timeouts shorter so that I can debug my code?"
>
> You should be able to do that in the mysql shell:
> mysql> show variables like '%timeout%';
> +----------------------------+-------+
> | Variable_name              | Value |
> +----------------------------+-------+
> | connect_timeout            | 5     |
> | delayed_insert_timeout     | 300   |
> | innodb_lock_wait_timeout   | 50    |
> | innodb_rollback_on_timeout | OFF   |
> | interactive_timeout        | 600   |
> | net_read_timeout           | 30    |
> | net_write_timeout          | 60    |
> | slave_net_timeout          | 3600  |
> | table_lock_wait_timeout    | 50    |
> | wait_timeout               | 600   |
> +----------------------------+-------+
> 10 rows in set (0.00 sec)
>
> > set global variable interactive_timeout = 5;
>
> But in my experience MySQLdb makes the idle connection timeout very
> difficult to debug effectively.
>
> Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like
> sqlalchemy?
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
> Sent: Tuesday, July 21, 2009 4:05 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>   'host': '',
>   'db': '',
>   'user': '',
>   'passwd': '',
>   'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>   def __init__(self, dbapiName, **params):
>     self.store = Store(dbapiName, **params)
>
>   def dbdisconn(self, reason):
>     print 'db disconnected for ', reason
>
>   def keepAlive(self):
>     d = self.store.runQuery('SELECT 1')
>     d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>   def __init__(self, dbapiName, **params):
>     self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>     print self.__pool.__getstate__()
>     self.runOperation('SET autocommit = %s', 1)
>
>   def runQuery(self, query, *args):
>     d = self.__pool.runInteraction(self.mapQuery, query, args)
>     return d
>
>   def mapQuery(self, curs, query, *args):
>     try:
>       curs.execute(query, *args)
>     except adbapi.ConnectionLost:
>       print
>       print '++++++++++++ rerunning query'
>       print
>       curs.execute(query, *args)                    #simply resend
> query, assuming cp_reconnect=True
>     result = curs.fetchall()
>     columns = [d[0] for d in curs.description]
>     return [dict(zip(columns, r)) for r in result]
>
>   def runOperation(self, query, *args):
>     d = self.__pool.runOperation(query, args)
>     return d
>
>   def runInteraction(self, fun, queries=(), args=()):
>     d = self.__pool.runInteraction(fun, queries, args)
>     return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
> > Hello everyone,
> >
> > I have been experiencing the ConnectionError with adbapi &
> > cp_reconnect=True. I know that because of the cp_reconnect=True param
> > tha is reconnects and that the query is not re-run. I have written some
> > code that should re-run the query in that case (if I get a Failure back
> > because of a ConnectionError), but it doesn't seem to work. My question
> > is if anyone knows how to make mysql's idle timeouts shorter so that I
> > can debug my code? I searched google and the mysql site with no luck.
> >
> > thank you,
> > Gabriel
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of
> the
> individual or entity to which this message is addressed, and unless
> otherwise
> expressly indicated, is confidential and privileged information of
> Rackspace.
> Any dissemination, distribution or copying of the enclosed material is
> prohibited.
> If you receive this transmission in error, please notify us immediately by
> e-mail
> at abuse at rackspace.com, and delete the original message.
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090721/3410ca11/attachment.html>

From gabriel.rossetti at arimaz.com  Wed Jul 22 00:32:12 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:32:12 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A662D80.1060009@thiengineering.ch>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
Message-ID: <4A66B26C.5070708@arimaz.com>

Hello Werner,

Thanks for your idea, I will give it a try if my current "fix" doesn't 
work well (reconnecting if I get a connection lost exception and 
re-running the query).

Gabriel

Werner Thie wrote:
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a 
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>    'host': '',
>    'db': '',
>    'user': '',
>    'passwd': '',
>    'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>    def __init__(self, dbapiName, **params):
>      self.store = Store(dbapiName, **params)
>
>    def dbdisconn(self, reason):
>      print 'db disconnected for ', reason
>
>    def keepAlive(self):
>      d = self.store.runQuery('SELECT 1')
>      d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>    def __init__(self, dbapiName, **params):
>      self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>      print self.__pool.__getstate__()
>      self.runOperation('SET autocommit = %s', 1)
>
>    def runQuery(self, query, *args):
>      d = self.__pool.runInteraction(self.mapQuery, query, args)
>      return d
>
>    def mapQuery(self, curs, query, *args):
>      try:
>        curs.execute(query, *args)
>      except adbapi.ConnectionLost:
>        print
>        print '++++++++++++ rerunning query'
>        print
>        curs.execute(query, *args)                    #simply resend 
> query, assuming cp_reconnect=True
>      result = curs.fetchall()
>      columns = [d[0] for d in curs.description]
>      return [dict(zip(columns, r)) for r in result]
>
>    def runOperation(self, query, *args):
>      d = self.__pool.runOperation(query, args)
>      return d
>
>    def runInteraction(self, fun, queries=(), args=()):
>      d = self.__pool.runInteraction(fun, queries, args)
>      return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
>   
>> Hello everyone,
>>
>> I have been experiencing the ConnectionError with adbapi & 
>> cp_reconnect=True. I know that because of the cp_reconnect=True param 
>> tha is reconnects and that the query is not re-run. I have written some 
>> code that should re-run the query in that case (if I get a Failure back 
>> because of a ConnectionError), but it doesn't seem to work. My question 
>> is if anyone knows how to make mysql's idle timeouts shorter so that I 
>> can debug my code? I searched google and the mysql site with no luck.
>>
>> thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From gabriel.rossetti at arimaz.com  Wed Jul 22 00:33:11 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:33:11 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
Message-ID: <4A66B2A7.2010102@arimaz.com>

Hello Clay,

thanks! It will help me debug my code by setting a low timout.

Gabriel

Clay Gerrard wrote:
> Regarding the original question:
> "how to make mysql's idle timeouts shorter so that I can debug my code?"
>
> You should be able to do that in the mysql shell:
> mysql> show variables like '%timeout%';
> +----------------------------+-------+
> | Variable_name              | Value |
> +----------------------------+-------+
> | connect_timeout            | 5     |
> | delayed_insert_timeout     | 300   |
> | innodb_lock_wait_timeout   | 50    |
> | innodb_rollback_on_timeout | OFF   |
> | interactive_timeout        | 600   |
> | net_read_timeout           | 30    |
> | net_write_timeout          | 60    |
> | slave_net_timeout          | 3600  |
> | table_lock_wait_timeout    | 50    |
> | wait_timeout               | 600   |
> +----------------------------+-------+
> 10 rows in set (0.00 sec)
>
>   
>> set global variable interactive_timeout = 5;
>>     
>
> But in my experience MySQLdb makes the idle connection timeout very difficult to debug effectively.
>
> Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw like sqlalchemy?
>
> Clay Gerrard
> Office: 210-312-3443
> Mobile: 210-788-9431
> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Werner Thie
> Sent: Tuesday, July 21, 2009 4:05 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
>
> Hi Gabriel
>
> had the same problem, solved it by having keepalive() called in a
> LoopingCall(), MySQL sitting at defaults timingwise.
>
> DB_DRIVER = "MySQLdb"
>
> USERDB_ARGS = {
>    'host': '',
>    'db': '',
>    'user': '',
>    'passwd': '',
>    'cp_reconnect': True
> }
>
> storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
> ka = task.LoopingCall(storekeeper.store.keepAlive)
> ka.start(300)
>
> class StoreKeeper(object):
>    def __init__(self, dbapiName, **params):
>      self.store = Store(dbapiName, **params)
>
>    def dbdisconn(self, reason):
>      print 'db disconnected for ', reason
>
>    def keepAlive(self):
>      d = self.store.runQuery('SELECT 1')
>      d.addErrback(self.dbdisconn)
>
>
> #with store being something like:
>
> class Store(object):
>    def __init__(self, dbapiName, **params):
>      self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>      print self.__pool.__getstate__()
>      self.runOperation('SET autocommit = %s', 1)
>
>    def runQuery(self, query, *args):
>      d = self.__pool.runInteraction(self.mapQuery, query, args)
>      return d
>
>    def mapQuery(self, curs, query, *args):
>      try:
>        curs.execute(query, *args)
>      except adbapi.ConnectionLost:
>        print
>        print '++++++++++++ rerunning query'
>        print
>        curs.execute(query, *args)                    #simply resend
> query, assuming cp_reconnect=True
>      result = curs.fetchall()
>      columns = [d[0] for d in curs.description]
>      return [dict(zip(columns, r)) for r in result]
>
>    def runOperation(self, query, *args):
>      d = self.__pool.runOperation(query, args)
>      return d
>
>    def runInteraction(self, fun, queries=(), args=()):
>      d = self.__pool.runInteraction(fun, queries, args)
>      return d
>
>
> HTH, Werner
>
> Gabriel Rossetti wrote:
>   
>> Hello everyone,
>>
>> I have been experiencing the ConnectionError with adbapi &
>> cp_reconnect=True. I know that because of the cp_reconnect=True param
>> tha is reconnects and that the query is not re-run. I have written some
>> code that should re-run the query in that case (if I get a Failure back
>> because of a ConnectionError), but it doesn't seem to work. My question
>> is if anyone knows how to make mysql's idle timeouts shorter so that I
>> can debug my code? I searched google and the mysql site with no luck.
>>
>> thank you,
>> Gabriel
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>     
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> Confidentiality Notice: This e-mail message (including any attached or
> embedded documents) is intended for the exclusive and confidential use of the
> individual or entity to which this message is addressed, and unless otherwise
> expressly indicated, is confidential and privileged information of Rackspace. 
> Any dissemination, distribution or copying of the enclosed material is prohibited.
> If you receive this transmission in error, please notify us immediately by e-mail
> at abuse at rackspace.com, and delete the original message. 
> Your cooperation is appreciated.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From gabriel.rossetti at arimaz.com  Wed Jul 22 00:34:21 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Wed, 22 Jul 2009 08:34:21 +0200
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
References: <4A645A66.1000301@arimaz.com>
	<4A662D80.1060009@thiengineering.ch>	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
Message-ID: <4A66B2ED.3090503@arimaz.com>

Hello Garret,

yes, I finally did did something like that, I am currently testing the code.

Thanks,
Gabriel

Garret Heaton wrote:
> Instead of trying to keep the connection alive you can also just 
> reconnect when necessary. Example code here: 
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
>
> On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard 
> <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
>
>     Regarding the original question:
>     "how to make mysql's idle timeouts shorter so that I can debug my
>     code?"
>
>     You should be able to do that in the mysql shell:
>     mysql> show variables like '%timeout%';
>     +----------------------------+-------+
>     | Variable_name              | Value |
>     +----------------------------+-------+
>     | connect_timeout            | 5     |
>     | delayed_insert_timeout     | 300   |
>     | innodb_lock_wait_timeout   | 50    |
>     | innodb_rollback_on_timeout | OFF   |
>     | interactive_timeout        | 600   |
>     | net_read_timeout           | 30    |
>     | net_write_timeout          | 60    |
>     | slave_net_timeout          | 3600  |
>     | table_lock_wait_timeout    | 50    |
>     | wait_timeout               | 600   |
>     +----------------------------+-------+
>     10 rows in set (0.00 sec)
>
>     > set global variable interactive_timeout = 5;
>
>     But in my experience MySQLdb makes the idle connection timeout
>     very difficult to debug effectively.
>
>     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
>     like sqlalchemy?
>
>     Clay Gerrard
>     Office: 210-312-3443
>     Mobile: 210-788-9431
>     -----Original Message-----
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Werner Thie
>     Sent: Tuesday, July 21, 2009 4:05 PM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
>     mysql - OT
>
>     Hi Gabriel
>
>     had the same problem, solved it by having keepalive() called in a
>     LoopingCall(), MySQL sitting at defaults timingwise.
>
>     DB_DRIVER = "MySQLdb"
>
>     USERDB_ARGS = {
>       'host': '',
>       'db': '',
>       'user': '',
>       'passwd': '',
>       'cp_reconnect': True
>     }
>
>     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
>     ka = task.LoopingCall(storekeeper.store.keepAlive)
>     ka.start(300)
>
>     class StoreKeeper(object):
>       def __init__(self, dbapiName, **params):
>         self.store = Store(dbapiName, **params)
>
>       def dbdisconn(self, reason):
>         print 'db disconnected for ', reason
>
>       def keepAlive(self):
>         d = self.store.runQuery('SELECT 1')
>         d.addErrback(self.dbdisconn)
>
>
>     #with store being something like:
>
>     class Store(object):
>       def __init__(self, dbapiName, **params):
>         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>         print self.__pool.__getstate__()
>         self.runOperation('SET autocommit = %s', 1)
>
>       def runQuery(self, query, *args):
>         d = self.__pool.runInteraction(self.mapQuery, query, args)
>         return d
>
>       def mapQuery(self, curs, query, *args):
>         try:
>           curs.execute(query, *args)
>         except adbapi.ConnectionLost:
>           print
>           print '++++++++++++ rerunning query'
>           print
>           curs.execute(query, *args)                    #simply resend
>     query, assuming cp_reconnect=True
>         result = curs.fetchall()
>         columns = [d[0] for d in curs.description]
>         return [dict(zip(columns, r)) for r in result]
>
>       def runOperation(self, query, *args):
>         d = self.__pool.runOperation(query, args)
>         return d
>
>       def runInteraction(self, fun, queries=(), args=()):
>         d = self.__pool.runInteraction(fun, queries, args)
>         return d
>
>
>     HTH, Werner
>
>     Gabriel Rossetti wrote:
>     > Hello everyone,
>     >
>     > I have been experiencing the ConnectionError with adbapi &
>     > cp_reconnect=True. I know that because of the cp_reconnect=True
>     param
>     > tha is reconnects and that the query is not re-run. I have
>     written some
>     > code that should re-run the query in that case (if I get a
>     Failure back
>     > because of a ConnectionError), but it doesn't seem to work. My
>     question
>     > is if anyone knows how to make mysql's idle timeouts shorter so
>     that I
>     > can debug my code? I searched google and the mysql site with no
>     luck.
>     >
>     > thank you,
>     > Gabriel
>     >
>     > _______________________________________________
>     > Twisted-Python mailing list
>     > Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     Confidentiality Notice: This e-mail message (including any attached or
>     embedded documents) is intended for the exclusive and confidential
>     use of the
>     individual or entity to which this message is addressed, and
>     unless otherwise
>     expressly indicated, is confidential and privileged information of
>     Rackspace.
>     Any dissemination, distribution or copying of the enclosed
>     material is prohibited.
>     If you receive this transmission in error, please notify us
>     immediately by e-mail
>     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
>     the original message.
>     Your cooperation is appreciated.
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From shywolf9982 at gmail.com  Wed Jul 22 01:57:38 2009
From: shywolf9982 at gmail.com (Simone Deponti)
Date: Wed, 22 Jul 2009 09:57:38 +0200
Subject: [Twisted-Python] Incorrect "Another twistd server is running..."
In-Reply-To: <20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>
References: <h45fl0$fdt$1@ger.gmane.org>
	<20090722001601.2543.2034282136.divmod.quotient.4053@henry.divmod.com>
Message-ID: <h46g81$lt2$1@ger.gmane.org>

On 07/22/2009 02:16 AM, Jean-Paul Calderone wrote:
>
> This will fix the problem in one very unlikely case, but leave it broken in
> the other somewhat more likely cases.  The problem is that some *other*
> process may have been started on your system and given the PID from the
> pidfile.  Your proposed change won't fix that case.
>

Duh, silly me.





From lvh at laurensvh.be  Wed Jul 22 07:13:47 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Wed, 22 Jul 2009 15:13:47 +0200
Subject: [Twisted-Python] An alternative Twisted GPS protocol
	implementation
In-Reply-To: <d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>
References: <cedc0c090907191237w6e5af58bv39020d9f6d1e77de@mail.gmail.com>
	<d9047f780907191358w5e87b280l37e9b9172338130e@mail.gmail.com>
Message-ID: <cedc0c090907220613h2fa990c5g621167d11a9c69f5@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

As requested: a ticket! Woo.


http://twistedmatrix.com/trac/ticket/3926
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.6)

iEYEARECAAYFAkpnEFwACgkQT5v5zGkvKT7CrgCgqnlqYsh6yTMZUpscpcbTRnDc
3VEAn0FrBmxChcycDoRdrpalG4Dc+K8O
=//m0
-----END PGP SIGNATURE-----



From clay.gerrard at rackspace.com  Wed Jul 22 08:06:35 2009
From: clay.gerrard at rackspace.com (Clay Gerrard)
Date: Wed, 22 Jul 2009 09:06:35 -0500
Subject: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT
In-Reply-To: <4A66B2ED.3090503@arimaz.com>
References: <4A645A66.1000301@arimaz.com> <4A662D80.1060009@thiengineering.ch>
	<30946_1248211099_n6LLIEqJ002980_5DA4635225CBE24FB33D34EFB6C5304714AEC9000A@DFW1MXM01.RACKSPACE.CORP>
	<812f32000907212014j1aff797ye497a955b3e531b3@mail.gmail.com>
	<4A66B2ED.3090503@arimaz.com>
Message-ID: <31852_1248271614_n6ME6ltX011910_5DA4635225CBE24FB33D34EFB6C5304714B0BD38E2@DFW1MXM01.RACKSPACE.CORP>

In my experience "re-running the query" has not been sufficient.

All of the connections in the pool time out around the same time.

Using cp_reconnect just forces the "idle" connection (cursor) to be removed from the pool before raising the generic "ConnectionLost":

    def rollback(self):
        if not self._pool.reconnect:
            self._connection.rollback()
            return

        try:
            self._connection.rollback()
            curs = self._connection.cursor()
            curs.execute(self._pool.good_sql)
            curs.close()
            self._connection.commit()
            return
        except:
            log.err(None, "Rollback failed")

        self._pool.disconnect(self._connection)

        if self._pool.noisy:
            log.msg("Connection lost.")

        raise ConnectionLost()

But when I go to re-run the query it's very unlikely that I'll get that same thread id again (and therefore a fresh connection).  More than likely I'll get another stale connection which will also get dropped.  Repeat ad infinitum

I'm fairly sure the right thing to do is to make adbapi.Connection objects aware of their created time, and allow adbapi.ConnectionPool.connect to potentially refresh "old" connections based on an optional kwarg when creating the connection pool:

"pool_recycle"

That's what I'm working on anyway...

Clay Gerrard
Office: 210-312-3443
Mobile: 210-788-9431
-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Gabriel Rossetti
Sent: Wednesday, July 22, 2009 1:34 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts, mysql - OT

Hello Garret,

yes, I finally did did something like that, I am currently testing the code.

Thanks,
Gabriel

Garret Heaton wrote:
> Instead of trying to keep the connection alive you can also just
> reconnect when necessary. Example code here:
> http://stackoverflow.com/questions/207981/how-to-enable-mysql-client-auto-re-connect-with-mysqldb/982873#982873
>
> On Tue, Jul 21, 2009 at 2:18 PM, Clay Gerrard
> <clay.gerrard at rackspace.com <mailto:clay.gerrard at rackspace.com>> wrote:
>
>     Regarding the original question:
>     "how to make mysql's idle timeouts shorter so that I can debug my
>     code?"
>
>     You should be able to do that in the mysql shell:
>     mysql> show variables like '%timeout%';
>     +----------------------------+-------+
>     | Variable_name              | Value |
>     +----------------------------+-------+
>     | connect_timeout            | 5     |
>     | delayed_insert_timeout     | 300   |
>     | innodb_lock_wait_timeout   | 50    |
>     | innodb_rollback_on_timeout | OFF   |
>     | interactive_timeout        | 600   |
>     | net_read_timeout           | 30    |
>     | net_write_timeout          | 60    |
>     | slave_net_timeout          | 3600  |
>     | table_lock_wait_timeout    | 50    |
>     | wait_timeout               | 600   |
>     +----------------------------+-------+
>     10 rows in set (0.00 sec)
>
>     > set global variable interactive_timeout = 5;
>
>     But in my experience MySQLdb makes the idle connection timeout
>     very difficult to debug effectively.
>
>     Will twisted.adbapi.ConnectionPool ever offer a pool_recycle kw
>     like sqlalchemy?
>
>     Clay Gerrard
>     Office: 210-312-3443
>     Mobile: 210-788-9431
>     -----Original Message-----
>     From: twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>
>     [mailto:twisted-python-bounces at twistedmatrix.com
>     <mailto:twisted-python-bounces at twistedmatrix.com>] On Behalf Of
>     Werner Thie
>     Sent: Tuesday, July 21, 2009 4:05 PM
>     To: Twisted general discussion
>     Subject: Re: [Twisted-Python] OT - adbapi, connection timeouts,
>     mysql - OT
>
>     Hi Gabriel
>
>     had the same problem, solved it by having keepalive() called in a
>     LoopingCall(), MySQL sitting at defaults timingwise.
>
>     DB_DRIVER = "MySQLdb"
>
>     USERDB_ARGS = {
>       'host': '',
>       'db': '',
>       'user': '',
>       'passwd': '',
>       'cp_reconnect': True
>     }
>
>     storekeeper = StoreKeeper(DB_DRIVER, **USERDB_ARGS)
>
>     ka = task.LoopingCall(storekeeper.store.keepAlive)
>     ka.start(300)
>
>     class StoreKeeper(object):
>       def __init__(self, dbapiName, **params):
>         self.store = Store(dbapiName, **params)
>
>       def dbdisconn(self, reason):
>         print 'db disconnected for ', reason
>
>       def keepAlive(self):
>         d = self.store.runQuery('SELECT 1')
>         d.addErrback(self.dbdisconn)
>
>
>     #with store being something like:
>
>     class Store(object):
>       def __init__(self, dbapiName, **params):
>         self.__pool   = adbapi.ConnectionPool(dbapiName, **params)
>         print self.__pool.__getstate__()
>         self.runOperation('SET autocommit = %s', 1)
>
>       def runQuery(self, query, *args):
>         d = self.__pool.runInteraction(self.mapQuery, query, args)
>         return d
>
>       def mapQuery(self, curs, query, *args):
>         try:
>           curs.execute(query, *args)
>         except adbapi.ConnectionLost:
>           print
>           print '++++++++++++ rerunning query'
>           print
>           curs.execute(query, *args)                    #simply resend
>     query, assuming cp_reconnect=True
>         result = curs.fetchall()
>         columns = [d[0] for d in curs.description]
>         return [dict(zip(columns, r)) for r in result]
>
>       def runOperation(self, query, *args):
>         d = self.__pool.runOperation(query, args)
>         return d
>
>       def runInteraction(self, fun, queries=(), args=()):
>         d = self.__pool.runInteraction(fun, queries, args)
>         return d
>
>
>     HTH, Werner
>
>     Gabriel Rossetti wrote:
>     > Hello everyone,
>     >
>     > I have been experiencing the ConnectionError with adbapi &
>     > cp_reconnect=True. I know that because of the cp_reconnect=True
>     param
>     > tha is reconnects and that the query is not re-run. I have
>     written some
>     > code that should re-run the query in that case (if I get a
>     Failure back
>     > because of a ConnectionError), but it doesn't seem to work. My
>     question
>     > is if anyone knows how to make mysql's idle timeouts shorter so
>     that I
>     > can debug my code? I searched google and the mysql site with no
>     luck.
>     >
>     > thank you,
>     > Gabriel
>     >
>     > _______________________________________________
>     > Twisted-Python mailing list
>     > Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>     Confidentiality Notice: This e-mail message (including any attached or
>     embedded documents) is intended for the exclusive and confidential
>     use of the
>     individual or entity to which this message is addressed, and
>     unless otherwise
>     expressly indicated, is confidential and privileged information of
>     Rackspace.
>     Any dissemination, distribution or copying of the enclosed
>     material is prohibited.
>     If you receive this transmission in error, please notify us
>     immediately by e-mail
>     at abuse at rackspace.com <mailto:abuse at rackspace.com>, and delete
>     the original message.
>     Your cooperation is appreciated.
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Confidentiality Notice: This e-mail message (including any attached or
embedded documents) is intended for the exclusive and confidential use of the
individual or entity to which this message is addressed, and unless otherwise
expressly indicated, is confidential and privileged information of Rackspace.
Any dissemination, distribution or copying of the enclosed material is prohibited.
If you receive this transmission in error, please notify us immediately by e-mail
at abuse at rackspace.com, and delete the original message.
Your cooperation is appreciated.




From exarkun at divmod.com  Thu Jul 23 07:26:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 23 Jul 2009 09:26:36 -0400
Subject: [Twisted-Python] Commit access
In-Reply-To: <ee08d1630907190934pbdce6b0me1abce3d9dd8040f@mail.gmail.com>
Message-ID: <20090723132636.2543.44365649.divmod.quotient.4688@henry.divmod.com>

On Sun, 19 Jul 2009 18:34:41 +0200, Jonathan Jacobs <jonathan+twisted at jsphere.com> wrote:
>Hello Twisted,
>
>I've been contributing to Twisted (jonathanj on the Trac instance, k4y on
>IRC) for around a year now.
>
>I'd be grateful for commit access to the Twisted repo and, as per glyph's
>suggestion, I'd like to formally request it.
>
>I'm not sure if I'm supposed to bow or not, so I'll just exit left.

Hi Jonathan,

This sounds great.  I'll talk to you on IRC about the details.

Jean-Paul



From vishalshetye at gmail.com  Thu Jul 23 09:39:53 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Thu, 23 Jul 2009 21:09:53 +0530
Subject: [Twisted-Python] laxdb - an async dbapi wrapper
Message-ID: <6a2dc2340907230839v3820eba4vab24dc513894f5aa@mail.gmail.com>

> Hi,
>
> In response to the announcement of the Twisted Asynchronous Database Api
> (tada), <http://www.darkarts.co.za/projects/tada/, I thought I should
> mention something I wrote.
>
> [Unfortunately, tada does not use threads correctly so it's likely to
> break. The author knows this and has added a warning to the module for
now.]
>
> A while back, I started messing around with making a standard, blocking
> db-api module appear non-blocking but with a deferred API. I called it
> laxdb and it's in my sandbox.
>
>     svn://svn.twistedmatrix.com/svn/Twisted/sandbox/mg/laxdb.py
>     http://svn.twistedmatrix.com/cvs/sandbox/mg/laxdb.py?view=markup
>
> laxdb is quite literally an async db-api interface and not a
> t.enterprise.adbapi style interface. In particular, it provides exactly
> the same API (but deferred) and it doesn't take over transaction
> management. It also doesn't wrongly call a cursor, "Transaction" ;-).
>
> I recently went back to laxdb and finished it off, also adding a
> connection pool implementation.
>
> Now, I haven't used laxdb in a real project and there are no unit tests
> but I think it's reasonably complete. It should work with any dbapi
> module that has threadsafety level 1 or higher, just like adbapi.
>
> If there's interest in this way of accessing a database then I would be
> happy to write tests etc, move it into Twisted and maintain it.
>
> Cheers, Matt

I guess there have not been any additions to this module in recent time.
I just tried to use it, sample code, actually a failure test, is as below
which does not actually do any query. Reactor is stopped without commit or
rollback.
This raises an exception in removeTrigger_BASE.
    exceptions.ValueError: list.remove(x): x not in list

I could fix it, in class WorkerThread, function _start has line
    self._shutdownTriggerId = reactor.addSystemEventTrigger('after',
'shutdown', self.shutdown)

self.shutdown is called by Connection.close() or reactor.stop(). In case of
second, reactor.stop, registered function, self.shutdown in this case,
should not do
    reactor.removeSystemEventTrigger(self._shutdownTriggerId)

However, this raises some doubts about overall code as there are no test
cases to prove the correctness.
Has anyone used this before? Can somebody provide pointers on what
scenarios/conditions should be tested?
laxdb is good match for what I want, interleaved calls and async interface
to db. Is there any alternative available?

[code]
from laxdb import ConnectionPool
from twisted.internet import reactor

pool = ConnectionPool("sqlite3", database='laxdbTest', timeout=5.0,
check_same_thread=False)

def connect(pool):
    d = pool.connect()
    d.addCallback(connected)

def connected(conn):
    curs = conn.cursor()
    reactor.stop()

reactor.callWhenRunning(connect, pool)
reactor.run()
[/code]

Regards,
vishal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090723/7844f470/attachment-0001.html>

From peter.westlake at pobox.com  Fri Jul 24 07:35:13 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 14:35:13 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
Message-ID: <1248442513.23282.1326608381@webmail.messagingengine.com>

Hello,

I'm having trouble with an AMP connection that doesn't fire
the Deferred returned by callRemote. The AMP command copies
files from the client (called a "worker" in the code below)
to a server ("controller"). It sends a chunk of text at a
time - 16K originally, but I tried smaller amounts too.
The server appends the text to a queue to be written;
it shouldn't take long, because it doesn't do the I/O
synchronously, just starts a thread.

What happens is that the client calls callRemote, but the
Deferred that callRemote returns is never fired. I know
the command reaches the server, because the client keeps
track of how many bytes have been sent successfully, and
the file on the server is bigger than that. I know that
the Deferred doesn't fire, because I can examine it using
a manhole and it has called = False.

There are no error messages in the log. That's consistent
with the Deferred not firing, because the error callback
(self.next_or_retry) would log a message if the remote
command failed.

So, what can possibly be happening?
And how can I find out?

All suggestions most gratefully received.

Peter.


Client-side code:

class ConnectionBuffer(object):
    """Class to store AMP commands and retry them after network outages.
    ...
    """

    def send(self, adv_arg, *a, **kw):
        if self.protocol:
            # call_d is here purely to make the Deferred accessible when
            debugging.
            self.call_d  = self.protocol.callRemote(*a,
            **kw).addBoth(self.next_or_retry, adv_arg)

    def connected(self, protocol):
        self.protocol = protocol
        self.send_next()

    def disconnected(self):
        self.protocol = None


Server:

class ControllerProtocol(amp.AMP):
    """Protocol used by the controller to communicate with a worker.
    ...
    """

    def logoutput(self, product, branch, site, job, action, number,
    data, stream):
        """Receive stdout or stderr from an action running on a
        worker."""
        actid = (product, branch, site, job, action)
        ac = self.factory.controller.actions.find(actid)
        ac.instances[number].logfile[stream].write(data)
        return {'status': True}
    commands.LogOutput.responder(logoutput)



From drew.smathers at gmail.com  Fri Jul 24 08:44:35 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 24 Jul 2009 10:44:35 -0400
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248442513.23282.1326608381@webmail.messagingengine.com>
References: <1248442513.23282.1326608381@webmail.messagingengine.com>
Message-ID: <368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>

On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com> wrote:
> Hello,
>
> I'm having trouble with an AMP connection that doesn't fire
> the Deferred returned by callRemote. The AMP command copies
> files from the client (called a "worker" in the code below)
> to a server ("controller"). It sends a chunk of text at a
> time - 16K originally, but I tried smaller amounts too.
> The server appends the text to a queue to be written;
> it shouldn't take long, because it doesn't do the I/O
> synchronously, just starts a thread.
>

"justs starts a thread"? Where are you starting a thread in the code
example you've posted?


> What happens is that the client calls callRemote, but the
> Deferred that callRemote returns is never fired. I know
> the command reaches the server, because the client keeps
> track of how many bytes have been sent successfully, and
> the file on the server is bigger than that. I know that
> the Deferred doesn't fire, because I can examine it using
> a manhole and it has called = False.
>
> There are no error messages in the log. That's consistent
> with the Deferred not firing, because the error callback
> (self.next_or_retry) would log a message if the remote
> command failed.
>
> So, what can possibly be happening?
> And how can I find out?
>
> All suggestions most gratefully received.
>


Please post a complete example; I don't see methods on client code
below such as send_next() or next_or_retry().  It's hard to help
without a complete example.  In general, though, if you're trying to
debug Deferreds you might try setting debugging with
defer.setDebugging(1).


> Peter.
>
>
> Client-side code:
>
> class ConnectionBuffer(object):
>    """Class to store AMP commands and retry them after network outages.
>    ...
>    """
>
>    def send(self, adv_arg, *a, **kw):
>        if self.protocol:
>            # call_d is here purely to make the Deferred accessible when
>            debugging.
>            self.call_d  = self.protocol.callRemote(*a,
>            **kw).addBoth(self.next_or_retry, adv_arg)
>
>    def connected(self, protocol):
>        self.protocol = protocol
>        self.send_next()
>
>    def disconnected(self):
>        self.protocol = None
>
>
> Server:
>
> class ControllerProtocol(amp.AMP):
>    """Protocol used by the controller to communicate with a worker.
>    ...
>    """
>
>    def logoutput(self, product, branch, site, job, action, number,
>    data, stream):
>        """Receive stdout or stderr from an action running on a
>        worker."""
>        actid = (product, branch, site, job, action)
>        ac = self.factory.controller.actions.find(actid)
>        ac.instances[number].logfile[stream].write(data)
>        return {'status': True}
>    commands.LogOutput.responder(logoutput)
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From peter.westlake at pobox.com  Fri Jul 24 09:12:28 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 16:12:28 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>
References: <1248442513.23282.1326608381@webmail.messagingengine.com>
	<368574aa0907240744w7b17c498v3a9488684a1afeb1@mail.gmail.com>
Message-ID: <1248448348.7691.1326625921@webmail.messagingengine.com>



On Fri, 24 Jul 2009 10:44 -0400, "Drew Smathers"
<drew.smathers at gmail.com> wrote:
> On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com>
> wrote:
> > Hello,
> >
> > I'm having trouble with an AMP connection that doesn't fire
> > the Deferred returned by callRemote. The AMP command copies
> > files from the client (called a "worker" in the code below)
> > to a server ("controller"). It sends a chunk of text at a
> > time - 16K originally, but I tried smaller amounts too.
> > The server appends the text to a queue to be written;
> > it shouldn't take long, because it doesn't do the I/O
> > synchronously, just starts a thread.
> >
> 
> "justs starts a thread"? Where are you starting a thread in the code
> example you've posted?

> Please post a complete example; I don't see methods on client code
> below such as send_next() or next_or_retry().  It's hard to help
> without a complete example.

Sorry - I was trying to avoid clogging everyone's inboxes with too
much code. So far I haven't been able to reproduce the bug in a
simple way. In the meantime, here's the code that starts the thread.
It's one of the very first bits of code I wrote with either Twisted
or Python, so it may do things in quite the wrong way. It serialises
writes to a file by storing requests in a queue, and it gets called
by the line

       ac.instances[number].logfile[stream].write(data)

in the command handler.


from twisted.internet import defer, threads
import os, errno

class FileMan(object):
    def __init__(self, filename):
        self.filename = filename
        self.queue = []
        self.started = False

    def check_file(self):
        self.started = os.path.exists(self.filename)
        return self.started

    def makedir(self):
        dirname = os.path.dirname(self.filename)
        if not os.path.isdir(dirname):
            os.makedirs(dirname)

    def add(self, op, *a, **kw):
        def getnext(result):
            del(self.queue[0])
            if len(self.queue) > 0:
                self.queue[0].callback('unused')
            return result

        d = defer.Deferred()
        d.addCallback(op, *a, **kw)
        d.addBoth(getnext)
        self.queue.append(d)
        if len(self.queue) == 1:
            d.callback('unused')
        return d

    def write(self, data, mode='a'):
        def do_write(result, filename, data):
            def write_in_thread(filename, data):
                f = open(filename, mode)
                try:
                    f.write(data)
                finally:
                    f.close()
                self.started = True
            d = threads.deferToThread(write_in_thread, filename, data)
            return d
        return self.add(do_write, self.filename, data)


>  In general, though, if you're trying to
> debug Deferreds you might try setting debugging with
> defer.setDebugging(1).

What kind of output does that produce? I did try it,
but didn't see anything out of the ordinary.
 
Peter.


> > Client-side code:
> >
> > class ConnectionBuffer(object):
> >    """Class to store AMP commands and retry them after network outages.
> >    ...
> >    """
> >
> >    def send(self, adv_arg, *a, **kw):
> >        if self.protocol:
> >            # call_d is here purely to make the Deferred accessible when
> >            debugging.
> >            self.call_d  = self.protocol.callRemote(*a,
> >            **kw).addBoth(self.next_or_retry, adv_arg)
> >
> >    def connected(self, protocol):
> >        self.protocol = protocol
> >        self.send_next()
> >
> >    def disconnected(self):
> >        self.protocol = None
> >
> >
> > Server:
> >
> > class ControllerProtocol(amp.AMP):
> >    """Protocol used by the controller to communicate with a worker.
> >    ...
> >    """
> >
> >    def logoutput(self, product, branch, site, job, action, number,
> >    data, stream):
> >        """Receive stdout or stderr from an action running on a
> >        worker."""
> >        actid = (product, branch, site, job, action)
> >        ac = self.factory.controller.actions.find(actid)
> >        ac.instances[number].logfile[stream].write(data)
> >        return {'status': True}
> >    commands.LogOutput.responder(logoutput)
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at divmod.com  Fri Jul 24 10:01:19 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Jul 2009 12:01:19 -0400
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <1248448348.7691.1326625921@webmail.messagingengine.com>
Message-ID: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>

On Fri, 24 Jul 2009 16:12:28 +0100, Peter Westlake <peter.westlake at pobox.com> wrote:
>
>
>On Fri, 24 Jul 2009 10:44 -0400, "Drew Smathers"
><drew.smathers at gmail.com> wrote:
>> On Fri, Jul 24, 2009 at 9:35 AM, Peter Westlake<peter.westlake at pobox.com>
>> wrote:
>> > Hello,
>> >
>> > I'm having trouble with an AMP connection that doesn't fire
>> > the Deferred returned by callRemote. The AMP command copies
>> > files from the client (called a "worker" in the code below)
>> > to a server ("controller"). It sends a chunk of text at a
>> > time - 16K originally, but I tried smaller amounts too.
>> > The server appends the text to a queue to be written;
>> > it shouldn't take long, because it doesn't do the I/O
>> > synchronously, just starts a thread.
>> >
>>
>> "justs starts a thread"? Where are you starting a thread in the code
>> example you've posted?
>
>> Please post a complete example; I don't see methods on client code
>> below such as send_next() or next_or_retry().  It's hard to help
>> without a complete example.
>
>Sorry - I was trying to avoid clogging everyone's inboxes with too
>much code. So far I haven't been able to reproduce the bug in a
>simple way. In the meantime, here's the code that starts the thread.
>It's one of the very first bits of code I wrote with either Twisted
>or Python, so it may do things in quite the wrong way. It serialises
>writes to a file by storing requests in a queue, and it gets called
>by the line
>
>       ac.instances[number].logfile[stream].write(data)
>
>in the command handler.
>
>
>from twisted.internet import defer, threads
>import os, errno
>
>class FileMan(object):
>    def __init__(self, filename):
>        self.filename = filename
>        self.queue = []
>        self.started = False
>
>    def check_file(self):
>        self.started = os.path.exists(self.filename)
>        return self.started
>
>    def makedir(self):
>        dirname = os.path.dirname(self.filename)
>        if not os.path.isdir(dirname):
>            os.makedirs(dirname)
>
>    def add(self, op, *a, **kw):
>        def getnext(result):
>            del(self.queue[0])
>            if len(self.queue) > 0:
>                self.queue[0].callback('unused')
>            return result
>
>        d = defer.Deferred()
>        d.addCallback(op, *a, **kw)
>        d.addBoth(getnext)
>        self.queue.append(d)
>        if len(self.queue) == 1:
>            d.callback('unused')
>        return d
>
>    def write(self, data, mode='a'):
>        def do_write(result, filename, data):
>            def write_in_thread(filename, data):
>                f = open(filename, mode)
>                try:
>                    f.write(data)
>                finally:
>                    f.close()
>                self.started = True
>            d = threads.deferToThread(write_in_thread, filename, data)
>            return d
>        return self.add(do_write, self.filename, data)
>
>
>>  In general, though, if you're trying to
>> debug Deferreds you might try setting debugging with
>> defer.setDebugging(1).
>
>What kind of output does that produce? I did try it,
>but didn't see anything out of the ordinary.

It makes Deferreds keep track of the call stack when they are created and
when they are invoked.  This can be helpful tracking down Deferred failures
that don't otherwise identify themselves very well.  If you're not seeing
any failures being logged, then this probably won't help much, since there
won't be anything to increase the verbosity of. :)

Another thing to check out would be a network capture, to see if the server
is actually sending back a response.  If not, then you know you should look
at the server code more carefully.  If so, then the client code is probably
at fault.

Jean-Paul



From andrewfr_ice at yahoo.com  Fri Jul 24 11:22:52 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 24 Jul 2009 10:22:52 -0700 (PDT)
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
Message-ID: <718184.80659.qm@web34203.mail.mud.yahoo.com>


Hi Glyph:

Can do. Tell me how to submit a document patch.

Cheers,
Andrew

Message: 3
Date: Sun, 19 Jul 2009 12:59:22 -0400
From: Glyph Lefkowitz <glyph at twistedmatrix.com>
Subject: Re: [Twisted-Python] Simple Epoll Reactor question
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID:
    <d9047f780907190959k60c53022qb4d348ac886e2d80 at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On Sun, Jul 19, 2009 at 12:08 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:

> Adding 'from twisted.internet import reactor' wasn't obvious to me. Perhaps this should also be mentioned on the "Choosing a Reactor" page for completeness?

The "choosing a reactor" document could definitely be made clearer;
please feel free to submit a doc patch that will help others with
this.


      



From peter.westlake at pobox.com  Fri Jul 24 11:43:55 2009
From: peter.westlake at pobox.com (Peter Westlake)
Date: Fri, 24 Jul 2009 18:43:55 +0100
Subject: [Twisted-Python] How to debug an AMP connection?
In-Reply-To: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
References: <20090724160119.388.1664917024.divmod.quotient.3@henry.divmod.com>
Message-ID: <1248457435.32636.1326651287@webmail.messagingengine.com>

On Fri, 24 Jul 2009 12:01 -0400, "Jean-Paul Calderone"
<exarkun at divmod.com> wrote:
> On Fri, 24 Jul 2009 16:12:28 +0100, Peter Westlake
> <peter.westlake at pobox.com> wrote:

> >>  In general, though, if you're trying to debug Deferreds you might
> >>  try setting debugging with defer.setDebugging(1).
> >
> >What kind of output does that produce? I did try it, but didn't see
> >anything out of the ordinary.
>
> It makes Deferreds keep track of the call stack when they are created
> and when they are invoked.  This can be helpful tracking down
> Deferred failures that don't otherwise identify themselves very well.
> If you're not seeing any failures being logged, then this probably
> won't help much, since there won't be anything to increase the
> verbosity of. :)

That would explain it :-)

> Another thing to check out would be a network capture, to see if the
> server is actually sending back a response.  If not, then you know you
> should look at the server code more carefully.  If so, then the client
> code is probably at fault.

I tried that, and was somewhat overwhelmed by the amount of data!
But now I've found the python-pcapy package and I'm well on the
way to having a script that can match AMP commands and responses
and report any that don't match up. If it turns out to be useful,
I could post it, as long as my employers don't mind.

Thanks for the help,

Peter.



From glyph at twistedmatrix.com  Sat Jul 25 13:36:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Jul 2009 15:36:54 -0400
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
	<d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
Message-ID: <d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>

On Tue, Jul 14, 2009 at 3:59 AM, Jonathan Lange <jml at mumak.net> wrote:


> Also, unless you object, I'll try to send weekly emails on the status of
> the release until it's actually out.
>

So... this sounded like a great idea, but where are those emails?  :)  It's
been a bit more than a week, I think.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090725/debd8bd7/attachment-0001.html>

From jml at mumak.net  Sat Jul 25 17:37:26 2009
From: jml at mumak.net (Jonathan Lange)
Date: Sun, 26 Jul 2009 09:37:26 +1000
Subject: [Twisted-Python] Volunteering for Release Manager
In-Reply-To: <d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>
References: <d06a5cd30907070054r71eec7ew8613a6277940f42a@mail.gmail.com>
	<20090707100715.12555.2000174291.divmod.xquotient.14819@weber.divmod.com>
	<d06a5cd30907140059o292aa59bp4e06e788d991dadc@mail.gmail.com>
	<d9047f780907251236j4d1ad515wdb269d9e07aaf7f8@mail.gmail.com>
Message-ID: <d06a5cd30907251637o598d3250x575770d5386ae50b@mail.gmail.com>

On Sun, Jul 26, 2009 at 5:36 AM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> On Tue, Jul 14, 2009 at 3:59 AM, Jonathan Lange <jml at mumak.net> wrote:
>
>>
>> Also, unless you object, I'll try to send weekly emails on the status of
>> the release until it's actually out.
>
> So... this sounded like a great idea, but where are those emails?  :)  It's
> been a bit more than a week, I think.
>

Emphasis on 'try'. :)

Thank you very much for the gentle nudge, thought. Something will happen soon.

jml



From exarkun at twistedmatrix.com  Sat Jul 25 22:05:12 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 26 Jul 2009 04:05:12 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1248581112.68.339078527@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090726/3d60bcbc/attachment.html>

From exarkun at divmod.com  Mon Jul 27 07:07:08 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Jul 2009 09:07:08 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>
Message-ID: <20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>

On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert <grickert at coldstorage.com> wrote:
> [snip]
>>
>>I really don't know how that could be specific to the twisted python
>>list. I notice in the referenced message, Mark Sapiro says that
>>rebuilding the archives from the mbox file generated correct threading
>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>it generated the same incorrect bad threading.
>>
>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>already upstream?
>>
>>James
>
>Thanks for testing this James.  Before I send this back to the mailman
>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1 mailman
>installation you rebuilt on?  ie. is there any custom configuration
>specific to this list that could be causing this odd behaviour (instead
>of a bug with the ubuntu version)?  [please excuse my ignorance if this
>question doesn't make sense - I know nothing about mailman...I just want
>to stop hijacking threads when I post here]
>

I was reminded of this thread when I came across what appears to be the same
bug on the Tahoe list:

  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html

Notice multiple posts in threads they don't look like they belong to, as
well as many threads which have nonsensical levels of indentation.

I'm not sure if anyone ever answered your question about twisted-python's
mailman installation being "stock" or not.  If not, then I think I can
confirm that it is.  There is also no configuration that would alter this
behavior, as far as I know.  We've probably set a few options via the admin
interface, but I don't think any of those should affect this behavior.

Jean-Paul



From vishalshetye at gmail.com  Mon Jul 27 08:34:19 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Mon, 27 Jul 2009 20:04:19 +0530
Subject: [Twisted-Python] License for code in twisted's sandbox?
Message-ID: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>

Hi,
I had posted a query about laxdb on this list
http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
laxdb code is in sandbox and is not released with twisted. The file itself
does not have any license.
Can it be used assuming the same license as that of twisted.

-- 
vishal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090727/27a34ba3/attachment-0001.html>

From grickert at coldstorage.com  Mon Jul 27 08:54:20 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 27 Jul 2009 10:54:20 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com>
	<20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>Sent: Monday, July 27, 2009 9:07 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert
><grickert at coldstorage.com> wrote:
>> [snip]
>>>
>>>I really don't know how that could be specific to the twisted python
>>>list. I notice in the referenced message, Mark Sapiro says that
>>>rebuilding the archives from the mbox file generated correct
threading
>>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>>it generated the same incorrect bad threading.
>>>
>>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>>already upstream?
>>>
>>>James
>>
>>Thanks for testing this James.  Before I send this back to the mailman
>>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1
mailman
>>installation you rebuilt on?  ie. is there any custom configuration
>>specific to this list that could be causing this odd behaviour
(instead
>>of a bug with the ubuntu version)?  [please excuse my ignorance if
this
>>question doesn't make sense - I know nothing about mailman...I just
>want
>>to stop hijacking threads when I post here]
>>
>
>I was reminded of this thread when I came across what appears to be the
>same
>bug on the Tahoe list:
>
>  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html
>
>Notice multiple posts in threads they don't look like they belong to,
as
>well as many threads which have nonsensical levels of indentation.
>
>I'm not sure if anyone ever answered your question about twisted-
>python's
>mailman installation being "stock" or not.  If not, then I think I can
>confirm that it is.  There is also no configuration that would alter
>this
>behavior, as far as I know.  We've probably set a few options via the
>admin
>interface, but I don't think any of those should affect this behavior.
>
>Jean-Paul

Thanks for the reply, Jean-Paul (until now, nobody did answer my
question).
...I'll forward this back to the mailman list - maybe they can determine
if it's an Ubuntu-specific issue.

Regards,
	Gerrat




From odie5533 at gmail.com  Mon Jul 27 09:18:07 2009
From: odie5533 at gmail.com (David Bern)
Date: Mon, 27 Jul 2009 10:18:07 -0500
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <718184.80659.qm@web34203.mail.mud.yahoo.com>
References: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
	<718184.80659.qm@web34203.mail.mud.yahoo.com>
Message-ID: <c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>

On Fri, Jul 24, 2009 at 12:22 PM, Andrew Francis<andrewfr_ice at yahoo.com> wrote:
>
> Hi Glyph:
>
> Can do. Tell me how to submit a document patch.
>
> Cheers,
> Andrew
>

Browse the SVN for the doc in question
<http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml>
and at the bottom is a download link
<http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml?format=raw>.
Make a backup of the document, modify it to your liking, then at a
console run
>diff -u choosing-reactor_orig.xhtml choosing-reactor.xhtml > choosing-reactor.patch
Then submit the patch with a New Ticket to the Twisted Trac site
<http://twistedmatrix.com/trac/newticket>.

-- 
Regards,
David Bern



From esteve at sindominio.net  Mon Jul 27 11:55:21 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Mon, 27 Jul 2009 19:55:21 +0200 (CEST)
Subject: [Twisted-Python] PPA repo
Message-ID: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>

Hi all,

could any of the admins of the twisted-dev Launchpad team create a PPA? I'd do
it myself, but I don't have permission (AFAIK, only admins do). We're
currently providing packages for Ubuntu Hardy from Fluidinfo's PPA (see ticket
#3102 - http://twistedmatrix.com/trac/ticket/3102), but I think it's more
appropriate to host them at Twisted's.

Another reason for that is that we've been building some custom packages for
Twisted at Fluidinfo, which contain backported stuff from trunk and I'd rather
keep them separated (the "official" ones and Fluidinfo's). These custom
packages currently live in one of my PPAs, but I'd like to move them to
Fluidinfo's.

Thanks!






From grickert at coldstorage.com  Mon Jul 27 12:53:56 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Mon, 27 Jul 2009 14:53:56 -0400
Subject: [Twisted-Python] (Mis)indented Posts
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04647116@ccs-ex01.coldstorage.com><20090727130708.388.1863628158.divmod.quotient.771@henry.divmod.com>
	<BB13E4C4D649234F84A01F6DF64BB87F0479BA0D@ccs-ex01.coldstorage.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F0479BB55@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>bounces at twistedmatrix.com] On Behalf Of Gerrat Rickert
>Sent: Monday, July 27, 2009 10:54 AM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] (Mis)indented Posts
>
>>-----Original Message-----
>>From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>>bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
>>Sent: Monday, July 27, 2009 9:07 AM
>>To: Twisted general discussion
>>Subject: Re: [Twisted-Python] (Mis)indented Posts
>>
>>On Mon, 6 Jul 2009 08:46:39 -0400, Gerrat Rickert
>><grickert at coldstorage.com> wrote:
>>> [snip]
>>>>
>>>>I really don't know how that could be specific to the twisted python
>>>>list. I notice in the referenced message, Mark Sapiro says that
>>>>rebuilding the archives from the mbox file generated correct
>threading
>>>>for him. Well, I just did that, ("mmarch --wipe twisted-python") and
>>>>it generated the same incorrect bad threading.
>>>>
>>>>Perhaps it's a bug in mailman 2.1.9-9ubuntu1 which has been fixed
>>>>already upstream?
>>>>
>>>>James
>>>
>>>Thanks for testing this James.  Before I send this back to the
mailman
>>>list, could you tell me, would that be a "stock" 2.1.9-9ubuntu1
>mailman
>>>installation you rebuilt on?  ie. is there any custom configuration
>>>specific to this list that could be causing this odd behaviour
>(instead
>>>of a bug with the ubuntu version)?  [please excuse my ignorance if
>this
>>>question doesn't make sense - I know nothing about mailman...I just
>>want
>>>to stop hijacking threads when I post here]
>>>
>>
>>I was reminded of this thread when I came across what appears to be
the
>>same
>>bug on the Tahoe list:
>>
>>  http://allmydata.org/pipermail/tahoe-dev/2009-July/thread.html
>>
>>Notice multiple posts in threads they don't look like they belong to,
>as
>>well as many threads which have nonsensical levels of indentation.
>>
>>I'm not sure if anyone ever answered your question about twisted-
>>python's
>>mailman installation being "stock" or not.  If not, then I think I can
>>confirm that it is.  There is also no configuration that would alter
>>this
>>behavior, as far as I know.  We've probably set a few options via the
>>admin
>>interface, but I don't think any of those should affect this behavior.
>>
>>Jean-Paul
>
>Thanks for the reply, Jean-Paul (until now, nobody did answer my
>question).
>...I'll forward this back to the mailman list - maybe they can
determine
>if it's an Ubuntu-specific issue.
>
>Regards,
>	Gerrat


...and now (finally), we get to the heart of the issue:
as explained by Mark Sapiro, on the mailman list:
...
>Ubuntu is based on Debian.
>
>I have just confirmed by testing that this problem is caused by the
Debian Mailman patch "30_pipermail_threads.patch".
>
>This patch can be found by following the links from
<http://patch-tracking.debian.net/package/mailman> (I don't want to give
a more specific URL >because the URLs below this level are unstable).
>
>Thus, the problem potentially exists in all Debian/Ubuntu Mailman
packages. The patch attempts to fix Debian bug  #167758
<http://bugs.debian.org/cgi->bin/bugreport.cgi?bug=167758>, and it may
do that, but it clearly breaks this.
>
>I'll try to report this to Debian.


Thanks all for your help - hopefully this will be resolved in the near
future.

Gerrat



From glyph at twistedmatrix.com  Mon Jul 27 18:41:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 20:41:42 -0400
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>
References: <6a2dc2340907270734t69449256ldb186d1a50f2caa0@mail.gmail.com>
Message-ID: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>

On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:

> I had posted a query about laxdb on this list
> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
> laxdb code is in sandbox and is not released with twisted. The file itself
> does not have any license.
> Can it be used assuming the same license as that of twisted.
>

In general you can assume code in Twisted's sandbox is released under the
same license as Twisted itself.  It's safest to check with the author
personally (in this case, mg) in case there is some reason for an exception.

However, I would strongly discourage you from using this code in any
capacity other than trying to contribute patches which add it (and by "it" I
mean tested, working versions of it) to some existing twisted module, in
this case adbapi.  As it says, it is "experimental, untested, incomplete",
it hasn't been updated in 4 years, and I assume it is totally unsupported,
both by its author and by the Twisted team in general.  If it breaks, you
can't even keep both pieces, you have to dispose of them as toxic waste.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090727/f07b541c/attachment.html>

From glyph at twistedmatrix.com  Mon Jul 27 19:07:19 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 21:07:19 -0400
Subject: [Twisted-Python] PPA repo
In-Reply-To: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
References: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
Message-ID: <d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>

On Mon, Jul 27, 2009 at 1:55 PM, Esteve Fernandez <esteve at sindominio.net>wrote:


> could any of the admins of the twisted-dev Launchpad team create a PPA? I'd
> do
> it myself, but I don't have permission (AFAIK, only admins do). We're
> currently providing packages for Ubuntu Hardy from Fluidinfo's PPA (see
> ticket
> #3102 - http://twistedmatrix.com/trac/ticket/3102), but I think it's more
> appropriate to host them at Twisted's.
>

I've now created the PPA (and as a result, apparently blocked any possible
renaming of the team?  what's up with that?).

However!  Please note that people may already have their sources.list
pointing at fluidinfo.  Is there any way to notify them that the URLs have
changed, and they're going to start getting unofficial patches if they
don't?

Also, as per the ticket, <http://twistedmatrix.com/trac/wiki/Downloads>
still points at the fluidinfo PPA.  This also needs to be updated before we
change the "official" location.  Esteve, do you have wiki edit permission?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090727/600eeae8/attachment.html>

From glyph at twistedmatrix.com  Mon Jul 27 19:20:40 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Jul 2009 21:20:40 -0400
Subject: [Twisted-Python] Simple Epoll Reactor question
In-Reply-To: <c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>
References: <mailman.44796.1248090435.23374.twisted-python@twistedmatrix.com>
	<718184.80659.qm@web34203.mail.mud.yahoo.com>
	<c53602e20907270818w3a94dd9dn1d30a7f0031aca22@mail.gmail.com>
Message-ID: <d9047f780907271820r3b78e5d6j2297075ebc696363@mail.gmail.com>

On Mon, Jul 27, 2009 at 11:18 AM, David Bern <odie5533 at gmail.com> wrote:

> On Fri, Jul 24, 2009 at 12:22 PM, Andrew Francis<andrewfr_ice at yahoo.com>
> wrote:
>


> Can do. Tell me how to submit a document patch.
>

David, thanks for trying to answer, but you described a few of the
particulars in a slightly non-standard way and you skipped a few steps.

The process for editing code and submitting patches is documented in detail
here: http://twistedmatrix.com/trac/wiki/TwistedDevelopment

I'll attach a few additional notes on editing docs.

<
> http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml
> >
> and at the bottom is a download link
> <
> http://twistedmatrix.com/trac/browser/trunk/doc/core/howto/choosing-reactor.xhtml?format=raw
> >.


Instead of doing a diff on a single document like this — it's very hard to
test to make sure that you can actually generate the docs that way — you
should make a checkout of Twisted, like this:

svn checkout svn://svn.twistedmatrix.com/svn/Twisted/trunk
~/my-code-dir/Twisted/trunk

 This ensures you have the most up-to-date copy of Twisted.  You only have
to download it once; in the future you can just do

cd ~/my-code-dir/Twisted/trunk
svn update

Then, edit the document (or documents) that you want to change under doc/.
In order to make sure your changes are complete and correct, as well as to
preview what they will look like on the website, you need to run 'lore' on
them.  In this specific case, you can do

cd ~/my-code-dir/Twisted/trunk/doc/core/howto
lore choosing-reactor.xhtml

Then you can look at "choosing-reactor.html" (notice the input is ".xhtml"
and the output is ".html") in the web browser of your choice.

Please note that lore is rather picky.  You *can't* do 'lore
my-code-dir/Twisted/.../howto/choosing-reactor.xhtml' unless you know how to
set up lore's environment properly; it looks for certain things in its
current directory which are only present in the 'howto' directory.

Make a backup of the document, modify it to your liking, then at a
> console run
> >diff -u choosing-reactor_orig.xhtml choosing-reactor.xhtml >
> choosing-reactor.patch


In order to streamline the process of getting the diff accepted, please diff
it from the root of the repository.  In the case of more complex patches,
this helps to avoid forgetting to include things; it also allows the
reviewer to apply your patch more easily without inspecting it or manually
specifying all the names of the files to be patched.  Given the directory
structure I described above, this would be:

cd ~/my-code-dir/Twisted/trunk
svn diff > choosing-reactor.patch

Then submit the patch for review as described above.

Thanks a lot for your interest in contributing!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090727/d68cba45/attachment.html>

From exarkun at divmod.com  Mon Jul 27 20:35:04 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Jul 2009 22:35:04 -0400
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>
Message-ID: <20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>

On Mon, 27 Jul 2009 20:41:42 -0400, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:
>
>> I had posted a query about laxdb on this list
>> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
>> laxdb code is in sandbox and is not released with twisted. The file itself
>> does not have any license.
>> Can it be used assuming the same license as that of twisted.
>>
>
>In general you can assume code in Twisted's sandbox is released under the
>same license as Twisted itself.

You can assume it, but it'd be safer to read the license file :)

    http://twistedmatrix.com/trac/browser/sandbox/LICENSE

>It's safest to check with the author personally (in this case, mg) in case
>there is some reason for an exception.

So you definitely should do this.

>
>However, I would strongly discourage you from using this code in any
>capacity other than trying to contribute patches which add it (and by "it" I
>mean tested, working versions of it) to some existing twisted module, in
>this case adbapi.  As it says, it is "experimental, untested, incomplete",
>it hasn't been updated in 4 years, and I assume it is totally unsupported,
>both by its author and by the Twisted team in general.  If it breaks, you
>can't even keep both pieces, you have to dispose of them as toxic waste.
>

That's all still excellent advice.

Jean-Paul



From vishalshetye at gmail.com  Tue Jul 28 00:11:24 2009
From: vishalshetye at gmail.com (Vishal Shetye)
Date: Tue, 28 Jul 2009 11:41:24 +0530
Subject: [Twisted-Python] License for code in twisted's sandbox?
In-Reply-To: <20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>
References: <d9047f780907271741x2c35051anb14760d493e18134@mail.gmail.com>
	<20090728023504.388.849228954.divmod.quotient.909@henry.divmod.com>
Message-ID: <6a2dc2340907272311v741e748aq156b6fc1d07e44d2@mail.gmail.com>

On Tue, Jul 28, 2009 at 8:05 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Mon, 27 Jul 2009 20:41:42 -0400, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> >On Mon, Jul 27, 2009 at 10:34 AM, Vishal Shetye <vishalshetye at gmail.com>wrote:
> >
> >> I had posted a query about laxdb on this list
> >> http://twistedmatrix.com/pipermail/twisted-python/2009-July/020030.html
> >> laxdb code is in sandbox and is not released with twisted. The file itself
> >> does not have any license.
> >> Can it be used assuming the same license as that of twisted.
> >>
> >
> >In general you can assume code in Twisted's sandbox is released under the
> >same license as Twisted itself.
>
> You can assume it, but it'd be safer to read the license file :)
>
>    http://twistedmatrix.com/trac/browser/sandbox/LICENSE
>
> >It's safest to check with the author personally (in this case, mg) in case
> >there is some reason for an exception.
>
> So you definitely should do this.
>
> >
> >However, I would strongly discourage you from using this code in any
> >capacity other than trying to contribute patches which add it (and by "it" I
> >mean tested, working versions of it) to some existing twisted module, in
> >this case adbapi.  As it says, it is "experimental, untested, incomplete",
> >it hasn't been updated in 4 years, and I assume it is totally unsupported,
> >both by its author and by the Twisted team in general.  If it breaks, you
> >can't even keep both pieces, you have to dispose of them as toxic waste.
> >
>
> That's all still excellent advice.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


Thanks, I will check with the author.

I assume License file for sandbox warns against use of experimental,
untested code but it still allows one to use it at his own risk :)
Regarding contributing patches; I am not very much sure about what
scenarios should be tested, that is exactly what I tried to ask in my
post that I referred to here.
Anyways, if someone guides me as to what should be tested, I will be
more than happy to contribute.
I am not sure though, whether Laxdb, which has completely different
api, can be added as patch to existing adbapi.
--
vishal



From esteve at sindominio.net  Tue Jul 28 04:17:32 2009
From: esteve at sindominio.net (Esteve Fernandez)
Date: Tue, 28 Jul 2009 12:17:32 +0200 (CEST)
Subject: [Twisted-Python] PPA repo
In-Reply-To: <d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>
References: <e51f237f1a502d4f295e1fdfff5054d9.squirrel@webmail.sindominio.net>
	<d9047f780907271807x2448b146h97cc87ac612785ee@mail.gmail.com>
Message-ID: <8dd819d99342e77d16fa4a0601706b29.squirrel@webmail.sindominio.net>

> On Mon, Jul 27, 2009 at 1:55 PM, Esteve Fernandez
> <esteve at sindominio.net>wrote:
> I've now created the PPA (and as a result, apparently blocked any possible
> renaming of the team?  what's up with that?).

Thanks! I've already uploaded a set of packages.

> However!  Please note that people may already have their sources.list
> pointing at fluidinfo.  Is there any way to notify them that the URLs have
> changed, and they're going to start getting unofficial patches if they
> don't?

And, to add insult to injury, I made a mistake in Fluidinfo's packages (always
fail publicly! :-)), I forgot to add a ~ suffix (e.g. ~ppaX) and I'm not sure
if they'll upgrade cleanly to the official ones. Anyway, I fixed that in the
packages uploaded to Twisted's PPA, although those who are using the previous
ones should downgrade to 8.2.0-2~ppa1~hardy1 or remove them completely and
reinstall the ones from Twisted's PPA.

> Also, as per the ticket, <http://twistedmatrix.com/trac/wiki/Downloads>
> still points at the fluidinfo PPA.  This also needs to be updated before we
> change the "official" location.  Esteve, do you have wiki edit permission?

No, I don't. If you don't mind, I'd like to add a note telling users to use
Fluidinfo's PPA if they want to grab packages with backported stuff (right now
they mainly contain fixes for Twisted.web from trunk), but which are
completely unofficial and subject to breakage.

Cheers.




From kevin.horn at gmail.com  Tue Jul 28 23:54:20 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 00:54:20 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
Message-ID: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>

I was digging through the Twisted IMAP code tonight and I noticed something
puzzling...

PLAINAuthenticator.challengeResponse() uses the following statement to send
auth credentials to the server

        return '%s\0%s\0' % (self.user, secret)

which would give auth credentials of the form:

        authid<NUL>password<NUL>

        (where <NUL> is the NUL character)

However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
say that credentials should be passed this way:

        [authzid]<NUL>authnid<NUL>password

        (where <NUL> is the NUL character and [authzid] is optional)

Now even if one was to leave the authzid out of the equation, you would end
up with something like this:

        <NUL>authnid<NUL>password

and the version Twisted's IMAP code uses appears to be invalid.

Am I crazy?
Am I missing something?
Is it just way too late and I should put the RFCs down and back away slowly?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/881af7b5/attachment.html>

From exarkun at divmod.com  Wed Jul 29 05:29:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Jul 2009 07:29:33 -0400
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
Message-ID: <20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>

On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
>I was digging through the Twisted IMAP code tonight and I noticed something
>puzzling...
>
>PLAINAuthenticator.challengeResponse() uses the following statement to send
>auth credentials to the server
>
>        return '%s\0%s\0' % (self.user, secret)
>
>which would give auth credentials of the form:
>
>        authid<NUL>password<NUL>
>
>        (where <NUL> is the NUL character)
>
>However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
>say that credentials should be passed this way:
>
>        [authzid]<NUL>authnid<NUL>password
>
>        (where <NUL> is the NUL character and [authzid] is optional)
>
>Now even if one was to leave the authzid out of the equation, you would end
>up with something like this:
>
>        <NUL>authnid<NUL>password
>
>and the version Twisted's IMAP code uses appears to be invalid.
>
>Am I crazy?
>Am I missing something?
>Is it just way too late and I should put the RFCs down and back away slowly?

My early morning reading of the RFC agrees with yours.  Someone else brought
this up a long time ago, I think, but never pointed out the RFC.

Can you file a ticket?

Jean-Paul



From kevin.horn at gmail.com  Wed Jul 29 09:51:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 10:51:01 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
Message-ID: <562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>

On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
> >I was digging through the Twisted IMAP code tonight and I noticed
> something
> >puzzling...
> >
> >PLAINAuthenticator.challengeResponse() uses the following statement to
> send
> >auth credentials to the server
> >
> >        return '%s\0%s\0' % (self.user, secret)
> >
> >which would give auth credentials of the form:
> >
> >        authid<NUL>password<NUL>
> >
> >        (where <NUL> is the NUL character)
> >
> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
> >say that credentials should be passed this way:
> >
> >        [authzid]<NUL>authnid<NUL>password
> >
> >        (where <NUL> is the NUL character and [authzid] is optional)
> >
> >Now even if one was to leave the authzid out of the equation, you would
> end
> >up with something like this:
> >
> >        <NUL>authnid<NUL>password
> >
> >and the version Twisted's IMAP code uses appears to be invalid.
> >
> >Am I crazy?
> >Am I missing something?
> >Is it just way too late and I should put the RFCs down and back away
> slowly?
>
> My early morning reading of the RFC agrees with yours.  Someone else
> brought
> this up a long time ago, I think, but never pointed out the RFC.
>
> Can you file a ticket?
>
> Jean-Paul
>
>

At least I'm not crazy... :)

Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939

also added a note in the ticket that PLAINCredentials may need to be
modified to match

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/c73a88f6/attachment.html>

From kevin.horn at gmail.com  Wed Jul 29 10:03:19 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 11:03:19 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
Message-ID: <562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>

On Wed, Jul 29, 2009 at 10:51 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
>> wrote:
>> >I was digging through the Twisted IMAP code tonight and I noticed
>> something
>> >puzzling...
>> >
>> >PLAINAuthenticator.challengeResponse() uses the following statement to
>> send
>> >auth credentials to the server
>> >
>> >        return '%s\0%s\0' % (self.user, secret)
>> >
>> >which would give auth credentials of the form:
>> >
>> >        authid<NUL>password<NUL>
>> >
>> >        (where <NUL> is the NUL character)
>> >
>> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL mechanism),
>> >say that credentials should be passed this way:
>> >
>> >        [authzid]<NUL>authnid<NUL>password
>> >
>> >        (where <NUL> is the NUL character and [authzid] is optional)
>> >
>> >Now even if one was to leave the authzid out of the equation, you would
>> end
>> >up with something like this:
>> >
>> >        <NUL>authnid<NUL>password
>> >
>> >and the version Twisted's IMAP code uses appears to be invalid.
>> >
>> >Am I crazy?
>> >Am I missing something?
>> >Is it just way too late and I should put the RFCs down and back away
>> slowly?
>>
>> My early morning reading of the RFC agrees with yours.  Someone else
>> brought
>> this up a long time ago, I think, but never pointed out the RFC.
>>
>> Can you file a ticket?
>>
>> Jean-Paul
>>
>>
>
> At least I'm not crazy... :)
>
> Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939
>
> also added a note in the ticket that PLAINCredentials may need to be
> modified to match
>
> Kevin Horn
>
>
>
FYI, attached a patch to the ticket. I haven't really tested it, but if
someone could take a look and let me know what they think I'd appreciate it.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/41d2c82a/attachment.html>

From kevin.horn at gmail.com  Wed Jul 29 10:55:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 11:55:54 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
	<562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
Message-ID: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>

On Wed, Jul 29, 2009 at 11:03 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Wed, Jul 29, 2009 at 10:51 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> On Wed, Jul 29, 2009 at 6:29 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>>
>>> On Wed, 29 Jul 2009 00:54:20 -0500, Kevin Horn <kevin.horn at gmail.com>
>>> wrote:
>>> >I was digging through the Twisted IMAP code tonight and I noticed
>>> something
>>> >puzzling...
>>> >
>>> >PLAINAuthenticator.challengeResponse() uses the following statement to
>>> send
>>> >auth credentials to the server
>>> >
>>> >        return '%s\0%s\0' % (self.user, secret)
>>> >
>>> >which would give auth credentials of the form:
>>> >
>>> >        authid<NUL>password<NUL>
>>> >
>>> >        (where <NUL> is the NUL character)
>>> >
>>> >However, both RFC2595 and RFC4616 (both define the PLAIN SASL
>>> mechanism),
>>> >say that credentials should be passed this way:
>>> >
>>> >        [authzid]<NUL>authnid<NUL>password
>>> >
>>> >        (where <NUL> is the NUL character and [authzid] is optional)
>>> >
>>> >Now even if one was to leave the authzid out of the equation, you would
>>> end
>>> >up with something like this:
>>> >
>>> >        <NUL>authnid<NUL>password
>>> >
>>> >and the version Twisted's IMAP code uses appears to be invalid.
>>> >
>>> >Am I crazy?
>>> >Am I missing something?
>>> >Is it just way too late and I should put the RFCs down and back away
>>> slowly?
>>>
>>> My early morning reading of the RFC agrees with yours.  Someone else
>>> brought
>>> this up a long time ago, I think, but never pointed out the RFC.
>>>
>>> Can you file a ticket?
>>>
>>> Jean-Paul
>>>
>>>
>>
>> At least I'm not crazy... :)
>>
>> Ticket #3939 filed: http://twistedmatrix.com/trac/ticket/3939
>>
>> also added a note in the ticket that PLAINCredentials may need to be
>> modified to match
>>
>> Kevin Horn
>>
>>
>>
> FYI, attached a patch to the ticket. I haven't really tested it, but if
> someone could take a look and let me know what they think I'd appreciate it.
>
> Kevin Horn
>

Can anyone tell me what the recommended way to run the twisted test suite
against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
just get a bunch of DeprecationWarnings and then a stack trace complaining
about not being able to remove my
_trial_temp directory...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/1c5bda82/attachment.html>

From exarkun at divmod.com  Wed Jul 29 11:07:06 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 29 Jul 2009 13:07:06 -0400
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
Message-ID: <20090729170706.11822.2123972461.divmod.quotient.366@henry.divmod.com>

On Wed, 29 Jul 2009 11:55:54 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
> [snip]
>
>Can anyone tell me what the recommended way to run the twisted test suite
>against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
>just get a bunch of DeprecationWarnings and then a stack trace complaining
>about not being able to remove my
>_trial_temp directory...

You're close, I think.  Unfortunately, a recent change to trial to make its
temporary directory feature safer has some inconvenient interaction with
state left behind by trial invocations made prior to that change.

Specifically, trial will no longer delete the directory it intends to use as
the temporary working directory (_trial_temp by default) unless it finds a
special marker inside it.  This makes it less likely that a user will delete
a directory they care about by accident.

If you just delete your _trial_temp directory, the problem should go away.
Trial will create the new one such that it recognizes it and will delete it
on its own.

Jean-Paul



From kevin.horn at gmail.com  Wed Jul 29 11:10:53 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 29 Jul 2009 12:10:53 -0500
Subject: [Twisted-Python] PLAINAuthenticator in twisted.mail.imap4
In-Reply-To: <562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
References: <562bcc10907282254l64422dbehb95041d84db835b3@mail.gmail.com>
	<20090729112933.11822.429389579.divmod.quotient.289@henry.divmod.com>
	<562bcc10907290851n1c41acabtbaf8783b6760b7a8@mail.gmail.com>
	<562bcc10907290903t2fc2edeeq25a4be181245c14f@mail.gmail.com>
	<562bcc10907290955s17c45426mbeee8a46fd97fd66@mail.gmail.com>
Message-ID: <562bcc10907291010i3a789818o7fe42eb3b5c65df2@mail.gmail.com>

On Wed, Jul 29, 2009 at 11:55 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

>
> Can anyone tell me what the recommended way to run the twisted test suite
> against my trunk checkout is (on Win32)?  I can't seem to make it work.  I
> just get a bunch of DeprecationWarnings and then a stack trace complaining
> about not being able to remove my
> _trial_temp directory...
>
> Kevin Horn
>

Doh!  Forgot to run 'setup.py develop'...

OK, tests have been run, ticket updated.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/9ec791c5/attachment.html>

From lvh at laurensvh.be  Wed Jul 29 16:08:24 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 00:08:24 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request for
	comments/feedback
Message-ID: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi!


Most of you might remember that I was working on a twisted generic
positioning (GPS and things like it) framework, and here's a
preliminary status report. First of all, we've moved from
twisted.protocols.positioning to twisted.positioning. Yay! Seriously
though: work is mostly coming along nicely, and a serious patch for
separate review is probably only a few days' work away.

For those interested, the ticket is here:
http://twistedmatrix.com/trac/ticket/3926
And you can check out work in progress from launchpad:
https://code.launchpad.net/~lvh/twisted/positioning

As you might remember, we (thanks to the adhoc code reviews from
glyph, tazle, dash andexarkun) decided on an implementation slightly
different from the original one, using:
    - an NMEAReceiver class, which *only* does the receiving bit and
is perfectly stateless: this does things like unpacking the sentence
and checking the checksum
    - an IPositioningReceiver (now renamed IPositioningProvider, but
I'm not sure that's the right name yet) interface that has a bunch of
*sane* callbacks -- ones you actually want instead of ones that are
directly a consequence of NMEA being a steaming pile of dung
    - an NMEAAdapter that would adapt the receiver and keep as much
state as necessary internally to produce the meaningful callbacks as
defined in the interface

I'm having a bit of trouble implementing this this way, and I'd love
to hear your comments or suggestions on the topic.

Here's the code right now: http://bit.ly/1azA5q
The interface lives in this file: http://bit.ly/3wWL2c

I originally thought that the NMEAAdapter (which adapts an
NMEAReceiver to the  IPositioningReceiver interface) was really an
adapter in the twisted.python.components sense of the word, so that
you could do something like  PositioningReceiver(NMEAReceiver()) and
you'd get and NMEAAdapter object, as described in the Twisted
components howto.

The problem is attaching the method stubs in NMEAReceiver (nmea_GPGGA,
nmea_GPRMC, nmea_GPGSV) to the methods in the NMEAAdapter that
actually interpret these sentences. Ordinarily, you'd subclass that
class to override those stubs. How do you feel this should be done
while keeping the adapter? Should we keep the adapter at all?

Of course, I could do ugly things in the adapters' __init__ like:

def __init__(self, receiver):
   receiver.nmea_GPGGA = self.nmea_GPGGA
   receiver.nmea_GPRMC = self.nmea_GPRMC
   receiver.nmea_GPGSV = self.nmea_GPGSV

But that looks like a really bad idea: it's like I'm subverting
inheritance. Instead, I'm currently doing this by subclassing the
receiver (thanks to exarkun for this suggestion):

class NMEAAdapter(NMEAReceiver):

This fixes the method stubs being correctly assigned (I suppose the
correct term would be overriding, through plain old inheritance). The
problem is that neither the interface nor components/adapters are
involved in any way, so I feel like I'm missing something important.


Thanks for reading
Laurens
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Use GnuPG with Firefox : http://getfiregpg.org (Version: 0.7.7)

iEYEARECAAYFAkpwyB4ACgkQT5v5zGkvKT5zPwCbB9IXwaUhP4mr33961ifG7Q92
exMAoLMh5pMXgBT0Q6kvkppCQCWJ26eZ
=9Rfs
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Wed Jul 29 16:56:29 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jul 2009 18:56:29 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>
References: <1090717131439.63148F-100000@Ives.egh.com>
	<1248139636.19310.306.camel@pintsize>
	<d9047f780907201840k3b16857eg1706f9b3d0b4c616@mail.gmail.com>
Message-ID: <d9047f780907291556w582fefhae1a1a2374cb498c@mail.gmail.com>

On Mon, Jul 20, 2009 at 9:40 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Mon, Jul 20, 2009 at 9:27 PM, Itamar Shtull-Trauring <
> itamar at itamarst.org> wrote:
>
>> I asked, and ITA seems willing to provide a conference room or two with
>> Internet for sprinters. I will try for official signoff given more
>> details like dates and # of people.
>
>
> Great.  Thanks for setting this up.
>

Any progress on this?  Is there an official number of people yet?

For what it's worth, two people thus far (Jim Fulton and David Sturgis) have
told me that it would be a lot easier to make this if it extended over a
weekend, as it would be easier to attend without taking time off of work.  I
suspect there may be others for whom this is true.  I realize that many
international participants can take *less* time off work by traveling on the
weekend.

But, as Jonathan Lange put it in his July 14th email, "as of Friday, July
17th, the date & city will be set in concrete, even if I can't attend".  Has
the concrete dried yet?  Should we try to extend it over a weekend, or
should we just schedule another sprint before or after?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/f0e46c8f/attachment.html>

From mike at mv3d.com  Wed Jul 29 18:18:32 2009
From: mike at mv3d.com (Michael Handverger)
Date: Wed, 29 Jul 2009 20:18:32 -0400 (EDT)
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <d9047f780907291556w582fefhae1a1a2374cb498c@mail.gmail.com>
Message-ID: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>


----- "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:
> For what it's worth, two people thus far (Jim Fulton and David Sturgis) have told me that it 
> would be a lot easier to make this if it extended over a weekend, as it would be easier to 
> attend without taking time off of work.  I suspect there may be others for whom this is true.  I 
> realize that many international participants can take less time off work by traveling on the 
> weekend.

Add me to the list of those who can only make it on a weekend as well.

Mike



From listsin at integrateddevcorp.com  Wed Jul 29 18:43:00 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Wed, 29 Jul 2009 20:43:00 -0400
Subject: [Twisted-Python] Possible Twisted sprint
In-Reply-To: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>
References: <14535818.22191248913112144.JavaMail.root@verity.int.mv3d.com>
Message-ID: <98CFECB1-517B-4017-A9AF-30C6797D4ECE@integrateddevcorp.com>

On Jul 29, 2009, at 8:18 PM, Michael Handverger wrote:

>
> ----- "Glyph Lefkowitz" <glyph at twistedmatrix.com> wrote:
>> For what it's worth, two people thus far (Jim Fulton and David  
>> Sturgis) have told me that it
>> would be a lot easier to make this if it extended over a weekend,  
>> as it would be easier to
>> attend without taking time off of work.  I suspect there may be  
>> others for whom this is true.  I
>> realize that many international participants can take less time off  
>> work by traveling on the
>> weekend.
>
> Add me to the list of those who can only make it on a weekend as well.

Weekend would be better for me, too.  I could do Thurs -> Sun much  
better than any other 4 day time period though my wife would probably  
kill me when I got home Sunday night.  At least the sprint would be  
over... ;-)

S






From glyph at twistedmatrix.com  Wed Jul 29 19:01:42 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jul 2009 21:01:42 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
Message-ID: <d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>

On Wed, Jul 29, 2009 at 6:08 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> As you might remember, we (thanks to the adhoc code reviews from
> glyph, tazle, dash andexarkun) decided on an implementation slightly
> different from the original one, using:
>    - an NMEAReceiver class, which *only* does the receiving bit and
> is perfectly stateless: this does things like unpacking the sentence
> and checking the checksum
>    - an IPositioningReceiver (now renamed IPositioningProvider, but
> I'm not sure that's the right name yet) interface that has a bunch of
> *sane* callbacks -- ones you actually want instead of ones that are
> directly a consequence of NMEA being a steaming pile of dung


Presumably the future plan is to have IPositioningProvider that receives
data from something other than NMEA, as well?  (Other GPS protocols,
whatever cell phones give you for triangulation, skyhook, etc.)


>    - an NMEAAdapter that would adapt the receiver and keep as much
> state as necessary internally to produce the meaningful callbacks as
> defined in the interface
>

This all sounds good.

Here's the code right now: http://bit.ly/1azA5q
> The interface lives in this file: http://bit.ly/3wWL2c
>

I think you mean the interface lives in this file: http://bit.ly/5Jc7p
(Your second link was to a directory.)

A minor nit here, would you put the interfaces in their own module,
'twisted.position.ipositioning'?  There are use-cases where one may want to
import interfaces, but not actually load any of the code from a package, so
in new code we try to segregate them out into their own modules.

I originally thought that the NMEAAdapter (which adapts an
> NMEAReceiver to the  IPositioningReceiver interface) was really an
> adapter in the twisted.python.components sense of the word, so that
> you could do something like PositioningReceiver(NMEAReceiver()) and
> you'd get and NMEAAdapter object, as described in the Twisted
> components howto.
>

This is the relationship, but it's backwards :).


> The problem is attaching the method stubs in NMEAReceiver (nmea_GPGGA,
> nmea_GPRMC, nmea_GPGSV) to the methods in the NMEAAdapter that
> actually interpret these sentences. Ordinarily, you'd subclass that
> class to override those stubs. How do you feel this should be done
> while keeping the adapter? Should we keep the adapter at all?


There are multiple layers here.  Let's have an object for each layer.  The
NMEA protocol parser object should send NMEA-sentence events to a sentence
receiver object, then there should be an implementation of the
sentence-receiver interface which generates positioning events and sends
them on to a positioning-receiver interface.

The dispatch from the nmea-sentence-received method to the nmea_-prefixed
methods is an internal implementation detail of the specific implementation
of the NMEA-event-to-positioning-event object, which users can subclass if
they want to get the same dispatch.

I've attached a sketch, but it elides certain details like set-up and
tear-down; there should be methods which allow users to tell when sentences
and positions start and stop arriving.  The gist would be to have a
connectionMade and connectionLost invoke startReceivingNMEA,
stopReceivingNMEA, which in turn would invoke startReceivingPositions, and
stopReceivingPositions.

There should also be a factory which nicely hooks everything together and
takes only a factory for your IPositioningProvider, so that users can
quickly get started with a positioning provider.

Of course, I could do ugly things in the adapters' __init__ like:
>

Let's please not do that; there's no reason to.

But that looks like a really bad idea: it's like I'm subverting
> inheritance. Instead, I'm currently doing this by subclassing the
> receiver (thanks to exarkun for this suggestion):



> class NMEAAdapter(NMEAReceiver):
>


> This fixes the method stubs being correctly assigned (I suppose the
> correct term would be overriding, through plain old inheritance). The
> problem is that neither the interface nor components/adapters are
> involved in any way, so I feel like I'm missing something important.
>

This is an OK approach, convenient, and less code than what I'm proposing,
but it means that users need to subclass something to get the functionality
they want, and there's no nice, clean interface that just describes what
your application needs to do at each level.

That might be fine if you really want to punt on allowing anyone to deal
with NMEA data directly, but given that the object is going to be public and
subclassing is going to be possible anyway, I'd rather that it be nice and
clean.  When we did twisted.words for example, I assumed that everyone would
want the nice, "high level" interface that abstractly defined chat events,
but instead users want to write XMPP and IRC bots directly, dealing with
gross protocol implementation details in their applications.  I suspect that
will be less common in the world of positioning data, but I certainly don't
know for sure, and it would be nice to avoid having to suppot a grotty
subclassing interface in the future, since the whole point of this nice new
system is to get rid of our old grotty interfaces :).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090729/7e690e48/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: positioning-sketch.py
Type: application/x-python
Size: 2323 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090729/7e690e48/attachment-0002.bin>

From lvh at laurensvh.be  Thu Jul 30 06:26:09 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 14:26:09 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
Message-ID: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>

On Thu, Jul 30, 2009 at 3:01 AM, Glyph Lefkowitz<glyph at twistedmatrix.com> wrote:
> Presumably the future plan is to have IPositioningProvider that receives
> data from something other than NMEA, as well?  (Other GPS protocols,
> whatever cell phones give you for triangulation, skyhook, etc.)

Yep, that's the idea.

> A minor nit here, would you put the interfaces in their own module,
> 'twisted.position.ipositioning'?

Done in new revision.

> There are multiple layers here.  Let's have an object for each layer.  The
> NMEA protocol parser object should send NMEA-sentence events to a sentence
> receiver object, then there should be an implementation of the
> sentence-receiver interface which generates positioning events and sends
> them on to a positioning-receiver interface.

Agreed. That's what I'm doing now -- see nmea.NMEASentence. This will
perpetuate through the rest of the code.

> I've attached a sketch, but it elides certain details like set-up and
> tear-down; there should be methods which allow users to tell when sentences
> and positions start and stop arriving.  The gist would be to have a
> connectionMade and connectionLost invoke startReceivingNMEA,
> stopReceivingNMEA, which in turn would invoke startReceivingPositions, and
> stopReceivingPositions.

Extremely helpful, thank you. I think I was confused because
LineReceivers, which make sense for NMEA since it's a line based text
protocol delimited by '\r\n', is-a protocol but is called "receiver",
so I figured my receiver should be a LineReceiver, and not that it
should be delegated from by a LineReceiver subclass. To be honest, it
still looks kind of wonky that a LineReceiver (well, a subclass)
delegates to a receiver, but maybe that's just my inexperience showing
:-)

What exactly would those
startReceivingNMEA/stopReceivingNMEA/startReceivingPositions/stopReceivingPositions
do? I don't think there's any setup to be done, so I guess that I
should just have an instance attribute on the appropriate class that
is set by startFoo/stopFoo. If it's false, callbacks don't fire.
Right?

> There should also be a factory which nicely hooks everything together and
> takes only a factory for your IPositioningProvider, so that users can
> quickly get started with a positioning provider.

Okay, I'll do that as soon as people have reviewed the changes
suggested in your last mail, so that I know I got it right :-)

(also, sorry for the late reply -- the mailing list decided to make me
wait three hours before I could see my own mail, let alone yours)

Thanks for your input
Laurens



From glyph at twistedmatrix.com  Thu Jul 30 08:13:54 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Jul 2009 10:13:54 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <d9047f780907300713v5efb6125h1601697647f0f447@mail.gmail.com>

On Thu, Jul 30, 2009 at 8:26 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> On Thu, Jul 30, 2009 at 3:01 AM, Glyph Lefkowitz<glyph at twistedmatrix.com>
> wrote:
>  > I've attached a sketch
> Extremely helpful, thank you.


You're welcome.


> To be honest, it
> still looks kind of wonky that a LineReceiver (well, a subclass)
> delegates to a receiver, but maybe that's just my inexperience showing
> :-)
>

Does it also bother you that 'dataReceived' delegates to 'lineReceived'? :)

What exactly would those
>
> startReceivingNMEA/stopReceivingNMEA/startReceivingPositions/stopReceivingPositions
> do? I don't think there's any setup to be done, so I guess that I
> should just have an instance attribute on the appropriate class that
> is set by startFoo/stopFoo. If it's false, callbacks don't fire.
> Right?
>

You don't need to do anything at all in these callbacks.  The important
point is to provide them, so that applications which, for example, wish to
show a little "GPS active" icon will know when data starts and stops
arriving.  Also important so that an application can re-connect or
re-initialize the device or whatever, without hooking implementing multiple
interfaces and hooking in at multiple levels.

Given that data for positioning may come from a variety of sources it's
important to have a positioning-specific method that marks the start and
stop, rather than depending on connectionMade or similar.  One could for
example imagine a hypothetical HTTP-polling-based positioning provider which
would have a connectionMade for every sentence of data, but that wouldn't
represent a start and a stop at the positioning level.  start would simply
be called before the first position, and stop would be called after a
timeout or after certain varieties of HTTP error.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/9bda480a/attachment.html>

From lvh at laurensvh.be  Thu Jul 30 08:14:28 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Thu, 30 Jul 2009 16:14:28 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>

Oh, by the way: would you guys expect NMEASentences to be immutable objects?

I suppose it makes sense, but maybe I've been thinking too much
Haskell recently. After all, an NMEASentence is an alternative way of
describing a past event (namely, something that a GPS told you).
Changing it would be like changing history, you can't do that -- even
if you're really replacing it with the same data but encoded
differently.

Right now, I'm assuming immutable sentences.

I know that you can't *really* make immutable python objects, but
they'd be immutable in the sense that:

sentence.latitude, sentence.longitude = Coordinate(50.49),  Coordinate(-3.34)

... wouldn't work (specifically, latitude and longitude aren't really
attributes of the class, but things you can get with my __getattr__ --
and I don't set __setattr__, so you'd need to know the guts of the
class, which currently are public but I might make private before the
code review).

Thanks for your input,
Laurens



From glyph at twistedmatrix.com  Thu Jul 30 08:20:38 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 30 Jul 2009 10:20:38 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<cedc0c090907300714v48e2b8a8xc6a81bd6b7582f50@mail.gmail.com>
Message-ID: <d9047f780907300720m4696cd0gd0c435d6493437e3@mail.gmail.com>

On Thu, Jul 30, 2009 at 10:14 AM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Oh, by the way: would you guys expect NMEASentences to be immutable
> objects?
>

Yes, but by convention, not necessarily by enforcement.  The really
important thing is that the framework should not share or mutate
NMEASentence objects internally.


> I suppose it makes sense, but maybe I've been thinking too much
> Haskell recently. After all, an NMEASentence is an alternative way of
> describing a past event (namely, something that a GPS told you).
> Changing it would be like changing history, you can't do that -- even
> if you're really replacing it with the same data but encoded
> differently.
>


> I know that you can't *really* make immutable python objects, but
> they'd be immutable in the sense that:
>
> sentence.latitude, sentence.longitude = Coordinate(50.49),
>  Coordinate(-3.34)
>
> ... wouldn't work (specifically, latitude and longitude aren't really
> attributes of the class, but things you can get with my __getattr__ --
> and I don't set __setattr__, so you'd need to know the guts of the
> class, which currently are public but I might make private before the
> code review).
>

Ugh.  __getattr__, really?  Is that necessary?  It would be nice not to rely
on this kind of magic.

For NMEASentence, I don't really care, because I hope I'm never going to
write an application that actually deals with one of those.  But if you have
a Point object or something like that, then I think it's important to have a
return-a-modified-copy API if mutation is actually disallowed.  For example,
point.moveTo(50.49, -3.34) => a new Point.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/a0aaa18e/attachment.html>

From santiago.aguiar at gmail.com  Thu Jul 30 10:18:40 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Thu, 30 Jul 2009 13:18:40 -0300
Subject: [Twisted-Python] twisted.positioning: status report and request
 for comments/feedback
In-Reply-To: <cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
Message-ID: <4A71C7E0.4070404@gmail.com>

Hello list!

This is my first post, and I would like to join in the discussion :).

Laurens Van Houtven wrote:
> Okay, I'll do that as soon as people have reviewed the changes
> suggested in your last mail, so that I know I got it right :-)
>   
I agree with Glyph suggestions.

NMEAAdapter should delegate to a IPositionReceiver (which should be a 
Receiver, right? It's called Provider, maybe I'm missing something?), 
and avoid having to make the receiver inherit from the NMEAAdapter 
(which seems to be the case now, by looking at 
NMEAAdapter._sentence_received getattr(self, callbackName)). There will 
probably be tons of different GPS protocols (I sometimes work on 
tracking systems, and truth is many trackers don't send NMEA data but a 
proprietary protocol), and you don't want to have to subclass each to 
handle data from multiple sources.

I also would refrain from using getattr tricks on the NMEA sentence 
classes. For me, the first line of python doc (specially on twisted!) is 
doing dir(obj) (and some IDEs/docgen tools actually do something like 
this for completion). getattr tricks and similar constructions makes it 
impossible to do this. It could be OK if you use getattr to handle an 
unknown case (for example, if you want to delegate based on whether the 
class has a method or not, even if in twisted interfaces world this 
wouldn't be the way to do, it I think), but in this case you know 
exactly what fields will the NMEA sentences have (and they won't change 
much!), so you could code them, even if this require much more code. 
It's the old motto of "write once maintain always" ;).

You could also do other tricks, like update the class __dict__, so it 
would show as a regular field when the object is created, or dinamically 
create the class (like is done for TCPServer and friends, ugh), but 
really, it could be better to just write it.

Thanks for the code!! :)




From ezyang at MIT.EDU  Thu Jul 30 12:24:08 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Thu, 30 Jul 2009 14:24:08 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
Message-ID: <1248977158-sup-6989@javelin>

Hello all,

I have been prodded by the members of #twisted into rewriting the
Deferred documentation.  You can check out the plan at this
ticket:

http://twistedmatrix.com/trac/ticket/3943

Comments would be appreciated.

Cheers,
Edward

P.S. If you reply on the mailing list, please CC me.



From jkakar at kakar.ca  Thu Jul 30 13:03:16 2009
From: jkakar at kakar.ca (Jamu Kakar)
Date: Thu, 30 Jul 2009 12:03:16 -0700
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248977158-sup-6989@javelin>
References: <1248977158-sup-6989@javelin>
Message-ID: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>

Hi Edward,

On Thu, Jul 30, 2009 at 11:24 AM, Edward Z. Yang<ezyang at mit.edu> wrote:
> I have been prodded by the members of #twisted into rewriting the
> Deferred documentation.  You can check out the plan at this
> ticket:
>
> http://twistedmatrix.com/trac/ticket/3943
>
> Comments would be appreciated.

Your outline looks nice.  Something that *really* helped me a lot
with Deferreds was seeing how they are modelled after standard
Python flow control behaviour.  I guess that's what the first
section your proposing is about.

Jono Lange gave a presentation recently (can't remember what it was
called... maybe something about being an evil hacker or about how
your code sucks and he hates you) where he presented step-by-step
slides that shows some normal Python code and then the asynchronous
Deferred-using equivalent.  Even though I understood the principles
reasonably well before attending his talk, the way he presented them
in his slides was very effective and helped me clarify that
understanding.  If he's willing, which I suspect he will be, I
recommend you look at the slides and steal his good ideas. :)

Thanks,
J.



From konrads at smelkovs.com  Thu Jul 30 13:15:31 2009
From: konrads at smelkovs.com (Konrads Smelkovs)
Date: Thu, 30 Jul 2009 22:15:31 +0300
Subject: [Twisted-Python] getPage using ssl proxy
Message-ID: <d79700b90907301215u5e74e501w7b5a960e34d3b33a@mail.gmail.com>

Hello,

I am writing some scraper scripts and need to pass them through an
intercepting proxy. getPage does not support a proxy argument and this code
I found on internet won't work with SSL proxy (stalls indefinitely):

def getPage(url, contextFactory=None, *args, **kwargs):
    scheme, host, port, path = _parse(url)
    factory = HTTPClientFactory(url, *args, **kwargs)
    if 0: # use a proxy
        host, port = 'localhost', 8080
        factory.path = url
    if scheme == 'https':
        from twisted.internet import ssl
        if contextFactory is None:
            contextFactory = ssl.ClientContextFactory()
        reactor.connectSSL(host, port, factory, contextFactory)
    else:
        reactor.connectTCP(host, port, factory)
    return factory.deferred

Plain http proxying works. My guess is that there is an issue with
self-signed or otherwise invalid certificate the http proxy supplies. Any
clues?

--
Konrads Smelkovs
Applied IT sorcery.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/16e6f04a/attachment.html>

From kevin.horn at gmail.com  Thu Jul 30 13:27:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 14:27:54 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
Message-ID: <562bcc10907301227s5dbb7b14x92a7182ca5e81c42@mail.gmail.com>

This looks really great...looking forward to the results!

Kevin Horn

On Thu, Jul 30, 2009 at 2:03 PM, Jamu Kakar <jkakar at kakar.ca> wrote:

> Hi Edward,
>
> On Thu, Jul 30, 2009 at 11:24 AM, Edward Z. Yang<ezyang at mit.edu> wrote:
> > I have been prodded by the members of #twisted into rewriting the
> > Deferred documentation.  You can check out the plan at this
> > ticket:
> >
> > http://twistedmatrix.com/trac/ticket/3943
> >
> > Comments would be appreciated.
>
> Your outline looks nice.  Something that *really* helped me a lot
> with Deferreds was seeing how they are modelled after standard
> Python flow control behaviour.  I guess that's what the first
> section your proposing is about.
>
> Jono Lange gave a presentation recently (can't remember what it was
> called... maybe something about being an evil hacker or about how
> your code sucks and he hates you) where he presented step-by-step
> slides that shows some normal Python code and then the asynchronous
> Deferred-using equivalent.  Even though I understood the principles
> reasonably well before attending his talk, the way he presented them
> in his slides was very effective and helped me clarify that
> understanding.  If he's willing, which I suspect he will be, I
> recommend you look at the slides and steal his good ideas. :)
>
> Thanks,
> J.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/b297a256/attachment.html>

From ezyang at MIT.EDU  Thu Jul 30 14:41:14 2009
From: ezyang at MIT.EDU (ezyang)
Date: Thu, 30 Jul 2009 16:41:14 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
Message-ID: <1248986420-sup-4086@javelin>

Excerpts from Jamu Kakar's message of Thu Jul 30 15:03:16 -0400 2009:
> Your outline looks nice.  Something that *really* helped me a lot
> with Deferreds was seeing how they are modelled after standard
> Python flow control behaviour.  I guess that's what the first
> section your proposing is about.

Right.  Everything you could do synchronously, you can do
asynchronously (and a bit more too).  It just /looks/ really
weird.

> Jono Lange gave a presentation recently (can't remember what it was
> called... maybe something about being an evil hacker or about how
> your code sucks and he hates you) where he presented step-by-step
> slides that shows some normal Python code and then the asynchronous
> Deferred-using equivalent.  Even though I understood the principles
> reasonably well before attending his talk, the way he presented them
> in his slides was very effective and helped me clarify that
> understanding.  If he's willing, which I suspect he will be, I
> recommend you look at the slides and steal his good ideas. :)

That would be very helpful!

Cheers,
Edward



From terry at jon.es  Thu Jul 30 15:27:59 2009
From: terry at jon.es (Terry Jones)
Date: Thu, 30 Jul 2009 23:27:59 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: Your message at 16:41:14 on Thursday, 30 July 2009
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <19058.4191.690751.359019@jon.es>

> Right.  Everything you could do synchronously, you can do asynchronously
> (and a bit more too).  It just /looks/ really weird.

At some point I realized that it helps to realize that code that looks
synchronous really isn't at all. Probably all the programming that almost
all of us will ever do is not synchronous. You type

  x = y + 3

and you get into the habit of thinking that x just got assigned the value
of y + 3. But there's a whole set of levels of operations, all invisible to
you, that are frantically rearranging atoms behind the scenes to pull off
this tiny miracle. Instead of trying to wrap your head around the so-called
"weird" asynchronous operation of Twisted, it's easier to let fall the
comforting illusion that you're in the synchronous world to begin with -
whatever that's supposed to mean (it's more like a fairy tale IMO). You're
not.

It's more accurate to think that that line of code arranges for x to
*eventually* hold the value of y + 3. Then it's a small step to thinking
that

  x = y + 3
  z = f(x)

is just another slightly bigger part of the same illusion. Those lines of
code aren't executed one after another at all. You're just brought up with
the fairy tale that they are - or at least you study computer science and
spend so much time with high-level languages that you start to take it for
granted that they are done one after the other. But the second line is
*eventually* executed after the first, assuming nothing went wrong (e.g., y
could be None).

At that point - everything is asynchronous - you have the right mindset to
think perfectly clearly about Twisted code. And there's no jump to make at
all. The only things you have to get your head around are 1) the fact that
Twisted code doesn't give you the comforting linear illusion of so-called
synchronous code as you type it in your editor (inlineCallbacks helps a lot
with improving that), and 2) that Twisted's deferreds are the way of
maintaining the flow of results (both correct and incorrect) through time
as your program executes. I.e., you've lost the step-at-a-time line-by-line
results computed on line N are available on line N+1 flow of code you can
so easily read in your editor, and in exchange you have deferreds.

I could go on, obviously :-) But I just wanted to point out that the shift
from thinking "synchronously" to "asynchronously" is much easier to make if
you realize the former is a convenient illusion and in fact you've always
been doing things asynchronously.

Terry



From kevin.horn at gmail.com  Thu Jul 30 15:45:54 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 16:45:54 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <19058.4191.690751.359019@jon.es>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <19058.4191.690751.359019@jon.es>
Message-ID: <562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>

On Thu, Jul 30, 2009 at 4:27 PM, Terry Jones <terry at jon.es> wrote:

> > Right.  Everything you could do synchronously, you can do asynchronously
> > (and a bit more too).  It just /looks/ really weird.
>
> At some point I realized that it helps to realize that code that looks
> synchronous really isn't at all. Probably all the programming that almost
> all of us will ever do is not synchronous. You type
>
>  x = y + 3
>
> and you get into the habit of thinking that x just got assigned the value
> of y + 3. But there's a whole set of levels of operations, all invisible to
> you, that are frantically rearranging atoms behind the scenes to pull off
> this tiny miracle. Instead of trying to wrap your head around the so-called
> "weird" asynchronous operation of Twisted, it's easier to let fall the
> comforting illusion that you're in the synchronous world to begin with -
> whatever that's supposed to mean (it's more like a fairy tale IMO). You're
> not.
>
> It's more accurate to think that that line of code arranges for x to
> *eventually* hold the value of y + 3. Then it's a small step to thinking
> that
>
>  x = y + 3
>  z = f(x)
>
> is just another slightly bigger part of the same illusion. Those lines of
> code aren't executed one after another at all. You're just brought up with
> the fairy tale that they are - or at least you study computer science and
> spend so much time with high-level languages that you start to take it for
> granted that they are done one after the other. But the second line is
> *eventually* executed after the first, assuming nothing went wrong (e.g., y
> could be None).
>
> At that point - everything is asynchronous - you have the right mindset to
> think perfectly clearly about Twisted code. And there's no jump to make at
> all. The only things you have to get your head around are 1) the fact that
> Twisted code doesn't give you the comforting linear illusion of so-called
> synchronous code as you type it in your editor (inlineCallbacks helps a lot
> with improving that), and 2) that Twisted's deferreds are the way of
> maintaining the flow of results (both correct and incorrect) through time
> as your program executes. I.e., you've lost the step-at-a-time line-by-line
> results computed on line N are available on line N+1 flow of code you can
> so easily read in your editor, and in exchange you have deferreds.
>
> I could go on, obviously :-) But I just wanted to point out that the shift
> from thinking "synchronously" to "asynchronously" is much easier to make if
> you realize the former is a convenient illusion and in fact you've always
> been doing things asynchronously.
>
> Terry
>

Thanks for this, Terry.  I'd never thought of it that way, and it's quite a
good point.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/847a3a40/attachment.html>

From micahel at gmail.com  Thu Jul 30 15:57:10 2009
From: micahel at gmail.com (Michael Hudson)
Date: Fri, 31 Jul 2009 09:57:10 +1200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248986420-sup-4086@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>

2009/7/31 ezyang <ezyang at mit.edu>:
> Excerpts from Jamu Kakar's message of Thu Jul 30 15:03:16 -0400 2009:
>> Jono Lange gave a presentation recently (can't remember what it was
>> called... maybe something about being an evil hacker or about how
>> your code sucks and he hates you) where he presented step-by-step
>> slides that shows some normal Python code and then the asynchronous
>> Deferred-using equivalent.  Even though I understood the principles
>> reasonably well before attending his talk, the way he presented them
>> in his slides was very effective and helped me clarify that
>> understanding.  If he's willing, which I suspect he will be, I
>> recommend you look at the slides and steal his good ideas. :)
>
> That would be very helpful!

The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

Cheers,
mwh



From nitro at dr-code.org  Thu Jul 30 16:07:30 2009
From: nitro at dr-code.org (Nitro)
Date: Fri, 31 Jul 2009 00:07:30 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <19058.4191.690751.359019@jon.es>
	<562bcc10907301445s62a84d7aj1d5503b54637b386@mail.gmail.com>
Message-ID: <op.uxwiesr7z3pzfc@nitrogenycs2>

Am 30.07.2009, 23:45 Uhr, schrieb Kevin Horn <kevin.horn at gmail.com>:

> Thanks for this, Terry.  I'd never thought of it that way, and it's  
> quite a
> good point.

I agree. I've come to think it's partially a fault of using normal text  
based editors. Those fit the programming models from 30 years ago well,  
but today lots of things are more involved. Text is linear and doesn't  
branch. Asynchronous code is more like a bunch of pipelines which can  
branch, melt together at points or are dead-ends. In my opinion a good  
code editor would visualize this for me, but so far I've never came across  
one which does this job.

-Matthias



From lvh at laurensvh.be  Thu Jul 30 18:38:45 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 31 Jul 2009 02:38:45 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <4A71C7E0.4070404@gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
Message-ID: <cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>

Hi, and welcome to the discussion :-)

On Thu, Jul 30, 2009 at 6:18 PM, Santiago
Aguiar<santiago.aguiar at gmail.com> wrote:
> NMEAAdapter should delegate to a IPositionReceiver (which should be a
> Receiver, right? It's called Provider, maybe I'm missing something?),

Yes, it's been called IPositioningReceiver and IPositioningProvider at
different point in the past, I'm not sure which name is better.

> and avoid having to make the receiver inherit from the NMEAAdapter
> (which seems to be the case now, by looking at
> NMEAAdapter._sentence_received getattr(self, callbackName)). There will
> probably be tons of different GPS protocols (I sometimes work on
> tracking systems, and truth is many trackers don't send NMEA data but a
> proprietary protocol), and you don't want to have to subclass each to
> handle data from multiple sources.

Yes, I've been working with a number of GPS protocols as well from a
different project, I'm just porting it to Twisted (and making it much
better). However, in most commercial applications the only dominant
(and by dominant I mean "used by more than 1 manufacturer") protocol
seems to be SIRF. That's being implemented at some point in time too.

The suggested timeline right now is:

finalize NMEA implementation -> review -> work on GPSD (I've talked to
esr -- working on this sooner is mostly useless, the new gpsd protocol
is much preferred)

The downside of the new protocol in gpsd is that it introduces a new
dependency (gpsd). The upside is that it's json, so parsing it will be
easy, and we'll get something similar to NMEA, except immediately in a
good format.


> I also would refrain from using getattr tricks on the NMEA sentence
> classes. For me, the first line of python doc (specially on twisted!) is
> doing dir(obj) (and some IDEs/docgen tools actually do something like
> this for completion). getattr tricks and similar constructions makes it
> impossible to do this. It could be OK if you use getattr to handle an
> unknown case (for example, if you want to delegate based on whether the
> class has a method or not, even if in twisted interfaces world this
> wouldn't be the way to do, it I think), but in this case you know
> exactly what fields will the NMEA sentences have (and they won't change
> much!), so you could code them, even if this require much more code.
> It's the old motto of "write once maintain always" ;).

Yes, the point of dir working is a strong one -- I'm convinced that
this is a good idea too.

How about a bunch of properties, and have docstrings instead of @ivar
clauses in the class docstring? That way it'd be API compatible with
what I have now. It looks okay (from an API point). I'm more worried
about it being lots of duplicate and similar looking code. Well -- not
worried -- that's what put me off from doing it :-)

> You could also do other tricks, like update the class __dict__, so it
> would show as a regular field when the object is created, or dinamically
> create the class (like is done for TCPServer and friends, ugh), but
> really, it could be better to just write it.

Yeah,  abusing __dict__ sounds like a cure worse than the disease.

> Thanks for the code!! :)

Thanks for your comments :-)

So anyway, short summary on what I'm still going to do:

   - change the fixer methods so they produce abstract objects instead
of just nicer representations of NMEA string values in primitives
(from "1234.567", "N" -> 12 + 34.567/60 is already being done -- now,
it will produce a Coordinate object, too)
   - document all of NMEA's silly sentences in the NMEASentence object
   - change the fixer method to not rely on NMEASentence's internal dictionary

It might be a good idea to do the mapping from "good primitives" data
(eg, a float in decimal degrees with meaningful sign for a latitude)
to the abstract objects (Coordinate objects for example) separately.
This would mean an extra pass, but perhaps code could be shared
between the nmea and gpsd implementations then :-)

Laurens



From dave at davebritton.com  Thu Jul 30 18:48:26 2009
From: dave at davebritton.com (Dave Britton)
Date: Thu, 30 Jul 2009 20:48:26 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
References: <1248977158-sup-6989@javelin><aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com><1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
Message-ID: <183901ca1178$9df7f060$0500a8c0@yoda>

----- Original Message ----- 
From: "Michael Hudson" <micahel at gmail.com>
To: "Twisted general discussion" <twisted-python at twistedmatrix.com>
The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

Thanks for this incredibly helpful link!
-Dave




From jessica.mckellar at gmail.com  Thu Jul 30 18:49:54 2009
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Thu, 30 Jul 2009 20:49:54 -0400
Subject: [Twisted-Python] Questions about adding documentation
Message-ID: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>

Hi everyone,

I would like to help Twisted by adding documentation or reviewing existing
documentation. However, I don't see many (any?) unassigned tickets regarding
documentation of specific items, and because I am quite new to Twisted this
makes it hard for me to determine where you wish I would focus my attention.

Where should I focus my attention? Want to open some tickets for me to
claim? Is adding to API docs more important than updating the examples and
howtos?

It looks like to add to the API docs you just update the doc strings for
functions and let someone let pydoctor do its magic later. Is that true? Is
there a special Twisted pydoctor incant to see how they'd look on the web
before doing any hasty patch-submitting?

I'd like to update
http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs to include some
of this information as well as help I got earlier for updating xhtml
documentation.

Thanks,
-Jessica
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/b1909833/attachment.html>

From exarkun at divmod.com  Thu Jul 30 21:35:35 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 30 Jul 2009 23:35:35 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
Message-ID: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>

On Thu, 30 Jul 2009 20:49:54 -0400, Jessica McKellar <jessica.mckellar at gmail.com> wrote:
>Hi everyone,
>
>I would like to help Twisted by adding documentation or reviewing existing
>documentation. However, I don't see many (any?) unassigned tickets regarding
>documentation of specific items, and because I am quite new to Twisted this
>makes it hard for me to determine where you wish I would focus my attention.

Hi Jessica,

First let me say hooray. :)  Any attention you can direct at any of Twisted's
documentation will be much appreciated. :)

Don't worry about trying to find an unassigned ticket.  We try to keep all
tickets assigned to someone.  That doesn't mean the person is actively
working on resolving the ticket, just that at some point in time, someone
felt like that assignee should have responsibility for it.  You may want to
comment on a ticket before starting to work on it, asking if anyone is
really working on it, or if there is any work which has been started which
you can pick up.  However, for most tickets, you'll very likely find answers
in the negative for both these questions.

>
>Where should I focus my attention? Want to open some tickets for me to
>claim? Is adding to API docs more important than updating the examples and
>howtos?

Either API doc work or howto work will be appreciated.  I find that the API
docs are in better shape overall (except for a few dark corners), so I would
probably recommend focusing on howtos (and perhaps examples).

Here are a few tickets in particular which I think it would be worthwhile to
resolve:

    http://twistedmatrix.com/trac/ticket/1136
    http://twistedmatrix.com/trac/ticket/1627
    http://twistedmatrix.com/trac/ticket/3784
    http://twistedmatrix.com/trac/ticket/3835

    

>It looks like to add to the API docs you just update the doc strings for
>functions and let someone let pydoctor do its magic later. Is that true? Is
>there a special Twisted pydoctor incant to see how they'd look on the web
>before doing any hasty patch-submitting?

Yep, that's right.  There's just a little specialness involved in the
pydoctor invocation.  Here's a decent command line to use:

    pydoctor --quiet --make-html --system-class \
        pydoctor.twistedmodel.TwistedSystem --add-package twisted

where the final "twisted" is the path to the "twisted" directory beneath a
Twisted checkout (ie, the path which has as a sibling the "doc" directory,
the "README" file, etc).

Make sure you have epydoc installed or pydoctor will give you unpleasant
looking results with unparsed epytext strings in it.

There are two other areas in which I think documentation work would yield a
great benefit.  First, in general editing for readability, coherency, and
general ease of understandability of any of the existing documents.  These
are often rough first drafts which no one was interested in polishing, or
rough first drafts which have had dozens of minor edits by multiple authors
with little concern for the overall document flow.

Second, in a comprehensive high-level overview of what documentation is
missing, what documentation exists, and how it all fits together.  The
output of this would be recommendations about what new documentation to
write, what old documentation to scrape, what documents could be merged,
more closely linked, or otherwise made to cooperate to provide easier
access to the information they present.  This is probably a big task, and
one which requires familiarity with a lot of Twisted.  I'm not sure how
much Twisted experience you already have, but I wanted to mention it in
case it sounds like something you'd be interested in.

Finally, a couple years ago an attempt was made to seriously do something
about the state of the documentation.  It didn't get far enough to produce
actual changes to the documentation, but it did produce some output.  This
may be useful.  You can find it on the wiki:

  http://twistedmatrix.com/trac/wiki/DocumentationAnalysis

>
>I'd like to update
>http://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs to include some
>of this information as well as help I got earlier for updating xhtml
>documentation.

That sounds like a great idea.  Wiki pages require a special permission to
be set on your trac user.  If you let me know what your username is, I can
take care of adding that for you.

Thanks!

Jean-Paul



From listsin at integrateddevcorp.com  Thu Jul 30 21:45:53 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 30 Jul 2009 23:45:53 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
Message-ID: <562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>


On Jul 30, 2009, at 11:35 PM, Jean-Paul Calderone wrote:
> Here are a few tickets in particular which I think it would be  
> worthwhile to
> resolve:
>
>    http://twistedmatrix.com/trac/ticket/1136
>    http://twistedmatrix.com/trac/ticket/1627
>    http://twistedmatrix.com/trac/ticket/3784
>    http://twistedmatrix.com/trac/ticket/3835

Traceback (most recent call last):
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
api.py", line 382, in send_error
     'text/html')
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
chrome.py", line 475, in render_template
     return stream.render(method, doctype=doctype)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 146, in render
     output = u''.join(list(generator))
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 200, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 486, in __call__
     for kind, data, pos in chain(stream, [(None, None, None)]):
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
output.py", line 436, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 207, in _ensure
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",  
line 207, in _ensure
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/ 
chrome.py", line 478, in _strip_accesskeys
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
filters.py", line 313, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1145, in _match
     content = list(content)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
filters.py", line 313, in __call__
     for kind, data, pos in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1120, in _match
     for event in stream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 1109, in _strip
     event = stream.next()
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 941, in _eval
     for event in substream:
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 920, in _eval
     ctxt):
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/ 
template.py", line 930, in _eval
     result = data.evaluate(ctxt)
   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py",  
line 101, in evaluate
     {'data': data})
   File "/home/trac/.local/share/trac/templates/error.html", line 36,  
in <Expression u"get_reporter_id(req)">
     <input type="hidden" name="reporter" value="${get_reporter_id 
(req)}" />
   File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/ 
__init__.py", line 50, in get_reporter_id
     name = req.session.get('name', None)
AttributeError: 'NoneType' object has no attribute 'get'

Yikes...

S





From kevin.horn at gmail.com  Thu Jul 30 21:51:19 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 22:51:19 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
Message-ID: <562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>

Steve.

Same thing happened to me.  In my case it was corrected by a page refresh.

Kevin Horn

On Thu, Jul 30, 2009 at 10:45 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

>
> On Jul 30, 2009, at 11:35 PM, Jean-Paul Calderone wrote:
> > Here are a few tickets in particular which I think it would be
> > worthwhile to
> > resolve:
> >
> >    http://twistedmatrix.com/trac/ticket/1136
> >    http://twistedmatrix.com/trac/ticket/1627
> >    http://twistedmatrix.com/trac/ticket/3784
> >    http://twistedmatrix.com/trac/ticket/3835
>
> Traceback (most recent call last):
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> api.py", line 382, in send_error
>     'text/html')
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> chrome.py", line 475, in render_template
>     return stream.render(method, doctype=doctype)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 146, in render
>     output = u''.join(list(generator))
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 200, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 486, in __call__
>     for kind, data, pos in chain(stream, [(None, None, None)]):
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> output.py", line 436, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 207, in _ensure
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/core.py",
> line 207, in _ensure
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/web/
> chrome.py", line 478, in _strip_accesskeys
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> filters.py", line 313, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1145, in _match
>     content = list(content)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> filters.py", line 313, in __call__
>     for kind, data, pos in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1120, in _match
>     for event in stream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 1109, in _strip
>     event = stream.next()
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 941, in _eval
>     for event in substream:
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 920, in _eval
>     ctxt):
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/
> template.py", line 930, in _eval
>     result = data.evaluate(ctxt)
>   File "/srv/trac/.local/lib/python2.5/site-packages/genshi/eval.py",
> line 101, in evaluate
>     {'data': data})
>   File "/home/trac/.local/share/trac/templates/error.html", line 36,
> in <Expression u"get_reporter_id(req)">
>     <input type="hidden" name="reporter" value="${get_reporter_id
> (req)}" />
>   File "/srv/trac/.local/lib/python2.5/site-packages/trac/util/
> __init__.py", line 50, in get_reporter_id
>     name = req.session.get('name', None)
> AttributeError: 'NoneType' object has no attribute 'get'
>
> Yikes...
>
> S
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/f3d77e2f/attachment.html>

From listsin at integrateddevcorp.com  Thu Jul 30 21:58:47 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 30 Jul 2009 23:58:47 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
	<562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
Message-ID: <21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>


On Jul 30, 2009, at 11:51 PM, Kevin Horn wrote:

> Steve.
>
> Same thing happened to me.  In my case it was corrected by a page  
> refresh.

Yah, it's just a little scary when Twisted's own site does things like  
this.

S




From drew.smathers at gmail.com  Thu Jul 30 22:05:58 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 31 Jul 2009 00:05:58 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>
References: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562F6342-7FFD-4273-A0ED-46021A7A29CC@integrateddevcorp.com>
	<562bcc10907302051k359a142oc3d47d721327eb61@mail.gmail.com>
	<21F7DCDE-FFCB-46CE-A034-53540D0F4740@integrateddevcorp.com>
Message-ID: <368574aa0907302105g3219a0dpaba49dbf5becaa78@mail.gmail.com>

On Thu, Jul 30, 2009 at 11:58 PM, Steve Steiner
(listsin)<listsin at integrateddevcorp.com> wrote:
>
> On Jul 30, 2009, at 11:51 PM, Kevin Horn wrote:
>
>> Steve.
>>
>> Same thing happened to me.  In my case it was corrected by a page
>> refresh.
>
> Yah, it's just a little scary when Twisted's own site does things like
> this.
>

Well, mind please the site is just trac -- don't blame Twisted ;-)



From kevin.horn at gmail.com  Thu Jul 30 22:31:18 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 30 Jul 2009 23:31:18 -0500
Subject: [Twisted-Python] Missing Interface?
Message-ID: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>

the following classes:

twisted.cred.credentials.CramMD5Credentials
twisted.mail.imap4.PLAINCredentials
twisted.mail.imap4.LOGINCredentials

all seem to implement the same interface, yet there is no Interface defined
for these objects.

"But Kevin", you might be thinking, "They all implement
twisted.cred.credentials.IUsernameHashedPassword or
t.c.c.IUsernamePassword".  That's true, but they all have additional methods
which make them useful for handling SASL authentication in various
protocols.  And those methods aren't included in those interfaces.

So, should there be an Interface which describes the interface that these
objects implement?
Would that make it easier for protocol implementors to deal with SASL in
their protocols?
If it is desirable to have such an Interface, what should it be called?
Would this be of any use to anyone out there? (besides possibly me)
And why are two of these in the IMAP package and the third in cred?  Why not
in the same place?

Thoughts?  Anyone?  Bueller?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090730/f690b73c/attachment.html>

From kevin.horn at gmail.com  Thu Jul 30 23:11:48 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 00:11:48 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
Message-ID: <562bcc10907302211q4ec0f670kfa1820f398061eea@mail.gmail.com>

On Thu, Jul 30, 2009 at 10:35 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Thu, 30 Jul 2009 20:49:54 -0400, Jessica McKellar <
> jessica.mckellar at gmail.com> wrote:
> >Hi everyone,
> >
> >I would like to help Twisted by adding documentation or reviewing existing
> >documentation. However, I don't see many (any?) unassigned tickets
> regarding
> >documentation of specific items, and because I am quite new to Twisted
> this
> >makes it hard for me to determine where you wish I would focus my
> attention.
>
> Hi Jessica,
>
> First let me say hooray. :)  Any attention you can direct at any of
> Twisted's
> documentation will be much appreciated. :)
>
>
Let me second that Hooray!

I thought I would jump in here with sort of an outsiders perspective on what
I think needs to happen with the Twisted docs.  Even though I've been using
Twisted for a couple of years, I'm still new enough at it that I remember
what my frustrations were (and sometimes still are) with the docs.  This is
all just my opinion, though...I don't mean to ruffle anyone's feathers.


>
> >
> >Where should I focus my attention? Want to open some tickets for me to
> >claim? Is adding to API docs more important than updating the examples and
> >howtos?
>
> Either API doc work or howto work will be appreciated.  I find that the API
> docs are in better shape overall (except for a few dark corners), so I
> would
> probably recommend focusing on howtos (and perhaps examples).
>

I agree.  The API docs need some work (there are a LOT of undocumented
methods), but overall I think they are in much better shape than the rest.

Howtos and examples would be fantastic, as well as clean up of some of the
existing stuff (as Jean-Paul notes below).  Browsing through the source code
for long enough should give most coders the idea that all the pieces are
there to build, e.g. an IMAP server, and those pieces ARE there, but it
takes a lots of reading of lots of stuff in lots of different places (text
docs, API docs, cred docs, application docs, etc., etc.) to figure out which
pieces you need and how to put them together.

I picked an IMAP server as an example, because of the AHA! moment I had when
I read the following in the in the Abe Fettig O'Reilly book"

"To make an IMAP server, write classes to implement the IAccount, IMailbox,
IMessage, and IMessagePart interfaces defined in twisted.mail.imap4"

The next two sentences complete the description of the process, but the key
point is that for most parts of Twisted, there isn't much that tells you how
all of the various parts fit together.
And Twisted is BIG.  It's hard to find things sometimes...

Some of this could be improved by expounding on the API docs for these
interfaces, but I think a broad overview for many of these areas would help
immensely.


> There are two other areas in which I think documentation work would yield a
> great benefit.  First, in general editing for readability, coherency, and
> general ease of understandability of any of the existing documents.  These
> are often rough first drafts which no one was interested in polishing, or
> rough first drafts which have had dozens of minor edits by multiple authors
> with little concern for the overall document flow.
>

More true in some places than others, but a definite problem in some places.
A personal pet peeve of mine is the "What Deferreds don't do: make your code
asynchronous"
section of
http://twistedmatrix.com/projects/core/documentation/howto/gendefer.html

There's a nice big example of what Deferred's don't do.  OK, great, but if
I'm new to Twisted
and the async style of coding in general, then what *DO* I do to make my
code asynchronous?
(NOTE: some of this I think will be helped in the upcoming Deferred
documentation rewrite...see the
"Deferred documentation rewrite" thread on this list for the last day or
two)


> Second, in a comprehensive high-level overview of what documentation is
> missing, what documentation exists, and how it all fits together.  The
> output of this would be recommendations about what new documentation to
> write, what old documentation to scrape, what documents could be merged,
> more closely linked, or otherwise made to cooperate to provide easier
> access to the information they present.  This is probably a big task, and
> one which requires familiarity with a lot of Twisted.  I'm not sure how
> much Twisted experience you already have, but I wanted to mention it in
> case it sounds like something you'd be interested in.
>

Emphasis on "how it fits together", IMHO.  Navigating Twisted's'
documentation (outside the API docs)
is a nightmare.  I often find myself just having to use Google searches.


> Finally, a couple years ago an attempt was made to seriously do something
> about the state of the documentation.  It didn't get far enough to produce
> actual changes to the documentation, but it did produce some output.  This
> may be useful.  You can find it on the wiki:
>
>  http://twistedmatrix.com/trac/wiki/DocumentationAnalysis
>

I looked at this a while back, but I found it pretty much incomprehensible.


>
> Thanks!
>
> Jean-Paul
>

A couple of other things:

There are several barriers to improving Twisted's docs
- you have to know a fair amount about Twisted to write about some parts of
it
- you have to know a lot about Twisted to write about Twisted from a high
level, big-picture sort of perspective
- you have to know some seriously deep Twisted magic to even speak
intelligibly about certain things
- once you know enough about Twisted to really explain it...it seems you are
no longer able to explain it :)

Not trying to offend...everyone in the Twisted community I've talked to has
been very helpful, but sometimes when you know a complex topic really well,
it becomes difficult to explain things in such a way that someone new to
that topic will understand.  Does this make sense?

Sometimes I think what is needed is someone who knows basically nothing
about Twisted to go about learning it...and then writing down how they did
it.

Also:
Some (more) documentation about how to write docs for Twisted would really
help people who are willing (and in some cases eager!) to contribute, but
feel the barrier to entry is too high (they don't want to figure out
pydoctor + epydoc + xml processing + ...).

Anyway, I hope my rambling is helpful...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/4fc7d3f6/attachment.html>

From glyph at twistedmatrix.com  Thu Jul 30 23:23:47 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 01:23:47 -0400
Subject: [Twisted-Python] Missing Interface?
In-Reply-To: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
References: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
Message-ID: <d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:31 AM, Kevin Horn <kevin.horn at gmail.com> wrote:

> the following classes:
>
> twisted.cred.credentials.CramMD5Credentials
> twisted.mail.imap4.PLAINCredentials
> twisted.mail.imap4.LOGINCredentials
>
> all seem to implement the same interface, yet there is no Interface defined
> for these objects.
>

It would be great if there were such an interface.

"But Kevin", you might be thinking, "They all implement
> twisted.cred.credentials.IUsernameHashedPassword or
> t.c.c.IUsernamePassword".  That's true, but they all have additional methods
> which make them useful for handling SASL authentication in various
> protocols.  And those methods aren't included in those interfaces.
>

Aaah, SASL.  There has been *quite* a bit of discussion of this, which
resulted in a branch that looked near completion but eventually stalled,
here:  http://twistedmatrix.com/trac/ticket/2015

I don't think that unifying this interface would *necessarily* require the
resolution of this ticket, but it would at least be useful to see where
things have been.

So, should there be an Interface which describes the interface that these
> objects implement?


Sounds good to me, but then, I haven't done a lot of work with SASL.


> And why are two of these in the IMAP package and the third in cred?  Why
> not in the same place?
>

LOGIN and PLAIN authentication methods were implemented specifically for
IMAP, since as with all things IMAP it had special requirements.  The
general idea of hashed passwords was around before that in cred, but as you
can see in the changeset that introduced it —
http://twistedmatrix.com/trac/changeset/8290 — something was apparently
(and, I suspect, naughtily) expecting to call moreChallenges and setResponse
on an IUsernameHashedPassword.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/5c8335e2/attachment.html>

From kevin.horn at gmail.com  Thu Jul 30 23:49:47 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 00:49:47 -0500
Subject: [Twisted-Python] Missing Interface?
In-Reply-To: <d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>
References: <562bcc10907302131u556ba250x684417e093208dc7@mail.gmail.com>
	<d9047f780907302223n4e35be6cof085fe5d1c59e77b@mail.gmail.com>
Message-ID: <562bcc10907302249x65c974f2xfa356cf44ff17665@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:23 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com>wrote:

> On Fri, Jul 31, 2009 at 12:31 AM, Kevin Horn <kevin.horn at gmail.com> wrote:
>
>> the following classes:
>>
>> twisted.cred.credentials.CramMD5Credentials
>> twisted.mail.imap4.PLAINCredentials
>> twisted.mail.imap4.LOGINCredentials
>>
>> all seem to implement the same interface, yet there is no Interface
>> defined for these objects.
>>
>
> It would be great if there were such an interface.
>

Seems pretty simple, since teh de facto interface is already there.  What
should such an interface be called?  Where should it live?


> "But Kevin", you might be thinking, "They all implement
>> twisted.cred.credentials.IUsernameHashedPassword or
>> t.c.c.IUsernamePassword".  That's true, but they all have additional methods
>> which make them useful for handling SASL authentication in various
>> protocols.  And those methods aren't included in those interfaces.
>>
>
> Aaah, SASL.  There has been *quite* a bit of discussion of this, which
> resulted in a branch that looked near completion but eventually stalled,
> here:  http://twistedmatrix.com/trac/ticket/2015
>
> I don't think that unifying this interface would *necessarily* require the
> resolution of this ticket, but it would at least be useful to see where
> things have been.
>

Great, I'll try to take a look at this.


>
> So, should there be an Interface which describes the interface that these
>> objects implement?
>
>
> Sounds good to me, but then, I haven't done a lot of work with SASL.
>
>
>> And why are two of these in the IMAP package and the third in cred?  Why
>> not in the same place?
>>
>
> LOGIN and PLAIN authentication methods were implemented specifically for
> IMAP, since as with all things IMAP it had special requirements.  The
> general idea of hashed passwords was around before that in cred, but as you
> can see in the changeset that introduced it —
> http://twistedmatrix.com/trac/changeset/8290 — something was apparently
> (and, I suspect, naughtily) expecting to call moreChallenges and setResponse
> on an IUsernameHashedPassword.
>
>
LOGIN I can understand, since it's basically IMAP-specific, but it seems to
me that PLAIN should be more general, since it's a SASL mechanism that's
used (or at least can be used) in several protocols.

It might be worth pointing out though, that something very similar to the
IMAP LOGIN mechanism is implemented in the Infotrope ACAP server (just about
he only open source ACAP server out there...something I'm trying to
remedy...which is how I got interested in all this in the first place) so
maybe LOGIN could be generalized as well.  Probably not necessary, though.

As for the changeset you referenced, it looks like the intent was to expand
the IUsernameHashedPassword interface, which I'm not sure is the right
approach.  Of course I'm not sure it's NOT the right approach, either.
Perhaps a new interface that inherits from IUsernameHashedPassword?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/f3ccda77/attachment.html>

From terry at jon.es  Fri Jul 31 08:07:44 2009
From: terry at jon.es (Terry Jones)
Date: Fri, 31 Jul 2009 16:07:44 +0200
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: Your message at 09:57:10 on Friday, 31 July 2009
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
Message-ID: <19058.64176.108008.963718@jon.es>

>>>>> "Michael" == Michael Hudson <micahel at gmail.com> writes:
Michael> The accompanying paper is here: http://mumak.net/stuff/twisted-intro.html

I agree, that's a really nicely done document.  It would be good to extend
it, moving into a description and explanation of deferreds.

Terry



From santiago.aguiar at gmail.com  Fri Jul 31 08:19:42 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Fri, 31 Jul 2009 11:19:42 -0300
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
Message-ID: <4A72FD7E.8010205@gmail.com>

Hi Jessica!

I'm quite a newbie at twisted yet, and a newcomer to the project, so I 
do think that twisted documentation is one of it's more problematic areas!.

My suggestion would be that more than *adding* documentation, I would 
suggest to first search-and-destroy deprecated documentation. For me, 
one of the most frustrating parts of using twisted was reading through 
the twisted core doc, trying to do things and failing, and then 
accessing #twisted and get people tell me thinks like 'oh, 
tap/tac/tml/mktap are no longer used', or things like that (I don't yet 
know which ones are supposed to be used and which don't).

I understand that *rewriting* outdated doc is a major task, that's why I 
just suggest deleting it ;) (maybe in a new Revised Twiste Doc section 
of the web site or the like), then it probably would be clearer where to 
start and what needs most work.

It could also be a good idea to try to make it more wiki-like at the 
beginning; I think there's quite a lot of people that would like to 
contribute with this, but having different documents/styles for 
different areas of the doc is not good, a wiki like doc might allow some 
people to work on giving a more cohesive look to the whole doc, and 
others to add the meat and bones, provide examples, etc, while allowing 
everyone to review it easily. Thinking about it, of course a doc on SVN 
would help in the same way ;).

Truth is that I really don't know which are twisted best practices at 
the time (what I do works, but I don't know if it's the best way to do 
it), and checking outdated doc just confuses things even more... better 
no doc at all.

I stop my suggestions here before someone yells me 'then do it!' :).

--
Santiago



From phil at bubblehouse.org  Fri Jul 31 08:34:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 10:34:32 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A72FD7E.8010205@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
Message-ID: <7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>

On Jul 31, 2009, at 10:19 AM, Santiago Aguiar wrote:
> It could also be a good idea to try to make it more wiki-like at the
> beginning; I think there's quite a lot of people that would like to
> contribute with this, but having different documents/styles for
> different areas of the doc is not good, a wiki like doc might allow  
> some
> people to work on giving a more cohesive look to the whole doc, and
> others to add the meat and bones, provide examples, etc, while  
> allowing
> everyone to review it easily. Thinking about it, of course a doc on  
> SVN
> would help in the same way ;).

I'd like to second this, for at least the third or fourth time over  
the last several years ;-)

To respond in advance to previous criticisms of the idea:

  * wiki syntax sucks
  * it doesn't have an acceptable form of version control
  * it's frustrating that it can't be easily bundled with
    a release tarball
  * the same info is on the mailing list, just use google
    to find it

All 100% true. Nevertheless, I say wiki. It would provide the least  
complicated route for new users to document things they discover  
during the learning process, which is *exactly* the phase that is so  
hard for the more experienced users to properly explain.

Hopefully over time the various technical writers who volunteer often  
could rewrite this content into the formal collection that is  
distributed with Twisted proper, but in the meantime, a community- 
edited wiki would also provide another window into the community for  
new developers.

I also would recommend MediaWiki. Yes, less than perfect, not as good  
as this, that, or the other wiki. In the interest of keeping the bar  
for entry low, however, we would be harnessing a familiarity with  
MediaWiki provided by exposure to Wikipedia.

Pragmatism, not idealism, and all that...

-phil



From kevin.horn at gmail.com  Fri Jul 31 09:40:13 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 10:40:13 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
Message-ID: <562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>

On Fri, Jul 31, 2009 at 9:34 AM, Phil Christensen <phil at bubblehouse.org>wrote:

> On Jul 31, 2009, at 10:19 AM, Santiago Aguiar wrote:
> > It could also be a good idea to try to make it more wiki-like at the
> > beginning; I think there's quite a lot of people that would like to
> > contribute with this, but having different documents/styles for
> > different areas of the doc is not good, a wiki like doc might allow
> > some
> > people to work on giving a more cohesive look to the whole doc, and
> > others to add the meat and bones, provide examples, etc, while
> > allowing
> > everyone to review it easily. Thinking about it, of course a doc on
> > SVN
> > would help in the same way ;).
>
> I'd like to second this, for at least the third or fourth time over
> the last several years ;-)
>
> To respond in advance to previous criticisms of the idea:
>
>  * wiki syntax sucks
>  * it doesn't have an acceptable form of version control
>  * it's frustrating that it can't be easily bundled with
>    a release tarball
>  * the same info is on the mailing list, just use google
>    to find it
>
> All 100% true. Nevertheless, I say wiki. It would provide the least
> complicated route for new users to document things they discover
> during the learning process, which is *exactly* the phase that is so
> hard for the more experienced users to properly explain.
>
> Hopefully over time the various technical writers who volunteer often
> could rewrite this content into the formal collection that is
> distributed with Twisted proper, but in the meantime, a community-
> edited wiki would also provide another window into the community for
> new developers.
>
> I also would recommend MediaWiki. Yes, less than perfect, not as good
> as this, that, or the other wiki. In the interest of keeping the bar
> for entry low, however, we would be harnessing a familiarity with
> MediaWiki provided by exposure to Wikipedia.
>
> Pragmatism, not idealism, and all that...
>
> -phil
>

Well, if there *were* to be a change in the documentation system used, I
would push for moving to Sphinx, rather than a wiki.

* it's rapidly becoming a "standard" for docs in the Python world
* it has lots of neat  features
* it can be version controlled
* multiple output formats (html, chm, Latex(and therefore PDF), etc.)
* I just like it :)

Just sayin'

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/84214411/attachment.html>

From dave at davebritton.com  Fri Jul 31 09:48:49 2009
From: dave at davebritton.com (Dave Britton)
Date: Fri, 31 Jul 2009 11:48:49 -0400
Subject: [Twisted-Python] Questions about adding documentation
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com><20090731033535.11822.308617775.divmod.quotient.831@henry.divmod.com>
	<562bcc10907302211q4ec0f670kfa1820f398061eea@mail.gmail.com>
Message-ID: <18fe01ca11f6$66023c50$0500a8c0@yoda>


----- Original Message -----
From: Kevin Horn
"Sometimes I think what is needed is someone who knows basically nothing
about Twisted to go about learning it...and then writing down how they did
it."

I'm trying to do this, by keeping notes as I learn twisted to build a custom
email system. It's hard to admit how dumb I feel sometimes though.
Frequently what happens is I get stuck when something doesn't work, and
while searching through the docs I stumble upon something I already read
earlier and thought I understood, and in re-reading it I get an insight or
better understanding of what the doc means now that I can connect it to a
specific problem and I have more experience. That's not usually how I use or
experience documentation. Generally I use documentation to first find out
what the tool is able to do, what it's supposed to be good for and good at,
and then when I want to exploit one of those things I drill down to the
specific instructions for it. That's hard to do as the docs are now, proably
because the specific instructions depend so much on other specific
instructions you may not know about yet.

-Dave





From rlotun at gmail.com  Fri Jul 31 09:51:05 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 31 Jul 2009 16:51:05 +0100
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
Message-ID: <95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>

Hi All,

> Well, if there *were* to be a change in the documentation system used, I
> would push for moving to Sphinx, rather than a wiki.
>
> * it's rapidly becoming a "standard" for docs in the Python world
> * it has lots of neat  features
> * it can be version controlled
> * multiple output formats (html, chm, Latex(and therefore PDF), etc.)
> * I just like it :)

Rather than change the documentation system entirely, who don't we
just create a new resource for Twisted documentation - a Twisted
Documentation Wiki. At the very least it can be a repository of
various tips and tricks we happen to find, and maybe it can even be a
staging ground for documentation that makes it into Twisted proper.

Reza


-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From kevin.horn at gmail.com  Fri Jul 31 10:12:33 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 11:12:33 -0500
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <19058.64176.108008.963718@jon.es>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
	<aa0dfd860907301457w636accb2q885f10d28f859251@mail.gmail.com>
	<19058.64176.108008.963718@jon.es>
Message-ID: <562bcc10907310912j103db2d5yb3a4876c28127bf5@mail.gmail.com>

On Fri, Jul 31, 2009 at 9:07 AM, Terry Jones <terry at jon.es> wrote:

> >>>>> "Michael" == Michael Hudson <micahel at gmail.com> writes:
> Michael> The accompanying paper is here:
> http://mumak.net/stuff/twisted-intro.html
>
> I agree, that's a really nicely done document.  It would be good to extend
> it, moving into a description and explanation of deferreds.
>
> Terry
>
>
Yes, indeed, a very nice paper.

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/59c09025/attachment.html>

From santiago.aguiar at gmail.com  Fri Jul 31 10:14:51 2009
From: santiago.aguiar at gmail.com (Santiago Aguiar)
Date: Fri, 31 Jul 2009 13:14:51 -0300
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>	<4A72FD7E.8010205@gmail.com>	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
Message-ID: <4A73187B.3070400@gmail.com>

Reza Lotun wrote:
> Rather than change the documentation system entirely, who don't we
> just create a new resource for Twisted documentation - a Twisted
> Documentation Wiki. At the very least it can be a repository of
> various tips and tricks we happen to find, and maybe it can even be a
> staging ground for documentation that makes it into Twisted proper.
>   
Even if I re-suggested the wiki based documentation, I think it's 
important to be extra careful on how it's used. One thing I personally 
hate is projects whose documentation is basically wiki-based, and what 
you end having is a disconnected set of tips, many out of date, of how 
to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not 
'Documentation' :).

As you say, I think that the wiki could be useful as a staging ground to 
build a formal documentation, but it shouldn't be even suggested for new 
users, since what they will probably find are many unfinished ideas.

Alternatively, a separate doc repo with sphinx based doc could be built 
so that it will allow for collaborative development making clear that is 
a work in progress and a product with 'releases'. I say a different repo 
to avoid having to give commit access to code for people who are working 
on doc,  maybe same repo with different permissions would be better. And 
I suggest sphinx to a) start from scratch and add existing doc as we see 
it's relevant, b) have a more flexible base than HTML docs, and for the 
reasons mentioned by Kevin (plus I want to learn it :P).

--
Santiago.



From rlotun at gmail.com  Fri Jul 31 10:32:29 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Fri, 31 Jul 2009 17:32:29 +0100
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A73187B.3070400@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
Message-ID: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>

> Even if I re-suggested the wiki based documentation, I think it's
> important to be extra careful on how it's used. One thing I personally
> hate is projects whose documentation is basically wiki-based, and what
> you end having is a disconnected set of tips, many out of date, of how
> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
> 'Documentation' :).

I agree - the wiki shouldn't *replace* the documentation, but the
reality is I have loads of bookmarks of blog posts and discussions on
the mailing list, and it'd be nice if I could to go one place to find
all that type of info. A "recipe" or "cookbook" wiki might be all we
need, with the ability to comment on each. The Activestate Python
Cookbook is kinda what I'm thinking about:
http://code.activestate.com/recipes/langs/python/

> Alternatively, a separate doc repo with sphinx based doc could be built
> so that it will allow for collaborative development making clear that is
> a work in progress and a product with 'releases'. I say a different repo
> to avoid having to give commit access to code for people who are working
> on doc,  maybe same repo with different permissions would be better. And
> I suggest sphinx to a) start from scratch and add existing doc as we see
> it's relevant, b) have a more flexible base than HTML docs, and for the
> reasons mentioned by Kevin (plus I want to learn it :P).

I haven't yet looked at lore or sphinx, but is there a way to support
sphinx via lore?

Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From phil at bubblehouse.org  Fri Jul 31 10:52:52 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 12:52:52 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
Message-ID: <819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>

On Jul 31, 2009, at 12:32 PM, Reza Lotun wrote:
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I  
>> personally
>> hate is projects whose documentation is basically wiki-based, and  
>> what
>> you end having is a disconnected set of tips, many out of date, of  
>> how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but  
>> not
>> 'Documentation' :).
>
> I agree - the wiki shouldn't *replace* the documentation, but the
> reality is I have loads of bookmarks of blog posts and discussions on
> the mailing list, and it'd be nice if I could to go one place to find
> all that type of info. A "recipe" or "cookbook" wiki might be all we
> need, with the ability to comment on each. The Activestate Python
> Cookbook is kinda what I'm thinking about:
> http://code.activestate.com/recipes/langs/python/

I agree with all of the above. A wiki is nice when there is no  
suitable formal documentation available for a topic. I think I may  
have used the aphorism once before, "documentation is like sex, when  
it's good, it's great, when it's bad it's still better than  
nothing." (no offense intended to any with delicate sensibilities,  
btw ;-)

My only question about Sphinx, isn't it just for API docs? Also, can  
it interpret Zope interfaces like pydoctor can?

Personally I'm pretty happy with the API docs (although there's always  
room for improvement in the actual docstrings), I think if there's a  
documentation need that's more dire, it's the long-form instructional  
kind.

I just don't want to sidetrack *that* discussion by getting into API  
documentation concerns.

-phil



From kevin.horn at gmail.com  Fri Jul 31 10:55:08 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 11:55:08 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A73187B.3070400@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
Message-ID: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:14 AM, Santiago Aguiar <santiago.aguiar at gmail.com
> wrote:

> Reza Lotun wrote:
> > Rather than change the documentation system entirely, who don't we
> > just create a new resource for Twisted documentation - a Twisted
> > Documentation Wiki. At the very least it can be a repository of
> > various tips and tricks we happen to find, and maybe it can even be a
> > staging ground for documentation that makes it into Twisted proper.
> >
> Even if I re-suggested the wiki based documentation, I think it's
> important to be extra careful on how it's used. One thing I personally
> hate is projects whose documentation is basically wiki-based, and what
> you end having is a disconnected set of tips, many out of date, of how
> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
> 'Documentation' :).


In my experience, this what happens to every project that a) uses a wiki for
core documentation and b) has more than one person editing the wiki.

>
>
> As you say, I think that the wiki could be useful as a staging ground to
> build a formal documentation, but it shouldn't be even suggested for new
> users, since what they will probably find are many unfinished ideas.
>
> Alternatively, a separate doc repo with sphinx based doc could be built
> so that it will allow for collaborative development making clear that is
> a work in progress and a product with 'releases'. I say a different repo
> to avoid having to give commit access to code for people who are working
> on doc,  maybe same repo with different permissions would be better. And
> I suggest sphinx to a) start from scratch and add existing doc as we see
> it's relevant, b) have a more flexible base than HTML docs, and for the
> reasons mentioned by Kevin (plus I want to learn it :P).
>
> --
> Santiago.
>
>
I'd love to see a documentation "reboot" using Sphinx, but not if it's going
to be a half-baked, never-finished project.

Since Jessica started this thread, and is the only person (so far) who has
given any sort of commitment to actually working on new/revised docs, I'd
really like to hear her opinion.

Jessica?  You still out there?  Hope we haven't scared you off...

I'd also be interested in hearing the opinions of some of the core Twisted
guys on the various things we've been talking about here.  What do you guys
think about using a different docs system than what is being used now?  If
you guys are all dead set against it, there's not much point hashing out the
details...

Also, what do the Twisted core devs think about having a secondary
wiki/cookbook thingy outside of the core docs?

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/0f6218ba/attachment.html>

From kevin.horn at gmail.com  Fri Jul 31 11:11:25 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:11:25 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
Message-ID: <562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:52 AM, Phil Christensen <phil at bubblehouse.org>wrote:

>
> My only question about Sphinx, isn't it just for API docs? Also, can
> it interpret Zope interfaces like pydoctor can?
>

Sphinx is great for writing all sorts of docs.  At its core, it's basically
a system for gluing together a bunch of RestructiredText documents and
automatically cross-linking them, building an index, a javascript-based
search capability, handling tables of contents, and outputing the results in
various formats.

But then it's extensible...so you can write plugins for it.  One of the
earliest (and included with the base package) is the "autodoc" extension
which makes generating nice clean API docs from your docstrings.  What it
does _not_ do is process all those epydoc bits that are in Twisted's
docstrings, though you might be able to write an extension for that.  It
expects docstrings to be in RestructuredText.

AFAIK Sphinx does not have support for Zope interfaces, but I haven't looked
in a while, and I seem to remember that someone was working on adding
it...though I may be making that up.

At any rate, I think using Sphinx for Twisted's API docs (at this juncture,
anyway) would be a bad idea.  But Sphinx excels at the kind of "long-form,
instructional" docs you mention below.  I use it for all my PHP projects
(which of course, the autodoc extension doesn't work on), and I'm really
happy with it.


>
> Personally I'm pretty happy with the API docs (although there's always
> room for improvement in the actual docstrings), I think if there's a
> documentation need that's more dire, it's the long-form instructional
> kind.
>

Agreed.


>
> I just don't want to sidetrack *that* discussion by getting into API
> documentation concerns.


Double Agreed.


>
>
> -phil
>

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/d915c7a1/attachment.html>

From exarkun at divmod.com  Fri Jul 31 11:11:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 31 Jul 2009 13:11:36 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
Message-ID: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>

On Fri, 31 Jul 2009 11:55:08 -0500, Kevin Horn <kevin.horn at gmail.com> wrote:
> [snip]
>
>I'd love to see a documentation "reboot" using Sphinx, but not if it's going
>to be a half-baked, never-finished project.
>
> [snip]
>
>I'd also be interested in hearing the opinions of some of the core Twisted
>guys on the various things we've been talking about here.  What do you guys
>think about using a different docs system than what is being used now?  If
>you guys are all dead set against it, there's not much point hashing out the
>details...

I don't find that people trying to use Twisted complain about the
presentation of the documentation.  I find that they complain about
its content.

So, I think that it's the content that needs to be addressed.  I don't
*think* that switching to Sphinx (or anything else) is going to make any
different to the content of the current documentation.  One might argue
that Lore is a significant barrier to entry for new contributions to the
documentation, but you'd have to try pretty hard to convince me.  Pretty
much anyone can write some simple (Lore x)html.  And if they can't, then
there are other people willing to translate plain text into Lore input
documents.

>Also, what do the Twisted core devs think about having a secondary
>wiki/cookbook thingy outside of the core docs?

As a staging area for development of future core docs, I think I would
recommend using a version control system (perhaps a distributed one),
not a wiki.

As something intended to be user-facing, I don't think it's a great idea.
Of course, there *is* a wiki hosted on the website already...  And it has
some documentation on it...  So what's being proposed, exactly? :)

Obviously I'm speaking for myself, not for all the other people who have
contributed to Twisted.

Jean-Paul



From jessica.mckellar at gmail.com  Fri Jul 31 11:16:39 2009
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Fri, 31 Jul 2009 13:16:39 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
Message-ID: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>

I am not scared off. In fact, I'm updating the
wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
right now.

I think adding content to and restructuring the howtos gives me a full plate
already, and to be honest I'm more interested in the content than the
presentation. People who have more experience with the successes and
failures of the various ways to organize project content online can make
that decision and I'd happily help move content over to another format
should that be necessary.

Thanks for all the help and feedback, everyone.

-Jessica

On Fri, Jul 31, 2009 at 12:55 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Fri, Jul 31, 2009 at 11:14 AM, Santiago Aguiar <
> santiago.aguiar at gmail.com> wrote:
>
>> Reza Lotun wrote:
>> > Rather than change the documentation system entirely, who don't we
>> > just create a new resource for Twisted documentation - a Twisted
>> > Documentation Wiki. At the very least it can be a repository of
>> > various tips and tricks we happen to find, and maybe it can even be a
>> > staging ground for documentation that makes it into Twisted proper.
>> >
>> Even if I re-suggested the wiki based documentation, I think it's
>> important to be extra careful on how it's used. One thing I personally
>> hate is projects whose documentation is basically wiki-based, and what
>> you end having is a disconnected set of tips, many out of date, of how
>> to do this and that. It could be OK it it's labeled 'Tipi-wiki' but not
>> 'Documentation' :).
>
>
> In my experience, this what happens to every project that a) uses a wiki
> for core documentation and b) has more than one person editing the wiki.
>
>>
>>
>> As you say, I think that the wiki could be useful as a staging ground to
>> build a formal documentation, but it shouldn't be even suggested for new
>> users, since what they will probably find are many unfinished ideas.
>>
>> Alternatively, a separate doc repo with sphinx based doc could be built
>> so that it will allow for collaborative development making clear that is
>> a work in progress and a product with 'releases'. I say a different repo
>> to avoid having to give commit access to code for people who are working
>> on doc,  maybe same repo with different permissions would be better. And
>> I suggest sphinx to a) start from scratch and add existing doc as we see
>> it's relevant, b) have a more flexible base than HTML docs, and for the
>> reasons mentioned by Kevin (plus I want to learn it :P).
>>
>> --
>> Santiago.
>>
>>
> I'd love to see a documentation "reboot" using Sphinx, but not if it's
> going to be a half-baked, never-finished project.
>
> Since Jessica started this thread, and is the only person (so far) who has
> given any sort of commitment to actually working on new/revised docs, I'd
> really like to hear her opinion.
>
> Jessica?  You still out there?  Hope we haven't scared you off...
>
> I'd also be interested in hearing the opinions of some of the core Twisted
> guys on the various things we've been talking about here.  What do you guys
> think about using a different docs system than what is being used now?  If
> you guys are all dead set against it, there's not much point hashing out the
> details...
>
> Also, what do the Twisted core devs think about having a secondary
> wiki/cookbook thingy outside of the core docs?
>
> Kevin Horn
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/6b443815/attachment.html>

From phil at bubblehouse.org  Fri Jul 31 11:22:36 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 13:22:36 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
References: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
Message-ID: <75FF110B-18AE-4C34-B61B-AB6E9EA4F5F8@bubblehouse.org>

On Jul 31, 2009, at 1:11 PM, Jean-Paul Calderone wrote:
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.

What I was suggesting originally was that a wiki would be a staging  
ground for those core docs. IMO, traditional version control is not  
generally well-suited for collaborative document development.

I guess what I'm thinking is, no one likes writing docs, so when we  
have to good fortune to encounter someone who does, let's make it as  
easy as possible.

> As something intended to be user-facing, I don't think it's a great  
> idea.
> Of course, there *is* a wiki hosted on the website already...  And  
> it has
> some documentation on it...  So what's being proposed, exactly? :)

True. I guess there's only two considerations.

  1. Using the current Trac installation for a user-edited wiki might
     convey that the contents are endorsed by Twisted proper.

  2. Although I've become fairly used to it, Trac's wiki isn't the
     greatest, and more importantly, Trac itself sometimes seems to
     be held together with bubble gum and scotch tape.

-phil




From kevin.horn at gmail.com  Fri Jul 31 11:34:22 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:34:22 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
Message-ID: <562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:11 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Fri, 31 Jul 2009 11:55:08 -0500, Kevin Horn <kevin.horn at gmail.com>
> wrote:
> > [snip]
> >
> >I'd love to see a documentation "reboot" using Sphinx, but not if it's
> going
> >to be a half-baked, never-finished project.
> >
> > [snip]
> >
> >I'd also be interested in hearing the opinions of some of the core Twisted
> >guys on the various things we've been talking about here.  What do you
> guys
> >think about using a different docs system than what is being used now?  If
> >you guys are all dead set against it, there's not much point hashing out
> the
> >details...
>
> I don't find that people trying to use Twisted complain about the
> presentation of the documentation.  I find that they complain about
> its content.
>

True enough.  And in my case, at least, navigation.


>
> So, I think that it's the content that needs to be addressed.  I don't
> *think* that switching to Sphinx (or anything else) is going to make any
> different to the content of the current documentation.  One might argue
> that Lore is a significant barrier to entry for new contributions to the
> documentation, but you'd have to try pretty hard to convince me.  Pretty
> much anyone can write some simple (Lore x)html.  And if they can't, then
> there are other people willing to translate plain text into Lore input
> documents.
>

I don't think using Lore is a problem particularly...but it need to be
documented more clearly, and all in one place.  Right now, there's stuff on
the tracwiki, in the main docs, on the mailing list, etc.

Particularly, the answers to the questions:
- How do I build the documentation using Lore?
- What is the Lore xhtml syntax, and how should I use it?
- What is the process for making a documentation contribution?

Please note, that I was originally suggesting Sphinx primarily as an
alternative to a wiki-based system, rather than as a replacement for
Lore...but the conversation kind of mutated. :)



> >Also, what do the Twisted core devs think about having a secondary
> >wiki/cookbook thingy outside of the core docs?
>
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.
>

Agreed, wiki = yuck (for this).  Even as a "staging ground".

IMO trac-wiki is really only suited for "marketing" type content.


> As something intended to be user-facing, I don't think it's a great idea.
> Of course, there *is* a wiki hosted on the website already...  And it has
> some documentation on it...  So what's being proposed, exactly? :)
>
> Obviously I'm speaking for myself, not for all the other people who have
> contributed to Twisted.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/528ff578/attachment.html>

From kevin.horn at gmail.com  Fri Jul 31 11:39:00 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 12:39:00 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<95bb10690907310932pa2af18fl74967b540c9b92d2@mail.gmail.com>
	<819645D3-6F82-44A0-B6EE-0D22D2CAB16C@bubblehouse.org>
	<562bcc10907311011l7989ae67jc17d85d78a3d7256@mail.gmail.com>
Message-ID: <562bcc10907311039m7ae99bd9la281ef5bbc119b4a@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:11 PM, Kevin Horn <kevin.horn at gmail.com> wrote:

> On Fri, Jul 31, 2009 at 11:52 AM, Phil Christensen <phil at bubblehouse.org>wrote:
>
>>
>> My only question about Sphinx, isn't it just for API docs? Also, can
>> it interpret Zope interfaces like pydoctor can?
>>
>
> AFAIK Sphinx does not have support for Zope interfaces, but I haven't
> looked in a while, and I seem to remember that someone was working on adding
> it...though I may be making that up.
>

OK, having Googled around, it seems I was *not* making this up.  There is
some support for Zope interfaces in Sphinx, though it looks pretty minimal
at the moment.  Just, you know, in case anyone was interested. :)

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/62d69258/attachment.html>

From phil at bubblehouse.org  Fri Jul 31 11:57:32 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 13:57:32 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
Message-ID: <6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>


On Jul 31, 2009, at 1:34 PM, Kevin Horn wrote:
> >Also, what do the Twisted core devs think about having a secondary
> >wiki/cookbook thingy outside of the core docs?
>
> As a staging area for development of future core docs, I think I would
> recommend using a version control system (perhaps a distributed one),
> not a wiki.
>
> Agreed, wiki = yuck (for this).  Even as a "staging ground".

Okay, tell me again what exactly the problem is with a wiki?

I feel like the same thing happens every time we discuss  
documentation. Someone makes a recommendation to do it the easy way,  
and someone else dismisses any solution that doesn't satisfy their  
programmer's OCD.

Yes, I'd love to see version controlled XML documentation that adheres  
to a common writing style that is enforced across the board, but this  
talk has been happening for *YEARS* and there has been little  
improvement of significance (I have to emphasize that I understand a  
number of people have worked very hard on this, and I don't mean to  
denigrate their contributions).

People keep telling me wikis are bad, but I'm still not getting the  
'why' -- I just hear "wikis are bad for documentation" repeatedly  
presented as a fact.

They do seem to work reasonably well for scores of other projects.

PRAGMATISM!!! ;-)

-phil



From kevin.horn at gmail.com  Fri Jul 31 12:00:30 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 13:00:30 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
Message-ID: <562bcc10907311100g2c848599v5a086577fdcf12cd@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:16 PM, Jessica McKellar <
jessica.mckellar at gmail.com> wrote:

> I am not scared off. In fact, I'm updating the
> wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
> right now.
>

Great!  I think that this is a critical first step.


> I think adding content to and restructuring the howtos gives me a full
> plate already, and to be honest I'm more interested in the content than the
> presentation.


Fantastic.  Content is definitely more important, and as this thread proves,
its easy to get bogged down in the "how" rather than the "what".


> People who have more experience with the successes and failures of the
> various ways to organize project content online can make that decision and
> I'd happily help move content over to another format should that be
> necessary.
>
> Thanks for all the help and feedback, everyone.
>
> -Jessica


Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/b651749d/attachment.html>

From kevin.horn at gmail.com  Fri Jul 31 12:15:01 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Fri, 31 Jul 2009 13:15:01 -0500
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
	<6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
Message-ID: <562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>

On Fri, Jul 31, 2009 at 12:57 PM, Phil Christensen <phil at bubblehouse.org>wrote:

>
> On Jul 31, 2009, at 1:34 PM, Kevin Horn wrote:
> > >Also, what do the Twisted core devs think about having a secondary
> > >wiki/cookbook thingy outside of the core docs?
> >
> > As a staging area for development of future core docs, I think I would
> > recommend using a version control system (perhaps a distributed one),
> > not a wiki.
> >
> > Agreed, wiki = yuck (for this).  Even as a "staging ground".
>
> Okay, tell me again what exactly the problem is with a wiki?
>
> I feel like the same thing happens every time we discuss
> documentation. Someone makes a recommendation to do it the easy way,
> and someone else dismisses any solution that doesn't satisfy their
> programmer's OCD.
>
> Yes, I'd love to see version controlled XML documentation that adheres
> to a common writing style that is enforced across the board, but this
> talk has been happening for *YEARS* and there has been little
> improvement of significance (I have to emphasize that I understand a
> number of people have worked very hard on this, and I don't mean to
> denigrate their contributions).
>
> People keep telling me wikis are bad, but I'm still not getting the
> 'why' -- I just hear "wikis are bad for documentation" repeatedly
> presented as a fact.
>
> They do seem to work reasonably well for scores of other projects.
>
> PRAGMATISM!!! ;-)
>
> -phil
>

Well, pragmatism is my basic reason for not liking wikis for docs. :)

For me, it boils down to every time I've worked on or with a project that
used wikis for docs (assuming that the project is of at least moderate size
and has more than a couple of editors) that documentation has been
terrible.  It's ended up as a disjointed mess, that's hard to navigate, and
has a bajillion half-completed thoughts, and lots of outdated cruft.

Of course, some could say the same of (at least parts of) the current
Twisted documentation. ;)

It's not that there's anything wrong with wiki's per se, it's just that they
encourage "bad habits".  If there were a solid editorial process in place,
where someone was specifically responsible for reviewing, editing,
splitting, merging, and correcting documents, then a wiki could probably
work.  But I think it's easier to get coherent docs using tools that
encourage "good habits".

Obviously my definitions of "good habits" and "bad habits" are pretty
vague...and not entirely spelled out even in my own mind.  Er, sorry about
that...

Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/8b6691cb/attachment.html>

From cyli.ying.li at gmail.com  Fri Jul 31 13:37:00 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Fri, 31 Jul 2009 15:37:00 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <4A72FD7E.8010205@gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
Message-ID: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>

On Fri, Jul 31, 2009 at 10:19 AM, Santiago
Aguiar<santiago.aguiar at gmail.com> wrote:
> My suggestion would be that more than *adding* documentation, I would
> suggest to first search-and-destroy deprecated documentation. For me,
> one of the most frustrating parts of using twisted was reading through
> the twisted core doc, trying to do things and failing, and then
> accessing #twisted and get people tell me thinks like 'oh,
> tap/tac/tml/mktap are no longer used', or things like that (I don't yet
> know which ones are supposed to be used and which don't).


Something that I find irritating about a lot of documentation that I
read is that it is not dated.  All the twisted docs are labeled with a
version (currently 8.2.0) but this is meaningless to me.  I think a
big improvement would be putting in a small bit of context around the
documentation , such as:

* when the howto/tutorial was last updated
* what version (of deferreds/imap/whatever the howto/tutorial is
about) the howto/tutorial was written for

What would be even more useful, although it would also be a lot more
work, is to perhaps link to a diff between the code as it is now and
as it was when the tutorial was written.  Or just a changelog.

Also, I oppose deleting outdated documentation outright, as I think
limited information is better than none.  However, I think it should
be clearly marked as such, so readers understand that the doc may not
give them correct instructions.

(This does not apply to the API docs as since the API docs are
automatically generated, they should always current given the Twisted
coding standards.)



From phil at bubblehouse.org  Fri Jul 31 14:01:03 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Fri, 31 Jul 2009 16:01:03 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>
References: <562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<20090731171136.11822.897308352.divmod.quotient.1029@henry.divmod.com>
	<562bcc10907311034n2f60a50bg86a7ac240c69cb7d@mail.gmail.com>
	<6D359AC6-235D-4E8B-9797-1C8263C05A69@bubblehouse.org>
	<562bcc10907311115x13a6fff0pbf4c91ef4788e5eb@mail.gmail.com>
Message-ID: <5224CFB1-7876-4D1F-942D-376244DA5DD4@bubblehouse.org>

On Jul 31, 2009, at 2:15 PM, Kevin Horn wrote:
> Well, pragmatism is my basic reason for not liking wikis for docs. :)
>
> For me, it boils down to every time I've worked on or with a project  
> that used wikis for docs (assuming that the project is of at least  
> moderate size and has more than a couple of editors) that  
> documentation has been terrible.  It's ended up as a disjointed  
> mess, that's hard to navigate, and has a bajillion half-completed  
> thoughts, and lots of outdated cruft.
>
> Of course, some could say the same of (at least parts of) the  
> current Twisted documentation. ;)

Indeed; I wouldn't use those particular words because of their  
pejorative qualities, but I think the end result is that way because  
of the level of interest in maintaining documentation for a particular  
project. That's a different issue, but it is the reason why I'd like  
the documentation process to be easy for 'regular developers' (e.g.,  
not the proto-deities that make up the core devs ;-) to contribute to.

> It's not that there's anything wrong with wiki's per se, it's just  
> that they encourage "bad habits".  If there were a solid editorial  
> process in place, where someone was specifically responsible for  
> reviewing, editing, splitting, merging, and correcting documents,  
> then a wiki could probably work.  But I think it's easier to get  
> coherent docs using tools that encourage "good habits".
>
> Obviously my definitions of "good habits" and "bad habits" are  
> pretty vague...and not entirely spelled out even in my own mind.   
> Er, sorry about that...

Well, honestly, I don't disagree with you at all. A good set of  
documentation requires a great deal of work, and the amount of  
rewriting and fact-checking required is proportional to the amount of  
development going on. Twisted development has slowed somewhat over the  
years in a few areas, but it still moves quite quickly in others.

I don't see any documentation system making this go away. It will  
always have to be edited and revised, and it will often be out of date.

I think the issue is one of not 'scaring away' potential writers with  
a cumbersome process. Correct me if I'm wrong, but the current process  
for writing Twisted documentation is as follows (at least for people  
without commit access):

  1. check out a directory of Lore XHTML files
  2. make my changes or create a new file, making sure not
     to work against the sparsely documented schema ;-)
  3. generate a patch
  4. create a ticket, attach the patch
  5. bug someone on #twisted or the mailing list to do a review
  6. wait some unspecified amount of time
  7. code is merged into trunk
  8. wait for the live docs to be regenerated

Compared to a wiki:

  1. create an account (let's assume it's email-verified)
  2. write or edit some docs
  3. see your docs live immediately

Which do you think is going to be a more compelling process for people  
to get involved with? The first process is straight from the software  
development playbook, so it seems like a good idea, but I don't agree  
with the need for the same regimented process to exist w.r.t.  
documentation, especially when we are in such dire straights in that  
regard.

I'm not really married to the idea of a wiki per se, it's just that it  
seems to be the closest thing that provides contributors a low bar for  
entry and instant gratification by seeing their work online (and on a  
list of recent changes). Plus, it addresses a concern Ying Li just  
posted as I was writing this: you automatically get revisions, last- 
modified dates, and diffs of those revisions.

Yes, some of this documentation will not be of the quality we would  
like it to be. But it will still exist, which is a hell of a lot  
better than nothing. Plus, it gives the technical writers we  
occasionally see interest from some source material to work with in  
the first place, which has got to be helpful towards the ultimate goal  
of formally written core documentation.

-phil



From listsin at integrateddevcorp.com  Fri Jul 31 14:04:18 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 16:04:18 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
Message-ID: <4C3E789F-A649-43E8-9C2A-42B00286625D@integrateddevcorp.com>


On Jul 31, 2009, at 3:37 PM, Ying Li wrote:

> On Fri, Jul 31, 2009 at 10:19 AM, Santiago
> Aguiar<santiago.aguiar at gmail.com> wrote:
>> My suggestion would be that more than *adding* documentation, I would
>> suggest to first search-and-destroy deprecated documentation. For me,
>> one of the most frustrating parts of using twisted was reading  
>> through
>> the twisted core doc, trying to do things and failing, and then
>> accessing #twisted and get people tell me thinks like 'oh,
>> tap/tac/tml/mktap are no longer used', or things like that (I don't  
>> yet
>> know which ones are supposed to be used and which don't).
>
>
> Something that I find irritating about a lot of documentation that I
> read is that it is not dated.  All the twisted docs are labeled with a
> version (currently 8.2.0) but this is meaningless to me.  I think a
> big improvement would be putting in a small bit of context around the
> documentation , such as:
>
> * when the howto/tutorial was last updated
> * what version (of deferreds/imap/whatever the howto/tutorial is
> about) the howto/tutorial was written for

That is one of my pet peeves about project documents of any type.    
Tutorials, and examples especially.  There's nothing more frustrating  
than getting 1/2 way through a tutorial, only to realize that the rest  
of it is just not going to work with the current version and that all  
that effort was wasted because that's not how it's done any more.

If it's not dated, and perhaps tagged with the first version with  
which it was released, and the most recent version at which it was  
modified, it's impossible to figure out what's current, relevent, and  
likely to actually work with the current release.

S




From lvh at laurensvh.be  Fri Jul 31 14:20:42 2009
From: lvh at laurensvh.be (Laurens Van Houtven)
Date: Fri, 31 Jul 2009 22:20:42 +0200
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
	<cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
Message-ID: <cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>

Also, regarding the message classes at every level: does this include
the top level? I thought the top level (eg most abstracted) would
contain a number of callbacks, such as:

    positionReceived(self, latitude, longitude)
    positionErrorReceived(self, hdop, vdop, pdop)
    altitudeReceived(self, altitude)
    altitudeErrorReceived(self, ...)

Et cetera. A sentence at this level seems a bit superfluous, but I can
see it being somewhat useful internally.

Laurens



From glyph at twistedmatrix.com  Fri Jul 31 14:23:49 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 16:23:49 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
Message-ID: <d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>

On Fri, Jul 31, 2009 at 1:16 PM, Jessica McKellar <
jessica.mckellar at gmail.com> wrote:

> I am not scared off. In fact, I'm updating the
> wiki/ContributingToTwistedLabs and related how-to-edit-documentation pages
> right now.
>

I see the edits in the timeline.  They look great!  Thanks! :-D

Do you have any ideas for improving the front page as well?  I think the
random-list-of-links approach to its information architecture hasn't been
terribly effective.

I think adding content to and restructuring the howtos gives me a full plate
> already, and to be honest I'm more interested in the content than the
> presentation.


This is good to hear.  I think it should definitely be our first priority.

Thanks for all the help and feedback, everyone.
>

Please don't hesitate to ask for any other help or feedback you might need.

People who have more experience with the successes and failures of the
> various ways to organize project content online can make that decision (...)


I don't want to stifle the possible discussion of using a different system,
but for those of you interested in switching to Sphinx or something else,
there are several things you need to address:

First and foremost, you need to make a commitment to *maintaining* the
documentation infrastructure.  This includes teaching other folks how to use
it.

Second, you need to submit a complete proposal.  This means we need a clear
enumeration of what benefits the different documentation technology will
have; this needs to be written up in one place so that we can evaluate it
and discuss it without chasing down a million little email threads or ticket
comments.

Such a proposal also needs to address integration of automated testing and
automated doc-building with the examples.  You'll need to set up a builder
that will replace our current documentation builder.  You'll need to update
all the relevant wiki pages.

Third, you need to address the transition plan.  Just translating all the
documentation by hand is a possibility, but it has potential problems.  What
happens if we discover a problem with the new tool?  How do we roll back?

and I'd happily help move content over to another format should that be
> necessary.


Lucky for you, Jessica appears to have volunteered to do this for you :-).
(You might want to confirm that first, though.)

I certainly wouldn't mind switching to a tool that has lots of fancy
features that lore lacks, but a hit-and-run approach where we just switch
tools in the hopes that it will make something better may leave us in a
worse situation than we already are.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/4b1f3f28/attachment.html>

From glyph at twistedmatrix.com  Fri Jul 31 14:28:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 16:28:22 -0400
Subject: [Twisted-Python] twisted.positioning: status report and request
	for comments/feedback
In-Reply-To: <cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>
References: <cedc0c090907291508s75303fa0w6a9626417e099a63@mail.gmail.com>
	<d9047f780907291801md4bf029s567bba6e8ce69f57@mail.gmail.com>
	<cedc0c090907300526xccf5f9at48751b66166d59e7@mail.gmail.com>
	<4A71C7E0.4070404@gmail.com>
	<cedc0c090907301738n3d199c0cs4dd468600e031251@mail.gmail.com>
	<cedc0c090907311320y271d2f9atcbd22aa301a71553@mail.gmail.com>
Message-ID: <d9047f780907311328m22351495yd23ec4583cfb44bd@mail.gmail.com>

On Fri, Jul 31, 2009 at 4:20 PM, Laurens Van Houtven <lvh at laurensvh.be>wrote:

> Also, regarding the message classes at every level: does this include
> the top level? I thought the top level (eg most abstracted) would
> contain a number of callbacks, such as:
>
>    positionReceived(self, latitude, longitude)
>    positionErrorReceived(self, hdop, vdop, pdop)
>    altitudeReceived(self, altitude)
>    altitudeErrorReceived(self, ...)
>
> Et cetera. A sentence at this level seems a bit superfluous, but I can
> see it being somewhat useful internally.


I don't have a strong preference either way.  My point about having a
"sentenceReceived" at the lower levels has more to do with the question of
where to factor the dispatch: *interfaces* typically shouldn't have
prefix_Foo methods on them, since you can always have an unexpected
prefix_Bar if the dispatch mechanism is expanded.  However,
"positionReceived" has nice, well-defined semantics of its own, so the
interface you've outlined here sounds good to me.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/6bf2d6be/attachment.html>

From ezyang at MIT.EDU  Fri Jul 31 16:40:59 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Fri, 31 Jul 2009 18:40:59 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1248986420-sup-4086@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>
Message-ID: <1249079820-sup-3441@javelin>

You can view an initial draft of the rewrite here:

http://ezyang.com/twisted/defer2.html

For reference, this is the planned outline (X means done, ? means
almost done):

X Synchronous to Asynchronous: The Method to the Madness
    X Convert synchronous code to asynchronous code
    X Why asynchronous?
- Deferred
    X Basic operation
    - Convenience primitives (succeed, fail, execute, maybeDeferred)
    ? Callback/Errback chaining
    - Timeouts
- Composing deferreds
    - DeferredList/gatherResults
    - chainDeferred
- Advanced topics
    - Deferred asynchronous primitives
    - Sugar syntax

Cheers,
Edward

P.S. Please CC me in your replies! Thanks.



From itamar at itamarst.org  Fri Jul 31 20:16:39 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 31 Jul 2009 22:16:39 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249079820-sup-3441@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin>  <1249079820-sup-3441@javelin>
Message-ID: <1249092999.3782.84.camel@pintsize>

On Fri, 2009-07-31 at 18:40 -0400, Edward Z. Yang wrote:
> You can view an initial draft of the rewrite here:
> 
> http://ezyang.com/twisted/defer2.html
> 
> For reference, this is the planned outline (X means done, ? means
> almost done):
> 
> X Synchronous to Asynchronous: The Method to the Madness
>     X Convert synchronous code to asynchronous code
>     X Why asynchronous?

It's great you're working on this! The docs on deferreds certainly need
help.

The problem with this is that it perpetuates the misunderstanding the
Deferreds *make* things asynchronous, even with the intro that says
otherwise. I think it's better to assume already asynchronous code,
handling the transition from synchronous to async in an intro event loop
howto. 

A better comparative exposition might be with normal callbacks, e.g.:

"def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
Deferred".

At the very least having that async but callbacky version in the middle
helps understanding.

It also omits half the story: how you *create* Deferreds. There should
be a section on that as well.

An example involving a parser, where you just wave your hands about who
pushes data in to the parser exactly (so no need to go into event loop
details), may work well. In particular, the object that wants the result
of the parsing wants to get parse errors, *not* whoever pushes data in.
Often it's same object, but not always. Deferreds help with that.






From itamar at itamarst.org  Fri Jul 31 20:25:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 31 Jul 2009 22:25:16 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
Message-ID: <1249093516.3782.89.camel@pintsize>

On Fri, 2009-07-31 at 15:37 -0400, Ying Li wrote:

> version (currently 8.2.0) but this is meaningless to me.  I think a
> big improvement would be putting in a small bit of context around the
> documentation , such as:
> 
> * when the howto/tutorial was last updated
> * what version (of deferreds/imap/whatever the howto/tutorial is
> about) the howto/tutorial was written for
> 
> What would be even more useful, although it would also be a lot more
> work, is to perhaps link to a diff between the code as it is now and
> as it was when the tutorial was written.  Or just a changelog.

Could you file some bugs to that effect, so we don't forget these
suggestions? Thanks!





From listsin at integrateddevcorp.com  Fri Jul 31 20:46:25 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 22:46:25 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <1249093516.3782.89.camel@pintsize>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
	<1249093516.3782.89.camel@pintsize>
Message-ID: <3274AEB9-10CC-44C9-A334-4A7CBB418C38@integrateddevcorp.com>


On Jul 31, 2009, at 10:25 PM, Itamar Shtull-Trauring wrote:

> On Fri, 2009-07-31 at 15:37 -0400, Ying Li wrote:
>
>> version (currently 8.2.0) but this is meaningless to me.  I think a
>> big improvement would be putting in a small bit of context around the
>> documentation , such as:
>>
>> * when the howto/tutorial was last updated
>> * what version (of deferreds/imap/whatever the howto/tutorial is
>> about) the howto/tutorial was written for
>>
>> What would be even more useful, although it would also be a lot more
>> work, is to perhaps link to a diff between the code as it is now and
>> as it was when the tutorial was written.  Or just a changelog.
>
> Could you file some bugs to that effect, so we don't forget these
> suggestions? Thanks!

Sorry for not being familiar with the overall system, but where would  
one put a suggestion regarding the overall date/time/version stamping  
of every document in the system?

I'd be happy to propose a standard format but I'm not sure where to  
put it so it's universally applied (across all products).

I know Jessica McKellar <jessica.mckellar at gmail.com> started working  
on the "ContributingToTwistedLabs" wiki how-to-edit-documentation docs.

Can we get it in there, or where would be the best place to get this  
started?

I've CC's Jessica to see how she thinks this might be integrated as  
well.

Thanks,

S
AKA/ssteiner
AKA/ssteinerX at gmail.com




From listsin at integrateddevcorp.com  Fri Jul 31 21:10:37 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Fri, 31 Jul 2009 23:10:37 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
Message-ID: <7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>


On Jul 31, 2009, at 4:23 PM, Glyph Lefkowitz wrote:
...
> I certainly wouldn't mind switching to a tool that has lots of fancy  
> features that lore lacks, but a hit-and-run approach where we just  
> switch tools in the hopes that it will make something better may  
> leave us in a worse situation than we already are.

I'm wondering if there's an inventory of the various types of  
documentation systems currently in use.

Not just "systems" but mostly "stray documentation."

 From this discussion, it doesn't seem that the Lore formatted and  
built docs are as much of a problem as the fragmentation into  
tracwiki, main docs, mailing list, etc. that we've discovered as we've  
been discussing it.

Since "everything" is not in the build system anyway, perhaps starting  
a branch, in a new build system (Sphinx), where we pull things in, one  
chunk at a time, will not be a hit and run approach, but will force  
the reorganization of the docs into one, actually unified format.

Presentation is another issue, for another day.

Then we can all see what's documented, what's not, what's old and out  
of date, etc.

With a dating system as discussed elsewhere, the docs will actually  
improve over time instead of becoming more fractured and out of date  
with no traceability.

Just my 13.4 cents.

S





From cyli.ying.li at gmail.com  Fri Jul 31 21:22:50 2009
From: cyli.ying.li at gmail.com (Ying Li)
Date: Fri, 31 Jul 2009 23:22:50 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <1249093516.3782.89.camel@pintsize>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<668503780907311237t450e19b8pf003b8f18b18bab@mail.gmail.com>
	<1249093516.3782.89.camel@pintsize>
Message-ID: <668503780907312022x5991cf96k7116e60ad75ec816@mail.gmail.com>

On Fri, Jul 31, 2009 at 10:25 PM, Itamar
Shtull-Trauring<itamar at itamarst.org> wrote:
> Could you file some bugs to that effect, so we don't forget these
> suggestions? Thanks!


Done:  http://twistedmatrix.com/trac/ticket/3945

The formatting on the description is off though (I tried to make
bullet points and failed), and I don't have permission to change it.



From glyph at twistedmatrix.com  Fri Jul 31 21:27:12 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jul 2009 23:27:12 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
Message-ID: <d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:10 PM, Steve Steiner (listsin) <
listsin at integrateddevcorp.com> wrote:

> Since "everything" is not in the build system anyway, perhaps starting
> a branch, in a new build system (Sphinx), where we pull things in, one
> chunk at a time, will not be a hit and run approach, but will force
> the reorganization of the docs into one, actually unified format.
>

"This time for sure, Rocky!"

If you actually want to volunteer to do all of the work for this (which I
outlined in my previous message) then feel free.  But attempts to fix the
world by blowing it up are rarely successful.  A better approach would be to
incrementally enumerate the things which have been covered on the mailing
list and wiki, then pull them into the lore docs one at a time.

Of course, the people who have actually volunteered their time, rather than
their suggestions, seem to agree with this general outline :).

Something you have to keep in mind with grand efforts like "let's rewrite
all the docs in the hottest new ReFrumpledText format" is that Twisted is a
product mostly of people's spare time, and therefore the person working on
it may suddenly become busy and lose interest.  When they *do* lose interest
— possibly for a year or longer — we need to make sure that things are in a
good state in the meanwhile, and their efforts have improved things.  Each
small improvement to the lore documentation will improve the overall
documentation situation.

As you put it, a big problem here is:

the fragmentation into tracwiki, main docs, mailing list, etc
>

if the fragmentation is instead into tracwiki, main docs, sphinx docs,
mailing list, etc, the problem has actually gotten *worse*, not better.
Especially if the sphinx person walks away halfway through the effort, and
then some other person comes along and says, "oh hey, what we should *really
* do is rewrite all the docs in YAML", then rewrites another small subset of
them and leaves.

I hope you can see why I want to hold on to our current toolchain until we
have someone around who has demonstrated a much deeper commitment to
documentation than anyone yet has.  For example, Steve, if you close 100
existing documentation tickets in the next week, then make the exact same
suggestion again, I'll be a lot less resistant ;-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090731/02ef6e87/attachment.html>

From ezyang at MIT.EDU  Fri Jul 31 21:35:40 2009
From: ezyang at MIT.EDU (Edward Z. Yang)
Date: Fri, 31 Jul 2009 23:35:40 -0400
Subject: [Twisted-Python] [Fwd: Re:  Deferred documentation rewrite]
In-Reply-To: <1249093589.3782.91.camel@pintsize>
References: <1249093589.3782.91.camel@pintsize>
Message-ID: <1249097275-sup-1055@javelin>

Excerpts from Itamar Shtull-Trauring's message of Fri Jul 31 22:26:29 -0400 2009:
> The problem with this is that it perpetuates the misunderstanding the
> Deferreds *make* things asynchronous, even with the intro that says
> otherwise. I think it's better to assume already asynchronous code,
> handling the transition from synchronous to async in an intro event loop
> howto. 

Either way, the function that the first segment of the new docs do belong
somewhere.  The documentation that traditionally served this purpose
has been removed.

As for perpetuating the misunderstanding of Deferreds making things
asynchronous, I completely agree!  However, I think this is something
that can be fixed by spelling out the distinction between "writing
asynchronous code" and "interacting with asynchronous code", and not
just omitting the important paradigm shift that comes with sync->async.

> A better comparative exposition might be with normal callbacks, e.g.:
> 
> "def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
> Deferred".
> 
> At the very least having that async but callbacky version in the middle
> helps understanding.

I briefly gloss on this, but I agree that this is an important point
that could be further expanded.  We could have implemented asynchronous
mechanisms using normal callbacks, but we decided to use Deferreds instead.

It's not clear to me if the common case of confusion of Deferreds occurs
in people who "know callbacks" but "don't know Deferreds."  As an incoming
developer who was familiar with asynchronous programming, my primary problem
was the ill-defined behavior of callback chains (which I resolved by
hunkering down and reading the source code) rather than any fundamental
misunderstanding of what Deferreds were supposed to do.

> It also omits half the story: how you *create* Deferreds. There should
> be a section on that as well.

I agree.  In fact, it might be worth making the document a little longer
to address this point, because I realize now that even if you're not
writing asynchronous code, you'll often need to baton Deferreds to
make the execution flow work the way you want them to.

> An example involving a parser, where you just wave your hands about who
> pushes data in to the parser exactly (so no need to go into event loop
> details), may work well. In particular, the object that wants the result
> of the parsing wants to get parse errors, *not* whoever pushes data in.
> Often it's same object, but not always. Deferreds help with that.

That's a good distinction.  I'll see how I can work that in.

Cheers,
Edward



From listsin at integrateddevcorp.com  Fri Jul 31 22:11:05 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Sat, 1 Aug 2009 00:11:05 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<4A72FD7E.8010205@gmail.com>
	<7D368E58-A65F-48ED-A75A-7E2CFD35BD50@bubblehouse.org>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
Message-ID: <9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>

> I hope you can see why I want to hold on to our current toolchain  
> until we have someone around who has demonstrated a much deeper  
> commitment to documentation than anyone yet has.  For example,  
> Steve, if you close 100 existing documentation tickets in the next  
> week, then make the exact same suggestion again, I'll be a lot less  
> resistant ;-).

I get it, really.

Where would we put an "inventory" project for it to be most useful?

S




From glyph at twistedmatrix.com  Fri Jul 31 22:13:06 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:13:06 -0400
Subject: [Twisted-Python] Deferred documentation rewrite
In-Reply-To: <1249079820-sup-3441@javelin>
References: <1248977158-sup-6989@javelin>
	<aa66e7aa0907301203w47550c72ya2bad9f40c1ee15c@mail.gmail.com>
	<1248986420-sup-4086@javelin> <1249079820-sup-3441@javelin>
Message-ID: <d9047f780907312113sbc062cbj74a2e15e481f26ab@mail.gmail.com>

On Fri, Jul 31, 2009 at 6:40 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> You can view an initial draft of the rewrite here:


This is a great first draft!  Very substantial.  I really appreciate you
working on this.

Now I will proceed to rip it to shreds by way of giving you some feedback,
but please try to take this as a constructive review.  I'm happy with what
you've got but given the large amount of dissatisfaction in the community
with the existing Deferred docs, and the widespread confusion that they
cause, I think that these docs have to be totally awesome.


> X Synchronous to Asynchronous: The Method to the Madness
>

I really strongly object to this section title.  Reading through the section
itself, I don't find that it's that objectionable, but one of the
misconceptions that we frequently need to dispel is that Deferreds are
"crazy" or "complex" or "magic".  I think it's very important to reinforce
this for the reader, that this is just an idiom we use for some python
functions to call some other functions in a particular order.

So please get rid of the "madness".

Beyond that, you spend a lot of time talking about *synchronous* and *
asynchronous** *code in this section.  You go so far as to *boldface the
words for emphasis*.  Okay, great, these are important terms, but you're
clearly explaining them as if the user doesn't really know what they mean.
I think that starting with a definition of "synchronous" and "asynchronous"
would be helpful.  Better yet, have an explanation that invokes some code.

The tone also suggests that the user may not quite understand what callbacks
are or how they work.  A brief explanation of higher-order functions in
Python may be in order.  (Or the tone could change to assume that the user *
does* know about this sort of thing, but a little redundancy might not be
amiss here.)

If someone comes to this document with a set of ideas about how network
programming works - for example, that "read()" reads some bytes off of a
socket and blocks until they're ready, it won't be clear how select() and
friends get involved to make this asynchronous programming deal worthwhile.
So it would be useful to explain, at least briefly, how this kind of work
gets done behind the scenes.  You don't want to actually spin up the real
reactor early on in the examples, though.  I think Jonno Lange's document
did a reasonable job explaining how Deferreds interact with the reactor.
It's important to get across that there's no magical interaction, since
that's a considerable source of confusion.  I also wrote an answer on
stackoverflow which addressed this, which might be helpful to you as a
resource:

http://stackoverflow.com/questions/80617/asychronous-programming-in-python-twisted/81456#81456

More minor things:

"tutorial-ish"?  Is this a tutorial or not?  I don't mind some informality
and humor in the documentation, but this is just sloppy.  (Not necessarily
the wording: reading through it, I really can't tell if it's intended to be
a tutorial or not.)

"set of code": this should be "function", or possibly "callback" or
"callable".  It's important to be precise with terminology because later in
the documentation we're going to expect users to know what those terms mean,
and if we've been inconsistent they may be confused.

Throughout Twisted, "Deferred" is used as a noun.  In this document they are
universally referred to as a "Deferred object".  Please drop the "object".

The bulleted lists seem to be a distraction.  Most of them aren't really
enumerating anything, they're just jumping from topic to topic without
finishing a sentence.

You use the word "simple" a lot.  Don't tell me it is or isn't simple:
demonstrate its simplicity.  In one case — "Simple and well defined." —
there isn't even a sentence.

"Asynchronous programming is centered around this notion that:"  This whole
section is very confused.  If it's centered around something, shouldn't it
be one thing?  "this notion"?  Which notion, you've got a list of 3 bullet
points that talk about maybe 5 notions, none of which is an antecedent which
could satisfy "this".

You are throwing lots and lots of examples at the reader, but I find that
users understand better with one thoroughly-explained toy example that they
can pick apart and play with than a whole bunch of abstract stuff.  For
example, "Sometimes I want code to happen during an event, but the event
firing is distinct from my program flow".  A user reading that (if they
understand it) is likely to say "why not start a thread?".  If it is instead
presented in terms of a matter-of-fact "here is what happens" not "here is
why you want this" then the user is more likely to focus on what is
happening (and thus, on understanding Deferreds, which is really the whole
point here) than on whether they *really* actually want it or not.

Hopefully by the time they thoroughly understand it they will know that they
do want it ;-).

- Deferred
>    X Basic operation
>    - Convenience primitives (succeed, fail, execute, maybeDeferred)


This should be covered later on.  "fail" doesn't make any sense unless you
already know about errbacks and chaining.

   ? Callback/Errback chaining


These examples are really weak on explanation.  I won't belabor that point
though, because it seems like you're not really done writing them yet.


>    - Timeouts


Your bare-bones Deferred implementation should really be called something
else.  In Jonathan Lange's example, it was called a "Placeholder".  I can
see readers getting confused about whether Deferreds are something you're
supposed to (or allowed to) implement yourself, or whether they're something
that's a part of Twisted, because you move from talking about your toy
implementation to the real thing without skipping a beat.


> - Composing deferreds
>    - DeferredList/gatherResults
>    - chainDeferred


- Advanced topics
>    - Deferred asynchronous primitives
>    - Sugar syntax
>

I feel like this is throwing too much at the user at once.  It's absolutely
fantastic if you want to address this stuff as well (its docs are even
weaker than Deferred itself), but let's put in a break so that they know
they should go off and try to understand the more basic aspects of Deferreds
before trying to understand gatherResults, inlineCallbacks and
DeferredSemaphore.

More importantly I think you should really focus on getting an extremely
lucid and readable explanation of the core concepts of event-driven
programming and Deferreds before you start adding in these extra bits of
documentation.  Just keep coming back to that.  Pretend you don't understand
why asynchronous programming is useful at all, how select() or non-blocking
I/O works, and read through the document.  Consider whether you understand
what's going on, why these ideas are useful.  Deliberately try to
misunderstand them in a way which is wrong, but consistent with the wording,
and see if you can get to the bottom of your document without being
corrected :).

I have more feedback, but I assume this is more than enough to get you
started :).

P.S. Please CC me in your replies! Thanks.


I'll try to remember, but I'm sure somebody's going to forget - you should
subscribe to the mailing list so you get their messages even if you don't
:).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/079028ab/attachment.html>

From glyph at twistedmatrix.com  Fri Jul 31 22:20:22 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:20:22 -0400
Subject: [Twisted-Python] Questions about adding documentation
In-Reply-To: <9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
References: <b282a1340907301749k403e51e5j2fdd82b5a1618a64@mail.gmail.com>
	<562bcc10907310840l75e81fc7i8d654c15966c71f4@mail.gmail.com>
	<95bb10690907310851q70d3c494v5fc81111c22328a@mail.gmail.com>
	<4A73187B.3070400@gmail.com>
	<562bcc10907310955l7bdf28d1nf14fd4cbc1969975@mail.gmail.com>
	<b282a1340907311016m67b48525v5bec8881dd092a8e@mail.gmail.com>
	<d9047f780907311323l448a1bedh1596c223354ecba4@mail.gmail.com>
	<7201175C-69F5-4DC5-B5C9-A9533EE9A51D@integrateddevcorp.com>
	<d9047f780907312027i2640123bo6b8485ff6923b302@mail.gmail.com>
	<9488DD63-75B7-4CC3-830A-C5661A438BA9@integrateddevcorp.com>
Message-ID: <d9047f780907312120o409983b8t80d9ba1eaa956773@mail.gmail.com>

On Sat, Aug 1, 2009 at 12:11 AM, Steve Steiner <
listsin at integrateddevcorp.com> wrote:

> > I hope you can see why I want to hold on to our current toolchain
> > until we have someone around who has demonstrated a much deeper
> > commitment to documentation than anyone yet has.  For example,
> > Steve, if you close 100 existing documentation tickets in the next
> > week, then make the exact same suggestion again, I'll be a lot less
> > resistant ;-).
>
> I get it, really.
>

I do tend to use a lot of words to get things across.  Sorry ;-).


> Where would we put an "inventory" project for it to be most useful?
>

 As JP mentioned earlier in this thread, some work has already taken place
here: <http://twistedmatrix.com/trac/wiki/DocumentationAnalysis>.

If you'd like to contribute to that, please let somebody on the #twisted IRC
channel know your trac username so we can set you up with wiki-edit
permission.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/0f17ef58/attachment.html>

From glyph at twistedmatrix.com  Fri Jul 31 22:40:32 2009
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 1 Aug 2009 00:40:32 -0400
Subject: [Twisted-Python] [Fwd: Re: Deferred documentation rewrite]
In-Reply-To: <1249097275-sup-1055@javelin>
References: <1249093589.3782.91.camel@pintsize> <1249097275-sup-1055@javelin>
Message-ID: <d9047f780907312140m4a126c38h568bff052b8a1aec@mail.gmail.com>

On Fri, Jul 31, 2009 at 11:35 PM, Edward Z. Yang <ezyang at mit.edu> wrote:

> Excerpts from Itamar Shtull-Trauring's message of Fri Jul 31 22:26:29 -0400
> 2009:
> > The problem with this is that it perpetuates the misunderstanding the
> > Deferreds *make* things asynchronous, even with the intro that says
> > otherwise. I think it's better to assume already asynchronous code,
> > handling the transition from synchronous to async in an intro event loop
> > howto.
>
> Either way, the function that the first segment of the new docs do belong
> somewhere.  The documentation that traditionally served this purpose
> has been removed.


I'm actually inclined to agree.  Understanding what Deferreds are *for* sort
of implies an understanding of why one would want to have a list of
callbacks in the first place, which implies a need to understand
asynchronous programming.

Realistically, I don't think there are a lot of people out there who have
managed to do anything at all useful with Twisted without undersanding
Deferreds.

I think it might be useful to lead into this section with a specific example
problem though, rather than a very vague general template for the category
of problems.  Once you've demonstrated a specific problem, you can always
expand the general category by briefly listing some other problems which are
similar.

As for perpetuating the misunderstanding of Deferreds making things
> asynchronous, I completely agree!  However, I think this is something
> that can be fixed by spelling out the distinction between "writing
> asynchronous code" and "interacting with asynchronous code", and not
> just omitting the important paradigm shift that comes with sync->async.


By the time you have to spell out that distinction, I think it's too late.
By the time the user is dealing with a Deferred, they should have a pretty
good idea that it's just a list of functions that will be called at some
point in the future; if you have to say "here's this magic thing, oh, by the
way, it turns out it's just a list of functions" they're still going to
think something's magic about it.

If you want an example that doesn't involve any reactor integration, you
might try showing a program that polls a directory for a file being added.
If you want to simultaneously wait for a file named "1" and a file named
"2", you need to use callbacks, otherwise "waiting" for 2 will prevent the
code for 1 from running immediately if 1 shows up first.

I'm not really sure this can be done in a simple enough way to be useful, so
take it with a grain of thought.

> A better comparative exposition might be with normal callbacks, e.g.:
>
>
> > "def foo(x, gotResultCallback): pass" vs. "def foo(x): # return
> > Deferred".
> >
> > At the very least having that async but callbacky version in the middle
> > helps understanding.
>
> I briefly gloss on this, but I agree that this is an important point
> that could be further expanded.  We could have implemented asynchronous
> mechanisms using normal callbacks, but we decided to use Deferreds instead.
>

Definitely agreed here.  For those users who are used to "normal" callbacks
(if there is such a thing), this explanation would be helpful to explain why
you need them rather than just passing functions around.  For users who
aren't even familiar with passing functions around, this would fill an
important intermediate gap.


> It's not clear to me if the common case of confusion of Deferreds occurs
> in people who "know callbacks" but "don't know Deferreds."  As an incoming
> developer who was familiar with asynchronous programming, my primary
> problem
> was the ill-defined behavior of callback chains (which I resolved by
> hunkering down and reading the source code) rather than any fundamental
> misunderstanding of what Deferreds were supposed to do.
>

I think we need an expanded version of the "visual explanation" here: <
http://twistedmatrix.com/projects/core/documentation/howto/defer.html> (one
that uses complete sentences and more than one diagram), as well as an
expanded analogy to try:except: blocks in 'synchronous' python.

I object to the classification of the behavior of callback chains as
"ill-defined".  It might have been poorly-explained, but that's very
different :).

> It also omits half the story: how you *create* Deferreds. There should
> > be a section on that as well.
>
> I agree.  In fact, it might be worth making the document a little longer
> to address this point, because I realize now that even if you're not
> writing asynchronous code, you'll often need to baton Deferreds to
> make the execution flow work the way you want them to.
>

+1.  Dealing with Deferred creation is a good way to introduce users to the
non-magicness of Deferreds.  It's less common to create one than to consume
one, but understanding how to create them should make it easier to
understand how to consume them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090801/7b297d95/attachment-0001.html>

