From trac at twistedmatrix.com  Sun Dec  1 00:05:23 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Dec 2019 07:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1575183923.52.8204826657670726557@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191201/9bf8d14c/attachment.html>

From trac at twistedmatrix.com  Sun Dec  8 00:05:26 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Dec 2019 07:05:26 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1575788726.29.410801433747976515@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191208/70b04281/attachment.html>

From twisted-ml at notafile.com  Sun Dec  8 09:37:31 2019
From: twisted-ml at notafile.com (notafile)
Date: Sun, 08 Dec 2019 17:37:31 +0100
Subject: [Twisted-Python] Status of: "console support for stdio in Windows"
Message-ID: <b2cbbcb7-2ade-4558-94f2-f2828e102cac@www.fastmail.com>

Hi,

I just came across the following patches from 13 years ago that fix StandardIO handling for windows.

https://twistedmatrix.com/trac/ticket/2157

This still appears to be broken, so it seems these patches just got overlooked and forgotten?

 - nota


From glyph at twistedmatrix.com  Tue Dec 10 00:18:22 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 9 Dec 2019 23:18:22 -0800
Subject: [Twisted-Python] Status of: "console support for stdio in
 Windows"
In-Reply-To: <b2cbbcb7-2ade-4558-94f2-f2828e102cac@www.fastmail.com>
References: <b2cbbcb7-2ade-4558-94f2-f2828e102cac@www.fastmail.com>
Message-ID: <68F0F4A2-6173-4D2E-ABF7-59BC50298084@twistedmatrix.com>



> On Dec 8, 2019, at 8:37 AM, notafile <twisted-ml at notafile.com> wrote:
> 
> Hi,
> 
> I just came across the following patches from 13 years ago that fix StandardIO handling for windows.
> 
> https://twistedmatrix.com/trac/ticket/2157
> 
> This still appears to be broken, so it seems these patches just got overlooked and forgotten?

To get fixed, a Twisted ticket needs an active champion who is responding to reviews, fixing CI issues, and generally shepherding the ticket to completion.  Stalled tickets like this are sadly not uncommon.

If this issue affects you and you're interested in getting it fixed, it would be wonderful if you'd pick up the code as it's documented on that ticket, put it into a new github fork, make a pull request and put it into review (i.e.: paste a link to the PR on the Trac ticket and add the 'review' keyword to it).

The review queue over on https://twisted.reviews/ <https://twisted.reviews/> isn't too deep right now so you would have a good chance of getting a review and getting it integrated assuming it's got test coverage and everything.

Thanks for highlighting this issue!

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191209/58ca35cc/attachment.html>

From wsanchez at wsanchez.net  Wed Dec 11 14:06:08 2019
From: wsanchez at wsanchez.net (=?utf-8?Q?Wilfredo_S=C3=A1nchez_Vega?=)
Date: Wed, 11 Dec 2019 13:06:08 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
Message-ID: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>

  With Python 2.7 support dropping in a matter of weeks, I'd like to pick up from hawkowl's thread back in March about Python 2.7 support for Twisted.

  hawkowl had shared a plan in a Google Docs document.  That URL has since gone stale but here's a new one (thanks, hawkowl):

  https://docs.google.com/document/d/1lIkg6mYVMxVhh3_U6uSJ1XjllPM92Nf8Zp7b7OZPbIw/edit


  Here's what I got from the prior conversation:


Amber Brown (hawkowl):

> I personally find that Python 2 compat adds a huge amount of overhead 
> when working on and maintaining Twisted, and think that with the current 
> maintainer availability, dropping it sooner rather than later would have 
> a beneficial effect on how much work we spend on shims/compat, 
> complexity, and our ability to ship new features, as well as onboarding 
> people who are interested in the project, but have no interest (or 
> experience!) in Python 2.7.

  As an example here, I'd like us to start adopting type hints.  I find them incredibly valuable as documentation and for catching lots of bugs.

  The best way to adopt them is to use inline syntax supported by Python 3.6+, or slightly less ideal, Python 3.5+.  It looks like pydoctor may have support for this soon, which makes that an increasingly interesting avenue.

  To support Python 2.7, we'd have to use either:

  - the comments-based inline syntax, which is far uglier and leaves us with an extra project of converting those later when we finally do drop 2.7, or

  - stub files, which are considerably less easy to manage over time

  Doing this will also afford us an opportunity to better express the API (do we mean to return a "mutable sequence" or a specifically a list, etc.).

  There's a longer conversation to be had about type hints, and that should be on a separate thread; I only talk about it here to explain why Python 2.7 is in the way.

> One of my rationales is that from some analysis of PyPI download 
> statistics, the vast majority of Python 2 users are using old versions 
> of Twisted, while nearly all our Python 3 users are on the latest 
> version.

  Can you share how you looked up these stats?  I don't see a way to do so with pypistats.


John Santos:

> I hope/expect that none of my code changes to make my source compatible 
> with both 2.7 and 3 will break when Twisted support for 2.7 goes away!  
> (It seems to me the Twisted compatibility policy would guarantee that.)

  To be clear, I would not expect this to be the case if you update Twisted to a version that no longer supports Python 2.7.  You would have to continue using a version that does support Python 2.7. You should have some runway, however, in which your app still works with either Py2.7 and Twisted 19 as well as Py3.8 using Twisted 20, for example.


Glyph, in reference to a maintenance branch for Python 2.7:

> Personally, I'm not willing to commit to this.  I know from experience both on Twisted and other projects that maintaining multiple release branches, even one that's "maintenance only", requires at least one point-person for each branch at all times (usually a "release manager").  And backporting fixes inevitably gets harder and harder as the "maintenance" branch diverges from top-of-tree.  If I have time to work on Twisted in my increasingly scarce spare time, I want it to be on something at least plausibly interesting, and manually backporting manual fixes to an unmaintained py2 branch that I don't even use doesn't qualify.

  I tend to agree.  I think the compromise would be that we could be willing to accept back-ports of certain fixes (presumably limited to security fixes?) to a maintenance branch, but not that we would commit to doing so for any period of time.

  Additionally, we've already supported Python 2.7 for the entirely supported lifetime of Python 2.7.

  Glyph also notes some infrastructure we use that is blocked on code fixes:

  - Trac: https://trac.edgewall.org/ticket/12130
    Looks like we can leave the Trac instance running in a Twisted 19 WCGI server until they fix that.

  - DNS: https://twistedmatrix.com/trac/ticket/9496
    I'd suggest we do the same as with Trac until this is fixed, but Glyph disagrees.


  Back to hawkowl's document:

  - Part 1: I think we should drop the Py2.7 maintenance branch piece per Glyph's comment above.

  - Part 2: Re-introduced modules should go into separate repositories, not back into Twisted proper.

  As to the timeline, Option 1 would be to cut a 2.7 release in a couple of weeks.  I don't know that we need to do this in January, but I would suggest that our next release is the final release for 2.7.  This would require a fix to the DNS issue #9496.

	-wsv


From exarkun at twistedmatrix.com  Wed Dec 11 14:16:40 2019
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 11 Dec 2019 16:16:40 -0500
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
Message-ID: <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>

On Wed, Dec 11, 2019 at 4:06 PM Wilfredo SÃ¡nchez Vega <wsanchez at wsanchez.net>
wrote:

>   With Python 2.7 support dropping in a matter of weeks, I'd like to pick
> up from hawkowl's thread back in March about Python 2.7 support for Twisted.
>

Despite the widely circulated January 1 2020 date, it seems that python-dev
nevertheless plans to make a Python 2.7 release in April 2020 -
https://www.python.org/dev/peps/pep-0373/

This is not to say the questions here don't need answering or that there
isn't some urgency at this point, but it seems like the January 1 date is
essentially an arbitrary deadline without a clear connection to the support
status of CPython 2.7.

Or does anyone know a different way to reconcile these apparently
conflicting dates?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191211/5d6cc508/attachment.html>

From wsanchez at wsanchez.net  Wed Dec 11 14:41:50 2019
From: wsanchez at wsanchez.net (=?utf-8?Q?Wilfredo_S=C3=A1nchez_Vega?=)
Date: Wed, 11 Dec 2019 13:41:50 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
Message-ID: <4C3E8F02-120F-49E7-B263-D1EF4217B06F@wsanchez.net>

  I don't object to the final release being in April instead of January, though I'm not sure that the additional release really means we need to do that.  But FWIW I'm in favor of Option 3 / calling 19.4 the final release.  :-)

  My sense is that there was consensus on hawkowl's proposal except for, I think:

	1- Should we drop the idea of a 2.7 maintenance branch?
	2- It seems we need to fix the bug in twisted.names first.
	3- Choosing a final 2.7 release date.

	-wsv


> On Dec 11, 2019, at 1:16 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Wed, Dec 11, 2019 at 4:06 PM Wilfredo SÃ¡nchez Vega <wsanchez at wsanchez.net <mailto:wsanchez at wsanchez.net>> wrote:
>   With Python 2.7 support dropping in a matter of weeks, I'd like to pick up from hawkowl's thread back in March about Python 2.7 support for Twisted.
> 
> Despite the widely circulated January 1 2020 date, it seems that python-dev nevertheless plans to make a Python 2.7 release in April 2020 - https://www.python.org/dev/peps/pep-0373/ <https://www.python.org/dev/peps/pep-0373/>
> 
> This is not to say the questions here don't need answering or that there isn't some urgency at this point, but it seems like the January 1 date is essentially an arbitrary deadline without a clear connection to the support status of CPython 2.7.
> 
> Or does anyone know a different way to reconcile these apparently conflicting dates?
> 
> Jean-Paul

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191211/2c218849/attachment.html>

From john at egh.com  Wed Dec 11 14:53:47 2019
From: john at egh.com (John Santos)
Date: Wed, 11 Dec 2019 16:53:47 -0500
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
Message-ID: <df3cb510-b03a-3591-a167-53d6468c4201@egh.com>


On 12/11/2019 4:06 PM, Wilfredo SÃ¡nchez Vega wrote:
>
> John Santos:
>
>> I hope/expect that none of my code changes to make my source compatible
>> with both 2.7 and 3 will break when Twisted support for 2.7 goes away!
>> (It seems to me the Twisted compatibility policy would guarantee that.)
>    To be clear, I would not expect this to be the case if you update Twisted to a version that no longer supports Python 2.7.  You would have to continue using a version that does support Python 2.7. You should have some runway, however, in which your app still works with either Py2.7 and Twisted 19 as well as Py3.8 using Twisted 20, for example.

WHAT?????

You are saying that I will still have to use a version of Twisted that 
supports Python 2.7, even though I AM NOT USING Python 2.7?

If that's not what you meant, than clarify.


> 	-wsv
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539


From sile16 at gmail.com  Fri Dec 13 11:29:38 2019
From: sile16 at gmail.com (Matthew Robertson)
Date: Fri, 13 Dec 2019 12:29:38 -0600
Subject: [Twisted-Python] Ldaptor Proxy using UDP
Message-ID: <CAHkF0gPCMMz5qxZhxh2ZyLFu-8t=9iuy8SDeH7YtDq7ei_PCXg@mail.gmail.com>

I've started from the ldaptor proxy example here:

https://ldaptor.readthedocs.io/en/latest/cookbook/ldap-proxy.html

and have a working application using tcp, However, now there is a
requirement to access via UDP.  I have been struggling to get this to
work,  nothing seems to work.

Mainly been trying to duplicate how the DNS server works for both tcp & udp.

class DNSDatagramProtocol(dns.DNSMixin, protocol.DatagramProtocol):

but not sure if that is the right path or there is an easier way.

thank you,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191213/4d116098/attachment.html>

From trac at twistedmatrix.com  Sun Dec 15 00:05:23 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Dec 2019 07:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1576393523.52.4714154262693272466@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191215/b59ae7ae/attachment.html>

From glyph at twistedmatrix.com  Mon Dec 16 08:10:20 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 16 Dec 2019 07:10:20 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
Message-ID: <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>



> On Dec 11, 2019, at 1:16 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Wed, Dec 11, 2019 at 4:06 PM Wilfredo SÃ¡nchez Vega <wsanchez at wsanchez.net <mailto:wsanchez at wsanchez.net>> wrote:
>   With Python 2.7 support dropping in a matter of weeks, I'd like to pick up from hawkowl's thread back in March about Python 2.7 support for Twisted.
> 
> Despite the widely circulated January 1 2020 date, it seems that python-dev nevertheless plans to make a Python 2.7 release in April 2020 - https://www.python.org/dev/peps/pep-0373/ <https://www.python.org/dev/peps/pep-0373/>
> 
> This is not to say the questions here don't need answering or that there isn't some urgency at this point, but it seems like the January 1 date is essentially an arbitrary deadline without a clear connection to the support status of CPython 2.7.
> 
> Or does anyone know a different way to reconcile these apparently conflicting dates?

This is just speculative, just based on my own historical understanding of python-dev's process and somewhat informal definition of "support", but I believe the sentence "Support officially stops January 1 2020, but the final release will occur after that date." means something like "We will accept new bug reports and may start fixing things until January 1; however, the fixes in progress as of that date will be completed and released in a final version some time later."

When we EOL py27 support for Twisted we should probably do something similar so anyone who wants to get a pending fix out as part of the last 27-supporting release has a window to do that.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191216/dbb9bc08/attachment.html>

From wsanchez at wsanchez.net  Mon Dec 16 09:31:33 2019
From: wsanchez at wsanchez.net (=?utf-8?Q?Wilfredo_S=C3=A1nchez_Vega?=)
Date: Mon, 16 Dec 2019 08:31:33 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
Message-ID: <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>

On Dec 16, 2019, at 7:10 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> When we EOL py27 support for Twisted we should probably do something similar so anyone who wants to get a pending fix out as part of the last 27-supporting release has a window to do that.

  That seems pretty reasonable (as long as it's not open-ended).

	-wsv

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191216/b6c092d9/attachment.html>

From glyph at twistedmatrix.com  Mon Dec 16 09:40:42 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 16 Dec 2019 08:40:42 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
 <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>
Message-ID: <E76D45BC-E6C7-439B-94CA-6420180726A7@twistedmatrix.com>



> On Dec 16, 2019, at 8:31 AM, Wilfredo SÃ¡nchez Vega <wsanchez at wsanchez.net> wrote:
> 
> On Dec 16, 2019, at 7:10 AM, Glyph <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> When we EOL py27 support for Twisted we should probably do something similar so anyone who wants to get a pending fix out as part of the last 27-supporting release has a window to do that.
> 
>   That seems pretty reasonable (as long as it's not open-ended).

The whole point would be to define a concrete end in terms of the final release - and I have no doubt that if we say what the date of the final 2.7 release is, Hawkie will get it out on the dot, and not a day past its deadline :).  So no way it would be open-ended.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191216/7bc5c324/attachment.html>

From hawkowl at atleastfornow.net  Mon Dec 16 14:29:55 2019
From: hawkowl at atleastfornow.net (Amber Brown (hawkowl))
Date: Tue, 17 Dec 2019 08:29:55 +1100
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <4C3E8F02-120F-49E7-B263-D1EF4217B06F@wsanchez.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <4C3E8F02-120F-49E7-B263-D1EF4217B06F@wsanchez.net>
Message-ID: <848d0cac-5d4a-4fac-4df2-fcd6d356e0d6@atleastfornow.net>



On 12/12/19 8:41 am, Wilfredo SÃ¡nchez Vega wrote:
>  Â  I don't object to the final release being in April instead of 
> January, though I'm not sure that the additional release really means we 
> need to do that. Â But FWIW I'm in favor of Option 3 / calling 19.4 the 
> final release. Â :-)
> 
>  Â  My sense is that there was consensus on hawkowl's proposal except 
> for, I think:
> 
> 1- Should we drop the idea of a 2.7 maintenance branch?
> 2- It seems we need to fix the bug in twisted.names first.
> 3- Choosing a final 2.7 release date.
> 
> -wsv

JP has mentioned elsewhere that enough of the ecosystem has dropped, or 
will drop, support that a lot of applications staying on 2.7 will have 
dependencies frozen in time regardless. I think this is valid, and that 
Twisted remaining compatible with 2.7 hardly matters when so much else 
isn't and forces the hand of 2.7-stalwarts regardless. As such, I think 
dropping the 2.7 maint branch is valid.

And yes, we do need to fix that bug. There's some other py3 specific 
bugs in names's host file resolver, but, I think that bugfix would end 
up hitting that portion of code's unicode uncleanliness. It just comes 
down to someone doing it, I guess...

- Amber


From hawkowl at atleastfornow.net  Mon Dec 16 14:30:39 2019
From: hawkowl at atleastfornow.net (Amber Brown (hawkowl))
Date: Tue, 17 Dec 2019 08:30:39 +1100
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <E76D45BC-E6C7-439B-94CA-6420180726A7@twistedmatrix.com>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
 <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>
 <E76D45BC-E6C7-439B-94CA-6420180726A7@twistedmatrix.com>
Message-ID: <70ba1f8d-c19a-4af9-9c13-946327409cd3@atleastfornow.net>


On 17/12/19 3:40 am, Glyph wrote:
> 
> The whole point would be to define a concrete end in terms of the final 
> release - and I have no doubt that if we say what the date of the final 
> 2.7 release is, Hawkie will get it out /on the dot/, and not a day past 
> its deadline :). Â So no way it would be open-ended.
> 
> -g
> 
At this point, I think 1st of January is unrealistic for those that want 
to do a final drive for things inclusive of 2.7 support.

Without any better ideas, what if we just say something like 1st March? 
I don't think much would realistically happen in the rest of March, 
considering a fair amount of people would be gearing up for PyCon, and 
then it lets us have a decent amount of space for a release candidate 
and the potential for any successive RCs without it spilling over into 
PyCon US, where I have a feeling those of us attending would prefer to 
look to the future :)

- Amber


From robert.difalco at gmail.com  Tue Dec 17 11:18:52 2019
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Tue, 17 Dec 2019 10:18:52 -0800
Subject: [Twisted-Python] Weird epoller bug
Message-ID: <CAAXGW-yezDBDTcpH7wGL66yq3+M0o-3nPZ=Ux7piwdQZ2LBN8A@mail.gmail.com>

We recently switched from these versions and recently our TLS health check
using treq seems to be using more and more file handles and getting this
exception. Additionally our health check gets response time outs at a much
higher frequency. Any tips on how I would go about debugging this? Or is
this perhaps a known issue in one of the versions below and I need to
either bump up or down a release version? Thanks!

twisted 16.6.0 -> 19.19.0
treq 15.1.0 -> 18.6.0

  File
"/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
line 183, in removeWriter
    EPOLLOUT, EPOLLIN)
  File
"/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
line 160, in _remove
    self._poller.unregister(fd)
exceptions.IOError: [Errno 2] No such file or directory
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191217/41f6f58b/attachment.html>

From robert.difalco at gmail.com  Tue Dec 17 12:19:42 2019
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Tue, 17 Dec 2019 11:19:42 -0800
Subject: [Twisted-Python] Weird epoller bug
In-Reply-To: <CAAXGW-yezDBDTcpH7wGL66yq3+M0o-3nPZ=Ux7piwdQZ2LBN8A@mail.gmail.com>
References: <CAAXGW-yezDBDTcpH7wGL66yq3+M0o-3nPZ=Ux7piwdQZ2LBN8A@mail.gmail.com>
Message-ID: <CAAXGW-x06MGZYMV8+JXZv-+AB97RdwPAeyhuYpgwGFm=xFVYPA@mail.gmail.com>

I have a theory that since this runs every 20 seconds that it is falling
behind somehow. Ulimits is too low, twisted is maybe eating the too many
file handles exception and then trying to close a handle that doesn't
actually exist. Dunno.

On Tue, Dec 17, 2019 at 10:18 AM Robert DiFalco <robert.difalco at gmail.com>
wrote:

> We recently switched from these versions and recently our TLS health check
> using treq seems to be using more and more file handles and getting this
> exception. Additionally our health check gets response time outs at a much
> higher frequency. Any tips on how I would go about debugging this? Or is
> this perhaps a known issue in one of the versions below and I need to
> either bump up or down a release version? Thanks!
>
> twisted 16.6.0 -> 19.19.0
> treq 15.1.0 -> 18.6.0
>
>   File
> "/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
> line 183, in removeWriter
>     EPOLLOUT, EPOLLIN)
>   File
> "/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
> line 160, in _remove
>     self._poller.unregister(fd)
> exceptions.IOError: [Errno 2] No such file or directory
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191217/5d45b88d/attachment.html>

From robert.difalco at gmail.com  Tue Dec 17 14:21:49 2019
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Tue, 17 Dec 2019 13:21:49 -0800
Subject: [Twisted-Python] Weird epoller bug
In-Reply-To: <CAAXGW-x06MGZYMV8+JXZv-+AB97RdwPAeyhuYpgwGFm=xFVYPA@mail.gmail.com>
References: <CAAXGW-yezDBDTcpH7wGL66yq3+M0o-3nPZ=Ux7piwdQZ2LBN8A@mail.gmail.com>
 <CAAXGW-x06MGZYMV8+JXZv-+AB97RdwPAeyhuYpgwGFm=xFVYPA@mail.gmail.com>
Message-ID: <CAAXGW-yMByxY5tcd7a5LZ57UXMRktfqe0vdX+i6wm+EXMG=xiA@mail.gmail.com>

One more thing, there seems to be an error that can occur in _newclient.py
where _finishedRequest will be type None and it's errback will be attempted
to be called. Consider this in _newclient.py. If an exception occurs in in
maybeDeferred before _finishedRequest is assigned, then it will be None
when it is chained elsewhere.

def request(self, request):
    """
    Issue C{request} over C{self.transport} and return a L{Deferred} which
    will fire with a L{Response} instance or an error.

    @param request: The object defining the parameters of the request to
       issue.
    @type request: L{Request}

    @rtype: L{Deferred}
    @return: The deferred may errback with L{RequestGenerationFailed} if
        the request was not fully written to the transport due to a local
        error.  It may errback with L{RequestTransmissionFailed} if it was
        not fully written to the transport due to a network error.  It may
        errback with L{ResponseFailed} if the request was sent (not
        necessarily received) but some or all of the response was lost.  It
        may errback with L{RequestNotSent} if it is not possible to send
        any more requests using this L{HTTP11ClientProtocol}.
    """
    if self._state != 'QUIESCENT':
        return fail(RequestNotSent())

    self._state = 'TRANSMITTING'
    _requestDeferred = maybeDeferred(request.writeTo, self.transport)

    def cancelRequest(ign):
        # Explicitly cancel the request's deferred if it's still trying to
        # write when this request is cancelled.
        if self._state in (
                'TRANSMITTING', 'TRANSMITTING_AFTER_RECEIVING_RESPONSE'):
            _requestDeferred.cancel()
        else:
            self.transport.abortConnection()
            self._disconnectParser(Failure(CancelledError()))
    self._finishedRequest = Deferred(cancelRequest)




On Tue, Dec 17, 2019 at 11:19 AM Robert DiFalco <robert.difalco at gmail.com>
wrote:

> I have a theory that since this runs every 20 seconds that it is falling
> behind somehow. Ulimits is too low, twisted is maybe eating the too many
> file handles exception and then trying to close a handle that doesn't
> actually exist. Dunno.
>
> On Tue, Dec 17, 2019 at 10:18 AM Robert DiFalco <robert.difalco at gmail.com>
> wrote:
>
>> We recently switched from these versions and recently our TLS health
>> check using treq seems to be using more and more file handles and getting
>> this exception. Additionally our health check gets response time outs at a
>> much higher frequency. Any tips on how I would go about debugging this? Or
>> is this perhaps a known issue in one of the versions below and I need to
>> either bump up or down a release version? Thanks!
>>
>> twisted 16.6.0 -> 19.19.0
>> treq 15.1.0 -> 18.6.0
>>
>>   File
>> "/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
>> line 183, in removeWriter
>>     EPOLLOUT, EPOLLIN)
>>   File
>> "/home/foo/foo/local/lib/python2.7/site-packages/twisted/internet/epollreactor.py",
>> line 160, in _remove
>>     self._poller.unregister(fd)
>> exceptions.IOError: [Errno 2] No such file or directory
>>
>>
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191217/eacc6ce7/attachment.html>

From glyph at twistedmatrix.com  Tue Dec 17 22:25:29 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 17 Dec 2019 21:25:29 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <70ba1f8d-c19a-4af9-9c13-946327409cd3@atleastfornow.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
 <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>
 <E76D45BC-E6C7-439B-94CA-6420180726A7@twistedmatrix.com>
 <70ba1f8d-c19a-4af9-9c13-946327409cd3@atleastfornow.net>
Message-ID: <3A76F2E5-2402-4072-8281-839FC591B320@twistedmatrix.com>



> On Dec 16, 2019, at 1:30 PM, Amber Brown (hawkowl) <hawkowl at atleastfornow.net> wrote:
> 
> 
> On 17/12/19 3:40 am, Glyph wrote:
>> The whole point would be to define a concrete end in terms of the final release - and I have no doubt that if we say what the date of the final 2.7 release is, Hawkie will get it out /on the dot/, and not a day past its deadline :).  So no way it would be open-ended.
>> -g
> At this point, I think 1st of January is unrealistic for those that want to do a final drive for things inclusive of 2.7 support.
> 
> Without any better ideas, what if we just say something like 1st March? I don't think much would realistically happen in the rest of March, considering a fair amount of people would be gearing up for PyCon, and then it lets us have a decent amount of space for a release candidate and the potential for any successive RCs without it spilling over into PyCon US, where I have a feeling those of us attending would prefer to look to the future :)

Given the slightly different way our release process works, my understanding of this proposal is "the first release cut after 2020-3-1 will be the last one to support Python 2.7; after that release is cut, non-2.7-compatible work will begin occurring on trunk".  If my understanding is correct, I second it.  3 months after the official EOL seems like enough time for people who really care about legacy support to get their fixes in.

Forward!

-g

From hawkowl at atleastfornow.net  Tue Dec 17 22:48:00 2019
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Wed, 18 Dec 2019 16:48:00 +1100
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <3A76F2E5-2402-4072-8281-839FC591B320@twistedmatrix.com>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
 <CAEeXt4OB289_A7FPcqqooQ3SE63sZJ182h5=_LNsZXEO7G0rtw@mail.gmail.com>
 <BDCF0652-BCD5-4528-8035-63AB21A27017@twistedmatrix.com>
 <872E0EA6-BE10-4C98-9CCC-01E6421269DE@wsanchez.net>
 <E76D45BC-E6C7-439B-94CA-6420180726A7@twistedmatrix.com>
 <70ba1f8d-c19a-4af9-9c13-946327409cd3@atleastfornow.net>
 <3A76F2E5-2402-4072-8281-839FC591B320@twistedmatrix.com>
Message-ID: <02b56c24-39c3-41dd-9383-b6bf7deb496d@www.fastmail.com>



On Wed, 18 Dec 2019, at 16:25, Glyph wrote:
> 
> 
> > On Dec 16, 2019, at 1:30 PM, Amber Brown (hawkowl) <hawkowl at atleastfornow.net> wrote:
> > 
> > 
> > On 17/12/19 3:40 am, Glyph wrote:
> >> The whole point would be to define a concrete end in terms of the final release - and I have no doubt that if we say what the date of the final 2.7 release is, Hawkie will get it out /on the dot/, and not a day past its deadline :).  So no way it would be open-ended.
> >> -g
> > At this point, I think 1st of January is unrealistic for those that want to do a final drive for things inclusive of 2.7 support.
> > 
> > Without any better ideas, what if we just say something like 1st March? I don't think much would realistically happen in the rest of March, considering a fair amount of people would be gearing up for PyCon, and then it lets us have a decent amount of space for a release candidate and the potential for any successive RCs without it spilling over into PyCon US, where I have a feeling those of us attending would prefer to look to the future :)
> 
> Given the slightly different way our release process works, my 
> understanding of this proposal is "the first release cut after 2020-3-1 
> will be the last one to support Python 2.7; after that release is cut, 
> non-2.7-compatible work will begin occurring on trunk".  If my 
> understanding is correct, I second it.  3 months after the official EOL 
> seems like enough time for people who really care about legacy support 
> to get their fixes in.
> 
> Forward!
> 
> -g

Yes, this is it. Release is what is on trunk, and only regression fixes go into the RCs, no new bug fixes past rc1.

- Amber


From trac at twistedmatrix.com  Sun Dec 22 00:05:36 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Dec 2019 07:05:36 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1576998336.98.834170802875163858@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191222/c57d3bb6/attachment.htm>

From glyph at twistedmatrix.com  Sun Dec 22 16:58:39 2019
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Dec 2019 15:58:39 -0800
Subject: [Twisted-Python] operational visibility
In-Reply-To: <9A3E15D4-C9CE-4784-AB4F-F15DCD1C7754@twistedmatrix.com>
References: <9A3E15D4-C9CE-4784-AB4F-F15DCD1C7754@twistedmatrix.com>
Message-ID: <D274A371-B0C1-4062-81D1-930D58EC0C64@twistedmatrix.com>



> On Nov 11, 2019, at 11:12 PM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> At twistedmatrix.com <http://twistedmatrix.com/>, we dogfood a bunch of Twisted software: our DNS server (primary and secondary!), our web server, even a little bit of email stuff here and there.  And we have our own structured logging system to make it, ahem, "easy" to put logs into some kind of a system that can tell you what Twisted is doing.
> 
> But uhâ¦ we don't get a lot of value from this because the tracebacks just go into disk files that nobody ever looks at.
> 
> Does anyone know if, say, Sentry supports a free tier for open source projects, or something like that?  Or any other error-tracking provider even vaguely compatible with Twisted might do something like that?  It would be nice to surface and fix tracebacks that affect our own infrastructure before they hit our users.

Following up on this: Armin Ronacher graciously gifted a Sponsored sentry subscription (happy holidays!) for the Twisted project.  I have sent invites to a couple of other maintainers, but if you would like access, let me know.

Right now, nothing sends tracebacks to Sentry yet, so the first step would be adding some code / deployment secrets to let our various services do that.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191222/3cf2a59b/attachment.htm>

From cjwatson at debian.org  Mon Dec 23 08:02:57 2019
From: cjwatson at debian.org (Colin Watson)
Date: Mon, 23 Dec 2019 15:02:57 +0000
Subject: [Twisted-Python] Conch Ed25519: testing advice wanted
Message-ID: <20191223150257.GS3701@riva.ucam.org>

Hi,

I've been working for a while on adding Ed25519 SSH key support to
Conch.  This is almost done: if and when
https://github.com/twisted/twisted/pull/1210 lands, everything should
work provided that you're using the cryptography wheel or otherwise have
a new enough OpenSSL to support X25519 (for curve25519-sha256 key
exchange) and Ed25519 (for the key format itself).

My professional interest in having this feature is for Launchpad, and in
that case we want to use the Ubuntu-packaged OpenSSL (since we're in the
same company as the security team supporting it, after all).  The
awkward thing is then that we're currently on Ubuntu 16.04, which has
OpenSSL 1.0.2g, which is too old to support either X25519 or Ed25519.
Ubuntu 18.04 has fortunately been updated to OpenSSL 1.1.1, which
supports X25519, but cryptography's Ed25519 support requires OpenSSL
1.1.1b.  I've asked about getting 18.04 updated to 1.1.1b or newer, but
as I understand it, despite the innocuous-looking change in version
number, this is a pretty complicated endeavour and may well not happen.

In https://github.com/twisted/twisted/pull/644, I brought up the
possibility of using PyNaCl as an alternative implementation to cope
with this sort of case, and Glyph seemed generally supportive of that
idea, so I've been looking into the details.  Using PyNaCl as an X25519
alternative seems unfortunately difficult, as it only exposes a wrapped
version of X25519 which isn't quite what we need, so I'm assuming that
I'll need to update to Ubuntu 18.04 and have been confining my
investigations to just the Ed25519 compatibility portion.

The actual code in this case isn't difficult: it's only 50 lines or so
for versions of nacl.signing.SigningKey and nacl.signing.VerifyKey which
implement cryptography's Ed25519PrivateKey and Ed25519PublicKey
interfaces.  The bit I'm stuck on is how best to test this.  Of course I
can easily enough make some tests pretend that cryptography doesn't
support Ed25519, but Twisted doesn't currently depend on PyNaCl, and it
doesn't need it for anything other than this edge-case compatibility
layer.

I can see a few options:

 * Make Twisted[conch] depend on PyNaCl, and use that to test the
   compatibility layer.  This would work, but it seems a bit rude.

 * Add extra test matrix entries with different dependencies to test the
   PyNaCl-based compatibility code.  This seems kind of excessive and
   awkward, not to mention fiddly to maintain just for this.

 * Add a Twisted[test] extra or similar for things that are only needed
   by the test suite.

 * Just don't test the compatibility layer.  I don't imagine this would
   be a popular option.

Any preferences, or any other suggestions?

-- 
Colin Watson                                       [cjwatson at debian.org]


From cjwatson at debian.org  Mon Dec 23 08:15:15 2019
From: cjwatson at debian.org (Colin Watson)
Date: Mon, 23 Dec 2019 15:15:15 +0000
Subject: [Twisted-Python] Conch Ed25519: testing advice wanted
In-Reply-To: <20191223150257.GS3701@riva.ucam.org>
References: <20191223150257.GS3701@riva.ucam.org>
Message-ID: <20191223151514.GT3701@riva.ucam.org>

On Mon, Dec 23, 2019 at 03:02:57PM +0000, Colin Watson wrote:
> Using PyNaCl as an X25519 alternative seems unfortunately difficult,
> as it only exposes a wrapped version of X25519 which isn't quite what
> we need,

Though after I wrote this I see that nacl.bindings.crypto_scalarmult
exists and should do roughly what I need there, although it's not clear
to what extent it's a private API.  That's maybe tolerable for something
that's only for compatibility and can eventually go away.  I don't think
this changes the analysis about testing, though.

-- 
Colin Watson                                       [cjwatson at debian.org]


From trac at twistedmatrix.com  Sun Dec 29 00:05:28 2019
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Dec 2019 07:05:28 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1577603128.84.2058519267260757204@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20191229/4a27ca0a/attachment.htm>

From twm at freecog.net  Mon Dec 30 17:29:23 2019
From: twm at freecog.net (Tom Most)
Date: Mon, 30 Dec 2019 16:29:23 -0800
Subject: [Twisted-Python] The Python 2.7 Plan
In-Reply-To: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
References: <16AF9ADF-84D6-409F-8FE8-C0736ECFFF43@wsanchez.net>
Message-ID: <32952d69-0b73-4960-be9b-c3d940c7179d@www.fastmail.com>

On Wed, Dec 11, 2019, at 1:06 PM, Wilfredo SÃ¡nchez Vega wrote:
>  [snip]
> 
>   Glyph also notes some infrastructure we use that is blocked on code fixes:
> 
>   - Trac: https://trac.edgewall.org/ticket/12130
>     Looks like we can leave the Trac instance running in a Twisted 19  WCGI server until they fix that.

Note that multipart requests (relevant for Trac if we want to support ticket attachments) are broken on Python 3.7+ due to some questionable changes to the cgi module. We may consider this blocking if we aim to transition to 3.7+. There is a fix here: https://github.com/twisted/twisted/pull/1207

>   - DNS: https://twistedmatrix.com/trac/ticket/9496
>     I'd suggest we do the same as with Trac until this is fixed, but Glyph disagrees.
>
> [snip] I would suggest that our next release is the final release for 2.7.  
> This would require a fix to the DNS issue #9496.

I have a fix for this ready for review here: https://github.com/twisted/twisted/pull/1212

---Tom


