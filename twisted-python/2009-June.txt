From patrick.thomson at gmail.com  Mon Jun  1 13:38:39 2009
From: patrick.thomson at gmail.com (Patrick Thomson)
Date: Mon, 1 Jun 2009 18:38:39 +0100
Subject: [Twisted-Python] offer of adding IRCD support to
	words.protocol.irc
In-Reply-To: <20090519172608.21531.657862391.divmod.quotient.23394@henry.divmod.com>
References: <5eaa38050905191017v3bd0eb28jad1ef1b152b51c1c@mail.gmail.com>
	<20090519172608.21531.657862391.divmod.quotient.23394@henry.divmod.com>
Message-ID: <5eaa38050906011038v4ea7fb62l6cf5a9305babd9fe@mail.gmail.com>

On close inspection, the code that your command runs (from
twisted.words.service) happens to be the IRCD code that I thought was
missing from twisted, and is adequate for my purposes. Everything else
I need to write now is wildly divergent from the goal of "running an
irc server".

So, uh, my bad, I just didn't read the manual.


2009/5/19 Jean-Paul Calderone <exarkun at divmod.com>:
> On Tue, 19 May 2009 18:17:01 +0100, Patrick Thomson <patrick.thomson at gmail.com> wrote:
>>I'm currently about to embark on building something from twisted which
>>has an IRCD, and I have found the capacity to run IRC servers is
>>lacking, in contrast to the excellent client/bot backend code.
>>
>>I've found several other twisted projects already implement an IRCD,
>>and whilst I'm reinventing the wheel, I may as well go the extra mile
>>to get my code suitable for inclusion.
>
> Hi Patrick,
>
> Cool!
>
> I want to point you at what happens when you run this command:
>
> ?twistd -n words --irc-port 6667 --group irctest --auth=memory:username:password
>
> Ideally, an IRCD in Twisted would be based on this (which certainly needs
> some work).
>
>>I wouldn't be asking for a lot, just some general guidelines (e.g. I
>>know my patch probably won't be accepted
>>without test code as well).
>
> Tests are probably the most important single thing. ?We also ask for full
> docstring coverage (ie, docstrings for every class, method, function). ?It
> would also be best if you could structure your contributions incrementally.
> Twenty patches of a couple hundred lines each is vastly preferable to one
> patch of several thousand lines.
>
> You can find much more detailed information on the wiki,
>
> ?http://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
> If anything there needs clarification, please ask. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Patrick



From brandon.mcginty at gmail.com  Mon Jun  1 15:30:19 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Mon, 01 Jun 2009 15:30:19 -0400
Subject: [Twisted-Python] Twisted Question
In-Reply-To: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
References: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
Message-ID: <4A242C4B.5080905@gmail.com>

I know I'm missing something in that FAQ entry...I'm just not sure what.

Thanks,
Brandon McGinty



Jean-Paul Calderone wrote:
> On Sun, 31 May 2009 19:12:56 -0400, Brandon McGinty <brandon.mcginty at gmail.com> wrote:
>> I'll give that a shot...unfortunately, the data is only accessible via
>> an irc server and protocol.
>> Hopefully I can gleen some useful information about cross-protocol
>> communication by lokng at the source.
> 
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother answers a question very similar to yours.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
--
Brandon McGinty
Email:brandon.mcginty at gmail.com
Tel:(602)-904-6548
SMS:(602)-904-6548
Skype:brandon.mcginty
MSN:brandon_mcginty at hotmail.com



From brandon.mcginty at gmail.com  Mon Jun  1 15:56:57 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Mon, 01 Jun 2009 15:56:57 -0400
Subject: [Twisted-Python] Twisted Question
In-Reply-To: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
References: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
Message-ID: <4A243289.4030909@gmail.com>

Thanks to your post, something just clicked for me. I've got it working, 
and life is good.
I thank you all for your help.
Sincerely,
Brandon McGinty



Jean-Paul Calderone wrote:
> On Sun, 31 May 2009 19:12:56 -0400, Brandon McGinty <brandon.mcginty at gmail.com> wrote:
>> I'll give that a shot...unfortunately, the data is only accessible via
>> an irc server and protocol.
>> Hopefully I can gleen some useful information about cross-protocol
>> communication by lokng at the source.
> 
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother answers a question very similar to yours.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
--
Brandon McGinty
Email:brandon.mcginty at gmail.com
Tel:(602)-904-6548
SMS:(602)-904-6548
Skype:brandon.mcginty
MSN:brandon_mcginty at hotmail.com



From drew.smathers at gmail.com  Tue Jun  2 08:16:21 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 2 Jun 2009 08:16:21 -0400
Subject: [Twisted-Python] Reactor callback from the wrong thread
In-Reply-To: <24e981170905290002j6f5f483erd36e0b5b6257ac4d@mail.gmail.com>
References: <24e981170905270608p25f6057fl2ad2b7f71cc2fac6@mail.gmail.com>
	<20090527154322.21531.781574174.divmod.quotient.26327@henry.divmod.com>
	<24e981170905280504x7fa0dedexf91c45295dee706e@mail.gmail.com>
	<1243516911.20948.215.camel@pintsize>
	<24e981170905290002j6f5f483erd36e0b5b6257ac4d@mail.gmail.com>
Message-ID: <368574aa0906020516m6af9c806ta1990b37aa5d5603@mail.gmail.com>

On Fri, May 29, 2009 at 3:02 AM, Lars Ivar Igesund <larsivi at gmail.com> wrote:
> Thanks for the tip,
>
> however - in which version was blockingCallFromThread added? It did
> not wish to be imported from the version I installed via Ubuntu which
> appears to be 2.5.0. (Bit confused about the version numbering though
> since Twisted appears to be at something like 8.2)
>

Well, using Ubuntu, you should find the new versioning scheme somewhat
familiar ;)

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whydidtheversionnumbergofrom2.5to8.x

-Drew



From michaelnt at gmail.com  Tue Jun  2 11:09:00 2009
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 2 Jun 2009 16:09:00 +0100
Subject: [Twisted-Python] Question about a custom byte oriented TCP protocol
Message-ID: <4d6ba3de0906020809g4a0a773bsdedaeb57273a627e@mail.gmail.com>

Hi,
   I'm trying to use twisted to talk to an existing system that uses a byte
oriented protocol stuffed inside a TCP packet. I have implemented this using
the IntNStringReceiver modified to look at some bytes to calculate the size
of the string to receive.

For simple test cases where I send a single packet this works but if I send
multiple requests they all end up in the same tcp packet which the existing
server doesn't like. How can I ensure that only a single command\string is
sent per tcp packet?

I tried TCP No Delay but that didn't seem to help

Regards, Michael
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090602/75644dec/attachment.htm 

From tubaman at fattuba.com  Tue Jun  2 12:07:38 2009
From: tubaman at fattuba.com (Ryan Nowakowski)
Date: Tue, 2 Jun 2009 11:07:38 -0500
Subject: [Twisted-Python] wxreactor and win32eventreactor
Message-ID: <20090602160738.GC8298@fattuba.com>

I'm trying to use twisted's SerialPort stuff in my Win32 wxPython app.
I'm using the wxreactor, however I'm getting this error:

  AttributeError: 'WxReactor' object has no attribute 'addEvent'

When I switch to the win32eventreactor my serial port code works fine
but then of course, the GUI won't work.  Any idea how to get SerialPort
working with wxreactor on Windows?

- Ryan



From exarkun at divmod.com  Tue Jun  2 12:40:08 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jun 2009 12:40:08 -0400
Subject: [Twisted-Python] Question about a custom byte oriented TCP
 protocol
In-Reply-To: <4d6ba3de0906020809g4a0a773bsdedaeb57273a627e@mail.gmail.com>
Message-ID: <20090602164008.22176.1001892010.divmod.quotient.1094@henry.divmod.com>

On Tue, 2 Jun 2009 16:09:00 +0100, Michael Thompson <michaelnt at gmail.com> wrote:
>Hi,
>   I'm trying to use twisted to talk to an existing system that uses a byte
>oriented protocol stuffed inside a TCP packet. I have implemented this using
>the IntNStringReceiver modified to look at some bytes to calculate the size
>of the string to receive.
>
>For simple test cases where I send a single packet this works but if I send
>multiple requests they all end up in the same tcp packet which the existing
>server doesn't like. How can I ensure that only a single command\string is
>sent per tcp packet?

In general, this is impossible.  TCP does not work that way.

For a specific application, you may be able to achieve this by only sending
another message after you *know* the server has received an earlier message.
You can probably achieve this if the server sends you back an acknowledgment
of each message - then you wait to receive an acknowledgment before sending
another message.

However, the purpose of IntNStringReceiver - arguably the sole purpose - is
to provide a "framing" layer for the messages being exchanged with it.  This
framing layer exists so that if messages do get squished together (or broken
up, as may also happen) by TCP, they can still be properly interpreted.  If
the server breaks when multiple commands/strings are received by it at once,
then perhaps it is broken and needs to be fixed.

Jean-Paul



From exarkun at divmod.com  Tue Jun  2 12:44:15 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jun 2009 12:44:15 -0400
Subject: [Twisted-Python] wxreactor and win32eventreactor
In-Reply-To: <20090602160738.GC8298@fattuba.com>
Message-ID: <20090602164415.22176.71073856.divmod.quotient.1098@henry.divmod.com>

On Tue, 2 Jun 2009 11:07:38 -0500, Ryan Nowakowski <tubaman at fattuba.com> wrote:
>I'm trying to use twisted's SerialPort stuff in my Win32 wxPython app.
>I'm using the wxreactor, however I'm getting this error:
>
>  AttributeError: 'WxReactor' object has no attribute 'addEvent'
>

Indeed, as you've discovered, the serial support on Windows only works with
win32eventreactor.

>When I switch to the win32eventreactor my serial port code works fine
>but then of course, the GUI won't work.  Any idea how to get SerialPort
>working with wxreactor on Windows?

I think this would involve porting wxreactor to be based on win32eventreactor
instead of on selectreactor.  Ideally, this would be done generally so that
wxreactor could be used with /any/ other reactor, rather than being specific
to win32eventreactor, but it wouldn't necessarily have to be done that way.

Jean-Paul



From asb.bush at gmail.com  Tue Jun  2 15:20:22 2009
From: asb.bush at gmail.com (Aaron Bush)
Date: Tue, 2 Jun 2009 15:20:22 -0400
Subject: [Twisted-Python] Guidance on Proxy-type Application
In-Reply-To: <20090528225800.12555.827283410.divmod.xquotient.11675@weber.divmod.com>
References: <20090528225800.12555.827283410.divmod.xquotient.11675@weber.divmod.com>
Message-ID: <5a8f2d170906021220y11c7115fu2ee80569585b3fc8@mail.gmail.com>

glyph,

Sorry for the delayed response.  I wanted to thank you for providing such a
complete example.  This is excellent.  Now I just need to wrap by head
around how it all goes together and works.

The logic of the queue append and pop of a deferred in ProxyClient
forwardLine and lineRecieve are throwing me for a loop.  I'll keep tracing
it and get it down.

Thanks Again!
-ab

On Thu, May 28, 2009 at 6:58 PM, <glyph at divmod.com> wrote:

>
> On 01:23 am, asb.bush at gmail.com wrote:
>
>> I have just started to look at the Twisted framework and would like to put
>> it
>> to use for a new project I am working on.  Not being very familiar with
>> the
>> framework and fairly new to Python in general I would like to ask a
>> design/architecture question.  (I have written similar applications in C
>> but
>> would prefer to start this in the right direction and not write Python
>> like
>> C.)
>>
>
> Thanks for asking!
>
> I apologize for the delay in my answer.  I started writing up a simple
> example (attached) but was discouraged to find that it was 100 lines long
> and required too much explaining.
>
> Then I started documenting it and explaining every line but that was a very
> long, tedious message.  So, it doesn't have much in the way of explanation;
> I hope you will find it useful regardless.
>
>> The application has the following model:
>>
>
>  Many clients connect to the Application and prefer to leave the connection
>> open.  They will send messages across this connection.  They will expect
>> to
>> get a message back at some point later, they do not wait for a response
>> (async).  The clients are already coded (legacy) and just need to send
>> their
>> proprietary protocol to the new Application (written using Twisted).
>>
>
> This is *almost* a FAQ.  At least, you may find this to be a useful answer:
>
> <
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
> >
>
>> The Twisted application will take the data from the clients and do some
>> transformation on it then send the message on to another server (3rd
>> party).
>> This connection to "another" server must be a single connection, not one
>> connection per client.  This connection should also be persistent and not
>> opened/closed for each client message sent.  Ideally if the 3rd party
>> server
>> is down then I would also not accept client connections as the messages
>> are
>> time sensitive and should not be stored and forwarded.  At some point the
>> 3rd
>> part will send a message back and the Application will route it back to
>> the
>> original source.  Basically request/reply pattern.
>>
>
> The example that I've attached does basically this.  Run it and then run
> 'telnet localhost 4322', and type some lines; you will see that they are
> transformed and echoed back to you, both by the proxy and by the protocol
> being proxied.
>
> At a high level, the answer to your question is so simple that it's hard to
> express.  Basically, you just need to have all the relevant objects having
> references to each other, and calling methods to achieve the desired effect.
>  The less magic, the better.
>
> More precisely, you need an object responsible for managing your outgoing
> connections to your legacy server, so that it can handle disconnection and
> reconnection, queueing messages and so on.  Then you need your proxy server
> factory to hold a reference to that object, so that it can create references
> from each proxy server protocol connection object to the connection manager.
>
> This is related to another recent thread - you can see my message in that
> thread here:
>
>   http://thread.gmane.org/gmane.comp.python.twisted/18377/focus=18385
>
>> I have been reading through the archives and the twisted docs and have
>> also
>> looked over the Hex-dump port-forwarding recipe but not found anything
>> that
>> explains how to use twisted for this model.  Hex-dump is close but
>> opens/closes the connection to the server on each client connection.
>>
>
> I'm not sure why hex-dump port-forwarding is particularly relevant to this
> example.  Is it just because this is an application that connects from one
> host to another?
>
>> I am thinking that there will be two Factories [and two protocols: 1) for
>> clients and 2) for 3rd party].  I am not sure how to best establish both
>> the
>> listening factory and the client to 3rd party factory.  Once they are
>> established what is the preferred way in Twisted to pass a message from
>> one
>> protocol to another?
>>
>
> This part of your question is almost exactly the FAQ I mentioned above :).
>  To reiterate that answer, you just need to have references between objects,
> and call methods on the objects you want to do stuff.
>
> If you have a client connection object, just get a reference to that from
> the relevant server connection object and call methods on the client object
> to emit messages on the client protocol, handling any responses
> appropriately.  Deferreds can help with that latter part.
>
> It is always better if you can establish that reference as simply as
> possible; for example, by passing parameters to the __init__ of various
> classes.  Again, for reasons that have nothing to do with Twisted
> specifically, it's a bad idea to try to establish these references by having
> global variables floating around.
>
> Here's a very very simple example of the "good way" to propagate some data
> to protocol instances that need it:
>
>   class MyProtocol(Protocol):
>       def __init__(self, data):
>           self.data = data
>
>   class MyFactory(Factory):
>       def __init__(self, data):
>           self.data = data
>
>       def buildProtocol(self, addr):
>           return MyProtocol(self.data)
>
>   reactor.listenTCP(8765, MyFactory("some data"))
>
> and here's a simple example of a really bad way (don't do this!):
>
>   class MyProtocol(Protocol):
>       def connectionMade(self):
>           self.bleh = bleh
>
>   bleh = "some data"
>   f = Factory()
>   f.protocol = MyProtocol
>   reactor.listenTCP(9876, f)
>
> Even in C, I'm pretty sure it's better style to pass structures to
> functions than to abuse piles of local variables :).  I only illustrate this
> bad style here because it seems to be a common antipattern.  The Protocol
> class itself doesn't take any parameters to __init__, and Twisted's users
> don't always realize that protocols and factories and so on are just regular
> objects, with no special rules; they just get methods called on them by the
> reactor.
>
>> Any pointers or sample code that you can offer is greatly appreciated. I
>> would really like to cook this in Twisted and not go back to the C way.
>>
>
> Based on what you've said so far, I think you're basically on the right
> track.  Good luck!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090602/ef3801aa/attachment.htm 

From dave.conradie at googlemail.com  Tue Jun  2 22:55:23 2009
From: dave.conradie at googlemail.com (David Conradie)
Date: Wed, 03 Jun 2009 14:55:23 +1200
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <4A25E61B.5050900@googlemail.com>

I'm fairly new to Python and very new to Twisted.   I find I learn new 
material best from a book, so although I know there's lots of great 
documentation and examples on twistedmatrix.com, I was considering 
getting O'Reilly's Twisted book ('Twisted Network Programming 
Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I 
was wondering if it's still a worthwhile purchase - I'd guess Twisted 
has moved a good bit since the book was written.  Any opinions? 

Thanks

/David Conradie/
<gtalk:dave.conradie at googlemail.com?message>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090603/2e1e30b7/attachment.htm 

From ssoni at nextdigital.com  Tue Jun  2 22:57:55 2009
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 3 Jun 2009 12:57:55 +1000
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <4A25E61B.5050900@googlemail.com>
References: <4A25E61B.5050900@googlemail.com>
Message-ID: <1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>

You are right David.

 

I read that book and that book is definitely not for the beginner python
programmers.

 

And, yes, that book is not up to date as well.

 

Cheers.

 

Surya

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of David
Conradie
Sent: Wednesday, 3 June 2009 12:55 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Twisted book(s)?

 

I'm fairly new to Python and very new to Twisted.   I find I learn new
material best from a book, so although I know there's lots of great
documentation and examples on twistedmatrix.com, I was considering
getting O'Reilly's Twisted book ('Twisted Network Programming
Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
was wondering if it's still a worthwhile purchase - I'd guess Twisted
has moved a good bit since the book was written.  Any opinions?  

Thanks

David Conradie
<gtalk:dave.conradie at googlemail.com?message> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090603/f041d02f/attachment.htm 

From kevin.horn at gmail.com  Wed Jun  3 00:15:59 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 2 Jun 2009 23:15:59 -0500
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>
References: <4A25E61B.5050900@googlemail.com>
	<1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>
Message-ID: <562bcc10906022115h1b353cfah9bc1db1ec7500fc8@mail.gmail.com>

While its a bit out of date now, and it certainly could have been better, I
found the book useful to get me over the initial learning curve hump that
twisted is famous for.

And it IS the only Twisted book out there (afaik).

Kevin Horn

On Tue, Jun 2, 2009 at 9:57 PM, Sury Soni <ssoni at nextdigital.com> wrote:

>  You are right David.
>
>
>
> I read that book and that book is definitely not for the beginner python
> programmers.
>
>
>
> And, yes, that book is not up to date as well.
>
>
>
> Cheers.
>
>
>
> Surya
>
>
>
> *From:* twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] *On Behalf Of *David Conradie
> *Sent:* Wednesday, 3 June 2009 12:55 PM
> *To:* twisted-python at twistedmatrix.com
> *Subject:* [Twisted-Python] Twisted book(s)?
>
>
>
> I'm fairly new to Python and very new to Twisted.   I find I learn new
> material best from a book, so although I know there's lots of great
> documentation and examples on twistedmatrix.com, I was considering getting
> O'Reilly's Twisted book ('Twisted Network Programming Essentials' by Abe
> Fettig).  But that book dates back to Oct 2005 so I was wondering if it's
> still a worthwhile purchase - I'd guess Twisted has moved a good bit since
> the book was written.  Any opinions?
>
> Thanks
>
> *David Conradie*
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090602/277232be/attachment.htm 

From robert at gravina.com  Wed Jun  3 01:12:31 2009
From: robert at gravina.com (Robert Gravina)
Date: Wed, 3 Jun 2009 14:12:31 +0900
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>

> I'm fairly new to Python and very new to Twisted. ? I find I learn new
> material best from a book, so although I know there's lots of great
> documentation and examples on twistedmatrix.com, I was considering
> getting O'Reilly's Twisted book ('Twisted Network Programming
> Essentials' by Abe Fettig). ?But that book dates back to Oct 2005 so I
> was wondering if it's still a worthwhile purchase - I'd guess Twisted
> has moved a good bit since the book was written. ?Any opinions?

I got that book and to be honest, didn't find it very useful due to it
being a nutshell book - it can't (due to size) go into much detail in
each section and so I found the online documentation/tutorials were a
better resource.

A more detailed Twisted book would be awesome though! I think
pragprog.com share 50% of the profits with authors (and do ebooks and
betas too), so maybe someone might be interested in writing it :)

Of course noone would complain about a community edited book like what
the Django project has, either. :)

Robert



From rlotun at gmail.com  Wed Jun  3 03:26:53 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Wed, 3 Jun 2009 08:26:53 +0100
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
References: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
Message-ID: <95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>

You may also find Foundations of Python Network Programming useful -
it has large sections on twisted, particularly IMAP
(http://www.complete.org/publications/pynet/)

You can also read these useful reviews of the above as well as the
O'Reilly book, written by a Twisted dev:
http://eagain.net/articles/review-pynet/
http://eagain.net/articles/review-snakeball/

Cheers,
Reza

On Wed, Jun 3, 2009 at 6:12 AM, Robert Gravina <robert at gravina.com> wrote:
>> I'm fairly new to Python and very new to Twisted. ? I find I learn new
>> material best from a book, so although I know there's lots of great
>> documentation and examples on twistedmatrix.com, I was considering
>> getting O'Reilly's Twisted book ('Twisted Network Programming
>> Essentials' by Abe Fettig). ?But that book dates back to Oct 2005 so I
>> was wondering if it's still a worthwhile purchase - I'd guess Twisted
>> has moved a good bit since the book was written. ?Any opinions?
>
> I got that book and to be honest, didn't find it very useful due to it
> being a nutshell book - it can't (due to size) go into much detail in
> each section and so I found the online documentation/tutorials were a
> better resource.
>
> A more detailed Twisted book would be awesome though! I think
> pragprog.com share 50% of the profits with authors (and do ebooks and
> betas too), so maybe someone might be interested in writing it :)
>
> Of course noone would complain about a community edited book like what
> the Django project has, either. :)
>
> Robert
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From kevin.horn at gmail.com  Wed Jun  3 03:48:33 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 3 Jun 2009 02:48:33 -0500
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>
References: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
	<95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>
Message-ID: <562bcc10906030048i385bf83ds7fe63e8e348eb38d@mail.gmail.com>

Yeah, those reviews are excellent, but I couldn't remember where I'd read
them.

The O'Reilly book is ok if you want a lot of VERY basic examples of how to
do stuff in Twisted.  I also found the introduction somewhat useful, even
though I knew most of it.

I haven't read the Foundations of Python Network Programming book, but I've
flipped through it a couple of ties at the bookstore.
I decided against it, because I basically knew all the stuff in the
non-twisted chapters, and I didn't want to buy the whole book for just the
Twisted stuff.  Since you're new to Python as well as Twisted it would
probably be much more useful to you.  I've heard lots of good things about
it.

Either way, though, you aren't going to get a whole lot more than an intro
to Twisted in either one, mostly because, well, Twisted is HUGE.  It does a
vast number of things, lots of it you'll probably never have to deal
with...except when you do.

The online docs are pretty good as far as accuracy...most of it is pretty up
to date (or at least up to date ENOUGH), but it's organization is kind of
wacky.  At least is doesn't fit my brain very well...I have trouble finding
things.

I would love to see another Twisted book, but it's kind of a small niche to
get publishers to go for.  Maybe an online book, or something published
on-demand could work, though.

Kevin

On Wed, Jun 3, 2009 at 2:26 AM, Reza Lotun <rlotun at gmail.com> wrote:

> You may also find Foundations of Python Network Programming useful -
> it has large sections on twisted, particularly IMAP
> (http://www.complete.org/publications/pynet/)
>
> You can also read these useful reviews of the above as well as the
> O'Reilly book, written by a Twisted dev:
> http://eagain.net/articles/review-pynet/
> http://eagain.net/articles/review-snakeball/
>
> Cheers,
> Reza
>
> On Wed, Jun 3, 2009 at 6:12 AM, Robert Gravina <robert at gravina.com> wrote:
> >> I'm fairly new to Python and very new to Twisted.   I find I learn new
> >> material best from a book, so although I know there's lots of great
> >> documentation and examples on twistedmatrix.com, I was considering
> >> getting O'Reilly's Twisted book ('Twisted Network Programming
> >> Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
> >> was wondering if it's still a worthwhile purchase - I'd guess Twisted
> >> has moved a good bit since the book was written.  Any opinions?
> >
> > I got that book and to be honest, didn't find it very useful due to it
> > being a nutshell book - it can't (due to size) go into much detail in
> > each section and so I found the online documentation/tutorials were a
> > better resource.
> >
> > A more detailed Twisted book would be awesome though! I think
> > pragprog.com share 50% of the profits with authors (and do ebooks and
> > betas too), so maybe someone might be interested in writing it :)
> >
> > Of course noone would complain about a community edited book like what
> > the Django project has, either. :)
> >
> > Robert
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Reza Lotun
> +44 (0)7521 310 763
> rlotun at gmail.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090603/7f289a5b/attachment.htm 

From orsenthil at gmail.com  Wed Jun  3 12:25:27 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 3 Jun 2009 21:55:27 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
Message-ID: <20090603162527.GA15317@ubuntu.ubuntu-domain>

Hello Twisted Developers/Users,

This is my first concurrent application design and my first trial with
twisted. I have read the documentation and understand where twisted
plays its part. Unfortunately, I could not directly relate it to my
requirements and hence, could not go forward with designing and
building on top using the examples as a reference.

I need your guidance in helping me design an application.

My Application Details:

1) I need to constantly monitor a particular directory for new files.
2) Whenever a new file is dropped; I read that file and get
information on where to collect data from that is a) another machine b)
machine2-different method c) database.
3) I collect data from those machines and store it.

The data is huge and I need the three processes a, b, c to be
non-blocking, and I can just do a function call like do_a(), do_b(),
do_c() to perform them.

For 1) to constantly monitor a particular directory for new files, I
am doing something like this:

while True:
        check_for_new_files()

http://paste.pocoo.org/show/120824/

My Question: Can this be designed in way that looking for new files is
also asynchronous activity? 

What will be the deferred in this case?

# my ideas:

- I might define a deferred as, whenever the contents of the directory
  is not matching the previous contents, return the new file which was
  added.
- I can then add a callback to read the newfile.


Now, after reading the contents, I will have to do a non-blocking call
to fetch data, either using fun_a, fun_b or fun_b. How should I
associate this requirement to deferred/callback pattern?

Any guidance would be helpful.

Thanks,
Senthil




From glyph at divmod.com  Wed Jun  3 13:46:55 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 03 Jun 2009 17:46:55 -0000
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <4A25E61B.5050900@googlemail.com>
References: <4A25E61B.5050900@googlemail.com>
Message-ID: <20090603174655.12555.1028258462.divmod.xquotient.12298@weber.divmod.com>




On 02:55 am, dave.conradie at googlemail.com wrote:
>I'm fairly new to Python and very new to Twisted.   I find I learn new 
>material best from a book, so although I know there's lots of great 
>documentation and examples on twistedmatrix.com, I was considering 
>getting O'Reilly's Twisted book ('Twisted Network Programming 
>Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I 
>was wondering if it's still a worthwhile purchase - I'd guess Twisted 
>has moved a good bit since the book was written.  Any opinions?

There are a few core concepts which you need to understand to use 
Twisted which the book still covers fairly well.  I would still 
recommend getting it.  However, there are tons of features in Twisted 
not covered by the book, some new, some old.  You will still need to 
supplement the book's introduction to Twisted with online API 
documentation.



From andrewfr_ice at yahoo.com  Wed Jun  3 13:36:20 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 3 Jun 2009 10:36:20 -0700 (PDT)
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <921406.38429.qm@web34206.mail.mud.yahoo.com>


Hi David:

Message: 5
Date: Wed, 03 Jun 2009 14:55:23 +1200
From: David Conradie <dave.conradie at googlemail.com>
Subject: [Twisted-Python] Twisted book(s)?
To: twisted-python at twistedmatrix.com
Message-ID: <4A25E61B.5050900 at googlemail.com>
Content-Type: text/plain; charset="iso-8859-1"

>I'm fairly new to Python and very new to Twisted.   I find I learn new
>material best from a book, so although I know there's lots of great
>documentation and examples on twistedmatrix.com, I was considering
>getting O'Reilly's Twisted book ('Twisted Network Programming
>Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
>was wondering if it's still a worthwhile purchase - I'd guess Twisted
>has moved a good bit since the book was written.  Any opinions?

Well the Abe Fettig book got me over the initial hump at a critical time, so I am grateful the book was out there. Also I really enjoyed the introduction by Glyph. 

>From what I recall, the Python involved in the examples isn't 
complex(it is 2005 so I don't believe you are going to be 
seeing more exotic Python language constructs: i.e., generators, 
comprehensions, decorators). I found Fettig's explanations of HTTP 
client, server, resources, and the other protocols adequate. It is 
really important to run and modify the examples to get a feel for what 
is happening. Again, from what I recall, the main place I think 
Fettig's book falls flat is its explanation of creating a new protocol. Attending Steve Holden's legendary "Teach Me Twisted" pycon 2008 talk gave me a better clue (one of these days I should write a protocol).


If I had to provide Fettig with advice on a second edition, my recommendations:

1) Show an example with a nested call, for example a HTTP Request Handler making a client.getPage() call, processing it, and returning the result. This is a common idiom and it would get more into depth about how deferreds work.

1B) Get more into the relationship between protocols and the reactor: I was really confused over why some protocols used a return, others returned a deferred, and some returned None. 

1C) Use more Twisted idioms, i.e., using inner functions for defining callbacks.

2) Use class relationship diagrammes to show the relationship between various Twisted objects.

3) Show Twisted control flow. I tried to do this in my Pycon 2008 talk (which I need to rewrite one of these days).

4) Use WAY MORE DIAGRAMMES!!!!

Cheers,
Andrew












      



From minesh at gmail.com  Wed Jun  3 13:43:34 2009
From: minesh at gmail.com (Minesh Patel)
Date: Wed, 3 Jun 2009 10:43:34 -0700
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <b804d5d90906031043q45d7f049i5a088b7776a42996@mail.gmail.com>

> My Application Details:
>
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
>
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.

For this, since your data is huge and seems like it will need a lot of
CPU utilization, you might have to deferToThread, since Twisted runs
in a single thread and will block AFAIK.

d = threads.deferToThread(do_a, arg1_to_do_a, arg2...)
d.addCallback(do_a2, ...)

> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
>
> while True:
> ? ? ? ?check_for_new_files()
>
> http://paste.pocoo.org/show/120824/
>
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity?

This is how I am checking for new files via Twisted:

from twisted.internet import task
loopingFrequency = 10    # seconds between looping
task.LoopingCall(fun_a,  arg1_to_fun_a, arg2_to_fun_a).start(loopFrequency)

In fun_a I do the checking of new files


-- 
Thanks,
--Minesh



From JOHN at egh.com  Wed Jun  3 14:55:47 2009
From: JOHN at egh.com (John Santos)
Date: Wed, 3 Jun 2009 14:55:47 -0400
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <1090603141629.39100B-100000@Ives.egh.com>

On Wed, 3 Jun 2009, Senthil Kumaran wrote:

> Hello Twisted Developers/Users,
> 
> This is my first concurrent application design and my first trial with
> twisted. I have read the documentation and understand where twisted
> plays its part. Unfortunately, I could not directly relate it to my
> requirements and hence, could not go forward with designing and
> building on top using the examples as a reference.
> 
> I need your guidance in helping me design an application.
> 
> My Application Details:
> 
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
> 
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.
> 
> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
> 
> while True:
>         check_for_new_files()
> 

This is not an issue specifically related to Python or Twisted, but
there is a very serious synchronization issue that needs to be
addressed with this application design.  (Trust me, I've seen this
issue come up dozens of times in over 30 years of experience...)

Creating a file and loading it with data is not an atomic operation.
It takes a significant amount of time, and if the process attempting
to read the file is faster than the process writing it, it won't see
all (or any of) the data.

It can work great while testing and then fall over the first time it
is used in production, or it can work fine for years before mysteriously
breaking.

There are several ways to cope with this situation:

1) If the system allows you to create temporary invisible files and
then only makes the file visible when it is cleanly closed, you can
use this method.  However, this is often not portable.  Not all operating
systems, languages, FTP or SFTP servers, etc. support such a facility.

2) Create the file using a method that disallows reading of the file
while it is still open by the creator.  Make the reader process wait
until it can get read access to the file before processing it.  (Sometimes
this can be done by making the reader process request exclusive write
access to the file, even though it doesn't intend to write to it.)
This is also not particularly portable, and may require the reading
process to spin or wait-loop, either wasting resources or delaying
processing by half the wait time on average.

3) Create the file in another directory and then move it to the target
directory when it is complete.  The reading process will only see it
after the move is complete.  However, such an operation isn't always
atomic, or even possible.  I think "mv" on most Unix systems is atomic
if both directories are on the same physical disk, but if the directories
are on different disks, it copies the file and then deletes the
original file.  This could work fine for years and then break when
someone decides to move directories around for some reason.

4) Create the file with a temporary file name, for example
"foo-YYYYMMDD-SEQ.tmp" and then after it is created and fully
populated, rename it to "foo-YYYYMMDD-SEQ.dat".  Make the reading
process only look for files named "*.dat", ignoring the "*.tmp"
files.  I don't know of any operating system where renaming a
file is not an atomic operation, but I suppose such might exist.
There could concievably be a small window when the file system
could have created a directory entry for the .dat filename, but
hasn't yet linked the filename to the file.  Though if this is
possible, one could argue that this is an O/S bug and demand the
O/S vendor fix it.  (Or fix it yourself if it's a self-maintained
O/S or file system...)

5) After creating the file, create a flag file (empty or with
minimal, unimportant contents.)  For example, if the data file is
named "foo-YYYYMMDD-SEQ#.dat", after creating it, create a flag
file name "foo-YYYYMMDD-SEQ#.flag".  Have the reading process
look only for flag files (they could even be in a separate directory
to avoid clutter.)  When a flag file appears, process the
corresponding data file.  This method is very portable and is
*almost* bullet proof.  The exceptions I have seen have almost
all been when someone didn't understand the importance of the
flag file and created it first.  Aside from just doing it in the
wrong order, I've seen cases where they triggered two parallel
processes to create the files, and the flag file being much
smaller, got created first, and where they created all the
files in a local directory (on another system), and then FTP'ed
them to the target system/directory, using a wild-card file name,
which unfortunately caused the flag file to get sent first.
(It may have had an alphabetically earlier name than the data
file, or the FTP client may have transfered files in a random
order or one based on the inode or file ID or other non-obvious
file attribute.)  In these cases, the cure was to explicitly
transfer the data file and then the flag file in the correct
order.

(We once encountered an issue where an FTP client may have been
"optimizing" transfers either by doing them in parallel, or by
sending small files first, and broke this scheme, but that was
only a theory we had while trying to diagnose the problem, and
may not have been what was actually happening.)


I don't know of any scheme that is absolutely foolproof unless
you control both the file creation and file reading sides of
things, but scheme 5 (flag files) seems to work best in practice.

Sorry I can't help with the Python/Twisted specifics, but I'm
too much of a newbie to be very useful with that.

> http://paste.pocoo.org/show/120824/
> 
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity? 
> 
> What will be the deferred in this case?
> 
> # my ideas:
> 
> - I might define a deferred as, whenever the contents of the directory
>   is not matching the previous contents, return the new file which was
>   added.
> - I can then add a callback to read the newfile.
> 
> 
> Now, after reading the contents, I will have to do a non-blocking call
> to fetch data, either using fun_a, fun_b or fun_b. How should I
> associate this requirement to deferred/callback pattern?
> 
> Any guidance would be helpful.
> 
> Thanks,
> Senthil
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From JOHN at egh.com  Wed Jun  3 15:05:43 2009
From: JOHN at egh.com (John Santos)
Date: Wed, 3 Jun 2009 15:05:43 -0400
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <1090603145819.39100C-100000@Ives.egh.com>

On 3 Jun 2009 twisted-python at twistedmatrix.com wrote:

> Return-Path: <twisted-python-bounces at twistedmatrix.com>
> Received: from mia.egh.com ([198.179.132.105]) by egh.com with ESMTP
>           for john at ives.egh.com; Wed, 3 Jun 2009 13:38:38 -0400
> Received: from del02.madmax.securepipe.com (IDENT:AUser at del02.madmax.securepipe.com [64.194.204.171])
> 	by mia.egh.com (8.13.6+Sun/8.13.6) with ESMTP id n53HcaWC001609
> 	for <john at egh.com>; Wed, 3 Jun 2009 13:38:38 -0400 (EDT)
> Received: (qmail 11993 invoked from network); 3 Jun 2009 13:38:35 -0400
> Received: from unknown (HELO scan08.madmax.securepipe.com) (10.10.33.158)
>   by del02.madmax.securepipe.com with (DHE-RSA-AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:35 -0400
> Received: (qmail 24989 invoked from network); 3 Jun 2009 13:38:35 -0400
> Received: from unknown (HELO rec09.madmax.securepipe.com) (10.10.35.108)
>   by scan08.madmax.securepipe.com with (DHE-RSA-AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:32 -0400
> Received: (qmail 31889 invoked from network); 3 Jun 2009 13:38:32 -0400
> Received: from unknown (HELO cube.twistedmatrix.com) (66.35.39.65)
>   by rec09.madmax.securepipe.com with (AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:32 -0400
> Received: from localhost ([127.0.0.1] helo=cube.twistedmatrix.com)
> 	by cube.twistedmatrix.com with esmtp (Exim 4.69)
> 	(envelope-from <twisted-python-bounces at twistedmatrix.com>)
> 	id 1MBuO8-0004KZ-Mh; Wed, 03 Jun 2009 13:36:32 -0400
> Received: from web34206.mail.mud.yahoo.com ([66.163.178.121])
> 	by cube.twistedmatrix.com with smtp (Exim 4.69)
> 	(envelope-from <andrewfr_ice at yahoo.com>) id 1MBuO6-0004KR-88
> 	for twisted-python at twistedmatrix.com; Wed, 03 Jun 2009 13:36:30 -0400
> Received: (qmail 39125 invoked by uid 60001); 3 Jun 2009 17:36:21 -0000
> Message-ID: <921406.38429.qm at web34206.mail.mud.yahoo.com>
> X-YMail-OSG: 73h2Cn8VM1lmMGFusyxf6h98zHdF3HQfAwnB4cuREAqquEoiATofvuhS6ER696QlSssO6A_9SwkZmXd9o_psu2YRlt2.KVKdCLfd5umTY1Vrde2la87LgM4dpGfcmpAE9OSqLaqHQqlRK0CGokPbSU5RoTQlIur41w1czT4PohrDdPVBn3eDVdWALxE1M5r4B1CJ0oVVrjlPBHNChVuKXvHwAqQwA9lHAjZiaHDfDxPQHuBDAW
> K3vOycgXitYFHtsvQ0Y62F2po2R0XtcloVdZnFzPacwxyEdjEg6A_FBilrwUlFKeblAgDubuhK5RxRTXikB2nxt38-
> Received: from [132.216.45.109] by web34206.mail.mud.yahoo.com via HTTP;
> 	Wed, 03 Jun 2009 10:36:20 PDT
> X-Mailer: YahooMailClassic/5.3.9 YahooMailWebService/0.7.289.10
> Date: Wed, 3 Jun 2009 10:36:20 -0700 (PDT)
> From: Andrew Francis <andrewfr_ice at yahoo.com>
> To: twisted-python at twistedmatrix.com
> MIME-Version: 1.0
> Cc: dave.conradie at googlemail.com
> Subject: Re: [Twisted-Python] Twisted book(s)?
> X-BeenThere: twisted-python at twistedmatrix.com
> X-Mailman-Version: 2.1.9
> Precedence: list
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> List-Id: Twisted general discussion <twisted-python.twistedmatrix.com>
> List-Unsubscribe: <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>,
> 	<mailto:twisted-python-request at twistedmatrix.com?subject=unsubscribe>
> List-Archive: <http://twistedmatrix.com/pipermail/twisted-python>
> List-Post: <mailto:twisted-python at twistedmatrix.com>
> List-Help: <mailto:twisted-python-request at twistedmatrix.com?subject=help>
> List-Subscribe: <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>,
> 	<mailto:twisted-python-request at twistedmatrix.com?subject=subscribe>
> Content-Type: text/plain; charset="us-ascii"
> Content-Transfer-Encoding: 7bit
> Sender: twisted-python-bounces at twistedmatrix.com
> Errors-To: twisted-python-bounces at twistedmatrix.com
> 
> 
> Hi David:
> 
> Message: 5
> Date: Wed, 03 Jun 2009 14:55:23 +1200
> From: David Conradie <dave.conradie at googlemail.com>
> Subject: [Twisted-Python] Twisted book(s)?
> To: twisted-python at twistedmatrix.com
> Message-ID: <4A25E61B.5050900 at googlemail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> >I'm fairly new to Python and very new to Twisted.   I find I learn new
> >material best from a book, so although I know there's lots of great
> >documentation and examples on twistedmatrix.com, I was considering
> >getting O'Reilly's Twisted book ('Twisted Network Programming
> >Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
> >was wondering if it's still a worthwhile purchase - I'd guess Twisted
> >has moved a good bit since the book was written.  Any opinions?
> 
> Well the Abe Fettig book got me over the initial hump at a critical time, so I am grateful the book was out there. Also I really enjoyed the introduction by Glyph. 
> 
> From what I recall, the Python involved in the examples isn't 
> complex(it is 2005 so I don't believe you are going to be 
> seeing more exotic Python language constructs: i.e., generators, 
> comprehensions, decorators). I found Fettig's explanations of HTTP 
> client, server, resources, and the other protocols adequate. It is 
> really important to run and modify the examples to get a feel for what 
> is happening. Again, from what I recall, the main place I think 
> Fettig's book falls flat is its explanation of creating a new protocol. Attending Steve Holden's legendary "Teach Me Twisted" pycon 2008 talk gave me a better clue (one of these days I should write a protocol).
> 
> 
> If I had to provide Fettig with advice on a second edition, my recommendations:
> 
> 1) Show an example with a nested call, for example a HTTP Request Handler making a client.getPage() call, processing it, and returning the result. This is a common idiom and it would get more into depth about how deferreds work.
> 
> 1B) Get more into the relationship between protocols and the reactor: I was really confused over why some protocols used a return, others returned a deferred, and some returned None. 
> 
> 1C) Use more Twisted idioms, i.e., using inner functions for defining callbacks.
> 
> 2) Use class relationship diagrammes to show the relationship between various Twisted objects.
> 
> 3) Show Twisted control flow. I tried to do this in my Pycon 2008 talk (which I need to rewrite one of these days).
> 
> 4) Use WAY MORE DIAGRAMMES!!!!
> 
> Cheers,
> Andrew

Lots of the replies have echoed my experience, that the book was very 
helpful getting over the initial hump, but insufficient on its own.

I'm both a Python and Twisted newbie, but have been writing event-driven
programs for decades, so my situation is obviously different from
someone experienced in Python but a newbie to Twisted and/or event-
driven programming, or from a student totally new to programming.  My
biggest obstacle is the OOPS mindset; I've done a little Java but am
not really comfortable yet.  On the plus side, I seem to be adapting
to Pythom much more easily.

Anyway, Andrew's list is really to the point.  Especially diagramming
the relationships (items 1B and 2) would be really useful to me.

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From dripton at ripton.net  Wed Jun  3 16:13:04 2009
From: dripton at ripton.net (David Ripton)
Date: Wed, 3 Jun 2009 13:13:04 -0700
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <20090603201304.GA27318@vidar.dreamhost.com>

On 2009.06.03 21:55:27 +0530, Senthil Kumaran wrote:
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
> 
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.
> 
> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity? 

If your OS has a way to let you register your interest in particular
directories and then notify you when new files appear there, then yes.

If you're using Linux then check out the Twisted inotify wrapper that's
in dialtone's sandbox.  http://twistedmatrix.com/trac/changeset/25717

If you're using something else then it probably has a similar API but
it'll be more work because AFAIK nobody's already written the Twisted
wrapper for you.

Or maybe you can get away with just periodically calling os.listdir from
a subthread, using deferToThread.  Not technically asynchronous but
probably good enough.

> Now, after reading the contents, I will have to do a non-blocking call
> to fetch data, either using fun_a, fun_b or fun_b. How should I
> associate this requirement to deferred/callback pattern?

Depends.

If it's just a simple cheap Python function that doesn't block then you
can just do:

deferred1 = reactor.callLater(0, fun_a)
deferred1.addCallback(fun_a_callback)
deferred1.addErrback(fun_a_errback)

If it's a simple function that blocks and can't be changed to not block
but doesn't use too much CPU then you can use deferToThread.

If it's a piggy enough function that you really want it in a separate
process so it can use another CPU core, then write a little Python
script that wraps it, and call it using the Twisted process APIs:
http://twistedmatrix.com/projects/core/documentation/howto/process.html

But just because you can do this in Twisted doesn't mean you necessarily
should.  If you need an asynchronous main loop then Twisted has really
good APIs for dealing with asynchronous main loops.  (If you're on Linux
and can use inotify then it qualifies.)  But if you end up polling the
filesystem with os.listdir in one thread, and running your fun_x in
other threads, and you're not really doing anything asynchronous, then
IMO Twisted won't really add any value.  In that case I'd just use
Python's threading and Queue modules.

-- 
David Ripton    dripton at ripton.net



From dave.conradie at googlemail.com  Wed Jun  3 16:14:54 2009
From: dave.conradie at googlemail.com (David Conradie)
Date: Thu, 04 Jun 2009 08:14:54 +1200
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <921406.38429.qm@web34206.mail.mud.yahoo.com>
References: <921406.38429.qm@web34206.mail.mud.yahoo.com>
Message-ID: <4A26D9BE.6000108@googlemail.com>

Many thanks to everyone for your responses.   Sounds to me like there's 
a market for another book, or a second edition of Abe Fettig's, but I 
think I'll crack on now with what we've already got - let's see how much 
of a mess I can get myself into :)

David
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5623 bytes
Desc: S/MIME Cryptographic Signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090604/28d9d2c2/attachment.bin 

From glyph at divmod.com  Wed Jun  3 22:27:47 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 04 Jun 2009 02:27:47 -0000
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <20090604022747.12555.1357422748.divmod.xquotient.12337@weber.divmod.com>


On 3 Jun, 04:25 pm, orsenthil at gmail.com wrote:
>My Question: Can this be designed in way that looking for new files is
>also asynchronous activity?

Sure.
>What will be the deferred in this case?

>Now, after reading the contents, I will have to do a non-blocking call
>to fetch data, either using fun_a, fun_b or fun_b. How should I
>associate this requirement to deferred/callback pattern?

I don't think that you want to have a Deferred here.  I think you just 
want a callback for when files change, similar to the way IProtocol 
simply gets a callback when data arrives.
>Any guidance would be helpful.

Have you looked at any of the various attempts to add asynchronous file 
notification support to Twisted?  To get truly asynchronous notification 
(not timed polling) you will need something like this:

    http://twistedmatrix.com/trac/ticket/972



From glyph at divmod.com  Thu Jun  4 00:51:10 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 04 Jun 2009 04:51:10 -0000
Subject: [Twisted-Python] [Twisted-web] Telnet chat server
In-Reply-To: <406799.68971.qm@web51801.mail.re2.yahoo.com>
References: <406799.68971.qm@web51801.mail.re2.yahoo.com>
Message-ID: <20090604045110.12555.131317974.divmod.xquotient.12417@weber.divmod.com>


This message is more appropriate for the twisted-python list, as it has 
nothing to do with "web", so I've cross-posted it there.

On 3 Jun, 10:57 pm, woahyeahyeah at yahoo.com wrote:
>I've got a simple little chat server set up that people can telnet 
>into.? The code is as follows:

>from twisted.internet import reactor
>from twisted.internet.protocol import ServerFactory
>from twisted.protocols.basic import LineOnlyReceiver
>import threading

^ This is where things start to go (horribly) wrong.

The protocol looks basically correct, but this part:
>def Test():
>??? global test
>??? factory.sendMessageToAllClients('Hey.')
>??? test = threading.Timer(1.0,
>Test)
>??? test.start()
>test = threading.Timer(1.0, Test)
>test.start()

is very, very wrong.  You cannot call Twisted APIs from a thread.  Ever. 
This is very important :).  The behavior to you appeared to be some 
strange timing issues, but you can get anything from corrupted data to 
crashing the entire program.
>Is there any way to get this to send the message and have it show up 
>for a client even when they're idle?

Yes.  Use the reactor's timed-event APIs rather than threads.  In other 
words, do this, after you create your factory:

    from twisted.internet.task import LoopingCall
    LoopingCall(factory.sendMessageToAllClients, 'Hey.').start(1.0)

You may be interested to also read about these APIs:

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.interfaces.IReactorTime.html



From dfarrell at mypublisher.com  Thu Jun  4 17:12:56 2009
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Thu, 4 Jun 2009 17:12:56 -0400
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
Message-ID: <318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>

Hi all,

I'm using the twisted.internet.task.LoopingCall system to run periodic
tasks in a Twisted server. If I had code like this:

from twisted.internet.task import LoopingCall

lp = LoopingCall(someFunction)
lp.start(5.0)   # run every 5 seconds


Is there anything in LoopingCall to keep it from trying to run
someFunction() if the previous call is still running? For instance a
call to someFunction() takes longer than 5 seconds, will LoopingCall
hold off or will it call someFuction() anyway causing two 'instances' to
run?

Thanks,
Doug



From terry at jon.es  Thu Jun  4 18:18:00 2009
From: terry at jon.es (Terry Jones)
Date: Fri, 5 Jun 2009 00:18:00 +0200
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: Your message at 17:12:56 on Thursday, 4 June 2009
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
	<318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
Message-ID: <18984.18456.528978.177264@jon.es>

>>>>> "Doug" == Doug Farrell <dfarrell at mypublisher.com> writes:

Doug> Is there anything in LoopingCall to keep it from trying to run
Doug> someFunction() if the previous call is still running? For instance a
Doug> call to someFunction() takes longer than 5 seconds, will LoopingCall
Doug> hold off or will it call someFuction() anyway causing two 'instances'
Doug> to run?

Hi Doug

Sorry if it sounds like I'm being a PITA, but I really recommend reading
the source code and writing & playing with a tiny example. Also see
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html

I suggest this because it's by far the best way to learn these things. And
if you're using Twisted in any serious way, it's hard to get by without
getting closely acquainted with some of the code.

BTW, yes, LoopingCall will reschedule in a sensible way, supposing your
task returns a deferred that takes a long time to fire :-) Try it.

Terry



From ltaylor.volks at gmail.com  Thu Jun  4 18:31:15 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 04 Jun 2009 17:31:15 -0500
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: <318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
	<318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
Message-ID: <4A284B33.5050500@gmail.com>

On 6/4/09 4:12 PM, Doug Farrell wrote:
> Hi all,
> 
> I'm using the twisted.internet.task.LoopingCall system to run periodic
> tasks in a Twisted server. If I had code like this:
> 
> from twisted.internet.task import LoopingCall
> 
> lp = LoopingCall(someFunction)
> lp.start(5.0)   # run every 5 seconds
> 
> 
> Is there anything in LoopingCall to keep it from trying to run
> someFunction() if the previous call is still running? For instance a
> call to someFunction() takes longer than 5 seconds, will LoopingCall
> hold off or will it call someFuction() anyway causing two 'instances' to
> run?
> 
> Thanks,
> Doug

per
http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html

If someFunction returns a Deferred, it will not be rescheduled if the
Deferred has not fired.

e.g.

def someFunction():
    d = someDeferredReturningOperation()
    d.addCallbacks(success, error)
    return d

lp = LoopingCall(someFunction)
lp.start(5.0)   # run every 5 seconds


Lucas



From terry at jon.es  Sat Jun  6 21:41:08 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 7 Jun 2009 03:41:08 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
Message-ID: <18987.6836.750596.444400@jon.es>

I try to avoid using inlineCallbacks. There are two cases where I will
happily use it though: when I write a method that would need more than a
few callback functions, and, more importantly, when the logical flow of a
method is non-trivial (i.e., it depends on the returned values or errors of
several deferreds).

One inconvenience with inlineCallbacks is that you might have some kind of
processing you want done no matter how the function returns, or wherever an
error occurs. Two solutions here are 1) to put try/except calls around your
various yields, and/or to perhaps do something else with various callbacks
that might call defer.returnValue, or 2) expect each caller of your method
to deal with the result. I don't like the first of those much (depending on
the code), and don't like the second at all.

So I wrote a decorator specifically for inlineCallbacks decorated functions:

    from twisted.internet import defer

    def inlineCallbacksDecorator(callback, errback=defer.passthru):
        def wrap(f):
            def wrapper(*args, **kw):
                d = f(*args, **kw)
                if isinstance(d, defer.Deferred):
                    return d.addCallbacks(callback, errback,
                                          callbackArgs=args, callbackKeywords=kw,
                                          errbackArgs=args, errbackKeywords=kw)
                # We were used to decorate a non-inlineCallbacks function.
                raise Exception(
                    'Function %r was decorated with inlineCallbacksDecorator but '
                    'did not return a deferred (did you forget to also decorate '
                    'with inlineCallbacks?)' % f.__name__)
            return mergeFunctionMetadata(f, wrapper)
        return wrap

You can use it like this:

    def _cbok(result, a, b=None):
        print 'In _cbok: a=%r b=%r' % (a, b)
        return result

    def _cberr(failure, *args, **kw):
        pass
        # Do something....  and maybe also return the failure.

    @inlineCallbacksDecorator(_cbok, _cberr)
    @defer.inlineCallbacks
    def frog(a, b=None):
        print 'a = %r, b = %r' % (a, b)
        result = yield produceDeferred()
        # yield produceErr()
        defer.returnValue(a)


The nice/interesting thing about this is that the callback and errback
functions get called with the deferred result of calling frog (as decorated
by inlineCallbacks) *and* the original arguments passed to frog.  You can
of course ignore the original args if you're not interested in them.

You can argue that this doesn't really buy you anything. That's of course
true.  It's only a decorator that makes it neater to do certain things.
Logging, accounting and error processing come immediately to mind. Just
keeping code looking simpler/cleaner is enough of a reason for me.

After writing this, I realized it deals with what I was clumsily trying to
achieve here
http://twistedmatrix.com/pipermail/twisted-python/2009-April/019492.html
back in April.

Terry



From exarkun at twistedmatrix.com  Sun Jun  7 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Jun 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1244347511.61.1253177632@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090607/5abd819f/attachment.htm 

From maarten at treewalker.org  Sun Jun  7 00:18:52 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 7 Jun 2009 06:18:52 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: <18987.6836.750596.444400@jon.es>
References: <18987.6836.750596.444400@jon.es>
Message-ID: <200906070618.52813.maarten@treewalker.org>

On Sunday 07 June 2009, Terry Jones wrote:

> So I wrote a decorator specifically for inlineCallbacks decorated
> functions:
>
>     from twisted.internet import defer
>
>     def inlineCallbacksDecorator(callback, errback=defer.passthru):
>         def wrap(f):
>             def wrapper(*args, **kw):
>                 d = f(*args, **kw)
>                 if isinstance(d, defer.Deferred):
>                     return d.addCallbacks(callback, errback,
>                                           callbackArgs=args,
> callbackKeywords=kw, errbackArgs=args, errbackKeywords=kw)
>                 # We were used to decorate a non-inlineCallbacks function.
>                 raise Exception(
>                     'Function %r was decorated with
> inlineCallbacksDecorator but '
>                     'did not return a deferred (did you forget
> to also decorate '
>                     'with inlineCallbacks?)' % f.__name__)
>             return mergeFunctionMetadata(f, wrapper)
>         return wrap
>
> You can use it like this:
>
>     def _cbok(result, a, b=None):
>         print 'In _cbok: a=%r b=%r' % (a, b)
>         return result
>
>     def _cberr(failure, *args, **kw):
>         pass
>         # Do something....  and maybe also return the failure.
>
>     @inlineCallbacksDecorator(_cbok, _cberr)
>     @defer.inlineCallbacks
>     def frog(a, b=None):
>         print 'a = %r, b = %r' % (a, b)
>         result = yield produceDeferred()
>         # yield produceErr()
>         defer.returnValue(a)

As far as I can see, this decorator could be applied to any function that 
returns a Deferred, not just to inlineCallbacks.

Bye,
		Maarten




From terry at jon.es  Sun Jun  7 07:53:07 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 7 Jun 2009 13:53:07 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: Your message at 06:18:52 on Sunday, 7 June 2009
References: <18987.6836.750596.444400@jon.es>
	<200906070618.52813.maarten@treewalker.org>
Message-ID: <18987.43555.831952.140655@jon.es>

Hi Maarten

>>>>> "Maarten" == Maarten ter Huurne <maarten at treewalker.org> writes:
Maarten> As far as I can see, this decorator could be applied to any
Maarten> function that returns a Deferred, not just to inlineCallbacks.

Yes, that's right, and it could be used in that case if you didn't want to
deal with the deferred you were about to return inside your method.

I wrote it specifically for inlineCallbacks because that case is a bit
different. With inlineCallbacks, the called method never has its hands on
the deferred that the caller will receive (whereas in a typical
deferred-returning method you either create the deferred yourself or call
something that does). In fact, the deferred the caller receives will
normally be returned back to the caller before the called method has
finished. Also, a return out of an inlineCallbacks function may happen at
many places (due to the hidden _DefGen_Return raise done by
defer.returnValue), so it's not as simple to arrange to do things at the
end of the method as it is in other circumstances.

Terry



From dfarrell at mypublisher.com  Mon Jun  8 10:46:03 2009
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 8 Jun 2009 10:46:03 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 63, Issue 7
In-Reply-To: <mailman.5.1244217602.21167.twisted-python@twistedmatrix.com>
References: <mailman.5.1244217602.21167.twisted-python@twistedmatrix.com>
Message-ID: <318F79422ADC5041A93343721F84474D01D4654F@exchange.mypublisher.local>

Terry

> Hi Doug
> 
> Sorry if it sounds like I'm being a PITA, but I really recommend
> reading
> the source code and writing & playing with a tiny example. Also see
>
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.Loop
> ingCall.html
> 
> I suggest this because it's by far the best way to learn these things.
> And
> if you're using Twisted in any serious way, it's hard to get by
without
> getting closely acquainted with some of the code.
> 
> BTW, yes, LoopingCall will reschedule in a sensible way, supposing
your
> task returns a deferred that takes a long time to fire :-) Try it.
> 
> Terry
> 

[Doug Farrell] Don't mind the PITA at all, I actuall did read the source
code and just didn't 'get it' so much. In my case the function that
LoopingCall was passed was actually doing the work, not returning a
Deferred. However, I'm going to look into doing that. 

Thanks for your feedback and advice,
Doug

> per
>
http://twistedmatrix.com/documents/current/api/twisted.internet.task.Lo
> opingCall.html
> 
> If someFunction returns a Deferred, it will not be rescheduled if the
> Deferred has not fired.
> 
> e.g.
> 
> def someFunction():
>     d = someDeferredReturningOperation()
>     d.addCallbacks(success, error)
>     return d
> 
> lp = LoopingCall(someFunction)
> lp.start(5.0)   # run every 5 seconds
> 
> 
> Lucas
> 
[Doug Farrell] 
Lucas,

Thanks for your response and feedback. In my sample code the
someFunction() code was actually doing the work I wanted, not creating a
deferred as your sample shows. However, I'm going to try that out and
give it a run.

Thanks!
Doug



From patino at gmail.com  Mon Jun  8 11:33:13 2009
From: patino at gmail.com (Alex Patino)
Date: Mon, 8 Jun 2009 11:33:13 -0400
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
Message-ID: <7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>

I am looking for a chat system to add to my Django-based chat site.  I don't
need something ready-made but I don't want to build it on a framework that
is no longer supported.  What's the status of the Twisted Words project?

Regards,
Alex

On Mon, Jun 8, 2009 at 11:25 AM, Alex Patino <patino at gmail.com> wrote:

> I am looking for a chat system to add to my Django-based chat site.  I
> don't need something ready-made but I don't want to build it on a framework
> that is no longer supported.  What's the status of the Twisted Words
> project?
>
> Regards,
> Alex
>
>
> On Mon, Jun 8, 2009 at 8:34 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Sun, 7 Jun 2009 23:50:59 -0400, Alex Patino <patino at gmail.com> wrote:
>>
>>> I have been looking for a chat server/client to add to my Django-based
>>> website.  What is the current state of Twisted Words?  Do you think it's
>>> something I could use for this endeavor?
>>>
>>
>> Twisted Words does not include a ready-made web-based chat system, so if
>> that's what you're looking for, you'll have to look elsewhere.
>>
>> Please direct follow-up questions to twisted-python at twistedmatrix.com.
>>
>> Jean-Paul
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090608/71374fc3/attachment.htm 

From jack.bates at gmail.com  Mon Jun  8 12:37:18 2009
From: jack.bates at gmail.com (Jack Bates)
Date: Mon, 08 Jun 2009 09:37:18 -0700
Subject: [Twisted-Python] copy domish element
Message-ID: <1244479038.13748.10.camel@tad>

i have a domish element - when i try the following,

>>> message = element
>>> del message['from']
>>> element['from']

- i get a key error

to avoid this key error, i think i want to copy the element, so i can
drop the 'from' attribute from one copy without affecting the other?

but i didn't find anything to make a copy in the domish element api

how should i avoid this key error?



From terry at jon.es  Mon Jun  8 12:59:21 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 8 Jun 2009 18:59:21 +0200
Subject: [Twisted-Python] copy domish element
In-Reply-To: Your message at 09:37:18 on Monday, 8 June 2009
References: <1244479038.13748.10.camel@tad>
Message-ID: <18989.17257.408345.57687@jon.es>

Hi Jack

>>>>> "Jack" == Jack Bates <jack.bates at gmail.com> writes:

Jack> i have a domish element - when i try the following,
>>>> message = element
>>>> del message['from']
>>>> element['from']

Jack> - i get a key error

Jack> to avoid this key error, i think i want to copy the element, so i can
Jack> drop the 'from' attribute from one copy without affecting the other?

Jack> but i didn't find anything to make a copy in the domish element api
Jack> how should i avoid this key error?

If I'm interpreting you right, you might try

    from copy import deepcopy
    message = deepcopy(element)
    # etc.

Not sure what this has to do with Twisted :-)

Terry



From p.mayers at imperial.ac.uk  Mon Jun  8 13:03:53 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 08 Jun 2009 18:03:53 +0100
Subject: [Twisted-Python] copy domish element
In-Reply-To: <1244479038.13748.10.camel@tad>
References: <1244479038.13748.10.camel@tad>
Message-ID: <4A2D4479.9080007@imperial.ac.uk>

Jack Bates wrote:
> i have a domish element - when i try the following,
> 
>>>> message = element
>>>> del message['from']
>>>> element['from']
> 
> - i get a key error

Well, yes. That's how python works ;o)

> 
> to avoid this key error, i think i want to copy the element, so i can
> drop the 'from' attribute from one copy without affecting the other?
> 
> but i didn't find anything to make a copy in the domish element api

I haven't tried it, but have you tried the python standard copy protocol:

import copy
message = copy.deepcopy(element)



From drew.smathers at gmail.com  Mon Jun  8 14:31:16 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 8 Jun 2009 14:31:16 -0400
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: <18987.6836.750596.444400@jon.es>
References: <18987.6836.750596.444400@jon.es>
Message-ID: <368574aa0906081131l31764c80ua53177f8dbd29d9c@mail.gmail.com>

On Sat, Jun 6, 2009 at 9:41 PM, Terry Jones<terry at jon.es> wrote:
> I try to avoid using inlineCallbacks. There are two cases where I will
> happily use it though: when I write a method that would need more than a
> few callback functions, and, more importantly, when the logical flow of a
> method is non-trivial (i.e., it depends on the returned values or errors of
> several deferreds).
>
> One inconvenience with inlineCallbacks is that you might have some kind of
> processing you want done no matter how the function returns, or wherever an
> error occurs. Two solutions here are 1) to put try/except calls around your
> various yields, and/or to perhaps do something else with various callbacks
> that might call defer.returnValue, or 2) expect each caller of your method
> to deal with the result. I don't like the first of those much (depending on
> the code), and don't like the second at all.

How does inlineCallbacks preclude you from adding "processing you want
done no matter how the function returns" or currying callbacks?  From
my understanding of the problem, this is already solved by attaching
callbacks/errbacks in the regular way:

@inlineCallbacks
def foo(a, b, c):
    ...
foo(a, b, c).addBoth(cb, a, b, c)

>
> So I wrote a decorator specifically for inlineCallbacks decorated functions:
>
> ? ?from twisted.internet import defer
>
> ? ?def inlineCallbacksDecorator(callback, errback=defer.passthru):
> ? ? ? ?def wrap(f):
> ? ? ? ? ? ?def wrapper(*args, **kw):
> ? ? ? ? ? ? ? ?d = f(*args, **kw)
> ? ? ? ? ? ? ? ?if isinstance(d, defer.Deferred):
> ? ? ? ? ? ? ? ? ? ?return d.addCallbacks(callback, errback,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?callbackArgs=args, callbackKeywords=kw,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?errbackArgs=args, errbackKeywords=kw)
> ? ? ? ? ? ? ? ?# We were used to decorate a non-inlineCallbacks function.
> ? ? ? ? ? ? ? ?raise Exception(
> ? ? ? ? ? ? ? ? ? ?'Function %r was decorated with inlineCallbacksDecorator but '
> ? ? ? ? ? ? ? ? ? ?'did not return a deferred (did you forget to also decorate '
> ? ? ? ? ? ? ? ? ? ?'with inlineCallbacks?)' % f.__name__)
> ? ? ? ? ? ?return mergeFunctionMetadata(f, wrapper)
> ? ? ? ?return wrap
>
> You can use it like this:
>
> ? ?def _cbok(result, a, b=None):
> ? ? ? ?print 'In _cbok: a=%r b=%r' % (a, b)
> ? ? ? ?return result
>
> ? ?def _cberr(failure, *args, **kw):
> ? ? ? ?pass
> ? ? ? ?# Do something.... ?and maybe also return the failure.
>
> ? ?@inlineCallbacksDecorator(_cbok, _cberr)
> ? ?@defer.inlineCallbacks
> ? ?def frog(a, b=None):
> ? ? ? ?print 'a = %r, b = %r' % (a, b)
> ? ? ? ?result = yield produceDeferred()
> ? ? ? ?# yield produceErr()
> ? ? ? ?defer.returnValue(a)
>
>
> The nice/interesting thing about this is that the callback and errback
> functions get called with the deferred result of calling frog (as decorated
> by inlineCallbacks) *and* the original arguments passed to frog. ?You can
> of course ignore the original args if you're not interested in them.
>
> You can argue that this doesn't really buy you anything. That's of course
> true. ?It's only a decorator that makes it neater to do certain things.
> Logging, accounting and error processing come immediately to mind. Just
> keeping code looking simpler/cleaner is enough of a reason for me.
>
> After writing this, I realized it deals with what I was clumsily trying to
> achieve here
> http://twistedmatrix.com/pipermail/twisted-python/2009-April/019492.html
> back in April.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From terry at jon.es  Mon Jun  8 16:10:49 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 8 Jun 2009 22:10:49 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: Your message at 14:31:16 on Monday, 8 June 2009
References: <18987.6836.750596.444400@jon.es>
	<368574aa0906081131l31764c80ua53177f8dbd29d9c@mail.gmail.com>
Message-ID: <18989.28745.400512.674702@jon.es>

>>>>> "Drew" == Drew Smathers <drew.smathers at gmail.com> writes:
Drew> On Sat, Jun 6, 2009 at 9:41 PM, Terry Jones<terry at jon.es> wrote:
>> One inconvenience with inlineCallbacks is that you might have some kind
>> of processing you want done no matter how the function returns, or
>> wherever an error occurs. Two solutions here are 1) to put try/except
>> calls around your various yields, and/or to perhaps do something else
>> with various callbacks that might call defer.returnValue, or 2) expect
>> each caller of your method to deal with the result. I don't like the
>> first of those much (depending on the code), and don't like the second
>> at all.

Drew> How does inlineCallbacks preclude you from adding "processing you
Drew> want done no matter how the function returns" or currying callbacks?
Drew> From my understanding of the problem, this is already solved by
Drew> attaching callbacks/errbacks in the regular way:

Drew> @inlineCallbacks
Drew> def foo(a, b, c):
Drew> ...
Drew> foo(a, b, c).addBoth(cb, a, b, c)

Right, that's what I meant by the (2) in my paragraph. The reason that's
not always what you want is that there may be things foo needs to get done
before it returns, things that are best or can only be computed inside
foo. In that case you don't really want to make all your callers have to
add a callback to add functionality/logic that belongs inside foo.

Under normal circumstances you'd have code like this:

  def foo():
    d = someOtherFunc()
    d.addCallbacks(...)
    return d

or

  def foo():
    d = defer.Callback()
    # Set up some stuff that will fire d
    return d

so the deferred that comes back from foo is under control of foo and if
there's any logical last steps to be done to it, foo can easily add them.

But with inlineCallbacks, foo never has its hands on the deferred that will
be returned.  Yes, you could do:

  @inlineCallbacks
  def foo():
    try:
      #
      # All sorts of stuff, yielding deferreds
      #
    except ...:
      # yield somethingElse or raise something

But that's not so attractive, and it only deals with errbacks. To deal with
all returns, you could catch the undocumented _DefGen_Return, do your
processing and then re-raise it but that's even more ugly.  So I'm just
trying to offer a clean way to always get hold of the deferred and be able
to consistently process it using code in the same file (or class, given a
self) as foo.

Terry



From nestor at tiendalinux.com  Tue Jun  9 00:53:11 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Mon, 08 Jun 2009 23:53:11 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
Message-ID: <4A2DEAB7.4000206@tiendalinux.com>

Hello, there is a bug on the SerialPort Win32 implementation (don't know 
about the others), when i call the loseConnection method, it returns:

twisted matrix exceptions.AttributeError:  'SerialPort' object has no 
attribute '_tempDataBuffer'

if i wrap the serialport class and put a :

        self._tempDataBuffer = ''

in the __init__ method, i get:

raise NotImplementedError("%s does not implement writeSomeData" % 
exceptions.NotImplementedError: __main__.MySerialPort does not implement 
writeSomeData

however the port gets closed the right way.

Slds.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From twisted at ralphm.ik.nu  Tue Jun  9 02:47:36 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 09 Jun 2009 08:47:36 +0200
Subject: [Twisted-Python] copy domish element
In-Reply-To: <4A2D4479.9080007@imperial.ac.uk>
References: <1244479038.13748.10.camel@tad> <4A2D4479.9080007@imperial.ac.uk>
Message-ID: <1244530056.10638.4.camel@dwaal>

On Mon, 2009-06-08 at 18:03 +0100, Phil Mayers wrote:
> Jack Bates wrote:
> > i have a domish element - when i try the following,
> > 
> >>>> message = element
> >>>> del message['from']
> >>>> element['from']
> > 
> > - i get a key error
> 
> Well, yes. That's how python works ;o)
> 
> > 
> > to avoid this key error, i think i want to copy the element, so i can
> > drop the 'from' attribute from one copy without affecting the other?
> > 
> > but i didn't find anything to make a copy in the domish element api
> 
> I haven't tried it, but have you tried the python standard copy protocol:
> 
> import copy
> message = copy.deepcopy(element)

Deep copies of Element instances is probably not what you want here. See
issue #724.

I suspect from your example that you want to respond to an incoming XML
Stanza. In general, it is better to construct a new stanza from the old
one, keeping the addressing but in reverse. There is a utility function
for this: twisted.words.protocols.jabber.xmlstream.toResponse. For error
responses, you want to look at t.w.p.j.error.StanzaError and its
toResponse method.

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Tue Jun  9 03:06:14 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 09 Jun 2009 09:06:14 +0200
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
	<7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
Message-ID: <1244531174.10638.22.camel@dwaal>

On Mon, 2009-06-08 at 11:33 -0400, Alex Patino wrote:
> I am looking for a chat system to add to my Django-based chat site.  I
> don't need something ready-made but I don't want to build it on a
> framework that is no longer supported.  What's the status of the
> Twisted Words project?

Although, as exarkun mentions, Twisted Words currently does not have a
complete web-based chat system, the great people at StanzIQ have built a
suite of products to support this, using Twisted and a piece of Django.

First off, there is Punjab, an implementation of XMPP over BOSH, that
allows browser-based javascript applications do XMPP over HTTP. Then,
there is Strophe, or more specifically strophe.js, a javascript library
to build browser-based XMPP applications, talking to Punjab (or other
XMPP over BOSH implementations).

For a group chat application, they have Speeqe, a client-side
implementation of the Multi-User Chat XMPP Extension using strophe.js
and some server-side Django. In turn you need a server-side
implementation as well, to hold the chat rooms, and for this they have
built Palaver on top of Twisted Words.

You can read up on all of this marvelous stuff at http://stanziq.com/
Also, be sure not to miss the (now still rather incomplete) list of
applications using strophe.js:
http://code.stanziq.com/strophe/wiki/UseCases .

-- 
Groetjes,

ralphm




From clemesha at gmail.com  Tue Jun  9 03:22:00 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Tue, 9 Jun 2009 00:22:00 -0700
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <1244531174.10638.22.camel@dwaal>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
	<7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
	<1244531174.10638.22.camel@dwaal>
Message-ID: <d272f0690906090022r979cba6g3bee562243e84fed@mail.gmail.com>

On Tue, Jun 9, 2009 at 12:06 AM, Ralph Meijer<twisted at ralphm.ik.nu> wrote:
> On Mon, 2009-06-08 at 11:33 -0400, Alex Patino wrote:
>> I am looking for a chat system to add to my Django-based chat site. ?I
>> don't need something ready-made but I don't want to build it on a
>> framework that is no longer supported. ?What's the status of the
>> Twisted Words project?
>
> Although, as exarkun mentions, Twisted Words currently does not have a
> complete web-based chat system, the great people at StanzIQ have built a
> suite of products to support this, using Twisted and a piece of Django.
>
> First off, there is Punjab, an implementation of XMPP over BOSH, that
> allows browser-based javascript applications do XMPP over HTTP. Then,
> there is Strophe, or more specifically strophe.js, a javascript library
> to build browser-based XMPP applications, talking to Punjab (or other
> XMPP over BOSH implementations).
>
> For a group chat application, they have Speeqe, a client-side
> implementation of the Multi-User Chat XMPP Extension using strophe.js
> and some server-side Django. In turn you need a server-side
> implementation as well, to hold the chat rooms, and for this they have
> built Palaver on top of Twisted Words.
>
> You can read up on all of this marvelous stuff at http://stanziq.com/
> Also, be sure not to miss the (now still rather incomplete) list of
> applications using strophe.js:
> http://code.stanziq.com/strophe/wiki/UseCases .

I heartily agree checking out what http://stanziq.com has to offer, it
is excellent.

In particular, a combination of Strophe and Punjab (plus ejabberd) will get
you where you want to go.

I have a fun little app going that uses Strophe, Punjab, and Django.  You can
play with it here: http://wikipediagame.org

and here is a talk I did at a recent Django user group meeting on the
game's architecture:
http://clemesha.org/static/talks/Django_and_XMPP_BoshWriting_a_real_time_web_app.pdf

I believe you might find it's easier that you think to get going by
just playing around
with the examples.  Try starting here:
http://code.stanziq.com/cgit/strophe/strophejs/tree/examples/attach


good luck!
-Alex



>
> --
> Groetjes,
>
> ralphm
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From hoooooosety at gmail.com  Tue Jun  9 05:31:52 2009
From: hoooooosety at gmail.com (hoooooosety)
Date: Tue, 9 Jun 2009 17:31:52 +0800
Subject: [Twisted-Python] some callback function params problems
Message-ID: <200906091731503595272@gmail.com>

Hello, I have some callback function params problems.

Here is a simple example.

def deferDoSomeInsert(paramA, paramB):
	insertSQL = "..."
	db.runQuery(insertSQL)

def deferDoSomeDelete(paramA, paramB):
	deleteSQL = "..."
	db.runQuery(deleteSQL)

#these two functions are individual and basic, and then, I need compound function which first insert then delete.
#so

def deferCompoundFunc(paramA, paramB):
	return deferDoSomeInsert.addCallback(deferDoSomeDelete, paramA, paramB)

here the problem comes, the first defer will return none as default so there're 3 pramas pass to the second function.

Is there a common way to solve the problem like this. I mean I can still keep the separate functions as the look like now,
and I can compound the basic function to do more complex action using addCallback to link them.

2009-06-09 
hoooooosety 




From screwtape at froup.com  Tue Jun  9 05:55:06 2009
From: screwtape at froup.com (Tim Allen)
Date: Tue, 9 Jun 2009 19:55:06 +1000
Subject: [Twisted-Python] some callback function params problems
In-Reply-To: <200906091731503595272@gmail.com>
References: <200906091731503595272@gmail.com>
Message-ID: <20090609095506.GP16651@thristian.org>

On Tue, Jun 09, 2009 at 05:31:52PM +0800, hoooooosety wrote:
> Is there a common way to solve the problem like this. I mean I can
> still keep the separate functions as the look like now,

I do it like this:

    def deferCompoundFunc(paramA, paramB):
	d = deferDoSomeInsert(paramA, paramB)
	d.addCallback(lambda ignored: deferDoSomeDelete(paramA, paramB))
	return d

(Actually I normally call the lambda's parameter "_" rather than
"ignored" because it's faster to type, and makes pylint not complain
about unused variables)

If you're learning Twisted for the first time, get prepared to get very
friendly with lambda. :)



From jack.bates at gmail.com  Tue Jun  9 11:55:09 2009
From: jack.bates at gmail.com (Jack Bates)
Date: Tue, 09 Jun 2009 08:55:09 -0700
Subject: [Twisted-Python] copy domish element
In-Reply-To: <1244530056.10638.4.camel@dwaal>
References: <1244479038.13748.10.camel@tad>
	<4A2D4479.9080007@imperial.ac.uk>  <1244530056.10638.4.camel@dwaal>
Message-ID: <1244562909.20816.15.camel@tad>

On Tue, 2009-06-09 at 08:47 +0200, Ralph Meijer wrote:
> On Mon, 2009-06-08 at 18:03 +0100, Phil Mayers wrote:
> > Jack Bates wrote:
> > > i have a domish element - when i try the following,
> > > 
> > >>>> message = element
> > >>>> del message['from']
> > >>>> element['from']
> > > 
> > > - i get a key error
> > 
> > Well, yes. That's how python works ;o)
> >  
> > > to avoid this key error, i think i want to copy the element, so i can
> > > drop the 'from' attribute from one copy without affecting the other?
> > > 
> > > but i didn't find anything to make a copy in the domish element api
> > 
> > I haven't tried it, but have you tried the python standard copy protocol:
> > 
> > import copy
> > message = copy.deepcopy(element)
> 
> Deep copies of Element instances is probably not what you want here. See
> issue #724.
> 
> I suspect from your example that you want to respond to an incoming XML
> Stanza. In general, it is better to construct a new stanza from the old
> one, keeping the addressing but in reverse. There is a utility function
> for this: twisted.words.protocols.jabber.xmlstream.toResponse. For error
> responses, you want to look at t.w.p.j.error.StanzaError and its
> toResponse method.

much thanks for your attention ralphm! actually i want to reroute an
incoming xml <message>

i have one script, qubot, which sits in our project chat room,
http://github.com/jablko/qubot/blob/722b28f66d5eaf96d3b00902f3532ba61588c4c9/qubot

- and one script, jabber, which sends commit messages to qubot,
http://github.com/jablko/jabber/blob/92a418a4c6d1d2a21beda02ff7d9edce18146e18/jabber

when qubot receives a message from jabber, it should relay the message
to the chat room

i used to construct a new <message> and copy a whitelist of attributes
and content from the incoming <message>, however i switched to
attempting a perfect copy of the incoming <message> and adjusting a
blacklist of attributes (such as del message['from']) because otherwise
xmpp extensions like xhtml-im were not relayed,
http://github.com/jablko/qubot/commit/722b28f66d5eaf96d3b00902f3532ba61588c4c9



From fetbiz at gmail.com  Tue Jun  9 23:20:15 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Wed, 10 Jun 2009 11:20:15 +0800
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <4A2DEAB7.4000206@tiendalinux.com>
References: <4A2DEAB7.4000206@tiendalinux.com>
Message-ID: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>

Maybe you can try to call transport.flushInput(), transport.flushOutput()
before loseConnection().


2009/6/9 Nestor A. Diaz <nestor at tiendalinux.com>:
> Hello, there is a bug on the SerialPort Win32 implementation (don't know
> about the others), when i call the loseConnection method, it returns:
>
> twisted matrix exceptions.AttributeError: ?'SerialPort' object has no
> attribute '_tempDataBuffer'
>
> if i wrap the serialport class and put a :
>
> ? ? ? ?self._tempDataBuffer = ''
>
> in the __init__ method, i get:
>
> raise NotImplementedError("%s does not implement writeSomeData" %
> exceptions.NotImplementedError: __main__.MySerialPort does not implement
> writeSomeData
>
> however the port gets closed the right way.
>
> Slds.
>
> --
> Nestor A. Diaz
> Ingeniero de Sistemas
> Tel. +57 1-600-5490 x 211
> Cel. +57 316-227-3593
> Tel. SIP: sip:211 at tiendalinux.com
> Email/MSN: nestor at tiendalinux.com
> http://www.tiendalinux.com/
> Bogota, Colombia
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From orsenthil at gmail.com  Wed Jun 10 03:33:18 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 10 Jun 2009 13:03:18 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
Message-ID: <20090610073318.GA7144@ubuntu.ubuntu-domain>

On Wed, Jun 03, 2009 at 10:43:34AM -0700, Minesh Patel wrote:

> For this, since your data is huge and seems like it will need a lot of
> CPU utilization, you might have to deferToThread, since Twisted runs
> in a single thread and will block AFAIK.
> 
> d = threads.deferToThread(do_a, arg1_to_do_a, arg2...)
> d.addCallback(do_a2, ...)
> 

I delayed and forgot to respond to this thread. Sorry for that.
Actually, I had asked the question on doing asynchronous monitoring of
new file arrival and then based on the file contents, doing tasks
a,b,c asynchronously.

Thank you for your responses. I got a number of pointers to look at.

* As a newbie to this world, I just started studying further.

I realized that in my application, I have the control form the client
on when I can notify that a particular file can be looked at.
So, for the time being, I just skipped the inotify linux system
related calls ( BTW, Twsited + inotify works great) and when ahead
with just implementing a Twisted a Server which listens to a
particular port and when receives data, will either read the file or
parse the data to do some activity (like fetch logs from database).

threads.deferToThread(func,[args]) is what I am using.

http://paste.pocoo.org/show/122155/


I am still working out more details as doing this
threads.deferToThread calls effectively, because there could be number
of clients parallely requesting it and the data from my query
(internal function) could be so big that it might take 30 minutes to
service a request.

* Another thing is when using something like 
"from datasources import query"

I could not make it to application (.tac to run it from twistd), it
could nto find datasources in its PYTHONPATH. Got to figure out how to
do it, which I might pretty soon.


Thanks again,
Senthil




From orsenthil at gmail.com  Wed Jun 10 03:36:16 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 10 Jun 2009 13:06:16 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
In-Reply-To: <1090603141629.39100B-100000@Ives.egh.com>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
	<1090603141629.39100B-100000@Ives.egh.com>
Message-ID: <20090610073616.GB7144@ubuntu.ubuntu-domain>

On Wed, Jun 03, 2009 at 02:55:47PM -0400, John Santos wrote:
> 
> This is not an issue specifically related to Python or Twisted, but
> there is a very serious synchronization issue that needs to be
> addressed with this application design.  (Trust me, I've seen this
> issue come up dozens of times in over 30 years of experience...)

All the points which you have mentioned are very true. I also see that
the kind of problems we might land up in if not are using certain
filesystem provided facilties.

If I were go for the file presence notification, I might use inotify,
which seems to be pretty good.

Thanks,
Senthil




From thomas.jakobsen at alexandra.dk  Wed Jun 10 06:04:16 2009
From: thomas.jakobsen at alexandra.dk (Thomas Jakobsen)
Date: Wed, 10 Jun 2009 12:04:16 +0200
Subject: [Twisted-Python] stop conditions and deferToThread()
Message-ID: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>

Hi

As discussed in a previous thread

   http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html

a task put in its own thread via deferToThread() won't stop even
though the reactor has stopped. It has to carry out its own check that
the reactor is running and stop if that is not the case.

My question is: Is it possible to use anything else than the
reactor.running as stop condition in this way? In my current twisted
application I would like to keep the reactor running but still have
some deferToThread jobs stop if e.g. an exception occurs in one of the
jobs.

In the code example below I try to use my own global field, running,
as stop condition, but it doesn't work. If I let bar() call
reactor.stop() after the time.sleep(3) and use reactor.running in
foo() it works, however.

import time
from twisted.internet import reactor
from twisted.internet.threads import deferToThread

running = True

def foo():
   while running:
       print "working"
       time.sleep(1)

def bar():
   time.sleep(3)
   print "stopping"
   running = False

d1 = deferToThread(foo)
d2 = deferToThread(bar)

reactor.run()


Best regards,
Thomas Jakobsen



From p.mayers at imperial.ac.uk  Wed Jun 10 06:18:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 10 Jun 2009 11:18:30 +0100
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <4A2F8876.6010809@imperial.ac.uk>

Thomas Jakobsen wrote:
> Hi
> 
> As discussed in a previous thread
> 
>    http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html
> 
> a task put in its own thread via deferToThread() won't stop even
> though the reactor has stopped. It has to carry out its own check that
> the reactor is running and stop if that is not the case.
> 
> My question is: Is it possible to use anything else than the
> reactor.running as stop condition in this way? In my current twisted
> application I would like to keep the reactor running but still have
> some deferToThread jobs stop if e.g. an exception occurs in one of the
> jobs.

A threading.Event object?

Can you run the jobs as sub-processes? Then you could just kill them.



From screwtape at froup.com  Wed Jun 10 07:43:21 2009
From: screwtape at froup.com (Tim Allen)
Date: Wed, 10 Jun 2009 21:43:21 +1000
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <20090610114321.GR16651@thristian.org>

I'm not sure this is the problem you're facing, but...

On Wed, Jun 10, 2009 at 12:04:16PM +0200, Thomas Jakobsen wrote:
> import time
> from twisted.internet import reactor
> from twisted.internet.threads import deferToThread
> 
> running = True
> 
> def foo():
>    while running:
>        print "working"
>        time.sleep(1)
> 
> def bar():
     global running
>    time.sleep(3)
>    print "stopping"
>    running = False
> 
> d1 = deferToThread(foo)
> d2 = deferToThread(bar)
> 
> reactor.run()

...does that make things run better?



From exarkun at divmod.com  Wed Jun 10 08:23:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jun 2009 08:23:45 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
Message-ID: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>

On Wed, 10 Jun 2009 11:20:15 +0800, biziap biziap <fetbiz at gmail.com> wrote:

Please don't top-post.

>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>before loseConnection().
>

No, this is wrong.  Do not call these methods, ever.

>
>2009/6/9 Nestor A. Diaz <nestor at tiendalinux.com>:
>> Hello, there is a bug on the SerialPort Win32 implementation (don't know
>> about the others), when i call the loseConnection method, it returns:
>>
>> twisted matrix exceptions.AttributeError: ?'SerialPort' object has no
>> attribute '_tempDataBuffer'
>>
>> if i wrap the serialport class and put a :
>>
>> ? ? ? ?self._tempDataBuffer = ''
>>
>> in the __init__ method, i get:
>>
>> raise NotImplementedError("%s does not implement writeSomeData" %
>> exceptions.NotImplementedError: __main__.MySerialPort does not implement
>> writeSomeData
>>
>> however the port gets closed the right way.
>>

Can you provide a minimal example which demonstrates this behavior?  It is
perhaps a bug in Twisted, but it is difficult to know without being able to
see *exactly* how the behavior is triggered.

Thanks,

Jean-Paul



From exarkun at divmod.com  Wed Jun 10 08:31:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jun 2009 08:31:33 -0400
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>

On Wed, 10 Jun 2009 12:04:16 +0200, Thomas Jakobsen <thomas.jakobsen at alexandra.dk> wrote:
>Hi
>
>As discussed in a previous thread
>
>   http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html
>
>a task put in its own thread via deferToThread() won't stop even
>though the reactor has stopped. It has to carry out its own check that
>the reactor is running and stop if that is not the case.

deferToThread is optimized for short-running tasks.  Thread creation costs
are amortized over the lifetime of the process.  This is because the intended
use of deferToThread is to run functions which compute some result and then
return, /not/ for functions which run forever (or at least until the process
is ready to exit).

You should try to find a way to re-arrange your code so that there is no
need to check if the reactor is still running - just do one piece of work
in a thread at a time.  When your non-threaded application code gets the
result back, if no one has asked it to shut down, then it can ask for
another job to be executed.

>My question is: Is it possible to use anything else than the
>reactor.running as stop condition in this way?

Also, I want to point out that while `reactor.running? isn't private (since
it doesn't start with an underscore, as Twisted's privacy policy dictates it
would need to), it still isn't something you really want to be using.  It's
not part of any interface, which means there is no guarantee it will be
provided by all reactors.

It's also not really for you.  It's a flag that the reactor uses to track
its own internal state.  Its meaning may not actually correspond to the
meaning you'd like to assign to it.  Whenever you're trying to do something
like this (which I still don't recommend), you should create your own state
tracking and use that instead.

Jean-Paul



From pywinder at monkeydriveengine.com  Wed Jun 10 20:03:33 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Wed, 10 Jun 2009 20:03:33 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>

Can someone point me to a working example of imap4 client?

I've tried the example off the site, code from Abe Fettig's book, and every
example I could find on the web. (most of them seem outdated, as do most
discussions I've found on the subject)

All of them invariably end with:

twisted.internet.error.TimeoutError: User timeout caused connection failure

or

twisted.internet.error.ConnectionLost: Connection to the other side was lost
in a non-clean fashion.



I've pointed the code at two different IMAP servers, both of which (one is
gmail, the other is a private server) I am able to access with a hitch with
python's own imaplib. I've tried the sample code on an Ubuntu system, OSX,
and tried python versions 2.5 and 2.6.

Ideally, I'd love to see a snipped which is able to log into an imap server
and gets a list of mailboxes.  If the example on the site works for other
folks, I'd love a nudge in the right direction to modify the code to get a
bit more debugging info.

Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090610/1c5a0715/attachment.htm 

From glyph at divmod.com  Thu Jun 11 02:26:18 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 11 Jun 2009 06:26:18 -0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
Message-ID: <20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>


On 10 Jun, 12:23 pm, exarkun at divmod.com wrote:
>Please don't top-post.

Since I'm seeing more and more messages where someone is top-posting, I 
think it might be helpful if we sent a more specific example of a 
positive example of what replies are expected to look like.  I think for 
now it might be good to say we prefer this style:

    http://en.wikipedia.org/wiki/Posting_style#Inline_replying

anybody else have a better reference?



From tarjei at nu.no  Thu Jun 11 03:24:09 2009
From: tarjei at nu.no (tarjei)
Date: Thu, 11 Jun 2009 09:24:09 +0200
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
References: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
Message-ID: <4A30B119.20402@nu.no>

On 06/11/2009 02:03 AM, Pywinder Singh wrote:
> Can someone point me to a working example of imap4 client?
>
> I've tried the example off the site, code from Abe Fettig's book, and
> every example I could find on the web. (most of them seem outdated, as
> do most discussions I've found on the subject)

Have you looked at chandler? AFAIK it uses (or used to use) Twisteds 
IMAP code.


Regards,
Tarjei

>
> All of them invariably end with:
>
>     twisted.internet.error.TimeoutError: User timeout caused connection
>     failure
>
>     or
>
>     twisted.internet.error.ConnectionLost: Connection to the other side
>     was lost in a non-clean fashion.
>
>
>
> I've pointed the code at two different IMAP servers, both of which (one
> is gmail, the other is a private server) I am able to access with a
> hitch with python's own imaplib. I've tried the sample code on an Ubuntu
> system, OSX, and tried python versions 2.5 and 2.6.
>
> Ideally, I'd love to see a snipped which is able to log into an imap
> server and gets a list of mailboxes.  If the example on the site works
> for other folks, I'd love a nudge in the right direction to modify the
> code to get a bit more debugging info.
>
> Thanks in advance!
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Tarjei Huse
Mobil: 920 63 413



From fetbiz at gmail.com  Thu Jun 11 04:11:42 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Thu, 11 Jun 2009 08:11:42 +0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
Message-ID: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>

>>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>>before loseConnection().
>>
>
> No, this is wrong.  Do not call these methods, ever.
>

I have experienced the same problem,
by calling the flashOutput, flashInput solved that problem in my case.
Maybe it is a workaround. I'd like to know how to do with it is the right way?
Thanks in advance.

Sorry about the top-post, hope that this time I am doing it right.



From p.mayers at imperial.ac.uk  Thu Jun 11 05:56:10 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 11 Jun 2009 10:56:10 +0100
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
References: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
Message-ID: <4A30D4BA.7060803@imperial.ac.uk>

Pywinder Singh wrote:
> 
> Ideally, I'd love to see a snipped which is able to log into an imap 
> server and gets a list of mailboxes.  If the example on the site works 

Here you go:

#!/usr/bin/python

from twisted.internet import reactor, protocol, defer
from twisted.mail import imap4

# change these...
username = '?'
password = '?'
servername = '?'

def mailboxes(list):
     for flags,sep,mbox in list:
         print mbox

def loggedin(res, proto):
     d = proto.list('','*')
     d.addCallback(mailboxes)
     return d

def connected(proto):
     print "connected", proto
     d = proto.login(username, password)
     d.addCallback(loggedin, proto)
     return d

def failed(f):
     print "failed", f
     return f

def done(_):
     reactor.callLater(0, reactor.stop)

def main():
     c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
     d = c.connectTCP(servername, 143)
     d.addCallbacks(connected, failed)
     d.addBoth(done)

reactor.callLater(0, main)
reactor.run()


This example makes use of deferred chaining i.e. returning a deferred 
from a callback handler, so you'll want to understand that.



From exarkun at divmod.com  Thu Jun 11 08:17:05 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 11 Jun 2009 08:17:05 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>
Message-ID: <20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>

On Thu, 11 Jun 2009 08:11:42 +0000, biziap biziap <fetbiz at gmail.com> wrote:
>>>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>>>before loseConnection().
>>>
>>
>> No, this is wrong.  Do not call these methods, ever.
>>
>
>I have experienced the same problem,
>by calling the flashOutput, flashInput solved that problem in my case.
>Maybe it is a workaround. I'd like to know how to do with it is the right way?
>Thanks in advance.

Do you have an example which demonstrates the problem?  There's no way to
know why you encounter the problem without knowing what your program is
doing.

>
>Sorry about the top-post, hope that this time I am doing it right.
>

Yes.  Thanks. :)

Jean-Paul



From pywinder at monkeydriveengine.com  Thu Jun 11 20:50:30 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 11 Jun 2009 20:50:30 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906111750t6bc5bd71r347cada3e2209d14@mail.gmail.com>

Tarjei,

Yep. I actually grabbed it, but on perusal, but its use of twisted seemed a
little too layered to help me at my current twisted expertise. Of course,
now that I think I have the problem narrowed down to the login phase, it
might help.

Tnx.

Tarjei wrote:

> On 06/11/2009 02:03 AM, Pywinder Singh wrote:
> > Can someone point me to a working example of imap4 client?
> >
> > I've tried the example off the site, code from Abe Fettig's book, and
> > every example I could find on the web. (most of them seem outdated, as
> > do most discussions I've found on the subject)
>
> Have you looked at chandler? AFAIK it uses (or used to use) Twisteds
> IMAP code.
>
>
> Regards,
> Tarjei
>
> >
> > All of them invariably end with:
> >
> >     twisted.internet.error.TimeoutError: User timeout caused connection
> >     failure
> >
> >     or
> >
> >     twisted.internet.error.ConnectionLost: Connection to the other side
> >     was lost in a non-clean fashion.
> >
> >
> >
> > I've pointed the code at two different IMAP servers, both of which (one
> > is gmail, the other is a private server) I am able to access with a
> > hitch with python's own imaplib. I've tried the sample code on an Ubuntu
> > system, OSX, and tried python versions 2.5 and 2.6.
> >
> > Ideally, I'd love to see a snipped which is able to log into an imap
> > server and gets a list of mailboxes.  If the example on the site works
> > for other folks, I'd love a nudge in the right direction to modify the
> > code to get a bit more debugging info.
> >
> > Thanks in advance!
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> --
> Tarjei Huse
> Mobil: 920 63 413
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090611/6b233aba/attachment.htm 

From pywinder at monkeydriveengine.com  Thu Jun 11 20:45:04 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 11 Jun 2009 20:45:04 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>

Phil,

Much obliged.

Was able to isolate and confirm that the real issue is that login is hanging
for some reason, and causing the timeout message. I suspect SSL/TLS issues,
which at least gives me a decided place to start investigating.

Thanks again for the code, it was sanity inducing to say the least. ;)


Phil Mayers wrote:

> Pywinder Singh wrote:
> >
> > Ideally, I'd love to see a snipped which is able to log into an imap
> > server and gets a list of mailboxes.  If the example on the site works
>
> Here you go:
>
> #!/usr/bin/python
>
> from twisted.internet import reactor, protocol, defer
> from twisted.mail import imap4
>
> # change these...
> username = '?'
> password = '?'
> servername = '?'
>
> def mailboxes(list):
>      for flags,sep,mbox in list:
>          print mbox
>
> def loggedin(res, proto):
>      d = proto.list('','*')
>      d.addCallback(mailboxes)
>      return d
>
> def connected(proto):
>      print "connected", proto
>      d = proto.login(username, password)
>      d.addCallback(loggedin, proto)
>      return d
>
> def failed(f):
>      print "failed", f
>      return f
>
> def done(_):
>      reactor.callLater(0, reactor.stop)
>
> def main():
>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
>      d = c.connectTCP(servername, 143)
>      d.addCallbacks(connected, failed)
>      d.addBoth(done)
>
> reactor.callLater(0, main)
> reactor.run()
>
>
> This example makes use of deferred chaining i.e. returning a deferred
> from a callback handler, so you'll want to understand that.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090611/1a610efe/attachment.htm 

From fetbiz at gmail.com  Thu Jun 11 22:39:49 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Fri, 12 Jun 2009 02:39:49 +0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>
	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
Message-ID: <d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>

2009/6/11 Jean-Paul Calderone <exarkun at divmod.com>:
>
> Do you have an example which demonstrates the problem?  There's no way to
> know why you encounter the problem without knowing what your program is
> doing.
>

I am developing a program which verifies every PCB in manufacturing factory.
The tester (WindowsXP user) has to plug on the serial port for the
testing process,
then unplug for next testing. The serial connection has to connect and
disconnect
for every testing, that's where the problem happened.

Since the whole program requires some device-specific modules to run.
I will cut it down to a neat version which can re-produce the problem.
It takes time. Soon after it has done, I will post it.

Iap



From clemesha at gmail.com  Fri Jun 12 04:40:57 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 12 Jun 2009 01:40:57 -0700
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
Message-ID: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>

Hi,

I've wondered myself how to do this, so thanks Phil.

I extended Phil's solution to work with Gmail, which boils
down to using SSL and setting the correct servername and port, see here:
http://gist.github.com/128521

Pywinder, you should be able to just change the username/password
and it will work for you (you might have to have the python ssl module
installed - post again if that is the case and it's not working for you)

How to do useful stuff with the 'mailboxes' function in the script is
another question (which I dont know the answer to).  Maybe post
your usage if you have a chance.


-Alex





On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
Singh<pywinder at monkeydriveengine.com> wrote:
> Phil,
>
> Much obliged.
>
> Was able to isolate and confirm that the real issue is that login is hanging
> for some reason, and causing the timeout message. I suspect SSL/TLS issues,
> which at least gives me a decided place to start investigating.
>
> Thanks again for the code, it was sanity inducing to say the least. ;)
>
>
> Phil Mayers wrote:
>>
>> Pywinder Singh wrote:
>> >
>> > Ideally, I'd love to see a snipped which is able to log into an imap
>> > server and gets a list of mailboxes.? If the example on the site works
>>
>> Here you go:
>>
>> #!/usr/bin/python
>>
>> from twisted.internet import reactor, protocol, defer
>> from twisted.mail import imap4
>>
>> # change these...
>> username = '?'
>> password = '?'
>> servername = '?'
>>
>> def mailboxes(list):
>> ???? for flags,sep,mbox in list:
>> ???????? print mbox
>>
>> def loggedin(res, proto):
>> ???? d = proto.list('','*')
>> ???? d.addCallback(mailboxes)
>> ???? return d
>>
>> def connected(proto):
>> ???? print "connected", proto
>> ???? d = proto.login(username, password)
>> ???? d.addCallback(loggedin, proto)
>> ???? return d
>>
>> def failed(f):
>> ???? print "failed", f
>> ???? return f
>>
>> def done(_):
>> ???? reactor.callLater(0, reactor.stop)
>>
>> def main():
>> ???? c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
>> ???? d = c.connectTCP(servername, 143)
>> ???? d.addCallbacks(connected, failed)
>> ???? d.addBoth(done)
>>
>> reactor.callLater(0, main)
>> reactor.run()
>>
>>
>> This example makes use of deferred chaining i.e. returning a deferred
>> from a callback handler, so you'll want to understand that.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From andrewfr_ice at yahoo.com  Fri Jun 12 09:50:55 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 12 Jun 2009 06:50:55 -0700 (PDT)
Subject: [Twisted-Python] Question about File Descriptors
Message-ID: <134022.27032.qm@web34203.mail.mud.yahoo.com>


Hi Folks:

This is not a Twisted question per se but here goes. I am using Linux. I want to do some tests and I need to increase the numbers of file descriptors. What are the memory ramifications (i.e, I raise the max descriptor count to 65535)? Also should I move to the EPoll reactor? Thanks in advance.

Cheers,
Andrew


      



From thomas.jakobsen at alexandra.dk  Fri Jun 12 11:45:47 2009
From: thomas.jakobsen at alexandra.dk (Thomas Jakobsen)
Date: Fri, 12 Jun 2009 17:45:47 +0200
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
	<20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>
Message-ID: <232f319b0906120845v2b590480xd72b3771931c6497@mail.gmail.com>

Thanks for the replies.

In my particular case, adding a

   global running

as Tim Allen pointed out, actually did it.

Regards,
Thomas



From powdahound at gmail.com  Fri Jun 12 16:33:26 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Fri, 12 Jun 2009 13:33:26 -0700
Subject: [Twisted-Python] Custom logging for twistd plugin
Message-ID: <812f32000906121333q4a35a248se93a4622df46a73e@mail.gmail.com>

I'm looking to make some changes to the way a twistd
plugin<http://twistedmatrix.com/projects/core/documentation/howto/plugin.html>logs
information. The docs on
logging<http://twistedmatrix.com/projects/core/documentation/howto/logging.html>and
the application
framework<http://twistedmatrix.com/projects/core/documentation/howto/application.html#auto6>don't
currently mention how plugins fit in.

My main goal is to have the log include information about the log level of
each message represented as either text or an integer (like logging.DEBUG,
etc). This would make log monitoring tools and alerts much more accurate as
well as easier to write. I'd also like to be able to call log methods for
each level (log.debug(), log.error(), etc) instead of only having log.msg().

For example, I'd prefer to turn:
2009-06-12 13:04:12-0700 [-] Foo service starting
2009-06-12 13:04:12-0700 [-] Loaded config from /etc/foo/missing.cfg
2009-06-12 13:04:12-0700 [-] Log file does not exist: /etc/foo/missing.cfg
into something like:
20|2009-06-12 13:04:12|Foo service starting
10|2009-06-12 13:04:12|Loaded config from /etc/foo/missing.cfg
50|2009-06-12 13:04:12|Log file does not exist: /etc/foo/missing.cfg

(10 = logging.DEBUG, 20 = logging.INFO, 50 = logging.CRITICAL from Python's
logging module <http://docs.python.org/library/logging.html>)

I've looked through most of the current logging code but I'm new to both
Python and Twisted and am not sure if adding what I want through subclassing
is the best approach or even a possibility.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090612/86b751e8/attachment.htm 

From pywinder at monkeydriveengine.com  Fri Jun 12 21:42:55 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Fri, 12 Jun 2009 21:42:55 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
	<d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
Message-ID: <b3a40fea0906121842kb549322mcf32aac8066580d3@mail.gmail.com>

Alex,

That link was invaluable.

Twisted docs + project deadlines + my own ignorance = I completely had the
wrong idea about how to set up SSL. Code worked like a charm, and now I'm
very happy not to have to finish the project using python's native imaplib.

I'll certainly share the fruits of my labour with this list.

Thanks again....


On Fri, Jun 12, 2009 at 4:40 AM, Alex Clemesha <clemesha at gmail.com> wrote:

> Hi,
>
> I've wondered myself how to do this, so thanks Phil.
>
> I extended Phil's solution to work with Gmail, which boils
> down to using SSL and setting the correct servername and port, see here:
> http://gist.github.com/128521
>
> Pywinder, you should be able to just change the username/password
> and it will work for you (you might have to have the python ssl module
> installed - post again if that is the case and it's not working for you)
>
> How to do useful stuff with the 'mailboxes' function in the script is
> another question (which I dont know the answer to).  Maybe post
> your usage if you have a chance.
>
>
> -Alex
>
>
>
>
>
> On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
> Singh<pywinder at monkeydriveengine.com> wrote:
> > Phil,
> >
> > Much obliged.
> >
> > Was able to isolate and confirm that the real issue is that login is
> hanging
> > for some reason, and causing the timeout message. I suspect SSL/TLS
> issues,
> > which at least gives me a decided place to start investigating.
> >
> > Thanks again for the code, it was sanity inducing to say the least. ;)
> >
> >
> > Phil Mayers wrote:
> >>
> >> Pywinder Singh wrote:
> >> >
> >> > Ideally, I'd love to see a snipped which is able to log into an imap
> >> > server and gets a list of mailboxes.  If the example on the site works
> >>
> >> Here you go:
> >>
> >> #!/usr/bin/python
> >>
> >> from twisted.internet import reactor, protocol, defer
> >> from twisted.mail import imap4
> >>
> >> # change these...
> >> username = '?'
> >> password = '?'
> >> servername = '?'
> >>
> >> def mailboxes(list):
> >>      for flags,sep,mbox in list:
> >>          print mbox
> >>
> >> def loggedin(res, proto):
> >>      d = proto.list('','*')
> >>      d.addCallback(mailboxes)
> >>      return d
> >>
> >> def connected(proto):
> >>      print "connected", proto
> >>      d = proto.login(username, password)
> >>      d.addCallback(loggedin, proto)
> >>      return d
> >>
> >> def failed(f):
> >>      print "failed", f
> >>      return f
> >>
> >> def done(_):
> >>      reactor.callLater(0, reactor.stop)
> >>
> >> def main():
> >>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
> >>      d = c.connectTCP(servername, 143)
> >>      d.addCallbacks(connected, failed)
> >>      d.addBoth(done)
> >>
> >> reactor.callLater(0, main)
> >> reactor.run()
> >>
> >>
> >> This example makes use of deferred chaining i.e. returning a deferred
> >> from a callback handler, so you'll want to understand that.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> Alex Clemesha
> clemesha.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090612/22b8829b/attachment.htm 

From Brendan at BrendanSimon.com  Sat Jun 13 05:30:52 2009
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Sat, 13 Jun 2009 19:30:52 +1000
Subject: [Twisted-Python] serial port and http program
Message-ID: <4A3371CC.6010804@BrendanSimon.com>

I have a small program that I want to write in python with a wxpython gui.

The program has to talk to a hand held device via a serial port and then
talk to a http server which returns an xml stream/file, which is then
parsed and information sent back to the hand held device over the serial
port.

Is there an advantage to using twisted for such an application ??

Is it more complicated to do so (i.e. using twisted versus not using
twisted).

Would it just be an added dependency that would be more of a pain than a
benefit ??

Thanks for any advice.
Brendan.




From Brendan at BrendanSimon.com  Sat Jun 13 07:13:21 2009
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Sat, 13 Jun 2009 21:13:21 +1000
Subject: [Twisted-Python] serial port protocols
Message-ID: <4A3389D1.6030009@BrendanSimon.com>

Can twisted be used to access a serial port on OS X, MS Windows, linux,
etc ???

Is there any support for serial protocols (eg. BISYNC, PPP, etc) ???

Can twisted be used to create custom serial protocols ???

Thanks, Brendan.




From george at ringdevelopment.com  Sat Jun 13 08:02:55 2009
From: george at ringdevelopment.com (George Pauly)
Date: Sat, 13 Jun 2009 08:02:55 -0400
Subject: [Twisted-Python] serial port and http program
In-Reply-To: <4A3371CC.6010804@BrendanSimon.com>
References: <4A3371CC.6010804@BrendanSimon.com>
Message-ID: <1244894575.19787.199.camel@localhost.localdomain>

Brendan,

Asynchronous internet and serial port communication are supported by
Twisted.

You didn't give enough detail to determine that you're looking for
asynchronous communication.  If you're not then Twisted will be an
unnecessary complication.

George


On Sat, 2009-06-13 at 19:30 +1000, Brendan Simon wrote:
> I have a small program that I want to write in python with a wxpython gui.
> 
> The program has to talk to a hand held device via a serial port and then
> talk to a http server which returns an xml stream/file, which is then
> parsed and information sent back to the hand held device over the serial
> port.
> 
> Is there an advantage to using twisted for such an application ??
> 
> Is it more complicated to do so (i.e. using twisted versus not using
> twisted).
> 
> Would it just be an added dependency that would be more of a pain than a
> benefit ??
> 
> Thanks for any advice.
> Brendan.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From james at mansionfamily.plus.com  Sat Jun 13 17:26:48 2009
From: james at mansionfamily.plus.com (James Mansion)
Date: Sat, 13 Jun 2009 22:26:48 +0100
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
	<20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>
Message-ID: <4A341998.5010101@mansionfamily.plus.com>

glyph at divmod.com wrote:
> Since I'm seeing more and more messages where someone is top-posting, I 
> think it might be helpful if we sent a more specific example of a 
>   
You could try not being anal about it.  In 2 decades working in 
investment banks I
don't think I've seen a work evironment where it isn't the norm.  Some 
of us even
prefer it.




From exarkun at twistedmatrix.com  Sun Jun 14 00:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Jun 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1244952311.35.297761201@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090614/501f68f2/attachment.htm 

From exarkun at divmod.com  Sun Jun 14 01:05:10 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 14 Jun 2009 01:05:10 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <4A341998.5010101@mansionfamily.plus.com>
Message-ID: <20090614050510.22176.789766484.divmod.quotient.5250@henry.divmod.com>

On Sat, 13 Jun 2009 22:26:48 +0100, James Mansion <james at mansionfamily.plus.com> wrote:
>glyph at divmod.com wrote:
>> Since I'm seeing more and more messages where someone is top-posting, I
>> think it might be helpful if we sent a more specific example of a
>>
>You could try not being anal about it.  In 2 decades working in
>investment banks I
>don't think I've seen a work evironment where it isn't the norm.  Some
>of us even
>prefer it.
>

Let's not make a big deal out of this, please.  I'm sure we all have
better things to do.

Jean-Paul



From itamar at itamarst.org  Mon Jun 15 09:43:38 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Jun 2009 09:43:38 -0400
Subject: [Twisted-Python] serial port protocols
In-Reply-To: <4A3389D1.6030009@BrendanSimon.com>
References: <4A3389D1.6030009@BrendanSimon.com>
Message-ID: <1245073418.8754.105.camel@pintsize>

On Sat, 2009-06-13 at 21:13 +1000, Brendan Simon wrote:
> Can twisted be used to access a serial port on OS X, MS Windows, linux,
> etc ???

Yes, via the twisted.internet.serial module.

> Is there any support for serial protocols (eg. BISYNC, PPP, etc) ???

You'd have to write them yourself, except for a couple, e.g. Logitech
Serial Mouse
(http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/mice/mouseman.py) and a couple of GPS protocols.

> Can twisted be used to create custom serial protocols ???

Yes. For example,
http://twistedmatrix.com/projects/core/documentation/examples/mouse.py
shows how to use the mouse protocol.




From itamar at itamarst.org  Mon Jun 15 09:45:19 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Jun 2009 09:45:19 -0400
Subject: [Twisted-Python] Question about File Descriptors
In-Reply-To: <134022.27032.qm@web34203.mail.mud.yahoo.com>
References: <134022.27032.qm@web34203.mail.mud.yahoo.com>
Message-ID: <1245073519.8754.107.camel@pintsize>

On Fri, 2009-06-12 at 06:50 -0700, Andrew Francis wrote:

> What are the memory ramifications (i.e, I raise the max descriptor
> count to 65535)? 

The memory in use by your own Python objects will probably take the most
memory, so you'll need to figure that out on your own.

> Also should I move to the EPoll reactor?

Yes, it'll be either impossible (with select) or really slow (poll)
otherwise once you get pass a few thousand descriptors.




From andrewfr_ice at yahoo.com  Mon Jun 15 14:35:46 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 15 Jun 2009 11:35:46 -0700 (PDT)
Subject: [Twisted-Python] Question about File Descriptors
Message-ID: <376411.73462.qm@web34205.mail.mud.yahoo.com>


Hi Itamar:

--- On Mon, 6/15/09, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com> wrote:

> Message: 2
> Date: Mon, 15 Jun 2009 09:45:19 -0400
> From: Itamar Shtull-Trauring <itamar at itamarst.org>
> Subject: Re: [Twisted-Python] Question about File
> Descriptors
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <1245073519.8754.107.camel at pintsize>
> Content-Type: text/plain

IST> The memory in use by your own Python objects will probably
IST> take the most memory, so you'll need to figure that out on your own.

Thanks for the feedback! Yes. It would be good to figure out how much 
memory a tasklet and a deferred use. However I was worried about how 
much more kernel memory is used up when one increases the descriptors. 
This info would be useful in helping me decide whether to use a small
or large memory model. I guess I'll wing it.

I will also assume it would be good to recompile Python?

AF> Also should I move to the EPoll reactor?

IST> Yes, it'll be either impossible (with select) or really
IST> slow (poll)
IST> otherwise once you get pass a few thousand descriptors.

Thanks for the advice, will do.

Cheers,
Andrew



      



From petshmidt at googlemail.com  Tue Jun 16 07:23:17 2009
From: petshmidt at googlemail.com (Pet)
Date: Tue, 16 Jun 2009 13:23:17 +0200
Subject: [Twisted-Python] can addCallback accept list of deferreds?
Message-ID: <b460e9630906160423x2bf6c95dh9d54908053fe8b62@mail.gmail.com>

Hi,

I'm trying to process several items in callback function writeLog
            d.addCallback(self.writeLog,g=g)
see below.

Can writeLog return DeferredList instead of Deferred?
WriteLog should run several inserts into db (some of which may fail).
Or am I completely wrong here?

Thanks, Pet

def getData(self, *args, **kwargs ):
    try:
        g = MyClass(self.db)
        d = self.getResult(params=kwargs['params'], g=g)
        if d:
            d.addCallback(self.sendResult)
            d.addErrback(log.err)

            d.addCallback(self.writeLog,g=g)
            d.addErrback(log.err)

            return d
    except Exception, e:
        log.msg('Unknown error in getData:', e)
        return False


def writeLog(self, *args, **kwargs):
    g = kwargs['g']
    dlist = [self.wLog(g, p) for p in g.list]
    d = DeferredList(dlist, consumeErrors=True).addCallback(log.err)
    return d

def wLog(self, g, p):
    return self.db.runInteraction(g.insertLog,p)



From artman328 at gmail.com  Tue Jun 16 10:11:00 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Tue, 16 Jun 2009 22:11:00 +0800
Subject: [Twisted-Python] High Concurrency
Message-ID: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>

Hi,
I want to use twisted to write a server which is to get purchase orders from
about tens of thousands clients sent by wireless net work (tcp protocol) and
store the orders into a DBMS system. I wonder if it is possible and how to
deal with the high concurrency.

any idea?

thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090616/7ac90a19/attachment.htm 

From exarkun at divmod.com  Tue Jun 16 10:39:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 16 Jun 2009 10:39:36 -0400
Subject: [Twisted-Python] can addCallback accept list of deferreds?
In-Reply-To: <b460e9630906160423x2bf6c95dh9d54908053fe8b62@mail.gmail.com>
Message-ID: <20090616143936.22176.1964068673.divmod.quotient.6003@henry.divmod.com>

On Tue, 16 Jun 2009 13:23:17 +0200, Pet <petshmidt at googlemail.com> wrote:
>Hi,
>
>I'm trying to process several items in callback function writeLog
>            d.addCallback(self.writeLog,g=g)
>see below.
>
>Can writeLog return DeferredList instead of Deferred?

Yes, it can.  Deferred and DeferredList are mostly interchangeable.

Jean-Paul



From nestor at tiendalinux.com  Tue Jun 16 13:37:52 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Tue, 16 Jun 2009 12:37:52 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG Still
In-Reply-To: <d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
	<d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
Message-ID: <4A37D870.7020300@tiendalinux.com>

Hello, i had wrapper the loseConnection method, but it still throws the 
same excepcion:

class MySerialPort ( SerialPort ) :

    def __init__(self, the_protocol, port, reactor):
# type, host and port are used for my own purposes.
        self.type = "Local"
        self.host = None
        self.port = port
        SerialPort.__init__ (self, the_protocol, port, reactor)

    def loseConnection(self):
      
        # Fix
        self.protocol.transport.flushInput()
        self.protocol.transport.flushOutput()
       
        # call upper class method
        SerialPort.loseConnection (self)


at least under windows, when i call: serial_port.loseConnection()

Traceback (most recent call last):
  File "C:\Python24\Lib\site-packages\twisted\python\log.py", line 84, 
in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\log.py", line 69, 
in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\context.py", line 
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\context.py", line 
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File 
"C:\Python24\Lib\site-packages\twisted\internet\win32eventreactor.py", 
line 194, in _runWrite
    closed = fd.doWrite()
  File "C:\Python24\Lib\site-packages\twisted\internet\abstract.py", 
line 101, in doWrite
    self.dataBuffer = buffer(self.dataBuffer, self.offset) + 
"".join(self._tempDataBuffer)
exceptions.AttributeError: 'MySerialPort' object has no attribute 
'_tempDataBuffer'

Slds.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From itamar at itamarst.org  Wed Jun 17 15:31:15 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Jun 2009 15:31:15 -0400 (EDT)
Subject: [Twisted-Python] High Concurrency
In-Reply-To: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>
References: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>
Message-ID: <48018.63.107.91.99.1245267075.squirrel@webmail.zoteca.com>

> Hi,
> I want to use twisted to write a server which is to get purchase orders
> from
> about tens of thousands clients sent by wireless net work (tcp protocol)
> and
> store the orders into a DBMS system. I wonder if it is possible and how to
> deal with the high concurrency.

It is possible.

Dealing with concurrency depends on how many clients will be connected at
a given time, and how many requests you'll need to process in parallel. If
all of them, you'll probably want Linux with epoll reactor, and it may be
you'll need a distributed architecture with multiple servers.




From Benjamin.Rutt at gs.com  Wed Jun 17 15:47:38 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Wed, 17 Jun 2009 15:47:38 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>

I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
python tree).  One of my users is complaining that when he uses trial to
test some twisted programs, although his test passes, he has to stare at
a stack trace like this which mentions dropin.cache.new failing to be
written:

$ cat foo.py
#!/sw/external/python-2.6.1/bin/python

from twisted.trial import unittest

class MyTestClass(unittest.TestCase):
    def test_foobar(self):
        print 'hello, world!'
        self.failUnless(1 == 1)
$ /sw/external/twisted-8.2.0/bin/trial ./foo.py
/sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
DeprecationWarning: the md5 module is deprecated; use hashlib instead
  import os, md5, sys
/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
DeprecationWarning: the sha module is deprecated; use the hashlib module
instead
  import sha
/sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
SyntaxWarning: assertion is always true, perhaps remove parentheses?
  assert (oldChild.parentNode is self,
Traceback (most recent call last):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
line 293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
line 279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line
200, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line
179, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py", line
623, in setContent
    f = sib.open('w')
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py", line
433, in open
    return open(self.path, mode+'b')
exceptions.IOError: [Errno 30] Read-only file system:
'/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
foo
  MyTestClass
    test_foobar ... hello, world!
                                                       [OK]

------------------------------------------------------------------------
-------
Ran 1 tests in 0.023s

PASSED (successes=1)

I would consider this to be an install bug.  Evidently, trial uses
plugins, which upon reading
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#a
uto3 I find that plugins need up-to-date dropin.cache files to be built,
or else they'll be built dynamically; the latter step fails in my case
due to my site-wide install being on a read-only directory.  The docs
say "when installing or removing software which provides Twisted
plugins, the site administrator should be sure the cache is
regenerated"; however all I did was install twisted itself, not any
specific plugins.  All I did to install twisted was 'python setup.py
install --home=...' and at no later point did I ever add new plugins to
it.  Why can't the install take care of initial dropin.cache generation
for me?

I see a related issue http://twistedmatrix.com/trac/ticket/2409.

Regardless of whether ticket 2409 goes anywhere, should I raise an issue
that the install should really take care of initial dropin.cache
generation, much like python install takes care of std lib .py->.pyc
generation?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090617/d7b81071/attachment.htm 

From happybrowndog at hotmail.com  Wed Jun 17 16:32:19 2009
From: happybrowndog at hotmail.com (hbd)
Date: Wed, 17 Jun 2009 13:32:19 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
Message-ID: <h1bjvv$8ne$1@ger.gmane.org>

Is there any reason why I am getting this error when I try to get 
perspective broker to be on port 80?

twisted.internet.error.CannotListenError: Couldn't listen on any:80: 
(13, 'Permission denied').

I made sure port 80 was not used by Apache or anything else by checking 
with netstat.

Here is the relevant pieces of twisted code:

application = twisted.application.service.Application("eventserver")

rpcservice = TheService()
flashservice = XMLSocket(FlashReceiver)

myServiceCollection = 
twisted.application.service.IServiceCollection(application)

portalmonitor = portal.Portal(DefaultRealm())
dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
dbu.addUser("user1","pass1")
portalmonitor.registerChecker(dbu)

internet.TCPServer(5002, 
server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection) 

internet.SSLServer(80, 
pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection) 

internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)




From clemesha at gmail.com  Wed Jun 17 16:41:44 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 13:41:44 -0700
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>

Hi,

Just type "sudo twistd" and the errors will go away.
(You may already know of this work-around)

 I agree with you that it would be nice for these to never show up in
the first place.
I looked at the ticket you mention, but it seems that the cleaner solution
would be to resolve these issues at install/upgrade time.


-Alex


On Wed, Jun 17, 2009 at 12:47 PM, Rutt, Benjamin<Benjamin.Rutt at gs.com> wrote:
> I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
> python tree).? One of my users is complaining that when he uses trial to
> test some twisted programs, although his test passes, he has to stare at a
> stack trace like this which mentions dropin.cache.new failing to be written:
>
> $ cat foo.py
> #!/sw/external/python-2.6.1/bin/python
>
> from twisted.trial import unittest
>
> class MyTestClass(unittest.TestCase):
> ??? def test_foobar(self):
> ??????? print 'hello, world!'
> ??????? self.failUnless(1 == 1)
> $ /sw/external/twisted-8.2.0/bin/trial ./foo.py
> /sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
> DeprecationWarning: the md5 module is deprecated; use hashlib instead
>
> ? import os, md5, sys
> /sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
> DeprecationWarning: the sha module is deprecated; use the hashlib module
> instead
>
> ? import sha
> /sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
> SyntaxWarning: assertion is always true, perhaps remove parentheses?
>
> ? assert (oldChild.parentNode is self,
> Traceback (most recent call last):
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py", line
> 241, in parseOptions
> ??? self.postOptions()
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
> line 293, in postOptions
> ??? self['reporter'] = self._loadReporterByName(self['reporter'])
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
> line 279, in _loadReporterByName
> ??? for p in plugin.getPlugins(itrial.IReporter):
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 200,
> in getPlugins
> ??? allDropins = getCache(package)
> --- <exception caught here> ---
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 179,
> in getCache
> ??? dropinPath.setContent(pickle.dumps(dropinDotCache))
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
> line 623, in setContent
> ??? f = sib.open('w')
> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
> line 433, in open
> ??? return open(self.path, mode+'b')
> exceptions.IOError: [Errno 30] Read-only file system:
> '/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
>
> foo
> ? MyTestClass
> ??? test_foobar ... hello, world!
> ?????????????????????????????????????????????????????? [OK]
>
> -------------------------------------------------------------------------------
> Ran 1 tests in 0.023s
>
> PASSED (successes=1)
>
> I would consider this to be an install bug.? Evidently, trial uses plugins,
> which upon reading
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
> I find that plugins need up-to-date dropin.cache files to be built, or else
> they'll be built dynamically; the latter step fails in my case due to my
> site-wide install being on a read-only directory.? The docs say "when
> installing or removing software which provides Twisted plugins, the site
> administrator should be sure the cache is regenerated"; however all I did
> was install twisted itself, not any specific plugins.? All I did to install
> twisted was 'python setup.py install --home=...' and at no later point did I
> ever add new plugins to it.? Why can't the install take care of initial
> dropin.cache generation for me?
>
> I see a related issue http://twistedmatrix.com/trac/ticket/2409.
>
> Regardless of whether ticket 2409 goes anywhere, should I raise an issue
> that the install should really take care of initial dropin.cache generation,
> much like python install takes care of std lib .py->.pyc generation?
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Wed Jun 17 16:45:35 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 17 Jun 2009 16:45:35 -0400
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>

On Jun 17, 2009, at 4:32 PM, hbd wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by  
> checking
> with netstat.

Probably not a Twisted issue. You need to be root to bind to a port  
less than 1024. Try it with sudo.

-phil





From clemesha at gmail.com  Wed Jun 17 16:48:00 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 13:48:00 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <d272f0690906171348wb9b1915n8cb23e42764cbda1@mail.gmail.com>

On Wed, Jun 17, 2009 at 1:32 PM, hbd<happybrowndog at hotmail.com> wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').

Are you running this at root? Aka "sudo twistd ...".

Specifically:
Programs written to listen on a port number lower than 1024 must
be executed with root privilege (that is, UID 0)


-Alex




> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection =
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002,
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection)
>
> internet.SSLServer(80,
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection)
>
> internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From deldotdr at gmail.com  Wed Jun 17 16:48:14 2009
From: deldotdr at gmail.com (Dorian Raymer)
Date: Wed, 17 Jun 2009 13:48:14 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <ea3c455d0906171348n28aee70eo7270154fe19bf8ba@mail.gmail.com>

If you want to run PB on port 80, you need to start twistd with root
privileges.

Do you really want to serve PB on port 80?
You probably want to serve it on an un-privileged port (> 1023). I think the
spread source suggests 8787 as the port to use for a PBServer.

-Dorian

On Wed, Jun 17, 2009 at 1:32 PM, hbd <happybrowndog at hotmail.com> wrote:

> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection =
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002,
>
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection)
>
> internet.SSLServer(80,
>
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection)
>
> internet.TCPServer(5001,
> flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090617/add8e9fe/attachment.htm 

From radix at twistedmatrix.com  Wed Jun 17 16:50:54 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 17 Jun 2009 16:50:54 -0400
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <60ed19d40906171350r5f934f5dh1ae35d2d294377da@mail.gmail.com>

\On Wed, Jun 17, 2009 at 4:32 PM, hbd<happybrowndog at hotmail.com> wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.


On Linux (and probably some other unixes), only root can bind to ports
<= 1024. A common solution is to use the 'authbind' program, or to
just run your program as root and then drop privileges after you bind
to the port. twistd supports that with the --uid and --gid parameters.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From orlenko at gmail.com  Wed Jun 17 17:00:00 2009
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Wed, 17 Jun 2009 14:00:00 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <4A395950.9060002@gmail.com>

Try running as root (so you can bind to the privileged ports).


On 17/06/2009 1:32 PM, hbd wrote:
> Is there any reason why I am getting this error when I try to get 
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80: 
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking 
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection = 
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002, 
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection) 
>
> internet.SSLServer(80, 
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection) 
>
> internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From happybrowndog at hotmail.com  Wed Jun 17 17:00:06 2009
From: happybrowndog at hotmail.com (hbd)
Date: Wed, 17 Jun 2009 14:00:06 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
	<65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>
Message-ID: <h1blk1$e5a$1@ger.gmane.org>

Thanks to all of you!  Indeed I needed to be root.


Phil Christensen wrote:
> On Jun 17, 2009, at 4:32 PM, hbd wrote:
>> Is there any reason why I am getting this error when I try to get
>> perspective broker to be on port 80?
>>
>> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
>> (13, 'Permission denied').
>>
>> I made sure port 80 was not used by Apache or anything else by  
>> checking
>> with netstat.
> 
> Probably not a Twisted issue. You need to be root to bind to a port  
> less than 1024. Try it with sudo.
> 
> -phil




From clemesha at gmail.com  Wed Jun 17 17:37:01 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 14:37:01 -0700
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
Message-ID: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>

On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
> Hi,
>
> Just type "sudo twistd" and the errors will go away.
> (You may already know of this work-around)
>
> ?I agree with you that it would be nice for these to never show up in
> the first place.
> I looked at the ticket you mention, but it seems that the cleaner solution
> would be to resolve these issues at install/upgrade time.

Just to follow up on this a bit more, reading from here:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
in the section "Plugin Caching", there is this quote:

"""
[snip]... when installing or removing software which provides Twisted
plugins, the site administrator should be sure the cache is
regenerated. Well-behaved package managers for such software should
take this task upon themselves, since it is trivially automatable.
"""

The way I read this, requiring the site admin to run "sudo twistd" to
regenerate the cache file is a feature, not a bug.
Twisted devs: is this the case?  Still maybe the install should do the
"trivially automatable" bit?

I don't have a strong opinion either way, as I'm just now learning
about the details of all this.
thanks,
Alex





>
>
> -Alex
>
>
> On Wed, Jun 17, 2009 at 12:47 PM, Rutt, Benjamin<Benjamin.Rutt at gs.com> wrote:
>> I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
>> python tree).? One of my users is complaining that when he uses trial to
>> test some twisted programs, although his test passes, he has to stare at a
>> stack trace like this which mentions dropin.cache.new failing to be written:
>>
>> $ cat foo.py
>> #!/sw/external/python-2.6.1/bin/python
>>
>> from twisted.trial import unittest
>>
>> class MyTestClass(unittest.TestCase):
>> ??? def test_foobar(self):
>> ??????? print 'hello, world!'
>> ??????? self.failUnless(1 == 1)
>> $ /sw/external/twisted-8.2.0/bin/trial ./foo.py
>> /sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
>> DeprecationWarning: the md5 module is deprecated; use hashlib instead
>>
>> ? import os, md5, sys
>> /sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
>> DeprecationWarning: the sha module is deprecated; use the hashlib module
>> instead
>>
>> ? import sha
>> /sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
>> SyntaxWarning: assertion is always true, perhaps remove parentheses?
>>
>> ? assert (oldChild.parentNode is self,
>> Traceback (most recent call last):
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py", line
>> 241, in parseOptions
>> ??? self.postOptions()
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
>> line 293, in postOptions
>> ??? self['reporter'] = self._loadReporterByName(self['reporter'])
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
>> line 279, in _loadReporterByName
>> ??? for p in plugin.getPlugins(itrial.IReporter):
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 200,
>> in getPlugins
>> ??? allDropins = getCache(package)
>> --- <exception caught here> ---
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 179,
>> in getCache
>> ??? dropinPath.setContent(pickle.dumps(dropinDotCache))
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
>> line 623, in setContent
>> ??? f = sib.open('w')
>> ? File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
>> line 433, in open
>> ??? return open(self.path, mode+'b')
>> exceptions.IOError: [Errno 30] Read-only file system:
>> '/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
>>
>> foo
>> ? MyTestClass
>> ??? test_foobar ... hello, world!
>> ?????????????????????????????????????????????????????? [OK]
>>
>> -------------------------------------------------------------------------------
>> Ran 1 tests in 0.023s
>>
>> PASSED (successes=1)
>>
>> I would consider this to be an install bug.? Evidently, trial uses plugins,
>> which upon reading
>> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
>> I find that plugins need up-to-date dropin.cache files to be built, or else
>> they'll be built dynamically; the latter step fails in my case due to my
>> site-wide install being on a read-only directory.? The docs say "when
>> installing or removing software which provides Twisted plugins, the site
>> administrator should be sure the cache is regenerated"; however all I did
>> was install twisted itself, not any specific plugins.? All I did to install
>> twisted was 'python setup.py install --home=...' and at no later point did I
>> ever add new plugins to it.? Why can't the install take care of initial
>> dropin.cache generation for me?
>>
>> I see a related issue http://twistedmatrix.com/trac/ticket/2409.
>>
>> Regardless of whether ticket 2409 goes anywhere, should I raise an issue
>> that the install should really take care of initial dropin.cache generation,
>> much like python install takes care of std lib .py->.pyc generation?
>>
>> Thanks.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> --
> Alex Clemesha
> clemesha.org
>



-- 
Alex Clemesha
clemesha.org



From ltaylor.volks at gmail.com  Wed Jun 17 18:52:47 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 17 Jun 2009 17:52:47 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG Still
In-Reply-To: <4A37D870.7020300@tiendalinux.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>	<d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
	<4A37D870.7020300@tiendalinux.com>
Message-ID: <4A3973BF.6000002@gmail.com>

On 6/16/09 12:37 PM, Nestor A. Diaz wrote:
> Hello, i had wrapper the loseConnection method, but it still throws the 
> same excepcion:
> 
> class MySerialPort ( SerialPort ) :
> 
>     def __init__(self, the_protocol, port, reactor):
> # type, host and port are used for my own purposes.
>         self.type = "Local"
>         self.host = None
>         self.port = port
>         SerialPort.__init__ (self, the_protocol, port, reactor)
> 
>     def loseConnection(self):
>       
>         # Fix
>         self.protocol.transport.flushInput()
>         self.protocol.transport.flushOutput()
>        
>         # call upper class method
>         SerialPort.loseConnection (self)
> 
> 
> at least under windows, when i call: serial_port.loseConnection()
> 
> Traceback (most recent call last):
<snip>
>   File "C:\Python24\Lib\site-packages\twisted\internet\abstract.py", 
> line 101, in doWrite
>     self.dataBuffer = buffer(self.dataBuffer, self.offset) + 
> "".join(self._tempDataBuffer)
> exceptions.AttributeError: 'MySerialPort' object has no attribute 
> '_tempDataBuffer'
> 
> Slds.
> 

Looks like you are running into this bug:
http://twistedmatrix.com/trac/ticket/1248

I wish I could be more helpful, but at least you know it's a known issue
and where to start addressing it.






From exarkun at divmod.com  Wed Jun 17 20:56:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jun 2009 20:56:48 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
 twisted-8.2.0
In-Reply-To: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>
Message-ID: <20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>

On Wed, 17 Jun 2009 14:37:01 -0700, Alex Clemesha <clemesha at gmail.com> wrote:
>On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
>> Hi,
>>
>> Just type "sudo twistd" and the errors will go away.
>> (You may already know of this work-around)
>>
>> ?I agree with you that it would be nice for these to never show up in
>> the first place.
>> I looked at the ticket you mention, but it seems that the cleaner solution
>> would be to resolve these issues at install/upgrade time.
>
>Just to follow up on this a bit more, reading from here:
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>in the section "Plugin Caching", there is this quote:
>
>"""
>[snip]... when installing or removing software which provides Twisted
>plugins, the site administrator should be sure the cache is
>regenerated. Well-behaved package managers for such software should
>take this task upon themselves, since it is trivially automatable.
>"""
>
>The way I read this, requiring the site admin to run "sudo twistd" to
>regenerate the cache file is a feature, not a bug.
>Twisted devs: is this the case?  Still maybe the install should do the
>"trivially automatable" bit?

The "package managers" referred to in that document are things like dpkg
and rpm which easily support running arbitrary code after installation.

It's rather difficult to automate with distutils, though (which is how
the original poster installed Twisted, I am assuming).  However, if
someone figures out how, a patch will be accepted happily. :)

Jean-Paul



From glyph at divmod.com  Thu Jun 18 01:18:36 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jun 2009 05:18:36 -0000
Subject: [Twisted-Python] Dropin.cache errors after clean install
	of	twisted-8.2.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>


On 17 Jun, 07:47 pm, benjamin.rutt at gs.com wrote:
>I recently installed python-2.6.1 and then twisted-8.2.0 (outside of 
>the
>python tree).  One of my users is complaining that when he uses trial 
>to
>test some twisted programs, although his test passes, he has to stare 
>at
>a stack trace like this which mentions dropin.cache.new failing to be
>written:

How did you install Twisted?  What distribution are you using?
>I would consider this to be an install bug.  Evidently, trial uses
>plugins, (...)

I would also consider this to be an installer bug.
>Regardless of whether ticket 2409 goes anywhere, should I raise an 
>issue
>that the install should really take care of initial dropin.cache
>generation, much like python install takes care of std lib .py->.pyc
>generation?

No need to open a new ticket.  Here's the one you're looking for:

    http://twistedmatrix.com/trac/ticket/2410

It would be very helpful if you would add a patch for this ticket, 
though; I'll go so far as to personally volunteer to review it until 
it's done if you do.

However, that ticket is somewhat anemic in its description of the 
problem.  Please be aware that distutils doesn't support post-install 
hooks in a general way (it leaves things up to the various 'bdist_' 
plugins), so it's hard to do this in a way which is unambiguously 
correct.  For example, the way post-installation scripts are specified 
to bdist_wininst, bdist_rpm, and bdist_msi are all subtly different. 
Also, the debian and redhat packages for twisted use 'setup.py install' 
but install to a different root, and then have their own custom post- 
installation hooks.  I'm sure that other packages (gentoo, for example) 
probably invoke setup.py as well, in slightly different ways.  bdist_egg 
doesn't allow for post-installation hooks *at all*, as you can see from 
<http://bugs.python.org/setuptools/issue41>.  So something that modified 
the behavior of setup.py install would have to carefully encapsulate its 
post-install hook and only invoke it if appropriate.

If you manage to circumnavigate all this nonsense and produce a nice, 
simple post-install hook with some unit tests, you will be a Twisted 
hero :).



From atrawog at gmail.com  Thu Jun 18 03:44:58 2009
From: atrawog at gmail.com (Andreas Trawoeger)
Date: Thu, 18 Jun 2009 09:44:58 +0200
Subject: [Twisted-Python] Need help with writing a secure Iran Proxy
Message-ID: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>

Hi!

Could I kindly ask all the Twisted Gurus to take a look Austin Heaps Best
Proxy Practices
for Iran http://blog.austinheap.com/

The current setup (Squid & iptables) everybody uses is extremely complicated
to setup and it should be trivial to implement the requirements in Twisted.
Turn it into an egg and allow everybody to simple type easy_install
iranproxy.

I know a little bit of Twisted, because I'm an avid Zenoss user and in
different circumstanced I would write the proxy on my own. But in this case
a safe implementation is a real must and I'm really worried to make some
stupid beginner mistakes.

So some (example) code and links to websites I should read would be greatly
appreciated.


Thanks to everybody!

cu andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090618/f8ab14fb/attachment.htm 

From mardiros at laposte.net  Thu Jun 18 06:07:20 2009
From: mardiros at laposte.net (mardiros)
Date: Thu, 18 Jun 2009 12:07:20 +0200 (CEST)
Subject: [Twisted-Python] AsyncQueue is still unavailable
Message-ID: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>

I everyone,

I have too write a network application, and I think twisted is the best choice for it!

I need to do some sql transaction, and I prefer too use an ORM too request the DB.
But the server I have to connect is an SqlServer,
so sqlalchemy is, I think the best choice.

And every google search get back to AsyncQueue
http://foss.eepatents.com/AsynQueue

But the site is done since a few moment.
Does anybody have news about this project ?
Is it still alive ? Which alternative ?

Thanks.

mardiros

 Cr?ez votre adresse ?lectronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090618/9d97ea4d/attachment.htm 

From jeandaniel.browne at gmail.com  Thu Jun 18 07:38:09 2009
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Thu, 18 Jun 2009 13:38:09 +0200
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
Message-ID: <b61c19e70906180438y66373fc7m8713395406439d17@mail.gmail.com>

The Storm ORM is popular, has talented people working on it and is
planning to merge the MS SQL backend (available on launchpad) from the
company called Zeomega.

https://storm.canonical.com/
https://code.launchpad.net/~zeomega

Storm and Twisted can be used together, see this thread:
https://lists.ubuntu.com/archives/storm/2009-April/000951.html

Cheers,


On Thu, Jun 18, 2009 at 12:07 PM, mardiros<mardiros at laposte.net> wrote:
> I everyone,
>
> I have too write a network application, and I think twisted is the best
> choice for it!
>
> I need to do some sql transaction, and I prefer too use an ORM too request
> the DB.
> But the server I have to connect is an SqlServer,
> so sqlalchemy is, I think the best choice.
>
> And every google search get back to AsyncQueue
> http://foss.eepatents.com/AsynQueue
>
> But the site is done since a few moment.
> Does anybody have news about this project ?
> Is it still alive ? Which alternative ?
>
> Thanks.
>
> mardiros
>
> Cr?ez votre adresse ?lectronique prenom.nom at laposte.net
> 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Rasterization Zion babylon



From Benjamin.Rutt at gs.com  Thu Jun 18 10:55:00 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 10:55:00 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install
	oftwisted-8.2.0
In-Reply-To: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D10@gsmbnbp22es.firmwide.corp.gs.com>

I don't have root, so 'sudo twistd' won't help.  And as I said, it's a
read-only filesystem I was testing on; root wouldn't help anyway.  But I
could redo my twisted install, and after typing 'python setup.py install
--home=...' try just running twistd one time as you suggest, or do
python -c 'from twisted.plugin import IPlugin, getPlugins;
list(getPlugins(IPlugin))' as the docs suggest.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alex
Clemesha
Sent: Wednesday, June 17, 2009 4:42 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean install
oftwisted-8.2.0

Hi,

Just type "sudo twistd" and the errors will go away.
(You may already know of this work-around)

 I agree with you that it would be nice for these to never show up in
the first place.
I looked at the ticket you mention, but it seems that the cleaner
solution
would be to resolve these issues at install/upgrade time.


-Alex



From Benjamin.Rutt at gs.com  Thu Jun 18 10:55:46 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 10:55:46 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>
References: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>
	<20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D14@gsmbnbp22es.firmwide.corp.gs.com>

Yes, I installed originally with distutils, i.e. 'python setup.py install --home=...'

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
Sent: Wednesday, June 17, 2009 8:57 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean install of twisted-8.2.0

On Wed, 17 Jun 2009 14:37:01 -0700, Alex Clemesha <clemesha at gmail.com> wrote:
>On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
>> Hi,
>>
>> Just type "sudo twistd" and the errors will go away.
>> (You may already know of this work-around)
>>
>> ?I agree with you that it would be nice for these to never show up in
>> the first place.
>> I looked at the ticket you mention, but it seems that the cleaner solution
>> would be to resolve these issues at install/upgrade time.
>
>Just to follow up on this a bit more, reading from here:
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>in the section "Plugin Caching", there is this quote:
>
>"""
>[snip]... when installing or removing software which provides Twisted
>plugins, the site administrator should be sure the cache is
>regenerated. Well-behaved package managers for such software should
>take this task upon themselves, since it is trivially automatable.
>"""
>
>The way I read this, requiring the site admin to run "sudo twistd" to
>regenerate the cache file is a feature, not a bug.
>Twisted devs: is this the case?  Still maybe the install should do the
>"trivially automatable" bit?

The "package managers" referred to in that document are things like dpkg
and rpm which easily support running arbitrary code after installation.

It's rather difficult to automate with distutils, though (which is how
the original poster installed Twisted, I am assuming).  However, if
someone figures out how, a patch will be accepted happily. :)

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Benjamin.Rutt at gs.com  Thu Jun 18 11:09:07 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 11:09:07 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean
	installof	twisted-8.2.0
In-Reply-To: <20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D66@gsmbnbp22es.firmwide.corp.gs.com>

I installed twisted on linux (RHEL4), solx86 and solsparc using 'python
setup.py install --home=...'.  

I looked at ticket 2410.  I see that you added a thorough summary of the
problem recently on that ticket - thank you.  While I would like to help
if I could, I'm afraid I don't know enough about the python packaging
technical details to be of much use.  Was not aware setup.py could not
run arbitrary code at the end.  Thanks for the discussion - I'll work
around it as needed via python -c 'from twisted.plugin import IPlugin,
getPlugins; list(getPlugins(IPlugin))' as a post-install hook of my own.

Until a solution emerges, I suppose the INSTALL file in the root of the
distribution could contain this text?

  * Other
    As with other Python packages, the standard way of installing from
source
    is:

      python setup.py install

    If you install from source you may wish to generate the plugin
cache, post-install, via:

      python -c 'from twisted.plugin import IPlugin, getPlugins;
list(getPlugins(IPlugin))'

    See
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
for more details.

Although it would complicate the INSTALL file quite a bit for an
admittedly minor issue.  Thanks.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Thursday, June 18, 2009 1:19 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean installof
twisted-8.2.0


On 17 Jun, 07:47 pm, benjamin.rutt at gs.com wrote:
>I recently installed python-2.6.1 and then twisted-8.2.0 (outside of 
>the
>python tree).  One of my users is complaining that when he uses trial 
>to
>test some twisted programs, although his test passes, he has to stare 
>at
>a stack trace like this which mentions dropin.cache.new failing to be
>written:

How did you install Twisted?  What distribution are you using?
>I would consider this to be an install bug.  Evidently, trial uses
>plugins, (...)

I would also consider this to be an installer bug.
>Regardless of whether ticket 2409 goes anywhere, should I raise an 
>issue
>that the install should really take care of initial dropin.cache
>generation, much like python install takes care of std lib .py->.pyc
>generation?

No need to open a new ticket.  Here's the one you're looking for:

    http://twistedmatrix.com/trac/ticket/2410

It would be very helpful if you would add a patch for this ticket, 
though; I'll go so far as to personally volunteer to review it until 
it's done if you do.

However, that ticket is somewhat anemic in its description of the 
problem.  Please be aware that distutils doesn't support post-install 
hooks in a general way (it leaves things up to the various 'bdist_' 
plugins), so it's hard to do this in a way which is unambiguously 
correct.  For example, the way post-installation scripts are specified 
to bdist_wininst, bdist_rpm, and bdist_msi are all subtly different. 
Also, the debian and redhat packages for twisted use 'setup.py install' 
but install to a different root, and then have their own custom post- 
installation hooks.  I'm sure that other packages (gentoo, for example) 
probably invoke setup.py as well, in slightly different ways.  bdist_egg

doesn't allow for post-installation hooks *at all*, as you can see from 
<http://bugs.python.org/setuptools/issue41>.  So something that modified

the behavior of setup.py install would have to carefully encapsulate its

post-install hook and only invoke it if appropriate.

If you manage to circumnavigate all this nonsense and produce a nice, 
simple post-install hook with some unit tests, you will be a Twisted 
hero :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From kevin.horn at gmail.com  Thu Jun 18 15:46:43 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 18 Jun 2009 14:46:43 -0500
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
Message-ID: <562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>

I have no idea what happened to the site (archive.org shows no updates after
Feb 2008), but older versions of both sAsync and AsynQueue are available on
PyPI:

http://pypi.python.org/pypi/sAsync/0.7
http://pypi.python.org/pypi/AsynQueue/0.3

They look to have been written for Py2.4, but perhaps someone could update
them?

Kevin Horn

On Thu, Jun 18, 2009 at 5:07 AM, mardiros <mardiros at laposte.net> wrote:

> I everyone,
>
> I have too write a network application, and I think twisted is the best
> choice for it!
>
> I need to do some sql transaction, and I prefer too use an ORM too request
> the DB.
> But the server I have to connect is an SqlServer,
> so sqlalchemy is, I think the best choice.
>
> And every google search get back to AsyncQueue
> http://foss.eepatents.com/AsynQueue
>
> But the site is done since a few moment.
> Does anybody have news about this project ?
> Is it still alive ? Which alternative ?
>
> Thanks.
>
> mardiros
>
>
> *Cr?ez votre adresse <http://www.laposte.net> ?lectronique
> prenom.nom at laposte.net
> 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.*
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090618/639145f6/attachment.htm 

From listsin at integrateddevcorp.com  Thu Jun 18 16:19:00 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 18 Jun 2009 16:19:00 -0400
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
	<562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>
Message-ID: <8B4E4D89-C922-450E-9538-59EC4E6B5956@integrateddevcorp.com>


On Jun 18, 2009, at 3:46 PM, Kevin Horn wrote:

> I have no idea what happened to the site (archive.org shows no  
> updates after Feb 2008), but older versions of both sAsync and  
> AsynQueue are available on PyPI:
>
> http://pypi.python.org/pypi/sAsync/0.7
> http://pypi.python.org/pypi/AsynQueue/0.3
>
> They look to have been written for Py2.4, but perhaps someone could  
> update them?

I found the author a couple of months ago but don't remember the  
details of where the site went etc.

I have a more current version of the code, but it would be better to  
go with something actively maintained.

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090618/b8e49515/attachment.htm 

From kevin.horn at gmail.com  Thu Jun 18 22:10:03 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 18 Jun 2009 21:10:03 -0500
Subject: [Twisted-Python] Need help with writing a secure Iran Proxy
In-Reply-To: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>
References: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>
Message-ID: <562bcc10906181910g5fbccbdcyfa89904ce84d10ac@mail.gmail.com>

Of course it depends on you definition of "safe" and "secure", but there's a
few examples around the net.  Here's a few:

http://wiki.python.org/moin/Twisted-Examples
http://www.linuxjournal.com/article/7871
http://proxies.xhaus.com/

If you want to add proxy authentication, it shouldn't be too
difficult...check out RFC 2068.

http://www.ietf.org/rfc/rfc2068.txt (esp sections 10.4.8, 11, and 14.33-34)

It should be similar to implementing basic HTTP auth, except you want to use
the
Proxy-Authenticate and Proxy-Authorization headers instead of the regular
ones.

I'm guessing the flow would go something like:
- client requests a proxied resource ( without a Proxy-Authorization header
)
- server sends back a 407 with a Proxy-Authenticate header
- client prompts user for credentials
- client provides request again with Proxy-Authorization header
- server proxies the resource

of course I'm no expert on web proxies so don't take my word for it...

I think you should be able to do the above by overriding some of the proxy
classes in twisted.web.proxy

Good Luck!

Kevin Horn


On Thu, Jun 18, 2009 at 2:44 AM, Andreas Trawoeger <atrawog at gmail.com>wrote:

> Hi!
>
> Could I kindly ask all the Twisted Gurus to take a look Austin Heaps Best
> Proxy Practices
> for Iran http://blog.austinheap.com/
>
> The current setup (Squid & iptables) everybody uses is extremely
> complicated to setup and it should be trivial to implement the requirements
> in Twisted. Turn it into an egg and allow everybody to simple type
> easy_install iranproxy.
>
> I know a little bit of Twisted, because I'm an avid Zenoss user and in
> different circumstanced I would write the proxy on my own. But in this case
> a safe implementation is a real must and I'm really worried to make some
> stupid beginner mistakes.
>
> So some (example) code and links to websites I should read would be greatly
> appreciated.
>
>
> Thanks to everybody!
>
> cu andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090618/5aa5b0c8/attachment.htm 

From mardiros at laposte.net  Fri Jun 19 12:43:24 2009
From: mardiros at laposte.net (mardiros)
Date: Fri, 19 Jun 2009 18:43:24 +0200 (CEST)
Subject: [Twisted-Python] AsyncQueue is still unavailable
Message-ID: <21412966.27940.1245429804755.JavaMail.www@wwinf8202>

Hey,

thanks for helping me.


 Steve Steiner (listsin) a ?crit?:
 
   I have a more current version of the code, but it would be better to go with something actively maintained.   
   S   
   That's exactly what I thint about too....


I am looking in Storm for the moment.
I have copy the driver in the twisted-integration,
but it tries with the both driver pymssql and adodbapi,
and i think only the mxodbc worked.

Now i execute deferred query? with a modified one,
and it work's fine.

I will try orm feature now :-)






 Cr?ez votre adresse ?lectronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090619/b088a7f7/attachment.htm 

From db3l.net at gmail.com  Fri Jun 19 15:05:44 2009
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 19 Jun 2009 15:05:44 -0400
Subject: [Twisted-Python] AsyncQueue is still unavailable
References: <21412966.27940.1245429804755.JavaMail.www@wwinf8202>
Message-ID: <m2k538gi2f.fsf@valheru.db3l.homeip.net>

mardiros <mardiros at laposte.net> writes:

> I am looking in Storm for the moment.
> I have copy the driver in the twisted-integration,
> but it tries with the both driver pymssql and adodbapi,
> and i think only the mxodbc worked.
>
> Now i execute deferred query? with a modified one,
> and it work's fine.
>
> I will try orm feature now :-)

While it looks like there's some specific Twisted integration work
going on in a branch, from what I can see, the current mechanisms you
will need to use Storm with Twisted are the same as those you would
need to use to use SQLAlchemy with Twisted, so if you like the latter,
I don't see a big reason to switch.

That is, defer the ORM related (blocking) operations to their own
thread (ala deferToThread), and remember to detach any ORM objects
being returned to Twisted from the ORM itself.  With SQLAlchemy you'd
call expunge() on the objects or expunge_all() on the session.

If you need to make changes and save them, you would need to re-attach
the objects to a session before flushing to the database (also in a
dedicated thread).  With SQLAlchemy, this can be done with add() or
add_all() on a session.

I suspect you could wrap this behavior up in a fairly simple wrapper
class, without necessarily needing a third party library or package.

For me, I find SQLAlchemy very impressive, and I think it's
flexibility in defining how and when the ORM accesses the database and
clear management of the association of objects to sessions to be
helpful in this sort of integration. For example, you could still work
with defined relations at the object level as long as you ensured that
they were eager loaded while still running in the SA thread.  That
could either be by disabling lazy loading entirely for specific
relations, or by forcing an eager load for specific queries through
the eagerload() option.

It's also not quite clear what sort of transactions are involved from
your original post.  Although you mention preferring an ORM, if you
just need to issue some basic queries/updates against an existing
database schema, you might at least also consider straight SQL.  In
that case, SQLAlchemy's SQL layer can still provide a lot of support
(to avoid writing raw SQL) but not bring in all the ORM overhead.

-- David

PS: Even if you found a current copy of sAsync, based on some comments
the author posted in a thread back in March, I don't think sAsync
supports the ORM features of SQLAlchemy, but just the SQL layer.




From exarkun at twistedmatrix.com  Sun Jun 21 00:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Jun 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1245557113.35.583236301@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090621/a01ab701/attachment.htm 

From gabriel.rossetti at arimaz.com  Mon Jun 22 05:06:24 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 22 Jun 2009 11:06:24 +0200
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database is
	locked
Message-ID: <4A3F4990.3080207@arimaz.com>

Hello everyone,

I am using twisted.enterprise.adbapi with sqlite3 database adapter and 
"runInteraction()". I keep on getting "sqlite3.OperationalError : 
database is locked" errors. I understand the problem, multiple threads 
try to access the DB and it being already locked by a thread it raises 
this exception. My question is what is the standard/correct Twisted way 
of dealing with this?

Thank you,
Gabriel



From exarkun at divmod.com  Mon Jun 22 07:49:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 22 Jun 2009 07:49:24 -0400
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database
 is locked
In-Reply-To: <4A3F4990.3080207@arimaz.com>
Message-ID: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>

On Mon, 22 Jun 2009 11:06:24 +0200, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone,
>
>I am using twisted.enterprise.adbapi with sqlite3 database adapter and
>"runInteraction()". I keep on getting "sqlite3.OperationalError :
>database is locked" errors. I understand the problem, multiple threads
>try to access the DB and it being already locked by a thread it raises
>this exception. My question is what is the standard/correct Twisted way
>of dealing with this?

You can set your connection pool to a maximum of 1 connection.  Or you
can try raising the timeout on your database.

Jean-Paul
A



From gabriel.rossetti at arimaz.com  Mon Jun 22 08:19:54 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 22 Jun 2009 14:19:54 +0200
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database
 is locked
In-Reply-To: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>
References: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>
Message-ID: <4A3F76EA.8070206@arimaz.com>

Jean-Paul Calderone wrote:
> On Mon, 22 Jun 2009 11:06:24 +0200, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I am using twisted.enterprise.adbapi with sqlite3 database adapter and
>> "runInteraction()". I keep on getting "sqlite3.OperationalError :
>> database is locked" errors. I understand the problem, multiple threads
>> try to access the DB and it being already locked by a thread it raises
>> this exception. My question is what is the standard/correct Twisted way
>> of dealing with this?
>>     
>
> You can set your connection pool to a maximum of 1 connection.  Or you
> can try raising the timeout on your database.
>
> Jean-Paul
> A
>   
Thank you Jean-Paul, I thought of that just before I saw your msg 
(limiting the connection pool to 1 connection), it works great!

Gabriel





From tvmrfusnucnc at spammotel.com  Mon Jun 22 09:23:28 2009
From: tvmrfusnucnc at spammotel.com (Guenter Dannoritzer)
Date: Mon, 22 Jun 2009 15:23:28 +0200
Subject: [Twisted-Python] SIP Registrar
Message-ID: <4A3F85D0.9050405@spammotel.com>

Hi,

I am trying to run a SIP registrar.

So far I used an example that comes with the Perl Net:Sip Package:

http://search.cpan.org/~sullr/Net-SIP/

As I am more familiar with Python, but not yet with twisted, I tried to
find a simple example that runs a SIP registrar based on twisted.

I searched this mailing list and found a post about rather using the
Divmod Sine sip implementation than this one. On the other side it seems
like that some of this functionality is back ported into twisted.

Does the current twisted implementation provide enough functionality to
implement a SIP registrar?

I found in the mailing list this simple example about a SIP proxy:

http://twistedmatrix.com/pipermail/twisted-python/2008-July/018047.html

Would that be about the way to go for a registrar?

Thanks for your help.

Cheers,

Guenter





From exarkun at divmod.com  Mon Jun 22 10:18:27 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 22 Jun 2009 10:18:27 -0400
Subject: [Twisted-Python] SIP Registrar
In-Reply-To: <4A3F85D0.9050405@spammotel.com>
Message-ID: <20090622141827.22176.797213374.divmod.quotient.8457@henry.divmod.com>

On Mon, 22 Jun 2009 15:23:28 +0200, Guenter Dannoritzer <tvmrfusnucnc at spammotel.com> wrote:
>Hi,
>
>I am trying to run a SIP registrar.
>
>So far I used an example that comes with the Perl Net:Sip Package:
>
>http://search.cpan.org/~sullr/Net-SIP/
>
>As I am more familiar with Python, but not yet with twisted, I tried to
>find a simple example that runs a SIP registrar based on twisted.
>
>I searched this mailing list and found a post about rather using the
>Divmod Sine sip implementation than this one. On the other side it seems
>like that some of this functionality is back ported into twisted.

The back port is not yet complete, so Divmod Sine is still more functional
and easier to use (as well as less buggy) than the SIP code in Twisted.  I
would suggest either helping to complete the port, or using Divmod Sine
directly.

You can read more about the progress of the port in the issue tracker:

  http://twistedmatrix.com/trac/ticket/3584

(including a detailed list of what remains to be done).

>Does the current twisted implementation provide enough functionality to
>implement a SIP registrar?

Probably, but I don't know of any examples of doing so.  The Divmod Sine
code definitely provides this functionality, and you can find a registrar
implemented in Divmod Sine itself.

Jean-Paul



From jared.gisin at isilon.com  Mon Jun 22 16:30:32 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Mon, 22 Jun 2009 13:30:32 -0700
Subject: [Twisted-Python] untwisting twistd
Message-ID: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>

I am currently working on writing an application using the twisted
framework. The problem that I have is that I do not want to use twistd.
In fact, I find twistd to be inappropriate as it defaults pidfile and
logfile to something specific to twisted, not my application, and it
seem completely silly to have to pass in -pidfile and -logfile params
when stating it up. Those parameters should be specified as part of the
Application object itself, and should allow for CLI override. Further,
as I want my daemon that I'm writing to look and act like a daemon
(UNIX), I do not want to be invoking some general "twistd" command and
passing a ton of options. Ideally, I should be able to write a Pythons
script that acts like twistd, but can bake in default options and
hide/expose other ServerOptions as I so see fit.

 

For example, if I run, 

 

my_daemon

 

It should fire up the daemon

 

my_daemon -help

 

should dump the help

 

my_daemon -pidfile=/var/run/my_daemon.pid

my_daemon stop

my_daemon restart

 

should all function accordingly. I want to avoid all of this "twistd -y"
business, as the daemon, isn't "twistd" it's my code. I should be able
to use the ApplicationRunner, UnixApplicationRunner, etc "runners",
however, as they are currently written, they are twistd specific. For
example, in 8.2, the def checkPid function bakes in, "
sys.exit("""\

Another twistd server is running, PID %s\n

This could either be a previously started instance of your application
or a

different application entirely. To start a new one, either run it in
some other

directory, or use the --pidfile and --logfile parameters to avoid
clashes.

""" %  pid)"

 

Which is iditic as my application may not even expose a -pidfile or a
-logfile and it's definatley not called twistd. The platform specific
application runners need to be more generalized so users can write their
own twistd equivalent to include only what they want.

 

Perhaps I'm missing some key point of twisted that already does this. If
so, I'd love to be guided in the right direction. If not, and I've got a
valid point here, I'd love to know how I can help to remedy this
problem. I think it's great that twistd provides application management
classes, but they are unnecessarily intertwined with twistd which should
be completely optional.

 

-Jared

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090622/beacf4e7/attachment.htm 

From phil at bubblehouse.org  Mon Jun 22 17:06:50 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 22 Jun 2009 17:06:50 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>

On Jun 22, 2009, at 4:30 PM, Jared Gisin wrote:
> Which is iditic as my application may not even expose a ?pidfile or  
> a ?logfile and it?s definatley not called twistd. The platform  
> specific application runners need to be more generalized so users  
> can write their own twistd equivalent to include only what they want.
>
> Perhaps I?m missing some key point of twisted that already does  
> this. If so, I?d love to be guided in the right direction. If not,  
> and I?ve got a valid point here, I?d love to know how I can help to  
> remedy this problem. I think it?s great that twistd provides  
> application management classes, but they are unnecessarily  
> intertwined with twistd which should be completely optional.

This topic comes up continuously, but like the other occurrences, it  
makes a gigantic mountain out of a small molehill. The critics are  
usually not thinking about the real requirements of deploying a  
configurable demonizing application in a production environment.

Look at the init script used to start MySQL sometime, particularly  
when installed from a package on a finicky distro like debian. Or  
Apache. Or bind. Or any one of a number of other complex daemons --  
you'll find that it's not usually advisable (or possible) to launch  
any of these daemons without an endless list of command-line options.

The fact is, twistd does a *lot* of stuff for you, so you don't have  
to. This includes dealing with daemonizing in a UNIX-standard way  
(leaving pidfiles behind and logging to a file), and a myriad other  
uses that you may have no need for yet.

Conversely, the things people write with Twisted (and then use twistd  
to execute) come in a million forms from the most complex to the very  
simple, so there's no way to address all the desires of all the  
functionality that someone would want in a tool like twistd.

You said yourself that you should be able to write a python script  
that functions in a certain way, but what makes you think it should be  
integrated into twistd? You could write a wrapper that made use of the  
many other convenient scripting features Twisted provides (such as  
twisted.python.usage.Options) and which would then in turn launch the  
twistd process with the arguments you require, much like MySQL's  
mysqld_safe bootstrap utility.

-phil


From glyph at divmod.com  Mon Jun 22 17:38:54 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 22 Jun 2009 21:38:54 -0000
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
Message-ID: <20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>

On 09:06 pm, phil at bubblehouse.org wrote:
>On Jun 22, 2009, at 4:30 PM, Jared Gisin wrote:
>>Which is iditic as my application may not even expose a  13pidfile or
>>a  13logfile and it 19s definatley not called twistd. The platform
>>specific application runners need to be more generalized so users
>>can write their own twistd equivalent to include only what they want.

>Look at the init script used to start MySQL sometime, particularly
>when installed from a package on a finicky distro like debian. Or
>Apache. Or bind. Or any one of a number of other complex daemons --
>you'll find that it's not usually advisable (or possible) to launch
>any of these daemons without an endless list of command-line options.

Sure, but we should be able to do better than that, right? :)
>You said yourself that you should be able to write a python script
>that functions in a certain way, but what makes you think it should be
>integrated into twistd? You could write a wrapper that made use of the
>many other convenient scripting features Twisted provides (such as
>twisted.python.usage.Options) and which would then in turn launch the
>twistd process with the arguments you require, much like MySQL's
>mysqld_safe bootstrap utility.

Actually, it's even simpler than that.  The script is itself a function, 
which you can just call as a function without starting a separate 
process.  Axiom had requirements like Mr. Gisin: we wanted to put the 
.pid file and log files inside the database directory, which is a 
location that obviously has to be computed.

I wouldn't object to a more graceful and structured way to do this, but 
the approach "axiomatic" uses is pretty simple: provide a twistd plugin 
that does the meat of the work, then have a small wrapper script that 
builds a command line that includes the plugin and the appropriate 
options, such as logfile and pidfile.

You can see that code here:

  http://divmod.org/trac/browser/trunk/Axiom/axiom/scripts/axiomatic.py
http://divmod.org/trac/browser/trunk/Axiom/twisted/plugins/axiom_plugins.py



From clemesha at gmail.com  Mon Jun 22 17:36:03 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Mon, 22 Jun 2009 14:36:03 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==>
	<0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>

Hi Jared,
First off, I'd like to say that I'm basically in agreement with exactly what
you are saying, and that is: "I should be able to write a Python
script that acts like twistd - not *be* twistd".


Phil does have some really good points, such as:
"""
The critics are usually not thinking about the real requirements of deploying a
configurable demonizing application in a production environment.
"""


And lastly, I'm glad to see that response from Glyph, as the methodology
he describes is basically how I understand one would create a
"personalized twistd".


In fact, I just got an email from a co-worker that wanted to know how to
either side-step "twistd" or write a custom version of it.  Here is my
response to him (I'd love some critic of my response, so I can provide
a better answer):


============= Email to co-worker: ===============


Yes, there is a better way of doing things.  This better way of doing things
is to write a "twisted plugin" and then, after that is working, using can
wrap calls to "twistd" with python's "os.system" calls, or shell script calls,
or whatever else you want.


I must admit, this whole procedure is pretty confusing (it was for me
at least) at first,
but let me try to explain why you might want to write a "twisted plugin" and
_then_ (possibly) wrap it with a shell script or a simple python script.
The main reasons are the following:

1) You _do_ want to use "twistd", because it does lots of useful
things like daemonizing, handling logfiles and pidfiles, etc.
2) You also want to pass config code to the app you are starting up
(via "twistd") - optimally from the command line and a settings file.

Now, once the above is in place, you then can write some wrapper code
on top of the "twistd" calls for convenience for users.

Here is the "plugin" documentation:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

But I've found that it is easier to go from an example, so try typing this:

twistd -n web --path="."

Now open up firefox to http://localhost:8080
This starts up a twisted web server, serving files from the local directory.
This is a twisted web plugin in action, and it is implemented with
these 2 files:

http://twistedmatrix.com/trac/browser/trunk/twisted/plugins/twisted_web.py
http://twistedmatrix.com/trac/browser/trunk/twisted/web/tap.py

============ end email to co-worker ==============



So basically I've found that the best thing to do is to extend
"twistd" via writing a plugin, and then you can write all kinds
of simple wrappers on top of it to provide a more user-friendly
and a your-app-specific command line tool.  Thoughts from Twisted gurus?


thanks,
Alex












On Mon, Jun 22, 2009 at 1:30 PM, Jared Gisin<jared.gisin at isilon.com> wrote:
> I am currently working on writing an application using the twisted
> framework. The problem that I have is that I do not want to use twistd. In
> fact, I find twistd to be inappropriate as it defaults pidfile and logfile
> to something specific to twisted, not my application, and it seem completely
> silly to have to pass in ?pidfile and ?logfile params when stating it up.
> Those parameters should be specified as part of the Application object
> itself, and should allow for CLI override. Further, as I want my daemon that
> I?m writing to look and act like a daemon (UNIX), I do not want to be
> invoking some general ?twistd? command and passing a ton of options.
> Ideally, I should be able to write a Pythons script that acts like twistd,
> but can bake in default options and hide/expose other ServerOptions as I so
> see fit.
>
>
>
> For example, if I run,
>
>
>
> my_daemon
>
>
>
> It should fire up the daemon
>
>
>
> my_daemon ?help
>
>
>
> should dump the help
>
>
>
> my_daemon ?pidfile=/var/run/my_daemon.pid
>
> my_daemon stop
>
> my_daemon restart
>
>
>
> should all function accordingly. I want to avoid all of this ?twistd ?y?
> business, as the daemon, isn?t ?twistd? it?s my code. I should be able to
> use the ApplicationRunner, UnixApplicationRunner, etc ?runners?,? however,
> as they are currently written, they are twistd specific. For example, in
> 8.2, the def checkPid function bakes in, ???????????? sys.exit("""\
>
> Another twistd server is running, PID %s\n
>
> This could either be a previously started instance of your application or a
>
> different application entirely. To start a new one, either run it in some
> other
>
> directory, or use the --pidfile and --logfile parameters to avoid clashes.
>
> """ %? pid)?
>
>
>
> Which is iditic as my application may not even expose a ?pidfile or a
> ?logfile and it?s definatley not called twistd. The platform specific
> application runners need to be more generalized so users can write their own
> twistd equivalent to include only what they want.
>
>
>
> Perhaps I?m missing some key point of twisted that already does this. If so,
> I?d love to be guided in the right direction. If not, and I?ve got a valid
> point here, I?d love to know how I can help to remedy this problem. I think
> it?s great that twistd provides application management classes, but they are
> unnecessarily intertwined with twistd which should be completely optional.
>
>
>
> -Jared
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Mon Jun 22 18:29:39 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 22 Jun 2009 18:29:39 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>
Message-ID: <421899FC-389E-4B20-BB9B-9DB0EB8D773C@bubblehouse.org>

On Jun 22, 2009, at 5:38 PM, glyph at divmod.com wrote:
> On 09:06 pm, phil at bubblehouse.org wrote:
>> Look at the init script used to start MySQL sometime, particularly  
>> when installed from a package on a finicky distro like debian. Or  
>> Apache. Or bind. Or any one of a number of other complex daemons  
>> you'll find that it's not usually advisable (or possible) to launch  
>> any of these daemons without an endless list of command-line options.
>
> Sure, but we should be able to do better than that, right? :)

Ha, almost definitely ;-)

But in my particular use cases, it doesn't often matter. For example,  
I usually like to deploy production servers under non-privileged  
accounts using authbind, which means that I'll usually need to make  
some kind of init script.

Of course, these days I hardly ever write anything that *doesn't*  
launch at startup, and my command-line options are almost always  
'server-specific' instead of 'job-specific'.

Consequently most of my CLI options can just be set once for each  
machine and generally forgotten about, so I'm not really a good  
candidate to judge the importance of an enhanced twistd API...

-phil



From chris.yan at saybot.com  Tue Jun 23 04:31:21 2009
From: chris.yan at saybot.com (Chris)
Date: Tue, 23 Jun 2009 16:31:21 +0800
Subject: [Twisted-Python] twisted.web2 only can serve one connection at the
 same time when using scgi?
Message-ID: <4A4092D9.9060404@saybot.com>

Hi everyone,
I am trying to use apache2 + scgi to write a application,I found
twisted.web2 supports the scgi module.I began to use this library to
write some code to test how to use it,just like this:

from twisted.web2 import server, channel, resource,http,http_headers
from twisted.application import service, strports
from twisted.internet import reactor, defer

class Test(resource.Resource):
def getResponse(self, result = None):
rep = "The output which shall be transferred to the browser."
res = http.Response( 200,
{'content-type': http_headers.MimeType('text','plain')},
rep)
print "---- getResponse returning: ", res
return res

def render(self,request):
print 'a new request is coming'
d = defer.Deferred()
import time
d.addCallback(lambda x:x).addCallback(self.getResponse)
reactor.callLater(10,d.callback,0)
return d

toplevel = Test()
site = server.Site(toplevel)

application = service.Application("demoserver")
s = strports.service('tcp:8888', channel.SCGIFactory(site))
s.setServiceParent(application)

in the render function,I used a defer to simulate a time-consuming
operation which takes ten seconds.IF in twisted.web,I can first return a
server.NOT_DONE_YET,and use request.write() and request.finish() when
the time-consuming operation is done(still use defer to do this).but
twisted.web2 only supports returning a iweb.IResponse.it seems returning
a defer is the only way.
_|| <http://python.net/crew/mwh/apidocs/twisted.web2.iweb.IResponse.html>_
here is the output:
2009-06-23 15:45:11+0800 [-] Log opened.
2009-06-23 15:45:11+0800 [-] twistd 8.2.0 (/usr/bin/python 2.5.2)
starting up.
2009-06-23 15:45:11+0800 [-] reactor class:
twisted.internet.selectreactor.SelectReactor.
2009-06-23 15:45:11+0800 [-] twisted.web2.channel.scgi.SCGIFactory
starting on 8888
2009-06-23 15:45:11+0800 [-] Starting factory
<twisted.web2.channel.scgi.SCGIFactory instance at 0xf213f8>
2009-06-23 15:45:26+0800 [SCGIChannelRequest,0,192.168.0.138] a new
request is coming
2009-06-23 15:45:36+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>
2009-06-23 15:45:36+0800 [SCGIChannelRequest,1,192.168.0.138] a new
request is coming
2009-06-23 15:45:46+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>
2009-06-23 15:45:46+0800 [SCGIChannelRequest,2,192.168.0.138] a new
request is coming
2009-06-23 15:45:56+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>

I use the 3 browsers to access the URL within 1 second,but as we all see
in the log,the server accepts the requests one by one,that is really not
acceptable.I checked a little about the twisted.web2 source code, this
render function is in a defer's callbacks chain,when I return a defer in
a defer's callbacks chain,sure,the rest of the callbacks will wait for
my defer to finish ,even I run it with reactor.callLater.so far,I feel I
can do nothing about this,anyone can help me about this?

Regards
Chris




From fetbiz at gmail.com  Tue Jun 23 04:57:37 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Tue, 23 Jun 2009 08:57:37 +0000
Subject: [Twisted-Python] Fwd: SerialPort.loseConnection() in Win32,
	workaround
In-Reply-To: <d067ddcf0906230146o2e27cdabudd5deec6f2858a89@mail.gmail.com>
References: <d067ddcf0906230146o2e27cdabudd5deec6f2858a89@mail.gmail.com>
Message-ID: <d067ddcf0906230157u62b29bdeg61ca622f5356417@mail.gmail.com>

Hi,
I have finished the neat version of using the SerialPort in Win32.
Without the bothering loseConnection tracebacks.
First of all, I have to apology for the mistake in my last post.
I claimed that calling the flashInput and flashOutput can be used as
the workaround.I am wrong.
The way I use with SerialPort is different from the standard way:

SerialPort(protocol_instance, comport, reactor, baudrate)

instead, I create a SerialConnect and connect the serial port by:

connector = reactor.connectWith(SerialConnector,comport,baudrate,factory)

I welcome someone else to improve this connector for it to be more reliable
if this approach is worthy. For the script, please see the attachment.

Iap
BTW:  I am not sure if it is proper to attach the script in mail list.
I tried to paste it in the mail body. After pasting it into the gmail's
editor,
the format of the script is terrible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090623/b1c3d66f/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_serialport2.py
Type: text/x-python
Size: 3829 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20090623/b1c3d66f/attachment.py 

From vishal_shetye at persistent.co.in  Tue Jun 23 09:45:05 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 23 Jun 2009 19:15:05 +0530
Subject: [Twisted-Python] adbapi and multiple queries in single transaction.
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>

Hi,
I am working on an application that uses twisted and twisted.e.adbapi with sqlite in the backend.
All db queries are put in separate functions in class say tableGateway.py which uses runOperation, runQuery etc as appropriate.
A layer that uses it, lets say objectGateway.py, defines operations.
Thus, lets say an add operation may actually call 2-3 or more functions from tableGateway.py.

If my application quits or crashes in middle of an operation then it is likely that db will be inconsistent.
What I want is each objectGateway level operation should be done in a single transaction.

I initially thought of putting all the queries per operation in a runInteraction. However this results in code-duplication as many queries are shared between different operations.

What I could think of for preventing this is:
1. do a runInteraction at objectGateway and then txn that I get will be passed to appropriate functions of tableGateway.
2. An objectGateway level log based recovery.


Option 1 requires all the tableGateway functions to take txn as param. This can be avoided by instantiating tableGateway with a txn for each operation, however tableGateway instantiation is not that cheap.
Even so, if any objectGateway function calls other objectGateway function then the txn will have to be passed to that as well.

Any comments/suggestions?


Regards,
vishal

DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.



From grickert at coldstorage.com  Tue Jun 23 09:42:13 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 23 Jun 2009 09:42:13 -0400
Subject: [Twisted-Python] Twisted Trial
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>

I know this is a very basic question, but I can't seem to get trial
working correctly.
(I'm working on Windows XP, with python 2.5.4 and twisted 8.2.0)
I've created a very simple example:

I have a file, 'test_example.py'
It's contents are (between ======= lines):

==========================================
from twisted.trial import unittest

class ExampleTestCase(unittest.TestCase):

    def test_example(self):
        """A very simple test"""

        self.assertEquals(1,1)   


if __name__ == '__main__':
    import unittest
    unittest.main()
==========================================


if I just run:
'python text_example.py'
It runs the test (with python's regular unittest framework), and passes
ok

If I run:
'trial test_example.py'
It appears to run the test with trial, but gives this traceback:


Traceback (most recent call last):
  File "c:\python25\lib\site-packages\twisted\python\usage.py", line
241, in parseOptions
    self.postOptions()
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 200, in
getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 165, in
getCache
    provider = pluginModule.load()
  File "c:\python25\lib\site-packages\twisted\python\modules.py", line
380, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
456, in namedAny
    topLevelPackage = _importAndCheckStack(trialname)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
392, in _importAndCheckStack
    return __import__(importName)
  File "c:\python25\lib\site-packages\twisted\plugins\notestplugin.py",
line 18, in <module>
    assert not TEST.running
exceptions.AttributeError: 'module' object has no attribute 'running'
Traceback (most recent call last):
  File "c:\python25\lib\site-packages\twisted\python\usage.py", line
241, in parseOptions
    self.postOptions()
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 200, in
getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 165, in
getCache
    provider = pluginModule.load()
  File "c:\python25\lib\site-packages\twisted\python\modules.py", line
380, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
456, in namedAny
    topLevelPackage = _importAndCheckStack(trialname)
  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
line 12, in <module>
    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
exceptions.ImportError: cannot import name ITestPlugin
test_example
  ExampleTestCase
    test_example ...
[OK]

------------------------------------------------------------------------
-------
Ran 1 tests in 0.000s

PASSED (successes=1)

Could someone point out what I am doing wrong (or is this traceback
"Normal")? 
(I found some post on the web about a possible cause being invalid .pyc
files left over from a previous twisted install, so I deleted all .pyc
files under site-packages\twisted - but still get this traceback)

Thanks,
	Gerrat





From phil at bubblehouse.org  Tue Jun 23 10:25:16 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 23 Jun 2009 10:25:16 -0400
Subject: [Twisted-Python] adbapi and multiple queries in single
	transaction.
In-Reply-To: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>
References: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>
Message-ID: <2E70F4C7-5253-44B2-9DB8-79D8817E96F4@bubblehouse.org>

On Jun 23, 2009, at 9:45 AM, Vishal Shetye wrote:
> I initially thought of putting all the queries per operation in a  
> runInteraction. However this results in code-duplication as many  
> queries are shared between different operations.

It seems like the easiest way to deal with this would be to make  
'private' methods for all the standard queries; these methods/ 
functions would accept a transaction object like you said, but the  
methods themselves would only be called from an interaction, which can  
supply the transaction object.

Then in each public ObjectGateway method you can just define an inner  
function to serve as the interaction, calling each private query  
method in turn, using the transaction object provided to that  
interaction.

Here's a stupidly trivial example:

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool

     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =  
%s', user_id);
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =  
%s', [username, sid]);

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             u = self._getUserName(trans, user_id)
             self._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

Other than being careful not to mess around with the instance state  
during those interactions (they are running in a thread, after all),  
this should be pretty straightforward.

Hope this helps,

-phil



From jared.gisin at isilon.com  Tue Jun 23 11:27:09 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Tue, 23 Jun 2009 08:27:09 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==><0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
Message-ID: <0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>

Thanks for the thoughts. I suppose I should have been a bit clearer on my specific use case that is not handled. Certainly, I do want to take advantage of twistd for the reasons listed below (daemonizing, handling log files, pidfile, etc); however, the problem that I have is that I have a very specific application that is going to be built into a product. There's no way that it could ever be installed or deployed elsewhere. Now, having said that I'd love to take advantage of the ApplicationRunner objects to fire up my application. The path to the application is baked in, the location for the pidfile and logfile should have sane defaults, and other various application parameters shouldn't change. In order to fire up the app with sane default, I should be able to issue one command with no arguments as the defaults for all of those should be baked into the system.

Sure, twistd provides default application values, but there's no easy way to override those values. There's no ServerOptions constructor function where I can configure the default values, or have some options removed from the list that appears if the user issues --help.

So, what I'm essentially arguing for is that although twistd is meant to solve a generic problem of generalizing server startups on various platforms for any number of applications, it's severely lacking in how I can take advantage of the ServerOptions to create one for my application. As it is now, I'm going to have to copy and paste the code and modify it as I want to create my own ServerOptions object that does have proper defaults. Right, now twisted.scripts._twistd_unis.ServerOptions inherits from app.ServerOptions, which is completely in appropriate as the UNIX ServerOptions have absolutely nothing to do with twistd itself. For example, I don't there to ever be a --file or --xml --source --report-profile --nothotshot --no_save or --savestats options. 
Really, this is a matter of presentation and locking down the application server options. I should be able to do something like this

ServerOptions( hide_items=('xml', 'file', 'source', 'report-profile'), =
		defaults={'logfile':'/var/log/foo.log', 'pidfile':'/var/run/foo.pid'}  )

To properly construct the subset of default twistd ServerOptions I need to have.

I guess in the mean time, I'll just write my own custom ServerOptions, which oddly, will mirror a bunch of code that already exists.


Thoughts?

-Jared

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alex Clemesha
Sent: Monday, June 22, 2009 2:36 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] untwisting twistd

Hi Jared,
First off, I'd like to say that I'm basically in agreement with exactly what
you are saying, and that is: "I should be able to write a Python
script that acts like twistd - not *be* twistd".


Phil does have some really good points, such as:
"""
The critics are usually not thinking about the real requirements of deploying a
configurable demonizing application in a production environment.
"""


And lastly, I'm glad to see that response from Glyph, as the methodology
he describes is basically how I understand one would create a
"personalized twistd".


In fact, I just got an email from a co-worker that wanted to know how to
either side-step "twistd" or write a custom version of it.  Here is my
response to him (I'd love some critic of my response, so I can provide
a better answer):


============= Email to co-worker: ===============


Yes, there is a better way of doing things.  This better way of doing things
is to write a "twisted plugin" and then, after that is working, using can
wrap calls to "twistd" with python's "os.system" calls, or shell script calls,
or whatever else you want.


I must admit, this whole procedure is pretty confusing (it was for me
at least) at first,
but let me try to explain why you might want to write a "twisted plugin" and
_then_ (possibly) wrap it with a shell script or a simple python script.
The main reasons are the following:

1) You _do_ want to use "twistd", because it does lots of useful
things like daemonizing, handling logfiles and pidfiles, etc.
2) You also want to pass config code to the app you are starting up
(via "twistd") - optimally from the command line and a settings file.

Now, once the above is in place, you then can write some wrapper code
on top of the "twistd" calls for convenience for users.

Here is the "plugin" documentation:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

But I've found that it is easier to go from an example, so try typing this:

twistd -n web --path="."

Now open up firefox to http://localhost:8080
This starts up a twisted web server, serving files from the local directory.
This is a twisted web plugin in action, and it is implemented with
these 2 files:

http://twistedmatrix.com/trac/browser/trunk/twisted/plugins/twisted_web.py
http://twistedmatrix.com/trac/browser/trunk/twisted/web/tap.py

============ end email to co-worker ==============



So basically I've found that the best thing to do is to extend
"twistd" via writing a plugin, and then you can write all kinds
of simple wrappers on top of it to provide a more user-friendly
and a your-app-specific command line tool.  Thoughts from Twisted gurus?


thanks,
Alex












On Mon, Jun 22, 2009 at 1:30 PM, Jared Gisin<jared.gisin at isilon.com> wrote:
> I am currently working on writing an application using the twisted
> framework. The problem that I have is that I do not want to use twistd. In
> fact, I find twistd to be inappropriate as it defaults pidfile and logfile
> to something specific to twisted, not my application, and it seem completely
> silly to have to pass in -pidfile and -logfile params when stating it up.
> Those parameters should be specified as part of the Application object
> itself, and should allow for CLI override. Further, as I want my daemon that
> I'm writing to look and act like a daemon (UNIX), I do not want to be
> invoking some general "twistd" command and passing a ton of options.
> Ideally, I should be able to write a Pythons script that acts like twistd,
> but can bake in default options and hide/expose other ServerOptions as I so
> see fit.
>
>
>
> For example, if I run,
>
>
>
> my_daemon
>
>
>
> It should fire up the daemon
>
>
>
> my_daemon -help
>
>
>
> should dump the help
>
>
>
> my_daemon -pidfile=/var/run/my_daemon.pid
>
> my_daemon stop
>
> my_daemon restart
>
>
>
> should all function accordingly. I want to avoid all of this "twistd -y"
> business, as the daemon, isn't "twistd" it's my code. I should be able to
> use the ApplicationRunner, UnixApplicationRunner, etc "runners",? however,
> as they are currently written, they are twistd specific. For example, in
> 8.2, the def checkPid function bakes in, "??????????? sys.exit("""\
>
> Another twistd server is running, PID %s\n
>
> This could either be a previously started instance of your application or a
>
> different application entirely. To start a new one, either run it in some
> other
>
> directory, or use the --pidfile and --logfile parameters to avoid clashes.
>
> """ %? pid)"
>
>
>
> Which is iditic as my application may not even expose a -pidfile or a
> -logfile and it's definatley not called twistd. The platform specific
> application runners need to be more generalized so users can write their own
> twistd equivalent to include only what they want.
>
>
>
> Perhaps I'm missing some key point of twisted that already does this. If so,
> I'd love to be guided in the right direction. If not, and I've got a valid
> point here, I'd love to know how I can help to remedy this problem. I think
> it's great that twistd provides application management classes, but they are
> unnecessarily intertwined with twistd which should be completely optional.
>
>
>
> -Jared
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Tue Jun 23 12:27:17 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 23 Jun 2009 16:27:17 -0000
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
Message-ID: <20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>


(snip)

On 01:42 pm, grickert at coldstorage.com wrote:
>  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
>line 12, in <module>
>    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
>exceptions.ImportError: cannot import name ITestPlugin
>test_example
>  ExampleTestCase
>    test_example ...
>[OK]

>PASSED (successes=1)
>
>Could someone point out what I am doing wrong (or is this traceback
>"Normal")?
>(I found some post on the web about a possible cause being invalid .pyc
>files left over from a previous twisted install, so I deleted all .pyc
>files under site-packages\twisted - but still get this traceback)

Your problem is that you've installed two versions of Twisted using 
setup.py install, without removing Twisted in between.  This means you 
have an old plugin lying around which is trying to import some things 
that no longer exist in "twisted.plugin".

The traceback is mostly harmless, but you should really re-install 
Twisted from scratch so that you don't experience other issues related 
to this, such as spurious test failures.

In general I would not recommend using 'setup.py' to install to site- 
packages directly, because of problems like this; you should use a tool 
like Combinator[1] or virtualenv[2] to manage your development 
dependencies.

1: http://www.divmod.org/trac/wiki/DivmodCombinator
2: http://pypi.python.org/pypi/virtualenv



From vishal_shetye at persistent.co.in  Tue Jun 23 12:31:21 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 23 Jun 2009 22:01:21 +0530
Subject: [Twisted-Python] adbapi and multiple queries in single
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B90C32EF@EXCHANGE.persistent.co.in>

Phil thanks for the reply. I plan to do something similar.
[sorry for not providing code snippet.]
I have modified your code (please ignore queries and other errors)
However I am not very much convinced with this approach,
As you can see validate of ObjectGateway is a public method which also needs to be called from handleLogin.
So I have to write two methods one public 'validate' and other private '_validate'.
Any comments/suggestions or pointers to any existing applications/architecture documents with similar data access?

class TableGateway(object):
     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =
%s', user_id)
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =
%s', [username, sid])

     def validateSid(self, txn, sid):
          res = txn.execute('select id from user where id=?', (sid,))
          return True if res else False

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool
         self.tblGw = TableGateway()

     def _validate(self, txn, sid):
          return self.tblGw.validateSid(txn, sid)

     def validate(self, sid):
          return self.pool.runInteraction(self._validate, sid)

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             if not self._validate(trans, sid):
                 raise "invalid sid"
             u = self.tblGw._getUserName(trans, user_id)
             self.tblGw._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

Regards,
vishal

Date: Tue, 23 Jun 2009 10:25:16 -0400
From: Phil Christensen <phil at bubblehouse.org>
Subject: Re: [Twisted-Python] adbapi and multiple queries in single
        transaction.
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <2E70F4C7-5253-44B2-9DB8-79D8817E96F4 at bubblehouse.org>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes

On Jun 23, 2009, at 9:45 AM, Vishal Shetye wrote:
>> I initially thought of putting all the queries per operation in a
>> runInteraction. However this results in code-duplication as many
>> queries are shared between different operations.

>It seems like the easiest way to deal with this would be to make
>'private' methods for all the standard queries; these methods/
>functions would accept a transaction object like you said, but the
>methods themselves would only be called from an interaction, which can
>supply the transaction object.

>Then in each public ObjectGateway method you can just define an inner
>function to serve as the interaction, calling each private query
>method in turn, using the transaction object provided to that
>interaction.

>Here's a stupidly trivial example:

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool

     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =
%s', user_id);
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =
%s', [username, sid]);

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             u = self._getUserName(trans, user_id)
             self._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

>Other than being careful not to mess around with the instance state
>during those interactions (they are running in a thread, after all),
>this should be pretty straightforward.

>Hope this helps,

-phil
DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.



From warner at lothar.com  Tue Jun 23 22:03:23 2009
From: warner at lothar.com (Brian Warner)
Date: Tue, 23 Jun 2009 19:03:23 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.4.2 released
Message-ID: <20090623190323.107389a5@luther>

I've recently released Foolscap-0.4.2 (and noticed that I hadn't sent
out a release announcement since 0.2.8 over a year ago, despite there
being 2 major and 4 minor releases in that time. my bad).

The home page is http://foolscap.lothar.com/trac . Download this release from
PyPI, or from http://foolscap.lothar.com/releases/foolscap-0.4.2.tar.gz .

This release adds the "Foolscap Application Server", an easy way to configure
and deploy various foolscap-based services like "upload-file" and
"run-command". Think of it as a twistd for foolscap. The demo directory
includes code to use a FURL to checkout and commit to a Git repository: it's
easy to set up, and the client holding this FURL gets no other access to the
server machine. The full release notes (since 0.2.8) are attached below.

Since I missed the last few releases, I'll mention some other features from
the past year. The 0.4.0 series changes the preferred access point to
"foolscap.api", begins to give up on the resource-consumption-attacks
prevention code, and fixes compatibility with python-2.6. The 0.3.0 series
adds an "Incident Gatherer" service to the logging code, and improves error
handling (DeadReferenceError and RemoteException).


Foolscap is a Twisted-friendly remote object protocol, a descendant of
Perspective Broker, with improved security properties, third-party
references, adaptable serialization, remote logging, and other useful
features. Please visit http://foolscap.lothar.com/trac for more details.


have a capable day,
 -Brian




* Release 0.4.2 (16 Jun 2009)

** Compatibility

Same as 0.4.1

** the Foolscap Application Server

The big new feature in this release is the "Foolscap Application Server".
This is both a demo of what you can do with Foolscap, and an easy way to
deploy a few simple services that run over secure connections. You create and
start a "flappserver" on one machine, and then use the new "flappclient" on
the other side. The server can contain multiple services, each with a
separate FURL. You give the client a FURL for a specific service, it
connects, does a job, and shuts down.

See doc/flappserver.xhtml for details.

Two service types are provided in this release. The first is a simple
file-uploader: the holder of the FURL gets to upload arbitrary files into a
specific target directory, and nowhere else. The second is a pre-configured
command runner: the service is configured with a shell command, and the
client gets to make it run (but doesn't get to influence anything about what
gets run). The run-command service defaults to sending stdout/stderr/exitcode
to the client program, which will behave as if it were the command being run
(stdout and stderr appear at right time, and it exits with the same
exitcode). The service can be configured to accept stdin, or to turn off
stdout or stderr. The service always runs in a preconfigured working
directory.

To do this with SSH, you'd need to create a new keypair, then set up an
authorized_keys entry to limit that pubkey to a single command, and hope that
environment variables and the working directory don't cause any surprises.
Implementing the fixed-directory file-uploader would probably require a
specialized helper program.

The flappserver provides an easy-to-configure capability-based replacement
those sorts of SSH setups. The first use-case is to allow buildslaves to
upload newly-created debian packages to a central repository and then trigger
a package-index rebuild script. By using FURLs instead of raw SSH keys, the
buildslaves will be unable to affect any .debs in other directories, or any
other files on the repository host, nor will they be able to run arbitrary
commands on that host. By storing the FURLs in a file and using the
--furlfile argument to "flappclient", a buildbot transcript of the upload
step will not leak the upload authority.

** new RemoteReference APIs

RemoteReference now features two new methods. rref.isConnected() returns a
boolean, True if the remote connection is currently live, False if it has
been lost. This is an immediate form of the rref.notifyOnDisconnect()
callback-registration mechanism, and can make certain types of
publish-subscribe code easier to write.


The second is rref.getLocationHints(), which returns a list of location hints
as advertised by the host Tub. Most hints are a ("ipv4",host,portnum) tuple,
but other types may be defined in the future. Note that this is derived from
the FURL that each Tub sends with its my-reference sequence (i.e. it is
entirely controlled by the Tub in which that Referenceable lives), so
getLocationHints() is quite distinct from rref.getPeer() (which returns an
IPv4Address or LoopbackAddress instance describing the other end of the
actual network connection). getLocationHints() indicates what the other Tub
wants you to use for new connections, getPeer() indicates what was used for
the existing connection (which might not accept new connections due to NAT or
proxy issues).

getLocationHints() is meant to make it easier to write connection-status
display code, for example in a server which holds connections to a number of
peers. A status web page can loop over the peer RemoteReferences and display
location information for each one without needing to look deep inside the
hidden RemoteReferenceTracker instance to find it.

** giving up on resource-consumtion defenses

Ticket #127 contains more detail, but beginning with this release, Foolscap
will be slowly removing the code that attempted to prevent memory-exhaustion
attacks. Doing this in a single process is just too hard, and the limits that
were enforced provided more problems than protection. To this end, an
internal 200-byte limit on FURL length (applied in Gifts) has been removed.
Later releases will remove more code, hopefully simplifying the deserization
path.

** other bugfixes

Previous releases would throw an immediate exception when Tub.getReference()
or Tub.connectTo() was called with an unreachable FURL (one with a corrupted
or empty set of location hints). In code which walks a list of FURLs and
tries to initiate connections to all of them, this synchronous exception
would bypass all FURLs beyond the troublesome one.

This has been improved: Tub.getReference() now always returns a Deferred,
even if the connection is doomed to fail because of a bad FURL. These
problems are now indicated by a Deferred that errbacks instead of a
synchronous exception.


* Release 0.4.1 (22 May 2009)

** Compatibility

Same as 0.4.0

** Bug fixes

The new RemoteException class was not stringifiable under python2.4 (i.e.
str(RemoteException(f)) would raise an AttributeError), causing problems
especially when callRemote errbacks attempted to record the received Failure
with log.msg(failure=f). This has been fixed.


* Release 0.4.0 (19 May 2009)

** Compatibility

The wire protocol remains the same as before, unchanged since 0.2.6 .

The main API entry point has moved to "foolscap.api": e.g. you should do
"from foolscap.api import Tub" instead of "from foolscap import Tub".
Importing symbols directly from the "foolscap" module is now deprecated.
(this makes it easier to reorganize the internal structure of Foolscap
without causing circular dependencies). (#122)

A near-future release (probably 0.4.1) will add proper
DeprecationWarnings-raising wrappers to all classes and functions in
foolscap/__init__.py . The next major release (probably 0.5.0) will remove
these symbols from foolscap/__init__.py altogether.

Logging functions are still meant to be imported from foolscap.logging.* .

** expose-remote-exception-types (#105)

Remote exception reporting is changing. Please see the new document
docs/failures.xhtml for full details. This release adds a new option:

 tub.setOption("expose-remote-exception-types", BOOL)

The default is True, which provides the same behavior as previous releases:
remote exceptions are presented to look as much as possible like local
exceptions.

If you set it to False, then all remote exceptions will be collapsed into a
single "foolscap.api.RemoteException" type, with an attribute named .failure
that can be used to get more details about the remote exception. This means
that callRemote will either fire its Deferred with a regular value, or
errback with one of three exception types from foolscap.api:
DeadReferenceError, Violation, or RemoteException. (When the option is True,
it could errback with any exception type, limited only by what the remote
side chose to raise)

A future version of Foolscap may change the default value of this option.
We're not sure yet: we need more experience to see which mode is safer and
easier to code with. If the default is changed, the deprecation sequence will
probably be:

 0.5.0: require expose-remote-exception-types to be set
 0.6.0: change the default to False, stop requiring the option to be set
 0.7.0: remove the option

** major bugs fixed:

Shared references now work after a Violation (#104)

The tubid returned by rref.getSturdyRef() is now reliable (#84)

Foolscap should work with python-2.6: Decimal usage fixed, sha/md5
deprecation warnings fixed, import of 'sets' still causes a warning. (#118,
#121)

Foolscap finally uses new-style classes everywhere (#96)

bin/flogtool might work better on windows now (#108)

logfiles now store library versions and process IDs (#80, #97)

The "flogtool web-viewer" tool listens at a URL of "/" instead of "/welcome",
making it slightly easier to use (#120)

You can now setOption() on both log-gatherer-furl and log-gatherer-furlfile
on the same Tub. Previously this caused an error. (#114)


* Release 0.3.2 (14 Oct 2008)

** Compatibility: same as 0.2.6

Incident classifier functions (introduced in 0.3.0) have been changed: if you
have written custom functions for an Incident Gatherer, you will need to
modify them upon upgrading to this release.

** Logging Changes

The log.msg counter now uses a regular Python integer/bigint. The counter in
0.3.1 used itertools.count(), which, despite its documentation, stores the
counter in a C signed int, and thus throws an exception when the message
number exceeds 2**31-1 . This exception would pretty much kill any program
which ran long enough to emit this many messages, a situation which was
observed in a busy production server with an uptime of about three or four
weeks. The 0.3.2 counter will be promoted to a bigint when necessary,
removing this limitation. (ticket #99)

The Incident-Gatherer now imports classification functions from files named
'classify_*.py' in the gatherer's directory. This effectively adds
"classifier plugins". The signature of the functions has changed since the
0.3.0 release, making them easier to use. If you have written custom
functions (and edited the gatherer.tac file to activate them, using
gs.add_classifier()), you will need to modify the functions to take a single
'trigger' argument.

These same 'classify_*.py' plugins are used by a new "flogtool
classify-incident" subcommand, which can be pointed at an incident file, and
performs the same kind of classification as the Incident Gatherer. (#102).

The logfiles produced by the "flogtool tail" command and the internal
incident-reporter now include the PID of the reporting process. This can be
seen by passing the --verbose option to "flogtool dump", and will be made
more visible in later releases. (#80).

The "flogtool web-viewer" tool now marks Incident triggers (#79), and
features a "Reload Logfile" button to re-read the logfile on disk (#103).
This is most useful when running unit tests, in conjunction with the
FLOGFILE= environment variable.

** Other Changes

When running unit tests, if the #62 bug is encountered (pyopenssl >= 0.7 and
twisted <= 8.1.0 and selectreactor), the test process will emit a warning and
pause for ten seconds to give the operator a chance to halt the test and
re-run it with --reactor=poll. This may help to reduce the confusion of a
hanging+failing test run.

The xfer-client.py example tool (in doc/listings/) has been made more
useable, by calling os.path.expanduser() on its input files, and by doing
sys.exit(1) on failure (instead of hanging), so that external programs can
react appropriately.


* Release 0.3.1 (03 Sep 2008)

** Compatibility: same as 0.2.6

** callRemote API changes: DeadReferenceError

All partitioning exceptions are now mapped to DeadReferenceError. Previously
there were three separate exceptions that might indicate a network partition:
DeadReferenceError, ConnectionLost, and ConnectionDone. (a network partition
is when one party cannot reach the other party, due to a variety of reasons:
temporary network failure, the remote program being shut down, the remote
host being taken offline, etc).

This means that, if you want to send a message and don't care whether that
message makes it to the recipient or not (but you *do* still care if the
recipient raises an exception during processing of that message), you can set
up the Deferred chain like this:

 d = rref.callRemote("message", args)
 d.addCallback(self.handle_response)
 d.addErrback(lambda f: f.trap(foolscap.DeadReferenceError))
 d.addErrback(log.err)

The first d.addErrback will use f.trap to catch DeadReferenceError, but will
pass other exceptions through to the log.err() errback. This will cause
DeadReferenceError to be ignored, but other errors to be logged.

DeadReferenceError will be signalled in any of the following situations:

 1: the TCP connection was lost before callRemote was invoked
 2: the connection was lost after the request was sent, but before
    the response was received
 3: when the active connection is dropped because a duplicate connection was
    established. This can occur when two programs are simultaneously
    connecting to each other.

** logging improvements

*** bridge foolscap logs into twistd.log

By calling foolscap.logging.log.bridgeLogsToTwisted(), or by setting the
$FLOGTOTWISTED environment variable (to anything), a subset of Foolscap log
events will be copied into the Twisted logging system. The default filter
will not copy events below the log.OPERATIONAL level, nor will it copy
internal foolscap events (i.e. those with a facility name that starts with
"foolscap"). This mechanism is careful to avoid loops, so it is safe to use
both bridgeLogsToTwisted() and bridgeTwistedLogs() at the same time. The
events that are copied into the Twisted logging system will typically show up
in the twistd.log file (for applications that are run under twistd).

An alternate filter function can be passed to bridgeLogsToTwisted().

This feature provides a human-readable on-disk record of significant events,
using a traditional one-line-per-event all-text sequential logging structure.
It does not record parent/child relationships, structured event data, or
causality information.

*** Incident Gatherer improvements

If an Incident occurs while a previous Incident is still being recorded (i.e.
during the "trailing log period"), the two will be folded together.
Specifically, the second event will not trigger a new Incident, but will be
recorded in the first Incident as a normal log event. This serves to address
some performance problems we've seen when incident triggers occur in
clusters, which used to cause dozens of simultaneous Incident Recorders to
swing into action.

The Incident Gatherer has been changed to only fetch one Incident at a time
(per publishing application), to avoid overloading the app with a large
outbound TCP queue.

The Incident Gatherer has also been changed to scan the classified/* output
files and reclassify any stored incidents it has that are not mentioned in
one of these files. This means that you can update the classification
functions (to add a function for some previously unknown type of incident),
delete the classified/unknown file, then restart the incident gatherer, and
it will only reclassify the previously-unknown incidents. This makes it much
easier to iteratively develop classification functions.

*** Application Version data

The table of application versions, previously displayed only by the 'flogtool
tail' command, is now recorded in the header of both Incidents and the
'flogtool tail --save-to' output file.

The API to add application versions has changed: now programs should call
foolscap.logging.app_versions.add_version(name, verstr).


* Release 0.3.0 (04 Aug 2008)

** Compatibility: same as 0.2.6

The wire-level protocol remains the same as other recent releases.

The new incident-gatherer will only work with applications that use Foolscap
0.3.0 or later.

** logging improvements

The "incident gatherer" has finally been implemented. This is a service, like
the log-gatherer, which subscribes to an application's logport and collects
incident reports: each is a dump of accumulated log messages, triggered by
some special event (such as those above a certain severity threshold). The
"flogtool create-incident-gatherer" command is used to create one, and twistd
is used to start it. Please see doc/logging.xhtml for more details.

The incident publishing API was changed to support the incident-gatherer. The
incident-gatherer will only work with logports using foolscap 0.3.0 or newer.

The log-publishing API was changed slightly, to encourage the use of
subscription.unsubscribe() rather than publisher.unsubscribe(subscription).
The old API remains in place for backwards compatibility with log-gatherers
running foolscap 0.2.9 or earlier.

The Tub.setOption("log-gatherer-furlfile") can accept a file with multiple
FURLs, one per line, instead of just a single FURL. This makes the
application contact multiple log gatherers, offering its logport to each
independently, e.g. to connect to both a log-gatherer and an
incident-gatherer.

** API Additions

RemoteReferences now have a getRemoteTubID() method, which returns a string
(base32-encoded) representing the secure Tub ID of the remote end of the
connection. For any given Tub ID, only the possessor of the matching private
key should be able to provide a RemoteReference for which getRemoteTubID()
will return that value. I'm not yet sure if getRemoteTubID() is a good idea
or not (the traditional object-capability model discourages making
access-control decisions on the basis of "who", instead these decisions
should be controlled by "what": what objects do they have access to). This
method is intended for use by application code that needs to use TubIDs as an
index into a table of some sort. It is used by Tahoe to securely compute
shared cryptographic secrets for each remote server (by hashing the TubID
together with some other string).

Note that the rref.getSturdyRef() call (which has been present in Foolscap
since forever) is *not* secure: the remote application controls all parts of
the sturdy ref FURL, including the tubid. A future version of foolscap may
remedy this.

** Bug fixes

The log-gatherer FURL can now be set before Tub.setLocation (the connection
request will be deferred until setLocation is called), and
getLogPort/getLogPortFURL cannot be called until after setLocation. These two
changes, in combination, resolve a problem (#55) in which the gatherer
connection could be made before the logport was ready, causing the
log-gatherer to fail to subscribe to receive log events.

** Dependent Libraries

Foolscap uses PyOpenSSL for all of its cryptographic routines. A bug (#62)
has been found in which the current version of Twisted (8.1.0) and the
current version of PyOpenSSL (0.7) interact badly, causing Foolscap's unit
tests to fail. This problem will affect application code as well
(specifically, Tub.stopService will hang forever). The problem only appears
to affect the selectreactor, so the current recommended workaround is to run
unit tests (and applications that need to shut down Tubs) with --reactor=poll
(or whatever other reactor is appropriate for the platform, perhaps iocp). A
less-desireable workaround is to downgrade PyOpenSSL to 0.6, or Twisted to
something older. The Twisted maintainers are aware of the problem and intend
to fix it in an upcoming Twisted release.


* Release 0.2.9 (02 Jul 2008)

** Compatibility: exactly the same as 0.2.6

** logging bugs fixed

The foolscap.logging.log.setLogDir() option would throw an exception if the
directory already existed, making it unsuitable for use in an application
which is expected to be run multiple times. This has been fixed.

** logging improvements

'flogtool tail' now displays the process ID and version information about the
remote process. The tool will tolerate older versions of foolscap which do
not offer the get_pid interface. (foolscap ticket #71)

The remote logport now uses a size-limited queue for messages going to a
gatherer or 'flogtool tail', to prevent the monitored process from using
unbounded amounts of memory during overload situations (when it is generating
messages faster than the receiver can handle them). This solves a runaway
load problem we've seen in Tahoe production systems, in which a busy node
sends log messages to a gatherer too quickly for it to absorb, using lots of
memory to hold the pending messages, which causes swapping, which causes more
load, making the problem worse. We frequently see an otherwise well-behaved
process swell to 1.4GB due to this problem, occasionally failing due to VM
exhaustion. Of course, a bounded queue means that new log events will be
dropped during this overload situation. (#72)

** serialization added for the Decimal type (#50)

** debian packaging targets added for gutsy and hardy

The Makefile now has 'make debian-gutsy' and 'make debian-hardy' targets.
These do the same thing as 'make debian-feisty'. (#76)



From johan.rydberg at edgeware.tv  Wed Jun 24 05:28:54 2009
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 24 Jun 2009 11:28:54 +0200
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <8217E210-8C55-4FCE-B574-82BF5FB49DD1@edgeware.tv>


On Jun 22, 2009, at 10:30 PM, Jared Gisin wrote:

> [...]

I must say I agree with everything you're saying.

Another thing I'm missing is that there's no way to specify
_when_ to daemonize the application.  Plus I would love if
startService could return a deferred, just like stopService
does.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090624/5dabad7d/attachment.htm 

From grickert at coldstorage.com  Wed Jun 24 09:00:40 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 24 Jun 2009 09:00:40 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
	<20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04574508@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: glyph at divmod.com [mailto:glyph at divmod.com]
>Sent: Tuesday, June 23, 2009 12:27 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Twisted Trial
>
>
>(snip)
>
>On 01:42 pm, grickert at coldstorage.com wrote:
>>  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
>>line 12, in <module>
>>    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
>>exceptions.ImportError: cannot import name ITestPlugin
>>test_example
>>  ExampleTestCase
>>    test_example ...
>>[OK]
>
>>PASSED (successes=1)
>>
>>Could someone point out what I am doing wrong (or is this traceback
>>"Normal")?
>>(I found some post on the web about a possible cause being invalid .pyc
>>files left over from a previous twisted install, so I deleted all .pyc
>>files under site-packages\twisted - but still get this traceback)
>
>Your problem is that you've installed two versions of Twisted using
>setup.py install, without removing Twisted in between.  This means you
>have an old plugin lying around which is trying to import some things
>that no longer exist in "twisted.plugin".
>
>The traceback is mostly harmless, but you should really re-install
>Twisted from scratch so that you don't experience other issues related
>to this, such as spurious test failures.
>
>In general I would not recommend using 'setup.py' to install to site-
>packages directly, because of problems like this; you should use a tool
>like Combinator[1] or virtualenv[2] to manage your development
>dependencies.
>
>1: http://www.divmod.org/trac/wiki/DivmodCombinator
>2: http://pypi.python.org/pypi/virtualenv
>


Thanks, Glyph.  

Uninstalling previous versions, then reinstalling Twisted fixed it.
I'll check out those tools.


From phil at bubblehouse.org  Wed Jun 24 11:18:29 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 24 Jun 2009 11:18:29 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==><0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
	<0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>
Message-ID: <3DA959C9-4217-45F0-93B0-E088D2A1E36C@bubblehouse.org>

On Jun 23, 2009, at 11:27 AM, Jared Gisin wrote:
> In order to fire up the app with sane default, I should be able to  
> issue one command with no arguments as the defaults for all of those  
> should be baked into the system.
[snip]
> I guess in the mean time, I'll just write my own custom  
> ServerOptions, which oddly, will mirror a bunch of code that already  
> exists.

Based on your use case, you really shouldn't need to duplicate much  
functionality at all.

Here's one way to make a custom runner that uses all the guts of the  
twistd stuff, but overrides various options. This example sets the  
pidfile to 'web.pid' and automatically runs the 'web' sub-command:

     from twisted.application import app
     from twisted.scripts.twistd import runApp

     from twisted.python.runtime import platformType
     if platformType == "win32":
         from twisted.scripts._twistw import ServerOptions
     else:
         from twisted.scripts._twistd_unix import ServerOptions

     class CustomServerOptions(ServerOptions):
         defaultSubCommand = 'web'
         optParameters = [
                          ['pidfile','','web.pid',
                           "Name of the pidfile"],
                         ]

     if __name__ == '__main__':
         app.run(runApp, CustomServerOptions)

The biggest complication here is selecting the correct ServerOptions  
file to use as a base. As it is, this example will pick the correct  
ServerOptions base, but sets the pidfile default no matter what, which  
isn't applicable to the windows options, AFAIK.

I'm not suggesting it couldn't be better, but I don't know what  
specific changes would need to be made to satisfy everyone (or mostly  
everyone).

-phil



From revenantstyle at gmail.com  Wed Jun 24 17:53:58 2009
From: revenantstyle at gmail.com (Dustin Land)
Date: Wed, 24 Jun 2009 16:53:58 -0500
Subject: [Twisted-Python] How to disable XMLRPC logging
Message-ID: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>

Greetings!

Currently I'm running two daemons that talk to each other over xmlrpc.
One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
handler.
The other simply uses web.xmlrpc.Proxy.

In the logs for the first I get a flood of...
2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
In the second...
2009-06-24 16:44:13-0500 [-] Starting factory
<twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
<twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>

Is there a way to disable this?  I saw in the archives that
HTTPClientFactory.noisy can be set to False.  Is there something similar for
both of these instances?

Thanks,

Dustin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090624/61bd494c/attachment.htm 

From exarkun at divmod.com  Wed Jun 24 18:02:26 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 24 Jun 2009 18:02:26 -0400
Subject: [Twisted-Python] How to disable XMLRPC logging
In-Reply-To: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>
Message-ID: <20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>

On Wed, 24 Jun 2009 16:53:58 -0500, Dustin Land <revenantstyle at gmail.com> wrote:
>Greetings!
>
>Currently I'm running two daemons that talk to each other over xmlrpc.
>One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
>handler.
>The other simply uses web.xmlrpc.Proxy.
>
>In the logs for the first I get a flood of...
>2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
>"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
>In the second...
>2009-06-24 16:44:13-0500 [-] Starting factory
><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
>2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
>
>Is there a way to disable this?  I saw in the archives that
>HTTPClientFactory.noisy can be set to False.  Is there something similar for
>both of these instances?

Not really.

_QueryFactory is a subclass of ClientFactory, so like HTTPClientFactory, it
has the `noisy? attribute which controls whether it logs these messages.  The
trouble here is that you don't have access to the _QueryFactory instance.  It
might be a nice enhancement to either add a way to get at it, or perhaps to
just give `Proxy? a `noisy? attribute which it copies onto the _QueryFactory
instance it creates.

It might also be nice to get rid of this `noisy? stuff and instead have
ClientFactory (and subclasses) always log this information, then teach the
log observer (ie, the thing which actually writes these messages to a log
file) how to be more selective in what it actually reports.

Jean-Paul



From revenantstyle at gmail.com  Fri Jun 26 11:53:59 2009
From: revenantstyle at gmail.com (Dustin Land)
Date: Fri, 26 Jun 2009 10:53:59 -0500
Subject: [Twisted-Python] How to disable XMLRPC logging
In-Reply-To: <20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>
References: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>
	<20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>
Message-ID: <30275b270906260853x888b232t98881b894787994c@mail.gmail.com>

Thanks for the info Jean-Paul.

On Wed, Jun 24, 2009 at 5:02 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 24 Jun 2009 16:53:58 -0500, Dustin Land <revenantstyle at gmail.com>
> wrote:
> >Greetings!
> >
> >Currently I'm running two daemons that talk to each other over xmlrpc.
> >One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
> >handler.
> >The other simply uses web.xmlrpc.Proxy.
> >
> >In the logs for the first I get a flood of...
> >2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
> >"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
> >In the second...
> >2009-06-24 16:44:13-0500 [-] Starting factory
> ><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
> >2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
> ><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
> >
> >Is there a way to disable this?  I saw in the archives that
> >HTTPClientFactory.noisy can be set to False.  Is there something similar
> for
> >both of these instances?
>
> Not really.
>
> _QueryFactory is a subclass of ClientFactory, so like HTTPClientFactory, it
> has the `noisy? attribute which controls whether it logs these messages.
>  The
> trouble here is that you don't have access to the _QueryFactory instance.
>  It
> might be a nice enhancement to either add a way to get at it, or perhaps to
> just give `Proxy? a `noisy? attribute which it copies onto the
> _QueryFactory
> instance it creates.
>
> It might also be nice to get rid of this `noisy? stuff and instead have
> ClientFactory (and subclasses) always log this information, then teach the
> log observer (ie, the thing which actually writes these messages to a log
> file) how to be more selective in what it actually reports.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090626/da6c1e8a/attachment.htm 

From Benjamin.Rutt at gs.com  Fri Jun 26 12:33:06 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 26 Jun 2009 12:33:06 -0400
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
Message-ID: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>

Am currently trying to upgrade to twisted-8.2.0.  For some reason,
twisted-8.2.0 thinks my deferred below was gc'd with an unhandled error,
and tells me about it upon reactor exit.  With
python-2.4.2/twisted-2.1.0, no issues.  With python-2.6.1/twisted-8.2.0,
I see these issues.  Any ideas why?  Thanks.

$ cat ./deferred-errors.py
#!/usr/bin/env python
import datetime, logging, os, random, re, shutil, socket
import subprocess, sys, tempfile, threading, time, traceback

from twisted.internet       import reactor
from twisted.internet       import defer
from twisted.internet.utils import getProcessOutput
from twisted.python         import log
import twisted

print 'twisted version is', twisted.__version__

def foo():
    d = getProcessOutput('/bin/hostnameX')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

reactor.callWhenRunning(foo)
reactor.callLater(3, reactor.stop)
reactor.run()

$ /sw/external/python-2.4.2/bin/python ./deferred-errors.py 
twisted version is 2.1.0
eb caught the failure!

$ /sw/external/python-2.6.1/bin/python ./deferred-errors.py 
twisted version is 8.2.0
eb caught the failure!
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended
with a probable error condition: process ended with exit code 1.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090626/dcb43718/attachment.htm 

From glyph at divmod.com  Fri Jun 26 13:48:47 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Jun 2009 17:48:47 -0000
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>


On 04:33 pm, benjamin.rutt at gs.com wrote:
>Am currently trying to upgrade to twisted-8.2.0.  For some reason,
>twisted-8.2.0 thinks my deferred below was gc'd with an unhandled 
>error,
>and tells me about it upon reactor exit.  With
>python-2.4.2/twisted-2.1.0, no issues.  With 
>python-2.6.1/twisted-8.2.0,
>I see these issues.  Any ideas why?  Thanks.

A second Deferred is created during getProcessOutput to track the ending 
of the process as distinct from the end of its output.  You have to 
catch that exception as well if you don't want any exceptions logged.

Arguably, this is a bug, since it changes the behavior and complicates 
error handling; if you think so, feel free to file a ticket on the 
tracker.  I just learned about this behavior myself, in the process of 
tracking down your question :).

This behavior was changed in:

    http://twistedmatrix.com/trac/changeset/24810

as part of a fix for:

    http://twistedmatrix.com/trac/ticket/3239

and that took place after 8.1 but before 8.2.  In the meanwhile, you 
could upgrade to 8.2 before going to 8.2 to avoid this issue; going from 
8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 ;).

If you'd still like to upgrade all the way, here's a "correct" version 
of your program (with spurious imports removed), according to the 
behavior in 8.2.0:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet.utils import getProcessOutput

def foo():
    d = getProcessOutput('/some/non/existent/program')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        failure.trap(IOError)
        def endedException(ended):
            print 'really, caught it!'
        failure.value.processEnded.addErrback(endedException)
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

def stopit():
    print 'Stopping reactor.'
    reactor.stop()
    print 'Stopped.'

reactor.callWhenRunning(foo)
reactor.callLater(1.0, stopit)
reactor.run()



From glyph at divmod.com  Fri Jun 26 13:53:51 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Jun 2009 17:53:51 -0000
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
	<20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
Message-ID: <20090626175351.12555.854158547.divmod.xquotient.14675@weber.divmod.com>

On 05:48 pm, glyph at divmod.com wrote:
>and that took place after 8.1 but before 8.2.  In the meanwhile, you
>could upgrade to 8.2 before going to 8.2 to avoid this issue; going 
>from
                  ^
ahem.  I meant "upgrade to 8.1 before going to 8.2", of course.
>8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 
>;).



From Benjamin.Rutt at gs.com  Fri Jun 26 15:08:39 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 26 Jun 2009 15:08:39 -0400
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
	<20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361FB57796@gsmbnbp22es.firmwide.corp.gs.com>

Thank you for digging this up - I filed a bug.  

http://twistedmatrix.com/trac/ticket/3892

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Friday, June 26, 2009 1:49 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Unhandled error in Deferred with
twisted-8.2.0,but not with twisted-2.1.0


On 04:33 pm, benjamin.rutt at gs.com wrote:
>Am currently trying to upgrade to twisted-8.2.0.  For some reason,
>twisted-8.2.0 thinks my deferred below was gc'd with an unhandled 
>error,
>and tells me about it upon reactor exit.  With
>python-2.4.2/twisted-2.1.0, no issues.  With 
>python-2.6.1/twisted-8.2.0,
>I see these issues.  Any ideas why?  Thanks.

A second Deferred is created during getProcessOutput to track the ending

of the process as distinct from the end of its output.  You have to 
catch that exception as well if you don't want any exceptions logged.

Arguably, this is a bug, since it changes the behavior and complicates 
error handling; if you think so, feel free to file a ticket on the 
tracker.  I just learned about this behavior myself, in the process of 
tracking down your question :).

This behavior was changed in:

    http://twistedmatrix.com/trac/changeset/24810

as part of a fix for:

    http://twistedmatrix.com/trac/ticket/3239

and that took place after 8.1 but before 8.2.  In the meanwhile, you 
could upgrade to 8.2 before going to 8.2 to avoid this issue; going from

8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 ;).

If you'd still like to upgrade all the way, here's a "correct" version 
of your program (with spurious imports removed), according to the 
behavior in 8.2.0:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet.utils import getProcessOutput

def foo():
    d = getProcessOutput('/some/non/existent/program')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        failure.trap(IOError)
        def endedException(ended):
            print 'really, caught it!'
        failure.value.processEnded.addErrback(endedException)
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

def stopit():
    print 'Stopping reactor.'
    reactor.stop()
    print 'Stopped.'

reactor.callWhenRunning(foo)
reactor.callLater(1.0, stopit)
reactor.run()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From james at mansionfamily.plus.com  Sat Jun 27 07:41:39 2009
From: james at mansionfamily.plus.com (James Mansion)
Date: Sat, 27 Jun 2009 12:41:39 +0100
Subject: [Twisted-Python] Conch sshd on windows
Message-ID: <4A460573.5070501@mansionfamily.plus.com>

Can/does the conch sshd authenticate local or domain Windows users?

James




From glyph at divmod.com  Sat Jun 27 12:14:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 27 Jun 2009 16:14:45 -0000
Subject: [Twisted-Python] Conch sshd on windows
In-Reply-To: <4A460573.5070501@mansionfamily.plus.com>
References: <4A460573.5070501@mansionfamily.plus.com>
Message-ID: <20090627161445.12555.955374788.divmod.xquotient.14677@weber.divmod.com>


On 11:41 am, james at mansionfamily.plus.com wrote:
>Can/does the conch sshd authenticate local or domain Windows users?

Not currently, but its authentication system is pluggable via 
twisted.cred, so it should be fairly straightforward to add that 
functionality.



From exarkun at twistedmatrix.com  Sun Jun 28 00:05:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Jun 2009 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1246161923.51.1716739102@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20090628/2e8d962b/attachment.htm 

From hoadley at gmail.com  Mon Jun 29 16:19:53 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Mon, 29 Jun 2009 13:19:53 -0700
Subject: [Twisted-Python] testing a tac file
Message-ID: <9bb390e70906291319i4ba38bbco155405f7475cf432@mail.gmail.com>

Hi, I'm curious if anyone has written a trial test to verify the
correct startup of a .tac file.

I have a buildbot running automated trial tests on all the services
I've written but nothing that closes the loop by building up the
services by running the tac file similarly to the way that you'd use
trial.   Ideally, I'd like to verify that the MultiService has
properly started up all the services from a list defined by the test.
I know this a fairly nitpicking problem.  In production, It's easy for
me to just ssh into the running process and see what's going on via
the manhole.  But, I was hoping to catch a badly behaving tac file in
the buildbot.  It may be something out of the scope of trial but I was
hoping someone has some integration test approaches for a twisted
project they could share.

thanks

-rob



From m-lists at the-moon.net  Mon Jun 29 18:17:36 2009
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 29 Jun 2009 23:17:36 +0100
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>

On Wed, Apr 1, 2009 at 12:54 PM, Terry Jones<terry at jon.es> wrote:
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu

I'm a little late replying to this, but yeah, I'd be interested in
meeting up with other Twisted users / devs and maybe working on some
Twisted tickets.

I'll be at the conference on Tue and Thu (maybe Saturday for the
sprints) I'll try and get to your talk tomorrow morning and introduce
myself.

-RichardW.



From exarkun at divmod.com  Mon Jun 29 18:37:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 29 Jun 2009 18:37:31 -0400
Subject: [Twisted-Python] testing a tac file
In-Reply-To: <9bb390e70906291319i4ba38bbco155405f7475cf432@mail.gmail.com>
Message-ID: <20090629223731.22176.49461141.divmod.quotient.10983@henry.divmod.com>

On Mon, 29 Jun 2009 13:19:53 -0700, Rob Hoadley <hoadley at gmail.com> wrote:
>Hi, I'm curious if anyone has written a trial test to verify the
>correct startup of a .tac file.
>
>I have a buildbot running automated trial tests on all the services
>I've written but nothing that closes the loop by building up the
>services by running the tac file similarly to the way that you'd use
>trial.   Ideally, I'd like to verify that the MultiService has
>properly started up all the services from a list defined by the test.
>I know this a fairly nitpicking problem.  In production, It's easy for
>me to just ssh into the running process and see what's going on via
>the manhole.  But, I was hoping to catch a badly behaving tac file in
>the buildbot.  It may be something out of the scope of trial but I was
>hoping someone has some integration test approaches for a twisted
>project they could share.

This is definitely one of the big shortcomings of .tac files.  I generally
approach this by absolutely minimizing the amount of code in the .tac file
itself.  This doesn't help you test the code that's there, but if you're
limited to importing a function that creates your service, calling that
function, and attaching it to the application object, at least there's
very little code that's untested, and it should be modified very
infrequently.

I welcome any suggestions for a better answer than this one.  It would
probably be easy to make a case for the inclusion of some APIs to help
out tests.  `twisted.application.service.loadApplication? might even
go towards this end already - I've never tried writing a test using it,
but maybe that would work out well.

Jean-Paul



From terry at jon.es  Mon Jun 29 20:18:37 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 30 Jun 2009 00:18:37 +0000
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
Message-ID: <1081896181-1246321135-cardhu_decombobulator_blackberry.rim.net-1598736267-@bxe1078.bisx.produk.on.blackberry>

Hi Richard

That sounds good. You might enjoy Esteve Fernandez's talk at 11:30, which is about how we're using Twisted plus Thrift and AMQP for messaging / RPC.

Terry

Enviado desde mi dispositivo BlackBerry? de Orange.

From glyph at divmod.com  Mon Jun 29 20:56:43 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 30 Jun 2009 00:56:43 -0000
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>
References: <18899.21979.864647.248897@jon.es>
	<fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>
Message-ID: <20090630005643.12555.1741645507.divmod.xquotient.14704@weber.divmod.com>


On 29 Jun, 10:17 pm, m-lists at the-moon.net wrote:
>On Wed, Apr 1, 2009 at 12:54 PM, Terry Jones<terry at jon.es> wrote:
>>I was thinking it would be nice to have a Twisted interest group 
>>meetup at
>>EuroPython (June 30 - July 2) http://www.europython.eu
>
>I'm a little late replying to this, but yeah, I'd be interested in
>meeting up with other Twisted users / devs and maybe working on some
>Twisted tickets.
>
>I'll be at the conference on Tue and Thu (maybe Saturday for the
>sprints) I'll try and get to your talk tomorrow morning and introduce
>myself.
>
>-RichardW.

If you're organizing a sprint (formal or informal) at Europython, please 
let us know when it's going to be so that those of us elsewhere in the 
world can lend a hand by doing reviews!



From denis.bilenko at gmail.com  Mon Jun 29 22:14:54 2009
From: denis.bilenko at gmail.com (Denis Bilenko)
Date: Tue, 30 Jun 2009 09:14:54 +0700
Subject: [Twisted-Python] eventlet 0.8.11 released; now with twisted support
Message-ID: <95d6e98c0906291914t774e32afx8c89782c5e82ec56@mail.gmail.com>

Some of the changes from 0.8:

Eventlet can now run on top of twisted reactor. Twisted-based hub is
enabled automatically if
twisted.internet.reactor is imported. It is also possible to "embed"
eventlet into a twisted
application via eventlet.twistedutil.join_reactor. See the examples
for details.

http://bitbucket.org/denis/eventlet/src/tip/examples/

A new package, eventlet.twistedutil, is added that makes integration
of twisted and eventlet
easier. It has block_on function that allows to wait for a Deferred to
fire and it wraps
twisted's Protocol in a synchronous interface. This is similar to and
is inspired by Christopher
Armstrong's corotwine library. Thanks to Dan Pascu for reviewing the package.

Another new package, eventlet.green, was added to provide some of the
standard modules
that are fixed not to block other greenlets. This is an alternative to
monkey-patching
the socket, which is impossible to do if you are running twisted reactor.
The package includes socket, httplib, urllib2.

Much of the core functionality has been refactored and cleaned up,
including the removal
of eventlet.greenlib. This means that it is now possible to use plain
greenlets without
modification in eventlet, and the subclasses of greenlet instead of the old
eventlet.greenlib.GreenletContext. Calling
eventlet.api.get_hub().switch() now checks to
see whether the current greenlet has a "switch_out" method and calls
it if so, providing the
same functionality that the GreenletContext.swap_out used to. The
swap_in behavior can be
duplicated by overriding the switch method, and the finalize
functionality can be duplicated
by having a try: finally: block around the greenlet's main
implementation. The eventlet.backdoor
module has been ported to this new scheme, although it's signature had
to change slightly so
existing code that used the backdoor will have to be modified.

A number of bugs related to improper scheduling of switch calls has been fixed.
The fixed functions and classes include api.trampoline, api.sleep, coros.event,
coros.semaphore, coros.queue.

Many methods of greenio.GreenSocket were fixed to make its behavior
more like that of a regular
socket. Thanks to Marcin Bachry for fixing GreenSocket.dup to preserve
the timeout.

Added proc module which provides an easy way to subscribe to
coroutine's results. This makes
it easy to wait for a single greenlet or for a set of greenlets to complete.

wsgi.py now supports chunked transfer requests (patch by Mike Barton)

The following modules were deprecated or removed because they were broken:
hubs.nginx, hubs.libev, support.pycurls, support.twisteds, cancel
method of coros.event class

The following classes are still present but will be removed in the
future version:
- channel.channel (use coros.Channel)
- coros.CoroutinePool (use pool.Pool)

saranwrap.py now correctly closes the child process when the referring
object is deleted,
received some fixes to its detection of child process death, now
correctly deals with the in
keyword, and it is now possible to use coroutines in a non-blocking
fashion in the child process.

Time-based expiry added to db_pool. ?This adds the ability to expire
connections both by idleness
and also by total time open. ?There is also a connection timeout option.

A small bug in httpd's error method was fixed.

Python 2.3 is no longer supported.

A number of tests was added along with a script to run all of them for
all the configurations.
The script generates an html page with the results.

Thanks to Brian Brunswick for investigation of popen4 badness (eventlet.process)
Thanks to Marcus Cavanaugh for pointing out some coros.queue(0) bugs.

The twisted integration as well as many other improvements were funded
by AG Projects (http://ag-projects.com), thanks!



From vincent.gulinao at gmail.com  Tue Jun 30 04:07:57 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 16:07:57 +0800
Subject: [Twisted-Python] http.Request and JSON
Message-ID: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>

How do you read JSON content from a POST using http.Request. I peeked
on args and it's empty.

TIA.



From p.mayers at imperial.ac.uk  Tue Jun 30 04:18:04 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 30 Jun 2009 09:18:04 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
Message-ID: <20090630081804.GA6278@wildfire.net.ic.ac.uk>

On Tue, Jun 30, 2009 at 09:07:57AM +0100, Vincent Gulinao wrote:
>How do you read JSON content from a POST using http.Request. I peeked
>on args and it's empty.

"args" is www-urlencoded only. If the content-type is something else 
it's not filled in.

You want:

request.content.read()

IIRC



From vincent.gulinao at gmail.com  Tue Jun 30 04:36:37 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 16:36:37 +0800
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630081804.GA6278@wildfire.net.ic.ac.uk>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
Message-ID: <fcc3e6170906300136m22f93f52w5b8e445f33121549@mail.gmail.com>

works :)

On Tue, Jun 30, 2009 at 4:18 PM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:
> On Tue, Jun 30, 2009 at 09:07:57AM +0100, Vincent Gulinao wrote:
>>How do you read JSON content from a POST using http.Request. I peeked
>>on args and it's empty.
>
> "args" is www-urlencoded only. If the content-type is something else
> it's not filled in.
>
> You want:
>
> request.content.read()
>
> IIRC
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From rlotun at gmail.com  Tue Jun 30 04:44:58 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 30 Jun 2009 09:44:58 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630081804.GA6278@wildfire.net.ic.ac.uk>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
Message-ID: <95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>

Hi,

On Tue, Jun 30, 2009 at 9:18 AM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:
> request.content.read()

To be safer, I do a request.content.getvalue() since content is a
cStringIO object and you can never be sure if somewhere along the
chain of processing someone hasn't done a .read and forgot to do a
.seek(0,0).

Cheers,
Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From mithrandi at mithrandi.net  Tue Jun 30 07:56:52 2009
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 30 Jun 2009 13:56:52 +0200
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
	<95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
Message-ID: <f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>

On Tue, Jun 30, 2009 at 10:44 AM, Reza Lotun<rlotun at gmail.com> wrote:
> To be safer, I do a request.content.getvalue() since content is a
> cStringIO object and you can never be sure if somewhere along the
> chain of processing someone hasn't done a .read and forgot to do a
> .seek(0,0).

You should probably do the seek/read instead, since I don't believe
this is guaranteed to be a cStringIO; it might be an actual file on
disk, or something else.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From rlotun at gmail.com  Tue Jun 30 08:12:05 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 30 Jun 2009 13:12:05 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
	<95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
	<f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>
Message-ID: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>

Hi,

On Tue, Jun 30, 2009 at 12:56 PM, Tristan
Seligmann<mithrandi at mithrandi.net> wrote:
>> To be safer, I do a request.content.getvalue() since content is a
>> cStringIO object and you can never be sure if somewhere along the
>> chain of processing someone hasn't done a .read and forgot to do a
>> .seek(0,0).
>
> You should probably do the seek/read instead, since I don't believe
> this is guaranteed to be a cStringIO; it might be an actual file on
> disk, or something else.

If that's true then there really should be a .get_body() method on the
request object.

Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From exarkun at divmod.com  Tue Jun 30 08:41:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 30 Jun 2009 08:41:46 -0400
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
Message-ID: <20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>

On Tue, 30 Jun 2009 13:12:05 +0100, Reza Lotun <rlotun at gmail.com> wrote:
>Hi,
>
>On Tue, Jun 30, 2009 at 12:56 PM, Tristan
>Seligmann<mithrandi at mithrandi.net> wrote:
>>> To be safer, I do a request.content.getvalue() since content is a
>>> cStringIO object and you can never be sure if somewhere along the
>>> chain of processing someone hasn't done a .read and forgot to do a
>>> .seek(0,0).
>>
>> You should probably do the seek/read instead, since I don't believe
>> this is guaranteed to be a cStringIO; it might be an actual file on
>> disk, or something else.
>
>If that's true then there really should be a .get_body() method on the
>request object.

Why can't you seek and read?

Also, this discussion would be more appropriate on the twisted-web mailing
list.

Jean-Paul



From vincent.gulinao at gmail.com  Tue Jun 30 09:56:18 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 21:56:18 +0800
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
References: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
	<20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
Message-ID: <fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>

In my case at least it's cStringIO, and getvalue() sufficed.

Sorry, subscribing to twisted-web now.

Thanks everyone.

On Tue, Jun 30, 2009 at 8:41 PM, Jean-Paul Calderone<exarkun at divmod.com> wrote:
> On Tue, 30 Jun 2009 13:12:05 +0100, Reza Lotun <rlotun at gmail.com> wrote:
>>Hi,
>>
>>On Tue, Jun 30, 2009 at 12:56 PM, Tristan
>>Seligmann<mithrandi at mithrandi.net> wrote:
>>>> To be safer, I do a request.content.getvalue() since content is a
>>>> cStringIO object and you can never be sure if somewhere along the
>>>> chain of processing someone hasn't done a .read and forgot to do a
>>>> .seek(0,0).
>>>
>>> You should probably do the seek/read instead, since I don't believe
>>> this is guaranteed to be a cStringIO; it might be an actual file on
>>> disk, or something else.
>>
>>If that's true then there really should be a .get_body() method on the
>>request object.
>
> Why can't you seek and read?
>
> Also, this discussion would be more appropriate on the twisted-web mailing
> list.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Tue Jun 30 10:33:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Jun 2009 10:33:16 -0400
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>
References: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
	<20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
	<fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>
Message-ID: <1246372396.26636.11.camel@pintsize>

On Tue, 2009-06-30 at 21:56 +0800, Vincent Gulinao wrote:
> In my case at least it's cStringIO, and getvalue() sufficed.
> 
> Sorry, subscribing to twisted-web now.
> 
> Thanks everyone.

One last followup, for those not on twisted-web: DO NOT use getvalue().
The promised interface is file-like. And in fact, if the body is bigger
than a certain size the object will not be a cStringIO and your code
will break.




From patrick.thomson at gmail.com  Mon Jun  1 11:38:39 2009
From: patrick.thomson at gmail.com (Patrick Thomson)
Date: Mon, 1 Jun 2009 18:38:39 +0100
Subject: [Twisted-Python] offer of adding IRCD support to
	words.protocol.irc
In-Reply-To: <20090519172608.21531.657862391.divmod.quotient.23394@henry.divmod.com>
References: <5eaa38050905191017v3bd0eb28jad1ef1b152b51c1c@mail.gmail.com>
	<20090519172608.21531.657862391.divmod.quotient.23394@henry.divmod.com>
Message-ID: <5eaa38050906011038v4ea7fb62l6cf5a9305babd9fe@mail.gmail.com>

On close inspection, the code that your command runs (from
twisted.words.service) happens to be the IRCD code that I thought was
missing from twisted, and is adequate for my purposes. Everything else
I need to write now is wildly divergent from the goal of "running an
irc server".

So, uh, my bad, I just didn't read the manual.


2009/5/19 Jean-Paul Calderone <exarkun at divmod.com>:
> On Tue, 19 May 2009 18:17:01 +0100, Patrick Thomson <patrick.thomson at gmail.com> wrote:
>>I'm currently about to embark on building something from twisted which
>>has an IRCD, and I have found the capacity to run IRC servers is
>>lacking, in contrast to the excellent client/bot backend code.
>>
>>I've found several other twisted projects already implement an IRCD,
>>and whilst I'm reinventing the wheel, I may as well go the extra mile
>>to get my code suitable for inclusion.
>
> Hi Patrick,
>
> Cool!
>
> I want to point you at what happens when you run this command:
>
>  twistd -n words --irc-port 6667 --group irctest --auth=memory:username:password
>
> Ideally, an IRCD in Twisted would be based on this (which certainly needs
> some work).
>
>>I wouldn't be asking for a lot, just some general guidelines (e.g. I
>>know my patch probably won't be accepted
>>without test code as well).
>
> Tests are probably the most important single thing.  We also ask for full
> docstring coverage (ie, docstrings for every class, method, function).  It
> would also be best if you could structure your contributions incrementally.
> Twenty patches of a couple hundred lines each is vastly preferable to one
> patch of several thousand lines.
>
> You can find much more detailed information on the wiki,
>
>  http://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
> If anything there needs clarification, please ask. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Patrick



From brandon.mcginty at gmail.com  Mon Jun  1 13:30:19 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Mon, 01 Jun 2009 15:30:19 -0400
Subject: [Twisted-Python] Twisted Question
In-Reply-To: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
References: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
Message-ID: <4A242C4B.5080905@gmail.com>

I know I'm missing something in that FAQ entry...I'm just not sure what.

Thanks,
Brandon McGinty



Jean-Paul Calderone wrote:
> On Sun, 31 May 2009 19:12:56 -0400, Brandon McGinty <brandon.mcginty at gmail.com> wrote:
>> I'll give that a shot...unfortunately, the data is only accessible via
>> an irc server and protocol.
>> Hopefully I can gleen some useful information about cross-protocol
>> communication by lokng at the source.
> 
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother answers a question very similar to yours.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
--
Brandon McGinty
Email:brandon.mcginty at gmail.com
Tel:(602)-904-6548
SMS:(602)-904-6548
Skype:brandon.mcginty
MSN:brandon_mcginty at hotmail.com



From brandon.mcginty at gmail.com  Mon Jun  1 13:56:57 2009
From: brandon.mcginty at gmail.com (Brandon McGinty)
Date: Mon, 01 Jun 2009 15:56:57 -0400
Subject: [Twisted-Python] Twisted Question
In-Reply-To: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
References: <20090601015027.22176.772177042.divmod.quotient.411@henry.divmod.com>
Message-ID: <4A243289.4030909@gmail.com>

Thanks to your post, something just clicked for me. I've got it working, 
and life is good.
I thank you all for your help.
Sincerely,
Brandon McGinty



Jean-Paul Calderone wrote:
> On Sun, 31 May 2009 19:12:56 -0400, Brandon McGinty <brandon.mcginty at gmail.com> wrote:
>> I'll give that a shot...unfortunately, the data is only accessible via
>> an irc server and protocol.
>> Hopefully I can gleen some useful information about cross-protocol
>> communication by lokng at the source.
> 
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother answers a question very similar to yours.
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-- 
--
Brandon McGinty
Email:brandon.mcginty at gmail.com
Tel:(602)-904-6548
SMS:(602)-904-6548
Skype:brandon.mcginty
MSN:brandon_mcginty at hotmail.com



From drew.smathers at gmail.com  Tue Jun  2 06:16:21 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 2 Jun 2009 08:16:21 -0400
Subject: [Twisted-Python] Reactor callback from the wrong thread
In-Reply-To: <24e981170905290002j6f5f483erd36e0b5b6257ac4d@mail.gmail.com>
References: <24e981170905270608p25f6057fl2ad2b7f71cc2fac6@mail.gmail.com>
	<20090527154322.21531.781574174.divmod.quotient.26327@henry.divmod.com>
	<24e981170905280504x7fa0dedexf91c45295dee706e@mail.gmail.com>
	<1243516911.20948.215.camel@pintsize>
	<24e981170905290002j6f5f483erd36e0b5b6257ac4d@mail.gmail.com>
Message-ID: <368574aa0906020516m6af9c806ta1990b37aa5d5603@mail.gmail.com>

On Fri, May 29, 2009 at 3:02 AM, Lars Ivar Igesund <larsivi at gmail.com> wrote:
> Thanks for the tip,
>
> however - in which version was blockingCallFromThread added? It did
> not wish to be imported from the version I installed via Ubuntu which
> appears to be 2.5.0. (Bit confused about the version numbering though
> since Twisted appears to be at something like 8.2)
>

Well, using Ubuntu, you should find the new versioning scheme somewhat
familiar ;)

http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#Whydidtheversionnumbergofrom2.5to8.x

-Drew



From michaelnt at gmail.com  Tue Jun  2 09:09:00 2009
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 2 Jun 2009 16:09:00 +0100
Subject: [Twisted-Python] Question about a custom byte oriented TCP protocol
Message-ID: <4d6ba3de0906020809g4a0a773bsdedaeb57273a627e@mail.gmail.com>

Hi,
   I'm trying to use twisted to talk to an existing system that uses a byte
oriented protocol stuffed inside a TCP packet. I have implemented this using
the IntNStringReceiver modified to look at some bytes to calculate the size
of the string to receive.

For simple test cases where I send a single packet this works but if I send
multiple requests they all end up in the same tcp packet which the existing
server doesn't like. How can I ensure that only a single command\string is
sent per tcp packet?

I tried TCP No Delay but that didn't seem to help

Regards, Michael
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090602/75644dec/attachment.html>

From tubaman at fattuba.com  Tue Jun  2 10:07:38 2009
From: tubaman at fattuba.com (Ryan Nowakowski)
Date: Tue, 2 Jun 2009 11:07:38 -0500
Subject: [Twisted-Python] wxreactor and win32eventreactor
Message-ID: <20090602160738.GC8298@fattuba.com>

I'm trying to use twisted's SerialPort stuff in my Win32 wxPython app.
I'm using the wxreactor, however I'm getting this error:

  AttributeError: 'WxReactor' object has no attribute 'addEvent'

When I switch to the win32eventreactor my serial port code works fine
but then of course, the GUI won't work.  Any idea how to get SerialPort
working with wxreactor on Windows?

- Ryan



From exarkun at divmod.com  Tue Jun  2 10:40:08 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jun 2009 12:40:08 -0400
Subject: [Twisted-Python] Question about a custom byte oriented TCP
 protocol
In-Reply-To: <4d6ba3de0906020809g4a0a773bsdedaeb57273a627e@mail.gmail.com>
Message-ID: <20090602164008.22176.1001892010.divmod.quotient.1094@henry.divmod.com>

On Tue, 2 Jun 2009 16:09:00 +0100, Michael Thompson <michaelnt at gmail.com> wrote:
>Hi,
>   I'm trying to use twisted to talk to an existing system that uses a byte
>oriented protocol stuffed inside a TCP packet. I have implemented this using
>the IntNStringReceiver modified to look at some bytes to calculate the size
>of the string to receive.
>
>For simple test cases where I send a single packet this works but if I send
>multiple requests they all end up in the same tcp packet which the existing
>server doesn't like. How can I ensure that only a single command\string is
>sent per tcp packet?

In general, this is impossible.  TCP does not work that way.

For a specific application, you may be able to achieve this by only sending
another message after you *know* the server has received an earlier message.
You can probably achieve this if the server sends you back an acknowledgment
of each message - then you wait to receive an acknowledgment before sending
another message.

However, the purpose of IntNStringReceiver - arguably the sole purpose - is
to provide a "framing" layer for the messages being exchanged with it.  This
framing layer exists so that if messages do get squished together (or broken
up, as may also happen) by TCP, they can still be properly interpreted.  If
the server breaks when multiple commands/strings are received by it at once,
then perhaps it is broken and needs to be fixed.

Jean-Paul



From exarkun at divmod.com  Tue Jun  2 10:44:15 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 2 Jun 2009 12:44:15 -0400
Subject: [Twisted-Python] wxreactor and win32eventreactor
In-Reply-To: <20090602160738.GC8298@fattuba.com>
Message-ID: <20090602164415.22176.71073856.divmod.quotient.1098@henry.divmod.com>

On Tue, 2 Jun 2009 11:07:38 -0500, Ryan Nowakowski <tubaman at fattuba.com> wrote:
>I'm trying to use twisted's SerialPort stuff in my Win32 wxPython app.
>I'm using the wxreactor, however I'm getting this error:
>
>  AttributeError: 'WxReactor' object has no attribute 'addEvent'
>

Indeed, as you've discovered, the serial support on Windows only works with
win32eventreactor.

>When I switch to the win32eventreactor my serial port code works fine
>but then of course, the GUI won't work.  Any idea how to get SerialPort
>working with wxreactor on Windows?

I think this would involve porting wxreactor to be based on win32eventreactor
instead of on selectreactor.  Ideally, this would be done generally so that
wxreactor could be used with /any/ other reactor, rather than being specific
to win32eventreactor, but it wouldn't necessarily have to be done that way.

Jean-Paul



From asb.bush at gmail.com  Tue Jun  2 13:20:22 2009
From: asb.bush at gmail.com (Aaron Bush)
Date: Tue, 2 Jun 2009 15:20:22 -0400
Subject: [Twisted-Python] Guidance on Proxy-type Application
In-Reply-To: <20090528225800.12555.827283410.divmod.xquotient.11675@weber.divmod.com>
References: <20090528225800.12555.827283410.divmod.xquotient.11675@weber.divmod.com>
Message-ID: <5a8f2d170906021220y11c7115fu2ee80569585b3fc8@mail.gmail.com>

glyph,

Sorry for the delayed response.  I wanted to thank you for providing such a
complete example.  This is excellent.  Now I just need to wrap by head
around how it all goes together and works.

The logic of the queue append and pop of a deferred in ProxyClient
forwardLine and lineRecieve are throwing me for a loop.  I'll keep tracing
it and get it down.

Thanks Again!
-ab

On Thu, May 28, 2009 at 6:58 PM, <glyph at divmod.com> wrote:

>
> On 01:23 am, asb.bush at gmail.com wrote:
>
>> I have just started to look at the Twisted framework and would like to put
>> it
>> to use for a new project I am working on.  Not being very familiar with
>> the
>> framework and fairly new to Python in general I would like to ask a
>> design/architecture question.  (I have written similar applications in C
>> but
>> would prefer to start this in the right direction and not write Python
>> like
>> C.)
>>
>
> Thanks for asking!
>
> I apologize for the delay in my answer.  I started writing up a simple
> example (attached) but was discouraged to find that it was 100 lines long
> and required too much explaining.
>
> Then I started documenting it and explaining every line but that was a very
> long, tedious message.  So, it doesn't have much in the way of explanation;
> I hope you will find it useful regardless.
>
>> The application has the following model:
>>
>
>  Many clients connect to the Application and prefer to leave the connection
>> open.  They will send messages across this connection.  They will expect
>> to
>> get a message back at some point later, they do not wait for a response
>> (async).  The clients are already coded (legacy) and just need to send
>> their
>> proprietary protocol to the new Application (written using Twisted).
>>
>
> This is *almost* a FAQ.  At least, you may find this to be a useful answer:
>
> <
> http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#HowdoImakeinputononeconnectionresultinoutputonanother
> >
>
>> The Twisted application will take the data from the clients and do some
>> transformation on it then send the message on to another server (3rd
>> party).
>> This connection to "another" server must be a single connection, not one
>> connection per client.  This connection should also be persistent and not
>> opened/closed for each client message sent.  Ideally if the 3rd party
>> server
>> is down then I would also not accept client connections as the messages
>> are
>> time sensitive and should not be stored and forwarded.  At some point the
>> 3rd
>> part will send a message back and the Application will route it back to
>> the
>> original source.  Basically request/reply pattern.
>>
>
> The example that I've attached does basically this.  Run it and then run
> 'telnet localhost 4322', and type some lines; you will see that they are
> transformed and echoed back to you, both by the proxy and by the protocol
> being proxied.
>
> At a high level, the answer to your question is so simple that it's hard to
> express.  Basically, you just need to have all the relevant objects having
> references to each other, and calling methods to achieve the desired effect.
>  The less magic, the better.
>
> More precisely, you need an object responsible for managing your outgoing
> connections to your legacy server, so that it can handle disconnection and
> reconnection, queueing messages and so on.  Then you need your proxy server
> factory to hold a reference to that object, so that it can create references
> from each proxy server protocol connection object to the connection manager.
>
> This is related to another recent thread - you can see my message in that
> thread here:
>
>   http://thread.gmane.org/gmane.comp.python.twisted/18377/focus=18385
>
>> I have been reading through the archives and the twisted docs and have
>> also
>> looked over the Hex-dump port-forwarding recipe but not found anything
>> that
>> explains how to use twisted for this model.  Hex-dump is close but
>> opens/closes the connection to the server on each client connection.
>>
>
> I'm not sure why hex-dump port-forwarding is particularly relevant to this
> example.  Is it just because this is an application that connects from one
> host to another?
>
>> I am thinking that there will be two Factories [and two protocols: 1) for
>> clients and 2) for 3rd party].  I am not sure how to best establish both
>> the
>> listening factory and the client to 3rd party factory.  Once they are
>> established what is the preferred way in Twisted to pass a message from
>> one
>> protocol to another?
>>
>
> This part of your question is almost exactly the FAQ I mentioned above :).
>  To reiterate that answer, you just need to have references between objects,
> and call methods on the objects you want to do stuff.
>
> If you have a client connection object, just get a reference to that from
> the relevant server connection object and call methods on the client object
> to emit messages on the client protocol, handling any responses
> appropriately.  Deferreds can help with that latter part.
>
> It is always better if you can establish that reference as simply as
> possible; for example, by passing parameters to the __init__ of various
> classes.  Again, for reasons that have nothing to do with Twisted
> specifically, it's a bad idea to try to establish these references by having
> global variables floating around.
>
> Here's a very very simple example of the "good way" to propagate some data
> to protocol instances that need it:
>
>   class MyProtocol(Protocol):
>       def __init__(self, data):
>           self.data = data
>
>   class MyFactory(Factory):
>       def __init__(self, data):
>           self.data = data
>
>       def buildProtocol(self, addr):
>           return MyProtocol(self.data)
>
>   reactor.listenTCP(8765, MyFactory("some data"))
>
> and here's a simple example of a really bad way (don't do this!):
>
>   class MyProtocol(Protocol):
>       def connectionMade(self):
>           self.bleh = bleh
>
>   bleh = "some data"
>   f = Factory()
>   f.protocol = MyProtocol
>   reactor.listenTCP(9876, f)
>
> Even in C, I'm pretty sure it's better style to pass structures to
> functions than to abuse piles of local variables :).  I only illustrate this
> bad style here because it seems to be a common antipattern.  The Protocol
> class itself doesn't take any parameters to __init__, and Twisted's users
> don't always realize that protocols and factories and so on are just regular
> objects, with no special rules; they just get methods called on them by the
> reactor.
>
>> Any pointers or sample code that you can offer is greatly appreciated. I
>> would really like to cook this in Twisted and not go back to the C way.
>>
>
> Based on what you've said so far, I think you're basically on the right
> track.  Good luck!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090602/ef3801aa/attachment.html>

From dave.conradie at googlemail.com  Tue Jun  2 20:55:23 2009
From: dave.conradie at googlemail.com (David Conradie)
Date: Wed, 03 Jun 2009 14:55:23 +1200
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <4A25E61B.5050900@googlemail.com>

I'm fairly new to Python and very new to Twisted.   I find I learn new 
material best from a book, so although I know there's lots of great 
documentation and examples on twistedmatrix.com, I was considering 
getting O'Reilly's Twisted book ('Twisted Network Programming 
Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I 
was wondering if it's still a worthwhile purchase - I'd guess Twisted 
has moved a good bit since the book was written.  Any opinions? 

Thanks

/David Conradie/
<gtalk:dave.conradie at googlemail.com?message>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090603/2e1e30b7/attachment.html>

From ssoni at nextdigital.com  Tue Jun  2 20:57:55 2009
From: ssoni at nextdigital.com (Sury Soni)
Date: Wed, 3 Jun 2009 12:57:55 +1000
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <4A25E61B.5050900@googlemail.com>
References: <4A25E61B.5050900@googlemail.com>
Message-ID: <1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>

You are right David.

 

I read that book and that book is definitely not for the beginner python
programmers.

 

And, yes, that book is not up to date as well.

 

Cheers.

 

Surya

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of David
Conradie
Sent: Wednesday, 3 June 2009 12:55 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Twisted book(s)?

 

I'm fairly new to Python and very new to Twisted.   I find I learn new
material best from a book, so although I know there's lots of great
documentation and examples on twistedmatrix.com, I was considering
getting O'Reilly's Twisted book ('Twisted Network Programming
Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
was wondering if it's still a worthwhile purchase - I'd guess Twisted
has moved a good bit since the book was written.  Any opinions?  

Thanks

David Conradie
<gtalk:dave.conradie at googlemail.com?message> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090603/f041d02f/attachment.html>

From kevin.horn at gmail.com  Tue Jun  2 22:15:59 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 2 Jun 2009 23:15:59 -0500
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>
References: <4A25E61B.5050900@googlemail.com>
	<1BE49492956ECA42BEB0D78F67665E1FC77126@exchange.wdg>
Message-ID: <562bcc10906022115h1b353cfah9bc1db1ec7500fc8@mail.gmail.com>

While its a bit out of date now, and it certainly could have been better, I
found the book useful to get me over the initial learning curve hump that
twisted is famous for.

And it IS the only Twisted book out there (afaik).

Kevin Horn

On Tue, Jun 2, 2009 at 9:57 PM, Sury Soni <ssoni at nextdigital.com> wrote:

>  You are right David.
>
>
>
> I read that book and that book is definitely not for the beginner python
> programmers.
>
>
>
> And, yes, that book is not up to date as well.
>
>
>
> Cheers.
>
>
>
> Surya
>
>
>
> *From:* twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] *On Behalf Of *David Conradie
> *Sent:* Wednesday, 3 June 2009 12:55 PM
> *To:* twisted-python at twistedmatrix.com
> *Subject:* [Twisted-Python] Twisted book(s)?
>
>
>
> I'm fairly new to Python and very new to Twisted.   I find I learn new
> material best from a book, so although I know there's lots of great
> documentation and examples on twistedmatrix.com, I was considering getting
> O'Reilly's Twisted book ('Twisted Network Programming Essentials' by Abe
> Fettig).  But that book dates back to Oct 2005 so I was wondering if it's
> still a worthwhile purchase - I'd guess Twisted has moved a good bit since
> the book was written.  Any opinions?
>
> Thanks
>
> *David Conradie*
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090602/277232be/attachment.html>

From robert at gravina.com  Tue Jun  2 23:12:31 2009
From: robert at gravina.com (Robert Gravina)
Date: Wed, 3 Jun 2009 14:12:31 +0900
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>

> I'm fairly new to Python and very new to Twisted.   I find I learn new
> material best from a book, so although I know there's lots of great
> documentation and examples on twistedmatrix.com, I was considering
> getting O'Reilly's Twisted book ('Twisted Network Programming
> Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
> was wondering if it's still a worthwhile purchase - I'd guess Twisted
> has moved a good bit since the book was written.  Any opinions?

I got that book and to be honest, didn't find it very useful due to it
being a nutshell book - it can't (due to size) go into much detail in
each section and so I found the online documentation/tutorials were a
better resource.

A more detailed Twisted book would be awesome though! I think
pragprog.com share 50% of the profits with authors (and do ebooks and
betas too), so maybe someone might be interested in writing it :)

Of course noone would complain about a community edited book like what
the Django project has, either. :)

Robert



From rlotun at gmail.com  Wed Jun  3 01:26:53 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Wed, 3 Jun 2009 08:26:53 +0100
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
References: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
Message-ID: <95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>

You may also find Foundations of Python Network Programming useful -
it has large sections on twisted, particularly IMAP
(http://www.complete.org/publications/pynet/)

You can also read these useful reviews of the above as well as the
O'Reilly book, written by a Twisted dev:
http://eagain.net/articles/review-pynet/
http://eagain.net/articles/review-snakeball/

Cheers,
Reza

On Wed, Jun 3, 2009 at 6:12 AM, Robert Gravina <robert at gravina.com> wrote:
>> I'm fairly new to Python and very new to Twisted.   I find I learn new
>> material best from a book, so although I know there's lots of great
>> documentation and examples on twistedmatrix.com, I was considering
>> getting O'Reilly's Twisted book ('Twisted Network Programming
>> Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
>> was wondering if it's still a worthwhile purchase - I'd guess Twisted
>> has moved a good bit since the book was written.  Any opinions?
>
> I got that book and to be honest, didn't find it very useful due to it
> being a nutshell book - it can't (due to size) go into much detail in
> each section and so I found the online documentation/tutorials were a
> better resource.
>
> A more detailed Twisted book would be awesome though! I think
> pragprog.com share 50% of the profits with authors (and do ebooks and
> betas too), so maybe someone might be interested in writing it :)
>
> Of course noone would complain about a community edited book like what
> the Django project has, either. :)
>
> Robert
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From kevin.horn at gmail.com  Wed Jun  3 01:48:33 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 3 Jun 2009 02:48:33 -0500
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>
References: <dad637010906022212o26465f0avef236852aca9c611@mail.gmail.com>
	<95bb10690906030026w21f65830v2a24c7bd000d4b2a@mail.gmail.com>
Message-ID: <562bcc10906030048i385bf83ds7fe63e8e348eb38d@mail.gmail.com>

Yeah, those reviews are excellent, but I couldn't remember where I'd read
them.

The O'Reilly book is ok if you want a lot of VERY basic examples of how to
do stuff in Twisted.  I also found the introduction somewhat useful, even
though I knew most of it.

I haven't read the Foundations of Python Network Programming book, but I've
flipped through it a couple of ties at the bookstore.
I decided against it, because I basically knew all the stuff in the
non-twisted chapters, and I didn't want to buy the whole book for just the
Twisted stuff.  Since you're new to Python as well as Twisted it would
probably be much more useful to you.  I've heard lots of good things about
it.

Either way, though, you aren't going to get a whole lot more than an intro
to Twisted in either one, mostly because, well, Twisted is HUGE.  It does a
vast number of things, lots of it you'll probably never have to deal
with...except when you do.

The online docs are pretty good as far as accuracy...most of it is pretty up
to date (or at least up to date ENOUGH), but it's organization is kind of
wacky.  At least is doesn't fit my brain very well...I have trouble finding
things.

I would love to see another Twisted book, but it's kind of a small niche to
get publishers to go for.  Maybe an online book, or something published
on-demand could work, though.

Kevin

On Wed, Jun 3, 2009 at 2:26 AM, Reza Lotun <rlotun at gmail.com> wrote:

> You may also find Foundations of Python Network Programming useful -
> it has large sections on twisted, particularly IMAP
> (http://www.complete.org/publications/pynet/)
>
> You can also read these useful reviews of the above as well as the
> O'Reilly book, written by a Twisted dev:
> http://eagain.net/articles/review-pynet/
> http://eagain.net/articles/review-snakeball/
>
> Cheers,
> Reza
>
> On Wed, Jun 3, 2009 at 6:12 AM, Robert Gravina <robert at gravina.com> wrote:
> >> I'm fairly new to Python and very new to Twisted.   I find I learn new
> >> material best from a book, so although I know there's lots of great
> >> documentation and examples on twistedmatrix.com, I was considering
> >> getting O'Reilly's Twisted book ('Twisted Network Programming
> >> Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
> >> was wondering if it's still a worthwhile purchase - I'd guess Twisted
> >> has moved a good bit since the book was written.  Any opinions?
> >
> > I got that book and to be honest, didn't find it very useful due to it
> > being a nutshell book - it can't (due to size) go into much detail in
> > each section and so I found the online documentation/tutorials were a
> > better resource.
> >
> > A more detailed Twisted book would be awesome though! I think
> > pragprog.com share 50% of the profits with authors (and do ebooks and
> > betas too), so maybe someone might be interested in writing it :)
> >
> > Of course noone would complain about a community edited book like what
> > the Django project has, either. :)
> >
> > Robert
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Reza Lotun
> +44 (0)7521 310 763
> rlotun at gmail.com
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090603/7f289a5b/attachment.html>

From orsenthil at gmail.com  Wed Jun  3 10:25:27 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 3 Jun 2009 21:55:27 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
Message-ID: <20090603162527.GA15317@ubuntu.ubuntu-domain>

Hello Twisted Developers/Users,

This is my first concurrent application design and my first trial with
twisted. I have read the documentation and understand where twisted
plays its part. Unfortunately, I could not directly relate it to my
requirements and hence, could not go forward with designing and
building on top using the examples as a reference.

I need your guidance in helping me design an application.

My Application Details:

1) I need to constantly monitor a particular directory for new files.
2) Whenever a new file is dropped; I read that file and get
information on where to collect data from that is a) another machine b)
machine2-different method c) database.
3) I collect data from those machines and store it.

The data is huge and I need the three processes a, b, c to be
non-blocking, and I can just do a function call like do_a(), do_b(),
do_c() to perform them.

For 1) to constantly monitor a particular directory for new files, I
am doing something like this:

while True:
        check_for_new_files()

http://paste.pocoo.org/show/120824/

My Question: Can this be designed in way that looking for new files is
also asynchronous activity? 

What will be the deferred in this case?

# my ideas:

- I might define a deferred as, whenever the contents of the directory
  is not matching the previous contents, return the new file which was
  added.
- I can then add a callback to read the newfile.


Now, after reading the contents, I will have to do a non-blocking call
to fetch data, either using fun_a, fun_b or fun_b. How should I
associate this requirement to deferred/callback pattern?

Any guidance would be helpful.

Thanks,
Senthil




From glyph at divmod.com  Wed Jun  3 11:46:55 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 03 Jun 2009 17:46:55 -0000
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <4A25E61B.5050900@googlemail.com>
References: <4A25E61B.5050900@googlemail.com>
Message-ID: <20090603174655.12555.1028258462.divmod.xquotient.12298@weber.divmod.com>




On 02:55 am, dave.conradie at googlemail.com wrote:
>I'm fairly new to Python and very new to Twisted.   I find I learn new 
>material best from a book, so although I know there's lots of great 
>documentation and examples on twistedmatrix.com, I was considering 
>getting O'Reilly's Twisted book ('Twisted Network Programming 
>Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I 
>was wondering if it's still a worthwhile purchase - I'd guess Twisted 
>has moved a good bit since the book was written.  Any opinions?

There are a few core concepts which you need to understand to use 
Twisted which the book still covers fairly well.  I would still 
recommend getting it.  However, there are tons of features in Twisted 
not covered by the book, some new, some old.  You will still need to 
supplement the book's introduction to Twisted with online API 
documentation.



From andrewfr_ice at yahoo.com  Wed Jun  3 11:36:20 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 3 Jun 2009 10:36:20 -0700 (PDT)
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <921406.38429.qm@web34206.mail.mud.yahoo.com>


Hi David:

Message: 5
Date: Wed, 03 Jun 2009 14:55:23 +1200
From: David Conradie <dave.conradie at googlemail.com>
Subject: [Twisted-Python] Twisted book(s)?
To: twisted-python at twistedmatrix.com
Message-ID: <4A25E61B.5050900 at googlemail.com>
Content-Type: text/plain; charset="iso-8859-1"

>I'm fairly new to Python and very new to Twisted.   I find I learn new
>material best from a book, so although I know there's lots of great
>documentation and examples on twistedmatrix.com, I was considering
>getting O'Reilly's Twisted book ('Twisted Network Programming
>Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
>was wondering if it's still a worthwhile purchase - I'd guess Twisted
>has moved a good bit since the book was written.  Any opinions?

Well the Abe Fettig book got me over the initial hump at a critical time, so I am grateful the book was out there. Also I really enjoyed the introduction by Glyph. 

>From what I recall, the Python involved in the examples isn't 
complex(it is 2005 so I don't believe you are going to be 
seeing more exotic Python language constructs: i.e., generators, 
comprehensions, decorators). I found Fettig's explanations of HTTP 
client, server, resources, and the other protocols adequate. It is 
really important to run and modify the examples to get a feel for what 
is happening. Again, from what I recall, the main place I think 
Fettig's book falls flat is its explanation of creating a new protocol. Attending Steve Holden's legendary "Teach Me Twisted" pycon 2008 talk gave me a better clue (one of these days I should write a protocol).


If I had to provide Fettig with advice on a second edition, my recommendations:

1) Show an example with a nested call, for example a HTTP Request Handler making a client.getPage() call, processing it, and returning the result. This is a common idiom and it would get more into depth about how deferreds work.

1B) Get more into the relationship between protocols and the reactor: I was really confused over why some protocols used a return, others returned a deferred, and some returned None. 

1C) Use more Twisted idioms, i.e., using inner functions for defining callbacks.

2) Use class relationship diagrammes to show the relationship between various Twisted objects.

3) Show Twisted control flow. I tried to do this in my Pycon 2008 talk (which I need to rewrite one of these days).

4) Use WAY MORE DIAGRAMMES!!!!

Cheers,
Andrew












      



From bogus@does.not.exist.com  Wed Jun  3 13:43:36 2009
From: bogus@does.not.exist.com ()
Date: Wed, 03 Jun 2009 19:43:36 -0000
Subject: No subject
Message-ID: <mailman.5.1574573429.12674.twisted-python@twistedmatrix.com>



From minesh at gmail.com  Wed Jun  3 11:43:34 2009
From: minesh at gmail.com (Minesh Patel)
Date: Wed, 3 Jun 2009 10:43:34 -0700
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <b804d5d90906031043q45d7f049i5a088b7776a42996@mail.gmail.com>

> My Application Details:
>
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
>
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.

For this, since your data is huge and seems like it will need a lot of
CPU utilization, you might have to deferToThread, since Twisted runs
in a single thread and will block AFAIK.

d = threads.deferToThread(do_a, arg1_to_do_a, arg2...)
d.addCallback(do_a2, ...)

> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
>
> while True:
>        check_for_new_files()
>
> http://paste.pocoo.org/show/120824/
>
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity?

This is how I am checking for new files via Twisted:

from twisted.internet import task
loopingFrequency = 10    # seconds between looping
task.LoopingCall(fun_a,  arg1_to_fun_a, arg2_to_fun_a).start(loopFrequency)

In fun_a I do the checking of new files


-- 
Thanks,
--Minesh



From JOHN at egh.com  Wed Jun  3 12:55:47 2009
From: JOHN at egh.com (John Santos)
Date: Wed, 3 Jun 2009 14:55:47 -0400
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <1090603141629.39100B-100000@Ives.egh.com>

On Wed, 3 Jun 2009, Senthil Kumaran wrote:

> Hello Twisted Developers/Users,
> 
> This is my first concurrent application design and my first trial with
> twisted. I have read the documentation and understand where twisted
> plays its part. Unfortunately, I could not directly relate it to my
> requirements and hence, could not go forward with designing and
> building on top using the examples as a reference.
> 
> I need your guidance in helping me design an application.
> 
> My Application Details:
> 
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
> 
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.
> 
> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
> 
> while True:
>         check_for_new_files()
> 

This is not an issue specifically related to Python or Twisted, but
there is a very serious synchronization issue that needs to be
addressed with this application design.  (Trust me, I've seen this
issue come up dozens of times in over 30 years of experience...)

Creating a file and loading it with data is not an atomic operation.
It takes a significant amount of time, and if the process attempting
to read the file is faster than the process writing it, it won't see
all (or any of) the data.

It can work great while testing and then fall over the first time it
is used in production, or it can work fine for years before mysteriously
breaking.

There are several ways to cope with this situation:

1) If the system allows you to create temporary invisible files and
then only makes the file visible when it is cleanly closed, you can
use this method.  However, this is often not portable.  Not all operating
systems, languages, FTP or SFTP servers, etc. support such a facility.

2) Create the file using a method that disallows reading of the file
while it is still open by the creator.  Make the reader process wait
until it can get read access to the file before processing it.  (Sometimes
this can be done by making the reader process request exclusive write
access to the file, even though it doesn't intend to write to it.)
This is also not particularly portable, and may require the reading
process to spin or wait-loop, either wasting resources or delaying
processing by half the wait time on average.

3) Create the file in another directory and then move it to the target
directory when it is complete.  The reading process will only see it
after the move is complete.  However, such an operation isn't always
atomic, or even possible.  I think "mv" on most Unix systems is atomic
if both directories are on the same physical disk, but if the directories
are on different disks, it copies the file and then deletes the
original file.  This could work fine for years and then break when
someone decides to move directories around for some reason.

4) Create the file with a temporary file name, for example
"foo-YYYYMMDD-SEQ.tmp" and then after it is created and fully
populated, rename it to "foo-YYYYMMDD-SEQ.dat".  Make the reading
process only look for files named "*.dat", ignoring the "*.tmp"
files.  I don't know of any operating system where renaming a
file is not an atomic operation, but I suppose such might exist.
There could concievably be a small window when the file system
could have created a directory entry for the .dat filename, but
hasn't yet linked the filename to the file.  Though if this is
possible, one could argue that this is an O/S bug and demand the
O/S vendor fix it.  (Or fix it yourself if it's a self-maintained
O/S or file system...)

5) After creating the file, create a flag file (empty or with
minimal, unimportant contents.)  For example, if the data file is
named "foo-YYYYMMDD-SEQ#.dat", after creating it, create a flag
file name "foo-YYYYMMDD-SEQ#.flag".  Have the reading process
look only for flag files (they could even be in a separate directory
to avoid clutter.)  When a flag file appears, process the
corresponding data file.  This method is very portable and is
*almost* bullet proof.  The exceptions I have seen have almost
all been when someone didn't understand the importance of the
flag file and created it first.  Aside from just doing it in the
wrong order, I've seen cases where they triggered two parallel
processes to create the files, and the flag file being much
smaller, got created first, and where they created all the
files in a local directory (on another system), and then FTP'ed
them to the target system/directory, using a wild-card file name,
which unfortunately caused the flag file to get sent first.
(It may have had an alphabetically earlier name than the data
file, or the FTP client may have transfered files in a random
order or one based on the inode or file ID or other non-obvious
file attribute.)  In these cases, the cure was to explicitly
transfer the data file and then the flag file in the correct
order.

(We once encountered an issue where an FTP client may have been
"optimizing" transfers either by doing them in parallel, or by
sending small files first, and broke this scheme, but that was
only a theory we had while trying to diagnose the problem, and
may not have been what was actually happening.)


I don't know of any scheme that is absolutely foolproof unless
you control both the file creation and file reading sides of
things, but scheme 5 (flag files) seems to work best in practice.

Sorry I can't help with the Python/Twisted specifics, but I'm
too much of a newbie to be very useful with that.

> http://paste.pocoo.org/show/120824/
> 
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity? 
> 
> What will be the deferred in this case?
> 
> # my ideas:
> 
> - I might define a deferred as, whenever the contents of the directory
>   is not matching the previous contents, return the new file which was
>   added.
> - I can then add a callback to read the newfile.
> 
> 
> Now, after reading the contents, I will have to do a non-blocking call
> to fetch data, either using fun_a, fun_b or fun_b. How should I
> associate this requirement to deferred/callback pattern?
> 
> Any guidance would be helpful.
> 
> Thanks,
> Senthil
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From JOHN at egh.com  Wed Jun  3 13:05:43 2009
From: JOHN at egh.com (John Santos)
Date: Wed, 3 Jun 2009 15:05:43 -0400
Subject: [Twisted-Python] Twisted book(s)?
Message-ID: <1090603145819.39100C-100000@Ives.egh.com>

On 3 Jun 2009 twisted-python at twistedmatrix.com wrote:

> Return-Path: <twisted-python-bounces at twistedmatrix.com>
> Received: from mia.egh.com ([198.179.132.105]) by egh.com with ESMTP
>           for john at ives.egh.com; Wed, 3 Jun 2009 13:38:38 -0400
> Received: from del02.madmax.securepipe.com (IDENT:AUser at del02.madmax.securepipe.com [64.194.204.171])
> 	by mia.egh.com (8.13.6+Sun/8.13.6) with ESMTP id n53HcaWC001609
> 	for <john at egh.com>; Wed, 3 Jun 2009 13:38:38 -0400 (EDT)
> Received: (qmail 11993 invoked from network); 3 Jun 2009 13:38:35 -0400
> Received: from unknown (HELO scan08.madmax.securepipe.com) (10.10.33.158)
>   by del02.madmax.securepipe.com with (DHE-RSA-AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:35 -0400
> Received: (qmail 24989 invoked from network); 3 Jun 2009 13:38:35 -0400
> Received: from unknown (HELO rec09.madmax.securepipe.com) (10.10.35.108)
>   by scan08.madmax.securepipe.com with (DHE-RSA-AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:32 -0400
> Received: (qmail 31889 invoked from network); 3 Jun 2009 13:38:32 -0400
> Received: from unknown (HELO cube.twistedmatrix.com) (66.35.39.65)
>   by rec09.madmax.securepipe.com with (AES256-SHA encrypted) SMTP; 3 Jun 2009 13:38:32 -0400
> Received: from localhost ([127.0.0.1] helo=cube.twistedmatrix.com)
> 	by cube.twistedmatrix.com with esmtp (Exim 4.69)
> 	(envelope-from <twisted-python-bounces at twistedmatrix.com>)
> 	id 1MBuO8-0004KZ-Mh; Wed, 03 Jun 2009 13:36:32 -0400
> Received: from web34206.mail.mud.yahoo.com ([66.163.178.121])
> 	by cube.twistedmatrix.com with smtp (Exim 4.69)
> 	(envelope-from <andrewfr_ice at yahoo.com>) id 1MBuO6-0004KR-88
> 	for twisted-python at twistedmatrix.com; Wed, 03 Jun 2009 13:36:30 -0400
> Received: (qmail 39125 invoked by uid 60001); 3 Jun 2009 17:36:21 -0000
> Message-ID: <921406.38429.qm at web34206.mail.mud.yahoo.com>
> X-YMail-OSG: 73h2Cn8VM1lmMGFusyxf6h98zHdF3HQfAwnB4cuREAqquEoiATofvuhS6ER696QlSssO6A_9SwkZmXd9o_psu2YRlt2.KVKdCLfd5umTY1Vrde2la87LgM4dpGfcmpAE9OSqLaqHQqlRK0CGokPbSU5RoTQlIur41w1czT4PohrDdPVBn3eDVdWALxE1M5r4B1CJ0oVVrjlPBHNChVuKXvHwAqQwA9lHAjZiaHDfDxPQHuBDAW
> K3vOycgXitYFHtsvQ0Y62F2po2R0XtcloVdZnFzPacwxyEdjEg6A_FBilrwUlFKeblAgDubuhK5RxRTXikB2nxt38-
> Received: from [132.216.45.109] by web34206.mail.mud.yahoo.com via HTTP;
> 	Wed, 03 Jun 2009 10:36:20 PDT
> X-Mailer: YahooMailClassic/5.3.9 YahooMailWebService/0.7.289.10
> Date: Wed, 3 Jun 2009 10:36:20 -0700 (PDT)
> From: Andrew Francis <andrewfr_ice at yahoo.com>
> To: twisted-python at twistedmatrix.com
> MIME-Version: 1.0
> Cc: dave.conradie at googlemail.com
> Subject: Re: [Twisted-Python] Twisted book(s)?
> X-BeenThere: twisted-python at twistedmatrix.com
> X-Mailman-Version: 2.1.9
> Precedence: list
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> List-Id: Twisted general discussion <twisted-python.twistedmatrix.com>
> List-Unsubscribe: <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>,
> 	<mailto:twisted-python-request at twistedmatrix.com?subject=unsubscribe>
> List-Archive: <http://twistedmatrix.com/pipermail/twisted-python>
> List-Post: <mailto:twisted-python at twistedmatrix.com>
> List-Help: <mailto:twisted-python-request at twistedmatrix.com?subject=help>
> List-Subscribe: <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>,
> 	<mailto:twisted-python-request at twistedmatrix.com?subject=subscribe>
> Content-Type: text/plain; charset="us-ascii"
> Content-Transfer-Encoding: 7bit
> Sender: twisted-python-bounces at twistedmatrix.com
> Errors-To: twisted-python-bounces at twistedmatrix.com
> 
> 
> Hi David:
> 
> Message: 5
> Date: Wed, 03 Jun 2009 14:55:23 +1200
> From: David Conradie <dave.conradie at googlemail.com>
> Subject: [Twisted-Python] Twisted book(s)?
> To: twisted-python at twistedmatrix.com
> Message-ID: <4A25E61B.5050900 at googlemail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> >I'm fairly new to Python and very new to Twisted.   I find I learn new
> >material best from a book, so although I know there's lots of great
> >documentation and examples on twistedmatrix.com, I was considering
> >getting O'Reilly's Twisted book ('Twisted Network Programming
> >Essentials' by Abe Fettig).  But that book dates back to Oct 2005 so I
> >was wondering if it's still a worthwhile purchase - I'd guess Twisted
> >has moved a good bit since the book was written.  Any opinions?
> 
> Well the Abe Fettig book got me over the initial hump at a critical time, so I am grateful the book was out there. Also I really enjoyed the introduction by Glyph. 
> 
> From what I recall, the Python involved in the examples isn't 
> complex(it is 2005 so I don't believe you are going to be 
> seeing more exotic Python language constructs: i.e., generators, 
> comprehensions, decorators). I found Fettig's explanations of HTTP 
> client, server, resources, and the other protocols adequate. It is 
> really important to run and modify the examples to get a feel for what 
> is happening. Again, from what I recall, the main place I think 
> Fettig's book falls flat is its explanation of creating a new protocol. Attending Steve Holden's legendary "Teach Me Twisted" pycon 2008 talk gave me a better clue (one of these days I should write a protocol).
> 
> 
> If I had to provide Fettig with advice on a second edition, my recommendations:
> 
> 1) Show an example with a nested call, for example a HTTP Request Handler making a client.getPage() call, processing it, and returning the result. This is a common idiom and it would get more into depth about how deferreds work.
> 
> 1B) Get more into the relationship between protocols and the reactor: I was really confused over why some protocols used a return, others returned a deferred, and some returned None. 
> 
> 1C) Use more Twisted idioms, i.e., using inner functions for defining callbacks.
> 
> 2) Use class relationship diagrammes to show the relationship between various Twisted objects.
> 
> 3) Show Twisted control flow. I tried to do this in my Pycon 2008 talk (which I need to rewrite one of these days).
> 
> 4) Use WAY MORE DIAGRAMMES!!!!
> 
> Cheers,
> Andrew

Lots of the replies have echoed my experience, that the book was very 
helpful getting over the initial hump, but insufficient on its own.

I'm both a Python and Twisted newbie, but have been writing event-driven
programs for decades, so my situation is obviously different from
someone experienced in Python but a newbie to Twisted and/or event-
driven programming, or from a student totally new to programming.  My
biggest obstacle is the OOPS mindset; I've done a little Java but am
not really comfortable yet.  On the plus side, I seem to be adapting
to Pythom much more easily.

Anyway, Andrew's list is really to the point.  Especially diagramming
the relationships (items 1B and 2) would be really useful to me.

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539




From dripton at ripton.net  Wed Jun  3 14:13:04 2009
From: dripton at ripton.net (David Ripton)
Date: Wed, 3 Jun 2009 13:13:04 -0700
Subject: [Twisted-Python] Application Design help - Concurrent but not
	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <20090603201304.GA27318@vidar.dreamhost.com>

On 2009.06.03 21:55:27 +0530, Senthil Kumaran wrote:
> 1) I need to constantly monitor a particular directory for new files.
> 2) Whenever a new file is dropped; I read that file and get
> information on where to collect data from that is a) another machine b)
> machine2-different method c) database.
> 3) I collect data from those machines and store it.
> 
> The data is huge and I need the three processes a, b, c to be
> non-blocking, and I can just do a function call like do_a(), do_b(),
> do_c() to perform them.
> 
> For 1) to constantly monitor a particular directory for new files, I
> am doing something like this:
> My Question: Can this be designed in way that looking for new files is
> also asynchronous activity? 

If your OS has a way to let you register your interest in particular
directories and then notify you when new files appear there, then yes.

If you're using Linux then check out the Twisted inotify wrapper that's
in dialtone's sandbox.  http://twistedmatrix.com/trac/changeset/25717

If you're using something else then it probably has a similar API but
it'll be more work because AFAIK nobody's already written the Twisted
wrapper for you.

Or maybe you can get away with just periodically calling os.listdir from
a subthread, using deferToThread.  Not technically asynchronous but
probably good enough.

> Now, after reading the contents, I will have to do a non-blocking call
> to fetch data, either using fun_a, fun_b or fun_b. How should I
> associate this requirement to deferred/callback pattern?

Depends.

If it's just a simple cheap Python function that doesn't block then you
can just do:

deferred1 = reactor.callLater(0, fun_a)
deferred1.addCallback(fun_a_callback)
deferred1.addErrback(fun_a_errback)

If it's a simple function that blocks and can't be changed to not block
but doesn't use too much CPU then you can use deferToThread.

If it's a piggy enough function that you really want it in a separate
process so it can use another CPU core, then write a little Python
script that wraps it, and call it using the Twisted process APIs:
http://twistedmatrix.com/projects/core/documentation/howto/process.html

But just because you can do this in Twisted doesn't mean you necessarily
should.  If you need an asynchronous main loop then Twisted has really
good APIs for dealing with asynchronous main loops.  (If you're on Linux
and can use inotify then it qualifies.)  But if you end up polling the
filesystem with os.listdir in one thread, and running your fun_x in
other threads, and you're not really doing anything asynchronous, then
IMO Twisted won't really add any value.  In that case I'd just use
Python's threading and Queue modules.

-- 
David Ripton    dripton at ripton.net



From dave.conradie at googlemail.com  Wed Jun  3 14:14:54 2009
From: dave.conradie at googlemail.com (David Conradie)
Date: Thu, 04 Jun 2009 08:14:54 +1200
Subject: [Twisted-Python] Twisted book(s)?
In-Reply-To: <921406.38429.qm@web34206.mail.mud.yahoo.com>
References: <921406.38429.qm@web34206.mail.mud.yahoo.com>
Message-ID: <4A26D9BE.6000108@googlemail.com>

Many thanks to everyone for your responses.   Sounds to me like there's 
a market for another book, or a second edition of Abe Fettig's, but I 
think I'll crack on now with what we've already got - let's see how much 
of a mess I can get myself into :)

David
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 5623 bytes
Desc: S/MIME Cryptographic Signature
URL: </pipermail/twisted-python/attachments/20090604/28d9d2c2/attachment-0002.bin>

From glyph at divmod.com  Wed Jun  3 20:27:47 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 04 Jun 2009 02:27:47 -0000
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
In-Reply-To: <20090603162527.GA15317@ubuntu.ubuntu-domain>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
Message-ID: <20090604022747.12555.1357422748.divmod.xquotient.12337@weber.divmod.com>


On 3 Jun, 04:25 pm, orsenthil at gmail.com wrote:
>My Question: Can this be designed in way that looking for new files is
>also asynchronous activity?

Sure.
>What will be the deferred in this case?

>Now, after reading the contents, I will have to do a non-blocking call
>to fetch data, either using fun_a, fun_b or fun_b. How should I
>associate this requirement to deferred/callback pattern?

I don't think that you want to have a Deferred here.  I think you just 
want a callback for when files change, similar to the way IProtocol 
simply gets a callback when data arrives.
>Any guidance would be helpful.

Have you looked at any of the various attempts to add asynchronous file 
notification support to Twisted?  To get truly asynchronous notification 
(not timed polling) you will need something like this:

    http://twistedmatrix.com/trac/ticket/972



From glyph at divmod.com  Wed Jun  3 22:51:10 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 04 Jun 2009 04:51:10 -0000
Subject: [Twisted-Python] [Twisted-web] Telnet chat server
In-Reply-To: <406799.68971.qm@web51801.mail.re2.yahoo.com>
References: <406799.68971.qm@web51801.mail.re2.yahoo.com>
Message-ID: <20090604045110.12555.131317974.divmod.xquotient.12417@weber.divmod.com>


This message is more appropriate for the twisted-python list, as it has 
nothing to do with "web", so I've cross-posted it there.

On 3 Jun, 10:57 pm, woahyeahyeah at yahoo.com wrote:
>I've got a simple little chat server set up that people can telnet 
>into.� The code is as follows:

>from twisted.internet import reactor
>from twisted.internet.protocol import ServerFactory
>from twisted.protocols.basic import LineOnlyReceiver
>import threading

^ This is where things start to go (horribly) wrong.

The protocol looks basically correct, but this part:
>def Test():
>��� global test
>��� factory.sendMessageToAllClients('Hey.')
>��� test = threading.Timer(1.0,
>Test)
>��� test.start()
>test = threading.Timer(1.0, Test)
>test.start()

is very, very wrong.  You cannot call Twisted APIs from a thread.  Ever. 
This is very important :).  The behavior to you appeared to be some 
strange timing issues, but you can get anything from corrupted data to 
crashing the entire program.
>Is there any way to get this to send the message and have it show up 
>for a client even when they're idle?

Yes.  Use the reactor's timed-event APIs rather than threads.  In other 
words, do this, after you create your factory:

    from twisted.internet.task import LoopingCall
    LoopingCall(factory.sendMessageToAllClients, 'Hey.').start(1.0)

You may be interested to also read about these APIs:

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html

http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.interfaces.IReactorTime.html



From dfarrell at mypublisher.com  Thu Jun  4 15:12:56 2009
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Thu, 4 Jun 2009 17:12:56 -0400
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
Message-ID: <318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>

Hi all,

I'm using the twisted.internet.task.LoopingCall system to run periodic
tasks in a Twisted server. If I had code like this:

from twisted.internet.task import LoopingCall

lp = LoopingCall(someFunction)
lp.start(5.0)   # run every 5 seconds


Is there anything in LoopingCall to keep it from trying to run
someFunction() if the previous call is still running? For instance a
call to someFunction() takes longer than 5 seconds, will LoopingCall
hold off or will it call someFuction() anyway causing two 'instances' to
run?

Thanks,
Doug



From terry at jon.es  Thu Jun  4 16:18:00 2009
From: terry at jon.es (Terry Jones)
Date: Fri, 5 Jun 2009 00:18:00 +0200
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: Your message at 17:12:56 on Thursday, 4 June 2009
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
	<318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
Message-ID: <18984.18456.528978.177264@jon.es>

>>>>> "Doug" == Doug Farrell <dfarrell at mypublisher.com> writes:

Doug> Is there anything in LoopingCall to keep it from trying to run
Doug> someFunction() if the previous call is still running? For instance a
Doug> call to someFunction() takes longer than 5 seconds, will LoopingCall
Doug> hold off or will it call someFuction() anyway causing two 'instances'
Doug> to run?

Hi Doug

Sorry if it sounds like I'm being a PITA, but I really recommend reading
the source code and writing & playing with a tiny example. Also see
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.LoopingCall.html

I suggest this because it's by far the best way to learn these things. And
if you're using Twisted in any serious way, it's hard to get by without
getting closely acquainted with some of the code.

BTW, yes, LoopingCall will reschedule in a sensible way, supposing your
task returns a deferred that takes a long time to fire :-) Try it.

Terry



From ltaylor.volks at gmail.com  Thu Jun  4 16:31:15 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Thu, 04 Jun 2009 17:31:15 -0500
Subject: [Twisted-Python] twisted.internet.task.LoopingCall
In-Reply-To: <318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
References: <mailman.5.1244131208.15685.twisted-python@twistedmatrix.com>
	<318F79422ADC5041A93343721F84474D01D46351@exchange.mypublisher.local>
Message-ID: <4A284B33.5050500@gmail.com>

On 6/4/09 4:12 PM, Doug Farrell wrote:
> Hi all,
> 
> I'm using the twisted.internet.task.LoopingCall system to run periodic
> tasks in a Twisted server. If I had code like this:
> 
> from twisted.internet.task import LoopingCall
> 
> lp = LoopingCall(someFunction)
> lp.start(5.0)   # run every 5 seconds
> 
> 
> Is there anything in LoopingCall to keep it from trying to run
> someFunction() if the previous call is still running? For instance a
> call to someFunction() takes longer than 5 seconds, will LoopingCall
> hold off or will it call someFuction() anyway causing two 'instances' to
> run?
> 
> Thanks,
> Doug

per
http://twistedmatrix.com/documents/current/api/twisted.internet.task.LoopingCall.html

If someFunction returns a Deferred, it will not be rescheduled if the
Deferred has not fired.

e.g.

def someFunction():
    d = someDeferredReturningOperation()
    d.addCallbacks(success, error)
    return d

lp = LoopingCall(someFunction)
lp.start(5.0)   # run every 5 seconds


Lucas



From terry at jon.es  Sat Jun  6 19:41:08 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 7 Jun 2009 03:41:08 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
Message-ID: <18987.6836.750596.444400@jon.es>

I try to avoid using inlineCallbacks. There are two cases where I will
happily use it though: when I write a method that would need more than a
few callback functions, and, more importantly, when the logical flow of a
method is non-trivial (i.e., it depends on the returned values or errors of
several deferreds).

One inconvenience with inlineCallbacks is that you might have some kind of
processing you want done no matter how the function returns, or wherever an
error occurs. Two solutions here are 1) to put try/except calls around your
various yields, and/or to perhaps do something else with various callbacks
that might call defer.returnValue, or 2) expect each caller of your method
to deal with the result. I don't like the first of those much (depending on
the code), and don't like the second at all.

So I wrote a decorator specifically for inlineCallbacks decorated functions:

    from twisted.internet import defer

    def inlineCallbacksDecorator(callback, errback=defer.passthru):
        def wrap(f):
            def wrapper(*args, **kw):
                d = f(*args, **kw)
                if isinstance(d, defer.Deferred):
                    return d.addCallbacks(callback, errback,
                                          callbackArgs=args, callbackKeywords=kw,
                                          errbackArgs=args, errbackKeywords=kw)
                # We were used to decorate a non-inlineCallbacks function.
                raise Exception(
                    'Function %r was decorated with inlineCallbacksDecorator but '
                    'did not return a deferred (did you forget to also decorate '
                    'with inlineCallbacks?)' % f.__name__)
            return mergeFunctionMetadata(f, wrapper)
        return wrap

You can use it like this:

    def _cbok(result, a, b=None):
        print 'In _cbok: a=%r b=%r' % (a, b)
        return result

    def _cberr(failure, *args, **kw):
        pass
        # Do something....  and maybe also return the failure.

    @inlineCallbacksDecorator(_cbok, _cberr)
    @defer.inlineCallbacks
    def frog(a, b=None):
        print 'a = %r, b = %r' % (a, b)
        result = yield produceDeferred()
        # yield produceErr()
        defer.returnValue(a)


The nice/interesting thing about this is that the callback and errback
functions get called with the deferred result of calling frog (as decorated
by inlineCallbacks) *and* the original arguments passed to frog.  You can
of course ignore the original args if you're not interested in them.

You can argue that this doesn't really buy you anything. That's of course
true.  It's only a decorator that makes it neater to do certain things.
Logging, accounting and error processing come immediately to mind. Just
keeping code looking simpler/cleaner is enough of a reason for me.

After writing this, I realized it deals with what I was clumsily trying to
achieve here
http://twistedmatrix.com/pipermail/twisted-python/2009-April/019492.html
back in April.

Terry



From exarkun at twistedmatrix.com  Sat Jun  6 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Jun 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1244347511.61.1253177632@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090607/5abd819f/attachment.html>

From maarten at treewalker.org  Sat Jun  6 22:18:52 2009
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sun, 7 Jun 2009 06:18:52 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: <18987.6836.750596.444400@jon.es>
References: <18987.6836.750596.444400@jon.es>
Message-ID: <200906070618.52813.maarten@treewalker.org>

On Sunday 07 June 2009, Terry Jones wrote:

> So I wrote a decorator specifically for inlineCallbacks decorated
> functions:
>
>     from twisted.internet import defer
>
>     def inlineCallbacksDecorator(callback, errback=defer.passthru):
>         def wrap(f):
>             def wrapper(*args, **kw):
>                 d = f(*args, **kw)
>                 if isinstance(d, defer.Deferred):
>                     return d.addCallbacks(callback, errback,
>                                           callbackArgs=args,
> callbackKeywords=kw, errbackArgs=args, errbackKeywords=kw)
>                 # We were used to decorate a non-inlineCallbacks function.
>                 raise Exception(
>                     'Function %r was decorated with
> inlineCallbacksDecorator but '
>                     'did not return a deferred (did you forget
> to also decorate '
>                     'with inlineCallbacks?)' % f.__name__)
>             return mergeFunctionMetadata(f, wrapper)
>         return wrap
>
> You can use it like this:
>
>     def _cbok(result, a, b=None):
>         print 'In _cbok: a=%r b=%r' % (a, b)
>         return result
>
>     def _cberr(failure, *args, **kw):
>         pass
>         # Do something....  and maybe also return the failure.
>
>     @inlineCallbacksDecorator(_cbok, _cberr)
>     @defer.inlineCallbacks
>     def frog(a, b=None):
>         print 'a = %r, b = %r' % (a, b)
>         result = yield produceDeferred()
>         # yield produceErr()
>         defer.returnValue(a)

As far as I can see, this decorator could be applied to any function that 
returns a Deferred, not just to inlineCallbacks.

Bye,
		Maarten




From terry at jon.es  Sun Jun  7 05:53:07 2009
From: terry at jon.es (Terry Jones)
Date: Sun, 7 Jun 2009 13:53:07 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: Your message at 06:18:52 on Sunday, 7 June 2009
References: <18987.6836.750596.444400@jon.es>
	<200906070618.52813.maarten@treewalker.org>
Message-ID: <18987.43555.831952.140655@jon.es>

Hi Maarten

>>>>> "Maarten" == Maarten ter Huurne <maarten at treewalker.org> writes:
Maarten> As far as I can see, this decorator could be applied to any
Maarten> function that returns a Deferred, not just to inlineCallbacks.

Yes, that's right, and it could be used in that case if you didn't want to
deal with the deferred you were about to return inside your method.

I wrote it specifically for inlineCallbacks because that case is a bit
different. With inlineCallbacks, the called method never has its hands on
the deferred that the caller will receive (whereas in a typical
deferred-returning method you either create the deferred yourself or call
something that does). In fact, the deferred the caller receives will
normally be returned back to the caller before the called method has
finished. Also, a return out of an inlineCallbacks function may happen at
many places (due to the hidden _DefGen_Return raise done by
defer.returnValue), so it's not as simple to arrange to do things at the
end of the method as it is in other circumstances.

Terry



From dfarrell at mypublisher.com  Mon Jun  8 08:46:03 2009
From: dfarrell at mypublisher.com (Doug Farrell)
Date: Mon, 8 Jun 2009 10:46:03 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 63, Issue 7
In-Reply-To: <mailman.5.1244217602.21167.twisted-python@twistedmatrix.com>
References: <mailman.5.1244217602.21167.twisted-python@twistedmatrix.com>
Message-ID: <318F79422ADC5041A93343721F84474D01D4654F@exchange.mypublisher.local>

Terry

> Hi Doug
> 
> Sorry if it sounds like I'm being a PITA, but I really recommend
> reading
> the source code and writing & playing with a tiny example. Also see
>
http://twistedmatrix.com/documents/8.2.0/api/twisted.internet.task.Loop
> ingCall.html
> 
> I suggest this because it's by far the best way to learn these things.
> And
> if you're using Twisted in any serious way, it's hard to get by
without
> getting closely acquainted with some of the code.
> 
> BTW, yes, LoopingCall will reschedule in a sensible way, supposing
your
> task returns a deferred that takes a long time to fire :-) Try it.
> 
> Terry
> 

[Doug Farrell] Don't mind the PITA at all, I actuall did read the source
code and just didn't 'get it' so much. In my case the function that
LoopingCall was passed was actually doing the work, not returning a
Deferred. However, I'm going to look into doing that. 

Thanks for your feedback and advice,
Doug

> per
>
http://twistedmatrix.com/documents/current/api/twisted.internet.task.Lo
> opingCall.html
> 
> If someFunction returns a Deferred, it will not be rescheduled if the
> Deferred has not fired.
> 
> e.g.
> 
> def someFunction():
>     d = someDeferredReturningOperation()
>     d.addCallbacks(success, error)
>     return d
> 
> lp = LoopingCall(someFunction)
> lp.start(5.0)   # run every 5 seconds
> 
> 
> Lucas
> 
[Doug Farrell] 
Lucas,

Thanks for your response and feedback. In my sample code the
someFunction() code was actually doing the work I wanted, not creating a
deferred as your sample shows. However, I'm going to try that out and
give it a run.

Thanks!
Doug



From patino at gmail.com  Mon Jun  8 09:33:13 2009
From: patino at gmail.com (Alex Patino)
Date: Mon, 8 Jun 2009 11:33:13 -0400
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
Message-ID: <7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>

I am looking for a chat system to add to my Django-based chat site.  I don't
need something ready-made but I don't want to build it on a framework that
is no longer supported.  What's the status of the Twisted Words project?

Regards,
Alex

On Mon, Jun 8, 2009 at 11:25 AM, Alex Patino <patino at gmail.com> wrote:

> I am looking for a chat system to add to my Django-based chat site.  I
> don't need something ready-made but I don't want to build it on a framework
> that is no longer supported.  What's the status of the Twisted Words
> project?
>
> Regards,
> Alex
>
>
> On Mon, Jun 8, 2009 at 8:34 AM, Jean-Paul Calderone <exarkun at divmod.com>wrote:
>
>> On Sun, 7 Jun 2009 23:50:59 -0400, Alex Patino <patino at gmail.com> wrote:
>>
>>> I have been looking for a chat server/client to add to my Django-based
>>> website.  What is the current state of Twisted Words?  Do you think it's
>>> something I could use for this endeavor?
>>>
>>
>> Twisted Words does not include a ready-made web-based chat system, so if
>> that's what you're looking for, you'll have to look elsewhere.
>>
>> Please direct follow-up questions to twisted-python at twistedmatrix.com.
>>
>> Jean-Paul
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090608/71374fc3/attachment.html>

From jack.bates at gmail.com  Mon Jun  8 10:37:18 2009
From: jack.bates at gmail.com (Jack Bates)
Date: Mon, 08 Jun 2009 09:37:18 -0700
Subject: [Twisted-Python] copy domish element
Message-ID: <1244479038.13748.10.camel@tad>

i have a domish element - when i try the following,

>>> message = element
>>> del message['from']
>>> element['from']

- i get a key error

to avoid this key error, i think i want to copy the element, so i can
drop the 'from' attribute from one copy without affecting the other?

but i didn't find anything to make a copy in the domish element api

how should i avoid this key error?



From terry at jon.es  Mon Jun  8 10:59:21 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 8 Jun 2009 18:59:21 +0200
Subject: [Twisted-Python] copy domish element
In-Reply-To: Your message at 09:37:18 on Monday, 8 June 2009
References: <1244479038.13748.10.camel@tad>
Message-ID: <18989.17257.408345.57687@jon.es>

Hi Jack

>>>>> "Jack" == Jack Bates <jack.bates at gmail.com> writes:

Jack> i have a domish element - when i try the following,
>>>> message = element
>>>> del message['from']
>>>> element['from']

Jack> - i get a key error

Jack> to avoid this key error, i think i want to copy the element, so i can
Jack> drop the 'from' attribute from one copy without affecting the other?

Jack> but i didn't find anything to make a copy in the domish element api
Jack> how should i avoid this key error?

If I'm interpreting you right, you might try

    from copy import deepcopy
    message = deepcopy(element)
    # etc.

Not sure what this has to do with Twisted :-)

Terry



From p.mayers at imperial.ac.uk  Mon Jun  8 11:03:53 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 08 Jun 2009 18:03:53 +0100
Subject: [Twisted-Python] copy domish element
In-Reply-To: <1244479038.13748.10.camel@tad>
References: <1244479038.13748.10.camel@tad>
Message-ID: <4A2D4479.9080007@imperial.ac.uk>

Jack Bates wrote:
> i have a domish element - when i try the following,
> 
>>>> message = element
>>>> del message['from']
>>>> element['from']
> 
> - i get a key error

Well, yes. That's how python works ;o)

> 
> to avoid this key error, i think i want to copy the element, so i can
> drop the 'from' attribute from one copy without affecting the other?
> 
> but i didn't find anything to make a copy in the domish element api

I haven't tried it, but have you tried the python standard copy protocol:

import copy
message = copy.deepcopy(element)



From drew.smathers at gmail.com  Mon Jun  8 12:31:16 2009
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 8 Jun 2009 14:31:16 -0400
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: <18987.6836.750596.444400@jon.es>
References: <18987.6836.750596.444400@jon.es>
Message-ID: <368574aa0906081131l31764c80ua53177f8dbd29d9c@mail.gmail.com>

On Sat, Jun 6, 2009 at 9:41 PM, Terry Jones<terry at jon.es> wrote:
> I try to avoid using inlineCallbacks. There are two cases where I will
> happily use it though: when I write a method that would need more than a
> few callback functions, and, more importantly, when the logical flow of a
> method is non-trivial (i.e., it depends on the returned values or errors of
> several deferreds).
>
> One inconvenience with inlineCallbacks is that you might have some kind of
> processing you want done no matter how the function returns, or wherever an
> error occurs. Two solutions here are 1) to put try/except calls around your
> various yields, and/or to perhaps do something else with various callbacks
> that might call defer.returnValue, or 2) expect each caller of your method
> to deal with the result. I don't like the first of those much (depending on
> the code), and don't like the second at all.

How does inlineCallbacks preclude you from adding "processing you want
done no matter how the function returns" or currying callbacks?  From
my understanding of the problem, this is already solved by attaching
callbacks/errbacks in the regular way:

@inlineCallbacks
def foo(a, b, c):
    ...
foo(a, b, c).addBoth(cb, a, b, c)

>
> So I wrote a decorator specifically for inlineCallbacks decorated functions:
>
>    from twisted.internet import defer
>
>    def inlineCallbacksDecorator(callback, errback=defer.passthru):
>        def wrap(f):
>            def wrapper(*args, **kw):
>                d = f(*args, **kw)
>                if isinstance(d, defer.Deferred):
>                    return d.addCallbacks(callback, errback,
>                                          callbackArgs=args, callbackKeywords=kw,
>                                          errbackArgs=args, errbackKeywords=kw)
>                # We were used to decorate a non-inlineCallbacks function.
>                raise Exception(
>                    'Function %r was decorated with inlineCallbacksDecorator but '
>                    'did not return a deferred (did you forget to also decorate '
>                    'with inlineCallbacks?)' % f.__name__)
>            return mergeFunctionMetadata(f, wrapper)
>        return wrap
>
> You can use it like this:
>
>    def _cbok(result, a, b=None):
>        print 'In _cbok: a=%r b=%r' % (a, b)
>        return result
>
>    def _cberr(failure, *args, **kw):
>        pass
>        # Do something....  and maybe also return the failure.
>
>    @inlineCallbacksDecorator(_cbok, _cberr)
>    @defer.inlineCallbacks
>    def frog(a, b=None):
>        print 'a = %r, b = %r' % (a, b)
>        result = yield produceDeferred()
>        # yield produceErr()
>        defer.returnValue(a)
>
>
> The nice/interesting thing about this is that the callback and errback
> functions get called with the deferred result of calling frog (as decorated
> by inlineCallbacks) *and* the original arguments passed to frog.  You can
> of course ignore the original args if you're not interested in them.
>
> You can argue that this doesn't really buy you anything. That's of course
> true.  It's only a decorator that makes it neater to do certain things.
> Logging, accounting and error processing come immediately to mind. Just
> keeping code looking simpler/cleaner is enough of a reason for me.
>
> After writing this, I realized it deals with what I was clumsily trying to
> achieve here
> http://twistedmatrix.com/pipermail/twisted-python/2009-April/019492.html
> back in April.
>
> Terry
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From terry at jon.es  Mon Jun  8 14:10:49 2009
From: terry at jon.es (Terry Jones)
Date: Mon, 8 Jun 2009 22:10:49 +0200
Subject: [Twisted-Python] inlineCallbacksDecorator
In-Reply-To: Your message at 14:31:16 on Monday, 8 June 2009
References: <18987.6836.750596.444400@jon.es>
	<368574aa0906081131l31764c80ua53177f8dbd29d9c@mail.gmail.com>
Message-ID: <18989.28745.400512.674702@jon.es>

>>>>> "Drew" == Drew Smathers <drew.smathers at gmail.com> writes:
Drew> On Sat, Jun 6, 2009 at 9:41 PM, Terry Jones<terry at jon.es> wrote:
>> One inconvenience with inlineCallbacks is that you might have some kind
>> of processing you want done no matter how the function returns, or
>> wherever an error occurs. Two solutions here are 1) to put try/except
>> calls around your various yields, and/or to perhaps do something else
>> with various callbacks that might call defer.returnValue, or 2) expect
>> each caller of your method to deal with the result. I don't like the
>> first of those much (depending on the code), and don't like the second
>> at all.

Drew> How does inlineCallbacks preclude you from adding "processing you
Drew> want done no matter how the function returns" or currying callbacks?
Drew> From my understanding of the problem, this is already solved by
Drew> attaching callbacks/errbacks in the regular way:

Drew> @inlineCallbacks
Drew> def foo(a, b, c):
Drew> ...
Drew> foo(a, b, c).addBoth(cb, a, b, c)

Right, that's what I meant by the (2) in my paragraph. The reason that's
not always what you want is that there may be things foo needs to get done
before it returns, things that are best or can only be computed inside
foo. In that case you don't really want to make all your callers have to
add a callback to add functionality/logic that belongs inside foo.

Under normal circumstances you'd have code like this:

  def foo():
    d = someOtherFunc()
    d.addCallbacks(...)
    return d

or

  def foo():
    d = defer.Callback()
    # Set up some stuff that will fire d
    return d

so the deferred that comes back from foo is under control of foo and if
there's any logical last steps to be done to it, foo can easily add them.

But with inlineCallbacks, foo never has its hands on the deferred that will
be returned.  Yes, you could do:

  @inlineCallbacks
  def foo():
    try:
      #
      # All sorts of stuff, yielding deferreds
      #
    except ...:
      # yield somethingElse or raise something

But that's not so attractive, and it only deals with errbacks. To deal with
all returns, you could catch the undocumented _DefGen_Return, do your
processing and then re-raise it but that's even more ugly.  So I'm just
trying to offer a clean way to always get hold of the deferred and be able
to consistently process it using code in the same file (or class, given a
self) as foo.

Terry



From nestor at tiendalinux.com  Mon Jun  8 22:53:11 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Mon, 08 Jun 2009 23:53:11 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
Message-ID: <4A2DEAB7.4000206@tiendalinux.com>

Hello, there is a bug on the SerialPort Win32 implementation (don't know 
about the others), when i call the loseConnection method, it returns:

twisted matrix exceptions.AttributeError:  'SerialPort' object has no 
attribute '_tempDataBuffer'

if i wrap the serialport class and put a :

        self._tempDataBuffer = ''

in the __init__ method, i get:

raise NotImplementedError("%s does not implement writeSomeData" % 
exceptions.NotImplementedError: __main__.MySerialPort does not implement 
writeSomeData

however the port gets closed the right way.

Slds.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From twisted at ralphm.ik.nu  Tue Jun  9 00:47:36 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 09 Jun 2009 08:47:36 +0200
Subject: [Twisted-Python] copy domish element
In-Reply-To: <4A2D4479.9080007@imperial.ac.uk>
References: <1244479038.13748.10.camel@tad> <4A2D4479.9080007@imperial.ac.uk>
Message-ID: <1244530056.10638.4.camel@dwaal>

On Mon, 2009-06-08 at 18:03 +0100, Phil Mayers wrote:
> Jack Bates wrote:
> > i have a domish element - when i try the following,
> > 
> >>>> message = element
> >>>> del message['from']
> >>>> element['from']
> > 
> > - i get a key error
> 
> Well, yes. That's how python works ;o)
> 
> > 
> > to avoid this key error, i think i want to copy the element, so i can
> > drop the 'from' attribute from one copy without affecting the other?
> > 
> > but i didn't find anything to make a copy in the domish element api
> 
> I haven't tried it, but have you tried the python standard copy protocol:
> 
> import copy
> message = copy.deepcopy(element)

Deep copies of Element instances is probably not what you want here. See
issue #724.

I suspect from your example that you want to respond to an incoming XML
Stanza. In general, it is better to construct a new stanza from the old
one, keeping the addressing but in reverse. There is a utility function
for this: twisted.words.protocols.jabber.xmlstream.toResponse. For error
responses, you want to look at t.w.p.j.error.StanzaError and its
toResponse method.

-- 
Groetjes,

ralphm




From twisted at ralphm.ik.nu  Tue Jun  9 01:06:14 2009
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 09 Jun 2009 09:06:14 +0200
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
	<7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
Message-ID: <1244531174.10638.22.camel@dwaal>

On Mon, 2009-06-08 at 11:33 -0400, Alex Patino wrote:
> I am looking for a chat system to add to my Django-based chat site.  I
> don't need something ready-made but I don't want to build it on a
> framework that is no longer supported.  What's the status of the
> Twisted Words project?

Although, as exarkun mentions, Twisted Words currently does not have a
complete web-based chat system, the great people at StanzIQ have built a
suite of products to support this, using Twisted and a piece of Django.

First off, there is Punjab, an implementation of XMPP over BOSH, that
allows browser-based javascript applications do XMPP over HTTP. Then,
there is Strophe, or more specifically strophe.js, a javascript library
to build browser-based XMPP applications, talking to Punjab (or other
XMPP over BOSH implementations).

For a group chat application, they have Speeqe, a client-side
implementation of the Multi-User Chat XMPP Extension using strophe.js
and some server-side Django. In turn you need a server-side
implementation as well, to hold the chat rooms, and for this they have
built Palaver on top of Twisted Words.

You can read up on all of this marvelous stuff at http://stanziq.com/
Also, be sure not to miss the (now still rather incomplete) list of
applications using strophe.js:
http://code.stanziq.com/strophe/wiki/UseCases .

-- 
Groetjes,

ralphm




From clemesha at gmail.com  Tue Jun  9 01:22:00 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Tue, 9 Jun 2009 00:22:00 -0700
Subject: [Twisted-Python] Twisted Words
In-Reply-To: <1244531174.10638.22.camel@dwaal>
References: <7ee699980906072050l36670283od3478f83686b1405@mail.gmail.com>
	<20090608123412.22176.994030782.divmod.quotient.3424@henry.divmod.com>
	<7ee699980906080825n7c7df5c9j4df31209f38bca9@mail.gmail.com>
	<7ee699980906080833m52a67dewe246813c49c8ee8a@mail.gmail.com>
	<1244531174.10638.22.camel@dwaal>
Message-ID: <d272f0690906090022r979cba6g3bee562243e84fed@mail.gmail.com>

On Tue, Jun 9, 2009 at 12:06 AM, Ralph Meijer<twisted at ralphm.ik.nu> wrote:
> On Mon, 2009-06-08 at 11:33 -0400, Alex Patino wrote:
>> I am looking for a chat system to add to my Django-based chat site.  I
>> don't need something ready-made but I don't want to build it on a
>> framework that is no longer supported.  What's the status of the
>> Twisted Words project?
>
> Although, as exarkun mentions, Twisted Words currently does not have a
> complete web-based chat system, the great people at StanzIQ have built a
> suite of products to support this, using Twisted and a piece of Django.
>
> First off, there is Punjab, an implementation of XMPP over BOSH, that
> allows browser-based javascript applications do XMPP over HTTP. Then,
> there is Strophe, or more specifically strophe.js, a javascript library
> to build browser-based XMPP applications, talking to Punjab (or other
> XMPP over BOSH implementations).
>
> For a group chat application, they have Speeqe, a client-side
> implementation of the Multi-User Chat XMPP Extension using strophe.js
> and some server-side Django. In turn you need a server-side
> implementation as well, to hold the chat rooms, and for this they have
> built Palaver on top of Twisted Words.
>
> You can read up on all of this marvelous stuff at http://stanziq.com/
> Also, be sure not to miss the (now still rather incomplete) list of
> applications using strophe.js:
> http://code.stanziq.com/strophe/wiki/UseCases .

I heartily agree checking out what http://stanziq.com has to offer, it
is excellent.

In particular, a combination of Strophe and Punjab (plus ejabberd) will get
you where you want to go.

I have a fun little app going that uses Strophe, Punjab, and Django.  You can
play with it here: http://wikipediagame.org

and here is a talk I did at a recent Django user group meeting on the
game's architecture:
http://clemesha.org/static/talks/Django_and_XMPP_BoshWriting_a_real_time_web_app.pdf

I believe you might find it's easier that you think to get going by
just playing around
with the examples.  Try starting here:
http://code.stanziq.com/cgit/strophe/strophejs/tree/examples/attach


good luck!
-Alex



>
> --
> Groetjes,
>
> ralphm
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From hoooooosety at gmail.com  Tue Jun  9 03:31:52 2009
From: hoooooosety at gmail.com (hoooooosety)
Date: Tue, 9 Jun 2009 17:31:52 +0800
Subject: [Twisted-Python] some callback function params problems
Message-ID: <200906091731503595272@gmail.com>

Hello, I have some callback function params problems.

Here is a simple example.

def deferDoSomeInsert(paramA, paramB):
	insertSQL = "..."
	db.runQuery(insertSQL)

def deferDoSomeDelete(paramA, paramB):
	deleteSQL = "..."
	db.runQuery(deleteSQL)

#these two functions are individual and basic, and then, I need compound function which first insert then delete.
#so

def deferCompoundFunc(paramA, paramB):
	return deferDoSomeInsert.addCallback(deferDoSomeDelete, paramA, paramB)

here the problem comes, the first defer will return none as default so there're 3 pramas pass to the second function.

Is there a common way to solve the problem like this. I mean I can still keep the separate functions as the look like now,
and I can compound the basic function to do more complex action using addCallback to link them.

2009-06-09 
hoooooosety 




From screwtape at froup.com  Tue Jun  9 03:55:06 2009
From: screwtape at froup.com (Tim Allen)
Date: Tue, 9 Jun 2009 19:55:06 +1000
Subject: [Twisted-Python] some callback function params problems
In-Reply-To: <200906091731503595272@gmail.com>
References: <200906091731503595272@gmail.com>
Message-ID: <20090609095506.GP16651@thristian.org>

On Tue, Jun 09, 2009 at 05:31:52PM +0800, hoooooosety wrote:
> Is there a common way to solve the problem like this. I mean I can
> still keep the separate functions as the look like now,

I do it like this:

    def deferCompoundFunc(paramA, paramB):
	d = deferDoSomeInsert(paramA, paramB)
	d.addCallback(lambda ignored: deferDoSomeDelete(paramA, paramB))
	return d

(Actually I normally call the lambda's parameter "_" rather than
"ignored" because it's faster to type, and makes pylint not complain
about unused variables)

If you're learning Twisted for the first time, get prepared to get very
friendly with lambda. :)



From jack.bates at gmail.com  Tue Jun  9 09:55:09 2009
From: jack.bates at gmail.com (Jack Bates)
Date: Tue, 09 Jun 2009 08:55:09 -0700
Subject: [Twisted-Python] copy domish element
In-Reply-To: <1244530056.10638.4.camel@dwaal>
References: <1244479038.13748.10.camel@tad>
	<4A2D4479.9080007@imperial.ac.uk>  <1244530056.10638.4.camel@dwaal>
Message-ID: <1244562909.20816.15.camel@tad>

On Tue, 2009-06-09 at 08:47 +0200, Ralph Meijer wrote:
> On Mon, 2009-06-08 at 18:03 +0100, Phil Mayers wrote:
> > Jack Bates wrote:
> > > i have a domish element - when i try the following,
> > > 
> > >>>> message = element
> > >>>> del message['from']
> > >>>> element['from']
> > > 
> > > - i get a key error
> > 
> > Well, yes. That's how python works ;o)
> >  
> > > to avoid this key error, i think i want to copy the element, so i can
> > > drop the 'from' attribute from one copy without affecting the other?
> > > 
> > > but i didn't find anything to make a copy in the domish element api
> > 
> > I haven't tried it, but have you tried the python standard copy protocol:
> > 
> > import copy
> > message = copy.deepcopy(element)
> 
> Deep copies of Element instances is probably not what you want here. See
> issue #724.
> 
> I suspect from your example that you want to respond to an incoming XML
> Stanza. In general, it is better to construct a new stanza from the old
> one, keeping the addressing but in reverse. There is a utility function
> for this: twisted.words.protocols.jabber.xmlstream.toResponse. For error
> responses, you want to look at t.w.p.j.error.StanzaError and its
> toResponse method.

much thanks for your attention ralphm! actually i want to reroute an
incoming xml <message>

i have one script, qubot, which sits in our project chat room,
http://github.com/jablko/qubot/blob/722b28f66d5eaf96d3b00902f3532ba61588c4c9/qubot

- and one script, jabber, which sends commit messages to qubot,
http://github.com/jablko/jabber/blob/92a418a4c6d1d2a21beda02ff7d9edce18146e18/jabber

when qubot receives a message from jabber, it should relay the message
to the chat room

i used to construct a new <message> and copy a whitelist of attributes
and content from the incoming <message>, however i switched to
attempting a perfect copy of the incoming <message> and adjusting a
blacklist of attributes (such as del message['from']) because otherwise
xmpp extensions like xhtml-im were not relayed,
http://github.com/jablko/qubot/commit/722b28f66d5eaf96d3b00902f3532ba61588c4c9



From fetbiz at gmail.com  Tue Jun  9 21:20:15 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Wed, 10 Jun 2009 11:20:15 +0800
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <4A2DEAB7.4000206@tiendalinux.com>
References: <4A2DEAB7.4000206@tiendalinux.com>
Message-ID: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>

Maybe you can try to call transport.flushInput(), transport.flushOutput()
before loseConnection().


2009/6/9 Nestor A. Diaz <nestor at tiendalinux.com>:
> Hello, there is a bug on the SerialPort Win32 implementation (don't know
> about the others), when i call the loseConnection method, it returns:
>
> twisted matrix exceptions.AttributeError:  'SerialPort' object has no
> attribute '_tempDataBuffer'
>
> if i wrap the serialport class and put a :
>
>        self._tempDataBuffer = ''
>
> in the __init__ method, i get:
>
> raise NotImplementedError("%s does not implement writeSomeData" %
> exceptions.NotImplementedError: __main__.MySerialPort does not implement
> writeSomeData
>
> however the port gets closed the right way.
>
> Slds.
>
> --
> Nestor A. Diaz
> Ingeniero de Sistemas
> Tel. +57 1-600-5490 x 211
> Cel. +57 316-227-3593
> Tel. SIP: sip:211 at tiendalinux.com
> Email/MSN: nestor at tiendalinux.com
> http://www.tiendalinux.com/
> Bogota, Colombia
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From orsenthil at gmail.com  Wed Jun 10 01:33:18 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 10 Jun 2009 13:03:18 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
Message-ID: <20090610073318.GA7144@ubuntu.ubuntu-domain>

On Wed, Jun 03, 2009 at 10:43:34AM -0700, Minesh Patel wrote:

> For this, since your data is huge and seems like it will need a lot of
> CPU utilization, you might have to deferToThread, since Twisted runs
> in a single thread and will block AFAIK.
> 
> d = threads.deferToThread(do_a, arg1_to_do_a, arg2...)
> d.addCallback(do_a2, ...)
> 

I delayed and forgot to respond to this thread. Sorry for that.
Actually, I had asked the question on doing asynchronous monitoring of
new file arrival and then based on the file contents, doing tasks
a,b,c asynchronously.

Thank you for your responses. I got a number of pointers to look at.

* As a newbie to this world, I just started studying further.

I realized that in my application, I have the control form the client
on when I can notify that a particular file can be looked at.
So, for the time being, I just skipped the inotify linux system
related calls ( BTW, Twsited + inotify works great) and when ahead
with just implementing a Twisted a Server which listens to a
particular port and when receives data, will either read the file or
parse the data to do some activity (like fetch logs from database).

threads.deferToThread(func,[args]) is what I am using.

http://paste.pocoo.org/show/122155/


I am still working out more details as doing this
threads.deferToThread calls effectively, because there could be number
of clients parallely requesting it and the data from my query
(internal function) could be so big that it might take 30 minutes to
service a request.

* Another thing is when using something like 
"from datasources import query"

I could not make it to application (.tac to run it from twistd), it
could nto find datasources in its PYTHONPATH. Got to figure out how to
do it, which I might pretty soon.


Thanks again,
Senthil




From orsenthil at gmail.com  Wed Jun 10 01:36:16 2009
From: orsenthil at gmail.com (Senthil Kumaran)
Date: Wed, 10 Jun 2009 13:06:16 +0530
Subject: [Twisted-Python] Application Design help - Concurrent but
	not	Protocols based.
In-Reply-To: <1090603141629.39100B-100000@Ives.egh.com>
References: <20090603162527.GA15317@ubuntu.ubuntu-domain>
	<1090603141629.39100B-100000@Ives.egh.com>
Message-ID: <20090610073616.GB7144@ubuntu.ubuntu-domain>

On Wed, Jun 03, 2009 at 02:55:47PM -0400, John Santos wrote:
> 
> This is not an issue specifically related to Python or Twisted, but
> there is a very serious synchronization issue that needs to be
> addressed with this application design.  (Trust me, I've seen this
> issue come up dozens of times in over 30 years of experience...)

All the points which you have mentioned are very true. I also see that
the kind of problems we might land up in if not are using certain
filesystem provided facilties.

If I were go for the file presence notification, I might use inotify,
which seems to be pretty good.

Thanks,
Senthil




From thomas.jakobsen at alexandra.dk  Wed Jun 10 04:04:16 2009
From: thomas.jakobsen at alexandra.dk (Thomas Jakobsen)
Date: Wed, 10 Jun 2009 12:04:16 +0200
Subject: [Twisted-Python] stop conditions and deferToThread()
Message-ID: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>

Hi

As discussed in a previous thread

   http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html

a task put in its own thread via deferToThread() won't stop even
though the reactor has stopped. It has to carry out its own check that
the reactor is running and stop if that is not the case.

My question is: Is it possible to use anything else than the
reactor.running as stop condition in this way? In my current twisted
application I would like to keep the reactor running but still have
some deferToThread jobs stop if e.g. an exception occurs in one of the
jobs.

In the code example below I try to use my own global field, running,
as stop condition, but it doesn't work. If I let bar() call
reactor.stop() after the time.sleep(3) and use reactor.running in
foo() it works, however.

import time
from twisted.internet import reactor
from twisted.internet.threads import deferToThread

running = True

def foo():
   while running:
       print "working"
       time.sleep(1)

def bar():
   time.sleep(3)
   print "stopping"
   running = False

d1 = deferToThread(foo)
d2 = deferToThread(bar)

reactor.run()


Best regards,
Thomas Jakobsen



From p.mayers at imperial.ac.uk  Wed Jun 10 04:18:30 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 10 Jun 2009 11:18:30 +0100
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <4A2F8876.6010809@imperial.ac.uk>

Thomas Jakobsen wrote:
> Hi
> 
> As discussed in a previous thread
> 
>    http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html
> 
> a task put in its own thread via deferToThread() won't stop even
> though the reactor has stopped. It has to carry out its own check that
> the reactor is running and stop if that is not the case.
> 
> My question is: Is it possible to use anything else than the
> reactor.running as stop condition in this way? In my current twisted
> application I would like to keep the reactor running but still have
> some deferToThread jobs stop if e.g. an exception occurs in one of the
> jobs.

A threading.Event object?

Can you run the jobs as sub-processes? Then you could just kill them.



From screwtape at froup.com  Wed Jun 10 05:43:21 2009
From: screwtape at froup.com (Tim Allen)
Date: Wed, 10 Jun 2009 21:43:21 +1000
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <20090610114321.GR16651@thristian.org>

I'm not sure this is the problem you're facing, but...

On Wed, Jun 10, 2009 at 12:04:16PM +0200, Thomas Jakobsen wrote:
> import time
> from twisted.internet import reactor
> from twisted.internet.threads import deferToThread
> 
> running = True
> 
> def foo():
>    while running:
>        print "working"
>        time.sleep(1)
> 
> def bar():
     global running
>    time.sleep(3)
>    print "stopping"
>    running = False
> 
> d1 = deferToThread(foo)
> d2 = deferToThread(bar)
> 
> reactor.run()

...does that make things run better?



From exarkun at divmod.com  Wed Jun 10 06:23:45 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jun 2009 08:23:45 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
Message-ID: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>

On Wed, 10 Jun 2009 11:20:15 +0800, biziap biziap <fetbiz at gmail.com> wrote:

Please don't top-post.

>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>before loseConnection().
>

No, this is wrong.  Do not call these methods, ever.

>
>2009/6/9 Nestor A. Diaz <nestor at tiendalinux.com>:
>> Hello, there is a bug on the SerialPort Win32 implementation (don't know
>> about the others), when i call the loseConnection method, it returns:
>>
>> twisted matrix exceptions.AttributeError:  'SerialPort' object has no
>> attribute '_tempDataBuffer'
>>
>> if i wrap the serialport class and put a :
>>
>>        self._tempDataBuffer = ''
>>
>> in the __init__ method, i get:
>>
>> raise NotImplementedError("%s does not implement writeSomeData" %
>> exceptions.NotImplementedError: __main__.MySerialPort does not implement
>> writeSomeData
>>
>> however the port gets closed the right way.
>>

Can you provide a minimal example which demonstrates this behavior?  It is
perhaps a bug in Twisted, but it is difficult to know without being able to
see *exactly* how the behavior is triggered.

Thanks,

Jean-Paul



From exarkun at divmod.com  Wed Jun 10 06:31:33 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 10 Jun 2009 08:31:33 -0400
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
Message-ID: <20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>

On Wed, 10 Jun 2009 12:04:16 +0200, Thomas Jakobsen <thomas.jakobsen at alexandra.dk> wrote:
>Hi
>
>As discussed in a previous thread
>
>   http://twistedmatrix.com/pipermail/twisted-python/2009-May/019717.html
>
>a task put in its own thread via deferToThread() won't stop even
>though the reactor has stopped. It has to carry out its own check that
>the reactor is running and stop if that is not the case.

deferToThread is optimized for short-running tasks.  Thread creation costs
are amortized over the lifetime of the process.  This is because the intended
use of deferToThread is to run functions which compute some result and then
return, /not/ for functions which run forever (or at least until the process
is ready to exit).

You should try to find a way to re-arrange your code so that there is no
need to check if the reactor is still running - just do one piece of work
in a thread at a time.  When your non-threaded application code gets the
result back, if no one has asked it to shut down, then it can ask for
another job to be executed.

>My question is: Is it possible to use anything else than the
>reactor.running as stop condition in this way?

Also, I want to point out that while `reactor.running´ isn't private (since
it doesn't start with an underscore, as Twisted's privacy policy dictates it
would need to), it still isn't something you really want to be using.  It's
not part of any interface, which means there is no guarantee it will be
provided by all reactors.

It's also not really for you.  It's a flag that the reactor uses to track
its own internal state.  Its meaning may not actually correspond to the
meaning you'd like to assign to it.  Whenever you're trying to do something
like this (which I still don't recommend), you should create your own state
tracking and use that instead.

Jean-Paul



From pywinder at monkeydriveengine.com  Wed Jun 10 18:03:33 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Wed, 10 Jun 2009 20:03:33 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>

Can someone point me to a working example of imap4 client?

I've tried the example off the site, code from Abe Fettig's book, and every
example I could find on the web. (most of them seem outdated, as do most
discussions I've found on the subject)

All of them invariably end with:

twisted.internet.error.TimeoutError: User timeout caused connection failure

or

twisted.internet.error.ConnectionLost: Connection to the other side was lost
in a non-clean fashion.



I've pointed the code at two different IMAP servers, both of which (one is
gmail, the other is a private server) I am able to access with a hitch with
python's own imaplib. I've tried the sample code on an Ubuntu system, OSX,
and tried python versions 2.5 and 2.6.

Ideally, I'd love to see a snipped which is able to log into an imap server
and gets a list of mailboxes.  If the example on the site works for other
folks, I'd love a nudge in the right direction to modify the code to get a
bit more debugging info.

Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090610/1c5a0715/attachment.html>

From glyph at divmod.com  Thu Jun 11 00:26:18 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 11 Jun 2009 06:26:18 -0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
Message-ID: <20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>


On 10 Jun, 12:23 pm, exarkun at divmod.com wrote:
>Please don't top-post.

Since I'm seeing more and more messages where someone is top-posting, I 
think it might be helpful if we sent a more specific example of a 
positive example of what replies are expected to look like.  I think for 
now it might be good to say we prefer this style:

    http://en.wikipedia.org/wiki/Posting_style#Inline_replying

anybody else have a better reference?



From tarjei at nu.no  Thu Jun 11 01:24:09 2009
From: tarjei at nu.no (tarjei)
Date: Thu, 11 Jun 2009 09:24:09 +0200
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
References: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
Message-ID: <4A30B119.20402@nu.no>

On 06/11/2009 02:03 AM, Pywinder Singh wrote:
> Can someone point me to a working example of imap4 client?
>
> I've tried the example off the site, code from Abe Fettig's book, and
> every example I could find on the web. (most of them seem outdated, as
> do most discussions I've found on the subject)

Have you looked at chandler? AFAIK it uses (or used to use) Twisteds 
IMAP code.


Regards,
Tarjei

>
> All of them invariably end with:
>
>     twisted.internet.error.TimeoutError: User timeout caused connection
>     failure
>
>     or
>
>     twisted.internet.error.ConnectionLost: Connection to the other side
>     was lost in a non-clean fashion.
>
>
>
> I've pointed the code at two different IMAP servers, both of which (one
> is gmail, the other is a private server) I am able to access with a
> hitch with python's own imaplib. I've tried the sample code on an Ubuntu
> system, OSX, and tried python versions 2.5 and 2.6.
>
> Ideally, I'd love to see a snipped which is able to log into an imap
> server and gets a list of mailboxes.  If the example on the site works
> for other folks, I'd love a nudge in the right direction to modify the
> code to get a bit more debugging info.
>
> Thanks in advance!
>
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Tarjei Huse
Mobil: 920 63 413



From fetbiz at gmail.com  Thu Jun 11 02:11:42 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Thu, 11 Jun 2009 08:11:42 +0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
Message-ID: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>

>>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>>before loseConnection().
>>
>
> No, this is wrong.  Do not call these methods, ever.
>

I have experienced the same problem,
by calling the flashOutput, flashInput solved that problem in my case.
Maybe it is a workaround. I'd like to know how to do with it is the right way?
Thanks in advance.

Sorry about the top-post, hope that this time I am doing it right.



From p.mayers at imperial.ac.uk  Thu Jun 11 03:56:10 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 11 Jun 2009 10:56:10 +0100
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
References: <b3a40fea0906101703l324552e6p816ae1ffbb4c6532@mail.gmail.com>
Message-ID: <4A30D4BA.7060803@imperial.ac.uk>

Pywinder Singh wrote:
> 
> Ideally, I'd love to see a snipped which is able to log into an imap 
> server and gets a list of mailboxes.  If the example on the site works 

Here you go:

#!/usr/bin/python

from twisted.internet import reactor, protocol, defer
from twisted.mail import imap4

# change these...
username = '?'
password = '?'
servername = '?'

def mailboxes(list):
     for flags,sep,mbox in list:
         print mbox

def loggedin(res, proto):
     d = proto.list('','*')
     d.addCallback(mailboxes)
     return d

def connected(proto):
     print "connected", proto
     d = proto.login(username, password)
     d.addCallback(loggedin, proto)
     return d

def failed(f):
     print "failed", f
     return f

def done(_):
     reactor.callLater(0, reactor.stop)

def main():
     c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
     d = c.connectTCP(servername, 143)
     d.addCallbacks(connected, failed)
     d.addBoth(done)

reactor.callLater(0, main)
reactor.run()


This example makes use of deferred chaining i.e. returning a deferred 
from a callback handler, so you'll want to understand that.



From exarkun at divmod.com  Thu Jun 11 06:17:05 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 11 Jun 2009 08:17:05 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>
Message-ID: <20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>

On Thu, 11 Jun 2009 08:11:42 +0000, biziap biziap <fetbiz at gmail.com> wrote:
>>>Maybe you can try to call transport.flushInput(), transport.flushOutput()
>>>before loseConnection().
>>>
>>
>> No, this is wrong.  Do not call these methods, ever.
>>
>
>I have experienced the same problem,
>by calling the flashOutput, flashInput solved that problem in my case.
>Maybe it is a workaround. I'd like to know how to do with it is the right way?
>Thanks in advance.

Do you have an example which demonstrates the problem?  There's no way to
know why you encounter the problem without knowing what your program is
doing.

>
>Sorry about the top-post, hope that this time I am doing it right.
>

Yes.  Thanks. :)

Jean-Paul



From pywinder at monkeydriveengine.com  Thu Jun 11 18:50:30 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 11 Jun 2009 20:50:30 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906111750t6bc5bd71r347cada3e2209d14@mail.gmail.com>

Tarjei,

Yep. I actually grabbed it, but on perusal, but its use of twisted seemed a
little too layered to help me at my current twisted expertise. Of course,
now that I think I have the problem narrowed down to the login phase, it
might help.

Tnx.

Tarjei wrote:

> On 06/11/2009 02:03 AM, Pywinder Singh wrote:
> > Can someone point me to a working example of imap4 client?
> >
> > I've tried the example off the site, code from Abe Fettig's book, and
> > every example I could find on the web. (most of them seem outdated, as
> > do most discussions I've found on the subject)
>
> Have you looked at chandler? AFAIK it uses (or used to use) Twisteds
> IMAP code.
>
>
> Regards,
> Tarjei
>
> >
> > All of them invariably end with:
> >
> >     twisted.internet.error.TimeoutError: User timeout caused connection
> >     failure
> >
> >     or
> >
> >     twisted.internet.error.ConnectionLost: Connection to the other side
> >     was lost in a non-clean fashion.
> >
> >
> >
> > I've pointed the code at two different IMAP servers, both of which (one
> > is gmail, the other is a private server) I am able to access with a
> > hitch with python's own imaplib. I've tried the sample code on an Ubuntu
> > system, OSX, and tried python versions 2.5 and 2.6.
> >
> > Ideally, I'd love to see a snipped which is able to log into an imap
> > server and gets a list of mailboxes.  If the example on the site works
> > for other folks, I'd love a nudge in the right direction to modify the
> > code to get a bit more debugging info.
> >
> > Thanks in advance!
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> --
> Tarjei Huse
> Mobil: 920 63 413
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090611/6b233aba/attachment.html>

From pywinder at monkeydriveengine.com  Thu Jun 11 18:45:04 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Thu, 11 Jun 2009 20:45:04 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
Message-ID: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>

Phil,

Much obliged.

Was able to isolate and confirm that the real issue is that login is hanging
for some reason, and causing the timeout message. I suspect SSL/TLS issues,
which at least gives me a decided place to start investigating.

Thanks again for the code, it was sanity inducing to say the least. ;)


Phil Mayers wrote:

> Pywinder Singh wrote:
> >
> > Ideally, I'd love to see a snipped which is able to log into an imap
> > server and gets a list of mailboxes.  If the example on the site works
>
> Here you go:
>
> #!/usr/bin/python
>
> from twisted.internet import reactor, protocol, defer
> from twisted.mail import imap4
>
> # change these...
> username = '?'
> password = '?'
> servername = '?'
>
> def mailboxes(list):
>      for flags,sep,mbox in list:
>          print mbox
>
> def loggedin(res, proto):
>      d = proto.list('','*')
>      d.addCallback(mailboxes)
>      return d
>
> def connected(proto):
>      print "connected", proto
>      d = proto.login(username, password)
>      d.addCallback(loggedin, proto)
>      return d
>
> def failed(f):
>      print "failed", f
>      return f
>
> def done(_):
>      reactor.callLater(0, reactor.stop)
>
> def main():
>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
>      d = c.connectTCP(servername, 143)
>      d.addCallbacks(connected, failed)
>      d.addBoth(done)
>
> reactor.callLater(0, main)
> reactor.run()
>
>
> This example makes use of deferred chaining i.e. returning a deferred
> from a callback handler, so you'll want to understand that.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090611/1a610efe/attachment.html>

From fetbiz at gmail.com  Thu Jun 11 20:39:49 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Fri, 12 Jun 2009 02:39:49 +0000
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>
	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
Message-ID: <d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>

2009/6/11 Jean-Paul Calderone <exarkun at divmod.com>:
>
> Do you have an example which demonstrates the problem?  There's no way to
> know why you encounter the problem without knowing what your program is
> doing.
>

I am developing a program which verifies every PCB in manufacturing factory.
The tester (WindowsXP user) has to plug on the serial port for the
testing process,
then unplug for next testing. The serial connection has to connect and
disconnect
for every testing, that's where the problem happened.

Since the whole program requires some device-specific modules to run.
I will cut it down to a neat version which can re-produce the problem.
It takes time. Soon after it has done, I will post it.

Iap



From clemesha at gmail.com  Fri Jun 12 02:40:57 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Fri, 12 Jun 2009 01:40:57 -0700
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
Message-ID: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>

Hi,

I've wondered myself how to do this, so thanks Phil.

I extended Phil's solution to work with Gmail, which boils
down to using SSL and setting the correct servername and port, see here:
http://gist.github.com/128521

Pywinder, you should be able to just change the username/password
and it will work for you (you might have to have the python ssl module
installed - post again if that is the case and it's not working for you)

How to do useful stuff with the 'mailboxes' function in the script is
another question (which I dont know the answer to).  Maybe post
your usage if you have a chance.


-Alex





On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
Singh<pywinder at monkeydriveengine.com> wrote:
> Phil,
>
> Much obliged.
>
> Was able to isolate and confirm that the real issue is that login is hanging
> for some reason, and causing the timeout message. I suspect SSL/TLS issues,
> which at least gives me a decided place to start investigating.
>
> Thanks again for the code, it was sanity inducing to say the least. ;)
>
>
> Phil Mayers wrote:
>>
>> Pywinder Singh wrote:
>> >
>> > Ideally, I'd love to see a snipped which is able to log into an imap
>> > server and gets a list of mailboxes.  If the example on the site works
>>
>> Here you go:
>>
>> #!/usr/bin/python
>>
>> from twisted.internet import reactor, protocol, defer
>> from twisted.mail import imap4
>>
>> # change these...
>> username = '?'
>> password = '?'
>> servername = '?'
>>
>> def mailboxes(list):
>>      for flags,sep,mbox in list:
>>          print mbox
>>
>> def loggedin(res, proto):
>>      d = proto.list('','*')
>>      d.addCallback(mailboxes)
>>      return d
>>
>> def connected(proto):
>>      print "connected", proto
>>      d = proto.login(username, password)
>>      d.addCallback(loggedin, proto)
>>      return d
>>
>> def failed(f):
>>      print "failed", f
>>      return f
>>
>> def done(_):
>>      reactor.callLater(0, reactor.stop)
>>
>> def main():
>>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
>>      d = c.connectTCP(servername, 143)
>>      d.addCallbacks(connected, failed)
>>      d.addBoth(done)
>>
>> reactor.callLater(0, main)
>> reactor.run()
>>
>>
>> This example makes use of deferred chaining i.e. returning a deferred
>> from a callback handler, so you'll want to understand that.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From andrewfr_ice at yahoo.com  Fri Jun 12 07:50:55 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 12 Jun 2009 06:50:55 -0700 (PDT)
Subject: [Twisted-Python] Question about File Descriptors
Message-ID: <134022.27032.qm@web34203.mail.mud.yahoo.com>


Hi Folks:

This is not a Twisted question per se but here goes. I am using Linux. I want to do some tests and I need to increase the numbers of file descriptors. What are the memory ramifications (i.e, I raise the max descriptor count to 65535)? Also should I move to the EPoll reactor? Thanks in advance.

Cheers,
Andrew


      



From thomas.jakobsen at alexandra.dk  Fri Jun 12 09:45:47 2009
From: thomas.jakobsen at alexandra.dk (Thomas Jakobsen)
Date: Fri, 12 Jun 2009 17:45:47 +0200
Subject: [Twisted-Python] stop conditions and deferToThread()
In-Reply-To: <20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>
References: <232f319b0906100304q5e03d42p6d922585aa72945e@mail.gmail.com>
	<20090610123133.22176.1370222089.divmod.quotient.4143@henry.divmod.com>
Message-ID: <232f319b0906120845v2b590480xd72b3771931c6497@mail.gmail.com>

Thanks for the replies.

In my particular case, adding a

   global running

as Tim Allen pointed out, actually did it.

Regards,
Thomas



From powdahound at gmail.com  Fri Jun 12 14:33:26 2009
From: powdahound at gmail.com (Garret Heaton)
Date: Fri, 12 Jun 2009 13:33:26 -0700
Subject: [Twisted-Python] Custom logging for twistd plugin
Message-ID: <812f32000906121333q4a35a248se93a4622df46a73e@mail.gmail.com>

I'm looking to make some changes to the way a twistd
plugin<http://twistedmatrix.com/projects/core/documentation/howto/plugin.html>logs
information. The docs on
logging<http://twistedmatrix.com/projects/core/documentation/howto/logging.html>and
the application
framework<http://twistedmatrix.com/projects/core/documentation/howto/application.html#auto6>don't
currently mention how plugins fit in.

My main goal is to have the log include information about the log level of
each message represented as either text or an integer (like logging.DEBUG,
etc). This would make log monitoring tools and alerts much more accurate as
well as easier to write. I'd also like to be able to call log methods for
each level (log.debug(), log.error(), etc) instead of only having log.msg().

For example, I'd prefer to turn:
2009-06-12 13:04:12-0700 [-] Foo service starting
2009-06-12 13:04:12-0700 [-] Loaded config from /etc/foo/missing.cfg
2009-06-12 13:04:12-0700 [-] Log file does not exist: /etc/foo/missing.cfg
into something like:
20|2009-06-12 13:04:12|Foo service starting
10|2009-06-12 13:04:12|Loaded config from /etc/foo/missing.cfg
50|2009-06-12 13:04:12|Log file does not exist: /etc/foo/missing.cfg

(10 = logging.DEBUG, 20 = logging.INFO, 50 = logging.CRITICAL from Python's
logging module <http://docs.python.org/library/logging.html>)

I've looked through most of the current logging code but I'm new to both
Python and Twisted and am not sure if adding what I want through subclassing
is the best approach or even a possibility.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090612/86b751e8/attachment.html>

From pywinder at monkeydriveengine.com  Fri Jun 12 19:42:55 2009
From: pywinder at monkeydriveengine.com (Pywinder Singh)
Date: Fri, 12 Jun 2009 21:42:55 -0400
Subject: [Twisted-Python] Need working examples of imap4 client.
In-Reply-To: <d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
References: <b3a40fea0906111745x288558abh7eb2508b56da4010@mail.gmail.com>
	<d272f0690906120140o22d3ada9r7dd22673214174c2@mail.gmail.com>
Message-ID: <b3a40fea0906121842kb549322mcf32aac8066580d3@mail.gmail.com>

Alex,

That link was invaluable.

Twisted docs + project deadlines + my own ignorance = I completely had the
wrong idea about how to set up SSL. Code worked like a charm, and now I'm
very happy not to have to finish the project using python's native imaplib.

I'll certainly share the fruits of my labour with this list.

Thanks again....


On Fri, Jun 12, 2009 at 4:40 AM, Alex Clemesha <clemesha at gmail.com> wrote:

> Hi,
>
> I've wondered myself how to do this, so thanks Phil.
>
> I extended Phil's solution to work with Gmail, which boils
> down to using SSL and setting the correct servername and port, see here:
> http://gist.github.com/128521
>
> Pywinder, you should be able to just change the username/password
> and it will work for you (you might have to have the python ssl module
> installed - post again if that is the case and it's not working for you)
>
> How to do useful stuff with the 'mailboxes' function in the script is
> another question (which I dont know the answer to).  Maybe post
> your usage if you have a chance.
>
>
> -Alex
>
>
>
>
>
> On Thu, Jun 11, 2009 at 5:45 PM, Pywinder
> Singh<pywinder at monkeydriveengine.com> wrote:
> > Phil,
> >
> > Much obliged.
> >
> > Was able to isolate and confirm that the real issue is that login is
> hanging
> > for some reason, and causing the timeout message. I suspect SSL/TLS
> issues,
> > which at least gives me a decided place to start investigating.
> >
> > Thanks again for the code, it was sanity inducing to say the least. ;)
> >
> >
> > Phil Mayers wrote:
> >>
> >> Pywinder Singh wrote:
> >> >
> >> > Ideally, I'd love to see a snipped which is able to log into an imap
> >> > server and gets a list of mailboxes.  If the example on the site works
> >>
> >> Here you go:
> >>
> >> #!/usr/bin/python
> >>
> >> from twisted.internet import reactor, protocol, defer
> >> from twisted.mail import imap4
> >>
> >> # change these...
> >> username = '?'
> >> password = '?'
> >> servername = '?'
> >>
> >> def mailboxes(list):
> >>      for flags,sep,mbox in list:
> >>          print mbox
> >>
> >> def loggedin(res, proto):
> >>      d = proto.list('','*')
> >>      d.addCallback(mailboxes)
> >>      return d
> >>
> >> def connected(proto):
> >>      print "connected", proto
> >>      d = proto.login(username, password)
> >>      d.addCallback(loggedin, proto)
> >>      return d
> >>
> >> def failed(f):
> >>      print "failed", f
> >>      return f
> >>
> >> def done(_):
> >>      reactor.callLater(0, reactor.stop)
> >>
> >> def main():
> >>      c = protocol.ClientCreator(reactor, imap4.IMAP4Client)
> >>      d = c.connectTCP(servername, 143)
> >>      d.addCallbacks(connected, failed)
> >>      d.addBoth(done)
> >>
> >> reactor.callLater(0, main)
> >> reactor.run()
> >>
> >>
> >> This example makes use of deferred chaining i.e. returning a deferred
> >> from a callback handler, so you'll want to understand that.
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
>
>
> --
> Alex Clemesha
> clemesha.org
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090612/22b8829b/attachment.html>

From Brendan at BrendanSimon.com  Sat Jun 13 03:30:52 2009
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Sat, 13 Jun 2009 19:30:52 +1000
Subject: [Twisted-Python] serial port and http program
Message-ID: <4A3371CC.6010804@BrendanSimon.com>

I have a small program that I want to write in python with a wxpython gui.

The program has to talk to a hand held device via a serial port and then
talk to a http server which returns an xml stream/file, which is then
parsed and information sent back to the hand held device over the serial
port.

Is there an advantage to using twisted for such an application ??

Is it more complicated to do so (i.e. using twisted versus not using
twisted).

Would it just be an added dependency that would be more of a pain than a
benefit ??

Thanks for any advice.
Brendan.




From Brendan at BrendanSimon.com  Sat Jun 13 05:13:21 2009
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Sat, 13 Jun 2009 21:13:21 +1000
Subject: [Twisted-Python] serial port protocols
Message-ID: <4A3389D1.6030009@BrendanSimon.com>

Can twisted be used to access a serial port on OS X, MS Windows, linux,
etc ???

Is there any support for serial protocols (eg. BISYNC, PPP, etc) ???

Can twisted be used to create custom serial protocols ???

Thanks, Brendan.




From george at ringdevelopment.com  Sat Jun 13 06:02:55 2009
From: george at ringdevelopment.com (George Pauly)
Date: Sat, 13 Jun 2009 08:02:55 -0400
Subject: [Twisted-Python] serial port and http program
In-Reply-To: <4A3371CC.6010804@BrendanSimon.com>
References: <4A3371CC.6010804@BrendanSimon.com>
Message-ID: <1244894575.19787.199.camel@localhost.localdomain>

Brendan,

Asynchronous internet and serial port communication are supported by
Twisted.

You didn't give enough detail to determine that you're looking for
asynchronous communication.  If you're not then Twisted will be an
unnecessary complication.

George


On Sat, 2009-06-13 at 19:30 +1000, Brendan Simon wrote:
> I have a small program that I want to write in python with a wxpython gui.
> 
> The program has to talk to a hand held device via a serial port and then
> talk to a http server which returns an xml stream/file, which is then
> parsed and information sent back to the hand held device over the serial
> port.
> 
> Is there an advantage to using twisted for such an application ??
> 
> Is it more complicated to do so (i.e. using twisted versus not using
> twisted).
> 
> Would it just be an added dependency that would be more of a pain than a
> benefit ??
> 
> Thanks for any advice.
> Brendan.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From james at mansionfamily.plus.com  Sat Jun 13 15:26:48 2009
From: james at mansionfamily.plus.com (James Mansion)
Date: Sat, 13 Jun 2009 22:26:48 +0100
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>
References: <d067ddcf0906092020p1ffb6d3cl1b4143fe9569c404@mail.gmail.com>
	<20090610122345.22176.1897205006.divmod.quotient.4141@henry.divmod.com>
	<20090611062618.12555.209456703.divmod.xquotient.12528@weber.divmod.com>
Message-ID: <4A341998.5010101@mansionfamily.plus.com>

glyph at divmod.com wrote:
> Since I'm seeing more and more messages where someone is top-posting, I 
> think it might be helpful if we sent a more specific example of a 
>   
You could try not being anal about it.  In 2 decades working in 
investment banks I
don't think I've seen a work evironment where it isn't the norm.  Some 
of us even
prefer it.




From exarkun at twistedmatrix.com  Sat Jun 13 22:05:11 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Jun 2009 04:05:11 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1244952311.35.297761201@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090614/501f68f2/attachment.html>

From exarkun at divmod.com  Sat Jun 13 23:05:10 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 14 Jun 2009 01:05:10 -0400
Subject: [Twisted-Python] SerialPort.loseConnection() BUG
In-Reply-To: <4A341998.5010101@mansionfamily.plus.com>
Message-ID: <20090614050510.22176.789766484.divmod.quotient.5250@henry.divmod.com>

On Sat, 13 Jun 2009 22:26:48 +0100, James Mansion <james at mansionfamily.plus.com> wrote:
>glyph at divmod.com wrote:
>> Since I'm seeing more and more messages where someone is top-posting, I
>> think it might be helpful if we sent a more specific example of a
>>
>You could try not being anal about it.  In 2 decades working in
>investment banks I
>don't think I've seen a work evironment where it isn't the norm.  Some
>of us even
>prefer it.
>

Let's not make a big deal out of this, please.  I'm sure we all have
better things to do.

Jean-Paul



From itamar at itamarst.org  Mon Jun 15 07:43:38 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Jun 2009 09:43:38 -0400
Subject: [Twisted-Python] serial port protocols
In-Reply-To: <4A3389D1.6030009@BrendanSimon.com>
References: <4A3389D1.6030009@BrendanSimon.com>
Message-ID: <1245073418.8754.105.camel@pintsize>

On Sat, 2009-06-13 at 21:13 +1000, Brendan Simon wrote:
> Can twisted be used to access a serial port on OS X, MS Windows, linux,
> etc ???

Yes, via the twisted.internet.serial module.

> Is there any support for serial protocols (eg. BISYNC, PPP, etc) ???

You'd have to write them yourself, except for a couple, e.g. Logitech
Serial Mouse
(http://twistedmatrix.com/trac/browser/tags/releases/twisted-8.2.0/twisted/protocols/mice/mouseman.py) and a couple of GPS protocols.

> Can twisted be used to create custom serial protocols ???

Yes. For example,
http://twistedmatrix.com/projects/core/documentation/examples/mouse.py
shows how to use the mouse protocol.




From itamar at itamarst.org  Mon Jun 15 07:45:19 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 15 Jun 2009 09:45:19 -0400
Subject: [Twisted-Python] Question about File Descriptors
In-Reply-To: <134022.27032.qm@web34203.mail.mud.yahoo.com>
References: <134022.27032.qm@web34203.mail.mud.yahoo.com>
Message-ID: <1245073519.8754.107.camel@pintsize>

On Fri, 2009-06-12 at 06:50 -0700, Andrew Francis wrote:

> What are the memory ramifications (i.e, I raise the max descriptor
> count to 65535)? 

The memory in use by your own Python objects will probably take the most
memory, so you'll need to figure that out on your own.

> Also should I move to the EPoll reactor?

Yes, it'll be either impossible (with select) or really slow (poll)
otherwise once you get pass a few thousand descriptors.




From andrewfr_ice at yahoo.com  Mon Jun 15 12:35:46 2009
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 15 Jun 2009 11:35:46 -0700 (PDT)
Subject: [Twisted-Python] Question about File Descriptors
Message-ID: <376411.73462.qm@web34205.mail.mud.yahoo.com>


Hi Itamar:

--- On Mon, 6/15/09, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com> wrote:

> Message: 2
> Date: Mon, 15 Jun 2009 09:45:19 -0400
> From: Itamar Shtull-Trauring <itamar at itamarst.org>
> Subject: Re: [Twisted-Python] Question about File
> Descriptors
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Message-ID: <1245073519.8754.107.camel at pintsize>
> Content-Type: text/plain

IST> The memory in use by your own Python objects will probably
IST> take the most memory, so you'll need to figure that out on your own.

Thanks for the feedback! Yes. It would be good to figure out how much 
memory a tasklet and a deferred use. However I was worried about how 
much more kernel memory is used up when one increases the descriptors. 
This info would be useful in helping me decide whether to use a small
or large memory model. I guess I'll wing it.

I will also assume it would be good to recompile Python?

AF> Also should I move to the EPoll reactor?

IST> Yes, it'll be either impossible (with select) or really
IST> slow (poll)
IST> otherwise once you get pass a few thousand descriptors.

Thanks for the advice, will do.

Cheers,
Andrew



      



From petshmidt at googlemail.com  Tue Jun 16 05:23:17 2009
From: petshmidt at googlemail.com (Pet)
Date: Tue, 16 Jun 2009 13:23:17 +0200
Subject: [Twisted-Python] can addCallback accept list of deferreds?
Message-ID: <b460e9630906160423x2bf6c95dh9d54908053fe8b62@mail.gmail.com>

Hi,

I'm trying to process several items in callback function writeLog
            d.addCallback(self.writeLog,g=g)
see below.

Can writeLog return DeferredList instead of Deferred?
WriteLog should run several inserts into db (some of which may fail).
Or am I completely wrong here?

Thanks, Pet

def getData(self, *args, **kwargs ):
    try:
        g = MyClass(self.db)
        d = self.getResult(params=kwargs['params'], g=g)
        if d:
            d.addCallback(self.sendResult)
            d.addErrback(log.err)

            d.addCallback(self.writeLog,g=g)
            d.addErrback(log.err)

            return d
    except Exception, e:
        log.msg('Unknown error in getData:', e)
        return False


def writeLog(self, *args, **kwargs):
    g = kwargs['g']
    dlist = [self.wLog(g, p) for p in g.list]
    d = DeferredList(dlist, consumeErrors=True).addCallback(log.err)
    return d

def wLog(self, g, p):
    return self.db.runInteraction(g.insertLog,p)



From artman328 at gmail.com  Tue Jun 16 08:11:00 2009
From: artman328 at gmail.com (=?GB2312?B?zNXS1bfy?=)
Date: Tue, 16 Jun 2009 22:11:00 +0800
Subject: [Twisted-Python] High Concurrency
Message-ID: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>

Hi,
I want to use twisted to write a server which is to get purchase orders from
about tens of thousands clients sent by wireless net work (tcp protocol) and
store the orders into a DBMS system. I wonder if it is possible and how to
deal with the high concurrency.

any idea?

thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090616/7ac90a19/attachment.html>

From exarkun at divmod.com  Tue Jun 16 08:39:36 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 16 Jun 2009 10:39:36 -0400
Subject: [Twisted-Python] can addCallback accept list of deferreds?
In-Reply-To: <b460e9630906160423x2bf6c95dh9d54908053fe8b62@mail.gmail.com>
Message-ID: <20090616143936.22176.1964068673.divmod.quotient.6003@henry.divmod.com>

On Tue, 16 Jun 2009 13:23:17 +0200, Pet <petshmidt at googlemail.com> wrote:
>Hi,
>
>I'm trying to process several items in callback function writeLog
>            d.addCallback(self.writeLog,g=g)
>see below.
>
>Can writeLog return DeferredList instead of Deferred?

Yes, it can.  Deferred and DeferredList are mostly interchangeable.

Jean-Paul



From nestor at tiendalinux.com  Tue Jun 16 11:37:52 2009
From: nestor at tiendalinux.com (Nestor A. Diaz)
Date: Tue, 16 Jun 2009 12:37:52 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG Still
In-Reply-To: <d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>
	<d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
Message-ID: <4A37D870.7020300@tiendalinux.com>

Hello, i had wrapper the loseConnection method, but it still throws the 
same excepcion:

class MySerialPort ( SerialPort ) :

    def __init__(self, the_protocol, port, reactor):
# type, host and port are used for my own purposes.
        self.type = "Local"
        self.host = None
        self.port = port
        SerialPort.__init__ (self, the_protocol, port, reactor)

    def loseConnection(self):
      
        # Fix
        self.protocol.transport.flushInput()
        self.protocol.transport.flushOutput()
       
        # call upper class method
        SerialPort.loseConnection (self)


at least under windows, when i call: serial_port.loseConnection()

Traceback (most recent call last):
  File "C:\Python24\Lib\site-packages\twisted\python\log.py", line 84, 
in callWithLogger
    return callWithContext({"system": lp}, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\log.py", line 69, 
in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\context.py", line 
59, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File "C:\Python24\Lib\site-packages\twisted\python\context.py", line 
37, in callWithContext
    return func(*args,**kw)
--- <exception caught here> ---
  File 
"C:\Python24\Lib\site-packages\twisted\internet\win32eventreactor.py", 
line 194, in _runWrite
    closed = fd.doWrite()
  File "C:\Python24\Lib\site-packages\twisted\internet\abstract.py", 
line 101, in doWrite
    self.dataBuffer = buffer(self.dataBuffer, self.offset) + 
"".join(self._tempDataBuffer)
exceptions.AttributeError: 'MySerialPort' object has no attribute 
'_tempDataBuffer'

Slds.

-- 
Nestor A. Diaz
Ingeniero de Sistemas
Tel. +57 1-600-5490 x 211
Cel. +57 316-227-3593
Tel. SIP: sip:211 at tiendalinux.com
Email/MSN: nestor at tiendalinux.com
http://www.tiendalinux.com/
Bogota, Colombia 




From itamar at itamarst.org  Wed Jun 17 13:31:15 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 17 Jun 2009 15:31:15 -0400 (EDT)
Subject: [Twisted-Python] High Concurrency
In-Reply-To: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>
References: <781411b30906160711y24d8d0det68ca8fcf581b1f5b@mail.gmail.com>
Message-ID: <48018.63.107.91.99.1245267075.squirrel@webmail.zoteca.com>

> Hi,
> I want to use twisted to write a server which is to get purchase orders
> from
> about tens of thousands clients sent by wireless net work (tcp protocol)
> and
> store the orders into a DBMS system. I wonder if it is possible and how to
> deal with the high concurrency.

It is possible.

Dealing with concurrency depends on how many clients will be connected at
a given time, and how many requests you'll need to process in parallel. If
all of them, you'll probably want Linux with epoll reactor, and it may be
you'll need a distributed architecture with multiple servers.




From Benjamin.Rutt at gs.com  Wed Jun 17 13:47:38 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Wed, 17 Jun 2009 15:47:38 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>

I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
python tree).  One of my users is complaining that when he uses trial to
test some twisted programs, although his test passes, he has to stare at
a stack trace like this which mentions dropin.cache.new failing to be
written:

$ cat foo.py
#!/sw/external/python-2.6.1/bin/python

from twisted.trial import unittest

class MyTestClass(unittest.TestCase):
    def test_foobar(self):
        print 'hello, world!'
        self.failUnless(1 == 1)
$ /sw/external/twisted-8.2.0/bin/trial ./foo.py
/sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
DeprecationWarning: the md5 module is deprecated; use hashlib instead
  import os, md5, sys
/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
DeprecationWarning: the sha module is deprecated; use the hashlib module
instead
  import sha
/sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
SyntaxWarning: assertion is always true, perhaps remove parentheses?
  assert (oldChild.parentNode is self,
Traceback (most recent call last):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py",
line 241, in parseOptions
    self.postOptions()
  File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
line 293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
line 279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line
200, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line
179, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py", line
623, in setContent
    f = sib.open('w')
  File
"/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py", line
433, in open
    return open(self.path, mode+'b')
exceptions.IOError: [Errno 30] Read-only file system:
'/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
foo
  MyTestClass
    test_foobar ... hello, world!
                                                       [OK]

------------------------------------------------------------------------
-------
Ran 1 tests in 0.023s

PASSED (successes=1)

I would consider this to be an install bug.  Evidently, trial uses
plugins, which upon reading
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#a
uto3 I find that plugins need up-to-date dropin.cache files to be built,
or else they'll be built dynamically; the latter step fails in my case
due to my site-wide install being on a read-only directory.  The docs
say "when installing or removing software which provides Twisted
plugins, the site administrator should be sure the cache is
regenerated"; however all I did was install twisted itself, not any
specific plugins.  All I did to install twisted was 'python setup.py
install --home=...' and at no later point did I ever add new plugins to
it.  Why can't the install take care of initial dropin.cache generation
for me?

I see a related issue http://twistedmatrix.com/trac/ticket/2409.

Regardless of whether ticket 2409 goes anywhere, should I raise an issue
that the install should really take care of initial dropin.cache
generation, much like python install takes care of std lib .py->.pyc
generation?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090617/d7b81071/attachment.html>

From happybrowndog at hotmail.com  Wed Jun 17 14:32:19 2009
From: happybrowndog at hotmail.com (hbd)
Date: Wed, 17 Jun 2009 13:32:19 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
Message-ID: <h1bjvv$8ne$1@ger.gmane.org>

Is there any reason why I am getting this error when I try to get 
perspective broker to be on port 80?

twisted.internet.error.CannotListenError: Couldn't listen on any:80: 
(13, 'Permission denied').

I made sure port 80 was not used by Apache or anything else by checking 
with netstat.

Here is the relevant pieces of twisted code:

application = twisted.application.service.Application("eventserver")

rpcservice = TheService()
flashservice = XMLSocket(FlashReceiver)

myServiceCollection = 
twisted.application.service.IServiceCollection(application)

portalmonitor = portal.Portal(DefaultRealm())
dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
dbu.addUser("user1","pass1")
portalmonitor.registerChecker(dbu)

internet.TCPServer(5002, 
server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection) 

internet.SSLServer(80, 
pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection) 

internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)




From clemesha at gmail.com  Wed Jun 17 14:41:44 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 13:41:44 -0700
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>

Hi,

Just type "sudo twistd" and the errors will go away.
(You may already know of this work-around)

 I agree with you that it would be nice for these to never show up in
the first place.
I looked at the ticket you mention, but it seems that the cleaner solution
would be to resolve these issues at install/upgrade time.


-Alex


On Wed, Jun 17, 2009 at 12:47 PM, Rutt, Benjamin<Benjamin.Rutt at gs.com> wrote:
> I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
> python tree).  One of my users is complaining that when he uses trial to
> test some twisted programs, although his test passes, he has to stare at a
> stack trace like this which mentions dropin.cache.new failing to be written:
>
> $ cat foo.py
> #!/sw/external/python-2.6.1/bin/python
>
> from twisted.trial import unittest
>
> class MyTestClass(unittest.TestCase):
>     def test_foobar(self):
>         print 'hello, world!'
>         self.failUnless(1 == 1)
> $ /sw/external/twisted-8.2.0/bin/trial ./foo.py
> /sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
> DeprecationWarning: the md5 module is deprecated; use hashlib instead
>
>   import os, md5, sys
> /sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
> DeprecationWarning: the sha module is deprecated; use the hashlib module
> instead
>
>   import sha
> /sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
> SyntaxWarning: assertion is always true, perhaps remove parentheses?
>
>   assert (oldChild.parentNode is self,
> Traceback (most recent call last):
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py", line
> 241, in parseOptions
>     self.postOptions()
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
> line 293, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
> line 279, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 200,
> in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 179,
> in getCache
>     dropinPath.setContent(pickle.dumps(dropinDotCache))
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
> line 623, in setContent
>     f = sib.open('w')
>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
> line 433, in open
>     return open(self.path, mode+'b')
> exceptions.IOError: [Errno 30] Read-only file system:
> '/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
>
> foo
>   MyTestClass
>     test_foobar ... hello, world!
>                                                        [OK]
>
> -------------------------------------------------------------------------------
> Ran 1 tests in 0.023s
>
> PASSED (successes=1)
>
> I would consider this to be an install bug.  Evidently, trial uses plugins,
> which upon reading
> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
> I find that plugins need up-to-date dropin.cache files to be built, or else
> they'll be built dynamically; the latter step fails in my case due to my
> site-wide install being on a read-only directory.  The docs say "when
> installing or removing software which provides Twisted plugins, the site
> administrator should be sure the cache is regenerated"; however all I did
> was install twisted itself, not any specific plugins.  All I did to install
> twisted was 'python setup.py install --home=...' and at no later point did I
> ever add new plugins to it.  Why can't the install take care of initial
> dropin.cache generation for me?
>
> I see a related issue http://twistedmatrix.com/trac/ticket/2409.
>
> Regardless of whether ticket 2409 goes anywhere, should I raise an issue
> that the install should really take care of initial dropin.cache generation,
> much like python install takes care of std lib .py->.pyc generation?
>
> Thanks.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Wed Jun 17 14:45:35 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 17 Jun 2009 16:45:35 -0400
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>

On Jun 17, 2009, at 4:32 PM, hbd wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by  
> checking
> with netstat.

Probably not a Twisted issue. You need to be root to bind to a port  
less than 1024. Try it with sudo.

-phil





From clemesha at gmail.com  Wed Jun 17 14:48:00 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 13:48:00 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <d272f0690906171348wb9b1915n8cb23e42764cbda1@mail.gmail.com>

On Wed, Jun 17, 2009 at 1:32 PM, hbd<happybrowndog at hotmail.com> wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').

Are you running this at root? Aka "sudo twistd ...".

Specifically:
Programs written to listen on a port number lower than 1024 must
be executed with root privilege (that is, UID 0)


-Alex




> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection =
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002,
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection)
>
> internet.SSLServer(80,
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection)
>
> internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Alex Clemesha
clemesha.org



From deldotdr at gmail.com  Wed Jun 17 14:48:14 2009
From: deldotdr at gmail.com (Dorian Raymer)
Date: Wed, 17 Jun 2009 13:48:14 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <ea3c455d0906171348n28aee70eo7270154fe19bf8ba@mail.gmail.com>

If you want to run PB on port 80, you need to start twistd with root
privileges.

Do you really want to serve PB on port 80?
You probably want to serve it on an un-privileged port (> 1023). I think the
spread source suggests 8787 as the port to use for a PBServer.

-Dorian

On Wed, Jun 17, 2009 at 1:32 PM, hbd <happybrowndog at hotmail.com> wrote:

> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection =
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002,
>
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection)
>
> internet.SSLServer(80,
>
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection)
>
> internet.TCPServer(5001,
> flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090617/add8e9fe/attachment.html>

From radix at twistedmatrix.com  Wed Jun 17 14:50:54 2009
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 17 Jun 2009 16:50:54 -0400
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <60ed19d40906171350r5f934f5dh1ae35d2d294377da@mail.gmail.com>

\On Wed, Jun 17, 2009 at 4:32 PM, hbd<happybrowndog at hotmail.com> wrote:
> Is there any reason why I am getting this error when I try to get
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking
> with netstat.


On Linux (and probably some other unixes), only root can bind to ports
<= 1024. A common solution is to use the 'authbind' program, or to
just run your program as root and then drop privileges after you bind
to the port. twistd supports that with the --uid and --gid parameters.


-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
http://canonical.com/



From orlenko at gmail.com  Wed Jun 17 15:00:00 2009
From: orlenko at gmail.com (Volodymyr Orlenko)
Date: Wed, 17 Jun 2009 14:00:00 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <h1bjvv$8ne$1@ger.gmane.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
Message-ID: <4A395950.9060002@gmail.com>

Try running as root (so you can bind to the privileged ports).


On 17/06/2009 1:32 PM, hbd wrote:
> Is there any reason why I am getting this error when I try to get 
> perspective broker to be on port 80?
>
> twisted.internet.error.CannotListenError: Couldn't listen on any:80: 
> (13, 'Permission denied').
>
> I made sure port 80 was not used by Apache or anything else by checking 
> with netstat.
>
> Here is the relevant pieces of twisted code:
>
> application = twisted.application.service.Application("eventserver")
>
> rpcservice = TheService()
> flashservice = XMLSocket(FlashReceiver)
>
> myServiceCollection = 
> twisted.application.service.IServiceCollection(application)
>
> portalmonitor = portal.Portal(DefaultRealm())
> dbu=twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse()
> dbu.addUser("user1","pass1")
> portalmonitor.registerChecker(dbu)
>
> internet.TCPServer(5002, 
> server.Site(rpcservice.getResource())).setServiceParent(myServiceCollection) 
>
> internet.SSLServer(80, 
> pb.PBServerFactory(portalmonitor),ssl.DefaultOpenSSLContextFactory('privkey.pem','cacert.pem')).setServiceParent(myServiceCollection) 
>
> internet.TCPServer(5001, flashservice).setServiceParent(myServiceCollection)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   



From happybrowndog at hotmail.com  Wed Jun 17 15:00:06 2009
From: happybrowndog at hotmail.com (hbd)
Date: Wed, 17 Jun 2009 14:00:06 -0700
Subject: [Twisted-Python] Twisted perspective broker on port 80, problem
In-Reply-To: <65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>
References: <h1bjvv$8ne$1@ger.gmane.org>
	<65DE725A-2DDB-4DA1-871D-0725709DD19D@bubblehouse.org>
Message-ID: <h1blk1$e5a$1@ger.gmane.org>

Thanks to all of you!  Indeed I needed to be root.


Phil Christensen wrote:
> On Jun 17, 2009, at 4:32 PM, hbd wrote:
>> Is there any reason why I am getting this error when I try to get
>> perspective broker to be on port 80?
>>
>> twisted.internet.error.CannotListenError: Couldn't listen on any:80:
>> (13, 'Permission denied').
>>
>> I made sure port 80 was not used by Apache or anything else by  
>> checking
>> with netstat.
> 
> Probably not a Twisted issue. You need to be root to bind to a port  
> less than 1024. Try it with sudo.
> 
> -phil




From clemesha at gmail.com  Wed Jun 17 15:37:01 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Wed, 17 Jun 2009 14:37:01 -0700
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
Message-ID: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>

On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
> Hi,
>
> Just type "sudo twistd" and the errors will go away.
> (You may already know of this work-around)
>
>  I agree with you that it would be nice for these to never show up in
> the first place.
> I looked at the ticket you mention, but it seems that the cleaner solution
> would be to resolve these issues at install/upgrade time.

Just to follow up on this a bit more, reading from here:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
in the section "Plugin Caching", there is this quote:

"""
[snip]... when installing or removing software which provides Twisted
plugins, the site administrator should be sure the cache is
regenerated. Well-behaved package managers for such software should
take this task upon themselves, since it is trivially automatable.
"""

The way I read this, requiring the site admin to run "sudo twistd" to
regenerate the cache file is a feature, not a bug.
Twisted devs: is this the case?  Still maybe the install should do the
"trivially automatable" bit?

I don't have a strong opinion either way, as I'm just now learning
about the details of all this.
thanks,
Alex





>
>
> -Alex
>
>
> On Wed, Jun 17, 2009 at 12:47 PM, Rutt, Benjamin<Benjamin.Rutt at gs.com> wrote:
>> I recently installed python-2.6.1 and then twisted-8.2.0 (outside of the
>> python tree).  One of my users is complaining that when he uses trial to
>> test some twisted programs, although his test passes, he has to stare at a
>> stack trace like this which mentions dropin.cache.new failing to be written:
>>
>> $ cat foo.py
>> #!/sw/external/python-2.6.1/bin/python
>>
>> from twisted.trial import unittest
>>
>> class MyTestClass(unittest.TestCase):
>>     def test_foobar(self):
>>         print 'hello, world!'
>>         self.failUnless(1 == 1)
>> $ /sw/external/twisted-8.2.0/bin/trial ./foo.py
>> /sw/external/twisted-8.2.0/lib/python/twisted/persisted/sob.py:12:
>> DeprecationWarning: the md5 module is deprecated; use hashlib instead
>>
>>   import os, md5, sys
>> /sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py:12:
>> DeprecationWarning: the sha module is deprecated; use the hashlib module
>> instead
>>
>>   import sha
>> /sw/external/twisted-8.2.0/lib/python/twisted/web/microdom.py:181:
>> SyntaxWarning: assertion is always true, perhaps remove parentheses?
>>
>>   assert (oldChild.parentNode is self,
>> Traceback (most recent call last):
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/usage.py", line
>> 241, in parseOptions
>>     self.postOptions()
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
>> line 293, in postOptions
>>     self['reporter'] = self._loadReporterByName(self['reporter'])
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/scripts/trial.py",
>> line 279, in _loadReporterByName
>>     for p in plugin.getPlugins(itrial.IReporter):
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 200,
>> in getPlugins
>>     allDropins = getCache(package)
>> --- <exception caught here> ---
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/plugin.py", line 179,
>> in getCache
>>     dropinPath.setContent(pickle.dumps(dropinDotCache))
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
>> line 623, in setContent
>>     f = sib.open('w')
>>   File "/sw/external/twisted-8.2.0/lib/python/twisted/python/filepath.py",
>> line 433, in open
>>     return open(self.path, mode+'b')
>> exceptions.IOError: [Errno 30] Read-only file system:
>> '/sw/external/twisted-8.2.0/lib/python/twisted/plugins/dropin.cache.new'
>>
>> foo
>>   MyTestClass
>>     test_foobar ... hello, world!
>>                                                        [OK]
>>
>> -------------------------------------------------------------------------------
>> Ran 1 tests in 0.023s
>>
>> PASSED (successes=1)
>>
>> I would consider this to be an install bug.  Evidently, trial uses plugins,
>> which upon reading
>> http://twistedmatrix.com/projects/core/documentation/howto/plugin.html#auto3
>> I find that plugins need up-to-date dropin.cache files to be built, or else
>> they'll be built dynamically; the latter step fails in my case due to my
>> site-wide install being on a read-only directory.  The docs say "when
>> installing or removing software which provides Twisted plugins, the site
>> administrator should be sure the cache is regenerated"; however all I did
>> was install twisted itself, not any specific plugins.  All I did to install
>> twisted was 'python setup.py install --home=...' and at no later point did I
>> ever add new plugins to it.  Why can't the install take care of initial
>> dropin.cache generation for me?
>>
>> I see a related issue http://twistedmatrix.com/trac/ticket/2409.
>>
>> Regardless of whether ticket 2409 goes anywhere, should I raise an issue
>> that the install should really take care of initial dropin.cache generation,
>> much like python install takes care of std lib .py->.pyc generation?
>>
>> Thanks.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
>
>
> --
> Alex Clemesha
> clemesha.org
>



-- 
Alex Clemesha
clemesha.org



From ltaylor.volks at gmail.com  Wed Jun 17 16:52:47 2009
From: ltaylor.volks at gmail.com (Lucas Taylor)
Date: Wed, 17 Jun 2009 17:52:47 -0500
Subject: [Twisted-Python] SerialPort.loseConnection() BUG Still
In-Reply-To: <4A37D870.7020300@tiendalinux.com>
References: <d067ddcf0906110111yc6ac50bs76e5d024d06bee58@mail.gmail.com>	<20090611121706.22176.1585061078.divmod.quotient.4399@henry.divmod.com>	<d067ddcf0906111939m5f92ac7n9931e2079eada59c@mail.gmail.com>
	<4A37D870.7020300@tiendalinux.com>
Message-ID: <4A3973BF.6000002@gmail.com>

On 6/16/09 12:37 PM, Nestor A. Diaz wrote:
> Hello, i had wrapper the loseConnection method, but it still throws the 
> same excepcion:
> 
> class MySerialPort ( SerialPort ) :
> 
>     def __init__(self, the_protocol, port, reactor):
> # type, host and port are used for my own purposes.
>         self.type = "Local"
>         self.host = None
>         self.port = port
>         SerialPort.__init__ (self, the_protocol, port, reactor)
> 
>     def loseConnection(self):
>       
>         # Fix
>         self.protocol.transport.flushInput()
>         self.protocol.transport.flushOutput()
>        
>         # call upper class method
>         SerialPort.loseConnection (self)
> 
> 
> at least under windows, when i call: serial_port.loseConnection()
> 
> Traceback (most recent call last):
<snip>
>   File "C:\Python24\Lib\site-packages\twisted\internet\abstract.py", 
> line 101, in doWrite
>     self.dataBuffer = buffer(self.dataBuffer, self.offset) + 
> "".join(self._tempDataBuffer)
> exceptions.AttributeError: 'MySerialPort' object has no attribute 
> '_tempDataBuffer'
> 
> Slds.
> 

Looks like you are running into this bug:
http://twistedmatrix.com/trac/ticket/1248

I wish I could be more helpful, but at least you know it's a known issue
and where to start addressing it.






From exarkun at divmod.com  Wed Jun 17 18:56:48 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 17 Jun 2009 20:56:48 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
 twisted-8.2.0
In-Reply-To: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>
Message-ID: <20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>

On Wed, 17 Jun 2009 14:37:01 -0700, Alex Clemesha <clemesha at gmail.com> wrote:
>On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
>> Hi,
>>
>> Just type "sudo twistd" and the errors will go away.
>> (You may already know of this work-around)
>>
>>  I agree with you that it would be nice for these to never show up in
>> the first place.
>> I looked at the ticket you mention, but it seems that the cleaner solution
>> would be to resolve these issues at install/upgrade time.
>
>Just to follow up on this a bit more, reading from here:
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>in the section "Plugin Caching", there is this quote:
>
>"""
>[snip]... when installing or removing software which provides Twisted
>plugins, the site administrator should be sure the cache is
>regenerated. Well-behaved package managers for such software should
>take this task upon themselves, since it is trivially automatable.
>"""
>
>The way I read this, requiring the site admin to run "sudo twistd" to
>regenerate the cache file is a feature, not a bug.
>Twisted devs: is this the case?  Still maybe the install should do the
>"trivially automatable" bit?

The "package managers" referred to in that document are things like dpkg
and rpm which easily support running arbitrary code after installation.

It's rather difficult to automate with distutils, though (which is how
the original poster installed Twisted, I am assuming).  However, if
someone figures out how, a patch will be accepted happily. :)

Jean-Paul



From glyph at divmod.com  Wed Jun 17 23:18:36 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 18 Jun 2009 05:18:36 -0000
Subject: [Twisted-Python] Dropin.cache errors after clean install
	of	twisted-8.2.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>


On 17 Jun, 07:47 pm, benjamin.rutt at gs.com wrote:
>I recently installed python-2.6.1 and then twisted-8.2.0 (outside of 
>the
>python tree).  One of my users is complaining that when he uses trial 
>to
>test some twisted programs, although his test passes, he has to stare 
>at
>a stack trace like this which mentions dropin.cache.new failing to be
>written:

How did you install Twisted?  What distribution are you using?
>I would consider this to be an install bug.  Evidently, trial uses
>plugins, (...)

I would also consider this to be an installer bug.
>Regardless of whether ticket 2409 goes anywhere, should I raise an 
>issue
>that the install should really take care of initial dropin.cache
>generation, much like python install takes care of std lib .py->.pyc
>generation?

No need to open a new ticket.  Here's the one you're looking for:

    http://twistedmatrix.com/trac/ticket/2410

It would be very helpful if you would add a patch for this ticket, 
though; I'll go so far as to personally volunteer to review it until 
it's done if you do.

However, that ticket is somewhat anemic in its description of the 
problem.  Please be aware that distutils doesn't support post-install 
hooks in a general way (it leaves things up to the various 'bdist_' 
plugins), so it's hard to do this in a way which is unambiguously 
correct.  For example, the way post-installation scripts are specified 
to bdist_wininst, bdist_rpm, and bdist_msi are all subtly different. 
Also, the debian and redhat packages for twisted use 'setup.py install' 
but install to a different root, and then have their own custom post- 
installation hooks.  I'm sure that other packages (gentoo, for example) 
probably invoke setup.py as well, in slightly different ways.  bdist_egg 
doesn't allow for post-installation hooks *at all*, as you can see from 
<http://bugs.python.org/setuptools/issue41>.  So something that modified 
the behavior of setup.py install would have to carefully encapsulate its 
post-install hook and only invoke it if appropriate.

If you manage to circumnavigate all this nonsense and produce a nice, 
simple post-install hook with some unit tests, you will be a Twisted 
hero :).



From atrawog at gmail.com  Thu Jun 18 01:44:58 2009
From: atrawog at gmail.com (Andreas Trawoeger)
Date: Thu, 18 Jun 2009 09:44:58 +0200
Subject: [Twisted-Python] Need help with writing a secure Iran Proxy
Message-ID: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>

Hi!

Could I kindly ask all the Twisted Gurus to take a look Austin Heaps Best
Proxy Practices
for Iran http://blog.austinheap.com/

The current setup (Squid & iptables) everybody uses is extremely complicated
to setup and it should be trivial to implement the requirements in Twisted.
Turn it into an egg and allow everybody to simple type easy_install
iranproxy.

I know a little bit of Twisted, because I'm an avid Zenoss user and in
different circumstanced I would write the proxy on my own. But in this case
a safe implementation is a real must and I'm really worried to make some
stupid beginner mistakes.

So some (example) code and links to websites I should read would be greatly
appreciated.


Thanks to everybody!

cu andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090618/f8ab14fb/attachment.html>

From mardiros at laposte.net  Thu Jun 18 04:07:20 2009
From: mardiros at laposte.net (mardiros)
Date: Thu, 18 Jun 2009 12:07:20 +0200 (CEST)
Subject: [Twisted-Python] AsyncQueue is still unavailable
Message-ID: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>

I everyone,

I have too write a network application, and I think twisted is the best choice for it!

I need to do some sql transaction, and I prefer too use an ORM too request the DB.
But the server I have to connect is an SqlServer,
so sqlalchemy is, I think the best choice.

And every google search get back to AsyncQueue
http://foss.eepatents.com/AsynQueue

But the site is done since a few moment.
Does anybody have news about this project ?
Is it still alive ? Which alternative ?

Thanks.

mardiros

 Créez votre adresse électronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus intégrés.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090618/9d97ea4d/attachment.html>

From jeandaniel.browne at gmail.com  Thu Jun 18 05:38:09 2009
From: jeandaniel.browne at gmail.com (Jean Daniel)
Date: Thu, 18 Jun 2009 13:38:09 +0200
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
Message-ID: <b61c19e70906180438y66373fc7m8713395406439d17@mail.gmail.com>

The Storm ORM is popular, has talented people working on it and is
planning to merge the MS SQL backend (available on launchpad) from the
company called Zeomega.

https://storm.canonical.com/
https://code.launchpad.net/~zeomega

Storm and Twisted can be used together, see this thread:
https://lists.ubuntu.com/archives/storm/2009-April/000951.html

Cheers,


On Thu, Jun 18, 2009 at 12:07 PM, mardiros<mardiros at laposte.net> wrote:
> I everyone,
>
> I have too write a network application, and I think twisted is the best
> choice for it!
>
> I need to do some sql transaction, and I prefer too use an ORM too request
> the DB.
> But the server I have to connect is an SqlServer,
> so sqlalchemy is, I think the best choice.
>
> And every google search get back to AsyncQueue
> http://foss.eepatents.com/AsynQueue
>
> But the site is done since a few moment.
> Does anybody have news about this project ?
> Is it still alive ? Which alternative ?
>
> Thanks.
>
> mardiros
>
> Créez votre adresse électronique prenom.nom at laposte.net
> 1 Go d'espace de stockage, anti-spam et anti-virus intégrés.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Rasterization Zion babylon



From Benjamin.Rutt at gs.com  Thu Jun 18 08:55:00 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 10:55:00 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install
	oftwisted-8.2.0
In-Reply-To: <d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<d272f0690906171341x72dd6bc2n3e8c66ffa6b0cfeb@mail.gmail.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D10@gsmbnbp22es.firmwide.corp.gs.com>

I don't have root, so 'sudo twistd' won't help.  And as I said, it's a
read-only filesystem I was testing on; root wouldn't help anyway.  But I
could redo my twisted install, and after typing 'python setup.py install
--home=...' try just running twistd one time as you suggest, or do
python -c 'from twisted.plugin import IPlugin, getPlugins;
list(getPlugins(IPlugin))' as the docs suggest.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alex
Clemesha
Sent: Wednesday, June 17, 2009 4:42 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean install
oftwisted-8.2.0

Hi,

Just type "sudo twistd" and the errors will go away.
(You may already know of this work-around)

 I agree with you that it would be nice for these to never show up in
the first place.
I looked at the ticket you mention, but it seems that the cleaner
solution
would be to resolve these issues at install/upgrade time.


-Alex



From Benjamin.Rutt at gs.com  Thu Jun 18 08:55:46 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 10:55:46 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean install of
	twisted-8.2.0
In-Reply-To: <20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>
References: <d272f0690906171437j73e3019bgff13989a48d5569e@mail.gmail.com>
	<20090618005648.22176.91810916.divmod.quotient.6820@henry.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D14@gsmbnbp22es.firmwide.corp.gs.com>

Yes, I installed originally with distutils, i.e. 'python setup.py install --home=...'

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Jean-Paul Calderone
Sent: Wednesday, June 17, 2009 8:57 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean install of twisted-8.2.0

On Wed, 17 Jun 2009 14:37:01 -0700, Alex Clemesha <clemesha at gmail.com> wrote:
>On Wed, Jun 17, 2009 at 1:41 PM, Alex Clemesha<clemesha at gmail.com> wrote:
>> Hi,
>>
>> Just type "sudo twistd" and the errors will go away.
>> (You may already know of this work-around)
>>
>>  I agree with you that it would be nice for these to never show up in
>> the first place.
>> I looked at the ticket you mention, but it seems that the cleaner solution
>> would be to resolve these issues at install/upgrade time.
>
>Just to follow up on this a bit more, reading from here:
>http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
>in the section "Plugin Caching", there is this quote:
>
>"""
>[snip]... when installing or removing software which provides Twisted
>plugins, the site administrator should be sure the cache is
>regenerated. Well-behaved package managers for such software should
>take this task upon themselves, since it is trivially automatable.
>"""
>
>The way I read this, requiring the site admin to run "sudo twistd" to
>regenerate the cache file is a feature, not a bug.
>Twisted devs: is this the case?  Still maybe the install should do the
>"trivially automatable" bit?

The "package managers" referred to in that document are things like dpkg
and rpm which easily support running arbitrary code after installation.

It's rather difficult to automate with distutils, though (which is how
the original poster installed Twisted, I am assuming).  However, if
someone figures out how, a patch will be accepted happily. :)

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Benjamin.Rutt at gs.com  Thu Jun 18 09:09:07 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 18 Jun 2009 11:09:07 -0400
Subject: [Twisted-Python] Dropin.cache errors after clean
	installof	twisted-8.2.0
In-Reply-To: <20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361F4D47A8@gsmbnbp22es.firmwide.corp.gs.com>
	<20090618051836.12555.2104995843.divmod.xquotient.12754@weber.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361F4D4D66@gsmbnbp22es.firmwide.corp.gs.com>

I installed twisted on linux (RHEL4), solx86 and solsparc using 'python
setup.py install --home=...'.  

I looked at ticket 2410.  I see that you added a thorough summary of the
problem recently on that ticket - thank you.  While I would like to help
if I could, I'm afraid I don't know enough about the python packaging
technical details to be of much use.  Was not aware setup.py could not
run arbitrary code at the end.  Thanks for the discussion - I'll work
around it as needed via python -c 'from twisted.plugin import IPlugin,
getPlugins; list(getPlugins(IPlugin))' as a post-install hook of my own.

Until a solution emerges, I suppose the INSTALL file in the root of the
distribution could contain this text?

  * Other
    As with other Python packages, the standard way of installing from
source
    is:

      python setup.py install

    If you install from source you may wish to generate the plugin
cache, post-install, via:

      python -c 'from twisted.plugin import IPlugin, getPlugins;
list(getPlugins(IPlugin))'

    See
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
for more details.

Although it would complicate the INSTALL file quite a bit for an
admittedly minor issue.  Thanks.

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Thursday, June 18, 2009 1:19 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Dropin.cache errors after clean installof
twisted-8.2.0


On 17 Jun, 07:47 pm, benjamin.rutt at gs.com wrote:
>I recently installed python-2.6.1 and then twisted-8.2.0 (outside of 
>the
>python tree).  One of my users is complaining that when he uses trial 
>to
>test some twisted programs, although his test passes, he has to stare 
>at
>a stack trace like this which mentions dropin.cache.new failing to be
>written:

How did you install Twisted?  What distribution are you using?
>I would consider this to be an install bug.  Evidently, trial uses
>plugins, (...)

I would also consider this to be an installer bug.
>Regardless of whether ticket 2409 goes anywhere, should I raise an 
>issue
>that the install should really take care of initial dropin.cache
>generation, much like python install takes care of std lib .py->.pyc
>generation?

No need to open a new ticket.  Here's the one you're looking for:

    http://twistedmatrix.com/trac/ticket/2410

It would be very helpful if you would add a patch for this ticket, 
though; I'll go so far as to personally volunteer to review it until 
it's done if you do.

However, that ticket is somewhat anemic in its description of the 
problem.  Please be aware that distutils doesn't support post-install 
hooks in a general way (it leaves things up to the various 'bdist_' 
plugins), so it's hard to do this in a way which is unambiguously 
correct.  For example, the way post-installation scripts are specified 
to bdist_wininst, bdist_rpm, and bdist_msi are all subtly different. 
Also, the debian and redhat packages for twisted use 'setup.py install' 
but install to a different root, and then have their own custom post- 
installation hooks.  I'm sure that other packages (gentoo, for example) 
probably invoke setup.py as well, in slightly different ways.  bdist_egg

doesn't allow for post-installation hooks *at all*, as you can see from 
<http://bugs.python.org/setuptools/issue41>.  So something that modified

the behavior of setup.py install would have to carefully encapsulate its

post-install hook and only invoke it if appropriate.

If you manage to circumnavigate all this nonsense and produce a nice, 
simple post-install hook with some unit tests, you will be a Twisted 
hero :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From kevin.horn at gmail.com  Thu Jun 18 13:46:43 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 18 Jun 2009 14:46:43 -0500
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
Message-ID: <562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>

I have no idea what happened to the site (archive.org shows no updates after
Feb 2008), but older versions of both sAsync and AsynQueue are available on
PyPI:

http://pypi.python.org/pypi/sAsync/0.7
http://pypi.python.org/pypi/AsynQueue/0.3

They look to have been written for Py2.4, but perhaps someone could update
them?

Kevin Horn

On Thu, Jun 18, 2009 at 5:07 AM, mardiros <mardiros at laposte.net> wrote:

> I everyone,
>
> I have too write a network application, and I think twisted is the best
> choice for it!
>
> I need to do some sql transaction, and I prefer too use an ORM too request
> the DB.
> But the server I have to connect is an SqlServer,
> so sqlalchemy is, I think the best choice.
>
> And every google search get back to AsyncQueue
> http://foss.eepatents.com/AsynQueue
>
> But the site is done since a few moment.
> Does anybody have news about this project ?
> Is it still alive ? Which alternative ?
>
> Thanks.
>
> mardiros
>
>
> *Créez votre adresse <http://www.laposte.net> électronique
> prenom.nom at laposte.net
> 1 Go d'espace de stockage, anti-spam et anti-virus intégrés.*
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090618/639145f6/attachment.html>

From listsin at integrateddevcorp.com  Thu Jun 18 14:19:00 2009
From: listsin at integrateddevcorp.com (Steve Steiner (listsin))
Date: Thu, 18 Jun 2009 16:19:00 -0400
Subject: [Twisted-Python] AsyncQueue is still unavailable
In-Reply-To: <562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>
References: <23816362.381738.1245319640799.JavaMail.www@wwinf8402>
	<562bcc10906181246o506b11bfg40e55fcf5088b2f0@mail.gmail.com>
Message-ID: <8B4E4D89-C922-450E-9538-59EC4E6B5956@integrateddevcorp.com>


On Jun 18, 2009, at 3:46 PM, Kevin Horn wrote:

> I have no idea what happened to the site (archive.org shows no  
> updates after Feb 2008), but older versions of both sAsync and  
> AsynQueue are available on PyPI:
>
> http://pypi.python.org/pypi/sAsync/0.7
> http://pypi.python.org/pypi/AsynQueue/0.3
>
> They look to have been written for Py2.4, but perhaps someone could  
> update them?

I found the author a couple of months ago but don't remember the  
details of where the site went etc.

I have a more current version of the code, but it would be better to  
go with something actively maintained.

S

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090618/b8e49515/attachment.html>

From kevin.horn at gmail.com  Thu Jun 18 20:10:03 2009
From: kevin.horn at gmail.com (Kevin Horn)
Date: Thu, 18 Jun 2009 21:10:03 -0500
Subject: [Twisted-Python] Need help with writing a secure Iran Proxy
In-Reply-To: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>
References: <355db15e0906180044s56324b09u1ccf5de3bcb367b0@mail.gmail.com>
Message-ID: <562bcc10906181910g5fbccbdcyfa89904ce84d10ac@mail.gmail.com>

Of course it depends on you definition of "safe" and "secure", but there's a
few examples around the net.  Here's a few:

http://wiki.python.org/moin/Twisted-Examples
http://www.linuxjournal.com/article/7871
http://proxies.xhaus.com/

If you want to add proxy authentication, it shouldn't be too
difficult...check out RFC 2068.

http://www.ietf.org/rfc/rfc2068.txt (esp sections 10.4.8, 11, and 14.33-34)

It should be similar to implementing basic HTTP auth, except you want to use
the
Proxy-Authenticate and Proxy-Authorization headers instead of the regular
ones.

I'm guessing the flow would go something like:
- client requests a proxied resource ( without a Proxy-Authorization header
)
- server sends back a 407 with a Proxy-Authenticate header
- client prompts user for credentials
- client provides request again with Proxy-Authorization header
- server proxies the resource

of course I'm no expert on web proxies so don't take my word for it...

I think you should be able to do the above by overriding some of the proxy
classes in twisted.web.proxy

Good Luck!

Kevin Horn


On Thu, Jun 18, 2009 at 2:44 AM, Andreas Trawoeger <atrawog at gmail.com>wrote:

> Hi!
>
> Could I kindly ask all the Twisted Gurus to take a look Austin Heaps Best
> Proxy Practices
> for Iran http://blog.austinheap.com/
>
> The current setup (Squid & iptables) everybody uses is extremely
> complicated to setup and it should be trivial to implement the requirements
> in Twisted. Turn it into an egg and allow everybody to simple type
> easy_install iranproxy.
>
> I know a little bit of Twisted, because I'm an avid Zenoss user and in
> different circumstanced I would write the proxy on my own. But in this case
> a safe implementation is a real must and I'm really worried to make some
> stupid beginner mistakes.
>
> So some (example) code and links to websites I should read would be greatly
> appreciated.
>
>
> Thanks to everybody!
>
> cu andreas
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090618/5aa5b0c8/attachment.html>

From mardiros at laposte.net  Fri Jun 19 10:43:24 2009
From: mardiros at laposte.net (mardiros)
Date: Fri, 19 Jun 2009 18:43:24 +0200 (CEST)
Subject: [Twisted-Python] AsyncQueue is still unavailable
Message-ID: <21412966.27940.1245429804755.JavaMail.www@wwinf8202>

Hey,

thanks for helping me.


 Steve Steiner (listsin) a écrit :
 
   I have a more current version of the code, but it would be better to go with something actively maintained.   
   S   
   That's exactly what I thint about too....


I am looking in Storm for the moment.
I have copy the driver in the twisted-integration,
but it tries with the both driver pymssql and adodbapi,
and i think only the mxodbc worked.

Now i execute deferred query  with a modified one,
and it work's fine.

I will try orm feature now :-)






 Créez votre adresse électronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus intégrés.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090619/b088a7f7/attachment.html>

From db3l.net at gmail.com  Fri Jun 19 13:05:44 2009
From: db3l.net at gmail.com (David Bolen)
Date: Fri, 19 Jun 2009 15:05:44 -0400
Subject: [Twisted-Python] AsyncQueue is still unavailable
References: <21412966.27940.1245429804755.JavaMail.www@wwinf8202>
Message-ID: <m2k538gi2f.fsf@valheru.db3l.homeip.net>

mardiros <mardiros at laposte.net> writes:

> I am looking in Storm for the moment.
> I have copy the driver in the twisted-integration,
> but it tries with the both driver pymssql and adodbapi,
> and i think only the mxodbc worked.
>
> Now i execute deferred query  with a modified one,
> and it work's fine.
>
> I will try orm feature now :-)

While it looks like there's some specific Twisted integration work
going on in a branch, from what I can see, the current mechanisms you
will need to use Storm with Twisted are the same as those you would
need to use to use SQLAlchemy with Twisted, so if you like the latter,
I don't see a big reason to switch.

That is, defer the ORM related (blocking) operations to their own
thread (ala deferToThread), and remember to detach any ORM objects
being returned to Twisted from the ORM itself.  With SQLAlchemy you'd
call expunge() on the objects or expunge_all() on the session.

If you need to make changes and save them, you would need to re-attach
the objects to a session before flushing to the database (also in a
dedicated thread).  With SQLAlchemy, this can be done with add() or
add_all() on a session.

I suspect you could wrap this behavior up in a fairly simple wrapper
class, without necessarily needing a third party library or package.

For me, I find SQLAlchemy very impressive, and I think it's
flexibility in defining how and when the ORM accesses the database and
clear management of the association of objects to sessions to be
helpful in this sort of integration. For example, you could still work
with defined relations at the object level as long as you ensured that
they were eager loaded while still running in the SA thread.  That
could either be by disabling lazy loading entirely for specific
relations, or by forcing an eager load for specific queries through
the eagerload() option.

It's also not quite clear what sort of transactions are involved from
your original post.  Although you mention preferring an ORM, if you
just need to issue some basic queries/updates against an existing
database schema, you might at least also consider straight SQL.  In
that case, SQLAlchemy's SQL layer can still provide a lot of support
(to avoid writing raw SQL) but not bring in all the ORM overhead.

-- David

PS: Even if you found a current copy of sAsync, based on some comments
the author posted in a thread back in March, I don't think sAsync
supports the ORM features of SQLAlchemy, but just the SQL layer.




From exarkun at twistedmatrix.com  Sat Jun 20 22:05:13 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Jun 2009 04:05:13 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1245557113.35.583236301@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090621/a01ab701/attachment.html>

From gabriel.rossetti at arimaz.com  Mon Jun 22 03:06:24 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 22 Jun 2009 11:06:24 +0200
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database is
	locked
Message-ID: <4A3F4990.3080207@arimaz.com>

Hello everyone,

I am using twisted.enterprise.adbapi with sqlite3 database adapter and 
"runInteraction()". I keep on getting "sqlite3.OperationalError : 
database is locked" errors. I understand the problem, multiple threads 
try to access the DB and it being already locked by a thread it raises 
this exception. My question is what is the standard/correct Twisted way 
of dealing with this?

Thank you,
Gabriel



From exarkun at divmod.com  Mon Jun 22 05:49:24 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 22 Jun 2009 07:49:24 -0400
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database
 is locked
In-Reply-To: <4A3F4990.3080207@arimaz.com>
Message-ID: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>

On Mon, 22 Jun 2009 11:06:24 +0200, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>Hello everyone,
>
>I am using twisted.enterprise.adbapi with sqlite3 database adapter and
>"runInteraction()". I keep on getting "sqlite3.OperationalError :
>database is locked" errors. I understand the problem, multiple threads
>try to access the DB and it being already locked by a thread it raises
>this exception. My question is what is the standard/correct Twisted way
>of dealing with this?

You can set your connection pool to a maximum of 1 connection.  Or you
can try raising the timeout on your database.

Jean-Paul
A



From gabriel.rossetti at arimaz.com  Mon Jun 22 06:19:54 2009
From: gabriel.rossetti at arimaz.com (Gabriel Rossetti)
Date: Mon, 22 Jun 2009 14:19:54 +0200
Subject: [Twisted-Python] adbapi : sqlite3.OperationalError : database
 is locked
In-Reply-To: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>
References: <20090622114925.22176.939566957.divmod.quotient.8432@henry.divmod.com>
Message-ID: <4A3F76EA.8070206@arimaz.com>

Jean-Paul Calderone wrote:
> On Mon, 22 Jun 2009 11:06:24 +0200, Gabriel Rossetti <gabriel.rossetti at arimaz.com> wrote:
>   
>> Hello everyone,
>>
>> I am using twisted.enterprise.adbapi with sqlite3 database adapter and
>> "runInteraction()". I keep on getting "sqlite3.OperationalError :
>> database is locked" errors. I understand the problem, multiple threads
>> try to access the DB and it being already locked by a thread it raises
>> this exception. My question is what is the standard/correct Twisted way
>> of dealing with this?
>>     
>
> You can set your connection pool to a maximum of 1 connection.  Or you
> can try raising the timeout on your database.
>
> Jean-Paul
> A
>   
Thank you Jean-Paul, I thought of that just before I saw your msg 
(limiting the connection pool to 1 connection), it works great!

Gabriel





From tvmrfusnucnc at spammotel.com  Mon Jun 22 07:23:28 2009
From: tvmrfusnucnc at spammotel.com (Guenter Dannoritzer)
Date: Mon, 22 Jun 2009 15:23:28 +0200
Subject: [Twisted-Python] SIP Registrar
Message-ID: <4A3F85D0.9050405@spammotel.com>

Hi,

I am trying to run a SIP registrar.

So far I used an example that comes with the Perl Net:Sip Package:

http://search.cpan.org/~sullr/Net-SIP/

As I am more familiar with Python, but not yet with twisted, I tried to
find a simple example that runs a SIP registrar based on twisted.

I searched this mailing list and found a post about rather using the
Divmod Sine sip implementation than this one. On the other side it seems
like that some of this functionality is back ported into twisted.

Does the current twisted implementation provide enough functionality to
implement a SIP registrar?

I found in the mailing list this simple example about a SIP proxy:

http://twistedmatrix.com/pipermail/twisted-python/2008-July/018047.html

Would that be about the way to go for a registrar?

Thanks for your help.

Cheers,

Guenter





From exarkun at divmod.com  Mon Jun 22 08:18:27 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 22 Jun 2009 10:18:27 -0400
Subject: [Twisted-Python] SIP Registrar
In-Reply-To: <4A3F85D0.9050405@spammotel.com>
Message-ID: <20090622141827.22176.797213374.divmod.quotient.8457@henry.divmod.com>

On Mon, 22 Jun 2009 15:23:28 +0200, Guenter Dannoritzer <tvmrfusnucnc at spammotel.com> wrote:
>Hi,
>
>I am trying to run a SIP registrar.
>
>So far I used an example that comes with the Perl Net:Sip Package:
>
>http://search.cpan.org/~sullr/Net-SIP/
>
>As I am more familiar with Python, but not yet with twisted, I tried to
>find a simple example that runs a SIP registrar based on twisted.
>
>I searched this mailing list and found a post about rather using the
>Divmod Sine sip implementation than this one. On the other side it seems
>like that some of this functionality is back ported into twisted.

The back port is not yet complete, so Divmod Sine is still more functional
and easier to use (as well as less buggy) than the SIP code in Twisted.  I
would suggest either helping to complete the port, or using Divmod Sine
directly.

You can read more about the progress of the port in the issue tracker:

  http://twistedmatrix.com/trac/ticket/3584

(including a detailed list of what remains to be done).

>Does the current twisted implementation provide enough functionality to
>implement a SIP registrar?

Probably, but I don't know of any examples of doing so.  The Divmod Sine
code definitely provides this functionality, and you can find a registrar
implemented in Divmod Sine itself.

Jean-Paul



From jared.gisin at isilon.com  Mon Jun 22 14:30:32 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Mon, 22 Jun 2009 13:30:32 -0700
Subject: [Twisted-Python] untwisting twistd
Message-ID: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>

I am currently working on writing an application using the twisted
framework. The problem that I have is that I do not want to use twistd.
In fact, I find twistd to be inappropriate as it defaults pidfile and
logfile to something specific to twisted, not my application, and it
seem completely silly to have to pass in -pidfile and -logfile params
when stating it up. Those parameters should be specified as part of the
Application object itself, and should allow for CLI override. Further,
as I want my daemon that I'm writing to look and act like a daemon
(UNIX), I do not want to be invoking some general "twistd" command and
passing a ton of options. Ideally, I should be able to write a Pythons
script that acts like twistd, but can bake in default options and
hide/expose other ServerOptions as I so see fit.

 

For example, if I run, 

 

my_daemon

 

It should fire up the daemon

 

my_daemon -help

 

should dump the help

 

my_daemon -pidfile=/var/run/my_daemon.pid

my_daemon stop

my_daemon restart

 

should all function accordingly. I want to avoid all of this "twistd -y"
business, as the daemon, isn't "twistd" it's my code. I should be able
to use the ApplicationRunner, UnixApplicationRunner, etc "runners",
however, as they are currently written, they are twistd specific. For
example, in 8.2, the def checkPid function bakes in, "
sys.exit("""\

Another twistd server is running, PID %s\n

This could either be a previously started instance of your application
or a

different application entirely. To start a new one, either run it in
some other

directory, or use the --pidfile and --logfile parameters to avoid
clashes.

""" %  pid)"

 

Which is iditic as my application may not even expose a -pidfile or a
-logfile and it's definatley not called twistd. The platform specific
application runners need to be more generalized so users can write their
own twistd equivalent to include only what they want.

 

Perhaps I'm missing some key point of twisted that already does this. If
so, I'd love to be guided in the right direction. If not, and I've got a
valid point here, I'd love to know how I can help to remedy this
problem. I think it's great that twistd provides application management
classes, but they are unnecessarily intertwined with twistd which should
be completely optional.

 

-Jared

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090622/beacf4e7/attachment.html>

From phil at bubblehouse.org  Mon Jun 22 15:06:50 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 22 Jun 2009 17:06:50 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>

On Jun 22, 2009, at 4:30 PM, Jared Gisin wrote:
> Which is iditic as my application may not even expose a –pidfile or  
> a –logfile and it’s definatley not called twistd. The platform  
> specific application runners need to be more generalized so users  
> can write their own twistd equivalent to include only what they want.
>
> Perhaps I’m missing some key point of twisted that already does  
> this. If so, I’d love to be guided in the right direction. If not,  
> and I’ve got a valid point here, I’d love to know how I can help to  
> remedy this problem. I think it’s great that twistd provides  
> application management classes, but they are unnecessarily  
> intertwined with twistd which should be completely optional.

This topic comes up continuously, but like the other occurrences, it  
makes a gigantic mountain out of a small molehill. The critics are  
usually not thinking about the real requirements of deploying a  
configurable demonizing application in a production environment.

Look at the init script used to start MySQL sometime, particularly  
when installed from a package on a finicky distro like debian. Or  
Apache. Or bind. Or any one of a number of other complex daemons --  
you'll find that it's not usually advisable (or possible) to launch  
any of these daemons without an endless list of command-line options.

The fact is, twistd does a *lot* of stuff for you, so you don't have  
to. This includes dealing with daemonizing in a UNIX-standard way  
(leaving pidfiles behind and logging to a file), and a myriad other  
uses that you may have no need for yet.

Conversely, the things people write with Twisted (and then use twistd  
to execute) come in a million forms from the most complex to the very  
simple, so there's no way to address all the desires of all the  
functionality that someone would want in a tool like twistd.

You said yourself that you should be able to write a python script  
that functions in a certain way, but what makes you think it should be  
integrated into twistd? You could write a wrapper that made use of the  
many other convenient scripting features Twisted provides (such as  
twisted.python.usage.Options) and which would then in turn launch the  
twistd process with the arguments you require, much like MySQL's  
mysqld_safe bootstrap utility.

-phil


From glyph at divmod.com  Mon Jun 22 15:38:54 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 22 Jun 2009 21:38:54 -0000
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
Message-ID: <20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>

On 09:06 pm, phil at bubblehouse.org wrote:
>On Jun 22, 2009, at 4:30 PM, Jared Gisin wrote:
>>Which is iditic as my application may not even expose a  13pidfile or
>>a  13logfile and it 19s definatley not called twistd. The platform
>>specific application runners need to be more generalized so users
>>can write their own twistd equivalent to include only what they want.

>Look at the init script used to start MySQL sometime, particularly
>when installed from a package on a finicky distro like debian. Or
>Apache. Or bind. Or any one of a number of other complex daemons --
>you'll find that it's not usually advisable (or possible) to launch
>any of these daemons without an endless list of command-line options.

Sure, but we should be able to do better than that, right? :)
>You said yourself that you should be able to write a python script
>that functions in a certain way, but what makes you think it should be
>integrated into twistd? You could write a wrapper that made use of the
>many other convenient scripting features Twisted provides (such as
>twisted.python.usage.Options) and which would then in turn launch the
>twistd process with the arguments you require, much like MySQL's
>mysqld_safe bootstrap utility.

Actually, it's even simpler than that.  The script is itself a function, 
which you can just call as a function without starting a separate 
process.  Axiom had requirements like Mr. Gisin: we wanted to put the 
.pid file and log files inside the database directory, which is a 
location that obviously has to be computed.

I wouldn't object to a more graceful and structured way to do this, but 
the approach "axiomatic" uses is pretty simple: provide a twistd plugin 
that does the meat of the work, then have a small wrapper script that 
builds a command line that includes the plugin and the appropriate 
options, such as logfile and pidfile.

You can see that code here:

  http://divmod.org/trac/browser/trunk/Axiom/axiom/scripts/axiomatic.py
http://divmod.org/trac/browser/trunk/Axiom/twisted/plugins/axiom_plugins.py



From clemesha at gmail.com  Mon Jun 22 15:36:03 2009
From: clemesha at gmail.com (Alex Clemesha)
Date: Mon, 22 Jun 2009 14:36:03 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==>
	<0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>

Hi Jared,
First off, I'd like to say that I'm basically in agreement with exactly what
you are saying, and that is: "I should be able to write a Python
script that acts like twistd - not *be* twistd".


Phil does have some really good points, such as:
"""
The critics are usually not thinking about the real requirements of deploying a
configurable demonizing application in a production environment.
"""


And lastly, I'm glad to see that response from Glyph, as the methodology
he describes is basically how I understand one would create a
"personalized twistd".


In fact, I just got an email from a co-worker that wanted to know how to
either side-step "twistd" or write a custom version of it.  Here is my
response to him (I'd love some critic of my response, so I can provide
a better answer):


============= Email to co-worker: ===============


Yes, there is a better way of doing things.  This better way of doing things
is to write a "twisted plugin" and then, after that is working, using can
wrap calls to "twistd" with python's "os.system" calls, or shell script calls,
or whatever else you want.


I must admit, this whole procedure is pretty confusing (it was for me
at least) at first,
but let me try to explain why you might want to write a "twisted plugin" and
_then_ (possibly) wrap it with a shell script or a simple python script.
The main reasons are the following:

1) You _do_ want to use "twistd", because it does lots of useful
things like daemonizing, handling logfiles and pidfiles, etc.
2) You also want to pass config code to the app you are starting up
(via "twistd") - optimally from the command line and a settings file.

Now, once the above is in place, you then can write some wrapper code
on top of the "twistd" calls for convenience for users.

Here is the "plugin" documentation:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

But I've found that it is easier to go from an example, so try typing this:

twistd -n web --path="."

Now open up firefox to http://localhost:8080
This starts up a twisted web server, serving files from the local directory.
This is a twisted web plugin in action, and it is implemented with
these 2 files:

http://twistedmatrix.com/trac/browser/trunk/twisted/plugins/twisted_web.py
http://twistedmatrix.com/trac/browser/trunk/twisted/web/tap.py

============ end email to co-worker ==============



So basically I've found that the best thing to do is to extend
"twistd" via writing a plugin, and then you can write all kinds
of simple wrappers on top of it to provide a more user-friendly
and a your-app-specific command line tool.  Thoughts from Twisted gurus?


thanks,
Alex












On Mon, Jun 22, 2009 at 1:30 PM, Jared Gisin<jared.gisin at isilon.com> wrote:
> I am currently working on writing an application using the twisted
> framework. The problem that I have is that I do not want to use twistd. In
> fact, I find twistd to be inappropriate as it defaults pidfile and logfile
> to something specific to twisted, not my application, and it seem completely
> silly to have to pass in –pidfile and –logfile params when stating it up.
> Those parameters should be specified as part of the Application object
> itself, and should allow for CLI override. Further, as I want my daemon that
> I’m writing to look and act like a daemon (UNIX), I do not want to be
> invoking some general “twistd” command and passing a ton of options.
> Ideally, I should be able to write a Pythons script that acts like twistd,
> but can bake in default options and hide/expose other ServerOptions as I so
> see fit.
>
>
>
> For example, if I run,
>
>
>
> my_daemon
>
>
>
> It should fire up the daemon
>
>
>
> my_daemon –help
>
>
>
> should dump the help
>
>
>
> my_daemon –pidfile=/var/run/my_daemon.pid
>
> my_daemon stop
>
> my_daemon restart
>
>
>
> should all function accordingly. I want to avoid all of this “twistd –y”
> business, as the daemon, isn’t “twistd” it’s my code. I should be able to
> use the ApplicationRunner, UnixApplicationRunner, etc “runners”,  however,
> as they are currently written, they are twistd specific. For example, in
> 8.2, the def checkPid function bakes in, “            sys.exit("""\
>
> Another twistd server is running, PID %s\n
>
> This could either be a previously started instance of your application or a
>
> different application entirely. To start a new one, either run it in some
> other
>
> directory, or use the --pidfile and --logfile parameters to avoid clashes.
>
> """ %  pid)”
>
>
>
> Which is iditic as my application may not even expose a –pidfile or a
> –logfile and it’s definatley not called twistd. The platform specific
> application runners need to be more generalized so users can write their own
> twistd equivalent to include only what they want.
>
>
>
> Perhaps I’m missing some key point of twisted that already does this. If so,
> I’d love to be guided in the right direction. If not, and I’ve got a valid
> point here, I’d love to know how I can help to remedy this problem. I think
> it’s great that twistd provides application management classes, but they are
> unnecessarily intertwined with twistd which should be completely optional.
>
>
>
> -Jared
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org



From phil at bubblehouse.org  Mon Jun 22 16:29:39 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Mon, 22 Jun 2009 18:29:39 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<AA83D118-DA8B-4945-9D29-7E98CEAB50FD@bubblehouse.org>
	<20090622213854.12555.1302992216.divmod.xquotient.14518@weber.divmod.com>
Message-ID: <421899FC-389E-4B20-BB9B-9DB0EB8D773C@bubblehouse.org>

On Jun 22, 2009, at 5:38 PM, glyph at divmod.com wrote:
> On 09:06 pm, phil at bubblehouse.org wrote:
>> Look at the init script used to start MySQL sometime, particularly  
>> when installed from a package on a finicky distro like debian. Or  
>> Apache. Or bind. Or any one of a number of other complex daemons  
>> you'll find that it's not usually advisable (or possible) to launch  
>> any of these daemons without an endless list of command-line options.
>
> Sure, but we should be able to do better than that, right? :)

Ha, almost definitely ;-)

But in my particular use cases, it doesn't often matter. For example,  
I usually like to deploy production servers under non-privileged  
accounts using authbind, which means that I'll usually need to make  
some kind of init script.

Of course, these days I hardly ever write anything that *doesn't*  
launch at startup, and my command-line options are almost always  
'server-specific' instead of 'job-specific'.

Consequently most of my CLI options can just be set once for each  
machine and generally forgotten about, so I'm not really a good  
candidate to judge the importance of an enhanced twistd API...

-phil



From chris.yan at saybot.com  Tue Jun 23 02:31:21 2009
From: chris.yan at saybot.com (Chris)
Date: Tue, 23 Jun 2009 16:31:21 +0800
Subject: [Twisted-Python] twisted.web2 only can serve one connection at the
 same time when using scgi?
Message-ID: <4A4092D9.9060404@saybot.com>

Hi everyone,
I am trying to use apache2 + scgi to write a application,I found
twisted.web2 supports the scgi module.I began to use this library to
write some code to test how to use it,just like this:

from twisted.web2 import server, channel, resource,http,http_headers
from twisted.application import service, strports
from twisted.internet import reactor, defer

class Test(resource.Resource):
def getResponse(self, result = None):
rep = "The output which shall be transferred to the browser."
res = http.Response( 200,
{'content-type': http_headers.MimeType('text','plain')},
rep)
print "---- getResponse returning: ", res
return res

def render(self,request):
print 'a new request is coming'
d = defer.Deferred()
import time
d.addCallback(lambda x:x).addCallback(self.getResponse)
reactor.callLater(10,d.callback,0)
return d

toplevel = Test()
site = server.Site(toplevel)

application = service.Application("demoserver")
s = strports.service('tcp:8888', channel.SCGIFactory(site))
s.setServiceParent(application)

in the render function,I used a defer to simulate a time-consuming
operation which takes ten seconds.IF in twisted.web,I can first return a
server.NOT_DONE_YET,and use request.write() and request.finish() when
the time-consuming operation is done(still use defer to do this).but
twisted.web2 only supports returning a iweb.IResponse.it seems returning
a defer is the only way.
_|| <http://python.net/crew/mwh/apidocs/twisted.web2.iweb.IResponse.html>_
here is the output:
2009-06-23 15:45:11+0800 [-] Log opened.
2009-06-23 15:45:11+0800 [-] twistd 8.2.0 (/usr/bin/python 2.5.2)
starting up.
2009-06-23 15:45:11+0800 [-] reactor class:
twisted.internet.selectreactor.SelectReactor.
2009-06-23 15:45:11+0800 [-] twisted.web2.channel.scgi.SCGIFactory
starting on 8888
2009-06-23 15:45:11+0800 [-] Starting factory
<twisted.web2.channel.scgi.SCGIFactory instance at 0xf213f8>
2009-06-23 15:45:26+0800 [SCGIChannelRequest,0,192.168.0.138] a new
request is coming
2009-06-23 15:45:36+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>
2009-06-23 15:45:36+0800 [SCGIChannelRequest,1,192.168.0.138] a new
request is coming
2009-06-23 15:45:46+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>
2009-06-23 15:45:46+0800 [SCGIChannelRequest,2,192.168.0.138] a new
request is coming
2009-06-23 15:45:56+0800 [-] ---- getResponse returning:
<twisted.web2.http.Response code=200, streamlen=53>

I use the 3 browsers to access the URL within 1 second,but as we all see
in the log,the server accepts the requests one by one,that is really not
acceptable.I checked a little about the twisted.web2 source code, this
render function is in a defer's callbacks chain,when I return a defer in
a defer's callbacks chain,sure,the rest of the callbacks will wait for
my defer to finish ,even I run it with reactor.callLater.so far,I feel I
can do nothing about this,anyone can help me about this?

Regards
Chris




From fetbiz at gmail.com  Tue Jun 23 02:57:37 2009
From: fetbiz at gmail.com (biziap biziap)
Date: Tue, 23 Jun 2009 08:57:37 +0000
Subject: [Twisted-Python] Fwd: SerialPort.loseConnection() in Win32,
	workaround
In-Reply-To: <d067ddcf0906230146o2e27cdabudd5deec6f2858a89@mail.gmail.com>
References: <d067ddcf0906230146o2e27cdabudd5deec6f2858a89@mail.gmail.com>
Message-ID: <d067ddcf0906230157u62b29bdeg61ca622f5356417@mail.gmail.com>

Hi,
I have finished the neat version of using the SerialPort in Win32.
Without the bothering loseConnection tracebacks.
First of all, I have to apology for the mistake in my last post.
I claimed that calling the flashInput and flashOutput can be used as
the workaround.I am wrong.
The way I use with SerialPort is different from the standard way:

SerialPort(protocol_instance, comport, reactor, baudrate)

instead, I create a SerialConnect and connect the serial port by:

connector = reactor.connectWith(SerialConnector,comport,baudrate,factory)

I welcome someone else to improve this connector for it to be more reliable
if this approach is worthy. For the script, please see the attachment.

Iap
BTW:  I am not sure if it is proper to attach the script in mail list.
I tried to paste it in the mail body. After pasting it into the gmail's
editor,
the format of the script is terrible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090623/b1c3d66f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_serialport2.py
Type: text/x-python
Size: 3830 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20090623/b1c3d66f/attachment-0002.py>

From vishal_shetye at persistent.co.in  Tue Jun 23 07:45:05 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 23 Jun 2009 19:15:05 +0530
Subject: [Twisted-Python] adbapi and multiple queries in single transaction.
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>

Hi,
I am working on an application that uses twisted and twisted.e.adbapi with sqlite in the backend.
All db queries are put in separate functions in class say tableGateway.py which uses runOperation, runQuery etc as appropriate.
A layer that uses it, lets say objectGateway.py, defines operations.
Thus, lets say an add operation may actually call 2-3 or more functions from tableGateway.py.

If my application quits or crashes in middle of an operation then it is likely that db will be inconsistent.
What I want is each objectGateway level operation should be done in a single transaction.

I initially thought of putting all the queries per operation in a runInteraction. However this results in code-duplication as many queries are shared between different operations.

What I could think of for preventing this is:
1. do a runInteraction at objectGateway and then txn that I get will be passed to appropriate functions of tableGateway.
2. An objectGateway level log based recovery.


Option 1 requires all the tableGateway functions to take txn as param. This can be avoided by instantiating tableGateway with a txn for each operation, however tableGateway instantiation is not that cheap.
Even so, if any objectGateway function calls other objectGateway function then the txn will have to be passed to that as well.

Any comments/suggestions?


Regards,
vishal

DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.



From grickert at coldstorage.com  Tue Jun 23 07:42:13 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Tue, 23 Jun 2009 09:42:13 -0400
Subject: [Twisted-Python] Twisted Trial
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>

I know this is a very basic question, but I can't seem to get trial
working correctly.
(I'm working on Windows XP, with python 2.5.4 and twisted 8.2.0)
I've created a very simple example:

I have a file, 'test_example.py'
It's contents are (between ======= lines):

==========================================
from twisted.trial import unittest

class ExampleTestCase(unittest.TestCase):

    def test_example(self):
        """A very simple test"""

        self.assertEquals(1,1)   


if __name__ == '__main__':
    import unittest
    unittest.main()
==========================================


if I just run:
'python text_example.py'
It runs the test (with python's regular unittest framework), and passes
ok

If I run:
'trial test_example.py'
It appears to run the test with trial, but gives this traceback:


Traceback (most recent call last):
  File "c:\python25\lib\site-packages\twisted\python\usage.py", line
241, in parseOptions
    self.postOptions()
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 200, in
getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 165, in
getCache
    provider = pluginModule.load()
  File "c:\python25\lib\site-packages\twisted\python\modules.py", line
380, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
456, in namedAny
    topLevelPackage = _importAndCheckStack(trialname)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
392, in _importAndCheckStack
    return __import__(importName)
  File "c:\python25\lib\site-packages\twisted\plugins\notestplugin.py",
line 18, in <module>
    assert not TEST.running
exceptions.AttributeError: 'module' object has no attribute 'running'
Traceback (most recent call last):
  File "c:\python25\lib\site-packages\twisted\python\usage.py", line
241, in parseOptions
    self.postOptions()
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
293, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "c:\python25\lib\site-packages\twisted\scripts\trial.py", line
279, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 200, in
getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "c:\python25\lib\site-packages\twisted\plugin.py", line 165, in
getCache
    provider = pluginModule.load()
  File "c:\python25\lib\site-packages\twisted\python\modules.py", line
380, in load
    return self.pathEntry.pythonPath.moduleLoader(self.name)
  File "c:\python25\lib\site-packages\twisted\python\reflect.py", line
456, in namedAny
    topLevelPackage = _importAndCheckStack(trialname)
  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
line 12, in <module>
    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
exceptions.ImportError: cannot import name ITestPlugin
test_example
  ExampleTestCase
    test_example ...
[OK]

------------------------------------------------------------------------
-------
Ran 1 tests in 0.000s

PASSED (successes=1)

Could someone point out what I am doing wrong (or is this traceback
"Normal")? 
(I found some post on the web about a possible cause being invalid .pyc
files left over from a previous twisted install, so I deleted all .pyc
files under site-packages\twisted - but still get this traceback)

Thanks,
	Gerrat





From phil at bubblehouse.org  Tue Jun 23 08:25:16 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Tue, 23 Jun 2009 10:25:16 -0400
Subject: [Twisted-Python] adbapi and multiple queries in single
	transaction.
In-Reply-To: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>
References: <E3137F97B0A0804194F369F4E7C3B71927B92286A4@EXCHANGE.persistent.co.in>
Message-ID: <2E70F4C7-5253-44B2-9DB8-79D8817E96F4@bubblehouse.org>

On Jun 23, 2009, at 9:45 AM, Vishal Shetye wrote:
> I initially thought of putting all the queries per operation in a  
> runInteraction. However this results in code-duplication as many  
> queries are shared between different operations.

It seems like the easiest way to deal with this would be to make  
'private' methods for all the standard queries; these methods/ 
functions would accept a transaction object like you said, but the  
methods themselves would only be called from an interaction, which can  
supply the transaction object.

Then in each public ObjectGateway method you can just define an inner  
function to serve as the interaction, calling each private query  
method in turn, using the transaction object provided to that  
interaction.

Here's a stupidly trivial example:

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool

     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =  
%s', user_id);
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =  
%s', [username, sid]);

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             u = self._getUserName(trans, user_id)
             self._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

Other than being careful not to mess around with the instance state  
during those interactions (they are running in a thread, after all),  
this should be pretty straightforward.

Hope this helps,

-phil



From jared.gisin at isilon.com  Tue Jun 23 09:27:09 2009
From: jared.gisin at isilon.com (Jared Gisin)
Date: Tue, 23 Jun 2009 08:27:09 -0700
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==><0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
Message-ID: <0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>

Thanks for the thoughts. I suppose I should have been a bit clearer on my specific use case that is not handled. Certainly, I do want to take advantage of twistd for the reasons listed below (daemonizing, handling log files, pidfile, etc); however, the problem that I have is that I have a very specific application that is going to be built into a product. There's no way that it could ever be installed or deployed elsewhere. Now, having said that I'd love to take advantage of the ApplicationRunner objects to fire up my application. The path to the application is baked in, the location for the pidfile and logfile should have sane defaults, and other various application parameters shouldn't change. In order to fire up the app with sane default, I should be able to issue one command with no arguments as the defaults for all of those should be baked into the system.

Sure, twistd provides default application values, but there's no easy way to override those values. There's no ServerOptions constructor function where I can configure the default values, or have some options removed from the list that appears if the user issues --help.

So, what I'm essentially arguing for is that although twistd is meant to solve a generic problem of generalizing server startups on various platforms for any number of applications, it's severely lacking in how I can take advantage of the ServerOptions to create one for my application. As it is now, I'm going to have to copy and paste the code and modify it as I want to create my own ServerOptions object that does have proper defaults. Right, now twisted.scripts._twistd_unis.ServerOptions inherits from app.ServerOptions, which is completely in appropriate as the UNIX ServerOptions have absolutely nothing to do with twistd itself. For example, I don't there to ever be a --file or --xml --source --report-profile --nothotshot --no_save or --savestats options. 
Really, this is a matter of presentation and locking down the application server options. I should be able to do something like this

ServerOptions( hide_items=('xml', 'file', 'source', 'report-profile'), =
		defaults={'logfile':'/var/log/foo.log', 'pidfile':'/var/run/foo.pid'}  )

To properly construct the subset of default twistd ServerOptions I need to have.

I guess in the mean time, I'll just write my own custom ServerOptions, which oddly, will mirror a bunch of code that already exists.


Thoughts?

-Jared

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Alex Clemesha
Sent: Monday, June 22, 2009 2:36 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] untwisting twistd

Hi Jared,
First off, I'd like to say that I'm basically in agreement with exactly what
you are saying, and that is: "I should be able to write a Python
script that acts like twistd - not *be* twistd".


Phil does have some really good points, such as:
"""
The critics are usually not thinking about the real requirements of deploying a
configurable demonizing application in a production environment.
"""


And lastly, I'm glad to see that response from Glyph, as the methodology
he describes is basically how I understand one would create a
"personalized twistd".


In fact, I just got an email from a co-worker that wanted to know how to
either side-step "twistd" or write a custom version of it.  Here is my
response to him (I'd love some critic of my response, so I can provide
a better answer):


============= Email to co-worker: ===============


Yes, there is a better way of doing things.  This better way of doing things
is to write a "twisted plugin" and then, after that is working, using can
wrap calls to "twistd" with python's "os.system" calls, or shell script calls,
or whatever else you want.


I must admit, this whole procedure is pretty confusing (it was for me
at least) at first,
but let me try to explain why you might want to write a "twisted plugin" and
_then_ (possibly) wrap it with a shell script or a simple python script.
The main reasons are the following:

1) You _do_ want to use "twistd", because it does lots of useful
things like daemonizing, handling logfiles and pidfiles, etc.
2) You also want to pass config code to the app you are starting up
(via "twistd") - optimally from the command line and a settings file.

Now, once the above is in place, you then can write some wrapper code
on top of the "twistd" calls for convenience for users.

Here is the "plugin" documentation:
http://twistedmatrix.com/projects/core/documentation/howto/plugin.html

But I've found that it is easier to go from an example, so try typing this:

twistd -n web --path="."

Now open up firefox to http://localhost:8080
This starts up a twisted web server, serving files from the local directory.
This is a twisted web plugin in action, and it is implemented with
these 2 files:

http://twistedmatrix.com/trac/browser/trunk/twisted/plugins/twisted_web.py
http://twistedmatrix.com/trac/browser/trunk/twisted/web/tap.py

============ end email to co-worker ==============



So basically I've found that the best thing to do is to extend
"twistd" via writing a plugin, and then you can write all kinds
of simple wrappers on top of it to provide a more user-friendly
and a your-app-specific command line tool.  Thoughts from Twisted gurus?


thanks,
Alex












On Mon, Jun 22, 2009 at 1:30 PM, Jared Gisin<jared.gisin at isilon.com> wrote:
> I am currently working on writing an application using the twisted
> framework. The problem that I have is that I do not want to use twistd. In
> fact, I find twistd to be inappropriate as it defaults pidfile and logfile
> to something specific to twisted, not my application, and it seem completely
> silly to have to pass in -pidfile and -logfile params when stating it up.
> Those parameters should be specified as part of the Application object
> itself, and should allow for CLI override. Further, as I want my daemon that
> I'm writing to look and act like a daemon (UNIX), I do not want to be
> invoking some general "twistd" command and passing a ton of options.
> Ideally, I should be able to write a Pythons script that acts like twistd,
> but can bake in default options and hide/expose other ServerOptions as I so
> see fit.
>
>
>
> For example, if I run,
>
>
>
> my_daemon
>
>
>
> It should fire up the daemon
>
>
>
> my_daemon -help
>
>
>
> should dump the help
>
>
>
> my_daemon -pidfile=/var/run/my_daemon.pid
>
> my_daemon stop
>
> my_daemon restart
>
>
>
> should all function accordingly. I want to avoid all of this "twistd -y"
> business, as the daemon, isn't "twistd" it's my code. I should be able to
> use the ApplicationRunner, UnixApplicationRunner, etc "runners",  however,
> as they are currently written, they are twistd specific. For example, in
> 8.2, the def checkPid function bakes in, "            sys.exit("""\
>
> Another twistd server is running, PID %s\n
>
> This could either be a previously started instance of your application or a
>
> different application entirely. To start a new one, either run it in some
> other
>
> directory, or use the --pidfile and --logfile parameters to avoid clashes.
>
> """ %  pid)"
>
>
>
> Which is iditic as my application may not even expose a -pidfile or a
> -logfile and it's definatley not called twistd. The platform specific
> application runners need to be more generalized so users can write their own
> twistd equivalent to include only what they want.
>
>
>
> Perhaps I'm missing some key point of twisted that already does this. If so,
> I'd love to be guided in the right direction. If not, and I've got a valid
> point here, I'd love to know how I can help to remedy this problem. I think
> it's great that twistd provides application management classes, but they are
> unnecessarily intertwined with twistd which should be completely optional.
>
>
>
> -Jared
>
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
Alex Clemesha
clemesha.org

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at divmod.com  Tue Jun 23 10:27:17 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 23 Jun 2009 16:27:17 -0000
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
Message-ID: <20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>


(snip)

On 01:42 pm, grickert at coldstorage.com wrote:
>  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
>line 12, in <module>
>    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
>exceptions.ImportError: cannot import name ITestPlugin
>test_example
>  ExampleTestCase
>    test_example ...
>[OK]

>PASSED (successes=1)
>
>Could someone point out what I am doing wrong (or is this traceback
>"Normal")?
>(I found some post on the web about a possible cause being invalid .pyc
>files left over from a previous twisted install, so I deleted all .pyc
>files under site-packages\twisted - but still get this traceback)

Your problem is that you've installed two versions of Twisted using 
setup.py install, without removing Twisted in between.  This means you 
have an old plugin lying around which is trying to import some things 
that no longer exist in "twisted.plugin".

The traceback is mostly harmless, but you should really re-install 
Twisted from scratch so that you don't experience other issues related 
to this, such as spurious test failures.

In general I would not recommend using 'setup.py' to install to site- 
packages directly, because of problems like this; you should use a tool 
like Combinator[1] or virtualenv[2] to manage your development 
dependencies.

1: http://www.divmod.org/trac/wiki/DivmodCombinator
2: http://pypi.python.org/pypi/virtualenv



From vishal_shetye at persistent.co.in  Tue Jun 23 10:31:21 2009
From: vishal_shetye at persistent.co.in (Vishal Shetye)
Date: Tue, 23 Jun 2009 22:01:21 +0530
Subject: [Twisted-Python] adbapi and multiple queries in single
Message-ID: <E3137F97B0A0804194F369F4E7C3B71927B90C32EF@EXCHANGE.persistent.co.in>

Phil thanks for the reply. I plan to do something similar.
[sorry for not providing code snippet.]
I have modified your code (please ignore queries and other errors)
However I am not very much convinced with this approach,
As you can see validate of ObjectGateway is a public method which also needs to be called from handleLogin.
So I have to write two methods one public 'validate' and other private '_validate'.
Any comments/suggestions or pointers to any existing applications/architecture documents with similar data access?

class TableGateway(object):
     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =
%s', user_id)
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =
%s', [username, sid])

     def validateSid(self, txn, sid):
          res = txn.execute('select id from user where id=?', (sid,))
          return True if res else False

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool
         self.tblGw = TableGateway()

     def _validate(self, txn, sid):
          return self.tblGw.validateSid(txn, sid)

     def validate(self, sid):
          return self.pool.runInteraction(self._validate, sid)

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             if not self._validate(trans, sid):
                 raise "invalid sid"
             u = self.tblGw._getUserName(trans, user_id)
             self.tblGw._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

Regards,
vishal

Date: Tue, 23 Jun 2009 10:25:16 -0400
From: Phil Christensen <phil at bubblehouse.org>
Subject: Re: [Twisted-Python] adbapi and multiple queries in single
        transaction.
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Message-ID: <2E70F4C7-5253-44B2-9DB8-79D8817E96F4 at bubblehouse.org>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes

On Jun 23, 2009, at 9:45 AM, Vishal Shetye wrote:
>> I initially thought of putting all the queries per operation in a
>> runInteraction. However this results in code-duplication as many
>> queries are shared between different operations.

>It seems like the easiest way to deal with this would be to make
>'private' methods for all the standard queries; these methods/
>functions would accept a transaction object like you said, but the
>methods themselves would only be called from an interaction, which can
>supply the transaction object.

>Then in each public ObjectGateway method you can just define an inner
>function to serve as the interaction, calling each private query
>method in turn, using the transaction object provided to that
>interaction.

>Here's a stupidly trivial example:

class ObjectGateway(object):
     def __init__(self, pool):
         self.pool = pool

     def _getUserName(self, trans, user_id):
         result = trans.execute('SELECT username FROM user WHERE id =
%s', user_id);
         return result[0][0]

     def _sessionUpdateQuery(self, trans, sid, username):
         trans.execute('UPDATE session SET username = %s WHERE sid =
%s', [username, sid]);

     def handleLogin(self, sid, user_id):
         def _loginInteraction(trans):
             u = self._getUserName(trans, user_id)
             self._sessionUpdateQuery(trans, sid, username)
             return u
         return self.pool.runInteraction(_loginInteraction)

>Other than being careful not to mess around with the instance state
>during those interactions (they are running in a thread, after all),
>this should be pretty straightforward.

>Hope this helps,

-phil
DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Ltd. does not accept any liability for virus infected mails.



From warner at lothar.com  Tue Jun 23 20:03:23 2009
From: warner at lothar.com (Brian Warner)
Date: Tue, 23 Jun 2009 19:03:23 -0700
Subject: [Twisted-Python] [ANN] Foolscap-0.4.2 released
Message-ID: <20090623190323.107389a5@luther>

I've recently released Foolscap-0.4.2 (and noticed that I hadn't sent
out a release announcement since 0.2.8 over a year ago, despite there
being 2 major and 4 minor releases in that time. my bad).

The home page is http://foolscap.lothar.com/trac . Download this release from
PyPI, or from http://foolscap.lothar.com/releases/foolscap-0.4.2.tar.gz .

This release adds the "Foolscap Application Server", an easy way to configure
and deploy various foolscap-based services like "upload-file" and
"run-command". Think of it as a twistd for foolscap. The demo directory
includes code to use a FURL to checkout and commit to a Git repository: it's
easy to set up, and the client holding this FURL gets no other access to the
server machine. The full release notes (since 0.2.8) are attached below.

Since I missed the last few releases, I'll mention some other features from
the past year. The 0.4.0 series changes the preferred access point to
"foolscap.api", begins to give up on the resource-consumption-attacks
prevention code, and fixes compatibility with python-2.6. The 0.3.0 series
adds an "Incident Gatherer" service to the logging code, and improves error
handling (DeadReferenceError and RemoteException).


Foolscap is a Twisted-friendly remote object protocol, a descendant of
Perspective Broker, with improved security properties, third-party
references, adaptable serialization, remote logging, and other useful
features. Please visit http://foolscap.lothar.com/trac for more details.


have a capable day,
 -Brian




* Release 0.4.2 (16 Jun 2009)

** Compatibility

Same as 0.4.1

** the Foolscap Application Server

The big new feature in this release is the "Foolscap Application Server".
This is both a demo of what you can do with Foolscap, and an easy way to
deploy a few simple services that run over secure connections. You create and
start a "flappserver" on one machine, and then use the new "flappclient" on
the other side. The server can contain multiple services, each with a
separate FURL. You give the client a FURL for a specific service, it
connects, does a job, and shuts down.

See doc/flappserver.xhtml for details.

Two service types are provided in this release. The first is a simple
file-uploader: the holder of the FURL gets to upload arbitrary files into a
specific target directory, and nowhere else. The second is a pre-configured
command runner: the service is configured with a shell command, and the
client gets to make it run (but doesn't get to influence anything about what
gets run). The run-command service defaults to sending stdout/stderr/exitcode
to the client program, which will behave as if it were the command being run
(stdout and stderr appear at right time, and it exits with the same
exitcode). The service can be configured to accept stdin, or to turn off
stdout or stderr. The service always runs in a preconfigured working
directory.

To do this with SSH, you'd need to create a new keypair, then set up an
authorized_keys entry to limit that pubkey to a single command, and hope that
environment variables and the working directory don't cause any surprises.
Implementing the fixed-directory file-uploader would probably require a
specialized helper program.

The flappserver provides an easy-to-configure capability-based replacement
those sorts of SSH setups. The first use-case is to allow buildslaves to
upload newly-created debian packages to a central repository and then trigger
a package-index rebuild script. By using FURLs instead of raw SSH keys, the
buildslaves will be unable to affect any .debs in other directories, or any
other files on the repository host, nor will they be able to run arbitrary
commands on that host. By storing the FURLs in a file and using the
--furlfile argument to "flappclient", a buildbot transcript of the upload
step will not leak the upload authority.

** new RemoteReference APIs

RemoteReference now features two new methods. rref.isConnected() returns a
boolean, True if the remote connection is currently live, False if it has
been lost. This is an immediate form of the rref.notifyOnDisconnect()
callback-registration mechanism, and can make certain types of
publish-subscribe code easier to write.


The second is rref.getLocationHints(), which returns a list of location hints
as advertised by the host Tub. Most hints are a ("ipv4",host,portnum) tuple,
but other types may be defined in the future. Note that this is derived from
the FURL that each Tub sends with its my-reference sequence (i.e. it is
entirely controlled by the Tub in which that Referenceable lives), so
getLocationHints() is quite distinct from rref.getPeer() (which returns an
IPv4Address or LoopbackAddress instance describing the other end of the
actual network connection). getLocationHints() indicates what the other Tub
wants you to use for new connections, getPeer() indicates what was used for
the existing connection (which might not accept new connections due to NAT or
proxy issues).

getLocationHints() is meant to make it easier to write connection-status
display code, for example in a server which holds connections to a number of
peers. A status web page can loop over the peer RemoteReferences and display
location information for each one without needing to look deep inside the
hidden RemoteReferenceTracker instance to find it.

** giving up on resource-consumtion defenses

Ticket #127 contains more detail, but beginning with this release, Foolscap
will be slowly removing the code that attempted to prevent memory-exhaustion
attacks. Doing this in a single process is just too hard, and the limits that
were enforced provided more problems than protection. To this end, an
internal 200-byte limit on FURL length (applied in Gifts) has been removed.
Later releases will remove more code, hopefully simplifying the deserization
path.

** other bugfixes

Previous releases would throw an immediate exception when Tub.getReference()
or Tub.connectTo() was called with an unreachable FURL (one with a corrupted
or empty set of location hints). In code which walks a list of FURLs and
tries to initiate connections to all of them, this synchronous exception
would bypass all FURLs beyond the troublesome one.

This has been improved: Tub.getReference() now always returns a Deferred,
even if the connection is doomed to fail because of a bad FURL. These
problems are now indicated by a Deferred that errbacks instead of a
synchronous exception.


* Release 0.4.1 (22 May 2009)

** Compatibility

Same as 0.4.0

** Bug fixes

The new RemoteException class was not stringifiable under python2.4 (i.e.
str(RemoteException(f)) would raise an AttributeError), causing problems
especially when callRemote errbacks attempted to record the received Failure
with log.msg(failure=f). This has been fixed.


* Release 0.4.0 (19 May 2009)

** Compatibility

The wire protocol remains the same as before, unchanged since 0.2.6 .

The main API entry point has moved to "foolscap.api": e.g. you should do
"from foolscap.api import Tub" instead of "from foolscap import Tub".
Importing symbols directly from the "foolscap" module is now deprecated.
(this makes it easier to reorganize the internal structure of Foolscap
without causing circular dependencies). (#122)

A near-future release (probably 0.4.1) will add proper
DeprecationWarnings-raising wrappers to all classes and functions in
foolscap/__init__.py . The next major release (probably 0.5.0) will remove
these symbols from foolscap/__init__.py altogether.

Logging functions are still meant to be imported from foolscap.logging.* .

** expose-remote-exception-types (#105)

Remote exception reporting is changing. Please see the new document
docs/failures.xhtml for full details. This release adds a new option:

 tub.setOption("expose-remote-exception-types", BOOL)

The default is True, which provides the same behavior as previous releases:
remote exceptions are presented to look as much as possible like local
exceptions.

If you set it to False, then all remote exceptions will be collapsed into a
single "foolscap.api.RemoteException" type, with an attribute named .failure
that can be used to get more details about the remote exception. This means
that callRemote will either fire its Deferred with a regular value, or
errback with one of three exception types from foolscap.api:
DeadReferenceError, Violation, or RemoteException. (When the option is True,
it could errback with any exception type, limited only by what the remote
side chose to raise)

A future version of Foolscap may change the default value of this option.
We're not sure yet: we need more experience to see which mode is safer and
easier to code with. If the default is changed, the deprecation sequence will
probably be:

 0.5.0: require expose-remote-exception-types to be set
 0.6.0: change the default to False, stop requiring the option to be set
 0.7.0: remove the option

** major bugs fixed:

Shared references now work after a Violation (#104)

The tubid returned by rref.getSturdyRef() is now reliable (#84)

Foolscap should work with python-2.6: Decimal usage fixed, sha/md5
deprecation warnings fixed, import of 'sets' still causes a warning. (#118,
#121)

Foolscap finally uses new-style classes everywhere (#96)

bin/flogtool might work better on windows now (#108)

logfiles now store library versions and process IDs (#80, #97)

The "flogtool web-viewer" tool listens at a URL of "/" instead of "/welcome",
making it slightly easier to use (#120)

You can now setOption() on both log-gatherer-furl and log-gatherer-furlfile
on the same Tub. Previously this caused an error. (#114)


* Release 0.3.2 (14 Oct 2008)

** Compatibility: same as 0.2.6

Incident classifier functions (introduced in 0.3.0) have been changed: if you
have written custom functions for an Incident Gatherer, you will need to
modify them upon upgrading to this release.

** Logging Changes

The log.msg counter now uses a regular Python integer/bigint. The counter in
0.3.1 used itertools.count(), which, despite its documentation, stores the
counter in a C signed int, and thus throws an exception when the message
number exceeds 2**31-1 . This exception would pretty much kill any program
which ran long enough to emit this many messages, a situation which was
observed in a busy production server with an uptime of about three or four
weeks. The 0.3.2 counter will be promoted to a bigint when necessary,
removing this limitation. (ticket #99)

The Incident-Gatherer now imports classification functions from files named
'classify_*.py' in the gatherer's directory. This effectively adds
"classifier plugins". The signature of the functions has changed since the
0.3.0 release, making them easier to use. If you have written custom
functions (and edited the gatherer.tac file to activate them, using
gs.add_classifier()), you will need to modify the functions to take a single
'trigger' argument.

These same 'classify_*.py' plugins are used by a new "flogtool
classify-incident" subcommand, which can be pointed at an incident file, and
performs the same kind of classification as the Incident Gatherer. (#102).

The logfiles produced by the "flogtool tail" command and the internal
incident-reporter now include the PID of the reporting process. This can be
seen by passing the --verbose option to "flogtool dump", and will be made
more visible in later releases. (#80).

The "flogtool web-viewer" tool now marks Incident triggers (#79), and
features a "Reload Logfile" button to re-read the logfile on disk (#103).
This is most useful when running unit tests, in conjunction with the
FLOGFILE= environment variable.

** Other Changes

When running unit tests, if the #62 bug is encountered (pyopenssl >= 0.7 and
twisted <= 8.1.0 and selectreactor), the test process will emit a warning and
pause for ten seconds to give the operator a chance to halt the test and
re-run it with --reactor=poll. This may help to reduce the confusion of a
hanging+failing test run.

The xfer-client.py example tool (in doc/listings/) has been made more
useable, by calling os.path.expanduser() on its input files, and by doing
sys.exit(1) on failure (instead of hanging), so that external programs can
react appropriately.


* Release 0.3.1 (03 Sep 2008)

** Compatibility: same as 0.2.6

** callRemote API changes: DeadReferenceError

All partitioning exceptions are now mapped to DeadReferenceError. Previously
there were three separate exceptions that might indicate a network partition:
DeadReferenceError, ConnectionLost, and ConnectionDone. (a network partition
is when one party cannot reach the other party, due to a variety of reasons:
temporary network failure, the remote program being shut down, the remote
host being taken offline, etc).

This means that, if you want to send a message and don't care whether that
message makes it to the recipient or not (but you *do* still care if the
recipient raises an exception during processing of that message), you can set
up the Deferred chain like this:

 d = rref.callRemote("message", args)
 d.addCallback(self.handle_response)
 d.addErrback(lambda f: f.trap(foolscap.DeadReferenceError))
 d.addErrback(log.err)

The first d.addErrback will use f.trap to catch DeadReferenceError, but will
pass other exceptions through to the log.err() errback. This will cause
DeadReferenceError to be ignored, but other errors to be logged.

DeadReferenceError will be signalled in any of the following situations:

 1: the TCP connection was lost before callRemote was invoked
 2: the connection was lost after the request was sent, but before
    the response was received
 3: when the active connection is dropped because a duplicate connection was
    established. This can occur when two programs are simultaneously
    connecting to each other.

** logging improvements

*** bridge foolscap logs into twistd.log

By calling foolscap.logging.log.bridgeLogsToTwisted(), or by setting the
$FLOGTOTWISTED environment variable (to anything), a subset of Foolscap log
events will be copied into the Twisted logging system. The default filter
will not copy events below the log.OPERATIONAL level, nor will it copy
internal foolscap events (i.e. those with a facility name that starts with
"foolscap"). This mechanism is careful to avoid loops, so it is safe to use
both bridgeLogsToTwisted() and bridgeTwistedLogs() at the same time. The
events that are copied into the Twisted logging system will typically show up
in the twistd.log file (for applications that are run under twistd).

An alternate filter function can be passed to bridgeLogsToTwisted().

This feature provides a human-readable on-disk record of significant events,
using a traditional one-line-per-event all-text sequential logging structure.
It does not record parent/child relationships, structured event data, or
causality information.

*** Incident Gatherer improvements

If an Incident occurs while a previous Incident is still being recorded (i.e.
during the "trailing log period"), the two will be folded together.
Specifically, the second event will not trigger a new Incident, but will be
recorded in the first Incident as a normal log event. This serves to address
some performance problems we've seen when incident triggers occur in
clusters, which used to cause dozens of simultaneous Incident Recorders to
swing into action.

The Incident Gatherer has been changed to only fetch one Incident at a time
(per publishing application), to avoid overloading the app with a large
outbound TCP queue.

The Incident Gatherer has also been changed to scan the classified/* output
files and reclassify any stored incidents it has that are not mentioned in
one of these files. This means that you can update the classification
functions (to add a function for some previously unknown type of incident),
delete the classified/unknown file, then restart the incident gatherer, and
it will only reclassify the previously-unknown incidents. This makes it much
easier to iteratively develop classification functions.

*** Application Version data

The table of application versions, previously displayed only by the 'flogtool
tail' command, is now recorded in the header of both Incidents and the
'flogtool tail --save-to' output file.

The API to add application versions has changed: now programs should call
foolscap.logging.app_versions.add_version(name, verstr).


* Release 0.3.0 (04 Aug 2008)

** Compatibility: same as 0.2.6

The wire-level protocol remains the same as other recent releases.

The new incident-gatherer will only work with applications that use Foolscap
0.3.0 or later.

** logging improvements

The "incident gatherer" has finally been implemented. This is a service, like
the log-gatherer, which subscribes to an application's logport and collects
incident reports: each is a dump of accumulated log messages, triggered by
some special event (such as those above a certain severity threshold). The
"flogtool create-incident-gatherer" command is used to create one, and twistd
is used to start it. Please see doc/logging.xhtml for more details.

The incident publishing API was changed to support the incident-gatherer. The
incident-gatherer will only work with logports using foolscap 0.3.0 or newer.

The log-publishing API was changed slightly, to encourage the use of
subscription.unsubscribe() rather than publisher.unsubscribe(subscription).
The old API remains in place for backwards compatibility with log-gatherers
running foolscap 0.2.9 or earlier.

The Tub.setOption("log-gatherer-furlfile") can accept a file with multiple
FURLs, one per line, instead of just a single FURL. This makes the
application contact multiple log gatherers, offering its logport to each
independently, e.g. to connect to both a log-gatherer and an
incident-gatherer.

** API Additions

RemoteReferences now have a getRemoteTubID() method, which returns a string
(base32-encoded) representing the secure Tub ID of the remote end of the
connection. For any given Tub ID, only the possessor of the matching private
key should be able to provide a RemoteReference for which getRemoteTubID()
will return that value. I'm not yet sure if getRemoteTubID() is a good idea
or not (the traditional object-capability model discourages making
access-control decisions on the basis of "who", instead these decisions
should be controlled by "what": what objects do they have access to). This
method is intended for use by application code that needs to use TubIDs as an
index into a table of some sort. It is used by Tahoe to securely compute
shared cryptographic secrets for each remote server (by hashing the TubID
together with some other string).

Note that the rref.getSturdyRef() call (which has been present in Foolscap
since forever) is *not* secure: the remote application controls all parts of
the sturdy ref FURL, including the tubid. A future version of foolscap may
remedy this.

** Bug fixes

The log-gatherer FURL can now be set before Tub.setLocation (the connection
request will be deferred until setLocation is called), and
getLogPort/getLogPortFURL cannot be called until after setLocation. These two
changes, in combination, resolve a problem (#55) in which the gatherer
connection could be made before the logport was ready, causing the
log-gatherer to fail to subscribe to receive log events.

** Dependent Libraries

Foolscap uses PyOpenSSL for all of its cryptographic routines. A bug (#62)
has been found in which the current version of Twisted (8.1.0) and the
current version of PyOpenSSL (0.7) interact badly, causing Foolscap's unit
tests to fail. This problem will affect application code as well
(specifically, Tub.stopService will hang forever). The problem only appears
to affect the selectreactor, so the current recommended workaround is to run
unit tests (and applications that need to shut down Tubs) with --reactor=poll
(or whatever other reactor is appropriate for the platform, perhaps iocp). A
less-desireable workaround is to downgrade PyOpenSSL to 0.6, or Twisted to
something older. The Twisted maintainers are aware of the problem and intend
to fix it in an upcoming Twisted release.


* Release 0.2.9 (02 Jul 2008)

** Compatibility: exactly the same as 0.2.6

** logging bugs fixed

The foolscap.logging.log.setLogDir() option would throw an exception if the
directory already existed, making it unsuitable for use in an application
which is expected to be run multiple times. This has been fixed.

** logging improvements

'flogtool tail' now displays the process ID and version information about the
remote process. The tool will tolerate older versions of foolscap which do
not offer the get_pid interface. (foolscap ticket #71)

The remote logport now uses a size-limited queue for messages going to a
gatherer or 'flogtool tail', to prevent the monitored process from using
unbounded amounts of memory during overload situations (when it is generating
messages faster than the receiver can handle them). This solves a runaway
load problem we've seen in Tahoe production systems, in which a busy node
sends log messages to a gatherer too quickly for it to absorb, using lots of
memory to hold the pending messages, which causes swapping, which causes more
load, making the problem worse. We frequently see an otherwise well-behaved
process swell to 1.4GB due to this problem, occasionally failing due to VM
exhaustion. Of course, a bounded queue means that new log events will be
dropped during this overload situation. (#72)

** serialization added for the Decimal type (#50)

** debian packaging targets added for gutsy and hardy

The Makefile now has 'make debian-gutsy' and 'make debian-hardy' targets.
These do the same thing as 'make debian-feisty'. (#76)



From johan.rydberg at edgeware.tv  Wed Jun 24 03:28:54 2009
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 24 Jun 2009 11:28:54 +0200
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
References: <0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
Message-ID: <8217E210-8C55-4FCE-B574-82BF5FB49DD1@edgeware.tv>


On Jun 22, 2009, at 10:30 PM, Jared Gisin wrote:

> [...]

I must say I agree with everything you're saying.

Another thing I'm missing is that there's no way to specify
_when_ to daemonize the application.  Plus I would love if
startService could return a deferred, just like stopService
does.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090624/5dabad7d/attachment.html>

From grickert at coldstorage.com  Wed Jun 24 07:00:40 2009
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Wed, 24 Jun 2009 09:00:40 -0400
Subject: [Twisted-Python] Twisted Trial
In-Reply-To: <20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>
References: <BB13E4C4D649234F84A01F6DF64BB87F04574185@ccs-ex01.coldstorage.com>
	<20090623162717.12555.1475712253.divmod.xquotient.14563@weber.divmod.com>
Message-ID: <BB13E4C4D649234F84A01F6DF64BB87F04574508@ccs-ex01.coldstorage.com>

>-----Original Message-----
>From: glyph at divmod.com [mailto:glyph at divmod.com]
>Sent: Tuesday, June 23, 2009 12:27 PM
>To: Twisted general discussion
>Subject: Re: [Twisted-Python] Twisted Trial
>
>
>(snip)
>
>On 01:42 pm, grickert at coldstorage.com wrote:
>>  File "c:\python25\lib\site-packages\twisted\plugins\testplugin.py",
>>line 12, in <module>
>>    from twisted.plugin import IPlugin, ITestPlugin, ITestPlugin2
>>exceptions.ImportError: cannot import name ITestPlugin
>>test_example
>>  ExampleTestCase
>>    test_example ...
>>[OK]
>
>>PASSED (successes=1)
>>
>>Could someone point out what I am doing wrong (or is this traceback
>>"Normal")?
>>(I found some post on the web about a possible cause being invalid .pyc
>>files left over from a previous twisted install, so I deleted all .pyc
>>files under site-packages\twisted - but still get this traceback)
>
>Your problem is that you've installed two versions of Twisted using
>setup.py install, without removing Twisted in between.  This means you
>have an old plugin lying around which is trying to import some things
>that no longer exist in "twisted.plugin".
>
>The traceback is mostly harmless, but you should really re-install
>Twisted from scratch so that you don't experience other issues related
>to this, such as spurious test failures.
>
>In general I would not recommend using 'setup.py' to install to site-
>packages directly, because of problems like this; you should use a tool
>like Combinator[1] or virtualenv[2] to manage your development
>dependencies.
>
>1: http://www.divmod.org/trac/wiki/DivmodCombinator
>2: http://pypi.python.org/pypi/virtualenv
>


Thanks, Glyph.  

Uninstalling previous versions, then reinstalling Twisted fixed it.
I'll check out those tools.


From phil at bubblehouse.org  Wed Jun 24 09:18:29 2009
From: phil at bubblehouse.org (Phil Christensen)
Date: Wed, 24 Jun 2009 11:18:29 -0400
Subject: [Twisted-Python] untwisting twistd
In-Reply-To: <0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>
References: <AcnzeEoi9NmFnbjNSyS1JvZbl97YWQ==><0C40B34038FD824FACDB387E7788728702C6C3AF@seaxch08.desktop.isilon.com>
	<d272f0690906221436p575939den75444db1189f5b76@mail.gmail.com>
	<0C40B34038FD824FACDB387E7788728702C6C4E1@seaxch08.desktop.isilon.com>
Message-ID: <3DA959C9-4217-45F0-93B0-E088D2A1E36C@bubblehouse.org>

On Jun 23, 2009, at 11:27 AM, Jared Gisin wrote:
> In order to fire up the app with sane default, I should be able to  
> issue one command with no arguments as the defaults for all of those  
> should be baked into the system.
[snip]
> I guess in the mean time, I'll just write my own custom  
> ServerOptions, which oddly, will mirror a bunch of code that already  
> exists.

Based on your use case, you really shouldn't need to duplicate much  
functionality at all.

Here's one way to make a custom runner that uses all the guts of the  
twistd stuff, but overrides various options. This example sets the  
pidfile to 'web.pid' and automatically runs the 'web' sub-command:

     from twisted.application import app
     from twisted.scripts.twistd import runApp

     from twisted.python.runtime import platformType
     if platformType == "win32":
         from twisted.scripts._twistw import ServerOptions
     else:
         from twisted.scripts._twistd_unix import ServerOptions

     class CustomServerOptions(ServerOptions):
         defaultSubCommand = 'web'
         optParameters = [
                          ['pidfile','','web.pid',
                           "Name of the pidfile"],
                         ]

     if __name__ == '__main__':
         app.run(runApp, CustomServerOptions)

The biggest complication here is selecting the correct ServerOptions  
file to use as a base. As it is, this example will pick the correct  
ServerOptions base, but sets the pidfile default no matter what, which  
isn't applicable to the windows options, AFAIK.

I'm not suggesting it couldn't be better, but I don't know what  
specific changes would need to be made to satisfy everyone (or mostly  
everyone).

-phil



From revenantstyle at gmail.com  Wed Jun 24 15:53:58 2009
From: revenantstyle at gmail.com (Dustin Land)
Date: Wed, 24 Jun 2009 16:53:58 -0500
Subject: [Twisted-Python] How to disable XMLRPC logging
Message-ID: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>

Greetings!

Currently I'm running two daemons that talk to each other over xmlrpc.
One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
handler.
The other simply uses web.xmlrpc.Proxy.

In the logs for the first I get a flood of...
2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
In the second...
2009-06-24 16:44:13-0500 [-] Starting factory
<twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
<twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>

Is there a way to disable this?  I saw in the archives that
HTTPClientFactory.noisy can be set to False.  Is there something similar for
both of these instances?

Thanks,

Dustin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090624/61bd494c/attachment.html>

From exarkun at divmod.com  Wed Jun 24 16:02:26 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 24 Jun 2009 18:02:26 -0400
Subject: [Twisted-Python] How to disable XMLRPC logging
In-Reply-To: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>
Message-ID: <20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>

On Wed, 24 Jun 2009 16:53:58 -0500, Dustin Land <revenantstyle at gmail.com> wrote:
>Greetings!
>
>Currently I'm running two daemons that talk to each other over xmlrpc.
>One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
>handler.
>The other simply uses web.xmlrpc.Proxy.
>
>In the logs for the first I get a flood of...
>2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
>"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
>In the second...
>2009-06-24 16:44:13-0500 [-] Starting factory
><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
>2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
>
>Is there a way to disable this?  I saw in the archives that
>HTTPClientFactory.noisy can be set to False.  Is there something similar for
>both of these instances?

Not really.

_QueryFactory is a subclass of ClientFactory, so like HTTPClientFactory, it
has the `noisy´ attribute which controls whether it logs these messages.  The
trouble here is that you don't have access to the _QueryFactory instance.  It
might be a nice enhancement to either add a way to get at it, or perhaps to
just give `Proxy´ a `noisy´ attribute which it copies onto the _QueryFactory
instance it creates.

It might also be nice to get rid of this `noisy´ stuff and instead have
ClientFactory (and subclasses) always log this information, then teach the
log observer (ie, the thing which actually writes these messages to a log
file) how to be more selective in what it actually reports.

Jean-Paul



From revenantstyle at gmail.com  Fri Jun 26 09:53:59 2009
From: revenantstyle at gmail.com (Dustin Land)
Date: Fri, 26 Jun 2009 10:53:59 -0500
Subject: [Twisted-Python] How to disable XMLRPC logging
In-Reply-To: <20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>
References: <30275b270906241453r93e91a1p2e81f5baaa163f65@mail.gmail.com>
	<20090624220226.22176.1078016255.divmod.quotient.9190@henry.divmod.com>
Message-ID: <30275b270906260853x888b232t98881b894787994c@mail.gmail.com>

Thanks for the info Jean-Paul.

On Wed, Jun 24, 2009 at 5:02 PM, Jean-Paul Calderone <exarkun at divmod.com>wrote:

> On Wed, 24 Jun 2009 16:53:58 -0500, Dustin Land <revenantstyle at gmail.com>
> wrote:
> >Greetings!
> >
> >Currently I'm running two daemons that talk to each other over xmlrpc.
> >One runs an implementation of internet.TCPServer with an xmlrpc.XMLRPC
> >handler.
> >The other simply uses web.xmlrpc.Proxy.
> >
> >In the logs for the first I get a flood of...
> >2009-06-24 15:31:35-0500 [-] 127.0.0.1 - - [24/Jun/2009:20:31:34 +0000]
> >"POST / HTTP/1.0" 200 297 "-" "Twisted/XMLRPClib"
> >In the second...
> >2009-06-24 16:44:13-0500 [-] Starting factory
> ><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
> >2009-06-24 16:44:13-0500 [QueryProtocol,client] Stopping factory
> ><twisted.web.xmlrpc._QueryFactory instance at 0x2d9afc8>
> >
> >Is there a way to disable this?  I saw in the archives that
> >HTTPClientFactory.noisy can be set to False.  Is there something similar
> for
> >both of these instances?
>
> Not really.
>
> _QueryFactory is a subclass of ClientFactory, so like HTTPClientFactory, it
> has the `noisy´ attribute which controls whether it logs these messages.
>  The
> trouble here is that you don't have access to the _QueryFactory instance.
>  It
> might be a nice enhancement to either add a way to get at it, or perhaps to
> just give `Proxy´ a `noisy´ attribute which it copies onto the
> _QueryFactory
> instance it creates.
>
> It might also be nice to get rid of this `noisy´ stuff and instead have
> ClientFactory (and subclasses) always log this information, then teach the
> log observer (ie, the thing which actually writes these messages to a log
> file) how to be more selective in what it actually reports.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090626/da6c1e8a/attachment.html>

From Benjamin.Rutt at gs.com  Fri Jun 26 10:33:06 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 26 Jun 2009 12:33:06 -0400
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
Message-ID: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>

Am currently trying to upgrade to twisted-8.2.0.  For some reason,
twisted-8.2.0 thinks my deferred below was gc'd with an unhandled error,
and tells me about it upon reactor exit.  With
python-2.4.2/twisted-2.1.0, no issues.  With python-2.6.1/twisted-8.2.0,
I see these issues.  Any ideas why?  Thanks.

$ cat ./deferred-errors.py
#!/usr/bin/env python
import datetime, logging, os, random, re, shutil, socket
import subprocess, sys, tempfile, threading, time, traceback

from twisted.internet       import reactor
from twisted.internet       import defer
from twisted.internet.utils import getProcessOutput
from twisted.python         import log
import twisted

print 'twisted version is', twisted.__version__

def foo():
    d = getProcessOutput('/bin/hostnameX')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

reactor.callWhenRunning(foo)
reactor.callLater(3, reactor.stop)
reactor.run()

$ /sw/external/python-2.4.2/bin/python ./deferred-errors.py 
twisted version is 2.1.0
eb caught the failure!

$ /sw/external/python-2.6.1/bin/python ./deferred-errors.py 
twisted version is 8.2.0
eb caught the failure!
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: twisted.internet.error.ProcessTerminated: A process has ended
with a probable error condition: process ended with exit code 1.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090626/dcb43718/attachment.html>

From glyph at divmod.com  Fri Jun 26 11:48:47 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Jun 2009 17:48:47 -0000
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
Message-ID: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>


On 04:33 pm, benjamin.rutt at gs.com wrote:
>Am currently trying to upgrade to twisted-8.2.0.  For some reason,
>twisted-8.2.0 thinks my deferred below was gc'd with an unhandled 
>error,
>and tells me about it upon reactor exit.  With
>python-2.4.2/twisted-2.1.0, no issues.  With 
>python-2.6.1/twisted-8.2.0,
>I see these issues.  Any ideas why?  Thanks.

A second Deferred is created during getProcessOutput to track the ending 
of the process as distinct from the end of its output.  You have to 
catch that exception as well if you don't want any exceptions logged.

Arguably, this is a bug, since it changes the behavior and complicates 
error handling; if you think so, feel free to file a ticket on the 
tracker.  I just learned about this behavior myself, in the process of 
tracking down your question :).

This behavior was changed in:

    http://twistedmatrix.com/trac/changeset/24810

as part of a fix for:

    http://twistedmatrix.com/trac/ticket/3239

and that took place after 8.1 but before 8.2.  In the meanwhile, you 
could upgrade to 8.2 before going to 8.2 to avoid this issue; going from 
8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 ;).

If you'd still like to upgrade all the way, here's a "correct" version 
of your program (with spurious imports removed), according to the 
behavior in 8.2.0:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet.utils import getProcessOutput

def foo():
    d = getProcessOutput('/some/non/existent/program')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        failure.trap(IOError)
        def endedException(ended):
            print 'really, caught it!'
        failure.value.processEnded.addErrback(endedException)
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

def stopit():
    print 'Stopping reactor.'
    reactor.stop()
    print 'Stopped.'

reactor.callWhenRunning(foo)
reactor.callLater(1.0, stopit)
reactor.run()



From glyph at divmod.com  Fri Jun 26 11:53:51 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 26 Jun 2009 17:53:51 -0000
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
	<20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
Message-ID: <20090626175351.12555.854158547.divmod.xquotient.14675@weber.divmod.com>

On 05:48 pm, glyph at divmod.com wrote:
>and that took place after 8.1 but before 8.2.  In the meanwhile, you
>could upgrade to 8.2 before going to 8.2 to avoid this issue; going 
>from
                  ^
ahem.  I meant "upgrade to 8.1 before going to 8.2", of course.
>8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 
>;).



From Benjamin.Rutt at gs.com  Fri Jun 26 13:08:39 2009
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 26 Jun 2009 15:08:39 -0400
Subject: [Twisted-Python] Unhandled error in Deferred with twisted-8.2.0,
	but not with twisted-2.1.0
In-Reply-To: <20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
References: <F06E1DE459099B4191D150491D42BC361FA10120@gsmbnbp22es.firmwide.corp.gs.com>
	<20090626174847.12555.712921109.divmod.xquotient.14673@weber.divmod.com>
Message-ID: <F06E1DE459099B4191D150491D42BC361FB57796@gsmbnbp22es.firmwide.corp.gs.com>

Thank you for digging this up - I filed a bug.  

http://twistedmatrix.com/trac/ticket/3892

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of
glyph at divmod.com
Sent: Friday, June 26, 2009 1:49 PM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Unhandled error in Deferred with
twisted-8.2.0,but not with twisted-2.1.0


On 04:33 pm, benjamin.rutt at gs.com wrote:
>Am currently trying to upgrade to twisted-8.2.0.  For some reason,
>twisted-8.2.0 thinks my deferred below was gc'd with an unhandled 
>error,
>and tells me about it upon reactor exit.  With
>python-2.4.2/twisted-2.1.0, no issues.  With 
>python-2.6.1/twisted-8.2.0,
>I see these issues.  Any ideas why?  Thanks.

A second Deferred is created during getProcessOutput to track the ending

of the process as distinct from the end of its output.  You have to 
catch that exception as well if you don't want any exceptions logged.

Arguably, this is a bug, since it changes the behavior and complicates 
error handling; if you think so, feel free to file a ticket on the 
tracker.  I just learned about this behavior myself, in the process of 
tracking down your question :).

This behavior was changed in:

    http://twistedmatrix.com/trac/changeset/24810

as part of a fix for:

    http://twistedmatrix.com/trac/ticket/3239

and that took place after 8.1 but before 8.2.  In the meanwhile, you 
could upgrade to 8.2 before going to 8.2 to avoid this issue; going from

8.1 to 8.2 should be significantly easier than going from 2.1 to 8.1 ;).

If you'd still like to upgrade all the way, here's a "correct" version 
of your program (with spurious imports removed), according to the 
behavior in 8.2.0:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet.utils import getProcessOutput

def foo():
    d = getProcessOutput('/some/non/existent/program')
    def cb(result):
        print 'cb: %s' % (result)
    def eb(failure):
        failure.trap(IOError)
        def endedException(ended):
            print 'really, caught it!'
        failure.value.processEnded.addErrback(endedException)
        print 'eb caught the failure!'
    d.addCallback(cb)
    d.addErrback(eb)

def stopit():
    print 'Stopping reactor.'
    reactor.stop()
    print 'Stopped.'

reactor.callWhenRunning(foo)
reactor.callLater(1.0, stopit)
reactor.run()

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From james at mansionfamily.plus.com  Sat Jun 27 05:41:39 2009
From: james at mansionfamily.plus.com (James Mansion)
Date: Sat, 27 Jun 2009 12:41:39 +0100
Subject: [Twisted-Python] Conch sshd on windows
Message-ID: <4A460573.5070501@mansionfamily.plus.com>

Can/does the conch sshd authenticate local or domain Windows users?

James




From glyph at divmod.com  Sat Jun 27 10:14:45 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 27 Jun 2009 16:14:45 -0000
Subject: [Twisted-Python] Conch sshd on windows
In-Reply-To: <4A460573.5070501@mansionfamily.plus.com>
References: <4A460573.5070501@mansionfamily.plus.com>
Message-ID: <20090627161445.12555.955374788.divmod.xquotient.14677@weber.divmod.com>


On 11:41 am, james at mansionfamily.plus.com wrote:
>Can/does the conch sshd authenticate local or domain Windows users?

Not currently, but its authentication system is pluggable via 
twisted.cred, so it should be fairly straightforward to add that 
functionality.



From exarkun at twistedmatrix.com  Sat Jun 27 22:05:23 2009
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Jun 2009 04:05:23 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1246161923.51.1716739102@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20090628/2e8d962b/attachment.html>

From hoadley at gmail.com  Mon Jun 29 14:19:53 2009
From: hoadley at gmail.com (Rob Hoadley)
Date: Mon, 29 Jun 2009 13:19:53 -0700
Subject: [Twisted-Python] testing a tac file
Message-ID: <9bb390e70906291319i4ba38bbco155405f7475cf432@mail.gmail.com>

Hi, I'm curious if anyone has written a trial test to verify the
correct startup of a .tac file.

I have a buildbot running automated trial tests on all the services
I've written but nothing that closes the loop by building up the
services by running the tac file similarly to the way that you'd use
trial.   Ideally, I'd like to verify that the MultiService has
properly started up all the services from a list defined by the test.
I know this a fairly nitpicking problem.  In production, It's easy for
me to just ssh into the running process and see what's going on via
the manhole.  But, I was hoping to catch a badly behaving tac file in
the buildbot.  It may be something out of the scope of trial but I was
hoping someone has some integration test approaches for a twisted
project they could share.

thanks

-rob



From m-lists at the-moon.net  Mon Jun 29 16:17:36 2009
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 29 Jun 2009 23:17:36 +0100
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <18899.21979.864647.248897@jon.es>
References: <18899.21979.864647.248897@jon.es>
Message-ID: <fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>

On Wed, Apr 1, 2009 at 12:54 PM, Terry Jones<terry at jon.es> wrote:
> I was thinking it would be nice to have a Twisted interest group meetup at
> EuroPython (June 30 - July 2) http://www.europython.eu

I'm a little late replying to this, but yeah, I'd be interested in
meeting up with other Twisted users / devs and maybe working on some
Twisted tickets.

I'll be at the conference on Tue and Thu (maybe Saturday for the
sprints) I'll try and get to your talk tomorrow morning and introduce
myself.

-RichardW.



From exarkun at divmod.com  Mon Jun 29 16:37:31 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 29 Jun 2009 18:37:31 -0400
Subject: [Twisted-Python] testing a tac file
In-Reply-To: <9bb390e70906291319i4ba38bbco155405f7475cf432@mail.gmail.com>
Message-ID: <20090629223731.22176.49461141.divmod.quotient.10983@henry.divmod.com>

On Mon, 29 Jun 2009 13:19:53 -0700, Rob Hoadley <hoadley at gmail.com> wrote:
>Hi, I'm curious if anyone has written a trial test to verify the
>correct startup of a .tac file.
>
>I have a buildbot running automated trial tests on all the services
>I've written but nothing that closes the loop by building up the
>services by running the tac file similarly to the way that you'd use
>trial.   Ideally, I'd like to verify that the MultiService has
>properly started up all the services from a list defined by the test.
>I know this a fairly nitpicking problem.  In production, It's easy for
>me to just ssh into the running process and see what's going on via
>the manhole.  But, I was hoping to catch a badly behaving tac file in
>the buildbot.  It may be something out of the scope of trial but I was
>hoping someone has some integration test approaches for a twisted
>project they could share.

This is definitely one of the big shortcomings of .tac files.  I generally
approach this by absolutely minimizing the amount of code in the .tac file
itself.  This doesn't help you test the code that's there, but if you're
limited to importing a function that creates your service, calling that
function, and attaching it to the application object, at least there's
very little code that's untested, and it should be modified very
infrequently.

I welcome any suggestions for a better answer than this one.  It would
probably be easy to make a case for the inclusion of some APIs to help
out tests.  `twisted.application.service.loadApplication´ might even
go towards this end already - I've never tried writing a test using it,
but maybe that would work out well.

Jean-Paul



From terry at jon.es  Mon Jun 29 18:18:37 2009
From: terry at jon.es (Terry Jones)
Date: Tue, 30 Jun 2009 00:18:37 +0000
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
Message-ID: <1081896181-1246321135-cardhu_decombobulator_blackberry.rim.net-1598736267-@bxe1078.bisx.produk.on.blackberry>

Hi Richard

That sounds good. You might enjoy Esteve Fernandez's talk at 11:30, which is about how we're using Twisted plus Thrift and AMQP for messaging / RPC.

Terry

Enviado desde mi dispositivo BlackBerry® de Orange.

From glyph at divmod.com  Mon Jun 29 18:56:43 2009
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 30 Jun 2009 00:56:43 -0000
Subject: [Twisted-Python] Twisted meetup/discussion at EuroPython?
In-Reply-To: <fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>
References: <18899.21979.864647.248897@jon.es>
	<fa6a0cb50906291517w18ed6773k345e1414fba097b5@mail.gmail.com>
Message-ID: <20090630005643.12555.1741645507.divmod.xquotient.14704@weber.divmod.com>


On 29 Jun, 10:17 pm, m-lists at the-moon.net wrote:
>On Wed, Apr 1, 2009 at 12:54 PM, Terry Jones<terry at jon.es> wrote:
>>I was thinking it would be nice to have a Twisted interest group 
>>meetup at
>>EuroPython (June 30 - July 2) http://www.europython.eu
>
>I'm a little late replying to this, but yeah, I'd be interested in
>meeting up with other Twisted users / devs and maybe working on some
>Twisted tickets.
>
>I'll be at the conference on Tue and Thu (maybe Saturday for the
>sprints) I'll try and get to your talk tomorrow morning and introduce
>myself.
>
>-RichardW.

If you're organizing a sprint (formal or informal) at Europython, please 
let us know when it's going to be so that those of us elsewhere in the 
world can lend a hand by doing reviews!



From denis.bilenko at gmail.com  Mon Jun 29 20:14:54 2009
From: denis.bilenko at gmail.com (Denis Bilenko)
Date: Tue, 30 Jun 2009 09:14:54 +0700
Subject: [Twisted-Python] eventlet 0.8.11 released; now with twisted support
Message-ID: <95d6e98c0906291914t774e32afx8c89782c5e82ec56@mail.gmail.com>

Some of the changes from 0.8:

Eventlet can now run on top of twisted reactor. Twisted-based hub is
enabled automatically if
twisted.internet.reactor is imported. It is also possible to "embed"
eventlet into a twisted
application via eventlet.twistedutil.join_reactor. See the examples
for details.

http://bitbucket.org/denis/eventlet/src/tip/examples/

A new package, eventlet.twistedutil, is added that makes integration
of twisted and eventlet
easier. It has block_on function that allows to wait for a Deferred to
fire and it wraps
twisted's Protocol in a synchronous interface. This is similar to and
is inspired by Christopher
Armstrong's corotwine library. Thanks to Dan Pascu for reviewing the package.

Another new package, eventlet.green, was added to provide some of the
standard modules
that are fixed not to block other greenlets. This is an alternative to
monkey-patching
the socket, which is impossible to do if you are running twisted reactor.
The package includes socket, httplib, urllib2.

Much of the core functionality has been refactored and cleaned up,
including the removal
of eventlet.greenlib. This means that it is now possible to use plain
greenlets without
modification in eventlet, and the subclasses of greenlet instead of the old
eventlet.greenlib.GreenletContext. Calling
eventlet.api.get_hub().switch() now checks to
see whether the current greenlet has a "switch_out" method and calls
it if so, providing the
same functionality that the GreenletContext.swap_out used to. The
swap_in behavior can be
duplicated by overriding the switch method, and the finalize
functionality can be duplicated
by having a try: finally: block around the greenlet's main
implementation. The eventlet.backdoor
module has been ported to this new scheme, although it's signature had
to change slightly so
existing code that used the backdoor will have to be modified.

A number of bugs related to improper scheduling of switch calls has been fixed.
The fixed functions and classes include api.trampoline, api.sleep, coros.event,
coros.semaphore, coros.queue.

Many methods of greenio.GreenSocket were fixed to make its behavior
more like that of a regular
socket. Thanks to Marcin Bachry for fixing GreenSocket.dup to preserve
the timeout.

Added proc module which provides an easy way to subscribe to
coroutine's results. This makes
it easy to wait for a single greenlet or for a set of greenlets to complete.

wsgi.py now supports chunked transfer requests (patch by Mike Barton)

The following modules were deprecated or removed because they were broken:
hubs.nginx, hubs.libev, support.pycurls, support.twisteds, cancel
method of coros.event class

The following classes are still present but will be removed in the
future version:
- channel.channel (use coros.Channel)
- coros.CoroutinePool (use pool.Pool)

saranwrap.py now correctly closes the child process when the referring
object is deleted,
received some fixes to its detection of child process death, now
correctly deals with the in
keyword, and it is now possible to use coroutines in a non-blocking
fashion in the child process.

Time-based expiry added to db_pool.  This adds the ability to expire
connections both by idleness
and also by total time open.  There is also a connection timeout option.

A small bug in httpd's error method was fixed.

Python 2.3 is no longer supported.

A number of tests was added along with a script to run all of them for
all the configurations.
The script generates an html page with the results.

Thanks to Brian Brunswick for investigation of popen4 badness (eventlet.process)
Thanks to Marcus Cavanaugh for pointing out some coros.queue(0) bugs.

The twisted integration as well as many other improvements were funded
by AG Projects (http://ag-projects.com), thanks!



From vincent.gulinao at gmail.com  Tue Jun 30 02:07:57 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 16:07:57 +0800
Subject: [Twisted-Python] http.Request and JSON
Message-ID: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>

How do you read JSON content from a POST using http.Request. I peeked
on args and it's empty.

TIA.



From p.mayers at imperial.ac.uk  Tue Jun 30 02:18:04 2009
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 30 Jun 2009 09:18:04 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
Message-ID: <20090630081804.GA6278@wildfire.net.ic.ac.uk>

On Tue, Jun 30, 2009 at 09:07:57AM +0100, Vincent Gulinao wrote:
>How do you read JSON content from a POST using http.Request. I peeked
>on args and it's empty.

"args" is www-urlencoded only. If the content-type is something else 
it's not filled in.

You want:

request.content.read()

IIRC



From vincent.gulinao at gmail.com  Tue Jun 30 02:36:37 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 16:36:37 +0800
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630081804.GA6278@wildfire.net.ic.ac.uk>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
Message-ID: <fcc3e6170906300136m22f93f52w5b8e445f33121549@mail.gmail.com>

works :)

On Tue, Jun 30, 2009 at 4:18 PM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:
> On Tue, Jun 30, 2009 at 09:07:57AM +0100, Vincent Gulinao wrote:
>>How do you read JSON content from a POST using http.Request. I peeked
>>on args and it's empty.
>
> "args" is www-urlencoded only. If the content-type is something else
> it's not filled in.
>
> You want:
>
> request.content.read()
>
> IIRC
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From rlotun at gmail.com  Tue Jun 30 02:44:58 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 30 Jun 2009 09:44:58 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630081804.GA6278@wildfire.net.ic.ac.uk>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
Message-ID: <95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>

Hi,

On Tue, Jun 30, 2009 at 9:18 AM, Phil Mayers<p.mayers at imperial.ac.uk> wrote:
> request.content.read()

To be safer, I do a request.content.getvalue() since content is a
cStringIO object and you can never be sure if somewhere along the
chain of processing someone hasn't done a .read and forgot to do a
.seek(0,0).

Cheers,
Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From mithrandi at mithrandi.net  Tue Jun 30 05:56:52 2009
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 30 Jun 2009 13:56:52 +0200
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
	<95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
Message-ID: <f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>

On Tue, Jun 30, 2009 at 10:44 AM, Reza Lotun<rlotun at gmail.com> wrote:
> To be safer, I do a request.content.getvalue() since content is a
> cStringIO object and you can never be sure if somewhere along the
> chain of processing someone hasn't done a .read and forgot to do a
> .seek(0,0).

You should probably do the seek/read instead, since I don't believe
this is guaranteed to be a cStringIO; it might be an actual file on
disk, or something else.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From rlotun at gmail.com  Tue Jun 30 06:12:05 2009
From: rlotun at gmail.com (Reza Lotun)
Date: Tue, 30 Jun 2009 13:12:05 +0100
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>
References: <fcc3e6170906300107g354cc968g204ffd7a2956b5c6@mail.gmail.com>
	<20090630081804.GA6278@wildfire.net.ic.ac.uk>
	<95bb10690906300144t6bfb1d2h7dc4f8001ed7da42@mail.gmail.com>
	<f5eea9170906300456y57a3c522rf45128ed70936631@mail.gmail.com>
Message-ID: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>

Hi,

On Tue, Jun 30, 2009 at 12:56 PM, Tristan
Seligmann<mithrandi at mithrandi.net> wrote:
>> To be safer, I do a request.content.getvalue() since content is a
>> cStringIO object and you can never be sure if somewhere along the
>> chain of processing someone hasn't done a .read and forgot to do a
>> .seek(0,0).
>
> You should probably do the seek/read instead, since I don't believe
> this is guaranteed to be a cStringIO; it might be an actual file on
> disk, or something else.

If that's true then there really should be a .get_body() method on the
request object.

Reza

-- 
Reza Lotun
+44 (0)7521 310 763
rlotun at gmail.com



From exarkun at divmod.com  Tue Jun 30 06:41:46 2009
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 30 Jun 2009 08:41:46 -0400
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
Message-ID: <20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>

On Tue, 30 Jun 2009 13:12:05 +0100, Reza Lotun <rlotun at gmail.com> wrote:
>Hi,
>
>On Tue, Jun 30, 2009 at 12:56 PM, Tristan
>Seligmann<mithrandi at mithrandi.net> wrote:
>>> To be safer, I do a request.content.getvalue() since content is a
>>> cStringIO object and you can never be sure if somewhere along the
>>> chain of processing someone hasn't done a .read and forgot to do a
>>> .seek(0,0).
>>
>> You should probably do the seek/read instead, since I don't believe
>> this is guaranteed to be a cStringIO; it might be an actual file on
>> disk, or something else.
>
>If that's true then there really should be a .get_body() method on the
>request object.

Why can't you seek and read?

Also, this discussion would be more appropriate on the twisted-web mailing
list.

Jean-Paul



From vincent.gulinao at gmail.com  Tue Jun 30 07:56:18 2009
From: vincent.gulinao at gmail.com (Vincent Gulinao)
Date: Tue, 30 Jun 2009 21:56:18 +0800
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
References: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
	<20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
Message-ID: <fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>

In my case at least it's cStringIO, and getvalue() sufficed.

Sorry, subscribing to twisted-web now.

Thanks everyone.

On Tue, Jun 30, 2009 at 8:41 PM, Jean-Paul Calderone<exarkun at divmod.com> wrote:
> On Tue, 30 Jun 2009 13:12:05 +0100, Reza Lotun <rlotun at gmail.com> wrote:
>>Hi,
>>
>>On Tue, Jun 30, 2009 at 12:56 PM, Tristan
>>Seligmann<mithrandi at mithrandi.net> wrote:
>>>> To be safer, I do a request.content.getvalue() since content is a
>>>> cStringIO object and you can never be sure if somewhere along the
>>>> chain of processing someone hasn't done a .read and forgot to do a
>>>> .seek(0,0).
>>>
>>> You should probably do the seek/read instead, since I don't believe
>>> this is guaranteed to be a cStringIO; it might be an actual file on
>>> disk, or something else.
>>
>>If that's true then there really should be a .get_body() method on the
>>request object.
>
> Why can't you seek and read?
>
> Also, this discussion would be more appropriate on the twisted-web mailing
> list.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Tue Jun 30 08:33:16 2009
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 30 Jun 2009 10:33:16 -0400
Subject: [Twisted-Python] http.Request and JSON
In-Reply-To: <fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>
References: <95bb10690906300512n4c4a45ecx805d89ff96dec703@mail.gmail.com>
	<20090630124146.22176.877063711.divmod.quotient.11236@henry.divmod.com>
	<fcc3e6170906300656m130e2de8i5288f6907f068444@mail.gmail.com>
Message-ID: <1246372396.26636.11.camel@pintsize>

On Tue, 2009-06-30 at 21:56 +0800, Vincent Gulinao wrote:
> In my case at least it's cStringIO, and getvalue() sufficed.
> 
> Sorry, subscribing to twisted-web now.
> 
> Thanks everyone.

One last followup, for those not on twisted-web: DO NOT use getvalue().
The promised interface is file-like. And in fact, if the body is bigger
than a certain size the object will not be a cStringIO and your code
will break.




