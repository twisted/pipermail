From trac at twistedmatrix.com  Sun Feb  2 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Feb 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1391324715.75.1376471774129640617@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140202/6238c062/attachment.html>

From tobias.oberstein at tavendo.de  Mon Feb  3 13:41:10 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 12:41:10 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
Message-ID: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>

Hi,

for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP listening socket.

The option needs to be set _before_ calling bind() and listen() on the socket.

Is there a recommended way of doing this?

One option might be subclassing `twisted.internet.tcp.Port` and overriding `createInternetSocket` - is that recommended?

And if so: how do I make the CustomPort be used with reactor.listenTCP/listenSSL and endpoints?

Any hints appreciated, thanks!

/Tobias


From exarkun at twistedmatrix.com  Mon Feb  3 13:49:39 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 03 Feb 2014 20:49:39 -0000
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20140203204939.6683.2031633338.divmod.xquotient.44@top>

On 08:41 pm, tobias.oberstein at tavendo.de wrote:
>Hi,
>
>for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP 
>listening socket.

You might find that https://stackoverflow.com/questions/10077745 
/twistedweb-on-multicore-multiprocessor obviates the need for this 
option (and thus your follow-up features as well).

Not that Twisted shouldn't offer some way to gain more control over this 
kind of platform-specific option.  But, until it does...

Jean-Paul
>The option needs to be set _before_ calling bind() and listen() on the 
>socket.
>
>Is there a recommended way of doing this?
>
>One option might be subclassing `twisted.internet.tcp.Port` and 
>overriding `createInternetSocket` - is that recommended?
>
>And if so: how do I make the CustomPort be used with 
>reactor.listenTCP/listenSSL and endpoints?
>
>Any hints appreciated, thanks!
>
>/Tobias
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From tobias.oberstein at tavendo.de  Mon Feb  3 14:49:06 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 13:49:06 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <20140203204939.6683.2031633338.divmod.xquotient.44@top>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
Message-ID: <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>

> >for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP
> >listening socket.
> 
> You might find that https://stackoverflow.com/questions/10077745
> /twistedweb-on-multicore-multiprocessor obviates the need for this option (and
> thus your follow-up features as well).

Jean-Paul,

yes, I am aware of this (awesome) answer;) This works, but has 2 slightly
undesirable aspects:

1) it requires to have a master process that creates the socket and starts workers
which "adopt" the port. I'd like to be able to fire up workers independently .. with
no master at all.

2) the distribution of incoming connections to workers isn't completely uniformly
distributed across workers.

This problem is explained here (they report up to 3:1 ratios of connections per worker):
https://lwn.net/Articles/542629/
https://lwn.net/Articles/542718/

and I could verify this during some experiments (though not such extreme non-uniformity)

> 
> Not that Twisted shouldn't offer some way to gain more control over this kind
> of platform-specific option.  But, until it does...

I guess that means there is no "recommended" way currently;)

Would you mind giving a tip on how to make use of a CustomPort deriving
of Port? How to "plug" that into Twisted?

Thanks!
/Tobias

> 
> Jean-Paul
> >The option needs to be set _before_ calling bind() and listen() on the
> >socket.
> >
> >Is there a recommended way of doing this?
> >
> >One option might be subclassing `twisted.internet.tcp.Port` and
> >overriding `createInternetSocket` - is that recommended?
> >
> >And if so: how do I make the CustomPort be used with
> >reactor.listenTCP/listenSSL and endpoints?
> >
> >Any hints appreciated, thanks!
> >
> >/Tobias
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Mon Feb  3 15:19:49 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 03 Feb 2014 22:19:49 -0000
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20140203221949.6683.1874775514.divmod.xquotient.67@top>

On 09:49 pm, tobias.oberstein at tavendo.de wrote:
>> >for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP
>> >listening socket.
>>
>>You might find that https://stackoverflow.com/questions/10077745
>>/twistedweb-on-multicore-multiprocessor obviates the need for this 
>>option (and
>>thus your follow-up features as well).
>
>Jean-Paul,
>
>yes, I am aware of this (awesome) answer;) This works, but has 2 
>slightly
>undesirable aspects:
>
>1) it requires to have a master process that creates the socket and 
>starts workers
>which "adopt" the port. I'd like to be able to fire up workers 
>independently .. with
>no master at all.

There are ways around this but they're a bit more work (eg, workers 
listen on a unix socket and hand out the port to new workers that start 
up and ask for it).
>2) the distribution of incoming connections to workers isn't completely 
>uniformly
>distributed across workers.
>
>This problem is explained here (they report up to 3:1 ratios of 
>connections per worker):
>https://lwn.net/Articles/542629/
>https://lwn.net/Articles/542718/
>
>and I could verify this during some experiments (though not such 
>extreme non-uniformity)

Huh.  I didn't know about that.  That's too bad.
>>
>>Not that Twisted shouldn't offer some way to gain more control over 
>>this kind
>>of platform-specific option.  But, until it does...
>
>I guess that means there is no "recommended" way currently;)

Correct.
>Would you mind giving a tip on how to make use of a CustomPort deriving
>of Port? How to "plug" that into Twisted?

I have two suggestions, one of which I hope you'll like and the other of 
which you might not. :)

First, endpoints are the intended extension point for this sort of thing 
now.  You can write a plugin for the parser so that `serverFromString` 
will give out server endpoints for your port type (giving an appropriate 
string description).  Applications won't be able to tell what's going on 
because the server endpoint interface is just `.listen(factory)?.

Second, please don't subclass `Port`.  It's true there are no 
underscores anywhere in its name (`twisted.internet.tcp.Port`) making it 
part of Twisted's public API.  Nevertheless, it's very much a reactor 
implementation detail.  It's a mistake that it's public.  To compounded 
this, the exactly interface between a class and its subclasses is hazy 
and gross at best.  I'd discourage you (and everyone else) from 
subclassing *most* things in Twisted these days (lots of our APIs are 
still subclassing-oriented so it's not always possible to avoid, of 
course).

In this case, I think you might actually be able to re-use all of the 
important parts of `Port` without subclassing it.  You can create a 
bare-bones implementation of `IListeningPort` that creates a socket and 
sets the flags you want on it.  Then, use `reactor.adoptStreamPort` to 
get the reactor to create and initialize a new `Port` with your socket. 
This leaves you with a little code to duplicate (basically 
`createInternetSocket`) but a pretty small amount - and the upside is 
that you're totally isolated from the internals of `Port`, from the 
accidentally-public implementation details of `Port`, and even from the 
implementation detail of whether the reactor even *uses* `Port` or not. 
All you rely on is `reactor.adoptStreamPort` which is a nice, 
documented, tested, intentionally-public interface. :)

(For SSL, then you can wrap your own twisted.protocols.tls wrapper 
around the factory - which is all the reactor's listenSSL does these 
days, anyway).

Hope this helps,

Jean-Paul


From tobias.oberstein at tavendo.de  Mon Feb  3 16:15:55 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 15:15:55 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <20140203221949.6683.1874775514.divmod.xquotient.67@top>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
 <20140203221949.6683.1874775514.divmod.xquotient.67@top>
Message-ID: <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>

> >Would you mind giving a tip on how to make use of a CustomPort deriving
> >of Port? How to "plug" that into Twisted?
> 
> I have two suggestions, one of which I hope you'll like and the other of which
> you might not. :)

Awesome! This is enough hints to get me started.

I already have Twisted endpoint plugins, and I will follow that road, something like

tcpwithopts:tcp:9000:interface=0.0.0.0:reuse-port:true:disable-nagle:true

Subclassing Port / adoptStream: I see;) Not sure if this SO_REUSEPORT works
on Windows - if it does, another aspect then is that adoptStream is Unix-only ..

I will see. Thanks again!

/Tobias


> 
> First, endpoints are the intended extension point for this sort of thing now.  You
> can write a plugin for the parser so that `serverFromString` will give out server
> endpoints for your port type (giving an appropriate string description).
> Applications won't be able to tell what's going on because the server endpoint
> interface is just `.listen(factory)?.
> 
> Second, please don't subclass `Port`.  It's true there are no underscores
> anywhere in its name (`twisted.internet.tcp.Port`) making it part of Twisted's
> public API.  Nevertheless, it's very much a reactor implementation detail.  It's a
> mistake that it's public.  To compounded this, the exactly interface between a
> class and its subclasses is hazy and gross at best.  I'd discourage you (and
> everyone else) from subclassing *most* things in Twisted these days (lots of
> our APIs are still subclassing-oriented so it's not always possible to avoid, of
> course).
> 
> In this case, I think you might actually be able to re-use all of the important
> parts of `Port` without subclassing it.  You can create a bare-bones
> implementation of `IListeningPort` that creates a socket and sets the flags you
> want on it.  Then, use `reactor.adoptStreamPort` to get the reactor to create
> and initialize a new `Port` with your socket.
> This leaves you with a little code to duplicate (basically
> `createInternetSocket`) but a pretty small amount - and the upside is that
> you're totally isolated from the internals of `Port`, from the accidentally-public
> implementation details of `Port`, and even from the implementation detail of
> whether the reactor even *uses* `Port` or not.
> All you rely on is `reactor.adoptStreamPort` which is a nice, documented,
> tested, intentionally-public interface. :)
> 
> (For SSL, then you can wrap your own twisted.protocols.tls wrapper around the
> factory - which is all the reactor's listenSSL does these days, anyway).
> 
> Hope this helps,
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

From david at davidstrauss.net  Tue Feb  4 16:55:04 2014
From: david at davidstrauss.net (David Timothy Strauss)
Date: Tue, 4 Feb 2014 15:55:04 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
 <20140203221949.6683.1874775514.divmod.xquotient.67@top>
 <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAKz8sYUFTJgEvfJU7Y8ro7bn1TyqfNZH4NVnyJVxzB3mdmBrWQ@mail.gmail.com>

You can also accomplish this using systemd socket activation with the
ReusePort= option [1]. Twisted supports inheriting such sockets from
systemd.

[1] http://www.freedesktop.org/software/systemd/man/systemd.socket.html


From david at davidstrauss.net  Tue Feb  4 17:03:03 2014
From: david at davidstrauss.net (David Timothy Strauss)
Date: Tue, 4 Feb 2014 16:03:03 -0800
Subject: [Twisted-Python] Sending feedback on SSH authentication failures
Message-ID: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>

Is there a straightforward way to send text feedback to users when
their authentication fails? At Pantheon, we use a custom
implementation of IRealm. I'm hoping there's a way to send or return
the output from there.

We particularly need this because users will have various two-factor
authentication modes configured, and a simple pass/fail for
authentication will leave many scratching their heads.

I don't see any examples of such output on the relevant documentation page [1].

[1] https://twistedmatrix.com/documents/current/core/howto/cred.html


From toph_ut at yahoo.de  Wed Feb  5 08:59:05 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Wed, 5 Feb 2014 15:59:05 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
Message-ID: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>

Hello,
im trying to make Twisted run on an embedded system which doesnt support fork() and exec().
Lets say i have a function os.writeLine(), which just makes a prinft("foo") on the stdout.
I implemented writeLine() in the posixmodule.c of the python so os.writeLine() would make the work.


Now i would like to create a Process (from buildbot ShellCommand) which just calls writeLine() and gets the stdout of it (foo).
No fork, no exec ..
std are standards: 0,1 and 2.
since i tried to understand the?class Process(_BaseProcess) in (twisted/internet/process) and i couldnt resolve my problem alone, i would like to get some help so could someone please point me to the right direction ..

best regards ..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140205/f221f2b2/attachment.html>

From dustin at v.igoro.us  Wed Feb  5 09:13:18 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 5 Feb 2014 11:13:18 -0500
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
Message-ID: <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>

What's your ultimate goal here?  It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin

On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From toph_ut at yahoo.de  Thu Feb  6 00:12:58 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 6 Feb 2014 07:12:58 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
 <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
Message-ID: <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>

Hello,
?
My ultimate goal is to get the output from stdout and print it out on the
log of buildbot.
It is a process. I just wanted to make it easy here so you can understand
what i need.
Its on a VxWorks, which doenst support fork() nor exec().
It has just a function taskSpawn() which spawn a Task. This task prints out
few lines on the stdout.

I want to make buildbot run on VxWorks. FileUpload and FileDownload works
fine.
ShellCommand doenst.


I hope you understand now my ultimate goal and thank you for your time.

Best regards.



Dustin J. Mitchell <dustin at v.igoro.us> schrieb am 17:13 Mittwoch, 5.Februar 2014:
 
What's your ultimate goal here?? It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin


On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140206/793e64ff/attachment.html>

From toph_ut at yahoo.de  Thu Feb  6 02:42:59 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 6 Feb 2014 09:42:59 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
 <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
 <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>
Message-ID: <1391679779.61890.YahooMailNeo@web171701.mail.ir2.yahoo.com>

Or is there maybe any other socket-implementation for that part like?_Win32Waker as a replacement for _UnixWaker.
My implementation would be a bit Windows-Like (_dumpwin32proc) ..
I have pipe(), taskSpawn() [like CreateProcess()] and i want to get the output from there and parse it to my buildbot Process (ShellCommand).

I dont know how clear my goal is ..

VxWorks 6.9 (POSIX 1003.1c, PSE52 Profile)

Best regards.



Toph Bei Fong <toph_ut at yahoo.de> schrieb am 8:12 Donnerstag, 6.Februar 2014:
 
Hello,
?
My ultimate goal is to get the output from stdout and print it out on the
log of buildbot.
It is a process. I just wanted to make it easy here so you can understand
what i need.
Its on a VxWorks, which doenst support fork() nor exec().
It has just a function taskSpawn() which spawn a Task. This task prints out
few lines on the stdout.

I want to make buildbot run on VxWorks. FileUpload and FileDownload works
fine.
ShellCommand doenst.


I hope you understand now my ultimate goal and thank you for your time.

Best regards.



Dustin J. Mitchell <dustin at v.igoro.us> schrieb am 17:13 Mittwoch, 5.Februar 2014:
 
What's your ultimate goal here?? It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin


On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an
 embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140206/ee96bdf2/attachment.html>

From twisted at tomvn.com  Thu Feb  6 17:24:00 2014
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Fri, 7 Feb 2014 00:24:00 +0000
Subject: [Twisted-Python] Sending feedback on SSH authentication failures
In-Reply-To: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>
References: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>
Message-ID: <CAMwy1tzEc5ne89Y4pRO0b0Vqyp71tEgBt57SdfEJxFgT+GZbBw@mail.gmail.com>

SSH (and by association conch) sends feedback to users but unless you ssh
-v you won't see much of it. Sending text feedback without using the
standard auth methods might require you to move your two factor auth into
your protocol but this doesn't feel like a good idea to me. I'm relatively
new to conch and my use case is quite different to yours so if I'm wrong
and there is a way to do this I hope someone else jumps in to correct me.

I did a quick test with
http://twistedmatrix.com/documents/current/api/twisted.conch.checkers.SSHProtocolChecker.htmlas
my portals checker and that lets me require both password (something
you
know) and key (something you have).
My test doesn't handle "ticking" already used auth methods off the list of
authentications that can continue but I don't think it would be too hard to
get that working.
I see the following in my ssh client connection when connecting to my
server. As I said I don't tick off used methods which is why you see
"Authentications that can continue: password,publickey" instead of just
password.

$ ssh -v -p 5022 user at localhost
OpenSSH_6.2p2 Ubuntu-6ubuntu0.1, OpenSSL 1.0.1e 11 Feb 2013
debug1: Reading configuration data /home/tom/.ssh/config
....
debug1: Remote protocol version 2.0, remote software version Twisted
....
debug1: Authentications that can continue: password,publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /home/tom/.ssh/id_rsa
debug1: Server accepts key: pkalg ssh-rsa blen 279
Authenticated with partial success.
debug1: Authentications that can continue: password,publickey
....
debug1: Next authentication method: password
user at localhost's password:
debug1: Authentication succeeded (password).
Authenticated to localhost ([127.0.0.1]:5022).
debug1: channel 0: new [client-session]
debug1: Entering interactive session.
debug1: Sending environment.
debug1: Sending env LANG = en_GB.UTF-8

Hope that helps.


On Wed, Feb 5, 2014 at 12:03 AM, David Timothy Strauss <
david at davidstrauss.net> wrote:

> Is there a straightforward way to send text feedback to users when
> their authentication fails? At Pantheon, we use a custom
> implementation of IRealm. I'm hoping there's a way to send or return
> the output from there.
>
> We particularly need this because users will have various two-factor
> authentication modes configured, and a simple pass/fail for
> authentication will leave many scratching their heads.
>
> I don't see any examples of such output on the relevant documentation page
> [1].
>
> [1] https://twistedmatrix.com/documents/current/core/howto/cred.html
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140207/82f160f4/attachment.html>

From ldc at ldom.net  Fri Feb  7 09:10:04 2014
From: ldc at ldom.net (Laurent Domenech-Cabaud)
Date: Fri, 7 Feb 2014 17:10:04 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to implement the
	feature?
Message-ID: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>

Hello,

We're looking to hire (contract) someone with a good knowledge of Twisted, ideally a dev of this great project.

What we need is fairly simple: implement an HTTPS transparent proxy to work with a basic HTTP proxy (based on the example from the doc). The HTTPS proxy will just have to pass the data to/from the destination server (untouched, but some filtering will be added by us on the destination host name) and the HTTP proxy will do a little more filtering (this portion is not part of the work to be done).

Please let me know. I?m at your disposal for more details. If it?s not the proper place to ask, please accept my apologies. 

Cheers,
Laurent

From _ at lvh.io  Fri Feb  7 10:44:49 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Fri, 7 Feb 2014 18:44:49 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to implement
	the feature?
In-Reply-To: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>
References: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>
Message-ID: <CAE_Hg6aQWOo7gpHxv18=MRPHD8hAj2jxpg-cZfwFsUYOpktfmw@mail.gmail.com>

Hi Laurent,

Apologies for brevity; I am on my phone.

I am a Twisted core developer, and the author of minitrue, a software
package that uses the proxy parts of Twisted. I am currently available for
contracting.

hth
lvh
On Feb 7, 2014 5:12 PM, "Laurent Domenech-Cabaud" <ldc at ldom.net> wrote:

> Hello,
>
> We're looking to hire (contract) someone with a good knowledge of Twisted,
> ideally a dev of this great project.
>
> What we need is fairly simple: implement an HTTPS transparent proxy to
> work with a basic HTTP proxy (based on the example from the doc). The HTTPS
> proxy will just have to pass the data to/from the destination server
> (untouched, but some filtering will be added by us on the destination host
> name) and the HTTP proxy will do a little more filtering (this portion is
> not part of the work to be done).
>
> Please let me know. I'm at your disposal for more details. If it's not the
> proper place to ask, please accept my apologies.
>
> Cheers,
> Laurent
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140207/30165424/attachment.html>

From kasturi.surya at gmail.com  Fri Feb  7 12:06:02 2014
From: kasturi.surya at gmail.com (Surya)
Date: Sat, 8 Feb 2014 00:36:02 +0530
Subject: [Twisted-Python] Like to write some code for Twisted
Message-ID: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>

Hello there,

I'm Surya - github.com/ksurya

I have been working on Django and consider as beginner in Python and
Django or may be a little bit more than a beginner.

After dealing with pretty high level layers, I am curious to work on
the low level layers and contribute some code. That said, I haven't
really worked on Twisted anytime and didn't dwell into this stack.

So, I was wondering if there anyone who can offer some specific help
to get me started.

Cheers
Surya


From ldc at ldom.net  Sat Feb  8 03:51:26 2014
From: ldc at ldom.net (Laurent Domenech-Cabaud)
Date: Sat, 8 Feb 2014 11:51:26 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to
	implement	the feature?
In-Reply-To: <mailman.1.1391799601.10767.twisted-python@twistedmatrix.com>
References: <mailman.1.1391799601.10767.twisted-python@twistedmatrix.com>
Message-ID: <16F39883-F574-4BDB-8704-1A757E80A322@ldom.net>

Hi Laurens,

Thanks. I?ll email you privately.

Cheers,
Laurent

On 7 f?vr. 2014, at 20:00, twisted-python-request at twistedmatrix.com wrote:

> Message: 3
> Date: Fri, 7 Feb 2014 18:44:49 +0100
> From: Laurens Van Houtven <_ at lvh.io>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] how to hire a Twisted developer to
> 	implement	the feature?
> Message-ID:
> 	<CAE_Hg6aQWOo7gpHxv18=MRPHD8hAj2jxpg-cZfwFsUYOpktfmw at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> Hi Laurent,
> 
> Apologies for brevity; I am on my phone.
> 
> I am a Twisted core developer, and the author of minitrue, a software
> package that uses the proxy parts of Twisted. I am currently available for
> contracting.
> 
> hth
> lvh
> On Feb 7, 2014 5:12 PM, "Laurent Domenech-Cabaud" <ldc at ldom.net> wrote:
> 
>> Hello,
>> 
>> We're looking to hire (contract) someone with a good knowledge of Twisted,
>> ideally a dev of this great project.
>> 
>> What we need is fairly simple: implement an HTTPS transparent proxy to
>> work with a basic HTTP proxy (based on the example from the doc). The HTTPS
>> proxy will just have to pass the data to/from the destination server
>> (untouched, but some filtering will be added by us on the destination host
>> name) and the HTTP proxy will do a little more filtering (this portion is
>> not part of the work to be done).
>> 
>> Please let me know. I'm at your disposal for more details. If it's not the
>> proper place to ask, please accept my apologies.
>> 
>> Cheers,
>> Laurent
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140207/30165424/attachment-0001.html>
> 
> ------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> End of Twisted-Python Digest, Vol 119, Issue 5
> **********************************************



From _ at lvh.io  Sat Feb  8 08:50:04 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 8 Feb 2014 16:50:04 +0100
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
Message-ID: <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>

Hi Surya!


First of all, thank you for offering up your free time to help Twisted.

Specific advice:

1. Join #twisted
2. Join #twisted-dev
3. https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140208/f3e0b7a4/attachment.html>

From trac at twistedmatrix.com  Sun Feb  9 00:05:14 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Feb 2014 07:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1391929514.9.4946779244294367840@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140209/cc92bc98/attachment.html>

From grindizer at gmail.com  Sun Feb  9 05:34:58 2014
From: grindizer at gmail.com (Flint)
Date: Sun, 9 Feb 2014 13:34:58 +0100
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
 <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>
Message-ID: <CALpq1pZ=sYpTw4QMxzmh7sKtGJ+zjzoaAYpc=KT8f+AyTA1L2Q@mail.gmail.com>

Hi Surya

Here one of the best introduction to Twisted I know :)
http://krondo.com/?page_id=1327





2014-02-08 Laurens Van Houtven <_ at lvh.io>:

> Hi Surya!
>
>
> First of all, thank you for offering up your free time to help Twisted.
>
> Specific advice:
>
> 1. Join #twisted
> 2. Join #twisted-dev
> 3. https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
> hth
> lvh
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140209/5e8e7aa7/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 10 16:19:13 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Feb 2014 17:19:13 -0600
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
Message-ID: <074C0124-2573-4E72-A9F5-ACBF3D159850@twistedmatrix.com>

On Feb 7, 2014, at 1:06 PM, Surya <kasturi.surya at gmail.com> wrote:

> Hello there,
> 
> I'm Surya - github.com/ksurya

Hi Surya!

> I have been working on Django and consider as beginner in Python and
> Django or may be a little bit more than a beginner.

Welcome to the Twisted community.

> After dealing with pretty high level layers, I am curious to work on
> the low level layers and contribute some code. That said, I haven't
> really worked on Twisted anytime and didn't dwell into this stack.

Glad to hear you're interested!

> So, I was wondering if there anyone who can offer some specific help
> to get me started.

I think the best I can do is to ask you: what are your interests?  Twisted does a lot of things: web, email, chat, name servers, and authentication to name a few things.  Do you have any specific interests in these areas, or do you just want to work on the lowest-level thing possible?  Have you looked through the bug tracker?  Usually it's best to familiarize yourself with our development process by submitting a very small change, like a fix for a typo, and just get it through code review and committing.

-glyph

From oscar.campos at member.fsf.org  Mon Feb 10 16:39:04 2014
From: oscar.campos at member.fsf.org (Oscar Campos)
Date: Mon, 10 Feb 2014 23:39:04 +0000
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
Message-ID: <52F96318.2000507@member.fsf.org>

Hi folks.

It's possible to run several instances of the same twisted based
application sharing the same port and balancing the access to them? If
it's possible, can you give me some link to any documentation about that
or the code were it is implemented?

Thank you.

Oscar Campos.

-- 
Join the free software foundation and become free as in freedom



From glyph at twistedmatrix.com  Mon Feb 10 16:41:43 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Feb 2014 17:41:43 -0600
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
In-Reply-To: <52F96318.2000507@member.fsf.org>
References: <52F96318.2000507@member.fsf.org>
Message-ID: <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>


On Feb 10, 2014, at 5:39 PM, Oscar Campos <oscar.campos at member.fsf.org> wrote:

> Hi folks.
> 
> It's possible to run several instances of the same twisted based
> application sharing the same port and balancing the access to them? If
> it's possible, can you give me some link to any documentation about that
> or the code were it is implemented?
> 
> Thank you.
> 
> Oscar Campos.

Does this do what you'd like?

<https://pypi.python.org/pypi/txLoadBalancer/>

-glyph




From oscar.campos at member.fsf.org  Mon Feb 10 18:06:23 2014
From: oscar.campos at member.fsf.org (Oscar Campos)
Date: Tue, 11 Feb 2014 01:06:23 +0000
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
In-Reply-To: <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>
References: <52F96318.2000507@member.fsf.org>
 <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>
Message-ID: <52F9778F.3040508@member.fsf.org>

On 02/10/2014 11:41 PM, Glyph wrote:
> On Feb 10, 2014, at 5:39 PM, Oscar Campos <oscar.campos at member.fsf.org> wrote:
>
>> Hi folks.
>>
>> It's possible to run several instances of the same twisted based
>> application sharing the same port and balancing the access to them? If
>> it's possible, can you give me some link to any documentation about that
>> or the code were it is implemented?
>>
>> Thank you.
>>
>> Oscar Campos.
> Does this do what you'd like?
>
> <https://pypi.python.org/pypi/txLoadBalancer/>
>
> -glyph
>
Hi glyph.

Thanks for the link, I didn't knew about this module. I was meaning more
like sharing a port between processes of the same code base and balance
the incoming connections without any other external application. Anyway
I will take a good look at this txLoadBalancer project (it seems pretty
inactive btw).

Regards.

Oscar Campos

-- 
Join the free software foundation and become free as in freedom



From tmkasun at gmail.com  Tue Feb 11 19:19:39 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Wed, 12 Feb 2014 07:49:39 +0530
Subject: [Twisted-Python]  positioning framework
Message-ID: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>

Hi,

It took long time to go through the ticket[1] and understands,
still i couldn't find any issue with it, instead its working perfectly for
me. and thanks to the twisted positioning NMEA adapter, it become easy to
me to write a adapter for the device(MVT380  device[2]) which i'm using in
my project[3].

IMHO,

1. isn't it good to use items() rather than iteritems() since python 3.x
has deprecated iteritems(),

2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of key
'K' which convert Km/h unit to meters/s because it has a FIXER
for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
(it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
indicates that speed over ground is in kilometers/hour.

other than those suggestions,its works perfectly well. i wonder why this
positioning module didn't merged with the trunk yet,and i'll be happy if i
can help to get it merged.


[1] https://twistedmatrix.com/trac/ticket/3926
[2] http://www.mvt380.com/
[3]
https://github.com/tmkasun/port/blob/kasun/server_Program/server_twisting/syscall/mvt380.py

-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140212/045af6e8/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: speed_units.patch
Type: text/x-patch
Size: 1273 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140212/045af6e8/attachment.bin>

From _ at lvh.io  Wed Feb 12 01:28:05 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 12 Feb 2014 09:28:05 +0100
Subject: [Twisted-Python] positioning framework
In-Reply-To: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
References: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
Message-ID: <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>

Hi Kasun!

I'm lvh, the primary author of the ticket.

On Wed, Feb 12, 2014 at 3:19 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:

> It took long time to go through the ticket[1] and understands,
> still i couldn't find any issue with it, instead its working perfectly for
> me. and thanks to the twisted positioning NMEA adapter, it become easy to
> me to write a adapter for the device(MVT380  device[2]) which i'm using in
> my project[3].
>

Awesome! Glad to hear it's working so well for you.

 IMHO,
>
> 1. isn't it good to use items() rather than iteritems() since python 3.x
> has deprecated iteritems(),
>

There are many more Python 3 issues, I suspect. Both of those would work;
I'm personally a bigger fan of using things like six' iteritems(d); which
does d.items() on 3.x and d.iteritems() on 2.x, since you guarantee that
you have identical semantics (modulo all the fancy things you can do with
views that you can't do with iterators). I think there's a few cases where
I don't really want *all* the items (although, of course, premature
optimization is the root of all evil :)).


> 2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of key
> 'K' which convert Km/h unit to meters/s because it has a FIXER
> for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
> (it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
> indicates that speed over ground is in kilometers/hour.
>

That's there for forward compatibility as well as compatibility with really
bad GPSes that use illegal units.

The fix for that lives in:


 def _fixUnits

So it is independent from any particular unit. That just blindly indexes
into that dict; so if a GPS says something is in kph, it will convert to
m/s, even when according to the spec kph isn't a valid unit for that.

Also as you mentioned for some *other* sentences it *is* a valid unit, but
that's okay, we can just leave it there and then later add GPVTG support
and get units conversion for free!

 other than those suggestions,its works perfectly well. i wonder why this
> positioning module didn't merged with the trunk yet,and i'll be happy if i
> can help to get it merged.
>

The ticket is up for review, and has been for a long time. Since you have
apparently reviewed the ticket and used the code, would you mind giving it
a review so it can (finally!) get into Twisted itself? Review instructions
are here:

https://twistedmatrix.com/trac/wiki/ReviewProcess

Some of the review comments so far have asked for extensive changes. I am
reminded of this e-mail by Glyph:

https://twistedmatrix.com/pipermail/twisted-python/2014-January/027894.html

... which is quite long, but I think the bottom line is that you should
just trust the review process and do that :)

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140212/6bcfd208/attachment.html>

From tmkasun at gmail.com  Wed Feb 12 20:06:08 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Thu, 13 Feb 2014 08:36:08 +0530
Subject: [Twisted-Python] positioning framework
In-Reply-To: <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>
References: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
 <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>
Message-ID: <CAP7UUeNv=yUsEupuZ7RHR2Qj9NExHasS1O_aXpkowpuaczJj4w@mail.gmail.com>

Hi lvh,
Yes sure i will do some more testing with the module and do  review,  thank
you for the links

On Wed, Feb 12, 2014 at 1:58 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Kasun!
>
> I'm lvh, the primary author of the ticket.
>
> On Wed, Feb 12, 2014 at 3:19 AM, Kasun Thennakoon <tmkasun at gmail.com>wrote:
>
>> It took long time to go through the ticket[1] and understands,
>> still i couldn't find any issue with it, instead its working perfectly
>> for me. and thanks to the twisted positioning NMEA adapter, it become easy
>> to me to write a adapter for the device(MVT380  device[2]) which i'm using
>> in my project[3].
>>
>
> Awesome! Glad to hear it's working so well for you.
>
>  IMHO,
>>
>> 1. isn't it good to use items() rather than iteritems() since python 3.x
>> has deprecated iteritems(),
>>
>
> There are many more Python 3 issues, I suspect. Both of those would work;
> I'm personally a bigger fan of using things like six' iteritems(d); which
> does d.items() on 3.x and d.iteritems() on 2.x, since you guarantee that
> you have identical semantics (modulo all the fancy things you can do with
> views that you can't do with iterators). I think there's a few cases where
> I don't really want *all* the items (although, of course, premature
> optimization is the root of all evil :)).
>
>
>> 2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of
>> key 'K' which convert Km/h unit to meters/s because it has a FIXER
>> for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
>> (it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
>> indicates that speed over ground is in kilometers/hour.
>>
>
> That's there for forward compatibility as well as compatibility with
> really bad GPSes that use illegal units.
>
> The fix for that lives in:
>
>
>
>  def _fixUnits
>
> So it is independent from any particular unit. That just blindly indexes
> into that dict; so if a GPS says something is in kph, it will convert to
> m/s, even when according to the spec kph isn't a valid unit for that.
>
> Also as you mentioned for some *other* sentences it *is* a valid unit, but
> that's okay, we can just leave it there and then later add GPVTG support
> and get units conversion for free!
>
>  other than those suggestions,its works perfectly well. i wonder why this
>> positioning module didn't merged with the trunk yet,and i'll be happy if i
>> can help to get it merged.
>>
>
> The ticket is up for review, and has been for a long time. Since you have
> apparently reviewed the ticket and used the code, would you mind giving it
> a review so it can (finally!) get into Twisted itself? Review instructions
> are here:
>
> https://twistedmatrix.com/trac/wiki/ReviewProcess
>
> Some of the review comments so far have asked for extensive changes. I am
> reminded of this e-mail by Glyph:
>
> https://twistedmatrix.com/pipermail/twisted-python/2014-January/027894.html
>
> ... which is quite long, but I think the bottom line is that you should
> just trust the review process and do that :)
>
> hth
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140213/721bda06/attachment.html>

From sank.daniel at gmail.com  Thu Feb 13 00:17:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 12 Feb 2014 23:17:43 -0800
Subject: [Twisted-Python] Where are the documentation files?
Message-ID: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>

I am following the instructions on this web page

https://twistedmatrix.com/trac/wiki/ReviewingDocumentation

to prepare a submission for a documentation edit in the pb section of the
howto. However, I can't find any of the supposed xhtml files that are
supposed to comprise the documentation. For example, the web page mentions

trunk/doc/core/howto/choosing-reactor.xhtml

In my SVN checkout, that file simply does not exist. In fact there aren't
any documentation files in the SVN checkout. I would blame this on improper
SVN checkout, but here's a copy/paste of the url from whence I got the
checkout

svn://svn.twistedmatrix.com/svn/Twisted/trunk

Anyone know what's going on?

Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140212/ef441a3c/attachment.html>

From adi at roiban.ro  Thu Feb 13 00:37:43 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 13 Feb 2014 09:37:43 +0200
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
Message-ID: <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>

On 13 February 2014 09:17, Daniel Sank <sank.daniel at gmail.com> wrote:

> I am following the instructions on this web page
>
> https://twistedmatrix.com/trac/wiki/ReviewingDocumentation
>
> to prepare a submission for a documentation edit in the pb section of the
> howto. However, I can't find any of the supposed xhtml files that are
> supposed to comprise the documentation. For example, the web page mentions
>
> trunk/doc/core/howto/choosing-reactor.xhtml
>
> In my SVN checkout, that file simply does not exist. In fact there aren't
> any documentation files in the SVN checkout. I would blame this on improper
> SVN checkout, but here's a copy/paste of the url from whence I got the
> checkout
>
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
> Anyone know what's going on?
>
>
Hi,

There is a process of migrating the documentation to Sphinx. Look in the
new /docs/ folder.
https://github.com/twisted/twisted/tree/trunk/docs

Good luck
Adi


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140213/34857428/attachment.html>

From sank.daniel at gmail.com  Thu Feb 13 00:40:00 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 12 Feb 2014 23:40:00 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
Message-ID: <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>

> There is a process of migrating the documentation to Sphinx.
> Look in the new /docs/ folder.
https://github.com/twisted/twisted/tree/trunk/docs

So all of the information on the website regarding how to contribute to
documentation is now obsolete and incorrect?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140212/38514e49/attachment.html>

From adi at roiban.ro  Thu Feb 13 00:56:27 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 13 Feb 2014 09:56:27 +0200
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
Message-ID: <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>

On 13 February 2014 09:40, Daniel Sank <sank.daniel at gmail.com> wrote:

> > There is a process of migrating the documentation to Sphinx.
> > Look in the new /docs/ folder.
> https://github.com/twisted/twisted/tree/trunk/docs
>
> So all of the information on the website regarding how to contribute to
> documentation is now obsolete and incorrect?
>

For now. Feel free to report errors and suggest new text for the site.

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140213/d81dd5fb/attachment.html>

From sank.daniel at gmail.com  Thu Feb 13 01:53:15 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Thu, 13 Feb 2014 00:53:15 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
Message-ID: <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>

> For now. Feel free to report errors and suggest new text for the site.

Right. What is the appropriate channel to report errors with the website?
Also, do you have any idea when the new documentation system will up and
ready for contributions?

Thanks,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140213/b891eb56/attachment-0001.html>

From orestis at orestis.gr  Fri Feb 14 05:21:59 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Fri, 14 Feb 2014 14:21:59 +0200
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
Message-ID: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>

Hello,

I just filed https://twistedmatrix.com/trac/ticket/6972

The issue I'm facing is a deadlocked Python on OS X when a lot of 
processes are spawned. In the repro script we do this very aggressively 
to trigger the deadlock quickly, but the actual program that does this 
"ticks" every minute.

There is a possibility that this is either a Python bug or an OS X issue 
as the same program used to run fine in 10.5 and after some upgrades to 
10.7 this issue appeared. We worked around it by using 2.6 but now we 
need 2.7.

I know this is going to be difficult for people to reproduce, so I 
wonder if someone can help me investigate the issue further. I found 
this https://dev.launchpad.net/Debugging/GDB but it doesn't work - I 
believe, without being able to confirm, that the issue is that GDB can't 
really work with clang-built executables? Or perhaps I don't have the 
debugging symbols.

Any help would be greatly appreciated.

Orestis


From _ at lvh.io  Sat Feb 15 02:45:24 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 15 Feb 2014 10:45:24 +0100
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
Message-ID: <CAE_Hg6ZZD_r5e4=E6NcX5959z96S8pa1-7Fzvc3J-=R2N4Eabg@mail.gmail.com>

Hi Orestis,


Since creating processes involves syscalls, I would expect the tool of
choice to debug this on OS X to be dtruss.

I wish I could help on this endeavor but right now I'm focusing on fighting
e-mail. (Brace yourself. PyCon is coming.)


hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140215/b4c0b389/attachment.html>

From itamar at itamarst.org  Sat Feb 15 07:38:53 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 15 Feb 2014 09:38:53 -0500
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
Message-ID: <52FF7BFD.9030907@itamarst.org>

On 02/14/2014 07:21 AM, Orestis Markou wrote:
> Hello,
>
> I just filed https://twistedmatrix.com/trac/ticket/6972
>
> The issue I'm facing is a deadlocked Python on OS X when a lot of 
> processes are spawned. In the repro script we do this very 
> aggressively to trigger the deadlock quickly, but the actual program 
> that does this "ticks" every minute.
>
> There is a possibility that this is either a Python bug or an OS X 
> issue as the same program used to run fine in 10.5 and after some 
> upgrades to 10.7 this issue appeared. We worked around it by using 2.6 
> but now we need 2.7.
>
> I know this is going to be difficult for people to reproduce, so I 
> wonder if someone can help me investigate the issue further. I found 
> this https://dev.launchpad.net/Debugging/GDB but it doesn't work - I 
> believe, without being able to confirm, that the issue is that GDB 
> can't really work with clang-built executables? Or perhaps I don't 
> have the debugging symbols.

When debugging Python deadlocks in general:

1. Try https://pypi.python.org/pypi/faulthandler/ - send appropriate 
signal when process deadlocks.

2. If that doesn't work, I have had good luck debugging at least one 
Python mystery freeze with GDB. In particular because it has built-in 
Python support (sometimes), you to actually get a Python traceback. This 
assumes access to debugging symbols, though. lldb may have similar 
functionality, maybe Googling can help with that and finding debug symbols.


In this particular case, the traceback plus some googling 
(http://bugs.python.org/issue11768 is what I found, presumably a 
different bug though) suggests the bug may be something like signal 
handler not being re-entrant for some reason and you're getting SIGCHLD 
just in the C code handling SIGCHLD. Try disabling SIGCHLD and just 
calling "twisted.internet.process.reapAllProcesses()" a few times a 
second and see if that's a good workaround - if so, add a note to the 
bug. If that is the case you may be able to reproduce the bug by setting 
a SIGCHLD handler and then sending SIGCHLD to the process a lot, no 
Twisted involved.


From glyph at twistedmatrix.com  Sat Feb 15 12:58:34 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 15 Feb 2014 11:58:34 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <52FF7BFD.9030907@itamarst.org>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
Message-ID: <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>


On Feb 15, 2014, at 6:38 AM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> In this particular case, the traceback plus some googling (http://bugs.python.org/issue11768 is what I found, presumably a different bug though) suggests the bug may be something like signal handler not being re-entrant for some reason and you're getting SIGCHLD just in the C code handling SIGCHLD. Try disabling SIGCHLD and just calling "twisted.internet.process.reapAllProcesses()" a few times a second and see if that's a good workaround - if so, add a note to the bug. If that is the case you may be able to reproduce the bug by setting a SIGCHLD handler and then sending SIGCHLD to the process a lot, no Twisted involved.

This was also my reading of the stack trace.  Thanks for finding the reference in the Python bug tracker.

The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.  So how would the signal handler be re-entrant?  Perhaps 'pmset' runs a subprocess of its own so that the parent process receives two SIGCHLDs?

It looks like this fix might have been included in 2.7.6, since it was fixed on the 2.7 branch.  Has it been?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140215/75f8466b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140215/75f8466b/attachment.bin>

From exarkun at twistedmatrix.com  Sat Feb 15 18:32:30 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Feb 2014 01:32:30 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
Message-ID: <20140216013230.6595.2131273578.divmod.xquotient.49@top>

On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>
>The one thing that confused me was that the sample program appeared to 
>be running the program only once a second, and waiting for it to 
>complete before running it again.

I think it's more like 81 processes once a second and *not* waiting for 
them to complete before starting over.  Notice the lack of yields in key 
places.  I suspect inlineCallbacks has gradually eaten out the part of 
your brain that recognizes that keyword. ;)

Jean-Paul


From trac at twistedmatrix.com  Sun Feb 16 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Feb 2014 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1392534316.64.7779663278067366999@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140216/1f3ba633/attachment.html>

From Axel.Rau at chaos1.de  Mon Feb 17 15:48:22 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Mon, 17 Feb 2014 23:48:22 +0100
Subject: [Twisted-Python] serializing inline callbacks
Message-ID: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>

I have a web application, which runs several subprocesses to build a page.
This runs pretty well with subprocess.check_output(?).
To improve concurrency with other web sessions, I?m converting this to
ireactorprocess.spawnProcess with inline callbacks:
?-
class SubprocessProtocol(ProcessProtocol):
    outBuffer = ""
    errBuffer = ""

    def connectionMade(self):
        self.d = Deferred()

    def outReceived(self, data):
        self.outBuffer += data

    def errReceived(self, data):
        self.errBuffer += data

    def processEnded(self, reason):
        if reason.check(ProcessDone):
            self.d.callback(self.outBuffer)
        else:
            self.d.errback(reason)

def subprocess(args, ireactorprocess=None):
    """
    :type args: list of str
    :type ireactorprocess: :class: twisted.internet.interfaces.IReactorProcess
    :rtype: Deferred
    """
    deblog('Running ' + str(args))
    if ireactorprocess is None:
        from twisted.internet import reactor
        ireactorprocess = reactor

    pprotocol = SubprocessProtocol()
    ireactorprocess.spawnProcess(pprotocol, args[0], args)
    return protocoled
?-
I have chained up the calls to subprocess with the expectation, that they will
be called sequentially one after the previous has been finished:
?-
    def render_GET(self, request):
        ...
        self.A()
        return NOT_DONE_YET
        
    @inlineCallbacks
    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.B()
    
    @inlineCallbacks
    def B(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.C()

    def C(self):
        ...
        x = self.D(...)
        y = self.D(...)
        z = self.D(...)
        ...
        self.E()

    @inlineCallbacks
    def D(self):
        ...
        tmp = yield subprocess(args)
        ...
        returnValue(tmp)

    
    @inlineCallbacks
    def E(self):
        ...
        tmp = yield subprocess(args)
        ...
        request.write(...)
        request.finished
?-
In C, the three calls to self.D run in parallel.
How can I serialize this?


Thanks, Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From dustin at v.igoro.us  Mon Feb 17 15:58:14 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Mon, 17 Feb 2014 17:58:14 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
Message-ID: <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>

Async programming aside, this mode of chaining multiple methods
doesn't sit well with me:

def A()
  # .. do stuff
  B()

def B()
  # .. do stuff
  C()

I think it'd be more idiomatic to have a controlling method that
indicates the chaning:

def do_stuffs():
  A()
  B()
  C()
  D()
  D()
  D()

Now, translating that to async programming with inline callbacks is easy:

@defer.inlineCallbacks
def do_stuffs()
  yield A()
  yield B()
  yield C()
  yield D()
  yield D()
  yield D()

Dustin


From Axel.Rau at chaos1.de  Tue Feb 18 08:11:06 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 16:11:06 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
Message-ID: <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>


Am 17.02.2014 um 23:58 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> Async programming aside, this mode of chaining multiple methods
> doesn't sit well with me:
> 
> def A()
>  # .. do stuff
>  B()
> 
> def B()
>  # .. do stuff
>  C()
> 
> I think it'd be more idiomatic to have a controlling method that
> indicates the chaning:
> 
> def do_stuffs():
>  A()
>  B()
>  C()
>  D()
>  D()
>  D()
> 
> Now, translating that to async programming with inline callbacks is easy:
> 
> @defer.inlineCallbacks
> def do_stuffs()
>  yield A()
>  yield B()
>  yield C()
>  yield D()
>  yield D()
>  yield D()
> 
> Dustin

Thanks, but the calls in C depend on the data (program branches).
There are 8 different call parameter sets dependent on contexts.

Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From dustin at v.igoro.us  Tue Feb 18 08:21:49 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 10:21:49 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
Message-ID: <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>

On Tue, Feb 18, 2014 at 10:11 AM, Axel Rau <Axel.Rau at chaos1.de> wrote:
> Thanks, but the calls in C depend on the data (program branches).
> There are 8 different call parameter sets dependent on contexts.

I still believe that making those dependencies visible is a good idea.

At any rate, in your original code:

    def C(self):
        ...
        x = self.D(...)
        y = self.D(...)
        z = self.D(...)
        ...
        self.E()

D is returning a Deferred, but you're not doing anything with it.  In
fact, all of A..E are returning Deferreds and you're ignoring them.
In an inlineCallbacks-decorated method, you need to yield every
Deferred you receive.

That's why you're seeing D execute in parallel.  You're also seeing A
return before B is complete, and so on.

Dustin


From _ at lvh.io  Tue Feb 18 08:26:30 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 18 Feb 2014 16:26:30 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
Message-ID: <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>

On Tue, Feb 18, 2014 at 4:21 PM, Dustin J. Mitchell <dustin at v.igoro.us>wrote:

> D is returning a Deferred, but you're not doing anything with it.  In
> fact, all of A..E are returning Deferreds and you're ignoring them.
> In an inlineCallbacks-decorated method, you need to yield every
> Deferred you receive.
>

I realize you know this, but just to be clear  for Axel: you only need to
yield deferreds you want to wait on. It's perfectly possible that you don't
yield a deferred but your code is still correct. E.g. let's say that you
want to wait on three ops but you do want them to execute in parallel, then

d1 = f()
d2 = g()
d3 = h()
yield gatherResults(d1, d2, d3)

is totally a thing :-)

yield in @inlineCallbacks just means "pause execution and resume when this
deferred fires".

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140218/e1b4132b/attachment.html>

From dustin at v.igoro.us  Tue Feb 18 08:34:18 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 10:34:18 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
Message-ID: <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>

True, I only mean that

    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.B()

leaves the deferred from B totally unhandled, which is nearly always a
bad thing.

Dustin


From Axel.Rau at Chaos1.DE  Tue Feb 18 09:40:53 2014
From: Axel.Rau at Chaos1.DE (Axel Rau)
Date: Tue, 18 Feb 2014 17:40:53 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
Message-ID: <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>


Am 18.02.2014 um 16:34 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> True, I only mean that
> 
>    def A(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        self.B()
> 
> leaves the deferred from B totally unhandled, which is nearly always a
> bad thing.
Is this true, if I have a yield in B like in my case:
?-
@inlineCallbacks
   def B(self):
       ...
       tmp = yield subprocess(args)
       ...
       self.C()
?-
? I thought the yield is handling the deferred.

Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From dustin at v.igoro.us  Tue Feb 18 09:45:42 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 11:45:42 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
Message-ID: <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>

That handles the Deferred from subprocess(args), but it doesn't handle
the Deferred from self.C()

On Tue, Feb 18, 2014 at 11:40 AM, Axel Rau <Axel.Rau at chaos1.de> wrote:
>
> Am 18.02.2014 um 16:34 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:
>
>> True, I only mean that
>>
>>    def A(self):
>>        ...
>>        tmp = yield subprocess(args)
>>        ...
>>        self.B()
>>
>> leaves the deferred from B totally unhandled, which is nearly always a
>> bad thing.
> Is this true, if I have a yield in B like in my case:
> ?-
> @inlineCallbacks
>    def B(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        self.C()
> ?-
> ? I thought the yield is handling the deferred.
>
> Axel
> ---
> PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From Axel.Rau at chaos1.de  Tue Feb 18 11:05:32 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 19:05:32 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
Message-ID: <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>


Am 18.02.2014 um 17:45 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> That handles the Deferred from subprocess(args), but it doesn't handle
> the Deferred from self.C()
And that calls three times self.D, which has a yield.
What is wrong with my reasoning?
Something prevents the inline callback in self.D to wait until the
subprocess has terminated. Control returns to self.C again calls self.D
with different arguments.

Still clueless:
Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From glyph at twistedmatrix.com  Tue Feb 18 11:53:58 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 10:53:58 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140216013230.6595.2131273578.divmod.xquotient.49@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
Message-ID: <D01D3B72-8544-4B25-979B-2198A255113C@twistedmatrix.com>


On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:

> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>> 
>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
> 
> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)

Well, I was skimming, and I saw the 'yield's in the things that *were* decorated with @inlineCallbacks; in this case it was the "plain" code that tricked me :-).

-g

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140218/cfce427e/attachment.bin>

From dustin at v.igoro.us  Tue Feb 18 12:03:27 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 14:03:27 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
Message-ID: <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>

I'm suggesting that there are lots more problems with your code than
the one you have identified.  Any method which is decorated with
@defer.inlineCallbacks will return a Deferred, and you need to handle
every Deferred somehow.  Generally (although not always, as lvh has
said) you do that by yielding it.

Your code should be

----
    def render_GET(self, request):
        ...
        d = self.A()
        d.addErrback(request.processingFailed)
        return NOT_DONE_YET

    @inlineCallbacks
    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        yield self.B()

    @inlineCallbacks
    def B(self):
        ...
        tmp = yield subprocess(args)
        ...
        yield self.C()

    def C(self):
        ...
        x = yield self.D(...)
        y = yield self.D(...)
        z = yield self.D(...)
        ...
        yield self.E()

    @inlineCallbacks
    def D(self):
        ...
        tmp = yield subprocess(args)
        ...
        returnValue(tmp)


    @inlineCallbacks
    def E(self):
        ...
        tmp = yield subprocess(args)
        ...
        request.write(...)
        request.finished()

----

Here you see that all of the Deferreds are handled, either by yielding
them or, in the case of the Deferred from A, by adding an errback that
will conveniently format an HTML error response.

Dustin


From glyph at twistedmatrix.com  Tue Feb 18 12:29:06 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 11:29:06 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140216013230.6595.2131273578.divmod.xquotient.49@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
Message-ID: <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>


On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:

> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>> 
>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
> 
> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)

I sort of noted this on the ticket, but I think the idea of using KQueue to address this would be great.  Is there a similar thing we might be able to do on Linux to get rid of the dependence on a SIGCHLD handler?

-g
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140218/b5f2c157/attachment.bin>

From Axel.Rau at chaos1.de  Tue Feb 18 14:58:18 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 22:58:18 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
Message-ID: <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>


Am 18.02.2014 um 20:03 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> I'm suggesting that there are lots more problems with your code than
> the one you have identified.  Any method which is decorated with
Sure. This is my 1st project with twisted. (-;

> @defer.inlineCallbacks will return a Deferred,
This is the missing clue.

>  and you need to handle
> every Deferred somehow.  Generally (although not always, as lvh has
> said) you do that by yielding it.
> 
> Your code should be
I have that implemented, but B does not call C:
> 
> ----
>    def render_GET(self, request):
>        ...
>        d = self.A()
>        d.addErrback(request.processingFailed)
>        return NOT_DONE_YET
> 
>    @inlineCallbacks
>    def A(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        yield self.B()
> 
>    @inlineCallbacks
>    def B(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        yield self.C()
> =====================================> stops here
>    def C(self):
>        ...
>        x = yield self.D(...)
>        y = yield self.D(...)
>        z = yield self.D(...)
>        ...
>        yield self.E()
> 
>    @inlineCallbacks
>    def D(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        returnValue(tmp)
> 
> 
>    @inlineCallbacks
>    def E(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        request.write(...)
>        request.finished()
> 
> ----
> 
> Here you see that all of the Deferreds are handled, either by yielding
> them or, in the case of the Deferred from A, by adding an errback that
> will conveniently format an HTML error response.

This is B:
- - - -
    @inlineCallbacks
    def imageMap(self):
        """
        return client side image maps
        """
        args = list(self.basecmd)
        args.extend((
            '-g', conf.graphlist[self.station][0], '-I', '-m', '-d', '-d', '-d', '-d'))
        map = yield util.subprocess(args)
        self.request.write(bytes(map))
        yield self.navigation()
        if debug: log.msg('imageMap ended')
- - - -
and begin of C:
- - - -
    def navigation(self):
        """
        Compute links for navigation (up, left, right arrows or)
        week, month, year) and place them on the page.
        """
        if debug: log.msg('In navigation.'). . .
- - - -
I see log message ?imageMap ended? , but not 'In navigation.'
Any further advice?

Thanks for your patience,
Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From dustin at v.igoro.us  Tue Feb 18 16:10:59 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 18:10:59 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
 <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
Message-ID: <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>

On Tue, Feb 18, 2014 at 4:58 PM, Axel Rau <Axel.Rau at chaos1.de> wrote:
> I see log message ?imageMap ended? , but not 'In navigation.'
> Any further advice?


I'm guessing that you omitted @inlineCallbacks for navigation, but
that it contains a yield.  In Python, that makes it a plain old
generator expression, which just returns a generator object when you
call it.  It's a common pitfall when using inlineCallbacks.

Honestly, this would be easier to discuss if you'd included a
http://sscce.org/ at the beginning.

Dustin


From exarkun at twistedmatrix.com  Tue Feb 18 19:07:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Feb 2014 02:07:16 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
Message-ID: <20140219020716.6511.1292355411.divmod.xquotient.1@top>

On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>
>On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>
>>>The one thing that confused me was that the sample program appeared 
>>>to be running the program only once a second, and waiting for it to 
>>>complete before running it again.
>>
>>I think it's more like 81 processes once a second and *not* waiting 
>>for them to complete before starting over.  Notice the lack of yields 
>>in key places.  I suspect inlineCallbacks has gradually eaten out the 
>>part of your brain that recognizes that keyword. ;)
>
>I sort of noted this on the ticket, but I think the idea of using 
>KQueue to address this would be great.  Is there a similar thing we 
>might be able to do on Linux to get rid of the dependence on a SIGCHLD 
>handler?

Not that I know of.  As far as I know Linux is missing good child 
process event notification support.

Jean-Paul


From glyph at twistedmatrix.com  Tue Feb 18 19:50:49 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 18:50:49 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140219020716.6511.1292355411.divmod.xquotient.1@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
 <20140219020716.6511.1292355411.divmod.xquotient.1@top>
Message-ID: <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>


On Feb 18, 2014, at 6:07 PM, exarkun at twistedmatrix.com wrote:

> On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>> 
>>>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
>>> 
>>> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)
>> 
>> I sort of noted this on the ticket, but I think the idea of using KQueue to address this would be great.  Is there a similar thing we might be able to do on Linux to get rid of the dependence on a SIGCHLD handler?
> 
> Not that I know of.  As far as I know Linux is missing good child process event notification support.

Wait... what about... signalfd?!

Lots of mentions of SIGCHLD here:

<http://linux.die.net/man/2/signalfd>

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140218/637a6092/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140218/637a6092/attachment-0001.bin>

From exarkun at twistedmatrix.com  Tue Feb 18 20:26:04 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Feb 2014 03:26:04 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
 <20140219020716.6511.1292355411.divmod.xquotient.1@top>
 <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>
Message-ID: <20140219032604.6511.971289997.divmod.xquotient.6@top>

On 02:50 am, glyph at twistedmatrix.com wrote:
>
>On Feb 18, 2014, at 6:07 PM, exarkun at twistedmatrix.com wrote:
>>On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>>>
>>>On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>>>On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>>>
>>>>>The one thing that confused me was that the sample program appeared 
>>>>>to be running the program only once a second, and waiting for it to 
>>>>>complete before running it again.
>>>>
>>>>I think it's more like 81 processes once a second and *not* waiting 
>>>>for them to complete before starting over.  Notice the lack of 
>>>>yields in key places.  I suspect inlineCallbacks has gradually eaten 
>>>>out the part of your brain that recognizes that keyword. ;)
>>>
>>>I sort of noted this on the ticket, but I think the idea of using 
>>>KQueue to address this would be great.  Is there a similar thing we 
>>>might be able to do on Linux to get rid of the dependence on a 
>>>SIGCHLD handler?
>>
>>Not that I know of.  As far as I know Linux is missing good child 
>>process event notification support.
>
>Wait... what about... signalfd?!
>
>Lots of mentions of SIGCHLD here:
>
><http://linux.die.net/man/2/signalfd>

It's sort of problematic for a library.  You have to block the signal 
for signalfd to work reliably.  Now no other code that depends on 
SIGCHLD can run properly in that process.

We could simply declare that to be the case and go ahead... But based on 
past experience I'm sure some people would be unhappy with that.

Perhaps it could be an option only turned on by applications that know 
it's okay for them and that want to avoid the mess of signals?

On the other hand we seem to be dealing with the mess of signals on 
Linux pretty okay at the moment.  Who would opt in to this and why?

Jean-Paul


From Axel.Rau at chaos1.de  Wed Feb 19 05:15:19 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Wed, 19 Feb 2014 13:15:19 +0100
Subject: [Twisted-Python] [RESOLVED] Re:  serializing inline callbacks
In-Reply-To: <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
 <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
 <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>
Message-ID: <BAACAD91-F8A7-4A46-A465-2F586ABDABB0@Chaos1.DE>


Am 19.02.2014 um 00:10 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> On Tue, Feb 18, 2014 at 4:58 PM, Axel Rau <Axel.Rau at chaos1.de> wrote:
>> I see log message ?imageMap ended? , but not 'In navigation.'
>> Any further advice?
> 
> 
> I?m guessing that you omitted @inlineCallbacks for navigation,
navigation corresponds to C.
I added @inlineCallbacks and it works.
> 
> but
> that it contains a yield.  In Python, that makes it a plain old
> generator expression, which just returns a generator object when you
> call it.  It's a common pitfall when using inlineCallbacks.
> 
> Honestly, this would be easier to discuss if you'd included a
> http://sscce.org/ at the beginning.
> 
Thanks a lot,
Axel
---
PGP-Key:29E99DD6  ? +49 151 2300 9283  ? computing @ chaos claudius



From adi at roiban.ro  Thu Feb 20 07:00:53 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 20 Feb 2014 16:00:53 +0200
Subject: [Twisted-Python] Status of twistedchecker
Message-ID: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>

Hi,

While submitting a patch on Twisted I got a review response that my code is
not complaint with `twistedchecker`.

My first reaction was: Holy code, what is twistedchecker!

Searching the source code for `twistedchecker` gave no results and on the
website there were only 2 wiki pages... none talking about how to use
twistedcheck as a Twisted developer.

Hitting the #twisted-dev channel I found out about twistedchecker and
install version 0.2.0

Now that I got some info about twistedchecker  and wiki write access I
would like to update the
https://twistedmatrix.com/trac/wiki/TwistedDevelopment wiki page with
information about how a Twisted developer is expected to use twistedchecker.

I run twistedcheck on trunk and got a lot of errors.

Am I suppose to look through all those error and filter the ones generated
by my changes?

Since twistedchecker is only about twisted, shouldn't it be included as a
dependency to twisted-dev-tools so that as I developer I would only need to
install one extra package and it will pull all development/testing
depenencies?

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140220/9daa86a2/attachment.html>

From adi at roiban.ro  Thu Feb 20 07:55:58 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 20 Feb 2014 16:55:58 +0200
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
	repo file
Message-ID: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>

Hi.

Right now CONTRIBUTING file from twisted repo sends developers to:
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

What do you think about having basic contributing documentation inside the
repo?
I am talking about these 2 pages:

https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
https://twistedmatrix.com/trac/wiki/TwistedDevelopment

Commiters Check list can be left on the wiki page:
https://twistedmatrix.com/trac/wiki/CommitterCheckList

--------

I think that those pages are very important to assist new developers in
creating a successful patch (ie one that is merged without to much
ping-pong)

Even if I now have wiki edit page, I don't have the courage to change the
wiki page (for example to add information about twistedchecker or how to
build the new docs).

Changing a file and submitting for review feels more comfortable.

Also, developers could always refer to that file from inside their
preferred text editor.

---------

Is there someone review-ul changes on the wiki pages?

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140220/1b528df8/attachment.html>

From exarkun at twistedmatrix.com  Thu Feb 20 08:13:22 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Feb 2014 15:13:22 -0000
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
Message-ID: <20140220151322.6511.612960390.divmod.xquotient.11@top>

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the
>repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the
>wiki page (for example to add information about twistedchecker or how 
>to
>build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their
>preferred text editor.

There is currently an effort to re-organize the contributor 
documentation underway.  Given its fragile state, I wouldn't want to 
disturb it sending work off in a different direction.  On the other 
hand, if you'd like to take over and complete it, feel free to take 
whatever direction you like. :)  Either way I suggest you try to 
coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul


From dhudson at redcom.com  Thu Feb 20 08:17:36 2014
From: dhudson at redcom.com (Hudson, Derrick)
Date: Thu, 20 Feb 2014 10:17:36 -0500
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <20140220151322.6511.612960390.divmod.xquotient.11@top>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
Message-ID: <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>

Sorry, my mistake.  PostgreSQL doesn't use upstart.

$ sudo /etc/init.d/postgresql restart

-Derrick


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Thursday, February 20, 2014 10:13 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in 
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the wiki page (for example to add information about twistedchecker or 
>how to build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their 
>preferred text editor.

There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From dhudson at redcom.com  Thu Feb 20 08:20:09 2014
From: dhudson at redcom.com (Hudson, Derrick)
Date: Thu, 20 Feb 2014 10:20:09 -0500
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>
Message-ID: <401084E5E73F4241A44F3C9E6FD794280108A56044@exch-01>

Disregard this message.  I hit reply to the wrong message in my inbox.



-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Hudson, Derrick
Sent: Thursday, February 20, 2014 10:18 AM
To: 'Twisted general discussion'
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

Sorry, my mistake.  PostgreSQL doesn't use upstart.

$ sudo /etc/init.d/postgresql restart

-Derrick


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Thursday, February 20, 2014 10:13 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in 
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the wiki page (for example to add information about twistedchecker or 
>how to build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their 
>preferred text editor.

There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From adi at roiban.ro  Thu Feb 20 16:33:44 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 01:33:44 +0200
Subject: [Twisted-Python] Distributing apilinks.py
Message-ID: <CAFycZ9emvGU+E9dt6ZHv=gvCW29fstPvH5m_85qDt_EbPObDBg@mail.gmail.com>

Hi,

Right now apilinks.py is located in Twisted
at docs/_extensions/apilinks.py, but a copy  can also be found in pydoctor
project.

While reporting a bug for apilinks.py in Twisted I was ask to send the
patch upstream in pydoctor [1]

During the review of the patch in pydoctor, pydoctor's maintainer agreed
that there should be a single copy of this file but don't know what's
involved in achieving that. [2]

Can someone involved in using apilinks.py in Twisted provide some feedback
regarding distribution of apilinks.py file?

Many thanks!

[1] https://twistedmatrix.com/trac/ticket/6954
[2]
https://code.launchpad.net/~adiroiban/pydoctor/1282458-apilinks-anchor/+merge/207392


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/fbfa85fe/attachment.html>

From adi at roiban.ro  Fri Feb 21 08:59:19 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 17:59:19 +0200
Subject: [Twisted-Python] Implement HTTP request acception / rejection as
	defined in RFC 2616 - 8.2.3
Message-ID: <CAFycZ9cHYv9xZAdPjSCYhwudQaLMrrV5CzBn_2SzZ8EXxLqH4g@mail.gmail.com>

Hi,

As requested during review I am moving this to mailing list for discussions.

The initial ticket is here : https://twistedmatrix.com/trac/ticket/6928

-------

The current Twisted implementation of RFC 2616 - 8.2.3 is very simple and
Twisted will always reply with continue to Accept: 100-continue requests.

I am working at web application based on Twisted web so I did a quick
security check for current twisted web code.

The major problem is that when reading POST data, requests under 1M are
kept in memory, the other being stored in temporary file... but for
form-mulipart request the whole data is loaded again in memory for parsing.
Now, if the client initially reports that content is less than 1M, but then
continue to send more than 1M, twisted.web will continue to keep all data
in memory.

To address the problem of unwanted big post requests I first start with
implementing support for well behaved HTTP/1.1 clients.

In current code, Resource objects are called only after whole request data
was received and processed so a resource can not decide whether or not it
accepts the request, just by looking at headers.

Also the Request object is called after headers are received but with calls
like parseCookie or gotLength. So there is no API for Request to accept or
reject a request based on headers.

--------

To solve this problem, I add a new `headersReceived` API call on Request
and Resource so that Requests and Resources can decided if they want to
accept the request.

The biggest change required to implement this API is that URL traversal can
now begin before a resource has received all its content.
If a resource needs full request content before making a traversal
decistion, then this API does not work.

This is why this is an optional API not enforced on all resources.

For now the ticket only has demo code as I wanted to highlight the API
changes.

I have already implemented this code in my project and wrote full test for
these changes.

If this kind of API is accepted in Twisted I can port the code and tests,
otherwise I can try to work on a different implementation.

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/99fc1b81/attachment.html>

From adi at roiban.ro  Fri Feb 21 09:03:54 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 18:03:54 +0200
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <20140220151322.6511.612960390.divmod.xquotient.11@top>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
Message-ID: <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>

On 20 February 2014 17:13, <exarkun at twistedmatrix.com> wrote:

> On 02:55 pm, adi at roiban.ro wrote:
>
>> Hi.
>>
>> Right now CONTRIBUTING file from twisted repo sends developers to:
>> https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>>
>> What do you think about having basic contributing documentation inside the
>> repo?
>> I am talking about these 2 pages:
>>
>> https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>> https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>>
>> Commiters Check list can be left on the wiki page:
>> https://twistedmatrix.com/trac/wiki/CommitterCheckList
>>
>> --------
>>
>> I think that those pages are very important to assist new developers in
>> creating a successful patch (ie one that is merged without to much
>> ping-pong)
>>
>> Even if I now have wiki edit page, I don't have the courage to change the
>> wiki page (for example to add information about twistedchecker or how to
>> build the new docs).
>>
>> Changing a file and submitting for review feels more comfortable.
>>
>> Also, developers could always refer to that file from inside their
>> preferred text editor.
>>
>
> There is currently an effort to re-organize the contributor documentation
> underway.  Given its fragile state, I wouldn't want to disturb it sending
> work off in a different direction.  On the other hand, if you'd like to
> take over and complete it, feel free to take whatever direction you like.
> :)  Either way I suggest you try to coordinate with the folks working on
> that.
>

Thanks for the reply. I am happy to coordinate with folks working on
contributor documentation re-organization, but I have idea how exactly I am
supposed to do that and who is working on this task.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/9c1c26c1/attachment.html>

From glyph at twistedmatrix.com  Fri Feb 21 19:37:25 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Feb 2014 18:37:25 -0800
Subject: [Twisted-Python] Status of twistedchecker
In-Reply-To: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>
References: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>
Message-ID: <0CA35999-F160-402E-87E1-865B8793D470@twistedmatrix.com>


On Feb 20, 2014, at 6:00 AM, Adi Roiban <adi at roiban.ro> wrote:

> While submitting a patch on Twisted I got a review response that my code is not complaint with `twistedchecker`.
> 
> My first reaction was: Holy code, what is twistedchecker!

As new tools are added to our development process to make things easier (the things twistedchecker checks for used to be entirely manual) it's an ongoing struggle to keep our documentation up to date.

> Now that I got some info about twistedchecker  and wiki write access I would like to update the https://twistedmatrix.com/trac/wiki/TwistedDevelopment wiki page with information about how a Twisted developer is expected to use twistedchecker.

Please do!

> I run twistedcheck on trunk and got a lot of errors.

Yes.

Because the things twistedchecker checks for used to be manual, we used to fail to check for a lot of them.  And many of the things it checks for were not even thought of when Twisted was first developed.  This means that the codebase is largely not compliant with twistedchecker.

> Am I suppose to look through all those error and filter the ones generated by my changes?

Yes and no.

Yes, in that you should only care about the new ones that your changes created.  We aim to have the number of twistedchecker warnings decreasing over time; but as long as trunk still produces hundreds and hundreds of warnings we're never going to have a big project to eliminate them in one fell swoop.

No, in that you don't have to do this yourself, the buildbot will do it for you.  For example, if on the page for this build <http://buildbot.twistedmatrix.com/builders/twistedchecker/builds/1815> you click on "new twistedchecker errors", you will see <http://buildbot.twistedmatrix.com/builders/twistedchecker/builds/1815/steps/run-twistedchecker/logs/new%20twistedchecker%20errors> a very small number of warnings.  If there are no new twistedchecker errors, the builds should succeed.  (This mechanism isn't perfect, however; sometimes it fails, although less now than it used to.)

> Since twistedchecker is only about twisted, shouldn't it be included as a dependency to twisted-dev-tools so that as I developer I would only need to install one extra package and it will pull all development/testing depenencies?

Sounds like a good idea to me.

> Thanks!

Thank you for pointing this out!

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/36c07385/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/36c07385/attachment.bin>

From glyph at twistedmatrix.com  Fri Feb 21 19:49:29 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Feb 2014 18:49:29 -0800
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
	repo file
In-Reply-To: <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
Message-ID: <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>


On Feb 21, 2014, at 8:03 AM, Adi Roiban <adi at roiban.ro> wrote:

> There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.
> 
> Thanks for the reply. I am happy to coordinate with folks working on contributor documentation re-organization, but I have idea how exactly I am supposed to do that and who is working on this task.
> 

Richard Wall and Ashwini Oruganti are two of the people working on this, but to the best of my knowledge this effort is unfortunately mostly stalled right now.  If neither of them respond promptly to this thread, I think it would be best to consider that effort defunct and proceed with whatever changes you want to make.

The timeline report on wiki changes <http://twistedmatrix.com/trac/timeline?from=02%2F21%2F2014&daysback=90&wiki=on&update=Update> suggests that no work has been done on this in over 90 days, which seems like an appropriate window beyond which superseding it is fair game :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/62d03231/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140221/62d03231/attachment.bin>

From lokare.ameya at gmail.com  Sat Feb 22 19:17:42 2014
From: lokare.ameya at gmail.com (Ameya Lokare)
Date: Sat, 22 Feb 2014 18:17:42 -0800
Subject: [Twisted-Python] Making twisted web client requests on running
	reactor
Message-ID: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>

Hi everyone,

I'm writing a client library that makes (potentially long running) HTTP
requests. Since the library will be used within non-Twisted code, I was
thinking of running the reactor in a separate thread. The library code
looks roughly like this:

def start():
    Thread(target=reactor.run, args=(False,)).start()

def shutdown():
    reactor.callFromThread(lambda x: reactor.stop(), None)

def make_request(url):
        agent = Agent(reactor)
        d = agent.request(
            'GET',
            url,
            Headers({
                'User-Agent': ['Twisted SSE Client'],
                'Cache-Control': ['no-cache'],
            }),
            None)
        d.addCallback(self.cbRequest)

Then I make requests from the application like so:

start()
make_request("http://localhost:12000")
....
make_request("http://localhost:12000")
...
shutdown()

However, it looks like the 'd' deferred never gets fired. From a little
playing around, it looks like this is because the reactor is started before
the call(s) to agent.request are made. All examples in the twisted docs
create the request before running the reactor. I'm sure I'm missing
something very obvious here. Also, is there a better way to design such a
library?

-- 
-Ameya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140222/c98efa6d/attachment.html>

From trac at twistedmatrix.com  Sun Feb 23 00:05:14 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Feb 2014 07:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1393139114.86.6207412793391720214@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140223/ac719fe4/attachment.html>

From hs at ox.cx  Sun Feb 23 03:12:05 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 23 Feb 2014 11:12:05 +0100
Subject: [Twisted-Python] Making twisted web client requests on running
 reactor
In-Reply-To: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
Message-ID: <F7B17B29-3427-4941-8FD8-4FD5BB006FC8@ox.cx>

Hello Ameya,

On 23 Feb 2014, at 3:17, Ameya Lokare wrote:

> I'm writing a client library that makes (potentially long running) 
> HTTP
> requests. Since the library will be used within non-Twisted code, I 
> was
> thinking of running the reactor in a separate thread.

Have you seen Crochet? That might be just what you?re looking for: 
https://pypi.python.org/pypi/crochet/

Cheers
Hynek


From exarkun at twistedmatrix.com  Sun Feb 23 06:11:32 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Feb 2014 13:11:32 -0000
Subject: [Twisted-Python] Making twisted web client requests on running
 reactor
In-Reply-To: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
Message-ID: <20140223131132.6218.952845415.divmod.xquotient.2@top>

On 02:17 am, lokare.ameya at gmail.com wrote:
>Hi everyone,
>
>I'm writing a client library that makes (potentially long running) HTTP
>requests. Since the library will be used within non-Twisted code, I was
>thinking of running the reactor in a separate thread. The library code
>looks roughly like this:
>
>def start():
>    Thread(target=reactor.run, args=(False,)).start()
>
>def shutdown():
>    reactor.callFromThread(lambda x: reactor.stop(), None)
>
>def make_request(url):
>        agent = Agent(reactor)
>        d = agent.request(
>            'GET',
>            url,
>            Headers({
>                'User-Agent': ['Twisted SSE Client'],
>                'Cache-Control': ['no-cache'],
>            }),
>            None)
>        d.addCallback(self.cbRequest)
>
>Then I make requests from the application like so:
>
>start()
>make_request("http://localhost:12000")
>....
>make_request("http://localhost:12000")
>...
>shutdown()
>
>However, it looks like the 'd' deferred never gets fired. From a little
>playing around, it looks like this is because the reactor is started 
>before
>the call(s) to agent.request are made. All examples in the twisted docs
>create the request before running the reactor. I'm sure I'm missing
>something very obvious here. Also, is there a better way to design such 
>a
>library?

It sounds like you want to use Crochet (which Hynek already linked you 
to).

The reason your code doesn't work, though, is that Twisted APIs are not 
thread safe.  You may *only* call them in the thread the reactor is 
running in.

Your `start` function runs the reactor in a new thread.  Then the code 
proceeds to try to use `Agent` from the original thread.  This is 
unsupported.

Jean-Paul


From exarkun at twistedmatrix.com  Sun Feb 23 06:56:40 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Feb 2014 13:56:40 -0000
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.14
Message-ID: <20140223135640.6218.615676796.divmod.xquotient.17@top>

Greetings fellow Pythoneers,

I'm happy to announce that pyOpenSSL 0.14 is now available.

pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
low-level cryptography APIs but is primarily focused on providing an API 
for using the TLS protocol from Python.

Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
downloads.

This release of pyOpenSSL adds:

* Support for TLSv1.1 and TLSv1.2

* First-class support for PyPy

* New flags, such as MODE_RELEASE_BUFFERS and OP_NO_COMPRESSION

* Some APIs to access to the SSL session cache

* A variety of bug fixes for error handling cases

Additionally, there are three major changes to the project:

First, the documentation has been converted from LaTeX (CPython's 
previous documentation system) to Sphinx (CPython's "new" documentation 
system ;).  You can find the new documentation on the PyPI documentation 
site (<https://pythonhosted.org/pyOpenSSL/>) or 
<https://pyopenssl.readthedocs.org/>).

Second, pyOpenSSL is no longer implemented in C as a collection of 
extension modules using the Python/C API. Instead, pyOpenSSL is now a 
pure-Python project with a dependency on a new project, cryptography 
(<https://github.com/pyca/cryptography>), which provides (among other 
things) a cffi-based interface to OpenSSL.

This change means that pyOpenSSL development is now more accessible to 
Python programmers with little or no experience with C. This is also how 
pyOpenSSL is now able to support PyPy.

Finally, the project's code hosting has moved from Launchpad to Github. 
Many branches remain only on Launchpad along with their associated bug 
reports. Over the coming releases I hope that the fixes and features in 
these branches will be ported to Python and incorporated into the 
pyOpenSSL master development branch. Bug tracking has been disabled on 
Launchpad so that the amount of useful information hosted there can 
gradually dwindle to nothing. Please use Github 
(<https://github.com/pyca/pyopenssl>) for further development and bug 
reporting.

Thanks and enjoy,
Jean-Paul


From lokare.ameya at gmail.com  Sun Feb 23 17:06:09 2014
From: lokare.ameya at gmail.com (Ameya Lokare)
Date: Sun, 23 Feb 2014 16:06:09 -0800
Subject: [Twisted-Python] Making twisted web client requests on running
	reactor
In-Reply-To: <20140223131132.6218.952845415.divmod.xquotient.2@top>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
 <20140223131132.6218.952845415.divmod.xquotient.2@top>
Message-ID: <CABcgvaj6AM2BMCHvL7z6mpYdK+=AY9SbokAWurwzvn=9zO52yg@mail.gmail.com>

Thanks, Hynek and Jean-Paul! Crochet looks like exactly what I'm looking
for.

-Ameya


On Sun, Feb 23, 2014 at 5:11 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:17 am, lokare.ameya at gmail.com wrote:
>
>> Hi everyone,
>>
>> I'm writing a client library that makes (potentially long running) HTTP
>> requests. Since the library will be used within non-Twisted code, I was
>> thinking of running the reactor in a separate thread. The library code
>> looks roughly like this:
>>
>> def start():
>>    Thread(target=reactor.run, args=(False,)).start()
>>
>> def shutdown():
>>    reactor.callFromThread(lambda x: reactor.stop(), None)
>>
>> def make_request(url):
>>        agent = Agent(reactor)
>>        d = agent.request(
>>            'GET',
>>            url,
>>            Headers({
>>                'User-Agent': ['Twisted SSE Client'],
>>                'Cache-Control': ['no-cache'],
>>            }),
>>            None)
>>        d.addCallback(self.cbRequest)
>>
>> Then I make requests from the application like so:
>>
>> start()
>> make_request("http://localhost:12000")
>> ....
>> make_request("http://localhost:12000")
>> ...
>> shutdown()
>>
>> However, it looks like the 'd' deferred never gets fired. From a little
>> playing around, it looks like this is because the reactor is started
>> before
>> the call(s) to agent.request are made. All examples in the twisted docs
>> create the request before running the reactor. I'm sure I'm missing
>> something very obvious here. Also, is there a better way to design such a
>> library?
>>
>
> It sounds like you want to use Crochet (which Hynek already linked you to).
>
> The reason your code doesn't work, though, is that Twisted APIs are not
> thread safe.  You may *only* call them in the thread the reactor is running
> in.
>
> Your `start` function runs the reactor in a new thread.  Then the code
> proceeds to try to use `Agent` from the original thread.  This is
> unsupported.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
-Ameya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140223/0b60a6f7/attachment.html>

From m-lists at the-moon.net  Mon Feb 24 10:38:07 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 24 Feb 2014 17:38:07 +0000
Subject: [Twisted-Python] Raising TypeError in rich comparison methods
Message-ID: <CABefbUrf4+LDRZtPSoLL4qHKpcsPGZWjMrYBBU7B+AZqJq-_oQ@mail.gmail.com>

Hello everyone,

I want to discuss if and when to raise TypeError from Python rich comparison
methods.

I'm working on a SerialNumber class which represents an RFC1982 serial number
value. See https://twistedmatrix.com/trac/ticket/6672

SerialNumber has rich comparison methods to allow it to be compared with other
SerialNumber instances.

But what should be the behaviour when a SerialNumber is compared to an instance
of some foreign type?

In https://twistedmatrix.com/trac/ticket/6672?replyto=6#comment:4 JP suggested
returning NotImplemented.

> The rich comparison methods should probably type check their argument and
> return NotImplemented if it is not a SNA. This way the TypeError-generating
> logic provided by the runtime will be invoked instead of an
> implementation-dependent AttributeError.

I agree there should be type checking here, but after doing some research, I
think I prefer to raise an explicit TypeError. Here's why.

In Python2, returning NotImplemented from __lt__ always seems to return True and
False from __gt__. Python3 reacts more sensibly and raises TypeError. I worry
that this may cause Python2 users to think that an L{int} and a L{SerialNumber}
can be reliably compared. They can't.

I think the "return True / False" behaviour is due to a fallback comparison
mechanism in Python.
 * http://stackoverflow.com/questions/18516827/why-does-0-evaluate-to-true-in-python/18516984#18516984

   Python 2 is more stubborn and when NotImplemented is returned or no hooks
   have been implemented, the C code ends up in the default_3way_compare() C
   function,

So I've decided to explicitly raise TypeError instead. This makes it clear that
you can only compare L{SerialNumber} with L{SerialNumber}; in both Python2 and
Python3. It also means I only have to test for the "raise TypeError" behaviour.

Does that make sense?

Thanks in advance for your feedback.

-RichardW.


From m-lists at the-moon.net  Mon Feb 24 12:53:30 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 24 Feb 2014 19:53:30 +0000
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
 <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>
Message-ID: <CABefbUq3-43_eExG8tGVDczB89xjUpyFBp6AXDwgQPFd-3g_AA@mail.gmail.com>

On 22 February 2014 02:49, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
<snip>
> Richard Wall and Ashwini Oruganti are two of the people working on this, but
> to the best of my knowledge this effort is unfortunately mostly stalled
> right now.  If neither of them respond promptly to this thread, I think it
> would be best to consider that effort defunct and proceed with whatever
> changes you want to make.
>
> The timeline report on wiki changes
> <http://twistedmatrix.com/trac/timeline?from=02%2F21%2F2014&daysback=90&wiki=on&update=Update>
> suggests that no work has been done on this in over 90 days, which seems
> like an appropriate window beyond which superseding it is fair game :).

Hi,

Sorry for not replying sooner. I was reminded about this by another potential
new contributor, navneet_, in #twisted-dev today.

I did do some work on this last year, building on Ashwini's work.

I've pasted an IRC conversation where Ashwini explained the goal of the new new-
contributor documentation. The gist is that there should be a *single* page
which guides new contributors through the process of contributing their first
patch. We think that one of the main problems with the current new-contributor
documentation is that it requires the reader to click and read too many separate
documents which are spread between the wiki and the sphinx documentation...with
no decent navigation links between the pages.

The current new contributors guide is here:
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

The draft new contributors guide is here:
https://twistedmatrix.com/trac/wiki/Contribute (That's the doc which
ashfall_ and I were working on)

You can see my changes to that document using the history view:
https://twistedmatrix.com/trac/wiki/Contribute?action=history

I didn't get very far, I think I got distracted making some improvements to the
trac "attach a patch" page which seemed like a more natural place to document
the patch requirements which I'd originall intended to put in the Contribute
page.
 * https://github.com/twisted-infra/trac-config/pull/2

I also had plans to add Google search links to the trac search page, but never
got round to it. I thought that might make it easier for new contributors to
find existing issues before filing new tickets.

Iccha Sethi wrote a nice blog post documenting the Twisted new
contributor experience:
http://www.icchasethi.com/my-experiences-contributing-to-twisted/

I personally would like to see all the new contributor documentation migrated
out of the wiki and into version controlled ReST documentation. Django
documentation is usually a good inspiration but it looks like they do link to
lots of different documents. But perhaps that's less of a problem because it's
all sphinx based.
 * https://docs.djangoproject.com/en/1.6/internals/contributing/

Anyway, I'm still happy to help improve the new contributor documentation, but
probably haven't got the time to co-ordinate the effort.

-RichardW.

{{{
less .znc/moddata/log/rwall_freenode_#twisted-dev_20130827.log

[06:48:48] <ashfall_> rwall: Thanks for the email, it reminded me I
have aan incomplete wiki page to finish
[08:29:03] <rwall> ashfall_: Good morning. Can I help you finish it
off? I'll review it if you like.
[08:30:51] * rwall reads https://twistedmatrix.com/trac/wiki/Contribute
[08:31:45] * rwall and
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
[08:32:13] <rwall> and https://twistedmatrix.com/trac/wiki/ContributionIdeas
[10:33:36] <rwall> tomprince: I wrote some words for inclusion in the
new ticket page (well I copied most of it from Django page.) I
mentioned it in lp:twisted-website but should I create a ticket in
Github twisted-infra instead?
[10:47:21] <rwall> I created
https://github.com/twisted-infra/trac-config/issues/1
[12:53:21] <ashfall_> rwall: I'm not sure it's ready to the point of
review yet, but feel free to work on it/make or suggest changes if you
like (in f
act, the sooner it's done the better, I'm glad you showed interest :)
[12:55:22] <ashfall_> rwall: I was trying to organize all the
information we have about contributing, and then expanding upon it -
the basic aim was t
o put everything together, if not all the text, at least all the links
to relevant text
[12:56:11] <ashfall_> and then to remove redundant information
[12:56:17] <rwall> ashfall_: But there is already
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs. The new
page didn't look *that* diffe
rent.
[12:57:48] <ashfall_> indeed. I started from there, but what's
slightly different is the links to various other places (I didn't want
to edit in that
page, because I wasn't confident about how soon I'll complete this)
[12:58:55] <ashfall_> rwall: Either way, currently the page's like an
index. Next I was planning to organize it, and see how it goes from
there
[12:58:55] <rwall> Ok I see.
[13:01:57] <ashfall_> So I guess what I'm saying is, feel free to
finish what I started, if you feel like it you can even ignore the
page completely a
nd edit something that already exists, as long as the end result is a
page that gives one all the information needed to contribute - "one
page that ha
s it all" was the goal iirc
[13:04:10] <rwall> I think "one page" is a good goal. Ok. I might have
a go at editing your new page.
[13:04:33] <ashfall_> Thanks :)
[13:04:34] <exarkun> Maybe the goal should be written at the top of the page
[13:05:20] <rwall> Ok. I'll do that first.
}}}


From kebin70 at gmail.com  Tue Feb 25 15:56:14 2014
From: kebin70 at gmail.com (kevin mcintyre)
Date: Tue, 25 Feb 2014 14:56:14 -0800
Subject: [Twisted-Python] maybe video
Message-ID: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>

Wanted to share my qt4reactor webkit cv2 video capture script.

It's comes in handy whenever I've needed to scrape just the browser and not
my whole screen or capture unit tests etc.

here is a demo quick demo in action:

http://www.youtube.com/watch?v=2XMXtUISY1g&feature=youtu.be

It's a hack, but that's why I like python (espeically twisted)...it's so
versatile.

https://github.com/kmcintyre/scewpt/blob/master/pyscewpt/maybevideo.py

Cheers,
Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140225/5104fb6f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: maybevideo.py
Type: text/x-python
Size: 4682 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140225/5104fb6f/attachment.py>

From _ at lvh.io  Wed Feb 26 02:20:46 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 26 Feb 2014 10:20:46 +0100
Subject: [Twisted-Python] maybe video
In-Reply-To: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>
References: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>
Message-ID: <CAE_Hg6bCPdBV8P5YEbPqcJoGkW9C-YdSss98UVHM=xwGucY2iw@mail.gmail.com>

Hi Kevin,


Thanks for sharing, always nice to see people doing useful things with
Twisted :-)


lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140226/c8618908/attachment.html>

From matt at conundrum.com  Wed Feb 26 18:41:48 2014
From: matt at conundrum.com (Matthew Pounsett)
Date: Wed, 26 Feb 2014 20:41:48 -0500
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
Message-ID: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>


I?ve bumped into a weird one, and can?t figure out what I?m missing.  

    for iface in interfaces:
        for port in ports:
            logger.debug("Listening on {}:{}".format(iface, port))
            if use_ssl:
                reactor.listenSSL(port, factory,
                    ssl.DefaultOpenSSLContextFactory(ssl_key, ssl_cert),
                    interface=iface)
            else:
                reactor.listenTCP(port, factory, interface=iface)

In the above code block, listenSSL() and listenTCP() both fail silently.  They do not raise an exception, and netstat reports nothing listening on the appropriate port.  

Even weirder, if I assign the results of listenSSL() and listenTCP(), then then a v6 connection will succeed but v4 still fails (silently).

I get the same behaviour for both (so, regardless of the value of use_ssl in this code).

    for iface in interfaces:
        for port in ports:
            logger.debug("Listening on {}:{}".format(iface, port))
            if use_ssl:
                connector = reactor.listenSSL(port, factory,
                    ssl.DefaultOpenSSLContextFactory(ssl_key, ssl_cert),
                    interface=iface)
            else:
                connector = reactor.listenTCP(port, factory, interface=iface)
            logger.debug( "Connected with connector: {}".format(connector))
            logger.debug( "Connector on host {}".format(connector.getHost()))


19:33:43 http       Listening on 127.0.0.1:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv4Address(TCP, '127.0.0.1', 1812)
19:33:43 http       Listening on ::1:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv6Address(TCP, '::1', 1812)
19:33:43 http       Listening on 10.0.2.4:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv4Address(TCP, '10.0.2.4', 1812)

> netstat -an | egrep '\.1812.*LISTEN'
tcp6       0      0 ::1.1812               *.*                    LISTEN

I?ve used this exact recipe before without any trouble (the first block, with unassigned results from reactor.listen*).. I can?t figure out what I?m missing this time.   Does anything stand out to anyone?

Using py27-twisted-13.2.0 port on FreeBSD 9.2.




From dustin at v.igoro.us  Wed Feb 26 19:02:34 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 26 Feb 2014 21:02:34 -0500
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
Message-ID: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>

https://www.trustedsec.com/february-2014/python-remote-code-execution-socket-recvfrom_into/
identified a remote code execution vulnerability in Python's
`Socket.recvfrom_into method`.  Some brief grepping around the Twisted
source doesn't find this method, but I'd be interested to hear what
the maintainers have to say on the matter: is a twisted app which
doesn't, itself use this method safe?

Dustin


From _ at lvh.io  Thu Feb 27 01:58:02 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Thu, 27 Feb 2014 09:58:02 +0100
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
In-Reply-To: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
References: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
Message-ID: <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>

Hi Dustin,


This exploit appears to be specific to how received data is written to the
already existing buffer, so the _into forms of recv,recvfrom. Even if we
assume there's a parallel export for regular recv_into and not just
recvfrom_into (which hasn't been shown), Twisted never calls either of the
_into forms.

As a result, it looks like we're unaffected.


hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140227/5629f32a/attachment.html>

From orestis at orestis.gr  Thu Feb 27 04:21:42 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 27 Feb 2014 13:21:42 +0200
Subject: [Twisted-Python] [twisted-web] I/O error with twisted.web.wsgi and
	Django
Message-ID: <3227632E-B3C6-44B3-9909-96DCEBCCC137@orestis.gr>

Hi all,

I am using Twisted Web WSGIResource to host a Django site. Here's the 
code I use to setup the WSGI resource (other boilerplate skipped)

def wsgi_resource():
     from django.core.handlers.wsgi import WSGIHandler
     pool = threadpool.ThreadPool()
     pool.start()
     # Allow Ctrl-C to get you out cleanly:
     reactor.addSystemEventTrigger('after', 'shutdown', pool.stop)
     wsgi_resource = wsgi.WSGIResource(reactor, pool, WSGIHandler())
     return wsgi_resource

This generally worked quite well. However I have an API endpoint that 
gets hit with multiple POST requests per second (not very much - I'd say 
10-20 req/sec at most). Sometimes I see this in the logs:


Internal Server Error: /cas/eventlog/
Traceback (most recent call last):
   File "<pythonpath>/site-packages/django/core/handlers/base.py", line 
114, in get_response
     response = wrapped_callback(request, *callback_args, 
**callback_kwargs)
   File "<pythonpath>/site-packages/django/views/decorators/csrf.py", 
line 57, in wrapped_view
     return view_func(*args, **kwargs)
   File "<djangoapp>/views.py", line 488, in event_log
     data = json.loads(request.body)
   File "<pythonpath>/site-packages/django/http/request.py", line 192, 
in body
     self._body = self.read()
   File "<pythonpath>/site-packages/django/http/request.py", line 246, 
in read
     return self._stream.read(*args, **kwargs)
   File "<pythonpath>/site-packages/django/core/handlers/wsgi.py", line 
45, in read
     result = self.buffer + self._read_limited()
   File "<pythonpath>/site-packages/django/core/handlers/wsgi.py", line 
39, in _read_limited
     result = self.stream.read(size)
   File "<pythonpath>/site-packages/twisted/web/wsgi.py", line 94, in 
read
     return self._wrapped.read(size)
ValueError: I/O operation on closed file.


Any pointers on why would this happen? Why would Twisted close the file 
early? Could it be that I need to increase the threadpool size?


I use treq 0.2.0 for the requests, with the "persistent" flag turned on, 
if that makes any difference. Twisted 13.2.0 and Django 1.6, python 
2.7.1 on OS X 10.7.5.

Many thanks,
Orestis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140227/7f33ef65/attachment.html>

From exarkun at twistedmatrix.com  Thu Feb 27 05:01:27 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Feb 2014 12:01:27 -0000
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
In-Reply-To: <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>
References: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
 <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>
Message-ID: <20140227120127.6218.513251257.divmod.xquotient.31@top>

On 08:58 am, _ at lvh.io wrote:
>Hi Dustin,
>
>
>This exploit appears to be specific to how received data is written to 
>the
>already existing buffer, so the _into forms of recv,recvfrom. Even if 
>we
>assume there's a parallel export for regular recv_into and not just
>recvfrom_into (which hasn't been shown), Twisted never calls either of 
>the
>_into forms.
>
>As a result, it looks like we're unaffected.

This seems correct to me.

Jean-Paul


From glyph at twistedmatrix.com  Thu Feb 27 05:31:15 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Feb 2014 06:31:15 -0600
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
In-Reply-To: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
References: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
Message-ID: <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>

On Feb 26, 2014, at 7:41 PM, Matthew Pounsett <matt at conundrum.com> wrote:

> In the above code block

Before I start speculating as to what might be wrong, can you please attach an SSCCE <http://www.sscce.org/> that fully demonstrates the problem?  listenTCP and listenSSL definitely work on my computer ;-)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140227/f7bd62bf/attachment.html>

From glyph at twistedmatrix.com  Thu Feb 27 09:09:21 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Feb 2014 10:09:21 -0600
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
 <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
Message-ID: <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>


On Feb 13, 2014, at 2:53 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> > For now. Feel free to report errors and suggest new text for the site.
> 
> Right. What is the appropriate channel to report errors with the website?

Sorry I didn't answer this more promptly.

I think the best answer right now is <https://bugs.launchpad.net/twisted-website/+filebug>.

We'll try and make this answer better documented or replace it with something better when we can.

> Also, do you have any idea when the new documentation system will up and ready for contributions?

It's up and running; there should be a lot less need for documentation (although as you pointed out the current docs are wrong) because sphinx is better understood generally in the wider Python community.

If you'd like to write some ReST docs right now and submit a patch, please go ahead!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140227/cfd9e84a/attachment-0001.html>

From sank.daniel at gmail.com  Thu Feb 27 11:39:34 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Thu, 27 Feb 2014 10:39:34 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
 <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
 <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>
Message-ID: <CAKN9TDJ4K8GQQiW=Hb43RTk=xxFmPt8BWRO-7KVj3Oqknu5J+w@mail.gmail.com>

>> Also, do you have any idea when the new documentation system will up and
>> ready for contributions?
>>
> It's up and running; there should be a lot less need for documentation (although
> as you pointed out the current docs are wrong) because sphinx is better
> understood generally in the wider Python community.

Cool. I'm enough of a n00b that sphinx versus whatever else is all Greek for me.

> If you'd like to write some ReST docs right now and submit a patch, please go ahead!

Working on it.


From matt at conundrum.com  Thu Feb 27 12:33:06 2014
From: matt at conundrum.com (Matthew Pounsett)
Date: Thu, 27 Feb 2014 14:33:06 -0500
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
In-Reply-To: <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>
References: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
 <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>
Message-ID: <31D4841A-F61F-4929-A4B2-F6F9EDD2676A@conundrum.com>


On Feb 27, 2014, at 07:31 , Glyph <glyph at twistedmatrix.com> wrote:

> On Feb 26, 2014, at 7:41 PM, Matthew Pounsett <matt at conundrum.com> wrote:
> 
>> In the above code block
> 
> Before I start speculating as to what might be wrong, can you please attach an SSCCE <http://www.sscce.org/> that fully demonstrates the problem?  listenTCP and listenSSL definitely work on my computer ;-)

Normally I would.. the problem is that I?m having difficulty doing that.  As I said, this is something that normally works for me .. but something is interfering with it, and I can?t figure out what it might be.  I suspect once I?m able to produce a simple example that reproduces the error, I will know exactly what the problem is.

One thing I just realized I?d been overlooking is a traceback when I ^c out of my code (I haven?t yet added any handlers to shut down the reactor).  The difference between my attempt at an SSCCE and the actual code is that the actual code raises an exception *after* the ^c.  I had been assuming that had something to do with the fact that I was breaking out of the code without cleanly shutting things down, but my SSCCE doesn?t exhibit this behaviour.  Unfortunately the traceback doesn?t provide any info that helps me.

Traceback (most recent call last):
  File ?./app", line 239, in <module>
    core.main_loop(config)
  File "./modules/core.py", line 73, in main_loop
    reactor.run()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 1192, in run
    self.mainLoop()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 1204, in mainLoop
    self.doIteration(t)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/pollreactor.py", line 155, in doPoll
    l = self._poller.poll(timeout)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 603, in sigInt
    self.callFromThread(self.stop)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 948, in callFromThread
    self.wakeUp()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 519, in wakeUp
    self.waker.wakeUp()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 181, in wakeUp
    util.untilConcludes(os.write, self.o, b'x')
  File "/usr/local/lib/python2.7/site-packages/twisted/python/util.py", line 832, in untilConcludes
    return f(*a, **kw)
exceptions.OSError: [Errno 57] Socket is not connected


I?ll keep poking at it .. maybe something will jump out at me eventually.



From adi at roiban.ro  Fri Feb 28 07:56:58 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 16:56:58 +0200
Subject: [Twisted-Python] Help non-commiter to fully test their changes
	locally or remote
Message-ID: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>

Hi,

I am trying to gather documentation to help non-commiters test their
changes before sending them to review.

When run locally some tests fail with a lot of errors and is hard for a
developer to filter the errors generated by his/her changes.

Ex:
 * twistedchecker
 * pyflakes
 * api-reference

 I have created patches to clean pyflakes and I also plan to start cleaning
the api-reference build errors

>From information gathered from #twisted-dev it seems that twistedchecker is
not maintained and that some of its errors are invalid... so one should not
try to fix all its errors.
... I wander why twistedchecker is still used ?

I would like to investigate how we can fix api-reference build errors.

------

I have created a travis-ci configuration file which can be used as a
reference for running tests. It somehow copies the builders observed on
buildbot.twistedmatrix.com

A sample build result can be found here:
https://travis-ci.org/chevah/twisted/builds/19803969

Code changes are here. If you find them useful I can refine them into a
public patch.
https://github.com/chevah/twisted/pull/1/files

Only python 2.7 and 3.3 builders are enabled... but 2.6 builders can also
be enabled.
py-select-gc tests are not enabled since they are very, very slow.

Running all tests on a single process could take about 1 hour.
I guess that running only tests with default reactor and then
pyflakes/pydoctor on changed files should cover most errors.

A developer should run at least the following tests before sending a patch
for review:

 * trial with default reactor
 * pyflakes for changed files
 * pydoctor for changed files

If documentation was changed he/she should also run documentation tests.

----

Running pydoctor on my computer takes about 3 minutes... a bit long for my
taste.
I hope that pydoctor can be run on a independent python files so that I can
create
a separate linter test which will run pyflakes and pydoctor only on changes
files.
This should provide a big improvements in speed.

I used travis-ci as it provides  an isolated / reference test environment.
Once the configuration is ok, it can be translated into tox [1],  private
buildbot [2] or custom script to allow developers to run test on their
computers.

If a Twisted developer has time, I need some help to check the current
travis-ci errors and suggest how to fix them.

Thanks!

[1] https://github.com/msabramo/python-panci
[2] https://github.com/isotoma/buildbot_travis

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140228/d35910a1/attachment.html>

From adi at roiban.ro  Fri Feb 28 08:02:46 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 17:02:46 +0200
Subject: [Twisted-Python] inotify tests failing on travis-ci
Message-ID: <CAFycZ9dE_xyxjpFEuUboB7W_EgOc0qC7HUL=CiY_dWo9AfOG2w@mail.gmail.com>

I have 4 inotify tests which are failing on travis-ci builders:

They pass on my local system which is also Ubuntu 12.04 with virtualenv.

Do you know what could be the cause of these failures?
Any hint of what can be done to fix them?

Thanks!

-----

Full log is here: https://travis-ci.org/chevah/twisted/jobs/19803983

Here are the failing tests.

[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify testMethod=test_deleteSelf>
(test_deleteSelf) still running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_deleteSelf
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_ignoreFilePath> (test_ignoreFilePath) still running at
120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_ignoreFilePath
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_seriesOfWatchAndIgnore> (test_seriesOfWatchAndIgnore) still
running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_seriesOfWatchAndIgnore
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_simpleDeleteDirectory> (test_simpleDeleteDirectory) still
running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_simpleDeleteDirectory
-------------------------------------------------------------------------------
Ran 9634 tests in 578.574s
FAILED (skips=1316, expectedFailures=12, errors=4, successes=8302)

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140228/7edbe73c/attachment.html>

From hawkowl at atleastfornow.net  Fri Feb 28 08:34:39 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 28 Feb 2014 23:34:39 +0800
Subject: [Twisted-Python] Help non-commiter to fully test their changes
 locally or remote
In-Reply-To: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>
References: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>
Message-ID: <5310AC8F.6090603@atleastfornow.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

TwistedChecker is kind of maintained by me - I've just not had the
drive to work on it as much as other things :)

Some of the invalid TwistedChecker errors are hard to solve - some are
because they're hard to detect statically (for example, `some_var %
20` - is this string formatting, or modulo? Who knows, without runtime
inspection).

TwistedChecker has some form of diff functionality. When I get the
time I might have to think of how to do it locally, rather than
relying on the buildbots.

Regards,
HawkOwl

On 28/02/14 22:56, Adi Roiban wrote:
> Hi,
> 
> I am trying to gather documentation to help non-commiters test
> their changes before sending them to review.
> 
> When run locally some tests fail with a lot of errors and is hard
> for a developer to filter the errors generated by his/her changes.
> 
> Ex: * twistedchecker * pyflakes * api-reference
> 
> I have created patches to clean pyflakes and I also plan to start
> cleaning the api-reference build errors
> 
> From information gathered from #twisted-dev it seems that
> twistedchecker is not maintained and that some of its errors are
> invalid... so one should not try to fix all its errors. ... I
> wander why twistedchecker is still used ?
> 
> I would like to investigate how we can fix api-reference build
> errors.
> 
> ------
> 
> I have created a travis-ci configuration file which can be used as
> a reference for running tests. It somehow copies the builders
> observed on buildbot.twistedmatrix.com
> 
> A sample build result can be found here: 
> https://travis-ci.org/chevah/twisted/builds/19803969
> 
> Code changes are here. If you find them useful I can refine them
> into a public patch. 
> https://github.com/chevah/twisted/pull/1/files
> 
> Only python 2.7 and 3.3 builders are enabled... but 2.6 builders
> can also be enabled. py-select-gc tests are not enabled since they
> are very, very slow.
> 
> Running all tests on a single process could take about 1 hour. I
> guess that running only tests with default reactor and then 
> pyflakes/pydoctor on changed files should cover most errors.
> 
> A developer should run at least the following tests before sending
> a patch for review:
> 
> * trial with default reactor * pyflakes for changed files *
> pydoctor for changed files
> 
> If documentation was changed he/she should also run documentation
> tests.
> 
> ----
> 
> Running pydoctor on my computer takes about 3 minutes... a bit long
> for my taste. I hope that pydoctor can be run on a independent
> python files so that I can create a separate linter test which will
> run pyflakes and pydoctor only on changes files. This should
> provide a big improvements in speed.
> 
> I used travis-ci as it provides  an isolated / reference test
> environment. Once the configuration is ok, it can be translated
> into tox [1],  private buildbot [2] or custom script to allow
> developers to run test on their computers.
> 
> If a Twisted developer has time, I need some help to check the
> current travis-ci errors and suggest how to fix them.
> 
> Thanks!
> 
> [1] https://github.com/msabramo/python-panci [2]
> https://github.com/isotoma/buildbot_travis
> 
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJTEKyPAAoJECMItHnTkkoRZVoH/jziYa2TnfpzfXKa+Ivqy2fw
yWnH5xtsjeo4zrZwd1JWjchnrUTTgLJg/HtJzu5rrql8umzpKTfDU98K8EwzLvOF
AAjxmv6oTKNvIQw6QLu4ZEQ2sqG6815WSWqoEuZ2qxmtODg4v2TAjhhKv79lHZO5
XbzkRj2XhEKtaDKXsc7TrYrzwkgV+7uK0I4IG+tfFMKLBeEw3X4mV8t1ZhfE/9U1
7I98I1W5BySYdD5eEy7PbkQ5mqVdk1m1EY01QamtH90Sl4TyrBz5A8VwXfmtRP+D
T9fF0xRmh/yifbSQ48vsGiFfJIUGwsShNkvalMWtVnF40RLEejBNU2mzN+lhkc4=
=XhJV
-----END PGP SIGNATURE-----


From adi at roiban.ro  Fri Feb 28 08:58:34 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 17:58:34 +0200
Subject: [Twisted-Python] Enabling travis-ci tests for reviews via pull
	requests
Message-ID: <CAFycZ9dBNVSr=QHciymW9wQ8dvch-4zqNjSxk726pMkZi8wUSQ@mail.gmail.com>

Hi,

The possibility of using travis-ci for running tests against patches from
non-commiters was raised during a review so I would like to summarize my
findings.

Travis-CI can run tests on multiple python version and the results are
public.
It will accept any patch submitted via a pull request and will execute the
tests on it.

It only provides Ubuntu 12.04 x64 builders... and with some hacks maybe
also OSX (as used by pyca / cryptography)

I know that Twisted developers don't want to deal with GitHub's pull
requests.
One option is to accept the .travis.yml in trunk, and then each developer
can enable travis-ci build on his/her own fork.

If he/she needs to check a patch, he/she could create a pull request for
his/her own fork of trunk and if Travis-ci is enabled for that fork, a
build is triggers and an email with results is sent.

What do you think? Would you accept such path?

Are there other (better) ways of allowing developers to run tests before
sending a patch?

I think that it is nice to allow developers to run a reference set of tests
before requesting a review.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140228/8559aaf1/attachment-0001.html>

From goffi at goffi.org  Fri Feb 28 12:56:30 2014
From: goffi at goffi.org (Goffi)
Date: Fri, 28 Feb 2014 20:56:30 +0100
Subject: [Twisted-Python] =?utf-8?b?W0FOTk9VTkNFXSBTYWx1dCDDoCBUb2kgMC40?=
	=?utf-8?q?=2E0=3A_powerful_XMPP_client_based_on_Twisted/Wokkel?=
Message-ID: <98872a246f11ad93ff029c1bd3858841@mail.goffi.org>

G'day,

We are proud to announce the 0.4.0 release of "Salut ? Toi", a powerful 
XMPP client with "social" features such has microblogging, group 
permissions (called elsewhere "aspects" or "circles"), file sharing, 
multi-user chat, etc.

The project is based on Twisted and Wokkel, and is multi-frontends 
(web, desktop, console interface, CLI), a demo of the web interface is 
available online at http://www.libervia.org .

0.4.0 announcement: 
http://www.goffi.org/post/2014/02/26/Salut-%C3%A0-Toi-0.4.0
website: http://www.salut-a-toi.org

In addition, a pubsub componant, based on Ralph Meier's Idavoll 
(http://idavoll.ik.nu/ but the site seems down), S?T PubSub, has also 
been published. It's build to experiments features, like fine access 
tuning 
(http://www.goffi.org/post/2012/06/24/Fine-access-tuning-for-PubSub), 
and to be complete enough to allow microblogging. You'll find it on the 
mercurial repository (http://repos.goffi.org) or on 
ftp://ftp.goffi.org/sat_pubsub/sat_pubsub.tar.bz2 .


Big thanks to Twisted team and contributors, and special thanks to 
Ralph Meier for Wokkel, Idavoll, and the work on XMPP/PubSub :)

If anybody feel like contributing, you're welcome :). You'll find us on 
XMPP muc room sat at chat.jabberfr.org, or you can subscribe to dev list on 
http//lists.goffi.org .

Goffi



From trac at twistedmatrix.com  Sun Feb  2 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 Feb 2014 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1391324715.75.1376471774129640617@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140202/6238c062/attachment-0002.html>

From tobias.oberstein at tavendo.de  Mon Feb  3 13:41:10 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 12:41:10 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
Message-ID: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>

Hi,

for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP listening socket.

The option needs to be set _before_ calling bind() and listen() on the socket.

Is there a recommended way of doing this?

One option might be subclassing `twisted.internet.tcp.Port` and overriding `createInternetSocket` - is that recommended?

And if so: how do I make the CustomPort be used with reactor.listenTCP/listenSSL and endpoints?

Any hints appreciated, thanks!

/Tobias



From exarkun at twistedmatrix.com  Mon Feb  3 13:49:39 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 03 Feb 2014 20:49:39 -0000
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20140203204939.6683.2031633338.divmod.xquotient.44@top>

On 08:41 pm, tobias.oberstein at tavendo.de wrote:
>Hi,
>
>for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP 
>listening socket.

You might find that https://stackoverflow.com/questions/10077745 
/twistedweb-on-multicore-multiprocessor obviates the need for this 
option (and thus your follow-up features as well).

Not that Twisted shouldn't offer some way to gain more control over this 
kind of platform-specific option.  But, until it does...

Jean-Paul
>The option needs to be set _before_ calling bind() and listen() on the 
>socket.
>
>Is there a recommended way of doing this?
>
>One option might be subclassing `twisted.internet.tcp.Port` and 
>overriding `createInternetSocket` - is that recommended?
>
>And if so: how do I make the CustomPort be used with 
>reactor.listenTCP/listenSSL and endpoints?
>
>Any hints appreciated, thanks!
>
>/Tobias
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tobias.oberstein at tavendo.de  Mon Feb  3 14:49:06 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 13:49:06 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <20140203204939.6683.2031633338.divmod.xquotient.44@top>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
Message-ID: <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>

> >for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP
> >listening socket.
> 
> You might find that https://stackoverflow.com/questions/10077745
> /twistedweb-on-multicore-multiprocessor obviates the need for this option (and
> thus your follow-up features as well).

Jean-Paul,

yes, I am aware of this (awesome) answer;) This works, but has 2 slightly
undesirable aspects:

1) it requires to have a master process that creates the socket and starts workers
which "adopt" the port. I'd like to be able to fire up workers independently .. with
no master at all.

2) the distribution of incoming connections to workers isn't completely uniformly
distributed across workers.

This problem is explained here (they report up to 3:1 ratios of connections per worker):
https://lwn.net/Articles/542629/
https://lwn.net/Articles/542718/

and I could verify this during some experiments (though not such extreme non-uniformity)

> 
> Not that Twisted shouldn't offer some way to gain more control over this kind
> of platform-specific option.  But, until it does...

I guess that means there is no "recommended" way currently;)

Would you mind giving a tip on how to make use of a CustomPort deriving
of Port? How to "plug" that into Twisted?

Thanks!
/Tobias

> 
> Jean-Paul
> >The option needs to be set _before_ calling bind() and listen() on the
> >socket.
> >
> >Is there a recommended way of doing this?
> >
> >One option might be subclassing `twisted.internet.tcp.Port` and
> >overriding `createInternetSocket` - is that recommended?
> >
> >And if so: how do I make the CustomPort be used with
> >reactor.listenTCP/listenSSL and endpoints?
> >
> >Any hints appreciated, thanks!
> >
> >/Tobias
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Mon Feb  3 15:19:49 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 03 Feb 2014 22:19:49 -0000
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <20140203221949.6683.1874775514.divmod.xquotient.67@top>

On 09:49 pm, tobias.oberstein at tavendo.de wrote:
>> >for a multiprocess server, I'd like to set SO_REUSEPORT on a TCP
>> >listening socket.
>>
>>You might find that https://stackoverflow.com/questions/10077745
>>/twistedweb-on-multicore-multiprocessor obviates the need for this 
>>option (and
>>thus your follow-up features as well).
>
>Jean-Paul,
>
>yes, I am aware of this (awesome) answer;) This works, but has 2 
>slightly
>undesirable aspects:
>
>1) it requires to have a master process that creates the socket and 
>starts workers
>which "adopt" the port. I'd like to be able to fire up workers 
>independently .. with
>no master at all.

There are ways around this but they're a bit more work (eg, workers 
listen on a unix socket and hand out the port to new workers that start 
up and ask for it).
>2) the distribution of incoming connections to workers isn't completely 
>uniformly
>distributed across workers.
>
>This problem is explained here (they report up to 3:1 ratios of 
>connections per worker):
>https://lwn.net/Articles/542629/
>https://lwn.net/Articles/542718/
>
>and I could verify this during some experiments (though not such 
>extreme non-uniformity)

Huh.  I didn't know about that.  That's too bad.
>>
>>Not that Twisted shouldn't offer some way to gain more control over 
>>this kind
>>of platform-specific option.  But, until it does...
>
>I guess that means there is no "recommended" way currently;)

Correct.
>Would you mind giving a tip on how to make use of a CustomPort deriving
>of Port? How to "plug" that into Twisted?

I have two suggestions, one of which I hope you'll like and the other of 
which you might not. :)

First, endpoints are the intended extension point for this sort of thing 
now.  You can write a plugin for the parser so that `serverFromString` 
will give out server endpoints for your port type (giving an appropriate 
string description).  Applications won't be able to tell what's going on 
because the server endpoint interface is just `.listen(factory)´.

Second, please don't subclass `Port`.  It's true there are no 
underscores anywhere in its name (`twisted.internet.tcp.Port`) making it 
part of Twisted's public API.  Nevertheless, it's very much a reactor 
implementation detail.  It's a mistake that it's public.  To compounded 
this, the exactly interface between a class and its subclasses is hazy 
and gross at best.  I'd discourage you (and everyone else) from 
subclassing *most* things in Twisted these days (lots of our APIs are 
still subclassing-oriented so it's not always possible to avoid, of 
course).

In this case, I think you might actually be able to re-use all of the 
important parts of `Port` without subclassing it.  You can create a 
bare-bones implementation of `IListeningPort` that creates a socket and 
sets the flags you want on it.  Then, use `reactor.adoptStreamPort` to 
get the reactor to create and initialize a new `Port` with your socket. 
This leaves you with a little code to duplicate (basically 
`createInternetSocket`) but a pretty small amount - and the upside is 
that you're totally isolated from the internals of `Port`, from the 
accidentally-public implementation details of `Port`, and even from the 
implementation detail of whether the reactor even *uses* `Port` or not. 
All you rely on is `reactor.adoptStreamPort` which is a nice, 
documented, tested, intentionally-public interface. :)

(For SSL, then you can wrap your own twisted.protocols.tls wrapper 
around the factory - which is all the reactor's listenSSL does these 
days, anyway).

Hope this helps,

Jean-Paul



From tobias.oberstein at tavendo.de  Mon Feb  3 16:15:55 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 3 Feb 2014 15:15:55 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <20140203221949.6683.1874775514.divmod.xquotient.67@top>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
 <20140203221949.6683.1874775514.divmod.xquotient.67@top>
Message-ID: <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>

> >Would you mind giving a tip on how to make use of a CustomPort deriving
> >of Port? How to "plug" that into Twisted?
> 
> I have two suggestions, one of which I hope you'll like and the other of which
> you might not. :)

Awesome! This is enough hints to get me started.

I already have Twisted endpoint plugins, and I will follow that road, something like

tcpwithopts:tcp:9000:interface=0.0.0.0:reuse-port:true:disable-nagle:true

Subclassing Port / adoptStream: I see;) Not sure if this SO_REUSEPORT works
on Windows - if it does, another aspect then is that adoptStream is Unix-only ..

I will see. Thanks again!

/Tobias


> 
> First, endpoints are the intended extension point for this sort of thing now.  You
> can write a plugin for the parser so that `serverFromString` will give out server
> endpoints for your port type (giving an appropriate string description).
> Applications won't be able to tell what's going on because the server endpoint
> interface is just `.listen(factory)´.
> 
> Second, please don't subclass `Port`.  It's true there are no underscores
> anywhere in its name (`twisted.internet.tcp.Port`) making it part of Twisted's
> public API.  Nevertheless, it's very much a reactor implementation detail.  It's a
> mistake that it's public.  To compounded this, the exactly interface between a
> class and its subclasses is hazy and gross at best.  I'd discourage you (and
> everyone else) from subclassing *most* things in Twisted these days (lots of
> our APIs are still subclassing-oriented so it's not always possible to avoid, of
> course).
> 
> In this case, I think you might actually be able to re-use all of the important
> parts of `Port` without subclassing it.  You can create a bare-bones
> implementation of `IListeningPort` that creates a socket and sets the flags you
> want on it.  Then, use `reactor.adoptStreamPort` to get the reactor to create
> and initialize a new `Port` with your socket.
> This leaves you with a little code to duplicate (basically
> `createInternetSocket`) but a pretty small amount - and the upside is that
> you're totally isolated from the internals of `Port`, from the accidentally-public
> implementation details of `Port`, and even from the implementation detail of
> whether the reactor even *uses* `Port` or not.
> All you rely on is `reactor.adoptStreamPort` which is a nice, documented,
> tested, intentionally-public interface. :)
> 
> (For SSL, then you can wrap your own twisted.protocols.tls wrapper around the
> factory - which is all the reactor's listenSSL does these days, anyway).
> 
> Hope this helps,
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

From david at davidstrauss.net  Tue Feb  4 16:55:04 2014
From: david at davidstrauss.net (David Timothy Strauss)
Date: Tue, 4 Feb 2014 15:55:04 -0800
Subject: [Twisted-Python] Setting socket options before bind/listen
In-Reply-To: <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D4446C29540B@EXVMBX020-12.exch020.serverdata.net>
 <20140203204939.6683.2031633338.divmod.xquotient.44@top>
 <634914A010D0B943A035D226786325D4446C295462@EXVMBX020-12.exch020.serverdata.net>
 <20140203221949.6683.1874775514.divmod.xquotient.67@top>
 <634914A010D0B943A035D226786325D4446C2954BE@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAKz8sYUFTJgEvfJU7Y8ro7bn1TyqfNZH4NVnyJVxzB3mdmBrWQ@mail.gmail.com>

You can also accomplish this using systemd socket activation with the
ReusePort= option [1]. Twisted supports inheriting such sockets from
systemd.

[1] http://www.freedesktop.org/software/systemd/man/systemd.socket.html



From david at davidstrauss.net  Tue Feb  4 17:03:03 2014
From: david at davidstrauss.net (David Timothy Strauss)
Date: Tue, 4 Feb 2014 16:03:03 -0800
Subject: [Twisted-Python] Sending feedback on SSH authentication failures
Message-ID: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>

Is there a straightforward way to send text feedback to users when
their authentication fails? At Pantheon, we use a custom
implementation of IRealm. I'm hoping there's a way to send or return
the output from there.

We particularly need this because users will have various two-factor
authentication modes configured, and a simple pass/fail for
authentication will leave many scratching their heads.

I don't see any examples of such output on the relevant documentation page [1].

[1] https://twistedmatrix.com/documents/current/core/howto/cred.html



From toph_ut at yahoo.de  Wed Feb  5 08:59:05 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Wed, 5 Feb 2014 15:59:05 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
Message-ID: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>

Hello,
im trying to make Twisted run on an embedded system which doesnt support fork() and exec().
Lets say i have a function os.writeLine(), which just makes a prinft("foo") on the stdout.
I implemented writeLine() in the posixmodule.c of the python so os.writeLine() would make the work.


Now i would like to create a Process (from buildbot ShellCommand) which just calls writeLine() and gets the stdout of it (foo).
No fork, no exec ..
std are standards: 0,1 and 2.
since i tried to understand the class Process(_BaseProcess) in (twisted/internet/process) and i couldnt resolve my problem alone, i would like to get some help so could someone please point me to the right direction ..

best regards ..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140205/f221f2b2/attachment-0002.html>

From dustin at v.igoro.us  Wed Feb  5 09:13:18 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 5 Feb 2014 11:13:18 -0500
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
Message-ID: <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>

What's your ultimate goal here?  It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin

On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From toph_ut at yahoo.de  Thu Feb  6 00:12:58 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 6 Feb 2014 07:12:58 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
 <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
Message-ID: <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>

Hello,
 
My ultimate goal is to get the output from stdout and print it out on the
log of buildbot.
It is a process. I just wanted to make it easy here so you can understand
what i need.
Its on a VxWorks, which doenst support fork() nor exec().
It has just a function taskSpawn() which spawn a Task. This task prints out
few lines on the stdout.

I want to make buildbot run on VxWorks. FileUpload and FileDownload works
fine.
ShellCommand doenst.


I hope you understand now my ultimate goal and thank you for your time.

Best regards.



Dustin J. Mitchell <dustin at v.igoro.us> schrieb am 17:13 Mittwoch, 5.Februar 2014:
 
What's your ultimate goal here?  It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin


On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140206/793e64ff/attachment-0002.html>

From toph_ut at yahoo.de  Thu Feb  6 02:42:59 2014
From: toph_ut at yahoo.de (Toph Bei Fong)
Date: Thu, 6 Feb 2014 09:42:59 +0000 (GMT)
Subject: [Twisted-Python] Process without fork() exec()
In-Reply-To: <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>
References: <1391615945.82596.YahooMailNeo@web171704.mail.ir2.yahoo.com>
 <CAJtE5vTh9Ta6kagag1viq9gPNhn1P5LSf_-UL5mxehQW6On-2g@mail.gmail.com>
 <1391670778.8355.YahooMailNeo@web171701.mail.ir2.yahoo.com>
Message-ID: <1391679779.61890.YahooMailNeo@web171701.mail.ir2.yahoo.com>

Or is there maybe any other socket-implementation for that part like _Win32Waker as a replacement for _UnixWaker.
My implementation would be a bit Windows-Like (_dumpwin32proc) ..
I have pipe(), taskSpawn() [like CreateProcess()] and i want to get the output from there and parse it to my buildbot Process (ShellCommand).

I dont know how clear my goal is ..

VxWorks 6.9 (POSIX 1003.1c, PSE52 Profile)

Best regards.



Toph Bei Fong <toph_ut at yahoo.de> schrieb am 8:12 Donnerstag, 6.Februar 2014:
 
Hello,
 
My ultimate goal is to get the output from stdout and print it out on the
log of buildbot.
It is a process. I just wanted to make it easy here so you can understand
what i need.
Its on a VxWorks, which doenst support fork() nor exec().
It has just a function taskSpawn() which spawn a Task. This task prints out
few lines on the stdout.

I want to make buildbot run on VxWorks. FileUpload and FileDownload works
fine.
ShellCommand doenst.


I hope you understand now my ultimate goal and thank you for your time.

Best regards.



Dustin J. Mitchell <dustin at v.igoro.us> schrieb am 17:13 Mittwoch, 5.Februar 2014:
 
What's your ultimate goal here?  It doesn't sound like Process is a
good tool to use on a system that doesn't support processes.

Dustin


On Wed, Feb 5, 2014 at 10:59 AM, Toph Bei Fong <toph_ut at yahoo.de> wrote:
> Hello,
> im trying to make Twisted run on an
 embedded system which doesnt support
> fork() and exec().
> Lets say i have a function os.writeLine(), which just makes a prinft("foo")
> on the stdout.
> I implemented writeLine() in the posixmodule.c of the python so
> os.writeLine() would make the work.
>
>
> Now i would like to create a Process (from buildbot ShellCommand) which just
> calls writeLine() and gets the stdout of it (foo).
> No fork, no exec ..
> std are standards: 0,1 and 2.
> since i tried to understand the class Process(_BaseProcess) in
> (twisted/internet/process) and i couldnt resolve my problem alone, i would
> like to get some help so could someone please point me to the right
> direction ..
>
> best regards ..
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140206/ee96bdf2/attachment-0002.html>

From twisted at tomvn.com  Thu Feb  6 17:24:00 2014
From: twisted at tomvn.com (Tom van Neerijnen)
Date: Fri, 7 Feb 2014 00:24:00 +0000
Subject: [Twisted-Python] Sending feedback on SSH authentication failures
In-Reply-To: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>
References: <CAKz8sYUmgPJzEEjtfnQuC9oyo4NZ4QarhrhDnR1xPcQDZwVvyA@mail.gmail.com>
Message-ID: <CAMwy1tzEc5ne89Y4pRO0b0Vqyp71tEgBt57SdfEJxFgT+GZbBw@mail.gmail.com>

SSH (and by association conch) sends feedback to users but unless you ssh
-v you won't see much of it. Sending text feedback without using the
standard auth methods might require you to move your two factor auth into
your protocol but this doesn't feel like a good idea to me. I'm relatively
new to conch and my use case is quite different to yours so if I'm wrong
and there is a way to do this I hope someone else jumps in to correct me.

I did a quick test with
http://twistedmatrix.com/documents/current/api/twisted.conch.checkers.SSHProtocolChecker.htmlas
my portals checker and that lets me require both password (something
you
know) and key (something you have).
My test doesn't handle "ticking" already used auth methods off the list of
authentications that can continue but I don't think it would be too hard to
get that working.
I see the following in my ssh client connection when connecting to my
server. As I said I don't tick off used methods which is why you see
"Authentications that can continue: password,publickey" instead of just
password.

$ ssh -v -p 5022 user at localhost
OpenSSH_6.2p2 Ubuntu-6ubuntu0.1, OpenSSL 1.0.1e 11 Feb 2013
debug1: Reading configuration data /home/tom/.ssh/config
....
debug1: Remote protocol version 2.0, remote software version Twisted
....
debug1: Authentications that can continue: password,publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /home/tom/.ssh/id_rsa
debug1: Server accepts key: pkalg ssh-rsa blen 279
Authenticated with partial success.
debug1: Authentications that can continue: password,publickey
....
debug1: Next authentication method: password
user at localhost's password:
debug1: Authentication succeeded (password).
Authenticated to localhost ([127.0.0.1]:5022).
debug1: channel 0: new [client-session]
debug1: Entering interactive session.
debug1: Sending environment.
debug1: Sending env LANG = en_GB.UTF-8

Hope that helps.


On Wed, Feb 5, 2014 at 12:03 AM, David Timothy Strauss <
david at davidstrauss.net> wrote:

> Is there a straightforward way to send text feedback to users when
> their authentication fails? At Pantheon, we use a custom
> implementation of IRealm. I'm hoping there's a way to send or return
> the output from there.
>
> We particularly need this because users will have various two-factor
> authentication modes configured, and a simple pass/fail for
> authentication will leave many scratching their heads.
>
> I don't see any examples of such output on the relevant documentation page
> [1].
>
> [1] https://twistedmatrix.com/documents/current/core/howto/cred.html
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140207/82f160f4/attachment-0002.html>

From ldc at ldom.net  Fri Feb  7 09:10:04 2014
From: ldc at ldom.net (Laurent Domenech-Cabaud)
Date: Fri, 7 Feb 2014 17:10:04 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to implement the
	feature?
Message-ID: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>

Hello,

We're looking to hire (contract) someone with a good knowledge of Twisted, ideally a dev of this great project.

What we need is fairly simple: implement an HTTPS transparent proxy to work with a basic HTTP proxy (based on the example from the doc). The HTTPS proxy will just have to pass the data to/from the destination server (untouched, but some filtering will be added by us on the destination host name) and the HTTP proxy will do a little more filtering (this portion is not part of the work to be done).

Please let me know. I’m at your disposal for more details. If it’s not the proper place to ask, please accept my apologies. 

Cheers,
Laurent


From _ at lvh.io  Fri Feb  7 10:44:49 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Fri, 7 Feb 2014 18:44:49 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to implement
	the feature?
In-Reply-To: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>
References: <B0AAC7F9-C789-4B83-91DF-CE5336FB8D54@ldom.net>
Message-ID: <CAE_Hg6aQWOo7gpHxv18=MRPHD8hAj2jxpg-cZfwFsUYOpktfmw@mail.gmail.com>

Hi Laurent,

Apologies for brevity; I am on my phone.

I am a Twisted core developer, and the author of minitrue, a software
package that uses the proxy parts of Twisted. I am currently available for
contracting.

hth
lvh
On Feb 7, 2014 5:12 PM, "Laurent Domenech-Cabaud" <ldc at ldom.net> wrote:

> Hello,
>
> We're looking to hire (contract) someone with a good knowledge of Twisted,
> ideally a dev of this great project.
>
> What we need is fairly simple: implement an HTTPS transparent proxy to
> work with a basic HTTP proxy (based on the example from the doc). The HTTPS
> proxy will just have to pass the data to/from the destination server
> (untouched, but some filtering will be added by us on the destination host
> name) and the HTTP proxy will do a little more filtering (this portion is
> not part of the work to be done).
>
> Please let me know. I'm at your disposal for more details. If it's not the
> proper place to ask, please accept my apologies.
>
> Cheers,
> Laurent
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140207/30165424/attachment-0002.html>

From kasturi.surya at gmail.com  Fri Feb  7 12:06:02 2014
From: kasturi.surya at gmail.com (Surya)
Date: Sat, 8 Feb 2014 00:36:02 +0530
Subject: [Twisted-Python] Like to write some code for Twisted
Message-ID: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>

Hello there,

I'm Surya - github.com/ksurya

I have been working on Django and consider as beginner in Python and
Django or may be a little bit more than a beginner.

After dealing with pretty high level layers, I am curious to work on
the low level layers and contribute some code. That said, I haven't
really worked on Twisted anytime and didn't dwell into this stack.

So, I was wondering if there anyone who can offer some specific help
to get me started.

Cheers
Surya



From ldc at ldom.net  Sat Feb  8 03:51:26 2014
From: ldc at ldom.net (Laurent Domenech-Cabaud)
Date: Sat, 8 Feb 2014 11:51:26 +0100
Subject: [Twisted-Python] how to hire a Twisted developer to
	implement	the feature?
In-Reply-To: <mailman.1.1391799601.10767.twisted-python@twistedmatrix.com>
References: <mailman.1.1391799601.10767.twisted-python@twistedmatrix.com>
Message-ID: <16F39883-F574-4BDB-8704-1A757E80A322@ldom.net>

Hi Laurens,

Thanks. I’ll email you privately.

Cheers,
Laurent

On 7 févr. 2014, at 20:00, twisted-python-request at twistedmatrix.com wrote:

> Message: 3
> Date: Fri, 7 Feb 2014 18:44:49 +0100
> From: Laurens Van Houtven <_ at lvh.io>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] how to hire a Twisted developer to
> 	implement	the feature?
> Message-ID:
> 	<CAE_Hg6aQWOo7gpHxv18=MRPHD8hAj2jxpg-cZfwFsUYOpktfmw at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> Hi Laurent,
> 
> Apologies for brevity; I am on my phone.
> 
> I am a Twisted core developer, and the author of minitrue, a software
> package that uses the proxy parts of Twisted. I am currently available for
> contracting.
> 
> hth
> lvh
> On Feb 7, 2014 5:12 PM, "Laurent Domenech-Cabaud" <ldc at ldom.net> wrote:
> 
>> Hello,
>> 
>> We're looking to hire (contract) someone with a good knowledge of Twisted,
>> ideally a dev of this great project.
>> 
>> What we need is fairly simple: implement an HTTPS transparent proxy to
>> work with a basic HTTP proxy (based on the example from the doc). The HTTPS
>> proxy will just have to pass the data to/from the destination server
>> (untouched, but some filtering will be added by us on the destination host
>> name) and the HTTP proxy will do a little more filtering (this portion is
>> not part of the work to be done).
>> 
>> Please let me know. I'm at your disposal for more details. If it's not the
>> proper place to ask, please accept my apologies.
>> 
>> Cheers,
>> Laurent
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140207/30165424/attachment-0001.html>
> 
> ------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> End of Twisted-Python Digest, Vol 119, Issue 5
> **********************************************




From _ at lvh.io  Sat Feb  8 08:50:04 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 8 Feb 2014 16:50:04 +0100
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
Message-ID: <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>

Hi Surya!


First of all, thank you for offering up your free time to help Twisted.

Specific advice:

1. Join #twisted
2. Join #twisted-dev
3. https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140208/f3e0b7a4/attachment-0002.html>

From trac at twistedmatrix.com  Sun Feb  9 00:05:14 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 Feb 2014 07:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1391929514.9.4946779244294367840@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140209/cc92bc98/attachment-0002.html>

From grindizer at gmail.com  Sun Feb  9 05:34:58 2014
From: grindizer at gmail.com (Flint)
Date: Sun, 9 Feb 2014 13:34:58 +0100
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
 <CAE_Hg6aDHmdXrk9AiSF0Z=ovmW+HLwk=pu_kuRMAorvsPzuvmQ@mail.gmail.com>
Message-ID: <CALpq1pZ=sYpTw4QMxzmh7sKtGJ+zjzoaAYpc=KT8f+AyTA1L2Q@mail.gmail.com>

Hi Surya

Here one of the best introduction to Twisted I know :)
http://krondo.com/?page_id=1327





2014-02-08 Laurens Van Houtven <_ at lvh.io>:

> Hi Surya!
>
>
> First of all, thank you for offering up your free time to help Twisted.
>
> Specific advice:
>
> 1. Join #twisted
> 2. Join #twisted-dev
> 3. https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
> hth
> lvh
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140209/5e8e7aa7/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 10 16:19:13 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Feb 2014 17:19:13 -0600
Subject: [Twisted-Python] Like to write some code for Twisted
In-Reply-To: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
References: <CAArdDCph2RNoHNzCKjRz4eEuy78wQPQW6FaJRcNdC7wpd0vBaQ@mail.gmail.com>
Message-ID: <074C0124-2573-4E72-A9F5-ACBF3D159850@twistedmatrix.com>

On Feb 7, 2014, at 1:06 PM, Surya <kasturi.surya at gmail.com> wrote:

> Hello there,
> 
> I'm Surya - github.com/ksurya

Hi Surya!

> I have been working on Django and consider as beginner in Python and
> Django or may be a little bit more than a beginner.

Welcome to the Twisted community.

> After dealing with pretty high level layers, I am curious to work on
> the low level layers and contribute some code. That said, I haven't
> really worked on Twisted anytime and didn't dwell into this stack.

Glad to hear you're interested!

> So, I was wondering if there anyone who can offer some specific help
> to get me started.

I think the best I can do is to ask you: what are your interests?  Twisted does a lot of things: web, email, chat, name servers, and authentication to name a few things.  Do you have any specific interests in these areas, or do you just want to work on the lowest-level thing possible?  Have you looked through the bug tracker?  Usually it's best to familiarize yourself with our development process by submitting a very small change, like a fix for a typo, and just get it through code review and committing.

-glyph


From oscar.campos at member.fsf.org  Mon Feb 10 16:39:04 2014
From: oscar.campos at member.fsf.org (Oscar Campos)
Date: Mon, 10 Feb 2014 23:39:04 +0000
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
Message-ID: <52F96318.2000507@member.fsf.org>

Hi folks.

It's possible to run several instances of the same twisted based
application sharing the same port and balancing the access to them? If
it's possible, can you give me some link to any documentation about that
or the code were it is implemented?

Thank you.

Oscar Campos.

-- 
Join the free software foundation and become free as in freedom




From glyph at twistedmatrix.com  Mon Feb 10 16:41:43 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 10 Feb 2014 17:41:43 -0600
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
In-Reply-To: <52F96318.2000507@member.fsf.org>
References: <52F96318.2000507@member.fsf.org>
Message-ID: <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>


On Feb 10, 2014, at 5:39 PM, Oscar Campos <oscar.campos at member.fsf.org> wrote:

> Hi folks.
> 
> It's possible to run several instances of the same twisted based
> application sharing the same port and balancing the access to them? If
> it's possible, can you give me some link to any documentation about that
> or the code were it is implemented?
> 
> Thank you.
> 
> Oscar Campos.

Does this do what you'd like?

<https://pypi.python.org/pypi/txLoadBalancer/>

-glyph





From oscar.campos at member.fsf.org  Mon Feb 10 18:06:23 2014
From: oscar.campos at member.fsf.org (Oscar Campos)
Date: Tue, 11 Feb 2014 01:06:23 +0000
Subject: [Twisted-Python] Pure twisted load balancer (possible?)
In-Reply-To: <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>
References: <52F96318.2000507@member.fsf.org>
 <6CE81E55-CB8B-4707-98A4-1D46A2E36425@twistedmatrix.com>
Message-ID: <52F9778F.3040508@member.fsf.org>

On 02/10/2014 11:41 PM, Glyph wrote:
> On Feb 10, 2014, at 5:39 PM, Oscar Campos <oscar.campos at member.fsf.org> wrote:
>
>> Hi folks.
>>
>> It's possible to run several instances of the same twisted based
>> application sharing the same port and balancing the access to them? If
>> it's possible, can you give me some link to any documentation about that
>> or the code were it is implemented?
>>
>> Thank you.
>>
>> Oscar Campos.
> Does this do what you'd like?
>
> <https://pypi.python.org/pypi/txLoadBalancer/>
>
> -glyph
>
Hi glyph.

Thanks for the link, I didn't knew about this module. I was meaning more
like sharing a port between processes of the same code base and balance
the incoming connections without any other external application. Anyway
I will take a good look at this txLoadBalancer project (it seems pretty
inactive btw).

Regards.

Oscar Campos

-- 
Join the free software foundation and become free as in freedom




From tmkasun at gmail.com  Tue Feb 11 19:19:39 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Wed, 12 Feb 2014 07:49:39 +0530
Subject: [Twisted-Python]  positioning framework
Message-ID: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>

Hi,

It took long time to go through the ticket[1] and understands,
still i couldn't find any issue with it, instead its working perfectly for
me. and thanks to the twisted positioning NMEA adapter, it become easy to
me to write a adapter for the device(MVT380  device[2]) which i'm using in
my project[3].

IMHO,

1. isn't it good to use items() rather than iteritems() since python 3.x
has deprecated iteritems(),

2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of key
'K' which convert Km/h unit to meters/s because it has a FIXER
for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
(it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
indicates that speed over ground is in kilometers/hour.

other than those suggestions,its works perfectly well. i wonder why this
positioning module didn't merged with the trunk yet,and i'll be happy if i
can help to get it merged.


[1] https://twistedmatrix.com/trac/ticket/3926
[2] http://www.mvt380.com/
[3]
https://github.com/tmkasun/port/blob/kasun/server_Program/server_twisting/syscall/mvt380.py

-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140212/045af6e8/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: speed_units.patch
Type: text/x-patch
Size: 1273 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140212/045af6e8/attachment-0002.bin>

From _ at lvh.io  Wed Feb 12 01:28:05 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 12 Feb 2014 09:28:05 +0100
Subject: [Twisted-Python] positioning framework
In-Reply-To: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
References: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
Message-ID: <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>

Hi Kasun!

I'm lvh, the primary author of the ticket.

On Wed, Feb 12, 2014 at 3:19 AM, Kasun Thennakoon <tmkasun at gmail.com> wrote:

> It took long time to go through the ticket[1] and understands,
> still i couldn't find any issue with it, instead its working perfectly for
> me. and thanks to the twisted positioning NMEA adapter, it become easy to
> me to write a adapter for the device(MVT380  device[2]) which i'm using in
> my project[3].
>

Awesome! Glad to hear it's working so well for you.

 IMHO,
>
> 1. isn't it good to use items() rather than iteritems() since python 3.x
> has deprecated iteritems(),
>

There are many more Python 3 issues, I suspect. Both of those would work;
I'm personally a bigger fan of using things like six' iteritems(d); which
does d.items() on 3.x and d.iteritems() on 2.x, since you guarantee that
you have identical semantics (modulo all the fancy things you can do with
views that you can't do with iterators). I think there's a few cases where
I don't really want *all* the items (although, of course, premature
optimization is the root of all evil :)).


> 2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of key
> 'K' which convert Km/h unit to meters/s because it has a FIXER
> for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
> (it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
> indicates that speed over ground is in kilometers/hour.
>

That's there for forward compatibility as well as compatibility with really
bad GPSes that use illegal units.

The fix for that lives in:


 def _fixUnits

So it is independent from any particular unit. That just blindly indexes
into that dict; so if a GPS says something is in kph, it will convert to
m/s, even when according to the spec kph isn't a valid unit for that.

Also as you mentioned for some *other* sentences it *is* a valid unit, but
that's okay, we can just leave it there and then later add GPVTG support
and get units conversion for free!

 other than those suggestions,its works perfectly well. i wonder why this
> positioning module didn't merged with the trunk yet,and i'll be happy if i
> can help to get it merged.
>

The ticket is up for review, and has been for a long time. Since you have
apparently reviewed the ticket and used the code, would you mind giving it
a review so it can (finally!) get into Twisted itself? Review instructions
are here:

https://twistedmatrix.com/trac/wiki/ReviewProcess

Some of the review comments so far have asked for extensive changes. I am
reminded of this e-mail by Glyph:

https://twistedmatrix.com/pipermail/twisted-python/2014-January/027894.html

... which is quite long, but I think the bottom line is that you should
just trust the review process and do that :)

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140212/6bcfd208/attachment-0002.html>

From tmkasun at gmail.com  Wed Feb 12 20:06:08 2014
From: tmkasun at gmail.com (Kasun Thennakoon)
Date: Thu, 13 Feb 2014 08:36:08 +0530
Subject: [Twisted-Python] positioning framework
In-Reply-To: <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>
References: <CAP7UUePFXiXe7uL+fzLbWe+szQSLLRvF+kWcF8ZS-YmHo0hCEw@mail.gmail.com>
 <CAE_Hg6b7HJLY+KZfV-XLAdVJxekq0Q=59XH59=kpy7LE-M9zuw@mail.gmail.com>
Message-ID: <CAP7UUeNv=yUsEupuZ7RHR2Qj9NExHasS1O_aXpkowpuaczJj4w@mail.gmail.com>

Hi lvh,
Yes sure i will do some more testing with the module and do  review,  thank
you for the links

On Wed, Feb 12, 2014 at 1:58 PM, Laurens Van Houtven <_ at lvh.io> wrote:

> Hi Kasun!
>
> I'm lvh, the primary author of the ticket.
>
> On Wed, Feb 12, 2014 at 3:19 AM, Kasun Thennakoon <tmkasun at gmail.com>wrote:
>
>> It took long time to go through the ticket[1] and understands,
>> still i couldn't find any issue with it, instead its working perfectly
>> for me. and thanks to the twisted positioning NMEA adapter, it become easy
>> to me to write a adapter for the device(MVT380  device[2]) which i'm using
>> in my project[3].
>>
>
> Awesome! Glad to hear it's working so well for you.
>
>  IMHO,
>>
>> 1. isn't it good to use items() rather than iteritems() since python 3.x
>> has deprecated iteritems(),
>>
>
> There are many more Python 3 issues, I suspect. Both of those would work;
> I'm personally a bigger fan of using things like six' iteritems(d); which
> does d.items() on 3.x and d.iteritems() on 2.x, since you guarantee that
> you have identical semantics (modulo all the fancy things you can do with
> views that you can't do with iterators). I think there's a few cases where
> I don't really want *all* the items (although, of course, premature
> optimization is the root of all evil :)).
>
>
>> 2. In nmea._UNIT_CONVERTERS dictionary mapper, can't see any usage of
>> key 'K' which convert Km/h unit to meters/s because it has a FIXER
>> for speedInKnots but not for speedInKMh, i think in $GPVTG NMEA string type
>> (it is not defined in _SENTENCE_CONTENTS) string they use text 'K' to
>> indicates that speed over ground is in kilometers/hour.
>>
>
> That's there for forward compatibility as well as compatibility with
> really bad GPSes that use illegal units.
>
> The fix for that lives in:
>
>
>
>  def _fixUnits
>
> So it is independent from any particular unit. That just blindly indexes
> into that dict; so if a GPS says something is in kph, it will convert to
> m/s, even when according to the spec kph isn't a valid unit for that.
>
> Also as you mentioned for some *other* sentences it *is* a valid unit, but
> that's okay, we can just leave it there and then later add GPVTG support
> and get units conversion for free!
>
>  other than those suggestions,its works perfectly well. i wonder why this
>> positioning module didn't merged with the trunk yet,and i'll be happy if i
>> can help to get it merged.
>>
>
> The ticket is up for review, and has been for a long time. Since you have
> apparently reviewed the ticket and used the code, would you mind giving it
> a review so it can (finally!) get into Twisted itself? Review instructions
> are here:
>
> https://twistedmatrix.com/trac/wiki/ReviewProcess
>
> Some of the review comments so far have asked for extensive changes. I am
> reminded of this e-mail by Glyph:
>
> https://twistedmatrix.com/pipermail/twisted-python/2014-January/027894.html
>
> ... which is quite long, but I think the bottom line is that you should
> just trust the review process and do that :)
>
> hth
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
~ Kasun Thennakoon <http://me.knnect.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140213/721bda06/attachment-0002.html>

From sank.daniel at gmail.com  Thu Feb 13 00:17:43 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 12 Feb 2014 23:17:43 -0800
Subject: [Twisted-Python] Where are the documentation files?
Message-ID: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>

I am following the instructions on this web page

https://twistedmatrix.com/trac/wiki/ReviewingDocumentation

to prepare a submission for a documentation edit in the pb section of the
howto. However, I can't find any of the supposed xhtml files that are
supposed to comprise the documentation. For example, the web page mentions

trunk/doc/core/howto/choosing-reactor.xhtml

In my SVN checkout, that file simply does not exist. In fact there aren't
any documentation files in the SVN checkout. I would blame this on improper
SVN checkout, but here's a copy/paste of the url from whence I got the
checkout

svn://svn.twistedmatrix.com/svn/Twisted/trunk

Anyone know what's going on?

Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140212/ef441a3c/attachment-0002.html>

From adi at roiban.ro  Thu Feb 13 00:37:43 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 13 Feb 2014 09:37:43 +0200
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
Message-ID: <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>

On 13 February 2014 09:17, Daniel Sank <sank.daniel at gmail.com> wrote:

> I am following the instructions on this web page
>
> https://twistedmatrix.com/trac/wiki/ReviewingDocumentation
>
> to prepare a submission for a documentation edit in the pb section of the
> howto. However, I can't find any of the supposed xhtml files that are
> supposed to comprise the documentation. For example, the web page mentions
>
> trunk/doc/core/howto/choosing-reactor.xhtml
>
> In my SVN checkout, that file simply does not exist. In fact there aren't
> any documentation files in the SVN checkout. I would blame this on improper
> SVN checkout, but here's a copy/paste of the url from whence I got the
> checkout
>
> svn://svn.twistedmatrix.com/svn/Twisted/trunk
>
> Anyone know what's going on?
>
>
Hi,

There is a process of migrating the documentation to Sphinx. Look in the
new /docs/ folder.
https://github.com/twisted/twisted/tree/trunk/docs

Good luck
Adi


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140213/34857428/attachment-0002.html>

From sank.daniel at gmail.com  Thu Feb 13 00:40:00 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Wed, 12 Feb 2014 23:40:00 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
Message-ID: <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>

> There is a process of migrating the documentation to Sphinx.
> Look in the new /docs/ folder.
https://github.com/twisted/twisted/tree/trunk/docs

So all of the information on the website regarding how to contribute to
documentation is now obsolete and incorrect?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140212/38514e49/attachment-0002.html>

From adi at roiban.ro  Thu Feb 13 00:56:27 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 13 Feb 2014 09:56:27 +0200
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
Message-ID: <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>

On 13 February 2014 09:40, Daniel Sank <sank.daniel at gmail.com> wrote:

> > There is a process of migrating the documentation to Sphinx.
> > Look in the new /docs/ folder.
> https://github.com/twisted/twisted/tree/trunk/docs
>
> So all of the information on the website regarding how to contribute to
> documentation is now obsolete and incorrect?
>

For now. Feel free to report errors and suggest new text for the site.

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140213/d81dd5fb/attachment-0002.html>

From sank.daniel at gmail.com  Thu Feb 13 01:53:15 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Thu, 13 Feb 2014 00:53:15 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
Message-ID: <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>

> For now. Feel free to report errors and suggest new text for the site.

Right. What is the appropriate channel to report errors with the website?
Also, do you have any idea when the new documentation system will up and
ready for contributions?

Thanks,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140213/b891eb56/attachment-0002.html>

From orestis at orestis.gr  Fri Feb 14 05:21:59 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Fri, 14 Feb 2014 14:21:59 +0200
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
Message-ID: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>

Hello,

I just filed https://twistedmatrix.com/trac/ticket/6972

The issue I'm facing is a deadlocked Python on OS X when a lot of 
processes are spawned. In the repro script we do this very aggressively 
to trigger the deadlock quickly, but the actual program that does this 
"ticks" every minute.

There is a possibility that this is either a Python bug or an OS X issue 
as the same program used to run fine in 10.5 and after some upgrades to 
10.7 this issue appeared. We worked around it by using 2.6 but now we 
need 2.7.

I know this is going to be difficult for people to reproduce, so I 
wonder if someone can help me investigate the issue further. I found 
this https://dev.launchpad.net/Debugging/GDB but it doesn't work - I 
believe, without being able to confirm, that the issue is that GDB can't 
really work with clang-built executables? Or perhaps I don't have the 
debugging symbols.

Any help would be greatly appreciated.

Orestis



From _ at lvh.io  Sat Feb 15 02:45:24 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Sat, 15 Feb 2014 10:45:24 +0100
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
Message-ID: <CAE_Hg6ZZD_r5e4=E6NcX5959z96S8pa1-7Fzvc3J-=R2N4Eabg@mail.gmail.com>

Hi Orestis,


Since creating processes involves syscalls, I would expect the tool of
choice to debug this on OS X to be dtruss.

I wish I could help on this endeavor but right now I'm focusing on fighting
e-mail. (Brace yourself. PyCon is coming.)


hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140215/b4c0b389/attachment-0002.html>

From itamar at itamarst.org  Sat Feb 15 07:38:53 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 15 Feb 2014 09:38:53 -0500
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
Message-ID: <52FF7BFD.9030907@itamarst.org>

On 02/14/2014 07:21 AM, Orestis Markou wrote:
> Hello,
>
> I just filed https://twistedmatrix.com/trac/ticket/6972
>
> The issue I'm facing is a deadlocked Python on OS X when a lot of 
> processes are spawned. In the repro script we do this very 
> aggressively to trigger the deadlock quickly, but the actual program 
> that does this "ticks" every minute.
>
> There is a possibility that this is either a Python bug or an OS X 
> issue as the same program used to run fine in 10.5 and after some 
> upgrades to 10.7 this issue appeared. We worked around it by using 2.6 
> but now we need 2.7.
>
> I know this is going to be difficult for people to reproduce, so I 
> wonder if someone can help me investigate the issue further. I found 
> this https://dev.launchpad.net/Debugging/GDB but it doesn't work - I 
> believe, without being able to confirm, that the issue is that GDB 
> can't really work with clang-built executables? Or perhaps I don't 
> have the debugging symbols.

When debugging Python deadlocks in general:

1. Try https://pypi.python.org/pypi/faulthandler/ - send appropriate 
signal when process deadlocks.

2. If that doesn't work, I have had good luck debugging at least one 
Python mystery freeze with GDB. In particular because it has built-in 
Python support (sometimes), you to actually get a Python traceback. This 
assumes access to debugging symbols, though. lldb may have similar 
functionality, maybe Googling can help with that and finding debug symbols.


In this particular case, the traceback plus some googling 
(http://bugs.python.org/issue11768 is what I found, presumably a 
different bug though) suggests the bug may be something like signal 
handler not being re-entrant for some reason and you're getting SIGCHLD 
just in the C code handling SIGCHLD. Try disabling SIGCHLD and just 
calling "twisted.internet.process.reapAllProcesses()" a few times a 
second and see if that's a good workaround - if so, add a note to the 
bug. If that is the case you may be able to reproduce the bug by setting 
a SIGCHLD handler and then sending SIGCHLD to the process a lot, no 
Twisted involved.



From glyph at twistedmatrix.com  Sat Feb 15 12:58:34 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 15 Feb 2014 11:58:34 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <52FF7BFD.9030907@itamarst.org>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
Message-ID: <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>


On Feb 15, 2014, at 6:38 AM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> In this particular case, the traceback plus some googling (http://bugs.python.org/issue11768 is what I found, presumably a different bug though) suggests the bug may be something like signal handler not being re-entrant for some reason and you're getting SIGCHLD just in the C code handling SIGCHLD. Try disabling SIGCHLD and just calling "twisted.internet.process.reapAllProcesses()" a few times a second and see if that's a good workaround - if so, add a note to the bug. If that is the case you may be able to reproduce the bug by setting a SIGCHLD handler and then sending SIGCHLD to the process a lot, no Twisted involved.

This was also my reading of the stack trace.  Thanks for finding the reference in the Python bug tracker.

The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.  So how would the signal handler be re-entrant?  Perhaps 'pmset' runs a subprocess of its own so that the parent process receives two SIGCHLDs?

It looks like this fix might have been included in 2.7.6, since it was fixed on the 2.7 branch.  Has it been?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140215/75f8466b/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140215/75f8466b/attachment-0002.bin>

From exarkun at twistedmatrix.com  Sat Feb 15 18:32:30 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 16 Feb 2014 01:32:30 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
Message-ID: <20140216013230.6595.2131273578.divmod.xquotient.49@top>

On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>
>The one thing that confused me was that the sample program appeared to 
>be running the program only once a second, and waiting for it to 
>complete before running it again.

I think it's more like 81 processes once a second and *not* waiting for 
them to complete before starting over.  Notice the lack of yields in key 
places.  I suspect inlineCallbacks has gradually eaten out the part of 
your brain that recognizes that keyword. ;)

Jean-Paul



From trac at twistedmatrix.com  Sun Feb 16 00:05:16 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 Feb 2014 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1392534316.64.7779663278067366999@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140216/1f3ba633/attachment-0002.html>

From Axel.Rau at chaos1.de  Mon Feb 17 15:48:22 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Mon, 17 Feb 2014 23:48:22 +0100
Subject: [Twisted-Python] serializing inline callbacks
Message-ID: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>

I have a web application, which runs several subprocesses to build a page.
This runs pretty well with subprocess.check_output(…).
To improve concurrency with other web sessions, I’m converting this to
ireactorprocess.spawnProcess with inline callbacks:
—-
class SubprocessProtocol(ProcessProtocol):
    outBuffer = ""
    errBuffer = ""

    def connectionMade(self):
        self.d = Deferred()

    def outReceived(self, data):
        self.outBuffer += data

    def errReceived(self, data):
        self.errBuffer += data

    def processEnded(self, reason):
        if reason.check(ProcessDone):
            self.d.callback(self.outBuffer)
        else:
            self.d.errback(reason)

def subprocess(args, ireactorprocess=None):
    """
    :type args: list of str
    :type ireactorprocess: :class: twisted.internet.interfaces.IReactorProcess
    :rtype: Deferred
    """
    deblog('Running ' + str(args))
    if ireactorprocess is None:
        from twisted.internet import reactor
        ireactorprocess = reactor

    pprotocol = SubprocessProtocol()
    ireactorprocess.spawnProcess(pprotocol, args[0], args)
    return protocoled
—-
I have chained up the calls to subprocess with the expectation, that they will
be called sequentially one after the previous has been finished:
—-
    def render_GET(self, request):
        ...
        self.A()
        return NOT_DONE_YET
        
    @inlineCallbacks
    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.B()
    
    @inlineCallbacks
    def B(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.C()

    def C(self):
        ...
        x = self.D(...)
        y = self.D(...)
        z = self.D(...)
        ...
        self.E()

    @inlineCallbacks
    def D(self):
        ...
        tmp = yield subprocess(args)
        ...
        returnValue(tmp)

    
    @inlineCallbacks
    def E(self):
        ...
        tmp = yield subprocess(args)
        ...
        request.write(...)
        request.finished
—-
In C, the three calls to self.D run in parallel.
How can I serialize this?


Thanks, Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From dustin at v.igoro.us  Mon Feb 17 15:58:14 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Mon, 17 Feb 2014 17:58:14 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
Message-ID: <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>

Async programming aside, this mode of chaining multiple methods
doesn't sit well with me:

def A()
  # .. do stuff
  B()

def B()
  # .. do stuff
  C()

I think it'd be more idiomatic to have a controlling method that
indicates the chaning:

def do_stuffs():
  A()
  B()
  C()
  D()
  D()
  D()

Now, translating that to async programming with inline callbacks is easy:

@defer.inlineCallbacks
def do_stuffs()
  yield A()
  yield B()
  yield C()
  yield D()
  yield D()
  yield D()

Dustin



From Axel.Rau at chaos1.de  Tue Feb 18 08:11:06 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 16:11:06 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
Message-ID: <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>


Am 17.02.2014 um 23:58 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> Async programming aside, this mode of chaining multiple methods
> doesn't sit well with me:
> 
> def A()
>  # .. do stuff
>  B()
> 
> def B()
>  # .. do stuff
>  C()
> 
> I think it'd be more idiomatic to have a controlling method that
> indicates the chaning:
> 
> def do_stuffs():
>  A()
>  B()
>  C()
>  D()
>  D()
>  D()
> 
> Now, translating that to async programming with inline callbacks is easy:
> 
> @defer.inlineCallbacks
> def do_stuffs()
>  yield A()
>  yield B()
>  yield C()
>  yield D()
>  yield D()
>  yield D()
> 
> Dustin

Thanks, but the calls in C depend on the data (program branches).
There are 8 different call parameter sets dependent on contexts.

Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From dustin at v.igoro.us  Tue Feb 18 08:21:49 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 10:21:49 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
Message-ID: <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>

On Tue, Feb 18, 2014 at 10:11 AM, Axel Rau <Axel.Rau at chaos1.de> wrote:
> Thanks, but the calls in C depend on the data (program branches).
> There are 8 different call parameter sets dependent on contexts.

I still believe that making those dependencies visible is a good idea.

At any rate, in your original code:

    def C(self):
        ...
        x = self.D(...)
        y = self.D(...)
        z = self.D(...)
        ...
        self.E()

D is returning a Deferred, but you're not doing anything with it.  In
fact, all of A..E are returning Deferreds and you're ignoring them.
In an inlineCallbacks-decorated method, you need to yield every
Deferred you receive.

That's why you're seeing D execute in parallel.  You're also seeing A
return before B is complete, and so on.

Dustin



From _ at lvh.io  Tue Feb 18 08:26:30 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Tue, 18 Feb 2014 16:26:30 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
Message-ID: <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>

On Tue, Feb 18, 2014 at 4:21 PM, Dustin J. Mitchell <dustin at v.igoro.us>wrote:

> D is returning a Deferred, but you're not doing anything with it.  In
> fact, all of A..E are returning Deferreds and you're ignoring them.
> In an inlineCallbacks-decorated method, you need to yield every
> Deferred you receive.
>

I realize you know this, but just to be clear  for Axel: you only need to
yield deferreds you want to wait on. It's perfectly possible that you don't
yield a deferred but your code is still correct. E.g. let's say that you
want to wait on three ops but you do want them to execute in parallel, then

d1 = f()
d2 = g()
d3 = h()
yield gatherResults(d1, d2, d3)

is totally a thing :-)

yield in @inlineCallbacks just means "pause execution and resume when this
deferred fires".

hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140218/e1b4132b/attachment-0002.html>

From dustin at v.igoro.us  Tue Feb 18 08:34:18 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 10:34:18 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
Message-ID: <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>

True, I only mean that

    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        self.B()

leaves the deferred from B totally unhandled, which is nearly always a
bad thing.

Dustin



From Axel.Rau at Chaos1.DE  Tue Feb 18 09:40:53 2014
From: Axel.Rau at Chaos1.DE (Axel Rau)
Date: Tue, 18 Feb 2014 17:40:53 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
Message-ID: <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>


Am 18.02.2014 um 16:34 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> True, I only mean that
> 
>    def A(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        self.B()
> 
> leaves the deferred from B totally unhandled, which is nearly always a
> bad thing.
Is this true, if I have a yield in B like in my case:
—-
@inlineCallbacks
   def B(self):
       ...
       tmp = yield subprocess(args)
       ...
       self.C()
—-
? I thought the yield is handling the deferred.

Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From dustin at v.igoro.us  Tue Feb 18 09:45:42 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 11:45:42 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
Message-ID: <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>

That handles the Deferred from subprocess(args), but it doesn't handle
the Deferred from self.C()

On Tue, Feb 18, 2014 at 11:40 AM, Axel Rau <Axel.Rau at chaos1.de> wrote:
>
> Am 18.02.2014 um 16:34 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:
>
>> True, I only mean that
>>
>>    def A(self):
>>        ...
>>        tmp = yield subprocess(args)
>>        ...
>>        self.B()
>>
>> leaves the deferred from B totally unhandled, which is nearly always a
>> bad thing.
> Is this true, if I have a yield in B like in my case:
> —-
> @inlineCallbacks
>    def B(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        self.C()
> —-
> ? I thought the yield is handling the deferred.
>
> Axel
> ---
> PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From Axel.Rau at chaos1.de  Tue Feb 18 11:05:32 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 19:05:32 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
Message-ID: <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>


Am 18.02.2014 um 17:45 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> That handles the Deferred from subprocess(args), but it doesn't handle
> the Deferred from self.C()
And that calls three times self.D, which has a yield.
What is wrong with my reasoning?
Something prevents the inline callback in self.D to wait until the
subprocess has terminated. Control returns to self.C again calls self.D
with different arguments.

Still clueless:
Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From glyph at twistedmatrix.com  Tue Feb 18 11:53:58 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 10:53:58 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140216013230.6595.2131273578.divmod.xquotient.49@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
Message-ID: <D01D3B72-8544-4B25-979B-2198A255113C@twistedmatrix.com>


On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:

> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>> 
>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
> 
> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)

Well, I was skimming, and I saw the 'yield's in the things that *were* decorated with @inlineCallbacks; in this case it was the "plain" code that tricked me :-).

-g

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140218/cfce427e/attachment-0002.bin>

From dustin at v.igoro.us  Tue Feb 18 12:03:27 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 14:03:27 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
Message-ID: <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>

I'm suggesting that there are lots more problems with your code than
the one you have identified.  Any method which is decorated with
@defer.inlineCallbacks will return a Deferred, and you need to handle
every Deferred somehow.  Generally (although not always, as lvh has
said) you do that by yielding it.

Your code should be

----
    def render_GET(self, request):
        ...
        d = self.A()
        d.addErrback(request.processingFailed)
        return NOT_DONE_YET

    @inlineCallbacks
    def A(self):
        ...
        tmp = yield subprocess(args)
        ...
        yield self.B()

    @inlineCallbacks
    def B(self):
        ...
        tmp = yield subprocess(args)
        ...
        yield self.C()

    def C(self):
        ...
        x = yield self.D(...)
        y = yield self.D(...)
        z = yield self.D(...)
        ...
        yield self.E()

    @inlineCallbacks
    def D(self):
        ...
        tmp = yield subprocess(args)
        ...
        returnValue(tmp)


    @inlineCallbacks
    def E(self):
        ...
        tmp = yield subprocess(args)
        ...
        request.write(...)
        request.finished()

----

Here you see that all of the Deferreds are handled, either by yielding
them or, in the case of the Deferred from A, by adding an errback that
will conveniently format an HTML error response.

Dustin



From glyph at twistedmatrix.com  Tue Feb 18 12:29:06 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 11:29:06 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140216013230.6595.2131273578.divmod.xquotient.49@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
Message-ID: <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>


On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:

> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>> 
>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
> 
> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)

I sort of noted this on the ticket, but I think the idea of using KQueue to address this would be great.  Is there a similar thing we might be able to do on Linux to get rid of the dependence on a SIGCHLD handler?

-g
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140218/b5f2c157/attachment-0002.bin>

From Axel.Rau at chaos1.de  Tue Feb 18 14:58:18 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Tue, 18 Feb 2014 22:58:18 +0100
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
Message-ID: <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>


Am 18.02.2014 um 20:03 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> I'm suggesting that there are lots more problems with your code than
> the one you have identified.  Any method which is decorated with
Sure. This is my 1st project with twisted. (-;

> @defer.inlineCallbacks will return a Deferred,
This is the missing clue.

>  and you need to handle
> every Deferred somehow.  Generally (although not always, as lvh has
> said) you do that by yielding it.
> 
> Your code should be
I have that implemented, but B does not call C:
> 
> ----
>    def render_GET(self, request):
>        ...
>        d = self.A()
>        d.addErrback(request.processingFailed)
>        return NOT_DONE_YET
> 
>    @inlineCallbacks
>    def A(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        yield self.B()
> 
>    @inlineCallbacks
>    def B(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        yield self.C()
> =====================================> stops here
>    def C(self):
>        ...
>        x = yield self.D(...)
>        y = yield self.D(...)
>        z = yield self.D(...)
>        ...
>        yield self.E()
> 
>    @inlineCallbacks
>    def D(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        returnValue(tmp)
> 
> 
>    @inlineCallbacks
>    def E(self):
>        ...
>        tmp = yield subprocess(args)
>        ...
>        request.write(...)
>        request.finished()
> 
> ----
> 
> Here you see that all of the Deferreds are handled, either by yielding
> them or, in the case of the Deferred from A, by adding an errback that
> will conveniently format an HTML error response.

This is B:
- - - -
    @inlineCallbacks
    def imageMap(self):
        """
        return client side image maps
        """
        args = list(self.basecmd)
        args.extend((
            '-g', conf.graphlist[self.station][0], '-I', '-m', '-d', '-d', '-d', '-d'))
        map = yield util.subprocess(args)
        self.request.write(bytes(map))
        yield self.navigation()
        if debug: log.msg('imageMap ended')
- - - -
and begin of C:
- - - -
    def navigation(self):
        """
        Compute links for navigation (up, left, right arrows or)
        week, month, year) and place them on the page.
        """
        if debug: log.msg('In navigation.'). . .
- - - -
I see log message ‚imageMap ended‘ , but not 'In navigation.'
Any further advice?

Thanks for your patience,
Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From dustin at v.igoro.us  Tue Feb 18 16:10:59 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 18 Feb 2014 18:10:59 -0500
Subject: [Twisted-Python] serializing inline callbacks
In-Reply-To: <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
 <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
Message-ID: <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>

On Tue, Feb 18, 2014 at 4:58 PM, Axel Rau <Axel.Rau at chaos1.de> wrote:
> I see log message ‚imageMap ended‘ , but not 'In navigation.'
> Any further advice?


I'm guessing that you omitted @inlineCallbacks for navigation, but
that it contains a yield.  In Python, that makes it a plain old
generator expression, which just returns a generator object when you
call it.  It's a common pitfall when using inlineCallbacks.

Honestly, this would be easier to discuss if you'd included a
http://sscce.org/ at the beginning.

Dustin



From exarkun at twistedmatrix.com  Tue Feb 18 19:07:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Feb 2014 02:07:16 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
Message-ID: <20140219020716.6511.1292355411.divmod.xquotient.1@top>

On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>
>On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>
>>>The one thing that confused me was that the sample program appeared 
>>>to be running the program only once a second, and waiting for it to 
>>>complete before running it again.
>>
>>I think it's more like 81 processes once a second and *not* waiting 
>>for them to complete before starting over.  Notice the lack of yields 
>>in key places.  I suspect inlineCallbacks has gradually eaten out the 
>>part of your brain that recognizes that keyword. ;)
>
>I sort of noted this on the ticket, but I think the idea of using 
>KQueue to address this would be great.  Is there a similar thing we 
>might be able to do on Linux to get rid of the dependence on a SIGCHLD 
>handler?

Not that I know of.  As far as I know Linux is missing good child 
process event notification support.

Jean-Paul



From glyph at twistedmatrix.com  Tue Feb 18 19:50:49 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 18 Feb 2014 18:50:49 -0800
Subject: [Twisted-Python] Deadlocks when launching processes - how to
	investigate?
In-Reply-To: <20140219020716.6511.1292355411.divmod.xquotient.1@top>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
 <20140219020716.6511.1292355411.divmod.xquotient.1@top>
Message-ID: <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>


On Feb 18, 2014, at 6:07 PM, exarkun at twistedmatrix.com wrote:

> On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>> 
>> On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>> On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>> 
>>>> The one thing that confused me was that the sample program appeared to be running the program only once a second, and waiting for it to complete before running it again.
>>> 
>>> I think it's more like 81 processes once a second and *not* waiting for them to complete before starting over.  Notice the lack of yields in key places.  I suspect inlineCallbacks has gradually eaten out the part of your brain that recognizes that keyword. ;)
>> 
>> I sort of noted this on the ticket, but I think the idea of using KQueue to address this would be great.  Is there a similar thing we might be able to do on Linux to get rid of the dependence on a SIGCHLD handler?
> 
> Not that I know of.  As far as I know Linux is missing good child process event notification support.

Wait... what about... signalfd?!

Lots of mentions of SIGCHLD here:

<http://linux.die.net/man/2/signalfd>

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140218/637a6092/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140218/637a6092/attachment-0002.bin>

From exarkun at twistedmatrix.com  Tue Feb 18 20:26:04 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 19 Feb 2014 03:26:04 -0000
Subject: [Twisted-Python] Deadlocks when launching processes - how to
 investigate?
In-Reply-To: <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>
References: <2926D8FD-AF09-4A5D-A4DF-CB8B416E8945@orestis.gr>
 <52FF7BFD.9030907@itamarst.org>
 <85ED231F-BBCD-49B8-AB15-8A63AF14A0B9@twistedmatrix.com>
 <20140216013230.6595.2131273578.divmod.xquotient.49@top>
 <B7D07071-7289-486F-BB93-A57F9FE58FF4@twistedmatrix.com>
 <20140219020716.6511.1292355411.divmod.xquotient.1@top>
 <519CF351-09CC-4A69-9ED9-B5E71EB8757D@twistedmatrix.com>
Message-ID: <20140219032604.6511.971289997.divmod.xquotient.6@top>

On 02:50 am, glyph at twistedmatrix.com wrote:
>
>On Feb 18, 2014, at 6:07 PM, exarkun at twistedmatrix.com wrote:
>>On 18 Feb, 07:29 pm, glyph at twistedmatrix.com wrote:
>>>
>>>On Feb 15, 2014, at 5:32 PM, exarkun at twistedmatrix.com wrote:
>>>>On 15 Feb, 07:58 pm, glyph at twistedmatrix.com wrote:
>>>>>
>>>>>The one thing that confused me was that the sample program appeared 
>>>>>to be running the program only once a second, and waiting for it to 
>>>>>complete before running it again.
>>>>
>>>>I think it's more like 81 processes once a second and *not* waiting 
>>>>for them to complete before starting over.  Notice the lack of 
>>>>yields in key places.  I suspect inlineCallbacks has gradually eaten 
>>>>out the part of your brain that recognizes that keyword. ;)
>>>
>>>I sort of noted this on the ticket, but I think the idea of using 
>>>KQueue to address this would be great.  Is there a similar thing we 
>>>might be able to do on Linux to get rid of the dependence on a 
>>>SIGCHLD handler?
>>
>>Not that I know of.  As far as I know Linux is missing good child 
>>process event notification support.
>
>Wait... what about... signalfd?!
>
>Lots of mentions of SIGCHLD here:
>
><http://linux.die.net/man/2/signalfd>

It's sort of problematic for a library.  You have to block the signal 
for signalfd to work reliably.  Now no other code that depends on 
SIGCHLD can run properly in that process.

We could simply declare that to be the case and go ahead... But based on 
past experience I'm sure some people would be unhappy with that.

Perhaps it could be an option only turned on by applications that know 
it's okay for them and that want to avoid the mess of signals?

On the other hand we seem to be dealing with the mess of signals on 
Linux pretty okay at the moment.  Who would opt in to this and why?

Jean-Paul



From Axel.Rau at chaos1.de  Wed Feb 19 05:15:19 2014
From: Axel.Rau at chaos1.de (Axel Rau)
Date: Wed, 19 Feb 2014 13:15:19 +0100
Subject: [Twisted-Python] [RESOLVED] Re:  serializing inline callbacks
In-Reply-To: <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>
References: <A7D740DD-E8BC-4665-8CAC-1E282A9E4BD2@Chaos1.DE>
 <CAJtE5vRHw2XsRj=j=8B0fWARCGUo8ibSChzepqX9O59LEuc_Cw@mail.gmail.com>
 <85D014A1-9D38-451D-A943-42E723E7DAD4@Chaos1.DE>
 <CAJtE5vSHwBVqYamnvt+2+YgDAKs3vF_QHFKBK-ovb8WR=RuQ6Q@mail.gmail.com>
 <CAE_Hg6Z4HdC2mHFPP=SF-khmwXdzLmXm3M2vDU9pV-EHikHK4A@mail.gmail.com>
 <CAJtE5vS2=SNwe=-9UHs93=BKrisgV66twg=vDhuYN1bdbg9Wiw@mail.gmail.com>
 <CF2A2C56-6388-49D8-A4CA-96C076504E45@Chaos1.DE>
 <CAJtE5vR2aT3DGb5Qq2Mnshj8krr=QoSO-HgvpndJRKDOJJjBtA@mail.gmail.com>
 <5F6F0345-C7EA-4A1E-9427-8A17EA7A603B@Chaos1.DE>
 <CAJtE5vQNBnouYZ=K2LU2nkGOvCFRE+T0dvZqcuH10oehd_tbqg@mail.gmail.com>
 <AB90B26D-5A5A-4DA5-AD4E-F675F54AE509@Chaos1.DE>
 <CAJtE5vQdbGfA2gf6V2FsmzrKU9G8E98nbW3LgdK4bJNe6+QYDw@mail.gmail.com>
Message-ID: <BAACAD91-F8A7-4A46-A465-2F586ABDABB0@Chaos1.DE>


Am 19.02.2014 um 00:10 schrieb Dustin J. Mitchell <dustin at v.igoro.us>:

> On Tue, Feb 18, 2014 at 4:58 PM, Axel Rau <Axel.Rau at chaos1.de> wrote:
>> I see log message ‚imageMap ended‘ , but not 'In navigation.'
>> Any further advice?
> 
> 
> I’m guessing that you omitted @inlineCallbacks for navigation,
navigation corresponds to C.
I added @inlineCallbacks and it works.
> 
> but
> that it contains a yield.  In Python, that makes it a plain old
> generator expression, which just returns a generator object when you
> call it.  It's a common pitfall when using inlineCallbacks.
> 
> Honestly, this would be easier to discuss if you'd included a
> http://sscce.org/ at the beginning.
> 
Thanks a lot,
Axel
---
PGP-Key:29E99DD6  ☀ +49 151 2300 9283  ☀ computing @ chaos claudius




From adi at roiban.ro  Thu Feb 20 07:00:53 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 20 Feb 2014 16:00:53 +0200
Subject: [Twisted-Python] Status of twistedchecker
Message-ID: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>

Hi,

While submitting a patch on Twisted I got a review response that my code is
not complaint with `twistedchecker`.

My first reaction was: Holy code, what is twistedchecker!

Searching the source code for `twistedchecker` gave no results and on the
website there were only 2 wiki pages... none talking about how to use
twistedcheck as a Twisted developer.

Hitting the #twisted-dev channel I found out about twistedchecker and
install version 0.2.0

Now that I got some info about twistedchecker  and wiki write access I
would like to update the
https://twistedmatrix.com/trac/wiki/TwistedDevelopment wiki page with
information about how a Twisted developer is expected to use twistedchecker.

I run twistedcheck on trunk and got a lot of errors.

Am I suppose to look through all those error and filter the ones generated
by my changes?

Since twistedchecker is only about twisted, shouldn't it be included as a
dependency to twisted-dev-tools so that as I developer I would only need to
install one extra package and it will pull all development/testing
depenencies?

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140220/9daa86a2/attachment-0002.html>

From adi at roiban.ro  Thu Feb 20 07:55:58 2014
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 20 Feb 2014 16:55:58 +0200
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
	repo file
Message-ID: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>

Hi.

Right now CONTRIBUTING file from twisted repo sends developers to:
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

What do you think about having basic contributing documentation inside the
repo?
I am talking about these 2 pages:

https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
https://twistedmatrix.com/trac/wiki/TwistedDevelopment

Commiters Check list can be left on the wiki page:
https://twistedmatrix.com/trac/wiki/CommitterCheckList

--------

I think that those pages are very important to assist new developers in
creating a successful patch (ie one that is merged without to much
ping-pong)

Even if I now have wiki edit page, I don't have the courage to change the
wiki page (for example to add information about twistedchecker or how to
build the new docs).

Changing a file and submitting for review feels more comfortable.

Also, developers could always refer to that file from inside their
preferred text editor.

---------

Is there someone review-ul changes on the wiki pages?

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140220/1b528df8/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Feb 20 08:13:22 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 20 Feb 2014 15:13:22 -0000
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
Message-ID: <20140220151322.6511.612960390.divmod.xquotient.11@top>

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the
>repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the
>wiki page (for example to add information about twistedchecker or how 
>to
>build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their
>preferred text editor.

There is currently an effort to re-organize the contributor 
documentation underway.  Given its fragile state, I wouldn't want to 
disturb it sending work off in a different direction.  On the other 
hand, if you'd like to take over and complete it, feel free to take 
whatever direction you like. :)  Either way I suggest you try to 
coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul



From dhudson at redcom.com  Thu Feb 20 08:17:36 2014
From: dhudson at redcom.com (Hudson, Derrick)
Date: Thu, 20 Feb 2014 10:17:36 -0500
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <20140220151322.6511.612960390.divmod.xquotient.11@top>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
Message-ID: <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>

Sorry, my mistake.  PostgreSQL doesn't use upstart.

$ sudo /etc/init.d/postgresql restart

-Derrick


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Thursday, February 20, 2014 10:13 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in 
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the wiki page (for example to add information about twistedchecker or 
>how to build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their 
>preferred text editor.

There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From dhudson at redcom.com  Thu Feb 20 08:20:09 2014
From: dhudson at redcom.com (Hudson, Derrick)
Date: Thu, 20 Feb 2014 10:20:09 -0500
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <401084E5E73F4241A44F3C9E6FD794280108A56042@exch-01>
Message-ID: <401084E5E73F4241A44F3C9E6FD794280108A56044@exch-01>

Disregard this message.  I hit reply to the wrong message in my inbox.



-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Hudson, Derrick
Sent: Thursday, February 20, 2014 10:18 AM
To: 'Twisted general discussion'
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

Sorry, my mistake.  PostgreSQL doesn't use upstart.

$ sudo /etc/init.d/postgresql restart

-Derrick


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of exarkun at twistedmatrix.com
Sent: Thursday, February 20, 2014 10:13 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Contributing documentation inside CONTRIBUTING repo file

On 02:55 pm, adi at roiban.ro wrote:
>Hi.
>
>Right now CONTRIBUTING file from twisted repo sends developers to:
>https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>
>What do you think about having basic contributing documentation inside 
>the repo?
>I am talking about these 2 pages:
>
>https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>
>Commiters Check list can be left on the wiki page:
>https://twistedmatrix.com/trac/wiki/CommitterCheckList
>
>--------
>
>I think that those pages are very important to assist new developers in 
>creating a successful patch (ie one that is merged without to much
>ping-pong)
>
>Even if I now have wiki edit page, I don't have the courage to change 
>the wiki page (for example to add information about twistedchecker or 
>how to build the new docs).
>
>Changing a file and submitting for review feels more comfortable.
>
>Also, developers could always refer to that file from inside their 
>preferred text editor.

There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.

Jean-Paul
>
>Is there someone review-ul changes on the wiki pages?

I hope people read changes made to the wiki.  I usually do.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From adi at roiban.ro  Thu Feb 20 16:33:44 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 01:33:44 +0200
Subject: [Twisted-Python] Distributing apilinks.py
Message-ID: <CAFycZ9emvGU+E9dt6ZHv=gvCW29fstPvH5m_85qDt_EbPObDBg@mail.gmail.com>

Hi,

Right now apilinks.py is located in Twisted
at docs/_extensions/apilinks.py, but a copy  can also be found in pydoctor
project.

While reporting a bug for apilinks.py in Twisted I was ask to send the
patch upstream in pydoctor [1]

During the review of the patch in pydoctor, pydoctor's maintainer agreed
that there should be a single copy of this file but don't know what's
involved in achieving that. [2]

Can someone involved in using apilinks.py in Twisted provide some feedback
regarding distribution of apilinks.py file?

Many thanks!

[1] https://twistedmatrix.com/trac/ticket/6954
[2]
https://code.launchpad.net/~adiroiban/pydoctor/1282458-apilinks-anchor/+merge/207392


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140221/fbfa85fe/attachment-0002.html>

From adi at roiban.ro  Fri Feb 21 08:59:19 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 17:59:19 +0200
Subject: [Twisted-Python] Implement HTTP request acception / rejection as
	defined in RFC 2616 - 8.2.3
Message-ID: <CAFycZ9cHYv9xZAdPjSCYhwudQaLMrrV5CzBn_2SzZ8EXxLqH4g@mail.gmail.com>

Hi,

As requested during review I am moving this to mailing list for discussions.

The initial ticket is here : https://twistedmatrix.com/trac/ticket/6928

-------

The current Twisted implementation of RFC 2616 - 8.2.3 is very simple and
Twisted will always reply with continue to Accept: 100-continue requests.

I am working at web application based on Twisted web so I did a quick
security check for current twisted web code.

The major problem is that when reading POST data, requests under 1M are
kept in memory, the other being stored in temporary file... but for
form-mulipart request the whole data is loaded again in memory for parsing.
Now, if the client initially reports that content is less than 1M, but then
continue to send more than 1M, twisted.web will continue to keep all data
in memory.

To address the problem of unwanted big post requests I first start with
implementing support for well behaved HTTP/1.1 clients.

In current code, Resource objects are called only after whole request data
was received and processed so a resource can not decide whether or not it
accepts the request, just by looking at headers.

Also the Request object is called after headers are received but with calls
like parseCookie or gotLength. So there is no API for Request to accept or
reject a request based on headers.

--------

To solve this problem, I add a new `headersReceived` API call on Request
and Resource so that Requests and Resources can decided if they want to
accept the request.

The biggest change required to implement this API is that URL traversal can
now begin before a resource has received all its content.
If a resource needs full request content before making a traversal
decistion, then this API does not work.

This is why this is an optional API not enforced on all resources.

For now the ticket only has demo code as I wanted to highlight the API
changes.

I have already implemented this code in my project and wrote full test for
these changes.

If this kind of API is accepted in Twisted I can port the code and tests,
otherwise I can try to work on a different implementation.

Thanks!

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140221/99fc1b81/attachment-0002.html>

From adi at roiban.ro  Fri Feb 21 09:03:54 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 21 Feb 2014 18:03:54 +0200
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <20140220151322.6511.612960390.divmod.xquotient.11@top>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
Message-ID: <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>

On 20 February 2014 17:13, <exarkun at twistedmatrix.com> wrote:

> On 02:55 pm, adi at roiban.ro wrote:
>
>> Hi.
>>
>> Right now CONTRIBUTING file from twisted repo sends developers to:
>> https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
>>
>> What do you think about having basic contributing documentation inside the
>> repo?
>> I am talking about these 2 pages:
>>
>> https://twistedmatrix.com/trac/wiki/BasicGuideToContributingCode
>> https://twistedmatrix.com/trac/wiki/TwistedDevelopment
>>
>> Commiters Check list can be left on the wiki page:
>> https://twistedmatrix.com/trac/wiki/CommitterCheckList
>>
>> --------
>>
>> I think that those pages are very important to assist new developers in
>> creating a successful patch (ie one that is merged without to much
>> ping-pong)
>>
>> Even if I now have wiki edit page, I don't have the courage to change the
>> wiki page (for example to add information about twistedchecker or how to
>> build the new docs).
>>
>> Changing a file and submitting for review feels more comfortable.
>>
>> Also, developers could always refer to that file from inside their
>> preferred text editor.
>>
>
> There is currently an effort to re-organize the contributor documentation
> underway.  Given its fragile state, I wouldn't want to disturb it sending
> work off in a different direction.  On the other hand, if you'd like to
> take over and complete it, feel free to take whatever direction you like.
> :)  Either way I suggest you try to coordinate with the folks working on
> that.
>

Thanks for the reply. I am happy to coordinate with folks working on
contributor documentation re-organization, but I have idea how exactly I am
supposed to do that and who is working on this task.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140221/9c1c26c1/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Feb 21 19:37:25 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Feb 2014 18:37:25 -0800
Subject: [Twisted-Python] Status of twistedchecker
In-Reply-To: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>
References: <CAFycZ9d+o3S4xiD3eaM=YTozcYKjoSMHy04cvJGGHmd=PyyXqg@mail.gmail.com>
Message-ID: <0CA35999-F160-402E-87E1-865B8793D470@twistedmatrix.com>


On Feb 20, 2014, at 6:00 AM, Adi Roiban <adi at roiban.ro> wrote:

> While submitting a patch on Twisted I got a review response that my code is not complaint with `twistedchecker`.
> 
> My first reaction was: Holy code, what is twistedchecker!

As new tools are added to our development process to make things easier (the things twistedchecker checks for used to be entirely manual) it's an ongoing struggle to keep our documentation up to date.

> Now that I got some info about twistedchecker  and wiki write access I would like to update the https://twistedmatrix.com/trac/wiki/TwistedDevelopment wiki page with information about how a Twisted developer is expected to use twistedchecker.

Please do!

> I run twistedcheck on trunk and got a lot of errors.

Yes.

Because the things twistedchecker checks for used to be manual, we used to fail to check for a lot of them.  And many of the things it checks for were not even thought of when Twisted was first developed.  This means that the codebase is largely not compliant with twistedchecker.

> Am I suppose to look through all those error and filter the ones generated by my changes?

Yes and no.

Yes, in that you should only care about the new ones that your changes created.  We aim to have the number of twistedchecker warnings decreasing over time; but as long as trunk still produces hundreds and hundreds of warnings we're never going to have a big project to eliminate them in one fell swoop.

No, in that you don't have to do this yourself, the buildbot will do it for you.  For example, if on the page for this build <http://buildbot.twistedmatrix.com/builders/twistedchecker/builds/1815> you click on "new twistedchecker errors", you will see <http://buildbot.twistedmatrix.com/builders/twistedchecker/builds/1815/steps/run-twistedchecker/logs/new%20twistedchecker%20errors> a very small number of warnings.  If there are no new twistedchecker errors, the builds should succeed.  (This mechanism isn't perfect, however; sometimes it fails, although less now than it used to.)

> Since twistedchecker is only about twisted, shouldn't it be included as a dependency to twisted-dev-tools so that as I developer I would only need to install one extra package and it will pull all development/testing depenencies?

Sounds like a good idea to me.

> Thanks!

Thank you for pointing this out!

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140221/36c07385/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140221/36c07385/attachment-0002.bin>

From glyph at twistedmatrix.com  Fri Feb 21 19:49:29 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 21 Feb 2014 18:49:29 -0800
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
	repo file
In-Reply-To: <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
Message-ID: <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>


On Feb 21, 2014, at 8:03 AM, Adi Roiban <adi at roiban.ro> wrote:

> There is currently an effort to re-organize the contributor documentation underway.  Given its fragile state, I wouldn't want to disturb it sending work off in a different direction.  On the other hand, if you'd like to take over and complete it, feel free to take whatever direction you like. :)  Either way I suggest you try to coordinate with the folks working on that.
> 
> Thanks for the reply. I am happy to coordinate with folks working on contributor documentation re-organization, but I have idea how exactly I am supposed to do that and who is working on this task.
> 

Richard Wall and Ashwini Oruganti are two of the people working on this, but to the best of my knowledge this effort is unfortunately mostly stalled right now.  If neither of them respond promptly to this thread, I think it would be best to consider that effort defunct and proceed with whatever changes you want to make.

The timeline report on wiki changes <http://twistedmatrix.com/trac/timeline?from=02%2F21%2F2014&daysback=90&wiki=on&update=Update> suggests that no work has been done on this in over 90 days, which seems like an appropriate window beyond which superseding it is fair game :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140221/62d03231/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 4124 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140221/62d03231/attachment-0002.bin>

From lokare.ameya at gmail.com  Sat Feb 22 19:17:42 2014
From: lokare.ameya at gmail.com (Ameya Lokare)
Date: Sat, 22 Feb 2014 18:17:42 -0800
Subject: [Twisted-Python] Making twisted web client requests on running
	reactor
Message-ID: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>

Hi everyone,

I'm writing a client library that makes (potentially long running) HTTP
requests. Since the library will be used within non-Twisted code, I was
thinking of running the reactor in a separate thread. The library code
looks roughly like this:

def start():
    Thread(target=reactor.run, args=(False,)).start()

def shutdown():
    reactor.callFromThread(lambda x: reactor.stop(), None)

def make_request(url):
        agent = Agent(reactor)
        d = agent.request(
            'GET',
            url,
            Headers({
                'User-Agent': ['Twisted SSE Client'],
                'Cache-Control': ['no-cache'],
            }),
            None)
        d.addCallback(self.cbRequest)

Then I make requests from the application like so:

start()
make_request("http://localhost:12000")
....
make_request("http://localhost:12000")
...
shutdown()

However, it looks like the 'd' deferred never gets fired. From a little
playing around, it looks like this is because the reactor is started before
the call(s) to agent.request are made. All examples in the twisted docs
create the request before running the reactor. I'm sure I'm missing
something very obvious here. Also, is there a better way to design such a
library?

-- 
-Ameya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140222/c98efa6d/attachment-0002.html>

From trac at twistedmatrix.com  Sun Feb 23 00:05:14 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 Feb 2014 07:05:14 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1393139114.86.6207412793391720214@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140223/ac719fe4/attachment-0002.html>

From hs at ox.cx  Sun Feb 23 03:12:05 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 23 Feb 2014 11:12:05 +0100
Subject: [Twisted-Python] Making twisted web client requests on running
 reactor
In-Reply-To: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
Message-ID: <F7B17B29-3427-4941-8FD8-4FD5BB006FC8@ox.cx>

Hello Ameya,

On 23 Feb 2014, at 3:17, Ameya Lokare wrote:

> I'm writing a client library that makes (potentially long running) 
> HTTP
> requests. Since the library will be used within non-Twisted code, I 
> was
> thinking of running the reactor in a separate thread.

Have you seen Crochet? That might be just what you’re looking for: 
https://pypi.python.org/pypi/crochet/

Cheers
Hynek



From exarkun at twistedmatrix.com  Sun Feb 23 06:11:32 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Feb 2014 13:11:32 -0000
Subject: [Twisted-Python] Making twisted web client requests on running
 reactor
In-Reply-To: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
Message-ID: <20140223131132.6218.952845415.divmod.xquotient.2@top>

On 02:17 am, lokare.ameya at gmail.com wrote:
>Hi everyone,
>
>I'm writing a client library that makes (potentially long running) HTTP
>requests. Since the library will be used within non-Twisted code, I was
>thinking of running the reactor in a separate thread. The library code
>looks roughly like this:
>
>def start():
>    Thread(target=reactor.run, args=(False,)).start()
>
>def shutdown():
>    reactor.callFromThread(lambda x: reactor.stop(), None)
>
>def make_request(url):
>        agent = Agent(reactor)
>        d = agent.request(
>            'GET',
>            url,
>            Headers({
>                'User-Agent': ['Twisted SSE Client'],
>                'Cache-Control': ['no-cache'],
>            }),
>            None)
>        d.addCallback(self.cbRequest)
>
>Then I make requests from the application like so:
>
>start()
>make_request("http://localhost:12000")
>....
>make_request("http://localhost:12000")
>...
>shutdown()
>
>However, it looks like the 'd' deferred never gets fired. From a little
>playing around, it looks like this is because the reactor is started 
>before
>the call(s) to agent.request are made. All examples in the twisted docs
>create the request before running the reactor. I'm sure I'm missing
>something very obvious here. Also, is there a better way to design such 
>a
>library?

It sounds like you want to use Crochet (which Hynek already linked you 
to).

The reason your code doesn't work, though, is that Twisted APIs are not 
thread safe.  You may *only* call them in the thread the reactor is 
running in.

Your `start` function runs the reactor in a new thread.  Then the code 
proceeds to try to use `Agent` from the original thread.  This is 
unsupported.

Jean-Paul



From exarkun at twistedmatrix.com  Sun Feb 23 06:56:40 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 23 Feb 2014 13:56:40 -0000
Subject: [Twisted-Python] [ANN] pyOpenSSL 0.14
Message-ID: <20140223135640.6218.615676796.divmod.xquotient.17@top>

Greetings fellow Pythoneers,

I'm happy to announce that pyOpenSSL 0.14 is now available.

pyOpenSSL is a set of Python bindings for OpenSSL.  It includes some 
low-level cryptography APIs but is primarily focused on providing an API 
for using the TLS protocol from Python.

Check out the PyPI page (<https://pypi.python.org/pypi/pyOpenSSL>) for 
downloads.

This release of pyOpenSSL adds:

* Support for TLSv1.1 and TLSv1.2

* First-class support for PyPy

* New flags, such as MODE_RELEASE_BUFFERS and OP_NO_COMPRESSION

* Some APIs to access to the SSL session cache

* A variety of bug fixes for error handling cases

Additionally, there are three major changes to the project:

First, the documentation has been converted from LaTeX (CPython's 
previous documentation system) to Sphinx (CPython's "new" documentation 
system ;).  You can find the new documentation on the PyPI documentation 
site (<https://pythonhosted.org/pyOpenSSL/>) or 
<https://pyopenssl.readthedocs.org/>).

Second, pyOpenSSL is no longer implemented in C as a collection of 
extension modules using the Python/C API. Instead, pyOpenSSL is now a 
pure-Python project with a dependency on a new project, cryptography 
(<https://github.com/pyca/cryptography>), which provides (among other 
things) a cffi-based interface to OpenSSL.

This change means that pyOpenSSL development is now more accessible to 
Python programmers with little or no experience with C. This is also how 
pyOpenSSL is now able to support PyPy.

Finally, the project's code hosting has moved from Launchpad to Github. 
Many branches remain only on Launchpad along with their associated bug 
reports. Over the coming releases I hope that the fixes and features in 
these branches will be ported to Python and incorporated into the 
pyOpenSSL master development branch. Bug tracking has been disabled on 
Launchpad so that the amount of useful information hosted there can 
gradually dwindle to nothing. Please use Github 
(<https://github.com/pyca/pyopenssl>) for further development and bug 
reporting.

Thanks and enjoy,
Jean-Paul



From lokare.ameya at gmail.com  Sun Feb 23 17:06:09 2014
From: lokare.ameya at gmail.com (Ameya Lokare)
Date: Sun, 23 Feb 2014 16:06:09 -0800
Subject: [Twisted-Python] Making twisted web client requests on running
	reactor
In-Reply-To: <20140223131132.6218.952845415.divmod.xquotient.2@top>
References: <CABcgvaj7_V5-tniKo7k3eN-YuVvt5enefhRbFMLdjzXQLOw+2Q@mail.gmail.com>
 <20140223131132.6218.952845415.divmod.xquotient.2@top>
Message-ID: <CABcgvaj6AM2BMCHvL7z6mpYdK+=AY9SbokAWurwzvn=9zO52yg@mail.gmail.com>

Thanks, Hynek and Jean-Paul! Crochet looks like exactly what I'm looking
for.

-Ameya


On Sun, Feb 23, 2014 at 5:11 AM, <exarkun at twistedmatrix.com> wrote:

> On 02:17 am, lokare.ameya at gmail.com wrote:
>
>> Hi everyone,
>>
>> I'm writing a client library that makes (potentially long running) HTTP
>> requests. Since the library will be used within non-Twisted code, I was
>> thinking of running the reactor in a separate thread. The library code
>> looks roughly like this:
>>
>> def start():
>>    Thread(target=reactor.run, args=(False,)).start()
>>
>> def shutdown():
>>    reactor.callFromThread(lambda x: reactor.stop(), None)
>>
>> def make_request(url):
>>        agent = Agent(reactor)
>>        d = agent.request(
>>            'GET',
>>            url,
>>            Headers({
>>                'User-Agent': ['Twisted SSE Client'],
>>                'Cache-Control': ['no-cache'],
>>            }),
>>            None)
>>        d.addCallback(self.cbRequest)
>>
>> Then I make requests from the application like so:
>>
>> start()
>> make_request("http://localhost:12000")
>> ....
>> make_request("http://localhost:12000")
>> ...
>> shutdown()
>>
>> However, it looks like the 'd' deferred never gets fired. From a little
>> playing around, it looks like this is because the reactor is started
>> before
>> the call(s) to agent.request are made. All examples in the twisted docs
>> create the request before running the reactor. I'm sure I'm missing
>> something very obvious here. Also, is there a better way to design such a
>> library?
>>
>
> It sounds like you want to use Crochet (which Hynek already linked you to).
>
> The reason your code doesn't work, though, is that Twisted APIs are not
> thread safe.  You may *only* call them in the thread the reactor is running
> in.
>
> Your `start` function runs the reactor in a new thread.  Then the code
> proceeds to try to use `Agent` from the original thread.  This is
> unsupported.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
-Ameya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140223/0b60a6f7/attachment-0002.html>

From m-lists at the-moon.net  Mon Feb 24 10:38:07 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 24 Feb 2014 17:38:07 +0000
Subject: [Twisted-Python] Raising TypeError in rich comparison methods
Message-ID: <CABefbUrf4+LDRZtPSoLL4qHKpcsPGZWjMrYBBU7B+AZqJq-_oQ@mail.gmail.com>

Hello everyone,

I want to discuss if and when to raise TypeError from Python rich comparison
methods.

I'm working on a SerialNumber class which represents an RFC1982 serial number
value. See https://twistedmatrix.com/trac/ticket/6672

SerialNumber has rich comparison methods to allow it to be compared with other
SerialNumber instances.

But what should be the behaviour when a SerialNumber is compared to an instance
of some foreign type?

In https://twistedmatrix.com/trac/ticket/6672?replyto=6#comment:4 JP suggested
returning NotImplemented.

> The rich comparison methods should probably type check their argument and
> return NotImplemented if it is not a SNA. This way the TypeError-generating
> logic provided by the runtime will be invoked instead of an
> implementation-dependent AttributeError.

I agree there should be type checking here, but after doing some research, I
think I prefer to raise an explicit TypeError. Here's why.

In Python2, returning NotImplemented from __lt__ always seems to return True and
False from __gt__. Python3 reacts more sensibly and raises TypeError. I worry
that this may cause Python2 users to think that an L{int} and a L{SerialNumber}
can be reliably compared. They can't.

I think the "return True / False" behaviour is due to a fallback comparison
mechanism in Python.
 * http://stackoverflow.com/questions/18516827/why-does-0-evaluate-to-true-in-python/18516984#18516984

   Python 2 is more stubborn and when NotImplemented is returned or no hooks
   have been implemented, the C code ends up in the default_3way_compare() C
   function,

So I've decided to explicitly raise TypeError instead. This makes it clear that
you can only compare L{SerialNumber} with L{SerialNumber}; in both Python2 and
Python3. It also means I only have to test for the "raise TypeError" behaviour.

Does that make sense?

Thanks in advance for your feedback.

-RichardW.



From m-lists at the-moon.net  Mon Feb 24 12:53:30 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 24 Feb 2014 19:53:30 +0000
Subject: [Twisted-Python] Contributing documentation inside CONTRIBUTING
 repo file
In-Reply-To: <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>
References: <CAFycZ9cPr_gyHKE9BT+FQpF4N-JGHZbCDsrSz4sBVgb0csrDaw@mail.gmail.com>
 <20140220151322.6511.612960390.divmod.xquotient.11@top>
 <CAFycZ9dnYMLr3GVOd5jUKygHf+qaBB3kyPZPrZ9w46KZr2nX_A@mail.gmail.com>
 <DFABB938-2062-406E-BB5E-51A56FAA026C@twistedmatrix.com>
Message-ID: <CABefbUq3-43_eExG8tGVDczB89xjUpyFBp6AXDwgQPFd-3g_AA@mail.gmail.com>

On 22 February 2014 02:49, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
<snip>
> Richard Wall and Ashwini Oruganti are two of the people working on this, but
> to the best of my knowledge this effort is unfortunately mostly stalled
> right now.  If neither of them respond promptly to this thread, I think it
> would be best to consider that effort defunct and proceed with whatever
> changes you want to make.
>
> The timeline report on wiki changes
> <http://twistedmatrix.com/trac/timeline?from=02%2F21%2F2014&daysback=90&wiki=on&update=Update>
> suggests that no work has been done on this in over 90 days, which seems
> like an appropriate window beyond which superseding it is fair game :).

Hi,

Sorry for not replying sooner. I was reminded about this by another potential
new contributor, navneet_, in #twisted-dev today.

I did do some work on this last year, building on Ashwini's work.

I've pasted an IRC conversation where Ashwini explained the goal of the new new-
contributor documentation. The gist is that there should be a *single* page
which guides new contributors through the process of contributing their first
patch. We think that one of the main problems with the current new-contributor
documentation is that it requires the reader to click and read too many separate
documents which are spread between the wiki and the sphinx documentation...with
no decent navigation links between the pages.

The current new contributors guide is here:
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs

The draft new contributors guide is here:
https://twistedmatrix.com/trac/wiki/Contribute (That's the doc which
ashfall_ and I were working on)

You can see my changes to that document using the history view:
https://twistedmatrix.com/trac/wiki/Contribute?action=history

I didn't get very far, I think I got distracted making some improvements to the
trac "attach a patch" page which seemed like a more natural place to document
the patch requirements which I'd originall intended to put in the Contribute
page.
 * https://github.com/twisted-infra/trac-config/pull/2

I also had plans to add Google search links to the trac search page, but never
got round to it. I thought that might make it easier for new contributors to
find existing issues before filing new tickets.

Iccha Sethi wrote a nice blog post documenting the Twisted new
contributor experience:
http://www.icchasethi.com/my-experiences-contributing-to-twisted/

I personally would like to see all the new contributor documentation migrated
out of the wiki and into version controlled ReST documentation. Django
documentation is usually a good inspiration but it looks like they do link to
lots of different documents. But perhaps that's less of a problem because it's
all sphinx based.
 * https://docs.djangoproject.com/en/1.6/internals/contributing/

Anyway, I'm still happy to help improve the new contributor documentation, but
probably haven't got the time to co-ordinate the effort.

-RichardW.

{{{
less .znc/moddata/log/rwall_freenode_#twisted-dev_20130827.log

[06:48:48] <ashfall_> rwall: Thanks for the email, it reminded me I
have aan incomplete wiki page to finish
[08:29:03] <rwall> ashfall_: Good morning. Can I help you finish it
off? I'll review it if you like.
[08:30:51] * rwall reads https://twistedmatrix.com/trac/wiki/Contribute
[08:31:45] * rwall and
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs
[08:32:13] <rwall> and https://twistedmatrix.com/trac/wiki/ContributionIdeas
[10:33:36] <rwall> tomprince: I wrote some words for inclusion in the
new ticket page (well I copied most of it from Django page.) I
mentioned it in lp:twisted-website but should I create a ticket in
Github twisted-infra instead?
[10:47:21] <rwall> I created
https://github.com/twisted-infra/trac-config/issues/1
[12:53:21] <ashfall_> rwall: I'm not sure it's ready to the point of
review yet, but feel free to work on it/make or suggest changes if you
like (in f
act, the sooner it's done the better, I'm glad you showed interest :)
[12:55:22] <ashfall_> rwall: I was trying to organize all the
information we have about contributing, and then expanding upon it -
the basic aim was t
o put everything together, if not all the text, at least all the links
to relevant text
[12:56:11] <ashfall_> and then to remove redundant information
[12:56:17] <rwall> ashfall_: But there is already
https://twistedmatrix.com/trac/wiki/ContributingToTwistedLabs. The new
page didn't look *that* diffe
rent.
[12:57:48] <ashfall_> indeed. I started from there, but what's
slightly different is the links to various other places (I didn't want
to edit in that
page, because I wasn't confident about how soon I'll complete this)
[12:58:55] <ashfall_> rwall: Either way, currently the page's like an
index. Next I was planning to organize it, and see how it goes from
there
[12:58:55] <rwall> Ok I see.
[13:01:57] <ashfall_> So I guess what I'm saying is, feel free to
finish what I started, if you feel like it you can even ignore the
page completely a
nd edit something that already exists, as long as the end result is a
page that gives one all the information needed to contribute - "one
page that ha
s it all" was the goal iirc
[13:04:10] <rwall> I think "one page" is a good goal. Ok. I might have
a go at editing your new page.
[13:04:33] <ashfall_> Thanks :)
[13:04:34] <exarkun> Maybe the goal should be written at the top of the page
[13:05:20] <rwall> Ok. I'll do that first.
}}}



From kebin70 at gmail.com  Tue Feb 25 15:56:14 2014
From: kebin70 at gmail.com (kevin mcintyre)
Date: Tue, 25 Feb 2014 14:56:14 -0800
Subject: [Twisted-Python] maybe video
Message-ID: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>

Wanted to share my qt4reactor webkit cv2 video capture script.

It's comes in handy whenever I've needed to scrape just the browser and not
my whole screen or capture unit tests etc.

here is a demo quick demo in action:

http://www.youtube.com/watch?v=2XMXtUISY1g&feature=youtu.be

It's a hack, but that's why I like python (espeically twisted)...it's so
versatile.

https://github.com/kmcintyre/scewpt/blob/master/pyscewpt/maybevideo.py

Cheers,
Kevin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140225/5104fb6f/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: maybevideo.py
Type: text/x-python
Size: 4682 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20140225/5104fb6f/attachment-0002.py>

From _ at lvh.io  Wed Feb 26 02:20:46 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Wed, 26 Feb 2014 10:20:46 +0100
Subject: [Twisted-Python] maybe video
In-Reply-To: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>
References: <CAA-sNEYty4ZfH_HnsNjkbqeaAQrZMCcqBDJ4jz8fObZ18agfcA@mail.gmail.com>
Message-ID: <CAE_Hg6bCPdBV8P5YEbPqcJoGkW9C-YdSss98UVHM=xwGucY2iw@mail.gmail.com>

Hi Kevin,


Thanks for sharing, always nice to see people doing useful things with
Twisted :-)


lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140226/c8618908/attachment-0002.html>

From matt at conundrum.com  Wed Feb 26 18:41:48 2014
From: matt at conundrum.com (Matthew Pounsett)
Date: Wed, 26 Feb 2014 20:41:48 -0500
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
Message-ID: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>


I’ve bumped into a weird one, and can’t figure out what I’m missing.  

    for iface in interfaces:
        for port in ports:
            logger.debug("Listening on {}:{}".format(iface, port))
            if use_ssl:
                reactor.listenSSL(port, factory,
                    ssl.DefaultOpenSSLContextFactory(ssl_key, ssl_cert),
                    interface=iface)
            else:
                reactor.listenTCP(port, factory, interface=iface)

In the above code block, listenSSL() and listenTCP() both fail silently.  They do not raise an exception, and netstat reports nothing listening on the appropriate port.  

Even weirder, if I assign the results of listenSSL() and listenTCP(), then then a v6 connection will succeed but v4 still fails (silently).

I get the same behaviour for both (so, regardless of the value of use_ssl in this code).

    for iface in interfaces:
        for port in ports:
            logger.debug("Listening on {}:{}".format(iface, port))
            if use_ssl:
                connector = reactor.listenSSL(port, factory,
                    ssl.DefaultOpenSSLContextFactory(ssl_key, ssl_cert),
                    interface=iface)
            else:
                connector = reactor.listenTCP(port, factory, interface=iface)
            logger.debug( "Connected with connector: {}".format(connector))
            logger.debug( "Connector on host {}".format(connector.getHost()))


19:33:43 http       Listening on 127.0.0.1:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv4Address(TCP, '127.0.0.1', 1812)
19:33:43 http       Listening on ::1:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv6Address(TCP, '::1', 1812)
19:33:43 http       Listening on 10.0.2.4:1812
19:33:43 http       Connected with connector: <<class 'twisted.internet.tcp.Port'> of twisted.protocols.tls.TLSMemoryBIOFactory on 1812>
19:33:43 http       Connector on host IPv4Address(TCP, '10.0.2.4', 1812)

> netstat -an | egrep '\.1812.*LISTEN'
tcp6       0      0 ::1.1812               *.*                    LISTEN

I’ve used this exact recipe before without any trouble (the first block, with unassigned results from reactor.listen*).. I can’t figure out what I’m missing this time.   Does anything stand out to anyone?

Using py27-twisted-13.2.0 port on FreeBSD 9.2.





From dustin at v.igoro.us  Wed Feb 26 19:02:34 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 26 Feb 2014 21:02:34 -0500
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
Message-ID: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>

https://www.trustedsec.com/february-2014/python-remote-code-execution-socket-recvfrom_into/
identified a remote code execution vulnerability in Python's
`Socket.recvfrom_into method`.  Some brief grepping around the Twisted
source doesn't find this method, but I'd be interested to hear what
the maintainers have to say on the matter: is a twisted app which
doesn't, itself use this method safe?

Dustin



From _ at lvh.io  Thu Feb 27 01:58:02 2014
From: _ at lvh.io (Laurens Van Houtven)
Date: Thu, 27 Feb 2014 09:58:02 +0100
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
In-Reply-To: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
References: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
Message-ID: <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>

Hi Dustin,


This exploit appears to be specific to how received data is written to the
already existing buffer, so the _into forms of recv,recvfrom. Even if we
assume there's a parallel export for regular recv_into and not just
recvfrom_into (which hasn't been shown), Twisted never calls either of the
_into forms.

As a result, it looks like we're unaffected.


hth
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140227/5629f32a/attachment-0002.html>

From orestis at orestis.gr  Thu Feb 27 04:21:42 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Thu, 27 Feb 2014 13:21:42 +0200
Subject: [Twisted-Python] [twisted-web] I/O error with twisted.web.wsgi and
	Django
Message-ID: <3227632E-B3C6-44B3-9909-96DCEBCCC137@orestis.gr>

Hi all,

I am using Twisted Web WSGIResource to host a Django site. Here's the 
code I use to setup the WSGI resource (other boilerplate skipped)

def wsgi_resource():
     from django.core.handlers.wsgi import WSGIHandler
     pool = threadpool.ThreadPool()
     pool.start()
     # Allow Ctrl-C to get you out cleanly:
     reactor.addSystemEventTrigger('after', 'shutdown', pool.stop)
     wsgi_resource = wsgi.WSGIResource(reactor, pool, WSGIHandler())
     return wsgi_resource

This generally worked quite well. However I have an API endpoint that 
gets hit with multiple POST requests per second (not very much - I'd say 
10-20 req/sec at most). Sometimes I see this in the logs:


Internal Server Error: /cas/eventlog/
Traceback (most recent call last):
   File "<pythonpath>/site-packages/django/core/handlers/base.py", line 
114, in get_response
     response = wrapped_callback(request, *callback_args, 
**callback_kwargs)
   File "<pythonpath>/site-packages/django/views/decorators/csrf.py", 
line 57, in wrapped_view
     return view_func(*args, **kwargs)
   File "<djangoapp>/views.py", line 488, in event_log
     data = json.loads(request.body)
   File "<pythonpath>/site-packages/django/http/request.py", line 192, 
in body
     self._body = self.read()
   File "<pythonpath>/site-packages/django/http/request.py", line 246, 
in read
     return self._stream.read(*args, **kwargs)
   File "<pythonpath>/site-packages/django/core/handlers/wsgi.py", line 
45, in read
     result = self.buffer + self._read_limited()
   File "<pythonpath>/site-packages/django/core/handlers/wsgi.py", line 
39, in _read_limited
     result = self.stream.read(size)
   File "<pythonpath>/site-packages/twisted/web/wsgi.py", line 94, in 
read
     return self._wrapped.read(size)
ValueError: I/O operation on closed file.


Any pointers on why would this happen? Why would Twisted close the file 
early? Could it be that I need to increase the threadpool size?


I use treq 0.2.0 for the requests, with the "persistent" flag turned on, 
if that makes any difference. Twisted 13.2.0 and Django 1.6, python 
2.7.1 on OS X 10.7.5.

Many thanks,
Orestis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140227/7f33ef65/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Feb 27 05:01:27 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 27 Feb 2014 12:01:27 -0000
Subject: [Twisted-Python] Issues stemming from CVE-2014-1912?
In-Reply-To: <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>
References: <CAJtE5vS4QL3ru=rd1VpMi9t4r=wZ_Cv4RCfRe+pCUJ502DFq8g@mail.gmail.com>
 <CAE_Hg6ZcUNa0PBua5odFmf8WWoBd1K1rSn0Ps5w15Bs+nMknGw@mail.gmail.com>
Message-ID: <20140227120127.6218.513251257.divmod.xquotient.31@top>

On 08:58 am, _ at lvh.io wrote:
>Hi Dustin,
>
>
>This exploit appears to be specific to how received data is written to 
>the
>already existing buffer, so the _into forms of recv,recvfrom. Even if 
>we
>assume there's a parallel export for regular recv_into and not just
>recvfrom_into (which hasn't been shown), Twisted never calls either of 
>the
>_into forms.
>
>As a result, it looks like we're unaffected.

This seems correct to me.

Jean-Paul



From glyph at twistedmatrix.com  Thu Feb 27 05:31:15 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Feb 2014 06:31:15 -0600
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
In-Reply-To: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
References: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
Message-ID: <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>

On Feb 26, 2014, at 7:41 PM, Matthew Pounsett <matt at conundrum.com> wrote:

> In the above code block

Before I start speculating as to what might be wrong, can you please attach an SSCCE <http://www.sscce.org/> that fully demonstrates the problem?  listenTCP and listenSSL definitely work on my computer ;-)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140227/f7bd62bf/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Feb 27 09:09:21 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 27 Feb 2014 10:09:21 -0600
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
 <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
Message-ID: <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>


On Feb 13, 2014, at 2:53 AM, Daniel Sank <sank.daniel at gmail.com> wrote:

> > For now. Feel free to report errors and suggest new text for the site.
> 
> Right. What is the appropriate channel to report errors with the website?

Sorry I didn't answer this more promptly.

I think the best answer right now is <https://bugs.launchpad.net/twisted-website/+filebug>.

We'll try and make this answer better documented or replace it with something better when we can.

> Also, do you have any idea when the new documentation system will up and ready for contributions?

It's up and running; there should be a lot less need for documentation (although as you pointed out the current docs are wrong) because sphinx is better understood generally in the wider Python community.

If you'd like to write some ReST docs right now and submit a patch, please go ahead!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140227/cfd9e84a/attachment-0002.html>

From sank.daniel at gmail.com  Thu Feb 27 11:39:34 2014
From: sank.daniel at gmail.com (Daniel Sank)
Date: Thu, 27 Feb 2014 10:39:34 -0800
Subject: [Twisted-Python] Where are the documentation files?
In-Reply-To: <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>
References: <CAKN9TD+u-Wd8xC6yMtKqhFmJPe4NveGfzSUwWFSu36rbWfQLWA@mail.gmail.com>
 <CAFycZ9dNBc1P9J9CUfyk_ey0t0K4OssM75OVzs0zsLsDVqkXTg@mail.gmail.com>
 <CAKN9TDLqASUK6S2Jh7qydF9+hG0in7kzT8bo8v4wL2OJv-aF1A@mail.gmail.com>
 <CAFycZ9eVnC91OmxJfbwPJmMBSb2obTAtbK=DVb6oJ_haHSYs2Q@mail.gmail.com>
 <CAKN9TD+f0x1E8hRaVVULmiNFbw0n=1Xs2+P55msUJOj2iD7XEQ@mail.gmail.com>
 <0AD9476A-2353-428F-8334-FD3470289CF2@twistedmatrix.com>
Message-ID: <CAKN9TDJ4K8GQQiW=Hb43RTk=xxFmPt8BWRO-7KVj3Oqknu5J+w@mail.gmail.com>

>> Also, do you have any idea when the new documentation system will up and
>> ready for contributions?
>>
> It's up and running; there should be a lot less need for documentation (although
> as you pointed out the current docs are wrong) because sphinx is better
> understood generally in the wider Python community.

Cool. I'm enough of a n00b that sphinx versus whatever else is all Greek for me.

> If you'd like to write some ReST docs right now and submit a patch, please go ahead!

Working on it.



From matt at conundrum.com  Thu Feb 27 12:33:06 2014
From: matt at conundrum.com (Matthew Pounsett)
Date: Thu, 27 Feb 2014 14:33:06 -0500
Subject: [Twisted-Python] listenTCP & listenSSL failing silently?
In-Reply-To: <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>
References: <07094BD6-932F-4DFB-937D-489B5E6402FE@conundrum.com>
 <B8A6CA29-1D76-4ABE-AB9D-B365EF555AAA@twistedmatrix.com>
Message-ID: <31D4841A-F61F-4929-A4B2-F6F9EDD2676A@conundrum.com>


On Feb 27, 2014, at 07:31 , Glyph <glyph at twistedmatrix.com> wrote:

> On Feb 26, 2014, at 7:41 PM, Matthew Pounsett <matt at conundrum.com> wrote:
> 
>> In the above code block
> 
> Before I start speculating as to what might be wrong, can you please attach an SSCCE <http://www.sscce.org/> that fully demonstrates the problem?  listenTCP and listenSSL definitely work on my computer ;-)

Normally I would.. the problem is that I’m having difficulty doing that.  As I said, this is something that normally works for me .. but something is interfering with it, and I can’t figure out what it might be.  I suspect once I’m able to produce a simple example that reproduces the error, I will know exactly what the problem is.

One thing I just realized I’d been overlooking is a traceback when I ^c out of my code (I haven’t yet added any handlers to shut down the reactor).  The difference between my attempt at an SSCCE and the actual code is that the actual code raises an exception *after* the ^c.  I had been assuming that had something to do with the fact that I was breaking out of the code without cleanly shutting things down, but my SSCCE doesn’t exhibit this behaviour.  Unfortunately the traceback doesn’t provide any info that helps me.

Traceback (most recent call last):
  File “./app", line 239, in <module>
    core.main_loop(config)
  File "./modules/core.py", line 73, in main_loop
    reactor.run()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 1192, in run
    self.mainLoop()
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 1204, in mainLoop
    self.doIteration(t)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/pollreactor.py", line 155, in doPoll
    l = self._poller.poll(timeout)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 603, in sigInt
    self.callFromThread(self.stop)
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 948, in callFromThread
    self.wakeUp()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/base.py", line 519, in wakeUp
    self.waker.wakeUp()
  File "/usr/local/lib/python2.7/site-packages/twisted/internet/posixbase.py", line 181, in wakeUp
    util.untilConcludes(os.write, self.o, b'x')
  File "/usr/local/lib/python2.7/site-packages/twisted/python/util.py", line 832, in untilConcludes
    return f(*a, **kw)
exceptions.OSError: [Errno 57] Socket is not connected


I’ll keep poking at it .. maybe something will jump out at me eventually.




From adi at roiban.ro  Fri Feb 28 07:56:58 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 16:56:58 +0200
Subject: [Twisted-Python] Help non-commiter to fully test their changes
	locally or remote
Message-ID: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>

Hi,

I am trying to gather documentation to help non-commiters test their
changes before sending them to review.

When run locally some tests fail with a lot of errors and is hard for a
developer to filter the errors generated by his/her changes.

Ex:
 * twistedchecker
 * pyflakes
 * api-reference

 I have created patches to clean pyflakes and I also plan to start cleaning
the api-reference build errors

>From information gathered from #twisted-dev it seems that twistedchecker is
not maintained and that some of its errors are invalid... so one should not
try to fix all its errors.
... I wander why twistedchecker is still used ?

I would like to investigate how we can fix api-reference build errors.

------

I have created a travis-ci configuration file which can be used as a
reference for running tests. It somehow copies the builders observed on
buildbot.twistedmatrix.com

A sample build result can be found here:
https://travis-ci.org/chevah/twisted/builds/19803969

Code changes are here. If you find them useful I can refine them into a
public patch.
https://github.com/chevah/twisted/pull/1/files

Only python 2.7 and 3.3 builders are enabled... but 2.6 builders can also
be enabled.
py-select-gc tests are not enabled since they are very, very slow.

Running all tests on a single process could take about 1 hour.
I guess that running only tests with default reactor and then
pyflakes/pydoctor on changed files should cover most errors.

A developer should run at least the following tests before sending a patch
for review:

 * trial with default reactor
 * pyflakes for changed files
 * pydoctor for changed files

If documentation was changed he/she should also run documentation tests.

----

Running pydoctor on my computer takes about 3 minutes... a bit long for my
taste.
I hope that pydoctor can be run on a independent python files so that I can
create
a separate linter test which will run pyflakes and pydoctor only on changes
files.
This should provide a big improvements in speed.

I used travis-ci as it provides  an isolated / reference test environment.
Once the configuration is ok, it can be translated into tox [1],  private
buildbot [2] or custom script to allow developers to run test on their
computers.

If a Twisted developer has time, I need some help to check the current
travis-ci errors and suggest how to fix them.

Thanks!

[1] https://github.com/msabramo/python-panci
[2] https://github.com/isotoma/buildbot_travis

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140228/d35910a1/attachment-0002.html>

From adi at roiban.ro  Fri Feb 28 08:02:46 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 17:02:46 +0200
Subject: [Twisted-Python] inotify tests failing on travis-ci
Message-ID: <CAFycZ9dE_xyxjpFEuUboB7W_EgOc0qC7HUL=CiY_dWo9AfOG2w@mail.gmail.com>

I have 4 inotify tests which are failing on travis-ci builders:

They pass on my local system which is also Ubuntu 12.04 with virtualenv.

Do you know what could be the cause of these failures?
Any hint of what can be done to fix them?

Thanks!

-----

Full log is here: https://travis-ci.org/chevah/twisted/jobs/19803983

Here are the failing tests.

[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify testMethod=test_deleteSelf>
(test_deleteSelf) still running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_deleteSelf
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_ignoreFilePath> (test_ignoreFilePath) still running at
120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_ignoreFilePath
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_seriesOfWatchAndIgnore> (test_seriesOfWatchAndIgnore) still
running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_seriesOfWatchAndIgnore
===============================================================================
[ERROR]
Traceback (most recent call last):
Failure: twisted.internet.defer.TimeoutError:
<twisted.internet.test.test_inotify.TestINotify
testMethod=test_simpleDeleteDirectory> (test_simpleDeleteDirectory) still
running at 120.0 secs
twisted.internet.test.test_inotify.TestINotify.test_simpleDeleteDirectory
-------------------------------------------------------------------------------
Ran 9634 tests in 578.574s
FAILED (skips=1316, expectedFailures=12, errors=4, successes=8302)

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140228/7edbe73c/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Feb 28 08:34:39 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 28 Feb 2014 23:34:39 +0800
Subject: [Twisted-Python] Help non-commiter to fully test their changes
 locally or remote
In-Reply-To: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>
References: <CAFycZ9c9K37vHGJd=a2dFyi_8Z=D0omSEuQ6XO5zWQE+U2Cc0w@mail.gmail.com>
Message-ID: <5310AC8F.6090603@atleastfornow.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

TwistedChecker is kind of maintained by me - I've just not had the
drive to work on it as much as other things :)

Some of the invalid TwistedChecker errors are hard to solve - some are
because they're hard to detect statically (for example, `some_var %
20` - is this string formatting, or modulo? Who knows, without runtime
inspection).

TwistedChecker has some form of diff functionality. When I get the
time I might have to think of how to do it locally, rather than
relying on the buildbots.

Regards,
HawkOwl

On 28/02/14 22:56, Adi Roiban wrote:
> Hi,
> 
> I am trying to gather documentation to help non-commiters test
> their changes before sending them to review.
> 
> When run locally some tests fail with a lot of errors and is hard
> for a developer to filter the errors generated by his/her changes.
> 
> Ex: * twistedchecker * pyflakes * api-reference
> 
> I have created patches to clean pyflakes and I also plan to start
> cleaning the api-reference build errors
> 
> From information gathered from #twisted-dev it seems that
> twistedchecker is not maintained and that some of its errors are
> invalid... so one should not try to fix all its errors. ... I
> wander why twistedchecker is still used ?
> 
> I would like to investigate how we can fix api-reference build
> errors.
> 
> ------
> 
> I have created a travis-ci configuration file which can be used as
> a reference for running tests. It somehow copies the builders
> observed on buildbot.twistedmatrix.com
> 
> A sample build result can be found here: 
> https://travis-ci.org/chevah/twisted/builds/19803969
> 
> Code changes are here. If you find them useful I can refine them
> into a public patch. 
> https://github.com/chevah/twisted/pull/1/files
> 
> Only python 2.7 and 3.3 builders are enabled... but 2.6 builders
> can also be enabled. py-select-gc tests are not enabled since they
> are very, very slow.
> 
> Running all tests on a single process could take about 1 hour. I
> guess that running only tests with default reactor and then 
> pyflakes/pydoctor on changed files should cover most errors.
> 
> A developer should run at least the following tests before sending
> a patch for review:
> 
> * trial with default reactor * pyflakes for changed files *
> pydoctor for changed files
> 
> If documentation was changed he/she should also run documentation
> tests.
> 
> ----
> 
> Running pydoctor on my computer takes about 3 minutes... a bit long
> for my taste. I hope that pydoctor can be run on a independent
> python files so that I can create a separate linter test which will
> run pyflakes and pydoctor only on changes files. This should
> provide a big improvements in speed.
> 
> I used travis-ci as it provides  an isolated / reference test
> environment. Once the configuration is ok, it can be translated
> into tox [1],  private buildbot [2] or custom script to allow
> developers to run test on their computers.
> 
> If a Twisted developer has time, I need some help to check the
> current travis-ci errors and suggest how to fix them.
> 
> Thanks!
> 
> [1] https://github.com/msabramo/python-panci [2]
> https://github.com/isotoma/buildbot_travis
> 
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJTEKyPAAoJECMItHnTkkoRZVoH/jziYa2TnfpzfXKa+Ivqy2fw
yWnH5xtsjeo4zrZwd1JWjchnrUTTgLJg/HtJzu5rrql8umzpKTfDU98K8EwzLvOF
AAjxmv6oTKNvIQw6QLu4ZEQ2sqG6815WSWqoEuZ2qxmtODg4v2TAjhhKv79lHZO5
XbzkRj2XhEKtaDKXsc7TrYrzwkgV+7uK0I4IG+tfFMKLBeEw3X4mV8t1ZhfE/9U1
7I98I1W5BySYdD5eEy7PbkQ5mqVdk1m1EY01QamtH90Sl4TyrBz5A8VwXfmtRP+D
T9fF0xRmh/yifbSQ48vsGiFfJIUGwsShNkvalMWtVnF40RLEejBNU2mzN+lhkc4=
=XhJV
-----END PGP SIGNATURE-----



From adi at roiban.ro  Fri Feb 28 08:58:34 2014
From: adi at roiban.ro (Adi Roiban)
Date: Fri, 28 Feb 2014 17:58:34 +0200
Subject: [Twisted-Python] Enabling travis-ci tests for reviews via pull
	requests
Message-ID: <CAFycZ9dBNVSr=QHciymW9wQ8dvch-4zqNjSxk726pMkZi8wUSQ@mail.gmail.com>

Hi,

The possibility of using travis-ci for running tests against patches from
non-commiters was raised during a review so I would like to summarize my
findings.

Travis-CI can run tests on multiple python version and the results are
public.
It will accept any patch submitted via a pull request and will execute the
tests on it.

It only provides Ubuntu 12.04 x64 builders... and with some hacks maybe
also OSX (as used by pyca / cryptography)

I know that Twisted developers don't want to deal with GitHub's pull
requests.
One option is to accept the .travis.yml in trunk, and then each developer
can enable travis-ci build on his/her own fork.

If he/she needs to check a patch, he/she could create a pull request for
his/her own fork of trunk and if Travis-ci is enabled for that fork, a
build is triggers and an email with results is sent.

What do you think? Would you accept such path?

Are there other (better) ways of allowing developers to run tests before
sending a patch?

I think that it is nice to allow developers to run a reference set of tests
before requesting a review.

Thanks!
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140228/8559aaf1/attachment-0002.html>

From goffi at goffi.org  Fri Feb 28 12:56:30 2014
From: goffi at goffi.org (Goffi)
Date: Fri, 28 Feb 2014 20:56:30 +0100
Subject: [Twisted-Python] =?utf-8?b?W0FOTk9VTkNFXSBTYWx1dCDDoCBUb2kgMC40?=
	=?utf-8?q?=2E0=3A_powerful_XMPP_client_based_on_Twisted/Wokkel?=
Message-ID: <98872a246f11ad93ff029c1bd3858841@mail.goffi.org>

G'day,

We are proud to announce the 0.4.0 release of "Salut à Toi", a powerful 
XMPP client with "social" features such has microblogging, group 
permissions (called elsewhere "aspects" or "circles"), file sharing, 
multi-user chat, etc.

The project is based on Twisted and Wokkel, and is multi-frontends 
(web, desktop, console interface, CLI), a demo of the web interface is 
available online at http://www.libervia.org .

0.4.0 announcement: 
http://www.goffi.org/post/2014/02/26/Salut-%C3%A0-Toi-0.4.0
website: http://www.salut-a-toi.org

In addition, a pubsub componant, based on Ralph Meier's Idavoll 
(http://idavoll.ik.nu/ but the site seems down), SàT PubSub, has also 
been published. It's build to experiments features, like fine access 
tuning 
(http://www.goffi.org/post/2012/06/24/Fine-access-tuning-for-PubSub), 
and to be complete enough to allow microblogging. You'll find it on the 
mercurial repository (http://repos.goffi.org) or on 
ftp://ftp.goffi.org/sat_pubsub/sat_pubsub.tar.bz2 .


Big thanks to Twisted team and contributors, and special thanks to 
Ralph Meier for Wokkel, Idavoll, and the work on XMPP/PubSub :)

If anybody feel like contributing, you're welcome :). You'll find us on 
XMPP muc room sat at chat.jabberfr.org, or you can subscribe to dev list on 
http//lists.goffi.org .

Goffi




