From rene at klootwijk.org  Mon Aug  1 04:06:05 2011
From: rene at klootwijk.org (Rene Klootwijk (klootwijk.org))
Date: Mon, 1 Aug 2011 08:06:05 +0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>,
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>

I will put some code on pastebin when I come home this evening. The Clientfactory class does not support serial port communication, does it?

--
Rene
________________________________
Van: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] namens Laurens Van Houtven [_ at lvh.cc]
Verzonden: maandag 1 augustus 2011 1:37
Aan: Twisted general discussion
Onderwerp: Re: [Twisted-Python] Reconnection to Serialport after connectionLost

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

--
cheers
lvh

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110801/1aa9238e/attachment.htm 

From itamar at itamarst.org  Mon Aug  1 07:06:27 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 01 Aug 2011 07:06:27 -0400
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <1312196787.7186.9.camel@blake>

On Mon, 2011-08-01 at 01:37 +0200, Laurens Van Houtven wrote:
> Have you tried ReconnectingClientFactory?

The serial port API doesn't use factories, if I'm not mistaken.



From exarkun at twistedmatrix.com  Mon Aug  1 07:08:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Aug 2011 11:08:20 -0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>,
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
Message-ID: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>

On 08:06 am, rene at klootwijk.org wrote:
>I will put some code on pastebin when I come home this evening. The 
>Clientfactory class does not support serial port communication, does 
>it?

Rather, the serial port API does not support factories.

Jean-Paul


From _ at lvh.cc  Mon Aug  1 08:05:05 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Aug 2011 14:05:05 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
Message-ID: <CAE_Hg6bTOog71ofJuPJ+aX9Pc_yq17DN_AgssDpd6Kn5hCp0Lg@mail.gmail.com>

Oh, right, serial. My mistake, sorry :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110801/82e3891c/attachment-0001.htm 

From stephen at thorne.id.au  Mon Aug  1 08:12:15 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Mon, 1 Aug 2011 13:12:15 +0100
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
Message-ID: <CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>

Last I looked at this I had problems with the disconnection events not
being propagated properly. I did, however, end up being able to write
a system that would connect, disconnect and reconnect to usb serial
devices that went away and came back again. So I'm sure it's possible.

Can't access that code anymore, sorry.

Stephen.


From rene at klootwijk.org  Mon Aug  1 08:21:06 2011
From: rene at klootwijk.org (Rene Klootwijk (klootwijk.org))
Date: Mon, 1 Aug 2011 12:21:06 +0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>,
	<CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
Message-ID: <BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>

When I tried this more than a year ago (Twisted 10.x), the connectionLost event was not indeed propagated correctly. However, in version 11 the event is propagated correctly.

--
Rene
________________________________________
Van: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] namens Thorne, Stephen [stephen at thorne.id.au]
Verzonden: maandag 1 augustus 2011 14:12
Aan: Twisted general discussion
Onderwerp: Re: [Twisted-Python] Reconnection to Serialport after connectionLost

Last I looked at this I had problems with the disconnection events not
being propagated properly. I did, however, end up being able to write
a system that would connect, disconnect and reconnect to usb serial
devices that went away and came back again. So I'm sure it's possible.

Can't access that code anymore, sorry.

Stephen.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From stephen at thorne.id.au  Mon Aug  1 08:35:20 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Mon, 1 Aug 2011 13:35:20 +0100
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
	<CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>
Message-ID: <CAFPU7=tSi3OsW+uFn-UeUzYx2SH1RdeOBnStF8AkubBiocfcpQ@mail.gmail.com>

On Mon, Aug 1, 2011 at 13:21, Rene Klootwijk (klootwijk.org)
<rene at klootwijk.org> wrote:
> When I tried this more than a year ago (Twisted 10.x), the connectionLost event was not indeed propagated correctly. However, in version 11 the event is propagated correctly.

Ah, good to hear. Thanks

Stephen.


From rene at klootwijk.org  Mon Aug  1 12:21:05 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Mon, 1 Aug 2011 18:21:05 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <00fa01cc5067$03736710$0a5a3530$@org>

I have copied a code snippit to pastebin,  <http://pastebin.com/us4vL0bk>
http://pastebin.com/us4vL0bk

 

This is what happens:

When I break the connection, the connectionLost event is triggered and the
connectionLost method of the protocol class is called. After a 5 second
delay the serialport is reopened successfully because I reconnected the
device. The connectionMade event is triggered and the connectionMade method
of the protocol class is called. However, data arriving on the serial port
no longer triggers the dataReceived event.

 

--

Rene

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Laurens Van
Houtven
Sent: maandag 1 augustus 2011 1:37
To: Twisted general discussion
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Rec
onnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers

lvh

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110801/52fb0014/attachment.htm 

From rene at klootwijk.org  Mon Aug  1 16:25:07 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Mon, 1 Aug 2011 22:25:07 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <00fa01cc5067$03736710$0a5a3530$@org>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<00fa01cc5067$03736710$0a5a3530$@org>
Message-ID: <010e01cc5089$1a709830$4f51c890$@org>

I figured it out! I forget to set the speed of the serial port. Dumb ,
dumber,  dumbest.

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rene
Klootwijk
Sent: maandag 1 augustus 2011 18:21
To: 'Twisted general discussion'
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

I have copied a code snippit to pastebin,  <http://pastebin.com/us4vL0bk>
http://pastebin.com/us4vL0bk

 

This is what happens:

When I break the connection, the connectionLost event is triggered and the
connectionLost method of the protocol class is called. After a 5 second
delay the serialport is reopened successfully because I reconnected the
device. The connectionMade event is triggered and the connectionMade method
of the protocol class is called. However, data arriving on the serial port
no longer triggers the dataReceived event.

 

--

Rene

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Laurens Van
Houtven
Sent: maandag 1 augustus 2011 1:37
To: Twisted general discussion
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Rec
onnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers

lvh

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110801/ae368496/attachment.htm 

From mckenzig at optonline.net  Wed Aug  3 16:59:08 2011
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Wed, 03 Aug 2011 16:59:08 -0400
Subject: [Twisted-Python] scaling with lots of clients
Message-ID: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>

Hi,

I have a twisted Perspective Broker based server. Recently with an increased number of clients we are seeing a decrease in throughput. Profiling the server it seems that it is spending the majority of time sending messages to the clients (unsuprisingly).

Messages are sent to the client from the server using a callRemote, invoked from the  event queue using reactor.callFromThread - nice and simple. What designs have people used to improve throughput in a heavily loaded server? My experience is telling me that I need to implement some sort of thread/process pool to divide the messaging to clients. Various documents on the twisted website strongly suggets that this is not a good idea. Thoughts? 

Cheers,
G.




From itamar at itamarst.org  Wed Aug  3 17:09:23 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 3 Aug 2011 17:09:23 -0400
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
Message-ID: <3ec66c55a0b4843992a13fc40ad88d46.squirrel@webmail.zoteca.com>

> I have a twisted Perspective Broker based server. Recently with an
> increased number of clients we are seeing a decrease in throughput.
> Profiling the server it seems that it is spending the majority of time
> sending messages to the clients (unsuprisingly).

PyPy might speed this up quite a bit; http://speed.pypy.org suggests PyPy
can send PB messages 3 times as fast as CPython.

You could also switch to a protocol that has a faster serialization, which
shouldn't be too hard if your usage of PB is sufficiently simple.

> Messages are sent to the client from the server using a callRemote,
> invoked from the  event queue using reactor.callFromThread - nice and
> simple. What designs have people used to improve throughput in a heavily
> loaded server? My experience is telling me that I need to implement some
> sort of thread/process pool to divide the messaging to clients. Various
> documents on the twisted website strongly suggets that this is not a good
> idea.

Threading won't help much if you're CPU bound, since Python can only run
one Python thread at once. Process pooling probably would help, though
will involve a more complex infrastructure. Which part of the docs made
you think that process pooling is a bad idea?




From mckenzig at optonline.net  Wed Aug  3 18:42:51 2011
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Wed, 03 Aug 2011 18:42:51 -0400
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
Message-ID: <3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>

> Threading won't help much if you're CPU bound, since Python can only run
> one Python thread at once. Process pooling probably would help, though
> will involve a more complex infrastructure. Which part of the docs made
> you think that process pooling is a bad idea?

Hi Itamar,

on re-reading I see nothing particular about process pooling being a bad idea. 

I see the explanation of spawning processes from the reactor here:

http://twistedmatrix.com/documents/current/core/howto/process.html

This seems to be designed for spawning processes for compute purposes which no doubt has a lot of use cases. I'd like ot spawn 
processes to handle user communication however. THe only thing that I can think of is multiple processes each with their
own reactor handling communication, and one or more other processes to handle compute. Thoughts?

THanks for your help.
G



From platsakos at gmail.com  Wed Aug  3 20:04:14 2011
From: platsakos at gmail.com (AK)
Date: Thu, 04 Aug 2011 03:04:14 +0300
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
	<3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>
Message-ID: <4E39E1FE.8070006@gmail.com>

Hi everyone,

Problems might arise if you use multiple processes, each with each own
reactor. Speaking from (limited, admittedly experience), using say two
reactors in two processes respectively, if there is a need to
communicate between them might lead to all kinds of bugs, *if* you do
not do things properly.

Another workaround would be the following:
Python's GIL lock applies only to executing Python bytecode. Therefore,
if you offload some of it to a C-based module, you are GIL-lock free.

On 08/04/2011 01:42 AM, Grant Mckenzie wrote:
>> Threading won't help much if you're CPU bound, since Python can only run
>> one Python thread at once. Process pooling probably would help, though
>> will involve a more complex infrastructure. Which part of the docs made
>> you think that process pooling is a bad idea?
> Hi Itamar,
>
> on re-reading I see nothing particular about process pooling being a bad idea. 
>
> I see the explanation of spawning processes from the reactor here:
>
> http://twistedmatrix.com/documents/current/core/howto/process.html
>
> This seems to be designed for spawning processes for compute purposes which no doubt has a lot of use cases. I'd like ot spawn 
> processes to handle user communication however. THe only thing that I can think of is multiple processes each with their
> own reactor handling communication, and one or more other processes to handle compute. Thoughts?
>
> THanks for your help.
> G
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
What is the air-speed velocity of an unladen swallow? 



From damiano.albani at gmail.com  Fri Aug  5 04:14:18 2011
From: damiano.albani at gmail.com (Damiano ALBANI)
Date: Fri, 5 Aug 2011 10:14:18 +0200
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
Message-ID: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>

Hello,

I'm trying to determine the current status of proxy support in Twisted.
I've googled quite a bit to find an answer but I couldn't get a crystal
clear picture.
What I mean by "proxy support" is the capability to:
  - act as a proxy server
  - use an external proxy server (i.e. act as a client)
And by proxy, I'm talking in pratice of SOCKS v{4(a),5} and HTTP "CONNECT"
standards.


From glyph at twistedmatrix.com  Fri Aug  5 23:43:53 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 5 Aug 2011 23:43:53 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
Message-ID: <A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>


On Aug 5, 2011, at 4:14 AM, Damiano ALBANI wrote:

> Regarding this last bug, I was wondering if there could a generic HTTP proxy mechanism, like with SOCKS, and not tied to the Web client.
> Because we might want to use an HTTP proxy for something else that Web traffic.
> 
> What would be nice in Twisted is a generic, upper-protocol-agnostic proxy mechanism  -- and one that would support indistinctly SOCKS and HTTP kinds of proxies.

You've correctly identified the status of HTTP and SOCKS proxy support in Twisted.

However, it doesn't really make sense to have a "generic" proxy layer - different protocols have wildly different rules about what it means to proxy a connection.  HTTP and SOCKS can proxy the same traffic and get very different results about where that traffic goes. Similarly, it doesn't make sense to use an HTTP proxy for anything other than HTTP traffic.  If you could clarify your request perhaps we could file a ticket?  Otherwise it would be great if you could contribute a patch to advance one of those existing tickets.

If you want a totally generic (i.e. TCP-level) proxy, Twisted does contain one: you can run 'twistd portforward --help' for information about how to run it.

Good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110805/1ff3904b/attachment.htm 

From itamar at itamarst.org  Sat Aug  6 08:48:40 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 06 Aug 2011 08:48:40 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
 kinds)
In-Reply-To: <A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>
Message-ID: <1312634920.7186.16.camel@blake>

On Fri, 2011-08-05 at 23:43 -0400, Glyph Lefkowitz wrote:

> Similarly, it doesn't make sense to use an HTTP proxy for anything
> other than HTTP traffic.

An HTTP proxy, sure. An HTTPS proxy is useful for proxying any sort of
TCP traffic; thus the reference to CONNECT.




From exarkun at twistedmatrix.com  Sun Aug  7 00:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Aug 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1312689922.88.897555697@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110807/cf824a96/attachment.htm 

From mike at mv3d.com  Sun Aug  7 15:43:49 2011
From: mike at mv3d.com (Michael Handverger)
Date: Sun, 7 Aug 2011 15:43:49 -0400 (EDT)
Subject: [Twisted-Python] ANN: MV3D 0.60 Released!
Message-ID: <13163760.92.1312746229101.JavaMail.root@verity>

I am pleased to announce the release of MV3D version 0.60! This release focused on scalability of worlds and includes support for splitting a single area across multiple server processes with automatic load balancing and redundancy. Areas can now be connected together using gateways to build worlds limited in size only by the amount of available hardware. The Overseer Cluster Management tool was upgraded in order to better handle many processes across multiple physical servers. Camera controls across all content tools have been unified. Better support for Panda3D clients was added as well.

MV3D is an open source virtual world and multiplayer game framework written in Python which uses Twisted for networking. It was designed with scalability in mind and is able to distribute a world across as many servers as needed while dynamically balancing the load. The simulation framework is not specifically slanted towards any one genre of online game, and can just as easily be used for a space game as a fantasy setting. Objects on an MV3D server are simulated using the ODE physics engine. A single server can host thousands of simulated objects. MV3D uses either Python-Ogre or Panda3D on the client. 

For more information on MV3D and this or future releases, please visit the website at http://www.mv3d.com . The full release notes for version 0.6 are available online at this URL: http://www.mv3d.com/trac/browser/tags/mv3d-0.60/release-notes.txt . For further inquiries, feel free to stop by our IRC channel on irc.freenode.net #MV3D.

Here's a video of the new demo world:

http://www.youtube.com/watch?v=iZiKr0t1TqU

Enjoy,

Mike


From exarkun at twistedmatrix.com  Mon Aug  8 09:07:30 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 08 Aug 2011 13:07:30 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310472716.1993.21.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
	<1310472716.1993.21.camel@pp>
Message-ID: <20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>

On 12 Jul, 12:11 pm, adi at roiban.ro wrote:
>On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
>>On 9 Jul, 10:46 am, adi at roiban.ro wrote:
>> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
>> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>> >[snip]
>[snip]
>>I ran this (all-branches version) a few times over the weekend.  The
>>first time, when there was lots of catching up to do, took about 3.5
>>hours.  After that, it was about 30 minutes per run.  This does seem
>>fast enough to do nightly, so I'll set that up until we have the push-
>>based version.
>
>I have created a script that can be used together with a svn post- 
>commit
>hook to keep an bzr mirror in sync.

Thanks.  Sorry about the delay in getting back to you on this.  Another 
issue I think the push version needs to deal with is concurrent 
invocation.  It looks like the script will issue overlapping "bzr pull" 
commands now, which doesn't work very well.  Do you think you could add 
some locking somewhere to avoid this?

Thanks again,
Jean-Paul


From glyph at twistedmatrix.com  Mon Aug  8 12:44:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 8 Aug 2011 12:44:40 -0400
Subject: [Twisted-Python] ANN: MV3D 0.60 Released!
In-Reply-To: <13163760.92.1312746229101.JavaMail.root@verity>
References: <13163760.92.1312746229101.JavaMail.root@verity>
Message-ID: <74BFBA80-02FF-4239-AC64-F18B945B257B@twistedmatrix.com>


On Aug 7, 2011, at 3:43 PM, Michael Handverger wrote:

> I am pleased to announce the release of MV3D version 0.60! This release focused on scalability of worlds and includes support for splitting a single area across multiple server processes with automatic load balancing and redundancy. Areas can now be connected together using gateways to build worlds limited in size only by the amount of available hardware. The Overseer Cluster Management tool was upgraded in order to better handle many processes across multiple physical servers. Camera controls across all content tools have been unified. Better support for Panda3D clients was added as well.

Wow!  Great to hear this effort is still going strong, Mike - thanks for making Twisted look super fancy with all those intense buzzwords :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110808/fa3e6998/attachment.htm 

From peter at hyperplex.net  Mon Aug  8 22:10:50 2011
From: peter at hyperplex.net (Peter Le Bek)
Date: Mon, 8 Aug 2011 22:10:50 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
Message-ID: <CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>

Myself and another are working on adding SOCKS client support to Twisted for 
use in Tor related projects. I'm also convinced there's an abstraction that would 
make it easier to implement proxy clients (or any transparent data/endpoint 
modifying protocol) in Twisted. I agree that it's difficult to generalise, but there's a 
class of protocol that does one or more of the following, transparently, and little 
else:

- append data, before switching to application protocol (SSL handshake, 
  SOCKS connect/bind)
- prepend data, after losing connection on application protocol (SSL shutdown)
- modify application data (SSL "recordification", encryption)
- modify the endpoint (any proxy)

Endpoints can do all these things - SSL4ClientEndpoint, for example, does the first 
three - but does it make sense to use Endpoints for this purpose? 

Endpoints aren't stackable, so no good if I want to run a SOCKS client over SSL. 
Also, with a proxied connection you have two Endpoints, one to the proxy server 
and one 'virtual Endpoint' to wherever. The Endpoints API doesn't accommodate 
this.

Would it make sense to have Endpoint wrappers for this purpose? A sort of 
middleware (hate that word) to intercept transport events (including transport 
formation, i.e. Endpoint.connect()).

I'm looking forward to being proven wrong on this as it will make my SOCKS work 
easier, or else if this turns out to be interesting then I have more ideas on how it 
should be implemented.

Cheers,
Peter.



From glyph at twistedmatrix.com  Tue Aug  9 00:31:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 9 Aug 2011 00:31:19 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
Message-ID: <9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>

On Aug 8, 2011, at 10:10 PM, Peter Le Bek wrote:

> Myself and another are working on adding SOCKS client support to Twisted for 
> use in Tor related projects. I'm also convinced there's an abstraction that would 
> make it easier to implement proxy clients (or any transparent data/endpoint 
> modifying protocol) in Twisted. I agree that it's difficult to generalise, but there's a 
> class of protocol that does one or more of the following, transparently, and little 
> else:
> 
> - append data, before switching to application protocol (SSL handshake, SOCKS connect/bind)
> - prepend data, after losing connection on application protocol (SSL shutdown)
> - modify application data (SSL "recordification", encryption)
> - modify the endpoint (any proxy)
> 
> Endpoints can do all these things - SSL4ClientEndpoint, for example, does the first 
> three - but does it make sense to use Endpoints for this purpose? 

I think so.

> Endpoints aren't stackable, so no good if I want to run a SOCKS client over SSL.

Sure they are.  There's no SOCKS endpoint yet, but if you were to implement one, you could make it take another endpoint (or endpoint factory, as the case may be) as an argument to its constructor.  The implementation of the various current SSL* enpdoints would set a better example if it weren't for the legacy connectSSL/listenSSL APIs.  However, those APIs are being slowly phased out in favor of the endpoints themselves, as well as the internal implementation being moved to use a wrapping / delegation approach <http://twistedmatrix.com/trac/ticket/4854> between transports and protocols instead of OpenSSL's SSL-is-a-socket-except-when-it-isn't strategy.

> Also, with a proxied connection you have two Endpoints, one to the proxy server 
> and one 'virtual Endpoint' to wherever. The Endpoints API doesn't accommodate 
> this.

How doesn't it?  It's exactly this kind of API that endpoints were _designed_ to accommodate - the original impetus to create them was the Vertex project (now part of <https://launchpad.net/divmod.org/>), which proxies traffic in a variety of different ways.

> Would it make sense to have Endpoint wrappers for this purpose? A sort of 
> middleware (hate that word) to intercept transport events (including transport 
> formation, i.e. Endpoint.connect()).

It might make sense to have some utilities around this area.  There are definitely parts of the process - especially producers and consumers - where you have to write a lot of boilerplate code to make sure everything's hooked up properly.  But it's all certainly _possible_ now with the existing interfaces.

You'd probably be interested in this ticket: <http://twistedmatrix.com/trac/ticket/3204>.  Perhaps you could submit a patch? :)

> I'm looking forward to being proven wrong on this as it will make my SOCKS work 
> easier, or else if this turns out to be interesting then I have more ideas on how it 
> should be implemented.

It would help with that proof if you would be a bit more precise about where you think the current code falls short.

-glyph

From kevin.horn at gmail.com  Tue Aug  9 12:17:43 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 9 Aug 2011 11:17:43 -0500
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
	<9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>
Message-ID: <CA+U=zK3izkPO_yc9QubTpv244M3_5KDjNJeJRWfAZbpWjtf3Ug@mail.gmail.com>

Also, anyone working on socks5 in twisted should be aware of this project:

http://code.google.com/p/proxy65/

which implements a SOCK5 server.  It's in the context of a Jabber/XMPP
XEP-0065 proxy server, but a lot of it should be applicable, if just as an
example.

I make no guarantees about the quality and/or correctness of the code, as
I've only skimmed it a couple of times.  I do know it predates the endpoint
API, and I doubt it has been updated.

(getting SOCS5 support into twisted has been on my 'maybe someday" todo
list, and I was planning on looking at this in more detail as a reference).

It's MIT licensed.

Kevin Horn

On Mon, Aug 8, 2011 at 11:31 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Aug 8, 2011, at 10:10 PM, Peter Le Bek wrote:
>
> > Myself and another are working on adding SOCKS client support to Twisted
> for
> > use in Tor related projects. I'm also convinced there's an abstraction
> that would
> > make it easier to implement proxy clients (or any transparent
> data/endpoint
> > modifying protocol) in Twisted. I agree that it's difficult to
> generalise, but there's a
> > class of protocol that does one or more of the following, transparently,
> and little
> > else:
> >
> > - append data, before switching to application protocol (SSL handshake,
> SOCKS connect/bind)
> > - prepend data, after losing connection on application protocol (SSL
> shutdown)
> > - modify application data (SSL "recordification", encryption)
> > - modify the endpoint (any proxy)
> >
> > Endpoints can do all these things - SSL4ClientEndpoint, for example, does
> the first
> > three - but does it make sense to use Endpoints for this purpose?
>
> I think so.
>
> > Endpoints aren't stackable, so no good if I want to run a SOCKS client
> over SSL.
>
> Sure they are.  There's no SOCKS endpoint yet, but if you were to implement
> one, you could make it take another endpoint (or endpoint factory, as the
> case may be) as an argument to its constructor.  The implementation of the
> various current SSL* enpdoints would set a better example if it weren't for
> the legacy connectSSL/listenSSL APIs.  However, those APIs are being slowly
> phased out in favor of the endpoints themselves, as well as the internal
> implementation being moved to use a wrapping / delegation approach <
> http://twistedmatrix.com/trac/ticket/4854> between transports and
> protocols instead of OpenSSL's SSL-is-a-socket-except-when-it-isn't
> strategy.
>
> > Also, with a proxied connection you have two Endpoints, one to the proxy
> server
> > and one 'virtual Endpoint' to wherever. The Endpoints API doesn't
> accommodate
> > this.
>
> How doesn't it?  It's exactly this kind of API that endpoints were
> _designed_ to accommodate - the original impetus to create them was the
> Vertex project (now part of <https://launchpad.net/divmod.org/>), which
> proxies traffic in a variety of different ways.
>
> > Would it make sense to have Endpoint wrappers for this purpose? A sort of
> > middleware (hate that word) to intercept transport events (including
> transport
> > formation, i.e. Endpoint.connect()).
>
> It might make sense to have some utilities around this area.  There are
> definitely parts of the process - especially producers and consumers - where
> you have to write a lot of boilerplate code to make sure everything's hooked
> up properly.  But it's all certainly _possible_ now with the existing
> interfaces.
>
> You'd probably be interested in this ticket: <
> http://twistedmatrix.com/trac/ticket/3204>.  Perhaps you could submit a
> patch? :)
>
> > I'm looking forward to being proven wrong on this as it will make my
> SOCKS work
> > easier, or else if this turns out to be interesting then I have more
> ideas on how it
> > should be implemented.
>
> It would help with that proof if you would be a bit more precise about
> where you think the current code falls short.
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110809/4f55903b/attachment.htm 

From adi at roiban.ro  Tue Aug  9 13:32:35 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 09 Aug 2011 20:32:35 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
	<1310472716.1993.21.camel@pp>
	<20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>
Message-ID: <1312911155.12666.190.camel@pp>

On Mon, 2011-08-08 at 13:07 +0000, exarkun at twistedmatrix.com wrote:
> On 12 Jul, 12:11 pm, adi at roiban.ro wrote:
> >On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
> >>On 9 Jul, 10:46 am, adi at roiban.ro wrote:
> >> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> >> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
> >> >[snip]
> >[snip]
> >>I ran this (all-branches version) a few times over the weekend.  The
> >>first time, when there was lots of catching up to do, took about 3.5
> >>hours.  After that, it was about 30 minutes per run.  This does seem
> >>fast enough to do nightly, so I'll set that up until we have the push-
> >>based version.
> >
> >I have created a script that can be used together with a svn post- 
> >commit
> >hook to keep an bzr mirror in sync.
> 
> Thanks.  Sorry about the delay in getting back to you on this.  Another 
> issue I think the push version needs to deal with is concurrent 
> invocation.  It looks like the script will issue overlapping "bzr pull" 
> commands now, which doesn't work very well.  Do you think you could add 
> some locking somewhere to avoid this?
> 
> Thanks again,
> Jean-Paul

Hi.
Don't worry for the delay.

I have added locking to the script.

The result is here:
https://github.com/adiroiban/scripts/tree/master/svn-bzr-sync-hook

Feel free to review the code when you have time and let me know if you
find any other problems.

--
Adi



From h at subl.ee  Wed Aug 10 09:49:07 2011
From: h at subl.ee (Heungsub Lee)
Date: Wed, 10 Aug 2011 22:49:07 +0900
Subject: [Twisted-Python] A problem with very long blocking thread in Twisted
Message-ID: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>

Hi, fellow programmers.

I have a problem with very long blocking thread(may not be finished) in
Twisted.

from socket import *
> from twisted.internet import reactor
> def consuming():
>     while reactor.running:
>         amqp_consumer.wait() # waiting for very long time or forever
> reactor.callInThread(consuming)


The process follows the below timeline:

>--: Started
---: Process
--X: Terminated
 ^ : Keyboard Input

 Now

main loop |>--------------------X
   thread | >--------------------------------------------... long time later
...---X
                             ^
                          [Ctrl]+C

 Ideal

main loop |>--------------------X
   thread | >-------------------X
                             ^
                         [Ctrl]+C

To solve this problem, I'd like to set threads as daemon. So that all
related threads are terminated when main loop is interrupted. Any idea on
this problem will be appreciated.

???????????????????????????
*
Heungsub Lee
 sublee
Mobile: +82-10-3215-2380
Site: http://subl.ee/
GitHub: http://github.com/sublee
*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110810/f3731d29/attachment.htm 

From rlotun at gmail.com  Wed Aug 10 10:15:38 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Wed, 10 Aug 2011 15:15:38 +0100
Subject: [Twisted-Python] A problem with very long blocking thread in
	Twisted
In-Reply-To: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
Message-ID: <CAFJezo10=0_MsRQD6cmFdvwZH7HJuuO35+aM+bM0oBiY5zYP+w@mail.gmail.com>

On Wed, Aug 10, 2011 at 2:49 PM, Heungsub Lee <h at subl.ee> wrote:

>
> To solve this problem, I'd like to set threads as daemon. So that all
> related threads are terminated when main loop is interrupted. Any idea on
> this problem will be appreciated.
>
>
Hi Heungsub,

Two options as far I as I can see:

1. Instead of having a blocking wait(), perhaps have it wait with a timeout?

2. Why don't you check out txAMQP, if you're doing amqp stuff - it has
native integration into Twisted. http://pypi.python.org/pypi/txAMQP

Keep in mind that if you set the thread as a daemon thread, the thread isn't
actually "killed", there just isn't a join() called, so it gets claimed by
the OS. This may be no different to what you want, but it's useful to keep
it in mind.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110810/13aa88df/attachment-0001.htm 

From itamar at itamarst.org  Wed Aug 10 10:35:00 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 10 Aug 2011 10:35:00 -0400
Subject: [Twisted-Python] A problem with very long blocking thread in
 Twisted
In-Reply-To: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
Message-ID: <00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>

> To solve this problem, I'd like to set threads as daemon. So that all
> related threads are terminated when main loop is interrupted. Any idea on
> this problem will be appreciated.

I've seen daemon threads causing core dumps on shutdown. Better to either
use a library that doesn't use threads (which as mentioned is possible in
this case), or have a timeout on your blocking wait.



From stephen at thorne.id.au  Wed Aug 10 11:58:26 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Wed, 10 Aug 2011 16:58:26 +0100
Subject: [Twisted-Python] A problem with very long blocking thread in
	Twisted
In-Reply-To: <00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
	<00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>
Message-ID: <CAFPU7=tyOHyk9ugDeUexHcBJPoKk4e_HqJhYsXU4_2_RvE3m6Q@mail.gmail.com>

On Wed, Aug 10, 2011 at 15:35, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
>> To solve this problem, I'd like to set threads as daemon. So that all
>> related threads are terminated when main loop is interrupted. Any idea on
>> this problem will be appreciated.
>
> I've seen daemon threads causing core dumps on shutdown. Better to either
> use a library that doesn't use threads (which as mentioned is possible in
> this case), or have a timeout on your blocking wait.

When the choice is between aborting a thread and potentially dumping
core, and not exiting, I'll take dumping core.

In order to implement this in twisted, you need to subclass ThreadPool
and override the method that creates the Thread object, or
alternatively, don't use reactor.callInThread(). If you can substitute
a threadpool for txAMPQ then that will probably be the cleanest way.

Stephen.


From tobias.oberstein at tavendo.de  Thu Aug 11 17:06:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:06:04 -0700
Subject: [Twisted-Python] Flush socket
Message-ID: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>

For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.

Currently, I am using reactor.doSelect(0) after a transport.write()
to force out outstanding octets to wire.

I know this should not be done like this, but is there a clean and
supported way to do that?


???def syncSocket(self):

??????## FIXME: find suitable replacement for this code, which appears to
break
??????## sometimes ..
??????##
??????## From the web: "You should never call reactor.doSelect. This isn't
portable across
??????## reactors, and it could easily break the reactor by re-entering it
where it isn't
??????## expecting to be re-entered."
??????##
??????try:
?????????reactor.doSelect(0)
?????????return True
??????except:
?????????return False # socket has already gone away ..




From radix at twistedmatrix.com  Thu Aug 11 17:13:22 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:13:22 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>
References: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> For testing implementations of a TCP-based protocol, I am testing
> if an implementation is agnostic wrt to in what chops in receives
> octets from the wire ("stream clean").
>
> To do that, I force out octets from the protocol test driver (written
> in Twisted) in differently sized chops, down to single octets.
>
>
While this is a noble goal, your method isn't really right: in TCP, the
chunks you write on one end do not correspond to the chunks you receive on
the other end after they've gone through a TCP stack and network. The best
way to verify that your client is stream clean is to write unit tests that
explicitly call its dataReceived method with different-sized chunks.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/95c50aa7/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Aug 11 17:13:47 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:13:47 -0700
Subject: [Twisted-Python] Flow control
Message-ID: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>

For a test driver for a TCP-based protocol (written in Twisted) I want to send data to a
receiver as fast as the receiver can consume data, but not faster.

Apparently, a naive loop which just does transport.write() does not work. When I do
reactor.select(0) between the writes, it somehow works, but memory consumption
of sender is growing fast, since I guess data is buffered within Twisted, right?

I then got over implementing my own application level flow control, where the
receiver gives feedback of how much it has consumed, and the sender throttles
itself to that.

However, isn't there a simpler way (without application level flow control)?

In the end, the sender TCP stack must have knowledge of it's window size ..
is there a way to get at that info?

What is the recommended way?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/b8f0c423/attachment.htm 

From radix at twistedmatrix.com  Thu Aug 11 17:16:55 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:16:55 -0400
Subject: [Twisted-Python] Flow control
In-Reply-To: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
References: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUSVWtNkXutHxsQgoLU+5TwsPSrqXnrXchWUcpYtqcODVg@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:13 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>  For a test driver for a TCP-based protocol (written in Twisted) I want to
> send data to a
> receiver as fast as the receiver can consume data, but not faster.
>
> Apparently, a naive loop which just does transport.write() does not work.
> When I do
> reactor.select(0) between the writes, it somehow works, but memory
> consumption
> of sender is growing fast, since I guess data is buffered within Twisted,
> right?
>
> I then got over implementing my own application level flow control, where
> the
> receiver gives feedback of how much it has consumed, and the sender
> throttles
> itself to that.
>
> However, isn't there a simpler way (without application level flow
> control)?
>
> In the end, the sender TCP stack must have knowledge of it's window size ..
> is there a way to get at that info?
>
> What is the recommended way?
>


You want to write a producer:

http://twistedmatrix.com/documents/current/core/howto/producers.html





-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/2bd310c3/attachment.htm 

From itamar at itamarst.org  Thu Aug 11 17:17:46 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 17:17:46 -0400
Subject: [Twisted-Python] Flow control
In-Reply-To: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
References: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
Message-ID: <ec64e8accae5f27d694ad690d97dcab7.squirrel@webmail.zoteca.com>

> However, isn't there a simpler way (without application level flow
> control)?
>
> In the end, the sender TCP stack must have knowledge of it's window size
> ..
> is there a way to get at that info?
>
> What is the recommended way?

Transports provide the IConsumer interface, to which you can hook up a
producer:
http://twistedmatrix.com/documents/current/core/howto/producers.html



From tobias.oberstein at tavendo.de  Thu Aug 11 17:18:40 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:18:40 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
Message-ID: <CA6A13D0.47BF%tobias.oberstein@tavendo.de>

well, it does not necessarily correspond, but from what I see on tcpdump with
loopback device and on LAN (with TCP NoDelay set), it practically works.

the problem with your suggestion: I want to test the other end .. and that is
not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)


On 11.08.11 23:13, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:


On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.


While this is a noble goal, your method isn't really right: in TCP, the chunks you write on one end do not correspond to the chunks you receive on the other end after they've gone through a TCP stack and network. The best way to verify that your client is stream clean is to write unit tests that explicitly call its dataReceived method with different-sized chunks.

--
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/8c66905e/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Aug 11 17:21:25 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:21:25 -0700
Subject: [Twisted-Python] Flow control
In-Reply-To: <CAPkRfUSVWtNkXutHxsQgoLU+5TwsPSrqXnrXchWUcpYtqcODVg@mail.gmail.com>
Message-ID: <CA6A1475.47C1%tobias.oberstein@tavendo.de>

ahh, I felt I missed sth;) thx .. I'll look into that


On 11.08.11 23:16, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:

On Thu, Aug 11, 2011 at 5:13 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For a test driver for a TCP-based protocol (written in Twisted) I want to send data to a
receiver as fast as the receiver can consume data, but not faster.

Apparently, a naive loop which just does transport.write() does not work. When I do
reactor.select(0) between the writes, it somehow works, but memory consumption
of sender is growing fast, since I guess data is buffered within Twisted, right?

I then got over implementing my own application level flow control, where the
receiver gives feedback of how much it has consumed, and the sender throttles
itself to that.

However, isn't there a simpler way (without application level flow control)?

In the end, the sender TCP stack must have knowledge of it's window size ..
is there a way to get at that info?

What is the recommended way?


You want to write a producer:

http://twistedmatrix.com/documents/current/core/howto/producers.html




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/57196cab/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Aug 11 17:38:49 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:38:49 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
Message-ID: <CA6A1889.47C7%tobias.oberstein@tavendo.de>

so there is no Twisted sanctioned (reactor independent and reentry safe) alternative to disable nagle (tcp nodelay) and doing a select()?

ps: to give an example of how that was at least practically useful in what i try to do .. and not only blabbing away:

http://www.tavendo.de/autobahn/testsuite/report/

for these 2 cases, the only difference are the calls to reactor.select()

http://www.tavendo.de/autobahn/testsuite/report/firefox_7_0a_20110809_case_5_19.html

http://www.tavendo.de/autobahn/testsuite/report/firefox_7_0a_20110809_case_5_20.html

by which I found

https://bugzilla.mozilla.org/show_bug.cgi?id=675961


On 11.08.11 23:13, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:


On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.


While this is a noble goal, your method isn't really right: in TCP, the chunks you write on one end do not correspond to the chunks you receive on the other end after they've gone through a TCP stack and network. The best way to verify that your client is stream clean is to write unit tests that explicitly call its dataReceived method with different-sized chunks.

--
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/83ead09d/attachment-0001.htm 

From radix at twistedmatrix.com  Thu Aug 11 17:40:00 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:40:00 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A13D0.47BF%tobias.oberstein@tavendo.de>
References: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
	<CA6A13D0.47BF%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUS4eNxYNim_c8SUTzDaVWL4b2puaoFqeMkaKgrgN1urgQ@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:18 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>  well, it does not necessarily correspond, but from what I see on tcpdump
> with
> loopback device and on LAN (with TCP NoDelay set), it practically works.
>
> the problem with your suggestion: I want to test the other end .. and that
> is
> not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)
>
>
Maybe I'm missing something - are you actually writing functional tests for
Firefox itself?

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/03933029/attachment.htm 

From tobias.oberstein at tavendo.de  Thu Aug 11 17:45:37 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:45:37 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUS4eNxYNim_c8SUTzDaVWL4b2puaoFqeMkaKgrgN1urgQ@mail.gmail.com>
Message-ID: <CA6A1A21.47CA%tobias.oberstein@tavendo.de>

yes. for FF and Chrome, and other WebSockets clients


On 11.08.11 23:40, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:

On Thu, Aug 11, 2011 at 5:18 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
well, it does not necessarily correspond, but from what I see on tcpdump with
loopback device and on LAN (with TCP NoDelay set), it practically works.

the problem with your suggestion: I want to test the other end .. and that is
not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)


Maybe I'm missing something - are you actually writing functional tests for Firefox itself?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/88767fc7/attachment.htm 

From itamar at itamarst.org  Thu Aug 11 17:47:09 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 17:47:09 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1889.47C7%tobias.oberstein@tavendo.de>
References: <CA6A1889.47C7%tobias.oberstein@tavendo.de>
Message-ID: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>

> so there is no Twisted sanctioned (reactor independent and reentry safe)
> alternative to disable nagle (tcp nodelay) and doing a select()?

You can disable nagle in Twisted, if that's the question
(transport.setTcpNoDelay(True)). But you can't determine TCP packet size,
that's up to the operating system.



From tobias.oberstein at tavendo.de  Thu Aug 11 17:54:11 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:54:11 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
Message-ID: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>

sorry, my question wasn't clear:

I do already disable Nagle by setting TCP NoDelay.

And I do a reactor.select(0), which sometimes breaks I guess
because of reactor reentry not expected, and it will break
when the reactor is not select() based I guess.

So the question is: is there an alternative to reactor.select(0)
after a transport.write() to make the reactor call write() on
the underlying socket for all stuff buffered within Twisted?


On 11.08.11 23:47, "Itamar Turner-Trauring" <itamar at itamarst.org> wrote:

> so there is no Twisted sanctioned (reactor independent and reentry safe)
> alternative to disable nagle (tcp nodelay) and doing a select()?

You can disable nagle in Twisted, if that's the question
(transport.setTcpNoDelay(True)). But you can't determine TCP packet size,
that's up to the operating system.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110811/1533f5ee/attachment.htm 

From itamar at itamarst.org  Thu Aug 11 18:17:44 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 18:17:44 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
Message-ID: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>

> sorry, my question wasn't clear:
>
> I do already disable Nagle by setting TCP NoDelay.
>
> And I do a reactor.select(0), which sometimes breaks I guess
> because of reactor reentry not expected, and it will break
> when the reactor is not select() based I guess.
>
> So the question is: is there an alternative to reactor.select(0)
> after a transport.write() to make the reactor call write() on
> the underlying socket for all stuff buffered within Twisted?

You should not be calling private reactor methods, it will break things.
You can make the max write size (default 128 or 64kb, I forget) bigger by
setting some attribute on the transport, but again, the OS will split
things up across TCP packets however you want. This is not a very useful
thing to attempt - better to instrument firefox to only do certain size
reads.



From itamar at itamarst.org  Thu Aug 11 18:20:54 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 18:20:54 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
Message-ID: <4d752c8621fbe480b4cf61ee0113d547.squirrel@webmail.zoteca.com>

> but again, the OS will split
> things up across TCP packets however you want.

That should read "however *it* wants".



From exarkun at twistedmatrix.com  Thu Aug 11 19:43:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 11 Aug 2011 23:43:34 -0000
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
Message-ID: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>

On 09:54 pm, tobias.oberstein at tavendo.de wrote:
>sorry, my question wasn't clear:
>
>I do already disable Nagle by setting TCP NoDelay.
>
>And I do a reactor.select(0), which sometimes breaks I guess
>because of reactor reentry not expected, and it will break
>when the reactor is not select() based I guess.
>
>So the question is: is there an alternative to reactor.select(0)
>after a transport.write() to make the reactor call write() on
>the underlying socket for all stuff buffered within Twisted?

Sure.  Implement your own IFileDescriptor.  When you add the descriptor 
to the reactor using IReactorFDSet.addWriter, it will call back onto 
your object's doWrite method to tell it there is space in the write 
buffer.  Then you can write exactly as many bytes as you want, as well 
as implementing other policies - for example you can remove the 
descriptor from the reactor's write set using 
IReactorFDSet.removeWriter, thus delaying future writes until it is re- 
added.

This will always be a somewhat unreliable way to test a remote process's 
handling of packetization, since there are still two TCP/IP stacks which 
can mess around with the data in a variety of ways, but it's as good as 
you can do if you want to use normal sockets for this testing.

A more reliable way might be to synthesize the IP datagrams yourself, 
and inject them into the recipient's TCP/IP stack.  Or skip the TCP/IP 
stack and inject them into the recipient process directly, by replacing 
the BSD socket APIs with an alternate implementation you control 
(perhaps using an LD_PRELOAD hook, for example).

Twisted doesn't offer much in the way of assistance for those latter 
approaches, though.

Jean-Paul
>
>On 11.08.11 23:47, "Itamar Turner-Trauring" <itamar at itamarst.org> 
>wrote:
>>so there is no Twisted sanctioned (reactor independent and reentry 
>>safe)
>>alternative to disable nagle (tcp nodelay) and doing a select()?
>
>You can disable nagle in Twisted, if that's the question
>(transport.setTcpNoDelay(True)). But you can't determine TCP packet 
>size,
>that's up to the operating system.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Fri Aug 12 00:06:25 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 12 Aug 2011 00:06:25 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
Message-ID: <9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>

On Aug 11, 2011, at 7:43 PM, exarkun at twistedmatrix.com wrote:

> This will always be a somewhat unreliable way to test a remote process's 
> handling of packetization, since there are still two TCP/IP stacks which 
> can mess around with the data in a variety of ways, but it's as good as 
> you can do if you want to use normal sockets for this testing.

This bears repeating.  It's really unreliable.  Really.  The sizes of buffers passed to send() and recv() bear only a coincidental resemblance to each other; one test setup may reproduce them reliably when the next will suddenly behave completely differently.  If you want even a reasonably reliable heuristic here, you need to send() and then introduce a delay.  You can do this without your own IWriteDescriptor implementation though; just implement an ITransport that does its write() by breaking things up and then calling the underlying write() with callLater()s in-between.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110812/083d76a4/attachment.htm 

From tobias.oberstein at tavendo.de  Fri Aug 12 08:18:42 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 05:18:42 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC314@EXVMBX020-12.exch020.serverdata.net>

> > I do already disable Nagle by setting TCP NoDelay.
> >
> > And I do a reactor.select(0), which sometimes breaks I guess because
> > of reactor reentry not expected, and it will break when the reactor is
> > not select() based I guess.
> >
> > So the question is: is there an alternative to reactor.select(0) after
> > a transport.write() to make the reactor call write() on the underlying
> > socket for all stuff buffered within Twisted?
> 
> You should not be calling private reactor methods, it will break things.

? I know: therefor I was asking ..

> You can make the max write size (default 128 or 64kb, I forget) bigger by

I don't want to make it bigger, but smaller ..

> setting some attribute on the transport, but again, the OS will split things up
> across TCP packets however you want. This is not a very useful thing to
> attempt - better to instrument firefox to only do certain size reads.

What I am aiming at is a test suite for the WebSockets protocol which can
test (by fuzzing) _any_ WebSockets client.

For example, I've got a HTML file with embedded JavaScript which will
connect to the test server and run all test cases to get fuzzed.
That HTML works with any browser (that claims to support WebSockets).
I don't want to instrument 5 browsers;) At least for IE and Opera that would
not work anyway .. no source.


From tobias.oberstein at tavendo.de  Fri Aug 12 08:52:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 05:52:36 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC31E@EXVMBX020-12.exch020.serverdata.net>

> This will always be a somewhat unreliable way to test a remote process's
> handling of packetization, since there are still two TCP/IP stacks which can
> mess around with the data in a variety of ways, but it's as good as you can do
> if you want to use normal sockets for this testing.
> 
> A more reliable way might be to synthesize the IP datagrams yourself, and
> inject them into the recipient's TCP/IP stack.  Or skip the TCP/IP stack and

Ok, I see. Thats wicked. I don't feel ready to go that far though .. would be
probably a multi-week project.

Perhaps there is a network testing tool which receives TCP on one leg and
trickles out octets (by varying/random amounts) on a forwarding leg to the receiver?

Kind of "trickling" TCP forwarder to test stream cleanness of endpoints
implementing some TCP based protocol .. is there something?

> inject them into the recipient process directly, by replacing the BSD socket
> APIs with an alternate implementation you control (perhaps using an
> LD_PRELOAD hook, for example).

Sounds less work than above ..

> 
> Twisted doesn't offer much in the way of assistance for those latter
> approaches, though.

..  I see. Both would require more or less tricky stuff to be created
outside Python/Twisted and take significant (for me) efforts.


From tobias.oberstein at tavendo.de  Fri Aug 12 09:08:06 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 06:08:06 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
	<9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC331@EXVMBX020-12.exch020.serverdata.net>

Thanks for the tip, I've gone that route as it was the simplest to realize. Since I had centralized all calls
to transport.write() in a wrapper in the code, I didn't had to implement an ITransport ..

It seems to "work" (modulo the cautions you iterated) .. and I no longer use reactor internals.

I had to introduce a layer of buffering though (which kicks in as soon as I do a "synch"/"chopped" send .. test prg below.

Thanks again, cheers

=== CLIENT ===

import binascii, time
from collections import deque
from twisted.internet import reactor, protocol
from twisted.internet.defer import inlineCallbacks, Deferred


class TricklingClientProtocol(protocol.Protocol):

   def __init__(self):
      self.send_queue = deque()
      self.triggered = False

   def _trigger(self):
      if not self.triggered:
         self.triggered = True
         self._send()

   def _send(self):
      if len(self.send_queue) > 0:
         e = self.send_queue.popleft()
         self.transport.write(e)
         reactor.callLater(0.000001, self._send)
      else:
         self.triggered = False

   def send(self, data, sync = False, chopsize = None):
      if chopsize > 0:
         i = 0
         n = len(data)
         done = False
         while not done:
            j = i + chopsize
            if j >= n:
               done = True
               j = n
            self.send_queue.append(data[i:j])
            i += chopsize
         self._trigger()
         #print "chopped send"
      else:
         if sync or len(self.send_queue) > 0:
            self.send_queue.append(data)
            self._trigger()
            #print "synced send"
         else:
            self.transport.write(data)
            #print "normal send"

   def connectionMade(self):
      self.transport.setTcpNoDelay(True)
      self.part1()

   def part1(self):
      LEN = 50
      self.send("123" * LEN)
      for i in xrange(0, LEN):
         self.send("456", sync = True)
      self.send("789" * LEN, chopsize = 1)
      self.send("123" * LEN)
      reactor.callLater(0.3, self.part2)

   def part2(self):
      self.send("xyz" * 5)
      self.send("abc" * 5, chopsize = 1)
      reactor.callLater(5, self.transport.loseConnection)


class TricklingClientFactory(protocol.ClientFactory):

   protocol = TricklingClientProtocol

   def clientConnectionFailed(self, connector, reason):
     reactor.stop()

   def clientConnectionLost(self, connector, reason):
      reactor.stop()


if __name__ == '__main__':
   factory = TricklingClientFactory()
   reactor.connectTCP("localhost", 9000, factory)
   reactor.run()

=== SERVER ====

import binascii
from twisted.internet import reactor, protocol

class TricklingServerProtocol(protocol.Protocol):

   def __init__(self):
      pass

   def connectionMade(self):
      print "client accepted"
      self.transport.setTcpNoDelay(True)
      self.stats = {}

   def connectionLost(self, reason):
      print "client lost"
      for s in sorted(self.stats):
         print "%dx chop of length %d" % (self.stats[s], s)

   def dataReceived(self, data):
      l = len(data)
      self.stats[l] = self.stats.get(l, 0) + 1
      #print data


class TricklingServerFactory(protocol.ServerFactory):

   protocol = TricklingServerProtocol

   def __init__(self):
      pass

   def startFactory(self):
      pass

   def stopFactory(self):
      pass


if __name__ == '__main__':
   factory = TricklingServerFactory()
   reactor.listenTCP(9000, factory)
   reactor.run()


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Freitag, 12. August 2011 06:06
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Flush socket

On Aug 11, 2011, at 7:43 PM, exarkun at twistedmatrix.com<mailto:exarkun at twistedmatrix.com> wrote:


This will always be a somewhat unreliable way to test a remote process's
handling of packetization, since there are still two TCP/IP stacks which
can mess around with the data in a variety of ways, but it's as good as
you can do if you want to use normal sockets for this testing.


This bears repeating.  It's really unreliable.  Really.  The sizes of buffers passed to send() and recv() bear only a coincidental resemblance to each other; one test setup may reproduce them reliably when the next will suddenly behave completely differently.  If you want even a reasonably reliable heuristic here, you need to send() and then introduce a delay.  You can do this without your own IWriteDescriptor implementation though; just implement an ITransport that does its write() by breaking things up and then calling the underlying write() with callLater()s in-between.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110812/bb7102d0/attachment-0001.htm 

From exarkun at twistedmatrix.com  Sun Aug 14 00:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Aug 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1313294724.54.1536117864@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110814/9d10669b/attachment.htm 

From lukas2k7 at mail.ru  Sun Aug 14 02:47:55 2011
From: lukas2k7 at mail.ru (Lukichev Anton)
Date: Sun, 14 Aug 2011 10:47:55 +0400
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
Message-ID: <4E476F9B.1060706@mail.ru>

Pls, show me an example of HTTP authorization.
Thanks.

__
itfreelancer.ru


From lukas2k7 at mail.ru  Sun Aug 14 02:50:07 2011
From: lukas2k7 at mail.ru (Lukichev Anton)
Date: Sun, 14 Aug 2011 10:50:07 +0400
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
Message-ID: <4E47701F.8060805@mail.ru>

Pls, show me an example of HTTP authorization.
Thanks all.

__
http://itfreelancer.ru


From exarkun at twistedmatrix.com  Sun Aug 14 09:15:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Aug 2011 13:15:56 -0000
Subject: [Twisted-Python] Status of current proxy support (of
	various	kinds)
In-Reply-To: <4E47701F.8060805@mail.ru>
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
	<4E47701F.8060805@mail.ru>
Message-ID: <20110814131556.13284.755904786.divmod.xquotient.61@localhost.localdomain>

On 06:50 am, lukas2k7 at mail.ru wrote:
>Pls, show me an example of HTTP authorization.
>Thanks all.

See the online documentation for Twisted Web:

  http://twistedmatrix.com/documents/current/web/howto/

in particular:

  http://twistedmatrix.com/documents/current/web/howto/web-in-60/http- 
auth.html

Jean-Paul


From alex.kirp at gmail.com  Mon Aug 15 08:21:24 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Mon, 15 Aug 2011 18:21:24 +0600
Subject: [Twisted-Python] 11.0 in PPA
Message-ID: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>

Hi all,

I hope that maintainers of Twisted PPA are subscribed to this mailing list :)

Is there any chance that 11.0 will be packaged and uploaded to the PPA
anytime soon?

-- 
Alex


From tobias.oberstein at tavendo.de  Mon Aug 15 08:39:53 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 15 Aug 2011 05:39:53 -0700
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>

Well, I'm just a Twisted user, but there is

http://pypi.python.org/pypi/Twisted/11.0.0

which I'd guess is trivial to build on Ubuntu (python setup.py install) from the source tarball.

I know that's not exactly your question;)

> -----Urspr?ngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von ??????? ???????????
> Gesendet: Montag, 15. August 2011 14:21
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] 11.0 in PPA
> 
> Hi all,
> 
> I hope that maintainers of Twisted PPA are subscribed to this mailing list :)
> 
> Is there any chance that 11.0 will be packaged and uploaded to the PPA
> anytime soon?
> 
> --
> Alex
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From alex.kirp at gmail.com  Mon Aug 15 08:50:38 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Mon, 15 Aug 2011 18:50:38 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>

Thanks.
I'm new here, but not _that_ new :)

Easy_install (pip, whatever) is not an option for my environment, I
need Ubuntu packages.

2011/8/15 Tobias Oberstein <tobias.oberstein at tavendo.de>:
> Well, I'm just a Twisted user, but there is
>
> http://pypi.python.org/pypi/Twisted/11.0.0
>
> which I'd guess is trivial to build on Ubuntu (python setup.py install) from the source tarball.
>
> I know that's not exactly your question;)
>
>> -----Urspr?ngliche Nachricht-----
>> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>> bounces at twistedmatrix.com] Im Auftrag von ??????? ???????????
>> Gesendet: Montag, 15. August 2011 14:21
>> An: twisted-python at twistedmatrix.com
>> Betreff: [Twisted-Python] 11.0 in PPA
>>
>> Hi all,
>>
>> I hope that maintainers of Twisted PPA are subscribed to this mailing list :)
>>
>> Is there any chance that 11.0 will be packaged and uploaded to the PPA
>> anytime soon?
>>
>> --
>> Alex
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From itamar at itamarst.org  Mon Aug 15 09:49:06 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Aug 2011 09:49:06 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
Message-ID: <1313416146.6861.6.camel@blake>

Lacking a PPA, you could build a .deb yourself using stdeb:
http://pypi.python.org/pypi/stdeb/0.5.1



From exarkun at twistedmatrix.com  Mon Aug 15 10:29:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Aug 2011 14:29:33 -0000
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <1313416146.6861.6.camel@blake>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
Message-ID: <20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>

On 01:49 pm, itamar at itamarst.org wrote:
>Lacking a PPA, you could build a .deb yourself using stdeb:
>http://pypi.python.org/pypi/stdeb/0.5.1

It would be nice if the ppa were up to date, though.  Maybe someone who 
knows how to update it can share that information so that someone who 
has time to keep it up to date can take over the job.

Jean-Paul


From jessica.mckellar at gmail.com  Mon Aug 15 10:52:38 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Mon, 15 Aug 2011 10:52:38 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
Message-ID: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>

Hi folks,

> It would be nice if the ppa were up to date, though. ?Maybe someone who
> knows how to update it can share that information so that someone who
> has time to keep it up to date can take over the job.

I would like to volunteer for this. I don't know much about packaging
and this seems like a good opportunity to learn.

If there are no objections, what I'll do is:
a) learn more about the ideal Twisted PPA situation (if you have
thoughts on what that should be, tell me)
b) extract the existing Twisted PPA knowledge from people
c) add a PPA maintenance job description to
http://twistedmatrix.com/trac/wiki/ProjectJobs
d) get started updating the PPA

If anyone else wants to help I'm happy to share the duties.

Regards,
-Jessica


From jml at mumak.net  Mon Aug 15 11:33:45 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 15 Aug 2011 16:33:45 +0100
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>

On Mon, Aug 15, 2011 at 3:52 PM, Jessica McKellar
<jessica.mckellar at gmail.com> wrote:
> Hi folks,
>
>> It would be nice if the ppa were up to date, though. ?Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
>
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
>
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)

Current situation: It exists. Anyone in
https://launchpad.net/~twisted-dev can write to it.

Ideal situation:
 * 2 PPAs: daily & release
 * Daily PPA builds automatically after a test-passing change lands on trunk
 * Release PPA
   * Build of latest Twisted release for all supported releases of Ubuntu
   * Ideally packaging is good enough for upload to Debian (but ask
the maintainer)
   * If this can be automated, great

jml


From chris at emerge-life.de  Mon Aug 15 13:31:56 2011
From: chris at emerge-life.de (Christian Kampka)
Date: Mon, 15 Aug 2011 19:31:56 +0200
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <4E49580C.8090008@emerge-life.de>

On 15.08.2011 16:52, Jessica McKellar wrote:
> Hi folks,
> 
>> It would be nice if the ppa were up to date, though.  Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
> 
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
> 
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)
> b) extract the existing Twisted PPA knowledge from people
> c) add a PPA maintenance job description to
> http://twistedmatrix.com/trac/wiki/ProjectJobs
> d) get started updating the PPA
> 
> If anyone else wants to help I'm happy to share the duties.

Hi,

as a matter of fact, I have a ppa that has recent twisted packages[1].
The packages I put up there are actually based on upstream Ubuntu
packages and "just work" for me, but for an official ppa, I'd guess they
could use a little work and especially testing.
I can't say I'm an expert on packages or ppas, but I'm happy to offer
any advice if needed.
For starters, if you think about making this an official twisted
packaging project, I'd suggest switching from launchpad ppas to obs[2]
as it offers a much wider range of supported distributions
(Ubuntu/Debian/Fedora/CentOS) and a very powerful command line client.
Don't worry about the name, it's really an all purpose building tool,
it's open source and can therefore be run as a private instance.

Cheers,
Chris

[1] https://launchpad.net/~kampka/+archive/python
[2] openSUSE Build Service - http://build.opensuse.org


From therve at free.fr  Mon Aug 15 14:19:35 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Mon, 15 Aug 2011 20:19:35 +0200
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>	<1313416146.6861.6.camel@blake>	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>
Message-ID: <4E496337.6030402@free.fr>

Le 15/08/2011 17:33, Jonathan Lange a ?crit :
> On Mon, Aug 15, 2011 at 3:52 PM, Jessica McKellar
> <jessica.mckellar at gmail.com> wrote:
>> Hi folks,
>>
>>> It would be nice if the ppa were up to date, though.  Maybe someone who
>>> knows how to update it can share that information so that someone who
>>> has time to keep it up to date can take over the job.
>>
>> I would like to volunteer for this. I don't know much about packaging
>> and this seems like a good opportunity to learn.
>>
>> If there are no objections, what I'll do is:
>> a) learn more about the ideal Twisted PPA situation (if you have
>> thoughts on what that should be, tell me)
> 
> Current situation: It exists. Anyone in
> https://launchpad.net/~twisted-dev can write to it.
> 
> Ideal situation:
>  * 2 PPAs: daily & release
>  * Daily PPA builds automatically after a test-passing change lands on trunk
>  * Release PPA
>    * Build of latest Twisted release for all supported releases of Ubuntu
>    * Ideally packaging is good enough for upload to Debian (but ask
> the maintainer)
>    * If this can be automated, great

I tried that some time ago:

https://code.launchpad.net/~therve/+recipe/twisted-trunk-daily

The problem is that it diverges from the Debian packaging of Twisted,
which has a source package for every subprojects, whereas the recipe
system only works with one source.

The other problem is that the "current" Twisted package (eg the one in
Natty) uses dh_python2, which is not available on Lucid.

At any rate, I'd be happy to help.


From alex.kirp at gmail.com  Tue Aug 16 05:05:26 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Tue, 16 Aug 2011 15:05:26 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <1313416146.6861.6.camel@blake>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
Message-ID: <CADGOwRSU4Kb3DkisTjZTq2=3mMe+PspuMh17p8hhofEt10Bu7g@mail.gmail.com>

Well, it works, but this way only one package is assembled. Default
Debian packaging consists of separate packages for every part of
Twisted, and breaking this pattern doesn't seem good to me.

2011/8/15 Itamar Turner-Trauring <itamar at itamarst.org>:
> Lacking a PPA, you could build a .deb yourself using stdeb:
> http://pypi.python.org/pypi/stdeb/0.5.1
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From dialtone at gmail.com  Tue Aug 16 15:35:04 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 16 Aug 2011 12:35:04 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
Message-ID: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>

Hi,

Turtl is an HTTP proxy whose purpose is to throttle connections to
specific hostnames to avoid breaking terms of usage of those API
providers (like del.icio.us, technorati and so on).

At the core of turtl is a throttling deferred that works in a similar way as DeferredSemaphore() except that it will enforce also a rate (N calls every M seconds) at which deferreds added to it are fired.

In the past few weeks it's been improved a couple obscure bugs have been ironed out. It's been running as a proxy for a couple of years and recently we started using it as a crawler rate limiter.

Source code lives on bitbucket: https://bitbucket.org/adroll/turtl/overview

Here's a small example of its usage:

import time
from twisted.internet import reactor, defer
from twisted.protocols.policies import WrappingFactory
from twisted.web import client, server, resource
from turtl import engine

throttle = engine.ThrottlingDeferred(concurrency=1, calls=2, interval=1)

class FakeResource(resource.Resource):
    isLeaf = True
    def render(self, request):
        return "hello"

def setupServer():
    site = server.Site(FakeResource())
    wrapper = WrappingFactory(site)
    port = reactor.listenTCP(0, wrapper, interface="127.0.0.1")
    portno = port.getHost().port
    return portno

def stop(_):
    return reactor.stop()

def makeUrl(port):
    return "http://localhost:%s/" % (port)

def prinl(page):
    print time.time(), page

port = setupServer()
url = makeUrl(port)
defer.DeferredList([throttle.run(client.getPage, url).addBoth(prinl) for i in xrange(1000)]).addBoth(stop)
reactor.run()


-- 
Valentino Volonghi
http://www.adroll.com



From glyph at twistedmatrix.com  Tue Aug 16 21:55:12 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2011 21:55:12 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
Message-ID: <60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>


On Aug 16, 2011, at 3:35 PM, Valentino Volonghi wrote:

> Turtl is an HTTP proxy whose purpose is to throttle connections to
> specific hostnames to avoid breaking terms of usage of those API
> providers (like del.icio.us, technorati and so on).

Awesome, Valentino!  Thanks for the announcement :).

Any chance you could also add this to <https://launchpad.net/tx> and/or <http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted>?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110816/6e64da36/attachment.htm 

From dialtone at gmail.com  Wed Aug 17 15:02:33 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 12:02:33 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
Message-ID: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>

On 16 Aug 2011, at 18:55, Glyph Lefkowitz wrote:

>> Turtl is an HTTP proxy whose purpose is to throttle connections to
>> specific hostnames to avoid breaking terms of usage of those API
>> providers (like del.icio.us, technorati and so on).
> 
> Awesome, Valentino!  Thanks for the announcement :).
> 
> Any chance you could also add this to <https://launchpad.net/tx> and/or <http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted>?

Hey Glyph thanks! :)

I'd add it to ProjectsUsingTwisted but I don't have rights on trac. About the tx project instead AdRoll open source repositories are on bitbucket for now, unless there's a way to link to projects from outside I won't do that one just yet.

-- 
Valentino Volonghi
http://www.adroll.com



From _ at lvh.cc  Wed Aug 17 15:36:02 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 17 Aug 2011 21:36:02 +0200
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
Message-ID: <CAE_Hg6Z_tTmSbnxfYBJCJAtqsJbvpic=wHUAnSEjps7vN18eeA@mail.gmail.com>

On Wed, Aug 17, 2011 at 9:02 PM, Valentino Volonghi <dialtone at gmail.com>wrote:

>  Hey Glyph thanks! :)
>
> I'd add it to ProjectsUsingTwisted but I don't have rights on trac.


I added it for you.


> About the tx project instead AdRoll open source repositories are on
> bitbucket for now, unless there's a way to link to projects from outside I
> won't do that one just yet.
>

Nah, you can totally make a Launchpad project for something (takes about 3
minutes) without using Launchpad to store code.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110817/c3fcce7b/attachment.htm 

From glyph at twistedmatrix.com  Wed Aug 17 16:10:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 17 Aug 2011 16:10:10 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
Message-ID: <09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>


On Aug 17, 2011, at 3:02 PM, Valentino Volonghi wrote:

> (...) unless there's a way to link to projects from outside I won't do that one just yet.

There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110817/7fe6efee/attachment.htm 

From dialtone at gmail.com  Wed Aug 17 16:15:32 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 13:15:32 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
Message-ID: <3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>

On 17 Aug 2011, at 13:10, Glyph Lefkowitz wrote:

>> (...) unless there's a way to link to projects from outside I won't do that one just yet.
> 
> There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.

Ok, I created the project and even imported the code, although it won't really be developed from there, maybe I'll even remove it from it in the future :).

https://launchpad.net/turtl

But the project is simple enough that it doesn't need so much development time devoted to it.

-- 
Valentino Volonghi
http://www.adroll.com



From glyph at twistedmatrix.com  Wed Aug 17 16:21:15 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 17 Aug 2011 16:21:15 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
Message-ID: <A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>


On Aug 17, 2011, at 4:15 PM, Valentino Volonghi wrote:

> On 17 Aug 2011, at 13:10, Glyph Lefkowitz wrote:
> 
>>> (...) unless there's a way to link to projects from outside I won't do that one just yet.
>> 
>> There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.
> 
> Ok, I created the project and even imported the code, although it won't really be developed from there, maybe I'll even remove it from it in the future :).
> 
> https://launchpad.net/turtl
> 
> But the project is simple enough that it doesn't need so much development time devoted to it.

Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.

Thanks again!

-g

From dialtone at gmail.com  Wed Aug 17 17:09:24 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 14:09:24 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
	<A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
Message-ID: <E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>

On 17 Aug 2011, at 13:21, Glyph Lefkowitz wrote:

> Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.
> 
> Thanks again!


I did that already.

https://launchpad.net/turtl

I see "Part of: tx" in the page.

-- 
Valentino Volonghi
http://www.adroll.com



From glyph at twistedmatrix.com  Thu Aug 18 03:06:25 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 18 Aug 2011 03:06:25 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
	<A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
	<E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>
Message-ID: <CBD266AF-4EED-4BE7-B721-E9B43714436A@twistedmatrix.com>


On Aug 17, 2011, at 5:09 PM, Valentino Volonghi wrote:

> On 17 Aug 2011, at 13:21, Glyph Lefkowitz wrote:
> 
>> Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.
>> 
>> Thanks again!
> 
> 
> I did that already.
> 
> https://launchpad.net/turtl
> 
> I see "Part of: tx" in the page.
> 

I guess something was cached somewhere; I can see it now.  Thanks again!

From ychan at quova.com  Fri Aug 19 14:43:10 2011
From: ychan at quova.com (Osborn Chan)
Date: Fri, 19 Aug 2011 18:43:10 +0000
Subject: [Twisted-Python] SFTP Server sample
Message-ID: <CA73FCB5.13D5%ychan@quova.com>

Hi,

I am a newbie in twisted and python.
I would like to create a python SFTP server with twisted, but I cannot find any sample.

Can someone give me some advise?

Thanks,

Osborn



From kaosat.dev at gmail.com  Sat Aug 20 17:08:52 2011
From: kaosat.dev at gmail.com (Mark "Ckaos" Moissette)
Date: Sat, 20 Aug 2011 23:08:52 +0200
Subject: [Twisted-Python] Custom protocol : good practices and complexity?
Message-ID: <CAFGgJa19v6N2jYMmJ_pXev0xGiTFNAbTcukbgODzKJzqjJ3O8w@mail.gmail.com>

I am currently working on a control system for Arduino type devices using
Twisted,and have a bit of a design issue

Hello everyone!

I am currently working on a control system for Arduino type devices using
Twisted,and have a bit of a design issue

Here is how things are currently: (sorry in advance, might be a bit long)

   1. to handle different type of devices (each having a different firmware
   & communication protocol ) i have a designed a "driver" system :
      - each driver is made of :
         - a "hardware handler class" : a wrapper around Twsited's
*serial* class
         with a few added helper methods
         - a custom serial protocol

2- While implementing drivers for Reprap 3d printers (also based on arduino,
also using a serial connection) with rather specific protocols (generally
containing comands like  *enqueue* point, *set* temperature etc), i have
started to wonder if i am placing the methods for handling those features
(each having specific commands) in the right place..

This all leads me to a few questions:

While all things are working right now,I am not quite sure about the "good
practices" as far asTwisted protocols go , but having looked through the
documentation / code of quite a few of them, it seems they tend to have
relatively few methods/keep it simple.

   - is this always the case? should the protocol *only* be used for very
   low level functions and in/out formatting and communication ?
   - certain devices i want to manage have very clearly defined protocols
   (Makerbot etc), should i consider general protocol specifications to be a
   different thing then the actual Twisted protocol classes i am creating ?

Any advice, tips and pointers are more than welcome ! Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110820/4ec2bb21/attachment.htm 

From exarkun at twistedmatrix.com  Sun Aug 21 00:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Aug 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1313899524.06.1885187868@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110821/4df47e0b/attachment-0001.htm 

From drew.smathers at gmail.com  Mon Aug 22 15:36:46 2011
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 22 Aug 2011 15:36:46 -0400
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA73FCB5.13D5%ychan@quova.com>
References: <CA73FCB5.13D5%ychan@quova.com>
Message-ID: <CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>

On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
> Hi,
>
> I am a newbie in twisted and python.
> I would like to create a python SFTP server with twisted, but I cannot find any sample.
>
> Can someone give me some advise?
>

I don't believe there are any examples of building an SFTP server
aimed at newcomers to twisted and python but there are existing
implementations in the wild--which might honestly be difficult to
digest if you don't know python well enough. I think zope at one time
has SFTP server based on twisted (which I can't seem to summon with
google) and there's also SFTP server implementation in tahoe-lafs
(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends/sftpd.py).

-Drew


From jstpierre at mecheye.net  Mon Aug 22 15:50:16 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Aug 2011 15:50:16 -0400
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
Message-ID: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>

What about twisted.conch.ssh.filetransfer? Is that not SFTP?

On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
>> Hi,
>>
>> I am a newbie in twisted and python.
>> I would like to create a python SFTP server with twisted, but I cannot find any sample.
>>
>> Can someone give me some advise?
>>
>
> I don't believe there are any examples of building an SFTP server
> aimed at newcomers to twisted and python but there are existing
> implementations in the wild--which might honestly be difficult to
> digest if you don't know python well enough. I think zope at one time
> has SFTP server based on twisted (which I can't seem to summon with
> google) and there's also SFTP server implementation in tahoe-lafs
> (https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends/sftpd.py).
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
? Jasper


From jeff at ocjtech.us  Mon Aug 22 16:02:25 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 22 Aug 2011 15:02:25 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
Message-ID: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>

I'm re-writing a client that downloads some data from a 3rd party
using SFTP.  The old client was written using Paramiko but I'd like to
rewrite it using Twisted and Conch.  Right now I'm running into an
issue trying to get a directory listing from the remote server:

2011-08-22 13:35:03-0500 [SSHChannel session (0) on SSHService
ssh-connection on _WrappingProtocol,client] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib64/python2.7/site-packages/twisted/python/log.py",
line 84, in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/log.py",
line 69, in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/context.py",
line 118, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/context.py",
line 81, in callWithContext
	    return func(*args,**kw)
	--- <exception caught here> ---
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/filetransfer.py",
line 53, in dataReceived
	    f(data)
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/filetransfer.py",
line 711, in packet_STATUS
	    msg, data = getNS(data)
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/common.py",
line 36, in getNS
	    l, = struct.unpack('!L',s[c:c+4])
	struct.error: unpack requires a string argument of length 4

The problem seems to be that the remote SFTP implementation isn't
returning complete status response message - it doesn't include the
error message and the language identifier.  I made a quite ugly
workaround:

diff --git a/twisted/conch/ssh/filetransfer.py b/twisted/conch/ssh/filetransfer.
index 81a86fd..ed55b27 100644
--- a/twisted/conch/ssh/filetransfer.py
+++ b/twisted/conch/ssh/filetransfer.py
@@ -708,8 +708,15 @@ class FileTransferClient(FileTransferBase):
         d, data = self._parseRequest(data)
         code, = struct.unpack('!L', data[:4])
         data = data[4:]
-        msg, data = getNS(data)
-        lang = getNS(data)
+        if len(data) >= 4:
+            msg, data = getNS(data)
+            if len(data) >= 4:
+                lang = getNS(data)
+            else:
+                lang = ''
+        else:
+            msg = ''
+            lang = ''
         if code == FX_OK:
             d.callback((msg, lang))
         elif code == FX_EOF:

Looking through the Paramiko code[1] it looks like it pads SFTP
messages that are shorter than expected with null bytes.  From what I
saw in the  SFTP I-D[2], a status message that doesn't include the
error message and language code could be construed as legal even
though they are not specifically marked as optional.


[1] https://github.com/robey/paramiko/blob/master/paramiko/message.py#L103
[2] http://tools.ietf.org/html/draft-ietf-secsh-filexfer-13#section-4

-- 
Jeff Ollie


From _ at lvh.cc  Mon Aug 22 16:17:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Aug 2011 22:17:56 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
	<CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
Message-ID: <CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>

Yes. It implements SFTP pretty much the way documents SFTP. Unfortunately.

Let's just say that SFTP is not the easiest of protocols when you just want
something like os/shutil but remote-ier.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110822/ff150eed/attachment.htm 

From _ at lvh.cc  Mon Aug 22 16:24:46 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Aug 2011 22:24:46 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
	<CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
	<CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>
Message-ID: <CAE_Hg6aMJhNyLw35w2mOBxm+oOcmuaMcbupDmtEbUsgKOJok+A@mail.gmail.com>

Oops, pressed enter too soon:

On Mon, Aug 22, 2011 at 10:17 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Yes. It implements SFTP pretty much the way ** the specification **
> documents SFTP. Unfortunately.
>


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110822/0e997728/attachment.htm 

From ychan at quova.com  Mon Aug 22 16:31:26 2011
From: ychan at quova.com (Osborn Chan)
Date: Mon, 22 Aug 2011 20:31:26 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
Message-ID: <CA780869.13F6%ychan@quova.com>

Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
subsystem under UnixConchUser.

        self.subsystemLookup.update({"sftp":
filetransfer.FileTransferServer})

However, I was able to start a ssh shell by using SSHFactory and
UnixSSHReam, but I was not able to start SFTP as sub system.

Do I need to do anything explicitly to start sftp subsystem?

Thanks,

-Osborn
newbie in Python and Twisted.


On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net> wrote:

>What about twisted.conch.ssh.filetransfer? Is that not SFTP?
>
>On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com>
>wrote:
>> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
>>> Hi,
>>>
>>> I am a newbie in twisted and python.
>>> I would like to create a python SFTP server with twisted, but I cannot
>>>find any sample.
>>>
>>> Can someone give me some advise?
>>>
>>
>> I don't believe there are any examples of building an SFTP server
>> aimed at newcomers to twisted and python but there are existing
>> implementations in the wild--which might honestly be difficult to
>> digest if you don't know python well enough. I think zope at one time
>> has SFTP server based on twisted (which I can't seem to summon with
>> google) and there's also SFTP server implementation in tahoe-lafs
>> 
>>(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
>>/sftpd.py).
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
>-- 
>  Jasper
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tobias.oberstein at tavendo.de  Mon Aug 22 17:09:00 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 22 Aug 2011 14:09:00 -0700
Subject: [Twisted-Python] RPC design questions
Message-ID: <CA78920C.4A4A%tobias.oberstein@tavendo.de>

I'm currently making some light-weight RPC/PubSub over WebSockets
using Twisted.

I have two design-like questions where I'd be happy for advice/options ...

The first is definitely Twisted related, the second not strictly, ..

Tobias


1)
I'd like to chain RPC calls, i.e.

self.call(23, "square").addCallback(self.call, "sqrt").addCallback(self.show)

https://github.com/oberstet/Autobahn/blob/dev-rpc/demo/rpc/simple/simple_client.py

self.call(<arg>, <procedure>) will return a deferred, <arg> is the marshalled argument
for the RPC, and <procedure> is the remote procedure identifier.

Now, the nice thing is, I can chain the result from one call to the next like in the
example above.

What I find less nice is that I have to have that order : <arg>, <procedure>
since the result of the first deferred will be passed as the first argument to
the second, and only then will the additional arguments be passed (in above
example the "sqrt")

How can I retain the - which I find - natural order for arguments?

self.call(<procedure>, <arg>)
self.call("square", 6).addCallback(self.call, "sqrt").addCallback(self.show)

=> not working, the 2nd self.call receives 36, "sqrt" ..


2)
The server side methods a hooked up using decorators, like

class SimpleServerProtocol(AutobahnServerProtocol):

   @AutobahnRpc
   def square(self, arg):
      return arg * arg


https://github.com/oberstet/Autobahn/blob/dev-rpc/demo/rpc/simple/simple_server.py

Here, AutobahnServerProtocol derives (indirectly) from Twisted Protocol.

The decorator will register the method for RPC under "square".

https://github.com/oberstet/Autobahn/blob/dev-rpc/lib/python/autobahn/autobahn.py

That is all nice and simple, however I am wondering if it's a good idea to
do that auto-registering on a Protocol derived class.

I mean, the alternative could be having the user call something like

registerRpcObject(<any class instance with RPC decorators>, <base URI>)

in Protocol.connectionMade(), which then would auto-register all decorated
methods in <any class instance ..>

What do you think would be better?






-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110822/c67ce97a/attachment.htm 

From michal.mach at gmail.com  Mon Aug 22 18:31:00 2011
From: michal.mach at gmail.com (Michal Mach)
Date: Tue, 23 Aug 2011 00:31:00 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA780869.13F6%ychan@quova.com>
References: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
	<CA780869.13F6%ychan@quova.com>
Message-ID: <CAPrioPNp9dyhgqNM4n+pP2hXMbS9mv=Uw06yg8xMVZ3TEH7kKA@mail.gmail.com>

Not sure what you mean, but here is a basic example:

from zope.interface import implements

from twisted.application import service, internet
from twisted.conch.ssh.keys import Key
from twisted.conch.ssh.factory import SSHFactory
from twisted.conch.unix import UnixSSHRealm
from twisted.cred.checkers import ICredentialsChecker
from twisted.cred.credentials import IUsernamePassword
from twisted.cred.portal import Portal


def get_key(path):
    return Key.fromString(data=open(path).read())


class DummyChecker(object):
    credentialInterfaces = (IUsernamePassword,)
    implements(ICredentialsChecker)

    def requestAvatarId(self, credentials):
        return credentials.username


def makeService():
    public_key = get_key('id_rsa.pub')
    private_key = get_key('id_rsa')

    factory = SSHFactory()
    factory.privateKeys = {'ssh-rsa': private_key}
    factory.publicKeys = {'ssh-rsa': public_key}
    factory.portal = Portal(UnixSSHRealm())
    factory.portal.registerChecker(DummyChecker())

    return internet.TCPServer(2200, factory)


application = service.Application("sftp server")
sftp_server = makeService()
sftp_server.setServiceParent(application)


Put this content into a file like sftp.tac
The keys can be generated by ckeygen utility which is part of Twisted
(e.g. ckeygen -b 2048 -t rsa -f id_rsa)
and run with twistd -ny sftp.tac

If you want more background on Twisted conch i suggest the "Twisted Conch in
60 Seconds" series by
Jean-Paul Calderone on his blog http://as.ynchrono.us/

Michal Mach


On Mon, Aug 22, 2011 at 10:31 PM, Osborn Chan <ychan at quova.com> wrote:

> Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
> subsystem under UnixConchUser.
>
>        self.subsystemLookup.update({"sftp":
> filetransfer.FileTransferServer})
>
> However, I was able to start a ssh shell by using SSHFactory and
> UnixSSHReam, but I was not able to start SFTP as sub system.
>
> Do I need to do anything explicitly to start sftp subsystem?
>
> Thanks,
>
> -Osborn
> newbie in Python and Twisted.
>
>
> On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net> wrote:
>
> >What about twisted.conch.ssh.filetransfer? Is that not SFTP?
> >
> >On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com>
> >wrote:
> >> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
> >>> Hi,
> >>>
> >>> I am a newbie in twisted and python.
> >>> I would like to create a python SFTP server with twisted, but I cannot
> >>>find any sample.
> >>>
> >>> Can someone give me some advise?
> >>>
> >>
> >> I don't believe there are any examples of building an SFTP server
> >> aimed at newcomers to twisted and python but there are existing
> >> implementations in the wild--which might honestly be difficult to
> >> digest if you don't know python well enough. I think zope at one time
> >> has SFTP server based on twisted (which I can't seem to summon with
> >> google) and there's also SFTP server implementation in tahoe-lafs
> >>
> >>(
> https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
> >>/sftpd.py).
> >>
> >> -Drew
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> >--
> >  Jasper
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110823/fa0e3929/attachment-0001.htm 

From ychan at quova.com  Mon Aug 22 19:10:48 2011
From: ychan at quova.com (Osborn Chan)
Date: Mon, 22 Aug 2011 23:10:48 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAPrioPNp9dyhgqNM4n+pP2hXMbS9mv=Uw06yg8xMVZ3TEH7kKA@mail.gmail.com>
Message-ID: <CA782F82.1418%ychan@quova.com>

Hi Michal,

Thanks a lot!
It is a very nice working example, and it is good for newbie as well.

Regards,

Osborn

From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Date: Tue, 23 Aug 2011 00:31:00 +0200
To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Subject: Re: [Twisted-Python] SFTP Server sample

Not sure what you mean, but here is a basic example:

from zope.interface import implements

from twisted.application import service, internet
from twisted.conch.ssh.keys import Key
from twisted.conch.ssh.factory import SSHFactory
from twisted.conch.unix import UnixSSHRealm
from twisted.cred.checkers import ICredentialsChecker
from twisted.cred.credentials import IUsernamePassword
from twisted.cred.portal import Portal


def get_key(path):
    return Key.fromString(data=open(path).read())


class DummyChecker(object):
    credentialInterfaces = (IUsernamePassword,)
    implements(ICredentialsChecker)

    def requestAvatarId(self, credentials):
        return credentials.username


def makeService():
    public_key = get_key('id_rsa.pub')
    private_key = get_key('id_rsa')

    factory = SSHFactory()
    factory.privateKeys = {'ssh-rsa': private_key}
    factory.publicKeys = {'ssh-rsa': public_key}
    factory.portal = Portal(UnixSSHRealm())
    factory.portal.registerChecker(DummyChecker())

    return internet.TCPServer(2200, factory)


application = service.Application("sftp server")
sftp_server = makeService()
sftp_server.setServiceParent(application)


Put this content into a file like sftp.tac
The keys can be generated by ckeygen utility which is part of Twisted (e.g. ckeygen -b 2048 -t rsa -f id_rsa)
and run with twistd -ny sftp.tac

If you want more background on Twisted conch i suggest the "Twisted Conch in 60 Seconds" series by
Jean-Paul Calderone on his blog http://as.ynchrono.us/

Michal Mach


On Mon, Aug 22, 2011 at 10:31 PM, Osborn Chan <ychan at quova.com<mailto:ychan at quova.com>> wrote:
Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
subsystem under UnixConchUser.

       self.subsystemLookup.update({"sftp":
filetransfer.FileTransferServer})

However, I was able to start a ssh shell by using SSHFactory and
UnixSSHReam, but I was not able to start SFTP as sub system.

Do I need to do anything explicitly to start sftp subsystem?

Thanks,

-Osborn
newbie in Python and Twisted.


On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net<mailto:jstpierre at mecheye.net>> wrote:

>What about twisted.conch.ssh.filetransfer? Is that not SFTP?
>
>On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com<mailto:drew.smathers at gmail.com>>
>wrote:
>> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com<mailto:ychan at quova.com>> wrote:
>>> Hi,
>>>
>>> I am a newbie in twisted and python.
>>> I would like to create a python SFTP server with twisted, but I cannot
>>>find any sample.
>>>
>>> Can someone give me some advise?
>>>
>>
>> I don't believe there are any examples of building an SFTP server
>> aimed at newcomers to twisted and python but there are existing
>> implementations in the wild--which might honestly be difficult to
>> digest if you don't know python well enough. I think zope at one time
>> has SFTP server based on twisted (which I can't seem to summon with
>> google) and there's also SFTP server implementation in tahoe-lafs
>>
>>(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
>>/sftpd.py).
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
>--
>  Jasper
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________ Twisted-Python mailing list Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From mithrandi at mithrandi.net  Mon Aug 22 21:48:34 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 23 Aug 2011 03:48:34 +0200
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
Message-ID: <CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>

On Mon, Aug 22, 2011 at 11:09 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> self.call(<procedure>, <arg>)
> self.call("square", 6).addCallback(self.call, "sqrt").addCallback(self.show)

The easiest way to do this is probably:

from functools import partial
self.call("square", 6).addCallback(partial(self.call,
"sqrt")).addCallback(self.show)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From mayvimmer at fibertel.com.ar  Mon Aug 22 23:52:56 2011
From: mayvimmer at fibertel.com.ar (mayvimmer at fibertel.com.ar)
Date: Tue, 23 Aug 2011 00:52:56 -0300
Subject: [Twisted-Python] Basic problem with deferreds
Message-ID: <ec664582125f3.4e52f9e8@fibertel.com.ar>

Hi guys, 
 I'm new to twisted world and I'm facing what seems to be an easy problem but I cannot grasp it. I thought I have already undestood the deferred concept but obviously I still have a concept error I cannot pass:

I have a method with the following parameters: 1- an userid, 2- a security code, 3- a list of tuples composed by an object id and an object quantity. I need to check in a database if the user exists and he's active, if the security code exists and belongs to the user and for each object if it exists and then insert the submitted quantity in the database.
What I try to do is to check both user and security code just once and then loop the objects to verify them and insert. If user or sec_code are invalid, this should fail right away, otherwise perform the action and add the results to a list. No matter how I place the methods or how I call them when evaluating the user or the security code, I always get a Deferred object and I need the actual result so that the method continue to be executed or not, evaluating each object in the list. I thought that using the "callback" method this will fire the callbacks and give me the result, but I cannot find where I need to execute it.

Here is my code:

class ExampleObject(object):

    def get_userid(self, username):
        r1 = defer.Deferred()
        def cb(rs):
            if len(rs)==0:
                resp = u'The user is not in the database'
            else:
                resp = rs[0]['id']
            r1.callback(resp)
        r1 = self.conn_pool.runQuery('select id from users where '
                'username=?', (sql_safe(username),)).addCallback(cb)
        return r1

    def get_sec_code(self, sec_code):
        r2 = defer.Deferred()
        def cb(rs):
            if len(rs)==0:
                resp = u'The security code is invalid'
            else:
                resp = rs[0]['userid']
            r2.callback(resp)
        r2 = self.conn_pool.runQuery('select user_id from sec_codes where '
                'sec_code=?', (sql_safe(sec_code),)).addCallback(cb)
        return r2

    def grant_objs(self, username, sec_code, objects):
        errmsg = None

        def grant_obj(pobj, puser, psec_code):
            d = defer.Deferred()
            def cb(rs):
                if len(rs)==0:
                    d.callback(False)
                else:
                    d.callback(True)
            def cb2(rs):
                if rs:
                    self.conn_pool.runOperation('insert into inventory '\
                        '(user_id, obj_id, quantity, dateadded) values '\
                        '(?,?,?,?)', (pobj, pitem[0], pitemp[1],
                        datetime.datetime.now())).callback(True)
                else:
                    d.callback('Object with id %d does not exist' % (pobj[0]))
            self.conn_pool.runQuery("select id, ? as quantity from objects where "
                    "id=?", (sql_safe(pobj[0]), sql_safe(pobj[1]))).\
                    addCallback(cb).addCallback(cb2)

        defs = []
        def cb(value): return value
        for i in enumerate(items):
            if i[0]==0:
		#	
                # I need the result right now, however I always get a Deferred object. 
		#
                u_ = self.get_userid(username).addCallback(cb)
                t_ = self.get_sec_code(sec_code).addCallback(cb)
                if not isinstance(u_, int):
                    errmsg = u_
                elif not isinstance(t_, int):
                    errmsg = t_
                elif u_!=t_:
                    errmsg = u'Your security code does not belong to the user'
            if errmsg is not None:
                defs.append(errmsg)
                break
            res = grant_obj(i[1], u_, t_)
            defs.append(res)
        return defs

TIA for any pointers you can give me!




From michaelnt at gmail.com  Tue Aug 23 02:36:16 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 23 Aug 2011 07:36:16 +0100
Subject: [Twisted-Python] Basic problem with deferreds
In-Reply-To: <ec664582125f3.4e52f9e8@fibertel.com.ar>
References: <ec664582125f3.4e52f9e8@fibertel.com.ar>
Message-ID: <CA+A=P1r5V3eQ-W-yQSujceOKQ_SApZ6ibstSnD7Fi8JWOX_d2A@mail.gmail.com>

On 23 August 2011 04:52,  <mayvimmer at fibertel.com.ar> wrote:
<snip>
> action and add the results to a list. No matter how I place the methods or how I call them when
> evaluating the user or the security code, I always get a Deferred object and I need the actual result
> so that the method continue to be executed or not, evaluating each object in the list. I thought that
> using the "callback" method this will fire the callbacks and give me the result, but I cannot find
> where I need to execute it.

You want the reactor to callback the deferred when the SQL query has
finished rather than you triggering the callback method.

Your get_userid function returns a deferred so if you want something
to happen after that you must attach it as a callback to this
deferred.

You could try something like the following that will run cb with the
result of get_userid and get_sec_code.

d1 = get_userid()
d2 = get_sec_code()
d = defer.DeferredList([d1, d2])
d.addCallback(cb)


>
> Here is my code:
>
> class ExampleObject(object):
>
> ? ?def get_userid(self, username):
> ? ? ? ?r1 = defer.Deferred()
> ? ? ? ?def cb(rs):
> ? ? ? ? ? ?if len(rs)==0:
> ? ? ? ? ? ? ? ?resp = u'The user is not in the database'
> ? ? ? ? ? ?else:
> ? ? ? ? ? ? ? ?resp = rs[0]['id']
> ? ? ? ? ? ?r1.callback(resp)
> ? ? ? ?r1 = self.conn_pool.runQuery('select id from users where '
> ? ? ? ? ? ? ? ?'username=?', (sql_safe(username),)).addCallback(cb)
> ? ? ? ?return r1
>
> ? ?def get_sec_code(self, sec_code):
> ? ? ? ?r2 = defer.Deferred()
> ? ? ? ?def cb(rs):
> ? ? ? ? ? ?if len(rs)==0:
> ? ? ? ? ? ? ? ?resp = u'The security code is invalid'
> ? ? ? ? ? ?else:
> ? ? ? ? ? ? ? ?resp = rs[0]['userid']
> ? ? ? ? ? ?r2.callback(resp)
> ? ? ? ?r2 = self.conn_pool.runQuery('select user_id from sec_codes where '
> ? ? ? ? ? ? ? ?'sec_code=?', (sql_safe(sec_code),)).addCallback(cb)
> ? ? ? ?return r2
>
> ? ?def grant_objs(self, username, sec_code, objects):
> ? ? ? ?errmsg = None
>
> ? ? ? ?def grant_obj(pobj, puser, psec_code):
> ? ? ? ? ? ?d = defer.Deferred()
> ? ? ? ? ? ?def cb(rs):
> ? ? ? ? ? ? ? ?if len(rs)==0:
> ? ? ? ? ? ? ? ? ? ?d.callback(False)
> ? ? ? ? ? ? ? ?else:
> ? ? ? ? ? ? ? ? ? ?d.callback(True)
> ? ? ? ? ? ?def cb2(rs):
> ? ? ? ? ? ? ? ?if rs:
> ? ? ? ? ? ? ? ? ? ?self.conn_pool.runOperation('insert into inventory '\
> ? ? ? ? ? ? ? ? ? ? ? ?'(user_id, obj_id, quantity, dateadded) values '\
> ? ? ? ? ? ? ? ? ? ? ? ?'(?,?,?,?)', (pobj, pitem[0], pitemp[1],
> ? ? ? ? ? ? ? ? ? ? ? ?datetime.datetime.now())).callback(True)
> ? ? ? ? ? ? ? ?else:
> ? ? ? ? ? ? ? ? ? ?d.callback('Object with id %d does not exist' % (pobj[0]))
> ? ? ? ? ? ?self.conn_pool.runQuery("select id, ? as quantity from objects where "
> ? ? ? ? ? ? ? ? ? ?"id=?", (sql_safe(pobj[0]), sql_safe(pobj[1]))).\
> ? ? ? ? ? ? ? ? ? ?addCallback(cb).addCallback(cb2)
>
> ? ? ? ?defs = []
> ? ? ? ?def cb(value): return value
> ? ? ? ?for i in enumerate(items):
> ? ? ? ? ? ?if i[0]==0:
> ? ? ? ? ? ? ? ?#
> ? ? ? ? ? ? ? ?# I need the result right now, however I always get a Deferred object.
> ? ? ? ? ? ? ? ?#
> ? ? ? ? ? ? ? ?u_ = self.get_userid(username).addCallback(cb)
> ? ? ? ? ? ? ? ?t_ = self.get_sec_code(sec_code).addCallback(cb)
> ? ? ? ? ? ? ? ?if not isinstance(u_, int):
> ? ? ? ? ? ? ? ? ? ?errmsg = u_
> ? ? ? ? ? ? ? ?elif not isinstance(t_, int):
> ? ? ? ? ? ? ? ? ? ?errmsg = t_
> ? ? ? ? ? ? ? ?elif u_!=t_:
> ? ? ? ? ? ? ? ? ? ?errmsg = u'Your security code does not belong to the user'
> ? ? ? ? ? ?if errmsg is not None:
> ? ? ? ? ? ? ? ?defs.append(errmsg)
> ? ? ? ? ? ? ? ?break
> ? ? ? ? ? ?res = grant_obj(i[1], u_, t_)
> ? ? ? ? ? ?defs.append(res)
> ? ? ? ?return defs
>
> TIA for any pointers you can give me!
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From lists at collab.nl  Tue Aug 23 09:21:18 2011
From: lists at collab.nl (Thijs Triemstra)
Date: Tue, 23 Aug 2011 15:21:18 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA782F82.1418%ychan@quova.com>
References: <CA782F82.1418%ychan@quova.com>
Message-ID: <4E53A94E.5020000@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 08/23/2011 01:10 AM, Osborn Chan wrote:
> Hi Michal,
> 
> Thanks a lot!
> It is a very nice working example, and it is good for newbie as well.
> 
> Regards,
> 
> Osborn

I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
be included in the documentation.

Cheers,

Thijs
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
=WET7
-----END PGP SIGNATURE-----


From jeff at ocjtech.us  Tue Aug 23 09:49:39 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Tue, 23 Aug 2011 08:49:39 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
Message-ID: <CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>

On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>
> The problem seems to be that the remote SFTP implementation isn't
> returning complete status response message - it doesn't include the
> error message and the language identifier. ?I made a quite ugly
> workaround:

Wow... while googling for some other twisted/sftp related information,
I came across this:

http://twistedmatrix.com/trac/ticket/3009

-- 
Jeff Ollie


From tobias.oberstein at tavendo.de  Tue Aug 23 10:37:34 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 23 Aug 2011 07:37:34 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>

> > self.call(<procedure>, <arg>)
> > self.call("square", 6).addCallback(self.call,
> > "sqrt").addCallback(self.show)
> 
> The easiest way to do this is probably:
> 
> from functools import partial
> self.call("square", 6).addCallback(partial(self.call,
> "sqrt")).addCallback(self.show)

Thanks alot! Did not knew about partial .. I checked the solution you proposed: works.

It rectifies the arg order, but introduces more boilerplate to write (and making
usage convenient is my goal).

===

In the meantime, I've come up with 3 others options:

No chaining (no problem here):

      self.call("add", 23*23, 5).addCallback(self.show)

Chaining Option 1:

      self.call("square", 23).addCallback(self.rcall, "add", 5).addCallback(self.show)

Chaining Option 2:

      self.call("square", 23).addCallback(lambda res: self.call("add", res, 5)).addCallback(self.show)

Chaining Option 3:

      self.call("square", 23).call("add", 5).addCallback(self.show)


Option 1
=======

Makes use of rcall() vs call()  where rcall() does the reordering of arguments

   def rcall(self, *args):
      a = []
      a.append(args[1]) # procedure ID
      if args[0]:
         a.append(args[0]) # result from previous deferred
         a.extend(args[2:]) # new args
      return self.call(*a)

Pro:	terse, can handle callback&errback
Con:	user needs to remember to use rcall() not call()


Option 2
======
Similar to yours .. just using lambda.

Pro:	standard Python (as yours), can handle callbacks&errbacks
Con:	verbose


Option 3
=======

Makes use of

class AutobahnDeferred(Deferred):
   def call(self, *args):
      return self.addCallback(self.protocol.rcall, *args)

Pro:	most terse
Con:	only supports single callback no errback

====

Currently my thinking is: why not provide all variants?

Anything why I shouldn't do?


> mithrandi, i Ainil en-Balandor, a faer Ambar

ok. nice;) but what does it mean?


> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From ychan at quova.com  Tue Aug 23 13:54:04 2011
From: ychan at quova.com (Osborn Chan)
Date: Tue, 23 Aug 2011 17:54:04 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <4E53A94E.5020000@collab.nl>
Message-ID: <CA7936A0.145E%ychan@quova.com>

FYI:

The sample code is working on my side, but I had a problem to list the
files with permission issue.
I guessed it may be a issue related to my server setting. However, it
would be good if we have another person to test the code as well.

Thanks

On 8/23/11 6:21 AM, "Thijs Triemstra" <lists at collab.nl> wrote:

>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>On 08/23/2011 01:10 AM, Osborn Chan wrote:
>> Hi Michal,
>> 
>> Thanks a lot!
>> It is a very nice working example, and it is good for newbie as well.
>> 
>> Regards,
>> 
>> Osborn
>
>I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
>be included in the documentation.
>
>Cheers,
>
>Thijs
>-----BEGIN PGP SIGNATURE-----
>Version: GnuPG v1.4.11 (GNU/Linux)
>
>iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
>cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
>=WET7
>-----END PGP SIGNATURE-----
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Aug 23 14:27:22 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2011 14:27:22 -0400
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
	<CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
Message-ID: <F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>


On Aug 23, 2011, at 9:49 AM, Jeffrey Ollie wrote:

> On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>> 
>> The problem seems to be that the remote SFTP implementation isn't
>> returning complete status response message - it doesn't include the
>> error message and the language identifier.  I made a quite ugly
>> workaround:
> 
> Wow... while googling for some other twisted/sftp related information,
> I came across this:
> 
> http://twistedmatrix.com/trac/ticket/3009

Looks like there's a patch and everything!  It just needs some tests!  What are you waiting for! :)

-glyph

From glyph at twistedmatrix.com  Tue Aug 23 14:30:29 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2011 14:30:29 -0400
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:

> class AutobahnDeferred(Deferred):
>   def call(self, *args):
>      return self.addCallback(self.protocol.rcall, *args)
> 
> Pro:	most terse
> Con:	only supports single callback no errback

Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

> Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110823/f9888ba2/attachment.htm 

From tobias.oberstein at tavendo.de  Tue Aug 23 15:13:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 23 Aug 2011 12:13:48 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
	<7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5D142@EXVMBX020-12.exch020.serverdata.net>

Thanks for your advice .. that's what I was looking for;)

Makes sense, I'll stick to your advice, kick the subclassing approach and the stuff with the reordering version rcall().

That leaves "partial" and "lambda"

      # Option 1 : prints 31
      d2 = self.call("square", 6).addCallback(lambda res: self.call("sub", res, 5)).addCallback(self.show)

      # Option 3 : prints -31
      d4 = self.call("square", 6).addCallback(partial(self.call, "sub", 5)).addCallback(self.show)

Lambda is the most general, since it can insert the previous deferred's result anywhere in the next call.
Partial only simulates append result to end of args of next call.
But lambda is also most verbose.

I'll sleep one night and then see if I document and endorse both or only lambda.

Obviously, I can't hinder anyone using both. Built in stuff.

Thanks again,
Tobias



Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Dienstag, 23. August 2011 20:30
An: Twisted general discussion
Betreff: Re: [Twisted-Python] RPC design questions


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:


class AutobahnDeferred(Deferred):
  def call(self, *args):
     return self.addCallback(self.protocol.rcall, *args)

Pro:    most terse
Con:    only supports single callback no errback


Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110823/bd07c6cd/attachment.htm 

From michal.mach at gmail.com  Tue Aug 23 21:14:25 2011
From: michal.mach at gmail.com (Michal Mach)
Date: Wed, 24 Aug 2011 03:14:25 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA7936A0.145E%ychan@quova.com>
References: <4E53A94E.5020000@collab.nl>
	<CA7936A0.145E%ychan@quova.com>
Message-ID: <CAPrioPMUcDGYYmvrb64Ht7N9_Y51m9Z7ZYU1YakvOFaY3bCGxg@mail.gmail.com>

Are you getting the error "Operation not permitted" when you try to do
directory listing?
This can be caused by running the SFTP server under a user which can't
change his
effective group and uid to 0 (uid of root user).
This is because when you login as user "foo" the server needs to execute all
subsequent
commands as this user (e.g. when you upload a file this file should be owned
by the user "foo")
and therefore temporary changing to user "foo".
This is exactly what the default implementation of UnixConchUser wants to
do, but fails and therefore you got
that error.

Regards,
Michal Mach


On Tue, Aug 23, 2011 at 7:54 PM, Osborn Chan <ychan at quova.com> wrote:

> FYI:
>
> The sample code is working on my side, but I had a problem to list the
> files with permission issue.
> I guessed it may be a issue related to my server setting. However, it
> would be good if we have another person to test the code as well.
>
> Thanks
>
> On 8/23/11 6:21 AM, "Thijs Triemstra" <lists at collab.nl> wrote:
>
> >-----BEGIN PGP SIGNED MESSAGE-----
> >Hash: SHA1
> >
> >On 08/23/2011 01:10 AM, Osborn Chan wrote:
> >> Hi Michal,
> >>
> >> Thanks a lot!
> >> It is a very nice working example, and it is good for newbie as well.
> >>
> >> Regards,
> >>
> >> Osborn
> >
> >I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
> >be included in the documentation.
> >
> >Cheers,
> >
> >Thijs
> >-----BEGIN PGP SIGNATURE-----
> >Version: GnuPG v1.4.11 (GNU/Linux)
> >
> >iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
> >cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
> >=WET7
> >-----END PGP SIGNATURE-----
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/572632d3/attachment-0001.htm 

From ychan at quova.com  Tue Aug 23 22:14:31 2011
From: ychan at quova.com (Osborn Chan)
Date: Wed, 24 Aug 2011 02:14:31 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAPrioPMUcDGYYmvrb64Ht7N9_Y51m9Z7ZYU1YakvOFaY3bCGxg@mail.gmail.com>
Message-ID: <CA79AB10.1476%ychan@quova.com>

Hi Michal,

Actually, I was running the example under root. (sudo)
I was able to list/put/get file for my non-root user after login.
However, listing (ls) doesn't work on top level directory (e.g. /home/ychan), but it works fine anywhere else.

The following shows the issue.

ychan at ubuntu:~/sandbox$ sftp -P 2200 localhost
ychan at localhost's password:
Connected to localhost.
sftp> ls
Couldn't read directory: Permission denied

I guess there may be some issue related to my machine, and I may check it later.

Thanks for you help,

Osborn

From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Date: Wed, 24 Aug 2011 03:14:25 +0200
To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Subject: Re: [Twisted-Python] SFTP Server sample

e server needs to execute all subsequent
commands as this user (e.g. when you upload a file this file should be owned by the user "foo")
and therefore temporary changing to user "foo"


From adi at roiban.ro  Wed Aug 24 14:17:03 2011
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 24 Aug 2011 21:17:03 +0300
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA79AB10.1476%ychan@quova.com>
References: <CA79AB10.1476%ychan@quova.com>
Message-ID: <1314209823.11871.31.camel@pp>

On Wed, 2011-08-24 at 02:14 +0000, Osborn Chan wrote:
> Hi Michal,
> 
> Actually, I was running the example under root. (sudo)
> I was able to list/put/get file for my non-root user after login.
> However, listing (ls) doesn't work on top level directory (e.g. /home/ychan), but it works fine anywhere else.
> 
> The following shows the issue.
> 
> ychan at ubuntu:~/sandbox$ sftp -P 2200 localhost
> ychan at localhost's password:
> Connected to localhost.
> sftp> ls
> Couldn't read directory: Permission denied
> 
> I guess there may be some issue related to my machine, and I may check it later.

Your home folder most probably contains some special files/pipes for
which Twisted can not read the attributes.

When listing a folder, twisted FTP and SFTP servers are querying for
file attributes and they will return permission denied if one of the
file attributes can not be retrieved.

I am not sure if this is a bug or a feature.

Cheers,
Adi

> Osborn
> 
> From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
> Date: Wed, 24 Aug 2011 03:14:25 +0200
> To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
> Subject: Re: [Twisted-Python] SFTP Server sample
> 
> e server needs to execute all subsequent
> commands as this user (e.g. when you upload a file this file should be owned by the user "foo")
> and therefore temporary changing to user "foo"
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From tobias.oberstein at tavendo.de  Wed Aug 24 18:22:32 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 15:22:32 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC design
 questions)
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <CA7B4648.4B2F%tobias.oberstein@tavendo.de>

I follow Glyphs advice and only keep the lambda version with standard Twisted Deferred.

However, I've got a (I believe) more serious "design" problem.

The RPC stuff works in Twisted, but also from JavaScript.

So I have 2 audiences (Twisted and JS developers).

On JS, I use the Deferreds that come standard with jQuery since 1.5.

Now compare the following Twisted code (self.call does the RPC and returns a Twisted Deferred):

      # prints 23
     d2 = self.call("square", 23).addCallback(lambda res: \
                        self.call("sqrt", res)).addCallback(self.show)

     # prints 23
     d3 = self.call("square", 23).addCallback(lambda res: \
                        self.call("sqrt", res).addCallback(self.show))

(note the subtle difference in bracketing)

with the following JS

            // prints 529
           sess.call("square", 23).then(function(res) {
                                            return sess.call("sqrt", res);
                                        }).then(console.log);

           // prints 23
           sess.call("square", 23).then(function(res) {
                                            sess.call("sqrt", res).then(console.log);
                                        });

===

The JS is structurally/syntactically similar to the Py version.

However they behave differently.

There seems to be a fundamental difference between Twisted and jQuery Deferreds.

When calling then() on a jQuery Deferred D, it seems to return D, not any Deferred that might
be returned within the handler within then().
http://api.jquery.com/deferred.then

Whereas the Twisted Deferred addCallback() returns the inner Deferred.

Am I getting something wrong?

I'd be glad on any hints/clarification whats going on here ..

Tobias

==

The complete examples are on:

JS:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_client.html

Py Client:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_client.py

Py Server:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_server.py

Library:
https://github.com/oberstet/Autobahn/tree/master/lib/python
=> python setup.py install




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/e0e78d92/attachment.htm 

From washort at twistedmatrix.com  Wed Aug 24 18:36:59 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 24 Aug 2011 15:36:59 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B4648.4B2F%tobias.oberstein@tavendo.de>
References: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
	<CA7B4648.4B2F%tobias.oberstein@tavendo.de>
Message-ID: <CAEzUHiOgLreKDP756zc-TSqvtT-iB2dZxOGaCPjvmuV=4=CH+A@mail.gmail.com>

No, this is something jQuery and CommonJS got wrong; callbacks don't chain
in their implementation.

Firing a jQuery promise invokes each callback in order with the same
argument. Firing a Deferred in Twisted invokes the first callback then
passes its return value as the arg to the next callback, and so forth.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/ab51b207/attachment.htm 

From tobias.oberstein at tavendo.de  Wed Aug 24 18:52:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 15:52:48 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CAEzUHiOgLreKDP756zc-TSqvtT-iB2dZxOGaCPjvmuV=4=CH+A@mail.gmail.com>
Message-ID: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>

Ok. This is most unpleasant. In particular since my options then are:

1) write my own, sane (Twisted like, which I think is the sane way) JS deferred, not use jQuery/CommonJS (which everyone else does)
2) open the door for users running into issues when they do both Twisted & JS/jQuery and don't understand the subtle difference

bad.

of course not a Twisted mailing list topic anymore .. I'll go to jQuery list.

Thanks!
Tobias


On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:

No, this is something jQuery and CommonJS got wrong; callbacks don't chain in their implementation.

Firing a jQuery promise invokes each callback in order with the same argument. Firing a Deferred in Twisted invokes the first callback then passes its return value as the arg to the next callback, and so forth.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/534264cb/attachment.htm 

From tobias.oberstein at tavendo.de  Wed Aug 24 19:30:07 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 16:30:07 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
Message-ID: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>

Found something: it seems in jQuery 1.6 they have introduced something which corresponds
more closely to Twisted Deferreds callback/errback chains:

            // prints 23
           sess.call("square", 23).pipe(function(res) {
                                            return sess.call("sqrt", res);
                                        }).pipe(console.log);

http://api.jquery.com/deferred.pipe/

I am still wondering why they called the other stuff "then()" when it's not then, but "also()"
and "pipe()" is the real <then> ;)

And now they have then() _and_ pipe().

This is all asking for confusion. - Whatever.

Tobias


On 25.08.11 00:52, "Tobias Oberstein" <tobias.oberstein at tavendo.de> wrote:

Ok. This is most unpleasant. In particular since my options then are:

1) write my own, sane (Twisted like, which I think is the sane way) JS deferred, not use jQuery/CommonJS (which everyone else does)
2) open the door for users running into issues when they do both Twisted & JS/jQuery and don't understand the subtle difference

bad.

of course not a Twisted mailing list topic anymore .. I'll go to jQuery list.

Thanks!
Tobias


On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:

No, this is something jQuery and CommonJS got wrong; callbacks don't chain in their implementation.

Firing a jQuery promise invokes each callback in order with the same argument. Firing a Deferred in Twisted invokes the first callback then passes its return value as the arg to the next callback, and so forth.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/c3bcd24b/attachment.htm 

From jstpierre at mecheye.net  Wed Aug 24 19:36:39 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 24 Aug 2011 19:36:39 -0400
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
Message-ID: <CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>

As far as I know, Dojo's Deferreds are a direct port of Twisted's.

On Wed, Aug 24, 2011 at 7:30 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> Found something: it seems in jQuery 1.6 they have introduced something which
> corresponds
> more closely to Twisted Deferreds callback/errback chains:
>
> ????????????// prints 23
> ???????????sess.call("square", 23).pipe(function(res) {
> ????????????????????????????????????????????return sess.call("sqrt", res);
> ????????????????????????????????????????}).pipe(console.log);
>
> http://api.jquery.com/deferred.pipe/
>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)
>
> And now they have then() _and_ pipe().
>
> This is all asking for confusion. - Whatever.
>
> Tobias
>
>
> On 25.08.11 00:52, "Tobias Oberstein" <tobias.oberstein at tavendo.de> wrote:
>
> Ok. This is most unpleasant. In particular since my options then are:
>
> 1) write my own, sane (Twisted like, which I think is the sane way) JS
> deferred, not use jQuery/CommonJS (which everyone else does)
> 2) open the door for users running into issues when they do both Twisted &
> JS/jQuery and don't understand the subtle difference
>
> bad.
>
> of course not a Twisted mailing list topic anymore .. I'll go to jQuery
> list.
>
> Thanks!
> Tobias
>
>
> On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:
>
> No, this is something jQuery and CommonJS got wrong; callbacks don't chain
> in their implementation.
>
> Firing a jQuery promise invokes each callback in order with the same
> argument. Firing a Deferred in Twisted invokes the first callback then
> passes its return value as the arg to the next callback, and so forth.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
? Jasper


From washort at twistedmatrix.com  Wed Aug 24 19:55:44 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 24 Aug 2011 16:55:44 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
	<CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>
Message-ID: <CAEzUHiOXgjh_rOYS+2p1DPUJK-b46MmYC8zPDsr8CbJ1CETcxw@mail.gmail.com>

My understanding (partially aided by this post:
http://www.sitepen.com/blog/2010/05/03/robust-promises-with-dojo-deferred-1-5/)
is that Dojo provides both twisted-style "addCallback" and
CommonJS-style
"then" methods.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/71c83842/attachment.htm 

From m-lists at the-moon.net  Wed Aug 24 20:01:16 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Thu, 25 Aug 2011 01:01:16 +0100
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
Message-ID: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>

On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
<snip>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)

I agree. I had the same frustration a few months ago and various
Twisted people pointed out missing features in Jquery deferred:
 * http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html

Mochikit is the best (and original) JS port of deferred..Dojo and
Google Closure both credit Mochikit (and Twisted) in their source
code. I'm planning to revert back to it.

I guess it would be useful / constructive to compile a list of the
weaknesses in the jquery / commonjs deferred API and the reasons and
use cases for the Twisted deferred API.
Perhaps they can be persuaded to evolve towards the Twisted API in time.

-RichardW.


From tobias.oberstein at tavendo.de  Wed Aug 24 20:20:18 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 17:20:18 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
Message-ID: <CA7B61E2.4B41%tobias.oberstein@tavendo.de>

Jasper, Allen, Richard,

thanks all for the pointers. I am confused now;)

No, seriously, I need to _test_ those libs, to see what they actually do.

I.e. I suspect the "new Dojo Deferreds" with "then" return something
different than the broken "then" in jQuery 1.5.

This is all messy, personally, I want the Twisted semantics in JS, but want
to choose something "mainstream" to make it easy for users to adopt.

Well. I'll give me an hour tomorrow to look into Dojo and Mochikit.


On 25.08.11 02:01, "Richard Wall" <m-lists at the-moon.net> wrote:

On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
<snip>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)

I agree. I had the same frustration a few months ago and various
Twisted people pointed out missing features in Jquery deferred:
 * http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html

Mochikit is the best (and original) JS port of deferred..Dojo and
Google Closure both credit Mochikit (and Twisted) in their source
code. I'm planning to revert back to it.

I guess it would be useful / constructive to compile a list of the
weaknesses in the jquery / commonjs deferred API and the reasons and
use cases for the Twisted deferred API.
Perhaps they can be persuaded to evolve towards the Twisted API in time.

-RichardW.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110824/80b1f982/attachment.htm 

From jstpierre at mecheye.net  Wed Aug 24 20:48:14 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 24 Aug 2011 20:48:14 -0400
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B61E2.4B41%tobias.oberstein@tavendo.de>
References: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
	<CA7B61E2.4B41%tobias.oberstein@tavendo.de>
Message-ID: <CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>

Note that as far as I know, MochiKit isn't actively developed anymore.
Google's Closure has a fork of MochiKit's Deferred's, which seems to
incorporate some of Dojo's code as well.

  http://code.google.com/p/closure-library/source/browse/trunk/third_party/closure/goog/mochikit/async/

On Wed, Aug 24, 2011 at 8:20 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> Jasper, Allen, Richard,
>
> thanks all for the pointers. I am confused now;)
>
> No, seriously, I need to _test_ those libs, to see what they actually do.
>
> I.e. I suspect the "new Dojo Deferreds" with "then" return something
> different than the broken "then" in jQuery 1.5.
>
> This is all messy, personally, I want the Twisted semantics in JS, but want
> to choose something "mainstream" to make it easy for users to adopt.
>
> Well. I'll give me an hour tomorrow to look into Dojo and Mochikit.
>
>
> On 25.08.11 02:01, "Richard Wall" <m-lists at the-moon.net> wrote:
>
> On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de>
> wrote:
> <snip>
>> I am still wondering why they called the other stuff "then()" when it's
>> not
>> then, but "also()"
>> and "pipe()" is the real <then> ;)
>
> I agree. I had the same frustration a few months ago and various
> Twisted people pointed out missing features in Jquery deferred:
> ?* http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html
>
> Mochikit is the best (and original) JS port of deferred..Dojo and
> Google Closure both credit Mochikit (and Twisted) in their source
> code. I'm planning to revert back to it.
>
> I guess it would be useful / constructive to compile a list of the
> weaknesses in the jquery / commonjs deferred API and the reasons and
> use cases for the Twisted deferred API.
> Perhaps they can be persuaded to evolve towards the Twisted API in time.
>
> -RichardW.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
? Jasper


From ldanielburr at me.com  Wed Aug 24 20:58:57 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 24 Aug 2011 19:58:57 -0500
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re:
 RPC	design questions)
In-Reply-To: <CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>
References: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
	<CA7B61E2.4B41%tobias.oberstein@tavendo.de>
	<CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>
Message-ID: <op.v0qvojaeeyn2q3@tiassa.local>

Hi Jasper,


On Wed, 24 Aug 2011 19:48:14 -0500, Jasper St. Pierre  
<jstpierre at mecheye.net> wrote:

> Note that as far as I know, MochiKit isn't actively developed anymore.
> Google's Closure has a fork of MochiKit's Deferred's, which seems to
> incorporate some of Dojo's code as well.
>
>   http://code.google.com/p/closure-library/source/browse/trunk/third_party/closure/goog/mochikit/async/
>

Although it is certainly not "mainstream", like jQuery, or Dojo, or  
Closure, the most accurate implementation of Deferred in JavaScript is in  
Nevow.Athena.  I thought it might be worth mentioning, even though it  
isn't part of a widely-adopted JS lib.

Hope this helps,

L. Daniel Burr


From tobias.oberstein at tavendo.de  Thu Aug 25 05:43:41 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 25 Aug 2011 02:43:41 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <op.v0qvojaeeyn2q3@tiassa.local>
Message-ID: <CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>

>> Note that as far as I know, MochiKit isn't actively developed anymore.
>> Google's Closure has a fork of MochiKit's Deferred's, which seems to
>> incorporate some of Dojo's code as well.
>> 
>>   
>> http://code.google.com/p/closure-library/source/browse/trunk/third_party/clos
>> ure/goog/mochikit/async/
>> 
> 
> Although it is certainly not "mainstream", like jQuery, or Dojo, or
> Closure, the most accurate implementation of Deferred in JavaScript is in
> Nevow.Athena.  I thought it might be worth mentioning, even though it
> isn't part of a widely-adopted JS lib.

I've been trying to find the code, but I'm too stupid, can't find

http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files

Where is it? Do you have a pointer to the JS Deferred?




From jml at mumak.net  Thu Aug 25 05:48:17 2011
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 25 Aug 2011 10:48:17 +0100
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
Message-ID: <CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>

On Thu, Aug 25, 2011 at 10:43 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>>> Note that as far as I know, MochiKit isn't actively developed anymore.
>>> Google's Closure has a fork of MochiKit's Deferred's, which seems to
>>> incorporate some of Dojo's code as well.
>>>
>>>
>>> http://code.google.com/p/closure-library/source/browse/trunk/third_party/clos
>>> ure/goog/mochikit/async/
>>>
>>
>> Although it is certainly not "mainstream", like jQuery, or Dojo, or
>> Closure, the most accurate implementation of Deferred in JavaScript is in
>> Nevow.Athena. ?I thought it might be worth mentioning, even though it
>> isn't part of a widely-adopted JS lib.
>
> I've been trying to find the code, but I'm too stupid, can't find
>
> http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files
>
> Where is it? Do you have a pointer to the JS Deferred?
>

http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Nevow/nevow/js/Divmod/Defer.js

jml


From tobias.oberstein at tavendo.de  Thu Aug 25 07:29:25 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 25 Aug 2011 04:29:25 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re:
	RPC	design questions)
In-Reply-To: <CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
	<CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>

I have collected the Deferreds from

Nevow
MochiKit
Closure
jQuery
(and Twisted)

here

https://github.com/oberstet/jdeferred/tree/master/others

for convenient comparison.

I'd be interested in baking a JS Deferred which

- replicates the Twisted Deferred in semantics and syntax (API) as closely as possible
- has no external dependencies (totally self contained)
- contains only this: a JS Deferred

Anyone else?

I know this is kinda OT for this list, but it could serve Twisted indirectly: by propagating
it's mature, sane Deferred concept/terminology instead of half-baked, flawned others.

Cheers,
Tobias



From washort at twistedmatrix.com  Thu Aug 25 12:20:52 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 25 Aug 2011 09:20:52 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
	<CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAEzUHiNaQm3tD7kyC2A6PO+oC9Pgk=ZiyzLoyuPTpud3faE4hQ@mail.gmail.com>

On Thu, Aug 25, 2011 at 4:29 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> I know this is kinda OT for this list, but it could serve Twisted
> indirectly: by propagating
> it's mature, sane Deferred concept/terminology instead of half-baked,
> flawned others.
>


In some ways the popular JS design is better, since it provides
immutable-once-resolved promises. You can have that without breaking
chaining though; see how E's promises work.

I don't think Twisted's interface for Deferreds is the final answer, but
chaining is important to keep :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110825/652ad8e4/attachment.htm 

From tobias.oberstein at tavendo.de  Sat Aug 27 11:15:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 27 Aug 2011 08:15:04 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
	<7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0DFCB47@EXVMBX020-12.exch020.serverdata.net>

I thought I can strictly stick to the advice (only keep one variant -- I thought I keep "lambda"),
but today Python surprised me (which happens not so often).

Check out these snippets:

(1)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(lambda value: self.show(key, value))

(2)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(partial(self.show, key))

(3)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(lambda value, key = key: self.show(key, value))

==

(2) and (3) will output the same. Not (1).

The reason is, that lambda establishes a closure over the reference "key", which changes
with loop iteration, and when the RPCs come back, that "key" will have the last value of the
list iterated over.

The result of (1) was not what I expected, and it took me some googling to find the answers.

(3) is somewhat a hack on lambda to establish closures over the value when the closure is
constructed, not the reference.

(2) does that by default.

I have some background in Erlang, where everything is immutable, and thus the issue is non.
This is where the half-functional character of Python has bitten me badly.

It may be nothing new to many, but it certainly was for me.

http://blog.markfeeney.com/2009/11/python-lambda-partial-and-scopes.html
http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
http://math.andrej.com/2009/04/09/pythons-lambda-is-broken/

==

Anyway, perhaps it's still easier for users to grasp (3) than having another construct (2).

What do you think?


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Dienstag, 23. August 2011 20:30
An: Twisted general discussion
Betreff: Re: [Twisted-Python] RPC design questions


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:


class AutobahnDeferred(Deferred):
  def call(self, *args):
     return self.addCallback(self.protocol.rcall, *args)

Pro:    most terse
Con:    only supports single callback no errback


Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110827/7fabacd5/attachment.htm 

From terry at jon.es  Sat Aug 27 21:20:03 2011
From: terry at jon.es (Terry Jones)
Date: Sun, 28 Aug 2011 02:20:03 +0100
Subject: [Twisted-Python] Retrying function calls
Message-ID: <20057.38851.947666.878499@jon.es>

I posted to the list about a Twisted class for retrying function calls
almost two years ago and blogged about it at http://bit.ly/ncnE72

I've just done the work to put that class into its own package, available
from various places:

  http://pypi.python.org/pypi/txretry
  https://github.com/fluidinfo/txretry
  https://launchpad.net/txretry

For now the only documentation is the above blog post.

Terry


From glyph at twistedmatrix.com  Sat Aug 27 23:23:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 27 Aug 2011 20:23:09 -0700
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <20057.38851.947666.878499@jon.es>
References: <20057.38851.947666.878499@jon.es>
Message-ID: <00239342-9C6D-410A-A681-4E84AD8113CE@twistedmatrix.com>


On Aug 27, 2011, at 6:20 PM, Terry Jones wrote:

> I posted to the list about a Twisted class for retrying function calls
> almost two years ago and blogged about it at http://bit.ly/ncnE72
> 
> I've just done the work to put that class into its own package, available
> from various places:
> 
>  http://pypi.python.org/pypi/txretry
>  https://github.com/fluidinfo/txretry
>  https://launchpad.net/txretry
> 
> For now the only documentation is the above blog post.
> 
> Terry

Thanks for packaging this up into a form which is more easily depended upon, terry! :)

-glyph



From exarkun at twistedmatrix.com  Sun Aug 28 00:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Aug 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1314504322.54.1792628933@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110828/f67a1f55/attachment.htm 

From jeff at ocjtech.us  Mon Aug 29 16:44:15 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 29 Aug 2011 15:44:15 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
	<CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
	<F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>
Message-ID: <CAD-DQxTWchEPCAbns+8+Xgn8c1gmJPJpY_Dxks2-0E90jiV2cA@mail.gmail.com>

On Tue, Aug 23, 2011 at 1:27 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Aug 23, 2011, at 9:49 AM, Jeffrey Ollie wrote:
>
>> On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>>>
>>> The problem seems to be that the remote SFTP implementation isn't
>>> returning complete status response message - it doesn't include the
>>> error message and the language identifier. ?I made a quite ugly
>>> workaround:
>>
>> Wow... while googling for some other twisted/sftp related information,
>> I came across this:
>>
>> http://twistedmatrix.com/trac/ticket/3009
>
> Looks like there's a patch and everything! ?It just needs some tests! ?What are you waiting for! :)

Time, and a little bit of inspiration :)

-- 
Jeff Ollie


From dialtone at gmail.com  Wed Aug 31 20:14:29 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 31 Aug 2011 17:14:29 -0700
Subject: [Twisted-Python] [Job] AdRoll.com is hiring
Message-ID: <9A254FB1-3443-461B-949E-E4EA1EC5306F@gmail.com>

Hi Twisted devs and community,

In short, without repeating too much of the standard marketing material, AdRoll is a San Francisco-based advertising platform that buys impressions from ad exchanges to display ads, all in real time.

AdRoll is looking for some very skilled Python developers that can handle their own time and want to have the freedom to make critical decisions about our infrastructure.
Most of our code is in Python and some of the critical parts are in Twisted but there's also a little bit of Erlang and Java.
Our infrastructure is currently entirely deployed inside Amazon EC2 in multiple regions and availability zones and is growing a little bit every month.

We are a small but pretty open group and we contribute and release a lot of our software under Open Source licenses, for example some of the contributions to Twisted are Ampoule and turtl, released not too long ago.

Here https://www.adroll.com/why/careers you'll find more information about the company and other job openings.

Here is the more formal job posting: http://adroll.jobscore.com/jobs/adroll/scalability-engineer/d0eRBmq9Cr4ihCeJe4bk1X
However the really important requirement is to be able to learn new stuff quickly.

If you are interested send me an email at dialtone at adroll.com or dialtone at gmail.com.

-- 
Valentino Volonghi
http://www.adroll.com



From rene at klootwijk.org  Mon Aug  1 02:06:05 2011
From: rene at klootwijk.org (Rene Klootwijk (klootwijk.org))
Date: Mon, 1 Aug 2011 08:06:05 +0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>,
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>

I will put some code on pastebin when I come home this evening. The Clientfactory class does not support serial port communication, does it?

--
Rene
________________________________
Van: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] namens Laurens Van Houtven [_ at lvh.cc]
Verzonden: maandag 1 augustus 2011 1:37
Aan: Twisted general discussion
Onderwerp: Re: [Twisted-Python] Reconnection to Serialport after connectionLost

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

--
cheers
lvh

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110801/1aa9238e/attachment.html>

From itamar at itamarst.org  Mon Aug  1 05:06:27 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 01 Aug 2011 07:06:27 -0400
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <1312196787.7186.9.camel@blake>

On Mon, 2011-08-01 at 01:37 +0200, Laurens Van Houtven wrote:
> Have you tried ReconnectingClientFactory?

The serial port API doesn't use factories, if I'm not mistaken.




From exarkun at twistedmatrix.com  Mon Aug  1 05:08:20 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 01 Aug 2011 11:08:20 -0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>,
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
Message-ID: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>

On 08:06 am, rene at klootwijk.org wrote:
>I will put some code on pastebin when I come home this evening. The 
>Clientfactory class does not support serial port communication, does 
>it?

Rather, the serial port API does not support factories.

Jean-Paul



From _ at lvh.cc  Mon Aug  1 06:05:05 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 1 Aug 2011 14:05:05 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
Message-ID: <CAE_Hg6bTOog71ofJuPJ+aX9Pc_yq17DN_AgssDpd6Kn5hCp0Lg@mail.gmail.com>

Oh, right, serial. My mistake, sorry :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110801/82e3891c/attachment.html>

From stephen at thorne.id.au  Mon Aug  1 06:12:15 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Mon, 1 Aug 2011 13:12:15 +0100
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
Message-ID: <CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>

Last I looked at this I had problems with the disconnection events not
being propagated properly. I did, however, end up being able to write
a system that would connect, disconnect and reconnect to usb serial
devices that went away and came back again. So I'm sure it's possible.

Can't access that code anymore, sorry.

Stephen.



From rene at klootwijk.org  Mon Aug  1 06:21:06 2011
From: rene at klootwijk.org (Rene Klootwijk (klootwijk.org))
Date: Mon, 1 Aug 2011 12:21:06 +0000
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>,
	<CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
Message-ID: <BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>

When I tried this more than a year ago (Twisted 10.x), the connectionLost event was not indeed propagated correctly. However, in version 11 the event is propagated correctly.

--
Rene
________________________________________
Van: twisted-python-bounces at twistedmatrix.com [twisted-python-bounces at twistedmatrix.com] namens Thorne, Stephen [stephen at thorne.id.au]
Verzonden: maandag 1 augustus 2011 14:12
Aan: Twisted general discussion
Onderwerp: Re: [Twisted-Python] Reconnection to Serialport after connectionLost

Last I looked at this I had problems with the disconnection events not
being propagated properly. I did, however, end up being able to write
a system that would connect, disconnect and reconnect to usb serial
devices that went away and came back again. So I'm sure it's possible.

Can't access that code anymore, sorry.

Stephen.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From stephen at thorne.id.au  Mon Aug  1 06:35:20 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Mon, 1 Aug 2011 13:35:20 +0100
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B499@EXCH2010-ALM.ad.quinse.nl>
	<20110801110820.2280.2101655736.divmod.xquotient.229@localhost.localdomain>
	<CAFPU7=uz43AFnsf2WDmNzZeWHFCt1RMHn-batHnfo_gtMXdAMA@mail.gmail.com>
	<BC8E9242BEDB2B478D208ADF484A605A1C23B933@EXCH2010-ALM.ad.quinse.nl>
Message-ID: <CAFPU7=tSi3OsW+uFn-UeUzYx2SH1RdeOBnStF8AkubBiocfcpQ@mail.gmail.com>

On Mon, Aug 1, 2011 at 13:21, Rene Klootwijk (klootwijk.org)
<rene at klootwijk.org> wrote:
> When I tried this more than a year ago (Twisted 10.x), the connectionLost event was not indeed propagated correctly. However, in version 11 the event is propagated correctly.

Ah, good to hear. Thanks

Stephen.



From rene at klootwijk.org  Mon Aug  1 10:21:05 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Mon, 1 Aug 2011 18:21:05 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>
	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
Message-ID: <00fa01cc5067$03736710$0a5a3530$@org>

I have copied a code snippit to pastebin,  <http://pastebin.com/us4vL0bk>
http://pastebin.com/us4vL0bk

 

This is what happens:

When I break the connection, the connectionLost event is triggered and the
connectionLost method of the protocol class is called. After a 5 second
delay the serialport is reopened successfully because I reconnected the
device. The connectionMade event is triggered and the connectionMade method
of the protocol class is called. However, data arriving on the serial port
no longer triggers the dataReceived event.

 

--

Rene

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Laurens Van
Houtven
Sent: maandag 1 augustus 2011 1:37
To: Twisted general discussion
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Rec
onnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers

lvh

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110801/52fb0014/attachment-0001.html>

From rene at klootwijk.org  Mon Aug  1 14:25:07 2011
From: rene at klootwijk.org (Rene Klootwijk)
Date: Mon, 1 Aug 2011 22:25:07 +0200
Subject: [Twisted-Python] Reconnection to Serialport after connectionLost
In-Reply-To: <00fa01cc5067$03736710$0a5a3530$@org>
References: <00e301cc4fcb$30a5cf30$91f16d90$@org>	<CAE_Hg6arOfa3EeOgAY_EkgwmqOg8An9zXUbTY6+HY_6AXhtNBg@mail.gmail.com>
	<00fa01cc5067$03736710$0a5a3530$@org>
Message-ID: <010e01cc5089$1a709830$4f51c890$@org>

I figured it out! I forget to set the speed of the serial port. Dumb ,
dumber,  dumbest.

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rene
Klootwijk
Sent: maandag 1 augustus 2011 18:21
To: 'Twisted general discussion'
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

I have copied a code snippit to pastebin,  <http://pastebin.com/us4vL0bk>
http://pastebin.com/us4vL0bk

 

This is what happens:

When I break the connection, the connectionLost event is triggered and the
connectionLost method of the protocol class is called. After a 5 second
delay the serialport is reopened successfully because I reconnected the
device. The connectionMade event is triggered and the connectionMade method
of the protocol class is called. However, data arriving on the serial port
no longer triggers the dataReceived event.

 

--

Rene

 

From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Laurens Van
Houtven
Sent: maandag 1 augustus 2011 1:37
To: Twisted general discussion
Subject: Re: [Twisted-Python] Reconnection to Serialport after
connectionLost

 

Have you tried ReconnectingClientFactory?

http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.Rec
onnectingClientFactory.html

(Also, could you pastebin some code? What you're describing ought to work.)

-- 
cheers

lvh

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110801/ae368496/attachment.html>

From mckenzig at optonline.net  Wed Aug  3 14:59:08 2011
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Wed, 03 Aug 2011 16:59:08 -0400
Subject: [Twisted-Python] scaling with lots of clients
Message-ID: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>

Hi,

I have a twisted Perspective Broker based server. Recently with an increased number of clients we are seeing a decrease in throughput. Profiling the server it seems that it is spending the majority of time sending messages to the clients (unsuprisingly).

Messages are sent to the client from the server using a callRemote, invoked from the  event queue using reactor.callFromThread - nice and simple. What designs have people used to improve throughput in a heavily loaded server? My experience is telling me that I need to implement some sort of thread/process pool to divide the messaging to clients. Various documents on the twisted website strongly suggets that this is not a good idea. Thoughts? 

Cheers,
G.





From itamar at itamarst.org  Wed Aug  3 15:09:23 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 3 Aug 2011 17:09:23 -0400
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
Message-ID: <3ec66c55a0b4843992a13fc40ad88d46.squirrel@webmail.zoteca.com>

> I have a twisted Perspective Broker based server. Recently with an
> increased number of clients we are seeing a decrease in throughput.
> Profiling the server it seems that it is spending the majority of time
> sending messages to the clients (unsuprisingly).

PyPy might speed this up quite a bit; http://speed.pypy.org suggests PyPy
can send PB messages 3 times as fast as CPython.

You could also switch to a protocol that has a faster serialization, which
shouldn't be too hard if your usage of PB is sufficiently simple.

> Messages are sent to the client from the server using a callRemote,
> invoked from the  event queue using reactor.callFromThread - nice and
> simple. What designs have people used to improve throughput in a heavily
> loaded server? My experience is telling me that I need to implement some
> sort of thread/process pool to divide the messaging to clients. Various
> documents on the twisted website strongly suggets that this is not a good
> idea.

Threading won't help much if you're CPU bound, since Python can only run
one Python thread at once. Process pooling probably would help, though
will involve a more complex infrastructure. Which part of the docs made
you think that process pooling is a bad idea?





From mckenzig at optonline.net  Wed Aug  3 16:42:51 2011
From: mckenzig at optonline.net (Grant Mckenzie)
Date: Wed, 03 Aug 2011 18:42:51 -0400
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
Message-ID: <3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>

> Threading won't help much if you're CPU bound, since Python can only run
> one Python thread at once. Process pooling probably would help, though
> will involve a more complex infrastructure. Which part of the docs made
> you think that process pooling is a bad idea?

Hi Itamar,

on re-reading I see nothing particular about process pooling being a bad idea. 

I see the explanation of spawning processes from the reactor here:

http://twistedmatrix.com/documents/current/core/howto/process.html

This seems to be designed for spawning processes for compute purposes which no doubt has a lot of use cases. I'd like ot spawn 
processes to handle user communication however. THe only thing that I can think of is multiple processes each with their
own reactor handling communication, and one or more other processes to handle compute. Thoughts?

THanks for your help.
G




From platsakos at gmail.com  Wed Aug  3 18:04:14 2011
From: platsakos at gmail.com (AK)
Date: Thu, 04 Aug 2011 03:04:14 +0300
Subject: [Twisted-Python] scaling with lots of clients
In-Reply-To: <3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>
References: <D5A79715-0E88-45CF-826C-71804AE00F9A@optonline.net>
	<3712E2ED-64C7-4613-8BC3-2A3589CF2371@optonline.net>
Message-ID: <4E39E1FE.8070006@gmail.com>

Hi everyone,

Problems might arise if you use multiple processes, each with each own
reactor. Speaking from (limited, admittedly experience), using say two
reactors in two processes respectively, if there is a need to
communicate between them might lead to all kinds of bugs, *if* you do
not do things properly.

Another workaround would be the following:
Python's GIL lock applies only to executing Python bytecode. Therefore,
if you offload some of it to a C-based module, you are GIL-lock free.

On 08/04/2011 01:42 AM, Grant Mckenzie wrote:
>> Threading won't help much if you're CPU bound, since Python can only run
>> one Python thread at once. Process pooling probably would help, though
>> will involve a more complex infrastructure. Which part of the docs made
>> you think that process pooling is a bad idea?
> Hi Itamar,
>
> on re-reading I see nothing particular about process pooling being a bad idea. 
>
> I see the explanation of spawning processes from the reactor here:
>
> http://twistedmatrix.com/documents/current/core/howto/process.html
>
> This seems to be designed for spawning processes for compute purposes which no doubt has a lot of use cases. I'd like ot spawn 
> processes to handle user communication however. THe only thing that I can think of is multiple processes each with their
> own reactor handling communication, and one or more other processes to handle compute. Thoughts?
>
> THanks for your help.
> G
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

-- 
What is the air-speed velocity of an unladen swallow? 




From damiano.albani at gmail.com  Fri Aug  5 02:14:18 2011
From: damiano.albani at gmail.com (Damiano ALBANI)
Date: Fri, 5 Aug 2011 10:14:18 +0200
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
Message-ID: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>

Hello,

I'm trying to determine the current status of proxy support in Twisted.
I've googled quite a bit to find an answer but I couldn't get a crystal
clear picture.
What I mean by "proxy support" is the capability to:
  - act as a proxy server
  - use an external proxy server (i.e. act as a client)
And by proxy, I'm talking in pratice of SOCKS v{4(a),5} and HTTP "CONNECT"
standards.

>From what I've read so far, it looks like Twisted is currently only capable
of acting as a proxy server (correct me if I'm wrong).
A quick search for "proxy" on Trac returns quite a lot of results so it's
not easy to have a good grasp of the situation.

Personnaly, what I'm interested in is the ability for Twisted to act as a
proxy client and thus to connect to an external proxy server.
I've seen bug reports on that topic, of which some are still open:

Add a SOCKS client API
http://twistedmatrix.com/trac/ticket/3508

Socks V5 functionality
http://twistedmatrix.com/trac/ticket/1330

Add CONNECT support to HTTP client
http://twistedmatrix.com/trac/ticket/4969

Regarding this last bug, I was wondering if there could a generic HTTP proxy
mechanism, like with SOCKS, and not tied to the Web client.
Because we might want to use an HTTP proxy for something else that Web
traffic.

What would be nice in Twisted is a generic, upper-protocol-agnostic proxy
mechanism  -- and one that would support indistinctly SOCKS and HTTP kinds
of proxies.

By the way, I'm totally new to Twisted, so forgive me if what I'm missing
something obvious :-)

Thanks,

-- 
Damiano ALBANI
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110805/087e8cef/attachment-0001.html>

From glyph at twistedmatrix.com  Fri Aug  5 21:43:53 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 5 Aug 2011 23:43:53 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
Message-ID: <A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>


On Aug 5, 2011, at 4:14 AM, Damiano ALBANI wrote:

> Regarding this last bug, I was wondering if there could a generic HTTP proxy mechanism, like with SOCKS, and not tied to the Web client.
> Because we might want to use an HTTP proxy for something else that Web traffic.
> 
> What would be nice in Twisted is a generic, upper-protocol-agnostic proxy mechanism  -- and one that would support indistinctly SOCKS and HTTP kinds of proxies.

You've correctly identified the status of HTTP and SOCKS proxy support in Twisted.

However, it doesn't really make sense to have a "generic" proxy layer - different protocols have wildly different rules about what it means to proxy a connection.  HTTP and SOCKS can proxy the same traffic and get very different results about where that traffic goes. Similarly, it doesn't make sense to use an HTTP proxy for anything other than HTTP traffic.  If you could clarify your request perhaps we could file a ticket?  Otherwise it would be great if you could contribute a patch to advance one of those existing tickets.

If you want a totally generic (i.e. TCP-level) proxy, Twisted does contain one: you can run 'twistd portforward --help' for information about how to run it.

Good luck,

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110805/1ff3904b/attachment-0001.html>

From itamar at itamarst.org  Sat Aug  6 06:48:40 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Sat, 06 Aug 2011 08:48:40 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
 kinds)
In-Reply-To: <A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<A67CB2F1-AA56-4BCE-AE13-C5CD007A339F@twistedmatrix.com>
Message-ID: <1312634920.7186.16.camel@blake>

On Fri, 2011-08-05 at 23:43 -0400, Glyph Lefkowitz wrote:

> Similarly, it doesn't make sense to use an HTTP proxy for anything
> other than HTTP traffic.

An HTTP proxy, sure. An HTTPS proxy is useful for proxying any sort of
TCP traffic; thus the reference to CONNECT.





From exarkun at twistedmatrix.com  Sat Aug  6 22:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 07 Aug 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1312689922.88.897555697@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110807/cf824a96/attachment-0001.html>

From mike at mv3d.com  Sun Aug  7 13:43:49 2011
From: mike at mv3d.com (Michael Handverger)
Date: Sun, 7 Aug 2011 15:43:49 -0400 (EDT)
Subject: [Twisted-Python] ANN: MV3D 0.60 Released!
Message-ID: <13163760.92.1312746229101.JavaMail.root@verity>

I am pleased to announce the release of MV3D version 0.60! This release focused on scalability of worlds and includes support for splitting a single area across multiple server processes with automatic load balancing and redundancy. Areas can now be connected together using gateways to build worlds limited in size only by the amount of available hardware. The Overseer Cluster Management tool was upgraded in order to better handle many processes across multiple physical servers. Camera controls across all content tools have been unified. Better support for Panda3D clients was added as well.

MV3D is an open source virtual world and multiplayer game framework written in Python which uses Twisted for networking. It was designed with scalability in mind and is able to distribute a world across as many servers as needed while dynamically balancing the load. The simulation framework is not specifically slanted towards any one genre of online game, and can just as easily be used for a space game as a fantasy setting. Objects on an MV3D server are simulated using the ODE physics engine. A single server can host thousands of simulated objects. MV3D uses either Python-Ogre or Panda3D on the client. 

For more information on MV3D and this or future releases, please visit the website at http://www.mv3d.com . The full release notes for version 0.6 are available online at this URL: http://www.mv3d.com/trac/browser/tags/mv3d-0.60/release-notes.txt . For further inquiries, feel free to stop by our IRC channel on irc.freenode.net #MV3D.

Here's a video of the new demo world:

http://www.youtube.com/watch?v=iZiKr0t1TqU

Enjoy,

Mike



From exarkun at twistedmatrix.com  Mon Aug  8 07:07:30 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 08 Aug 2011 13:07:30 -0000
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project
	Jobs	Volunteer)
In-Reply-To: <1310472716.1993.21.camel@pp>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
	<1310472716.1993.21.camel@pp>
Message-ID: <20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>

On 12 Jul, 12:11 pm, adi at roiban.ro wrote:
>On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
>>On 9 Jul, 10:46 am, adi at roiban.ro wrote:
>> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
>> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
>> >[snip]
>[snip]
>>I ran this (all-branches version) a few times over the weekend.  The
>>first time, when there was lots of catching up to do, took about 3.5
>>hours.  After that, it was about 30 minutes per run.  This does seem
>>fast enough to do nightly, so I'll set that up until we have the push-
>>based version.
>
>I have created a script that can be used together with a svn post- 
>commit
>hook to keep an bzr mirror in sync.

Thanks.  Sorry about the delay in getting back to you on this.  Another 
issue I think the push version needs to deal with is concurrent 
invocation.  It looks like the script will issue overlapping "bzr pull" 
commands now, which doesn't work very well.  Do you think you could add 
some locking somewhere to avoid this?

Thanks again,
Jean-Paul



From glyph at twistedmatrix.com  Mon Aug  8 10:44:40 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 8 Aug 2011 12:44:40 -0400
Subject: [Twisted-Python] ANN: MV3D 0.60 Released!
In-Reply-To: <13163760.92.1312746229101.JavaMail.root@verity>
References: <13163760.92.1312746229101.JavaMail.root@verity>
Message-ID: <74BFBA80-02FF-4239-AC64-F18B945B257B@twistedmatrix.com>


On Aug 7, 2011, at 3:43 PM, Michael Handverger wrote:

> I am pleased to announce the release of MV3D version 0.60! This release focused on scalability of worlds and includes support for splitting a single area across multiple server processes with automatic load balancing and redundancy. Areas can now be connected together using gateways to build worlds limited in size only by the amount of available hardware. The Overseer Cluster Management tool was upgraded in order to better handle many processes across multiple physical servers. Camera controls across all content tools have been unified. Better support for Panda3D clients was added as well.

Wow!  Great to hear this effort is still going strong, Mike - thanks for making Twisted look super fancy with all those intense buzzwords :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110808/fa3e6998/attachment-0001.html>

From peter at hyperplex.net  Mon Aug  8 20:10:50 2011
From: peter at hyperplex.net (Peter Le Bek)
Date: Mon, 8 Aug 2011 22:10:50 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
Message-ID: <CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>

Myself and another are working on adding SOCKS client support to Twisted for 
use in Tor related projects. I'm also convinced there's an abstraction that would 
make it easier to implement proxy clients (or any transparent data/endpoint 
modifying protocol) in Twisted. I agree that it's difficult to generalise, but there's a 
class of protocol that does one or more of the following, transparently, and little 
else:

- append data, before switching to application protocol (SSL handshake, 
  SOCKS connect/bind)
- prepend data, after losing connection on application protocol (SSL shutdown)
- modify application data (SSL "recordification", encryption)
- modify the endpoint (any proxy)

Endpoints can do all these things - SSL4ClientEndpoint, for example, does the first 
three - but does it make sense to use Endpoints for this purpose? 

Endpoints aren't stackable, so no good if I want to run a SOCKS client over SSL. 
Also, with a proxied connection you have two Endpoints, one to the proxy server 
and one 'virtual Endpoint' to wherever. The Endpoints API doesn't accommodate 
this.

Would it make sense to have Endpoint wrappers for this purpose? A sort of 
middleware (hate that word) to intercept transport events (including transport 
formation, i.e. Endpoint.connect()).

I'm looking forward to being proven wrong on this as it will make my SOCKS work 
easier, or else if this turns out to be interesting then I have more ideas on how it 
should be implemented.

Cheers,
Peter.




From glyph at twistedmatrix.com  Mon Aug  8 22:31:19 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 9 Aug 2011 00:31:19 -0400
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
Message-ID: <9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>

On Aug 8, 2011, at 10:10 PM, Peter Le Bek wrote:

> Myself and another are working on adding SOCKS client support to Twisted for 
> use in Tor related projects. I'm also convinced there's an abstraction that would 
> make it easier to implement proxy clients (or any transparent data/endpoint 
> modifying protocol) in Twisted. I agree that it's difficult to generalise, but there's a 
> class of protocol that does one or more of the following, transparently, and little 
> else:
> 
> - append data, before switching to application protocol (SSL handshake, SOCKS connect/bind)
> - prepend data, after losing connection on application protocol (SSL shutdown)
> - modify application data (SSL "recordification", encryption)
> - modify the endpoint (any proxy)
> 
> Endpoints can do all these things - SSL4ClientEndpoint, for example, does the first 
> three - but does it make sense to use Endpoints for this purpose? 

I think so.

> Endpoints aren't stackable, so no good if I want to run a SOCKS client over SSL.

Sure they are.  There's no SOCKS endpoint yet, but if you were to implement one, you could make it take another endpoint (or endpoint factory, as the case may be) as an argument to its constructor.  The implementation of the various current SSL* enpdoints would set a better example if it weren't for the legacy connectSSL/listenSSL APIs.  However, those APIs are being slowly phased out in favor of the endpoints themselves, as well as the internal implementation being moved to use a wrapping / delegation approach <http://twistedmatrix.com/trac/ticket/4854> between transports and protocols instead of OpenSSL's SSL-is-a-socket-except-when-it-isn't strategy.

> Also, with a proxied connection you have two Endpoints, one to the proxy server 
> and one 'virtual Endpoint' to wherever. The Endpoints API doesn't accommodate 
> this.

How doesn't it?  It's exactly this kind of API that endpoints were _designed_ to accommodate - the original impetus to create them was the Vertex project (now part of <https://launchpad.net/divmod.org/>), which proxies traffic in a variety of different ways.

> Would it make sense to have Endpoint wrappers for this purpose? A sort of 
> middleware (hate that word) to intercept transport events (including transport 
> formation, i.e. Endpoint.connect()).

It might make sense to have some utilities around this area.  There are definitely parts of the process - especially producers and consumers - where you have to write a lot of boilerplate code to make sure everything's hooked up properly.  But it's all certainly _possible_ now with the existing interfaces.

You'd probably be interested in this ticket: <http://twistedmatrix.com/trac/ticket/3204>.  Perhaps you could submit a patch? :)

> I'm looking forward to being proven wrong on this as it will make my SOCKS work 
> easier, or else if this turns out to be interesting then I have more ideas on how it 
> should be implemented.

It would help with that proof if you would be a bit more precise about where you think the current code falls short.

-glyph


From kevin.horn at gmail.com  Tue Aug  9 10:17:43 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Tue, 9 Aug 2011 11:17:43 -0500
Subject: [Twisted-Python] Status of current proxy support (of various
	kinds)
In-Reply-To: <9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>
References: <CAKys953FSGgVJ1OOs1CnU_b0wBccUotYKSRhqStKjzfcybVsJg@mail.gmail.com>
	<CC7FB2ED-255A-4BBC-9C89-0850557D1CD5@hyperplex.net>
	<9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com>
Message-ID: <CA+U=zK3izkPO_yc9QubTpv244M3_5KDjNJeJRWfAZbpWjtf3Ug@mail.gmail.com>

Also, anyone working on socks5 in twisted should be aware of this project:

http://code.google.com/p/proxy65/

which implements a SOCK5 server.  It's in the context of a Jabber/XMPP
XEP-0065 proxy server, but a lot of it should be applicable, if just as an
example.

I make no guarantees about the quality and/or correctness of the code, as
I've only skimmed it a couple of times.  I do know it predates the endpoint
API, and I doubt it has been updated.

(getting SOCS5 support into twisted has been on my 'maybe someday" todo
list, and I was planning on looking at this in more detail as a reference).

It's MIT licensed.

Kevin Horn

On Mon, Aug 8, 2011 at 11:31 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>wrote:

> On Aug 8, 2011, at 10:10 PM, Peter Le Bek wrote:
>
> > Myself and another are working on adding SOCKS client support to Twisted
> for
> > use in Tor related projects. I'm also convinced there's an abstraction
> that would
> > make it easier to implement proxy clients (or any transparent
> data/endpoint
> > modifying protocol) in Twisted. I agree that it's difficult to
> generalise, but there's a
> > class of protocol that does one or more of the following, transparently,
> and little
> > else:
> >
> > - append data, before switching to application protocol (SSL handshake,
> SOCKS connect/bind)
> > - prepend data, after losing connection on application protocol (SSL
> shutdown)
> > - modify application data (SSL "recordification", encryption)
> > - modify the endpoint (any proxy)
> >
> > Endpoints can do all these things - SSL4ClientEndpoint, for example, does
> the first
> > three - but does it make sense to use Endpoints for this purpose?
>
> I think so.
>
> > Endpoints aren't stackable, so no good if I want to run a SOCKS client
> over SSL.
>
> Sure they are.  There's no SOCKS endpoint yet, but if you were to implement
> one, you could make it take another endpoint (or endpoint factory, as the
> case may be) as an argument to its constructor.  The implementation of the
> various current SSL* enpdoints would set a better example if it weren't for
> the legacy connectSSL/listenSSL APIs.  However, those APIs are being slowly
> phased out in favor of the endpoints themselves, as well as the internal
> implementation being moved to use a wrapping / delegation approach <
> http://twistedmatrix.com/trac/ticket/4854> between transports and
> protocols instead of OpenSSL's SSL-is-a-socket-except-when-it-isn't
> strategy.
>
> > Also, with a proxied connection you have two Endpoints, one to the proxy
> server
> > and one 'virtual Endpoint' to wherever. The Endpoints API doesn't
> accommodate
> > this.
>
> How doesn't it?  It's exactly this kind of API that endpoints were
> _designed_ to accommodate - the original impetus to create them was the
> Vertex project (now part of <https://launchpad.net/divmod.org/>), which
> proxies traffic in a variety of different ways.
>
> > Would it make sense to have Endpoint wrappers for this purpose? A sort of
> > middleware (hate that word) to intercept transport events (including
> transport
> > formation, i.e. Endpoint.connect()).
>
> It might make sense to have some utilities around this area.  There are
> definitely parts of the process - especially producers and consumers - where
> you have to write a lot of boilerplate code to make sure everything's hooked
> up properly.  But it's all certainly _possible_ now with the existing
> interfaces.
>
> You'd probably be interested in this ticket: <
> http://twistedmatrix.com/trac/ticket/3204>.  Perhaps you could submit a
> patch? :)
>
> > I'm looking forward to being proven wrong on this as it will make my
> SOCKS work
> > easier, or else if this turns out to be interesting then I have more
> ideas on how it
> > should be implemented.
>
> It would help with that proof if you would be a bit more precise about
> where you think the current code falls short.
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110809/4f55903b/attachment.html>

From adi at roiban.ro  Tue Aug  9 11:32:35 2011
From: adi at roiban.ro (Adi Roiban)
Date: Tue, 09 Aug 2011 20:32:35 +0300
Subject: [Twisted-Python] Twisted bzr mirror (Was: Twisted Project Jobs
 Volunteer)
In-Reply-To: <20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>
References: <1309888284.4006.16.camel@pp>
	<CAE_Hg6ZN1MSKdW3EFit_S=qPYx4w-JXc5X8g8eYHWoivTDtSwg@mail.gmail.com>
	<20110705192222.3761.826230033.divmod.xquotient.16@localhost.localdomain>
	<1309981912.17239.33.camel@pp> <1310055956.17239.116.camel@pp>
	<20110708162006.3761.1897240428.divmod.xquotient.138@localhost.localdomain>
	<1310208394.1987.214.camel@pp>
	<20110711113007.3761.1382771533.divmod.xquotient.769@localhost.localdomain>
	<1310472716.1993.21.camel@pp>
	<20110808130730.2157.203762932.divmod.xquotient.11@localhost.localdomain>
Message-ID: <1312911155.12666.190.camel@pp>

On Mon, 2011-08-08 at 13:07 +0000, exarkun at twistedmatrix.com wrote:
> On 12 Jul, 12:11 pm, adi at roiban.ro wrote:
> >On Mon, 2011-07-11 at 11:30 +0000, exarkun at twistedmatrix.com wrote:
> >>On 9 Jul, 10:46 am, adi at roiban.ro wrote:
> >> >On Fri, 2011-07-08 at 16:20 +0000, exarkun at twistedmatrix.com wrote:
> >> >>On 7 Jul, 04:25 pm, adi at roiban.ro wrote:
> >> >[snip]
> >[snip]
> >>I ran this (all-branches version) a few times over the weekend.  The
> >>first time, when there was lots of catching up to do, took about 3.5
> >>hours.  After that, it was about 30 minutes per run.  This does seem
> >>fast enough to do nightly, so I'll set that up until we have the push-
> >>based version.
> >
> >I have created a script that can be used together with a svn post- 
> >commit
> >hook to keep an bzr mirror in sync.
> 
> Thanks.  Sorry about the delay in getting back to you on this.  Another 
> issue I think the push version needs to deal with is concurrent 
> invocation.  It looks like the script will issue overlapping "bzr pull" 
> commands now, which doesn't work very well.  Do you think you could add 
> some locking somewhere to avoid this?
> 
> Thanks again,
> Jean-Paul

Hi.
Don't worry for the delay.

I have added locking to the script.

The result is here:
https://github.com/adiroiban/scripts/tree/master/svn-bzr-sync-hook

Feel free to review the code when you have time and let me know if you
find any other problems.

--
Adi




From h at subl.ee  Wed Aug 10 07:49:07 2011
From: h at subl.ee (Heungsub Lee)
Date: Wed, 10 Aug 2011 22:49:07 +0900
Subject: [Twisted-Python] A problem with very long blocking thread in Twisted
Message-ID: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>

Hi, fellow programmers.

I have a problem with very long blocking thread(may not be finished) in
Twisted.

from socket import *
> from twisted.internet import reactor
> def consuming():
>     while reactor.running:
>         amqp_consumer.wait() # waiting for very long time or forever
> reactor.callInThread(consuming)


The process follows the below timeline:

>--: Started
---: Process
--X: Terminated
 ^ : Keyboard Input

 Now

main loop |>--------------------X
   thread | >--------------------------------------------... long time later
...---X
                             ^
                          [Ctrl]+C

 Ideal

main loop |>--------------------X
   thread | >-------------------X
                             ^
                         [Ctrl]+C

To solve this problem, I'd like to set threads as daemon. So that all
related threads are terminated when main loop is interrupted. Any idea on
this problem will be appreciated.

–––––––––––––––––––––––––––
*
Heungsub Lee
 sublee
Mobile: +82-10-3215-2380
Site: http://subl.ee/
GitHub: http://github.com/sublee
*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110810/f3731d29/attachment.html>

From rlotun at gmail.com  Wed Aug 10 08:15:38 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Wed, 10 Aug 2011 15:15:38 +0100
Subject: [Twisted-Python] A problem with very long blocking thread in
	Twisted
In-Reply-To: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
Message-ID: <CAFJezo10=0_MsRQD6cmFdvwZH7HJuuO35+aM+bM0oBiY5zYP+w@mail.gmail.com>

On Wed, Aug 10, 2011 at 2:49 PM, Heungsub Lee <h at subl.ee> wrote:

>
> To solve this problem, I'd like to set threads as daemon. So that all
> related threads are terminated when main loop is interrupted. Any idea on
> this problem will be appreciated.
>
>
Hi Heungsub,

Two options as far I as I can see:

1. Instead of having a blocking wait(), perhaps have it wait with a timeout?

2. Why don't you check out txAMQP, if you're doing amqp stuff - it has
native integration into Twisted. http://pypi.python.org/pypi/txAMQP

Keep in mind that if you set the thread as a daemon thread, the thread isn't
actually "killed", there just isn't a join() called, so it gets claimed by
the OS. This may be no different to what you want, but it's useful to keep
it in mind.

Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110810/13aa88df/attachment.html>

From itamar at itamarst.org  Wed Aug 10 08:35:00 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 10 Aug 2011 10:35:00 -0400
Subject: [Twisted-Python] A problem with very long blocking thread in
 Twisted
In-Reply-To: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
Message-ID: <00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>

> To solve this problem, I'd like to set threads as daemon. So that all
> related threads are terminated when main loop is interrupted. Any idea on
> this problem will be appreciated.

I've seen daemon threads causing core dumps on shutdown. Better to either
use a library that doesn't use threads (which as mentioned is possible in
this case), or have a timeout on your blocking wait.




From stephen at thorne.id.au  Wed Aug 10 09:58:26 2011
From: stephen at thorne.id.au (Thorne, Stephen)
Date: Wed, 10 Aug 2011 16:58:26 +0100
Subject: [Twisted-Python] A problem with very long blocking thread in
	Twisted
In-Reply-To: <00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>
References: <CA+4S-oo6wm6rJEmU-WXanRoHa40Fc2Up1hMtMRnWKUbB7RUG7A@mail.gmail.com>
	<00005498f7251d2253154f4b91b1c7ab.squirrel@webmail.zoteca.com>
Message-ID: <CAFPU7=tyOHyk9ugDeUexHcBJPoKk4e_HqJhYsXU4_2_RvE3m6Q@mail.gmail.com>

On Wed, Aug 10, 2011 at 15:35, Itamar Turner-Trauring
<itamar at itamarst.org> wrote:
>> To solve this problem, I'd like to set threads as daemon. So that all
>> related threads are terminated when main loop is interrupted. Any idea on
>> this problem will be appreciated.
>
> I've seen daemon threads causing core dumps on shutdown. Better to either
> use a library that doesn't use threads (which as mentioned is possible in
> this case), or have a timeout on your blocking wait.

When the choice is between aborting a thread and potentially dumping
core, and not exiting, I'll take dumping core.

In order to implement this in twisted, you need to subclass ThreadPool
and override the method that creates the Thread object, or
alternatively, don't use reactor.callInThread(). If you can substitute
a threadpool for txAMPQ then that will probably be the cleanest way.

Stephen.



From tobias.oberstein at tavendo.de  Thu Aug 11 15:06:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:06:04 -0700
Subject: [Twisted-Python] Flush socket
Message-ID: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>

For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.

Currently, I am using reactor.doSelect(0) after a transport.write()
to force out outstanding octets to wire.

I know this should not be done like this, but is there a clean and
supported way to do that?


   def syncSocket(self):

      ## FIXME: find suitable replacement for this code, which appears to
break
      ## sometimes ..
      ##
      ## From the web: "You should never call reactor.doSelect. This isn't
portable across
      ## reactors, and it could easily break the reactor by re-entering it
where it isn't
      ## expecting to be re-entered."
      ##
      try:
         reactor.doSelect(0)
         return True
      except:
         return False # socket has already gone away ..





From radix at twistedmatrix.com  Thu Aug 11 15:13:22 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:13:22 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>
References: <CA6A10DC.47B6%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> For testing implementations of a TCP-based protocol, I am testing
> if an implementation is agnostic wrt to in what chops in receives
> octets from the wire ("stream clean").
>
> To do that, I force out octets from the protocol test driver (written
> in Twisted) in differently sized chops, down to single octets.
>
>
While this is a noble goal, your method isn't really right: in TCP, the
chunks you write on one end do not correspond to the chunks you receive on
the other end after they've gone through a TCP stack and network. The best
way to verify that your client is stream clean is to write unit tests that
explicitly call its dataReceived method with different-sized chunks.

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/95c50aa7/attachment.html>

From tobias.oberstein at tavendo.de  Thu Aug 11 15:13:47 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:13:47 -0700
Subject: [Twisted-Python] Flow control
Message-ID: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>

For a test driver for a TCP-based protocol (written in Twisted) I want to send data to a
receiver as fast as the receiver can consume data, but not faster.

Apparently, a naive loop which just does transport.write() does not work. When I do
reactor.select(0) between the writes, it somehow works, but memory consumption
of sender is growing fast, since I guess data is buffered within Twisted, right?

I then got over implementing my own application level flow control, where the
receiver gives feedback of how much it has consumed, and the sender throttles
itself to that.

However, isn't there a simpler way (without application level flow control)?

In the end, the sender TCP stack must have knowledge of it's window size ..
is there a way to get at that info?

What is the recommended way?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/b8f0c423/attachment.html>

From radix at twistedmatrix.com  Thu Aug 11 15:16:55 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:16:55 -0400
Subject: [Twisted-Python] Flow control
In-Reply-To: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
References: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUSVWtNkXutHxsQgoLU+5TwsPSrqXnrXchWUcpYtqcODVg@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:13 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>  For a test driver for a TCP-based protocol (written in Twisted) I want to
> send data to a
> receiver as fast as the receiver can consume data, but not faster.
>
> Apparently, a naive loop which just does transport.write() does not work.
> When I do
> reactor.select(0) between the writes, it somehow works, but memory
> consumption
> of sender is growing fast, since I guess data is buffered within Twisted,
> right?
>
> I then got over implementing my own application level flow control, where
> the
> receiver gives feedback of how much it has consumed, and the sender
> throttles
> itself to that.
>
> However, isn't there a simpler way (without application level flow
> control)?
>
> In the end, the sender TCP stack must have knowledge of it's window size ..
> is there a way to get at that info?
>
> What is the recommended way?
>


You want to write a producer:

http://twistedmatrix.com/documents/current/core/howto/producers.html





-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/2bd310c3/attachment.html>

From itamar at itamarst.org  Thu Aug 11 15:17:46 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 17:17:46 -0400
Subject: [Twisted-Python] Flow control
In-Reply-To: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
References: <CA6A12AB.47B9%tobias.oberstein@tavendo.de>
Message-ID: <ec64e8accae5f27d694ad690d97dcab7.squirrel@webmail.zoteca.com>

> However, isn't there a simpler way (without application level flow
> control)?
>
> In the end, the sender TCP stack must have knowledge of it's window size
> ..
> is there a way to get at that info?
>
> What is the recommended way?

Transports provide the IConsumer interface, to which you can hook up a
producer:
http://twistedmatrix.com/documents/current/core/howto/producers.html




From tobias.oberstein at tavendo.de  Thu Aug 11 15:18:40 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:18:40 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
Message-ID: <CA6A13D0.47BF%tobias.oberstein@tavendo.de>

well, it does not necessarily correspond, but from what I see on tcpdump with
loopback device and on LAN (with TCP NoDelay set), it practically works.

the problem with your suggestion: I want to test the other end .. and that is
not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)


On 11.08.11 23:13, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:


On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.


While this is a noble goal, your method isn't really right: in TCP, the chunks you write on one end do not correspond to the chunks you receive on the other end after they've gone through a TCP stack and network. The best way to verify that your client is stream clean is to write unit tests that explicitly call its dataReceived method with different-sized chunks.

--
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/8c66905e/attachment.html>

From tobias.oberstein at tavendo.de  Thu Aug 11 15:21:25 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:21:25 -0700
Subject: [Twisted-Python] Flow control
In-Reply-To: <CAPkRfUSVWtNkXutHxsQgoLU+5TwsPSrqXnrXchWUcpYtqcODVg@mail.gmail.com>
Message-ID: <CA6A1475.47C1%tobias.oberstein@tavendo.de>

ahh, I felt I missed sth;) thx .. I'll look into that


On 11.08.11 23:16, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:

On Thu, Aug 11, 2011 at 5:13 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For a test driver for a TCP-based protocol (written in Twisted) I want to send data to a
receiver as fast as the receiver can consume data, but not faster.

Apparently, a naive loop which just does transport.write() does not work. When I do
reactor.select(0) between the writes, it somehow works, but memory consumption
of sender is growing fast, since I guess data is buffered within Twisted, right?

I then got over implementing my own application level flow control, where the
receiver gives feedback of how much it has consumed, and the sender throttles
itself to that.

However, isn't there a simpler way (without application level flow control)?

In the end, the sender TCP stack must have knowledge of it's window size ..
is there a way to get at that info?

What is the recommended way?


You want to write a producer:

http://twistedmatrix.com/documents/current/core/howto/producers.html




-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/57196cab/attachment.html>

From tobias.oberstein at tavendo.de  Thu Aug 11 15:38:49 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:38:49 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
Message-ID: <CA6A1889.47C7%tobias.oberstein@tavendo.de>

so there is no Twisted sanctioned (reactor independent and reentry safe) alternative to disable nagle (tcp nodelay) and doing a select()?

ps: to give an example of how that was at least practically useful in what i try to do .. and not only blabbing away:

http://www.tavendo.de/autobahn/testsuite/report/

for these 2 cases, the only difference are the calls to reactor.select()

http://www.tavendo.de/autobahn/testsuite/report/firefox_7_0a_20110809_case_5_19.html

http://www.tavendo.de/autobahn/testsuite/report/firefox_7_0a_20110809_case_5_20.html

by which I found

https://bugzilla.mozilla.org/show_bug.cgi?id=675961


On 11.08.11 23:13, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:


On Thu, Aug 11, 2011 at 5:06 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
For testing implementations of a TCP-based protocol, I am testing
if an implementation is agnostic wrt to in what chops in receives
octets from the wire ("stream clean").

To do that, I force out octets from the protocol test driver (written
in Twisted) in differently sized chops, down to single octets.


While this is a noble goal, your method isn't really right: in TCP, the chunks you write on one end do not correspond to the chunks you receive on the other end after they've gone through a TCP stack and network. The best way to verify that your client is stream clean is to write unit tests that explicitly call its dataReceived method with different-sized chunks.

--
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/83ead09d/attachment.html>

From radix at twistedmatrix.com  Thu Aug 11 15:40:00 2011
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 11 Aug 2011 17:40:00 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A13D0.47BF%tobias.oberstein@tavendo.de>
References: <CAPkRfUSQLQ5WswovJkCefNeKTT1vK468zjuUzrwS-xDJeNA3Uw@mail.gmail.com>
	<CA6A13D0.47BF%tobias.oberstein@tavendo.de>
Message-ID: <CAPkRfUS4eNxYNim_c8SUTzDaVWL4b2puaoFqeMkaKgrgN1urgQ@mail.gmail.com>

On Thu, Aug 11, 2011 at 5:18 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

>  well, it does not necessarily correspond, but from what I see on tcpdump
> with
> loopback device and on LAN (with TCP NoDelay set), it practically works.
>
> the problem with your suggestion: I want to test the other end .. and that
> is
> not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)
>
>
Maybe I'm missing something - are you actually writing functional tests for
Firefox itself?

-- 
Christopher Armstrong
http://radix.twistedmatrix.com/
http://planet-if.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/03933029/attachment.html>

From tobias.oberstein at tavendo.de  Thu Aug 11 15:45:37 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:45:37 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CAPkRfUS4eNxYNim_c8SUTzDaVWL4b2puaoFqeMkaKgrgN1urgQ@mail.gmail.com>
Message-ID: <CA6A1A21.47CA%tobias.oberstein@tavendo.de>

yes. for FF and Chrome, and other WebSockets clients


On 11.08.11 23:40, "Christopher Armstrong" <radix at twistedmatrix.com> wrote:

On Thu, Aug 11, 2011 at 5:18 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
well, it does not necessarily correspond, but from what I see on tcpdump with
loopback device and on LAN (with TCP NoDelay set), it practically works.

the problem with your suggestion: I want to test the other end .. and that is
not Twisted (its i.e. Firefox .. the protocol to test is WebSockets)


Maybe I'm missing something - are you actually writing functional tests for Firefox itself?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/88767fc7/attachment.html>

From itamar at itamarst.org  Thu Aug 11 15:47:09 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 17:47:09 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1889.47C7%tobias.oberstein@tavendo.de>
References: <CA6A1889.47C7%tobias.oberstein@tavendo.de>
Message-ID: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>

> so there is no Twisted sanctioned (reactor independent and reentry safe)
> alternative to disable nagle (tcp nodelay) and doing a select()?

You can disable nagle in Twisted, if that's the question
(transport.setTcpNoDelay(True)). But you can't determine TCP packet size,
that's up to the operating system.




From tobias.oberstein at tavendo.de  Thu Aug 11 15:54:11 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 11 Aug 2011 14:54:11 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
Message-ID: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>

sorry, my question wasn't clear:

I do already disable Nagle by setting TCP NoDelay.

And I do a reactor.select(0), which sometimes breaks I guess
because of reactor reentry not expected, and it will break
when the reactor is not select() based I guess.

So the question is: is there an alternative to reactor.select(0)
after a transport.write() to make the reactor call write() on
the underlying socket for all stuff buffered within Twisted?


On 11.08.11 23:47, "Itamar Turner-Trauring" <itamar at itamarst.org> wrote:

> so there is no Twisted sanctioned (reactor independent and reentry safe)
> alternative to disable nagle (tcp nodelay) and doing a select()?

You can disable nagle in Twisted, if that's the question
(transport.setTcpNoDelay(True)). But you can't determine TCP packet size,
that's up to the operating system.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110811/1533f5ee/attachment.html>

From itamar at itamarst.org  Thu Aug 11 16:17:44 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 18:17:44 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
Message-ID: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>

> sorry, my question wasn't clear:
>
> I do already disable Nagle by setting TCP NoDelay.
>
> And I do a reactor.select(0), which sometimes breaks I guess
> because of reactor reentry not expected, and it will break
> when the reactor is not select() based I guess.
>
> So the question is: is there an alternative to reactor.select(0)
> after a transport.write() to make the reactor call write() on
> the underlying socket for all stuff buffered within Twisted?

You should not be calling private reactor methods, it will break things.
You can make the max write size (default 128 or 64kb, I forget) bigger by
setting some attribute on the transport, but again, the OS will split
things up across TCP packets however you want. This is not a very useful
thing to attempt - better to instrument firefox to only do certain size
reads.




From itamar at itamarst.org  Thu Aug 11 16:20:54 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 11 Aug 2011 18:20:54 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
Message-ID: <4d752c8621fbe480b4cf61ee0113d547.squirrel@webmail.zoteca.com>

> but again, the OS will split
> things up across TCP packets however you want.

That should read "however *it* wants".




From exarkun at twistedmatrix.com  Thu Aug 11 17:43:34 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 11 Aug 2011 23:43:34 -0000
Subject: [Twisted-Python] Flush socket
In-Reply-To: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
Message-ID: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>

On 09:54 pm, tobias.oberstein at tavendo.de wrote:
>sorry, my question wasn't clear:
>
>I do already disable Nagle by setting TCP NoDelay.
>
>And I do a reactor.select(0), which sometimes breaks I guess
>because of reactor reentry not expected, and it will break
>when the reactor is not select() based I guess.
>
>So the question is: is there an alternative to reactor.select(0)
>after a transport.write() to make the reactor call write() on
>the underlying socket for all stuff buffered within Twisted?

Sure.  Implement your own IFileDescriptor.  When you add the descriptor 
to the reactor using IReactorFDSet.addWriter, it will call back onto 
your object's doWrite method to tell it there is space in the write 
buffer.  Then you can write exactly as many bytes as you want, as well 
as implementing other policies - for example you can remove the 
descriptor from the reactor's write set using 
IReactorFDSet.removeWriter, thus delaying future writes until it is re- 
added.

This will always be a somewhat unreliable way to test a remote process's 
handling of packetization, since there are still two TCP/IP stacks which 
can mess around with the data in a variety of ways, but it's as good as 
you can do if you want to use normal sockets for this testing.

A more reliable way might be to synthesize the IP datagrams yourself, 
and inject them into the recipient's TCP/IP stack.  Or skip the TCP/IP 
stack and inject them into the recipient process directly, by replacing 
the BSD socket APIs with an alternate implementation you control 
(perhaps using an LD_PRELOAD hook, for example).

Twisted doesn't offer much in the way of assistance for those latter 
approaches, though.

Jean-Paul
>
>On 11.08.11 23:47, "Itamar Turner-Trauring" <itamar at itamarst.org> 
>wrote:
>>so there is no Twisted sanctioned (reactor independent and reentry 
>>safe)
>>alternative to disable nagle (tcp nodelay) and doing a select()?
>
>You can disable nagle in Twisted, if that's the question
>(transport.setTcpNoDelay(True)). But you can't determine TCP packet 
>size,
>that's up to the operating system.
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Thu Aug 11 22:06:25 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 12 Aug 2011 00:06:25 -0400
Subject: [Twisted-Python] Flush socket
In-Reply-To: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
Message-ID: <9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>

On Aug 11, 2011, at 7:43 PM, exarkun at twistedmatrix.com wrote:

> This will always be a somewhat unreliable way to test a remote process's 
> handling of packetization, since there are still two TCP/IP stacks which 
> can mess around with the data in a variety of ways, but it's as good as 
> you can do if you want to use normal sockets for this testing.

This bears repeating.  It's really unreliable.  Really.  The sizes of buffers passed to send() and recv() bear only a coincidental resemblance to each other; one test setup may reproduce them reliably when the next will suddenly behave completely differently.  If you want even a reasonably reliable heuristic here, you need to send() and then introduce a delay.  You can do this without your own IWriteDescriptor implementation though; just implement an ITransport that does its write() by breaking things up and then calling the underlying write() with callLater()s in-between.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110812/083d76a4/attachment.html>

From tobias.oberstein at tavendo.de  Fri Aug 12 06:18:42 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 05:18:42 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
References: <CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<6cf780429f75f9175a6718c66394ed77.squirrel@webmail.zoteca.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC314@EXVMBX020-12.exch020.serverdata.net>

> > I do already disable Nagle by setting TCP NoDelay.
> >
> > And I do a reactor.select(0), which sometimes breaks I guess because
> > of reactor reentry not expected, and it will break when the reactor is
> > not select() based I guess.
> >
> > So the question is: is there an alternative to reactor.select(0) after
> > a transport.write() to make the reactor call write() on the underlying
> > socket for all stuff buffered within Twisted?
> 
> You should not be calling private reactor methods, it will break things.

? I know: therefor I was asking ..

> You can make the max write size (default 128 or 64kb, I forget) bigger by

I don't want to make it bigger, but smaller ..

> setting some attribute on the transport, but again, the OS will split things up
> across TCP packets however you want. This is not a very useful thing to
> attempt - better to instrument firefox to only do certain size reads.

What I am aiming at is a test suite for the WebSockets protocol which can
test (by fuzzing) _any_ WebSockets client.

For example, I've got a HTML file with embedded JavaScript which will
connect to the test server and run all test cases to get fuzzed.
That HTML works with any browser (that claims to support WebSockets).
I don't want to instrument 5 browsers;) At least for IE and Opera that would
not work anyway .. no source.



From tobias.oberstein at tavendo.de  Fri Aug 12 06:52:36 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 05:52:36 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC31E@EXVMBX020-12.exch020.serverdata.net>

> This will always be a somewhat unreliable way to test a remote process's
> handling of packetization, since there are still two TCP/IP stacks which can
> mess around with the data in a variety of ways, but it's as good as you can do
> if you want to use normal sockets for this testing.
> 
> A more reliable way might be to synthesize the IP datagrams yourself, and
> inject them into the recipient's TCP/IP stack.  Or skip the TCP/IP stack and

Ok, I see. Thats wicked. I don't feel ready to go that far though .. would be
probably a multi-week project.

Perhaps there is a network testing tool which receives TCP on one leg and
trickles out octets (by varying/random amounts) on a forwarding leg to the receiver?

Kind of "trickling" TCP forwarder to test stream cleanness of endpoints
implementing some TCP based protocol .. is there something?

> inject them into the recipient process directly, by replacing the BSD socket
> APIs with an alternate implementation you control (perhaps using an
> LD_PRELOAD hook, for example).

Sounds less work than above ..

> 
> Twisted doesn't offer much in the way of assistance for those latter
> approaches, though.

..  I see. Both would require more or less tricky stuff to be created
outside Python/Twisted and take significant (for me) efforts.



From tobias.oberstein at tavendo.de  Fri Aug 12 07:08:06 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 12 Aug 2011 06:08:06 -0700
Subject: [Twisted-Python] Flush socket
In-Reply-To: <9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>
References: <fa67e81ba3102faaa017b5ee615dcc82.squirrel@webmail.zoteca.com>
	<CA6A1C23.47CE%tobias.oberstein@tavendo.de>
	<20110811234334.1747.230993297.divmod.xquotient.403@localhost.localdomain>
	<9099E2A8-60A7-4FCE-8D4F-03A89277BFA6@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC331@EXVMBX020-12.exch020.serverdata.net>

Thanks for the tip, I've gone that route as it was the simplest to realize. Since I had centralized all calls
to transport.write() in a wrapper in the code, I didn't had to implement an ITransport ..

It seems to "work" (modulo the cautions you iterated) .. and I no longer use reactor internals.

I had to introduce a layer of buffering though (which kicks in as soon as I do a "synch"/"chopped" send .. test prg below.

Thanks again, cheers

=== CLIENT ===

import binascii, time
from collections import deque
from twisted.internet import reactor, protocol
from twisted.internet.defer import inlineCallbacks, Deferred


class TricklingClientProtocol(protocol.Protocol):

   def __init__(self):
      self.send_queue = deque()
      self.triggered = False

   def _trigger(self):
      if not self.triggered:
         self.triggered = True
         self._send()

   def _send(self):
      if len(self.send_queue) > 0:
         e = self.send_queue.popleft()
         self.transport.write(e)
         reactor.callLater(0.000001, self._send)
      else:
         self.triggered = False

   def send(self, data, sync = False, chopsize = None):
      if chopsize > 0:
         i = 0
         n = len(data)
         done = False
         while not done:
            j = i + chopsize
            if j >= n:
               done = True
               j = n
            self.send_queue.append(data[i:j])
            i += chopsize
         self._trigger()
         #print "chopped send"
      else:
         if sync or len(self.send_queue) > 0:
            self.send_queue.append(data)
            self._trigger()
            #print "synced send"
         else:
            self.transport.write(data)
            #print "normal send"

   def connectionMade(self):
      self.transport.setTcpNoDelay(True)
      self.part1()

   def part1(self):
      LEN = 50
      self.send("123" * LEN)
      for i in xrange(0, LEN):
         self.send("456", sync = True)
      self.send("789" * LEN, chopsize = 1)
      self.send("123" * LEN)
      reactor.callLater(0.3, self.part2)

   def part2(self):
      self.send("xyz" * 5)
      self.send("abc" * 5, chopsize = 1)
      reactor.callLater(5, self.transport.loseConnection)


class TricklingClientFactory(protocol.ClientFactory):

   protocol = TricklingClientProtocol

   def clientConnectionFailed(self, connector, reason):
     reactor.stop()

   def clientConnectionLost(self, connector, reason):
      reactor.stop()


if __name__ == '__main__':
   factory = TricklingClientFactory()
   reactor.connectTCP("localhost", 9000, factory)
   reactor.run()

=== SERVER ====

import binascii
from twisted.internet import reactor, protocol

class TricklingServerProtocol(protocol.Protocol):

   def __init__(self):
      pass

   def connectionMade(self):
      print "client accepted"
      self.transport.setTcpNoDelay(True)
      self.stats = {}

   def connectionLost(self, reason):
      print "client lost"
      for s in sorted(self.stats):
         print "%dx chop of length %d" % (self.stats[s], s)

   def dataReceived(self, data):
      l = len(data)
      self.stats[l] = self.stats.get(l, 0) + 1
      #print data


class TricklingServerFactory(protocol.ServerFactory):

   protocol = TricklingServerProtocol

   def __init__(self):
      pass

   def startFactory(self):
      pass

   def stopFactory(self):
      pass


if __name__ == '__main__':
   factory = TricklingServerFactory()
   reactor.listenTCP(9000, factory)
   reactor.run()


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Freitag, 12. August 2011 06:06
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Flush socket

On Aug 11, 2011, at 7:43 PM, exarkun at twistedmatrix.com<mailto:exarkun at twistedmatrix.com> wrote:


This will always be a somewhat unreliable way to test a remote process's
handling of packetization, since there are still two TCP/IP stacks which
can mess around with the data in a variety of ways, but it's as good as
you can do if you want to use normal sockets for this testing.


This bears repeating.  It's really unreliable.  Really.  The sizes of buffers passed to send() and recv() bear only a coincidental resemblance to each other; one test setup may reproduce them reliably when the next will suddenly behave completely differently.  If you want even a reasonably reliable heuristic here, you need to send() and then introduce a delay.  You can do this without your own IWriteDescriptor implementation though; just implement an ITransport that does its write() by breaking things up and then calling the underlying write() with callLater()s in-between.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110812/bb7102d0/attachment.html>

From exarkun at twistedmatrix.com  Sat Aug 13 22:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Aug 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1313294724.54.1536117864@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110814/9d10669b/attachment-0001.html>

From lukas2k7 at mail.ru  Sun Aug 14 00:47:55 2011
From: lukas2k7 at mail.ru (Lukichev Anton)
Date: Sun, 14 Aug 2011 10:47:55 +0400
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
Message-ID: <4E476F9B.1060706@mail.ru>

Pls, show me an example of HTTP authorization.
Thanks.

__
itfreelancer.ru



From lukas2k7 at mail.ru  Sun Aug 14 00:50:07 2011
From: lukas2k7 at mail.ru (Lukichev Anton)
Date: Sun, 14 Aug 2011 10:50:07 +0400
Subject: [Twisted-Python] Status of current proxy support (of various kinds)
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
Message-ID: <4E47701F.8060805@mail.ru>

Pls, show me an example of HTTP authorization.
Thanks all.

__
http://itfreelancer.ru



From exarkun at twistedmatrix.com  Sun Aug 14 07:15:56 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 14 Aug 2011 13:15:56 -0000
Subject: [Twisted-Python] Status of current proxy support (of
	various	kinds)
In-Reply-To: <4E47701F.8060805@mail.ru>
References: 9C5743A2-0141-459B-B014-1B256A045B97@twistedmatrix.com
	<4E47701F.8060805@mail.ru>
Message-ID: <20110814131556.13284.755904786.divmod.xquotient.61@localhost.localdomain>

On 06:50 am, lukas2k7 at mail.ru wrote:
>Pls, show me an example of HTTP authorization.
>Thanks all.

See the online documentation for Twisted Web:

  http://twistedmatrix.com/documents/current/web/howto/

in particular:

  http://twistedmatrix.com/documents/current/web/howto/web-in-60/http- 
auth.html

Jean-Paul



From alex.kirp at gmail.com  Mon Aug 15 06:21:24 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Mon, 15 Aug 2011 18:21:24 +0600
Subject: [Twisted-Python] 11.0 in PPA
Message-ID: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>

Hi all,

I hope that maintainers of Twisted PPA are subscribed to this mailing list :)

Is there any chance that 11.0 will be packaged and uploaded to the PPA
anytime soon?

-- 
Alex



From tobias.oberstein at tavendo.de  Mon Aug 15 06:39:53 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 15 Aug 2011 05:39:53 -0700
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>

Well, I'm just a Twisted user, but there is

http://pypi.python.org/pypi/Twisted/11.0.0

which I'd guess is trivial to build on Ubuntu (python setup.py install) from the source tarball.

I know that's not exactly your question;)

> -----Ursprüngliche Nachricht-----
> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] Im Auftrag von ??????? ???????????
> Gesendet: Montag, 15. August 2011 14:21
> An: twisted-python at twistedmatrix.com
> Betreff: [Twisted-Python] 11.0 in PPA
> 
> Hi all,
> 
> I hope that maintainers of Twisted PPA are subscribed to this mailing list :)
> 
> Is there any chance that 11.0 will be packaged and uploaded to the PPA
> anytime soon?
> 
> --
> Alex
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From alex.kirp at gmail.com  Mon Aug 15 06:50:38 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Mon, 15 Aug 2011 18:50:38 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>

Thanks.
I'm new here, but not _that_ new :)

Easy_install (pip, whatever) is not an option for my environment, I
need Ubuntu packages.

2011/8/15 Tobias Oberstein <tobias.oberstein at tavendo.de>:
> Well, I'm just a Twisted user, but there is
>
> http://pypi.python.org/pypi/Twisted/11.0.0
>
> which I'd guess is trivial to build on Ubuntu (python setup.py install) from the source tarball.
>
> I know that's not exactly your question;)
>
>> -----Ursprüngliche Nachricht-----
>> Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
>> bounces at twistedmatrix.com] Im Auftrag von ??????? ???????????
>> Gesendet: Montag, 15. August 2011 14:21
>> An: twisted-python at twistedmatrix.com
>> Betreff: [Twisted-Python] 11.0 in PPA
>>
>> Hi all,
>>
>> I hope that maintainers of Twisted PPA are subscribed to this mailing list :)
>>
>> Is there any chance that 11.0 will be packaged and uploaded to the PPA
>> anytime soon?
>>
>> --
>> Alex
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Mon Aug 15 07:49:06 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 15 Aug 2011 09:49:06 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
Message-ID: <1313416146.6861.6.camel@blake>

Lacking a PPA, you could build a .deb yourself using stdeb:
http://pypi.python.org/pypi/stdeb/0.5.1




From exarkun at twistedmatrix.com  Mon Aug 15 08:29:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 15 Aug 2011 14:29:33 -0000
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <1313416146.6861.6.camel@blake>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
Message-ID: <20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>

On 01:49 pm, itamar at itamarst.org wrote:
>Lacking a PPA, you could build a .deb yourself using stdeb:
>http://pypi.python.org/pypi/stdeb/0.5.1

It would be nice if the ppa were up to date, though.  Maybe someone who 
knows how to update it can share that information so that someone who 
has time to keep it up to date can take over the job.

Jean-Paul



From jessica.mckellar at gmail.com  Mon Aug 15 08:52:38 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Mon, 15 Aug 2011 10:52:38 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
Message-ID: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>

Hi folks,

> It would be nice if the ppa were up to date, though.  Maybe someone who
> knows how to update it can share that information so that someone who
> has time to keep it up to date can take over the job.

I would like to volunteer for this. I don't know much about packaging
and this seems like a good opportunity to learn.

If there are no objections, what I'll do is:
a) learn more about the ideal Twisted PPA situation (if you have
thoughts on what that should be, tell me)
b) extract the existing Twisted PPA knowledge from people
c) add a PPA maintenance job description to
http://twistedmatrix.com/trac/wiki/ProjectJobs
d) get started updating the PPA

If anyone else wants to help I'm happy to share the duties.

Regards,
-Jessica



From jml at mumak.net  Mon Aug 15 09:33:45 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 15 Aug 2011 16:33:45 +0100
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>

On Mon, Aug 15, 2011 at 3:52 PM, Jessica McKellar
<jessica.mckellar at gmail.com> wrote:
> Hi folks,
>
>> It would be nice if the ppa were up to date, though.  Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
>
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
>
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)

Current situation: It exists. Anyone in
https://launchpad.net/~twisted-dev can write to it.

Ideal situation:
 * 2 PPAs: daily & release
 * Daily PPA builds automatically after a test-passing change lands on trunk
 * Release PPA
   * Build of latest Twisted release for all supported releases of Ubuntu
   * Ideally packaging is good enough for upload to Debian (but ask
the maintainer)
   * If this can be automated, great

jml



From chris at emerge-life.de  Mon Aug 15 11:31:56 2011
From: chris at emerge-life.de (Christian Kampka)
Date: Mon, 15 Aug 2011 19:31:56 +0200
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <4E49580C.8090008@emerge-life.de>

On 15.08.2011 16:52, Jessica McKellar wrote:
> Hi folks,
> 
>> It would be nice if the ppa were up to date, though.  Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
> 
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
> 
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)
> b) extract the existing Twisted PPA knowledge from people
> c) add a PPA maintenance job description to
> http://twistedmatrix.com/trac/wiki/ProjectJobs
> d) get started updating the PPA
> 
> If anyone else wants to help I'm happy to share the duties.

Hi,

as a matter of fact, I have a ppa that has recent twisted packages[1].
The packages I put up there are actually based on upstream Ubuntu
packages and "just work" for me, but for an official ppa, I'd guess they
could use a little work and especially testing.
I can't say I'm an expert on packages or ppas, but I'm happy to offer
any advice if needed.
For starters, if you think about making this an official twisted
packaging project, I'd suggest switching from launchpad ppas to obs[2]
as it offers a much wider range of supported distributions
(Ubuntu/Debian/Fedora/CentOS) and a very powerful command line client.
Don't worry about the name, it's really an all purpose building tool,
it's open source and can therefore be run as a private instance.

Cheers,
Chris

[1] https://launchpad.net/~kampka/+archive/python
[2] openSUSE Build Service - http://build.opensuse.org



From therve at free.fr  Mon Aug 15 12:19:35 2011
From: therve at free.fr (=?ISO-8859-1?Q?Thomas_Herv=E9?=)
Date: Mon, 15 Aug 2011 20:19:35 +0200
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>	<1313416146.6861.6.camel@blake>	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CAHZ8tnZn05ApD3JV21Nt+1oe0aW1XSyGB6LqX7xnJBW96djcZQ@mail.gmail.com>
Message-ID: <4E496337.6030402@free.fr>

Le 15/08/2011 17:33, Jonathan Lange a écrit :
> On Mon, Aug 15, 2011 at 3:52 PM, Jessica McKellar
> <jessica.mckellar at gmail.com> wrote:
>> Hi folks,
>>
>>> It would be nice if the ppa were up to date, though.  Maybe someone who
>>> knows how to update it can share that information so that someone who
>>> has time to keep it up to date can take over the job.
>>
>> I would like to volunteer for this. I don't know much about packaging
>> and this seems like a good opportunity to learn.
>>
>> If there are no objections, what I'll do is:
>> a) learn more about the ideal Twisted PPA situation (if you have
>> thoughts on what that should be, tell me)
> 
> Current situation: It exists. Anyone in
> https://launchpad.net/~twisted-dev can write to it.
> 
> Ideal situation:
>  * 2 PPAs: daily & release
>  * Daily PPA builds automatically after a test-passing change lands on trunk
>  * Release PPA
>    * Build of latest Twisted release for all supported releases of Ubuntu
>    * Ideally packaging is good enough for upload to Debian (but ask
> the maintainer)
>    * If this can be automated, great

I tried that some time ago:

https://code.launchpad.net/~therve/+recipe/twisted-trunk-daily

The problem is that it diverges from the Debian packaging of Twisted,
which has a source package for every subprojects, whereas the recipe
system only works with one source.

The other problem is that the "current" Twisted package (eg the one in
Natty) uses dh_python2, which is not available on Lucid.

At any rate, I'd be happy to help.



From alex.kirp at gmail.com  Tue Aug 16 03:05:26 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Tue, 16 Aug 2011 15:05:26 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <1313416146.6861.6.camel@blake>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
Message-ID: <CADGOwRSU4Kb3DkisTjZTq2=3mMe+PspuMh17p8hhofEt10Bu7g@mail.gmail.com>

Well, it works, but this way only one package is assembled. Default
Debian packaging consists of separate packages for every part of
Twisted, and breaking this pattern doesn't seem good to me.

2011/8/15 Itamar Turner-Trauring <itamar at itamarst.org>:
> Lacking a PPA, you could build a .deb yourself using stdeb:
> http://pypi.python.org/pypi/stdeb/0.5.1
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From dialtone at gmail.com  Tue Aug 16 13:35:04 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Tue, 16 Aug 2011 12:35:04 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
Message-ID: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>

Hi,

Turtl is an HTTP proxy whose purpose is to throttle connections to
specific hostnames to avoid breaking terms of usage of those API
providers (like del.icio.us, technorati and so on).

At the core of turtl is a throttling deferred that works in a similar way as DeferredSemaphore() except that it will enforce also a rate (N calls every M seconds) at which deferreds added to it are fired.

In the past few weeks it's been improved a couple obscure bugs have been ironed out. It's been running as a proxy for a couple of years and recently we started using it as a crawler rate limiter.

Source code lives on bitbucket: https://bitbucket.org/adroll/turtl/overview

Here's a small example of its usage:

import time
from twisted.internet import reactor, defer
from twisted.protocols.policies import WrappingFactory
from twisted.web import client, server, resource
from turtl import engine

throttle = engine.ThrottlingDeferred(concurrency=1, calls=2, interval=1)

class FakeResource(resource.Resource):
    isLeaf = True
    def render(self, request):
        return "hello"

def setupServer():
    site = server.Site(FakeResource())
    wrapper = WrappingFactory(site)
    port = reactor.listenTCP(0, wrapper, interface="127.0.0.1")
    portno = port.getHost().port
    return portno

def stop(_):
    return reactor.stop()

def makeUrl(port):
    return "http://localhost:%s/" % (port)

def prinl(page):
    print time.time(), page

port = setupServer()
url = makeUrl(port)
defer.DeferredList([throttle.run(client.getPage, url).addBoth(prinl) for i in xrange(1000)]).addBoth(stop)
reactor.run()


-- 
Valentino Volonghi
http://www.adroll.com




From glyph at twistedmatrix.com  Tue Aug 16 19:55:12 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 16 Aug 2011 21:55:12 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
Message-ID: <60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>


On Aug 16, 2011, at 3:35 PM, Valentino Volonghi wrote:

> Turtl is an HTTP proxy whose purpose is to throttle connections to
> specific hostnames to avoid breaking terms of usage of those API
> providers (like del.icio.us, technorati and so on).

Awesome, Valentino!  Thanks for the announcement :).

Any chance you could also add this to <https://launchpad.net/tx> and/or <http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted>?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110816/6e64da36/attachment-0001.html>

From dialtone at gmail.com  Wed Aug 17 13:02:33 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 12:02:33 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
Message-ID: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>

On 16 Aug 2011, at 18:55, Glyph Lefkowitz wrote:

>> Turtl is an HTTP proxy whose purpose is to throttle connections to
>> specific hostnames to avoid breaking terms of usage of those API
>> providers (like del.icio.us, technorati and so on).
> 
> Awesome, Valentino!  Thanks for the announcement :).
> 
> Any chance you could also add this to <https://launchpad.net/tx> and/or <http://twistedmatrix.com/trac/wiki/ProjectsUsingTwisted>?

Hey Glyph thanks! :)

I'd add it to ProjectsUsingTwisted but I don't have rights on trac. About the tx project instead AdRoll open source repositories are on bitbucket for now, unless there's a way to link to projects from outside I won't do that one just yet.

-- 
Valentino Volonghi
http://www.adroll.com




From _ at lvh.cc  Wed Aug 17 13:36:02 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 17 Aug 2011 21:36:02 +0200
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
Message-ID: <CAE_Hg6Z_tTmSbnxfYBJCJAtqsJbvpic=wHUAnSEjps7vN18eeA@mail.gmail.com>

On Wed, Aug 17, 2011 at 9:02 PM, Valentino Volonghi <dialtone at gmail.com>wrote:

>  Hey Glyph thanks! :)
>
> I'd add it to ProjectsUsingTwisted but I don't have rights on trac.


I added it for you.


> About the tx project instead AdRoll open source repositories are on
> bitbucket for now, unless there's a way to link to projects from outside I
> won't do that one just yet.
>

Nah, you can totally make a Launchpad project for something (takes about 3
minutes) without using Launchpad to store code.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110817/c3fcce7b/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Aug 17 14:10:10 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 17 Aug 2011 16:10:10 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
Message-ID: <09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>


On Aug 17, 2011, at 3:02 PM, Valentino Volonghi wrote:

> (...) unless there's a way to link to projects from outside I won't do that one just yet.

There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110817/7fe6efee/attachment.html>

From dialtone at gmail.com  Wed Aug 17 14:15:32 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 13:15:32 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
Message-ID: <3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>

On 17 Aug 2011, at 13:10, Glyph Lefkowitz wrote:

>> (...) unless there's a way to link to projects from outside I won't do that one just yet.
> 
> There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.

Ok, I created the project and even imported the code, although it won't really be developed from there, maybe I'll even remove it from it in the future :).

https://launchpad.net/turtl

But the project is simple enough that it doesn't need so much development time devoted to it.

-- 
Valentino Volonghi
http://www.adroll.com




From glyph at twistedmatrix.com  Wed Aug 17 14:21:15 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 17 Aug 2011 16:21:15 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
Message-ID: <A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>


On Aug 17, 2011, at 4:15 PM, Valentino Volonghi wrote:

> On 17 Aug 2011, at 13:10, Glyph Lefkowitz wrote:
> 
>>> (...) unless there's a way to link to projects from outside I won't do that one just yet.
>> 
>> There are definitely ways to point at other locations for projects.  For example, Twisted isn't hosted on Launchpad (it's on twistedmatrix.com), but https://launchpad.net/twisted/ can show you lots of stuff about it.
> 
> Ok, I created the project and even imported the code, although it won't really be developed from there, maybe I'll even remove it from it in the future :).
> 
> https://launchpad.net/turtl
> 
> But the project is simple enough that it doesn't need so much development time devoted to it.

Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.

Thanks again!

-g


From dialtone at gmail.com  Wed Aug 17 15:09:24 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 17 Aug 2011 14:09:24 -0700
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
	<A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
Message-ID: <E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>

On 17 Aug 2011, at 13:21, Glyph Lefkowitz wrote:

> Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.
> 
> Thanks again!


I did that already.

https://launchpad.net/turtl

I see "Part of: tx" in the page.

-- 
Valentino Volonghi
http://www.adroll.com




From glyph at twistedmatrix.com  Thu Aug 18 01:06:25 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 18 Aug 2011 03:06:25 -0400
Subject: [Twisted-Python] [ANN] Turtl 0.1.1 throttler released
In-Reply-To: <E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>
References: <9727FA0D-22DB-4825-93B8-C19FC27172F8@gmail.com>
	<60942A96-B7CC-4371-A334-8A1F95988302@twistedmatrix.com>
	<CF43EC80-0645-4827-9891-DFC3CB4401B9@gmail.com>
	<09778CA4-C62A-40B5-95E6-A3C14E0F27C7@twistedmatrix.com>
	<3D2E1640-F041-4652-947E-10B2193EC752@gmail.com>
	<A45DC6CF-6141-4AFF-97FD-B031811A98B9@twistedmatrix.com>
	<E795EF89-866F-4FF9-B749-D7E234B4C83E@gmail.com>
Message-ID: <CBD266AF-4EED-4BE7-B721-E9B43714436A@twistedmatrix.com>


On Aug 17, 2011, at 5:09 PM, Valentino Volonghi wrote:

> On 17 Aug 2011, at 13:21, Glyph Lefkowitz wrote:
> 
>> Great :).  One more thing though: on the right side of the page for https://launchpad.net/turtl - there's a link that says 'change details'.  Click that, scroll down to 'part of', and select the 'tx' project group.
>> 
>> Thanks again!
> 
> 
> I did that already.
> 
> https://launchpad.net/turtl
> 
> I see "Part of: tx" in the page.
> 

I guess something was cached somewhere; I can see it now.  Thanks again!


From ychan at quova.com  Fri Aug 19 12:43:10 2011
From: ychan at quova.com (Osborn Chan)
Date: Fri, 19 Aug 2011 18:43:10 +0000
Subject: [Twisted-Python] SFTP Server sample
Message-ID: <CA73FCB5.13D5%ychan@quova.com>

Hi,

I am a newbie in twisted and python.
I would like to create a python SFTP server with twisted, but I cannot find any sample.

Can someone give me some advise?

Thanks,

Osborn




From kaosat.dev at gmail.com  Sat Aug 20 15:08:52 2011
From: kaosat.dev at gmail.com (Mark "Ckaos" Moissette)
Date: Sat, 20 Aug 2011 23:08:52 +0200
Subject: [Twisted-Python] Custom protocol : good practices and complexity?
Message-ID: <CAFGgJa19v6N2jYMmJ_pXev0xGiTFNAbTcukbgODzKJzqjJ3O8w@mail.gmail.com>

I am currently working on a control system for Arduino type devices using
Twisted,and have a bit of a design issue

Hello everyone!

I am currently working on a control system for Arduino type devices using
Twisted,and have a bit of a design issue

Here is how things are currently: (sorry in advance, might be a bit long)

   1. to handle different type of devices (each having a different firmware
   & communication protocol ) i have a designed a "driver" system :
      - each driver is made of :
         - a "hardware handler class" : a wrapper around Twsited's
*serial* class
         with a few added helper methods
         - a custom serial protocol

2- While implementing drivers for Reprap 3d printers (also based on arduino,
also using a serial connection) with rather specific protocols (generally
containing comands like  *enqueue* point, *set* temperature etc), i have
started to wonder if i am placing the methods for handling those features
(each having specific commands) in the right place..

This all leads me to a few questions:

While all things are working right now,I am not quite sure about the "good
practices" as far asTwisted protocols go , but having looked through the
documentation / code of quite a few of them, it seems they tend to have
relatively few methods/keep it simple.

   - is this always the case? should the protocol *only* be used for very
   low level functions and in/out formatting and communication ?
   - certain devices i want to manage have very clearly defined protocols
   (Makerbot etc), should i consider general protocol specifications to be a
   different thing then the actual Twisted protocol classes i am creating ?

Any advice, tips and pointers are more than welcome ! Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110820/4ec2bb21/attachment.html>

From exarkun at twistedmatrix.com  Sat Aug 20 22:05:24 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 21 Aug 2011 04:05:24 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1313899524.06.1885187868@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110821/4df47e0b/attachment.html>

From drew.smathers at gmail.com  Mon Aug 22 13:36:46 2011
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 22 Aug 2011 15:36:46 -0400
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA73FCB5.13D5%ychan@quova.com>
References: <CA73FCB5.13D5%ychan@quova.com>
Message-ID: <CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>

On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
> Hi,
>
> I am a newbie in twisted and python.
> I would like to create a python SFTP server with twisted, but I cannot find any sample.
>
> Can someone give me some advise?
>

I don't believe there are any examples of building an SFTP server
aimed at newcomers to twisted and python but there are existing
implementations in the wild--which might honestly be difficult to
digest if you don't know python well enough. I think zope at one time
has SFTP server based on twisted (which I can't seem to summon with
google) and there's also SFTP server implementation in tahoe-lafs
(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends/sftpd.py).

-Drew



From jstpierre at mecheye.net  Mon Aug 22 13:50:16 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Mon, 22 Aug 2011 15:50:16 -0400
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
Message-ID: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>

What about twisted.conch.ssh.filetransfer? Is that not SFTP?

On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
>> Hi,
>>
>> I am a newbie in twisted and python.
>> I would like to create a python SFTP server with twisted, but I cannot find any sample.
>>
>> Can someone give me some advise?
>>
>
> I don't believe there are any examples of building an SFTP server
> aimed at newcomers to twisted and python but there are existing
> implementations in the wild--which might honestly be difficult to
> digest if you don't know python well enough. I think zope at one time
> has SFTP server based on twisted (which I can't seem to summon with
> google) and there's also SFTP server implementation in tahoe-lafs
> (https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends/sftpd.py).
>
> -Drew
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
  Jasper



From jeff at ocjtech.us  Mon Aug 22 14:02:25 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 22 Aug 2011 15:02:25 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
Message-ID: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>

I'm re-writing a client that downloads some data from a 3rd party
using SFTP.  The old client was written using Paramiko but I'd like to
rewrite it using Twisted and Conch.  Right now I'm running into an
issue trying to get a directory listing from the remote server:

2011-08-22 13:35:03-0500 [SSHChannel session (0) on SSHService
ssh-connection on _WrappingProtocol,client] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib64/python2.7/site-packages/twisted/python/log.py",
line 84, in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/log.py",
line 69, in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/context.py",
line 118, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib64/python2.7/site-packages/twisted/python/context.py",
line 81, in callWithContext
	    return func(*args,**kw)
	--- <exception caught here> ---
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/filetransfer.py",
line 53, in dataReceived
	    f(data)
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/filetransfer.py",
line 711, in packet_STATUS
	    msg, data = getNS(data)
	  File "/usr/lib64/python2.7/site-packages/twisted/conch/ssh/common.py",
line 36, in getNS
	    l, = struct.unpack('!L',s[c:c+4])
	struct.error: unpack requires a string argument of length 4

The problem seems to be that the remote SFTP implementation isn't
returning complete status response message - it doesn't include the
error message and the language identifier.  I made a quite ugly
workaround:

diff --git a/twisted/conch/ssh/filetransfer.py b/twisted/conch/ssh/filetransfer.
index 81a86fd..ed55b27 100644
--- a/twisted/conch/ssh/filetransfer.py
+++ b/twisted/conch/ssh/filetransfer.py
@@ -708,8 +708,15 @@ class FileTransferClient(FileTransferBase):
         d, data = self._parseRequest(data)
         code, = struct.unpack('!L', data[:4])
         data = data[4:]
-        msg, data = getNS(data)
-        lang = getNS(data)
+        if len(data) >= 4:
+            msg, data = getNS(data)
+            if len(data) >= 4:
+                lang = getNS(data)
+            else:
+                lang = ''
+        else:
+            msg = ''
+            lang = ''
         if code == FX_OK:
             d.callback((msg, lang))
         elif code == FX_EOF:

Looking through the Paramiko code[1] it looks like it pads SFTP
messages that are shorter than expected with null bytes.  From what I
saw in the  SFTP I-D[2], a status message that doesn't include the
error message and language code could be construed as legal even
though they are not specifically marked as optional.


[1] https://github.com/robey/paramiko/blob/master/paramiko/message.py#L103
[2] http://tools.ietf.org/html/draft-ietf-secsh-filexfer-13#section-4

-- 
Jeff Ollie



From _ at lvh.cc  Mon Aug 22 14:17:56 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Aug 2011 22:17:56 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
	<CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
Message-ID: <CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>

Yes. It implements SFTP pretty much the way documents SFTP. Unfortunately.

Let's just say that SFTP is not the easiest of protocols when you just want
something like os/shutil but remote-ier.

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110822/ff150eed/attachment.html>

From _ at lvh.cc  Mon Aug 22 14:24:46 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 22 Aug 2011 22:24:46 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>
References: <CA73FCB5.13D5%ychan@quova.com>
	<CAEOQ8pt52oeXXSsRNE8hR90z2F3LjM7nNoTtQMOR9uYf1eKg+A@mail.gmail.com>
	<CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
	<CAE_Hg6aF5Thk1qvbkuqF6FhZak_cU_ZMdsjcS2j8T0VqprKnUQ@mail.gmail.com>
Message-ID: <CAE_Hg6aMJhNyLw35w2mOBxm+oOcmuaMcbupDmtEbUsgKOJok+A@mail.gmail.com>

Oops, pressed enter too soon:

On Mon, Aug 22, 2011 at 10:17 PM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Yes. It implements SFTP pretty much the way ** the specification **
> documents SFTP. Unfortunately.
>


cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110822/0e997728/attachment.html>

From ychan at quova.com  Mon Aug 22 14:31:26 2011
From: ychan at quova.com (Osborn Chan)
Date: Mon, 22 Aug 2011 20:31:26 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
Message-ID: <CA780869.13F6%ychan@quova.com>

Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
subsystem under UnixConchUser.

        self.subsystemLookup.update({"sftp":
filetransfer.FileTransferServer})

However, I was able to start a ssh shell by using SSHFactory and
UnixSSHReam, but I was not able to start SFTP as sub system.

Do I need to do anything explicitly to start sftp subsystem?

Thanks,

-Osborn
newbie in Python and Twisted.


On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net> wrote:

>What about twisted.conch.ssh.filetransfer? Is that not SFTP?
>
>On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com>
>wrote:
>> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
>>> Hi,
>>>
>>> I am a newbie in twisted and python.
>>> I would like to create a python SFTP server with twisted, but I cannot
>>>find any sample.
>>>
>>> Can someone give me some advise?
>>>
>>
>> I don't believe there are any examples of building an SFTP server
>> aimed at newcomers to twisted and python but there are existing
>> implementations in the wild--which might honestly be difficult to
>> digest if you don't know python well enough. I think zope at one time
>> has SFTP server based on twisted (which I can't seem to summon with
>> google) and there's also SFTP server implementation in tahoe-lafs
>> 
>>(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
>>/sftpd.py).
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
>-- 
>  Jasper
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From tobias.oberstein at tavendo.de  Mon Aug 22 15:09:00 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 22 Aug 2011 14:09:00 -0700
Subject: [Twisted-Python] RPC design questions
Message-ID: <CA78920C.4A4A%tobias.oberstein@tavendo.de>

I'm currently making some light-weight RPC/PubSub over WebSockets
using Twisted.

I have two design-like questions where I'd be happy for advice/options ...

The first is definitely Twisted related, the second not strictly, ..

Tobias


1)
I'd like to chain RPC calls, i.e.

self.call(23, "square").addCallback(self.call, "sqrt").addCallback(self.show)

https://github.com/oberstet/Autobahn/blob/dev-rpc/demo/rpc/simple/simple_client.py

self.call(<arg>, <procedure>) will return a deferred, <arg> is the marshalled argument
for the RPC, and <procedure> is the remote procedure identifier.

Now, the nice thing is, I can chain the result from one call to the next like in the
example above.

What I find less nice is that I have to have that order : <arg>, <procedure>
since the result of the first deferred will be passed as the first argument to
the second, and only then will the additional arguments be passed (in above
example the "sqrt")

How can I retain the - which I find - natural order for arguments?

self.call(<procedure>, <arg>)
self.call("square", 6).addCallback(self.call, "sqrt").addCallback(self.show)

=> not working, the 2nd self.call receives 36, "sqrt" ..


2)
The server side methods a hooked up using decorators, like

class SimpleServerProtocol(AutobahnServerProtocol):

   @AutobahnRpc
   def square(self, arg):
      return arg * arg


https://github.com/oberstet/Autobahn/blob/dev-rpc/demo/rpc/simple/simple_server.py

Here, AutobahnServerProtocol derives (indirectly) from Twisted Protocol.

The decorator will register the method for RPC under "square".

https://github.com/oberstet/Autobahn/blob/dev-rpc/lib/python/autobahn/autobahn.py

That is all nice and simple, however I am wondering if it's a good idea to
do that auto-registering on a Protocol derived class.

I mean, the alternative could be having the user call something like

registerRpcObject(<any class instance with RPC decorators>, <base URI>)

in Protocol.connectionMade(), which then would auto-register all decorated
methods in <any class instance ..>

What do you think would be better?






-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110822/c67ce97a/attachment.html>

From michal.mach at gmail.com  Mon Aug 22 16:31:00 2011
From: michal.mach at gmail.com (Michal Mach)
Date: Tue, 23 Aug 2011 00:31:00 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA780869.13F6%ychan@quova.com>
References: <CAA0H+QTCG0e9h9nc54GPfBH7L_--FAeK=HywSyOG1jCvZTZTiA@mail.gmail.com>
	<CA780869.13F6%ychan@quova.com>
Message-ID: <CAPrioPNp9dyhgqNM4n+pP2hXMbS9mv=Uw06yg8xMVZ3TEH7kKA@mail.gmail.com>

Not sure what you mean, but here is a basic example:

from zope.interface import implements

from twisted.application import service, internet
from twisted.conch.ssh.keys import Key
from twisted.conch.ssh.factory import SSHFactory
from twisted.conch.unix import UnixSSHRealm
from twisted.cred.checkers import ICredentialsChecker
from twisted.cred.credentials import IUsernamePassword
from twisted.cred.portal import Portal


def get_key(path):
    return Key.fromString(data=open(path).read())


class DummyChecker(object):
    credentialInterfaces = (IUsernamePassword,)
    implements(ICredentialsChecker)

    def requestAvatarId(self, credentials):
        return credentials.username


def makeService():
    public_key = get_key('id_rsa.pub')
    private_key = get_key('id_rsa')

    factory = SSHFactory()
    factory.privateKeys = {'ssh-rsa': private_key}
    factory.publicKeys = {'ssh-rsa': public_key}
    factory.portal = Portal(UnixSSHRealm())
    factory.portal.registerChecker(DummyChecker())

    return internet.TCPServer(2200, factory)


application = service.Application("sftp server")
sftp_server = makeService()
sftp_server.setServiceParent(application)


Put this content into a file like sftp.tac
The keys can be generated by ckeygen utility which is part of Twisted
(e.g. ckeygen -b 2048 -t rsa -f id_rsa)
and run with twistd -ny sftp.tac

If you want more background on Twisted conch i suggest the "Twisted Conch in
60 Seconds" series by
Jean-Paul Calderone on his blog http://as.ynchrono.us/

Michal Mach


On Mon, Aug 22, 2011 at 10:31 PM, Osborn Chan <ychan at quova.com> wrote:

> Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
> subsystem under UnixConchUser.
>
>        self.subsystemLookup.update({"sftp":
> filetransfer.FileTransferServer})
>
> However, I was able to start a ssh shell by using SSHFactory and
> UnixSSHReam, but I was not able to start SFTP as sub system.
>
> Do I need to do anything explicitly to start sftp subsystem?
>
> Thanks,
>
> -Osborn
> newbie in Python and Twisted.
>
>
> On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net> wrote:
>
> >What about twisted.conch.ssh.filetransfer? Is that not SFTP?
> >
> >On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com>
> >wrote:
> >> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com> wrote:
> >>> Hi,
> >>>
> >>> I am a newbie in twisted and python.
> >>> I would like to create a python SFTP server with twisted, but I cannot
> >>>find any sample.
> >>>
> >>> Can someone give me some advise?
> >>>
> >>
> >> I don't believe there are any examples of building an SFTP server
> >> aimed at newcomers to twisted and python but there are existing
> >> implementations in the wild--which might honestly be difficult to
> >> digest if you don't know python well enough. I think zope at one time
> >> has SFTP server based on twisted (which I can't seem to summon with
> >> google) and there's also SFTP server implementation in tahoe-lafs
> >>
> >>(
> https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
> >>/sftpd.py).
> >>
> >> -Drew
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >>
> >
> >
> >
> >--
> >  Jasper
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110823/fa0e3929/attachment.html>

From ychan at quova.com  Mon Aug 22 17:10:48 2011
From: ychan at quova.com (Osborn Chan)
Date: Mon, 22 Aug 2011 23:10:48 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAPrioPNp9dyhgqNM4n+pP2hXMbS9mv=Uw06yg8xMVZ3TEH7kKA@mail.gmail.com>
Message-ID: <CA782F82.1418%ychan@quova.com>

Hi Michal,

Thanks a lot!
It is a very nice working example, and it is good for newbie as well.

Regards,

Osborn

From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Date: Tue, 23 Aug 2011 00:31:00 +0200
To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Subject: Re: [Twisted-Python] SFTP Server sample

Not sure what you mean, but here is a basic example:

from zope.interface import implements

from twisted.application import service, internet
from twisted.conch.ssh.keys import Key
from twisted.conch.ssh.factory import SSHFactory
from twisted.conch.unix import UnixSSHRealm
from twisted.cred.checkers import ICredentialsChecker
from twisted.cred.credentials import IUsernamePassword
from twisted.cred.portal import Portal


def get_key(path):
    return Key.fromString(data=open(path).read())


class DummyChecker(object):
    credentialInterfaces = (IUsernamePassword,)
    implements(ICredentialsChecker)

    def requestAvatarId(self, credentials):
        return credentials.username


def makeService():
    public_key = get_key('id_rsa.pub')
    private_key = get_key('id_rsa')

    factory = SSHFactory()
    factory.privateKeys = {'ssh-rsa': private_key}
    factory.publicKeys = {'ssh-rsa': public_key}
    factory.portal = Portal(UnixSSHRealm())
    factory.portal.registerChecker(DummyChecker())

    return internet.TCPServer(2200, factory)


application = service.Application("sftp server")
sftp_server = makeService()
sftp_server.setServiceParent(application)


Put this content into a file like sftp.tac
The keys can be generated by ckeygen utility which is part of Twisted (e.g. ckeygen -b 2048 -t rsa -f id_rsa)
and run with twistd -ny sftp.tac

If you want more background on Twisted conch i suggest the "Twisted Conch in 60 Seconds" series by
Jean-Paul Calderone on his blog http://as.ynchrono.us/

Michal Mach


On Mon, Aug 22, 2011 at 10:31 PM, Osborn Chan <ychan at quova.com<mailto:ychan at quova.com>> wrote:
Yes. It is SFTP, and I found that filetransfer.FileTransferServer is a
subsystem under UnixConchUser.

       self.subsystemLookup.update({"sftp":
filetransfer.FileTransferServer})

However, I was able to start a ssh shell by using SSHFactory and
UnixSSHReam, but I was not able to start SFTP as sub system.

Do I need to do anything explicitly to start sftp subsystem?

Thanks,

-Osborn
newbie in Python and Twisted.


On 8/22/11 12:50 PM, "Jasper St. Pierre" <jstpierre at mecheye.net<mailto:jstpierre at mecheye.net>> wrote:

>What about twisted.conch.ssh.filetransfer? Is that not SFTP?
>
>On Mon, Aug 22, 2011 at 3:36 PM, Drew Smathers <drew.smathers at gmail.com<mailto:drew.smathers at gmail.com>>
>wrote:
>> On Fri, Aug 19, 2011 at 2:43 PM, Osborn Chan <ychan at quova.com<mailto:ychan at quova.com>> wrote:
>>> Hi,
>>>
>>> I am a newbie in twisted and python.
>>> I would like to create a python SFTP server with twisted, but I cannot
>>>find any sample.
>>>
>>> Can someone give me some advise?
>>>
>>
>> I don't believe there are any examples of building an SFTP server
>> aimed at newcomers to twisted and python but there are existing
>> implementations in the wild--which might honestly be difficult to
>> digest if you don't know python well enough. I think zope at one time
>> has SFTP server based on twisted (which I can't seem to summon with
>> google) and there's also SFTP server implementation in tahoe-lafs
>>
>>(https://github.com/warner/tahoe-lafs/blob/master/src/allmydata/frontends
>>/sftpd.py).
>>
>> -Drew
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
>--
>  Jasper
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

_______________________________________________ Twisted-Python mailing list Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mithrandi at mithrandi.net  Mon Aug 22 19:48:34 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Tue, 23 Aug 2011 03:48:34 +0200
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
Message-ID: <CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>

On Mon, Aug 22, 2011 at 11:09 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> self.call(<procedure>, <arg>)
> self.call("square", 6).addCallback(self.call, "sqrt").addCallback(self.show)

The easiest way to do this is probably:

from functools import partial
self.call("square", 6).addCallback(partial(self.call,
"sqrt")).addCallback(self.show)
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From mayvimmer at fibertel.com.ar  Mon Aug 22 21:52:56 2011
From: mayvimmer at fibertel.com.ar (mayvimmer at fibertel.com.ar)
Date: Tue, 23 Aug 2011 00:52:56 -0300
Subject: [Twisted-Python] Basic problem with deferreds
Message-ID: <ec664582125f3.4e52f9e8@fibertel.com.ar>

Hi guys, 
 I'm new to twisted world and I'm facing what seems to be an easy problem but I cannot grasp it. I thought I have already undestood the deferred concept but obviously I still have a concept error I cannot pass:

I have a method with the following parameters: 1- an userid, 2- a security code, 3- a list of tuples composed by an object id and an object quantity. I need to check in a database if the user exists and he's active, if the security code exists and belongs to the user and for each object if it exists and then insert the submitted quantity in the database.
What I try to do is to check both user and security code just once and then loop the objects to verify them and insert. If user or sec_code are invalid, this should fail right away, otherwise perform the action and add the results to a list. No matter how I place the methods or how I call them when evaluating the user or the security code, I always get a Deferred object and I need the actual result so that the method continue to be executed or not, evaluating each object in the list. I thought that using the "callback" method this will fire the callbacks and give me the result, but I cannot find where I need to execute it.

Here is my code:

class ExampleObject(object):

    def get_userid(self, username):
        r1 = defer.Deferred()
        def cb(rs):
            if len(rs)==0:
                resp = u'The user is not in the database'
            else:
                resp = rs[0]['id']
            r1.callback(resp)
        r1 = self.conn_pool.runQuery('select id from users where '
                'username=?', (sql_safe(username),)).addCallback(cb)
        return r1

    def get_sec_code(self, sec_code):
        r2 = defer.Deferred()
        def cb(rs):
            if len(rs)==0:
                resp = u'The security code is invalid'
            else:
                resp = rs[0]['userid']
            r2.callback(resp)
        r2 = self.conn_pool.runQuery('select user_id from sec_codes where '
                'sec_code=?', (sql_safe(sec_code),)).addCallback(cb)
        return r2

    def grant_objs(self, username, sec_code, objects):
        errmsg = None

        def grant_obj(pobj, puser, psec_code):
            d = defer.Deferred()
            def cb(rs):
                if len(rs)==0:
                    d.callback(False)
                else:
                    d.callback(True)
            def cb2(rs):
                if rs:
                    self.conn_pool.runOperation('insert into inventory '\
                        '(user_id, obj_id, quantity, dateadded) values '\
                        '(?,?,?,?)', (pobj, pitem[0], pitemp[1],
                        datetime.datetime.now())).callback(True)
                else:
                    d.callback('Object with id %d does not exist' % (pobj[0]))
            self.conn_pool.runQuery("select id, ? as quantity from objects where "
                    "id=?", (sql_safe(pobj[0]), sql_safe(pobj[1]))).\
                    addCallback(cb).addCallback(cb2)

        defs = []
        def cb(value): return value
        for i in enumerate(items):
            if i[0]==0:
		#	
                # I need the result right now, however I always get a Deferred object. 
		#
                u_ = self.get_userid(username).addCallback(cb)
                t_ = self.get_sec_code(sec_code).addCallback(cb)
                if not isinstance(u_, int):
                    errmsg = u_
                elif not isinstance(t_, int):
                    errmsg = t_
                elif u_!=t_:
                    errmsg = u'Your security code does not belong to the user'
            if errmsg is not None:
                defs.append(errmsg)
                break
            res = grant_obj(i[1], u_, t_)
            defs.append(res)
        return defs

TIA for any pointers you can give me!





From michaelnt at gmail.com  Tue Aug 23 00:36:16 2011
From: michaelnt at gmail.com (Michael Thompson)
Date: Tue, 23 Aug 2011 07:36:16 +0100
Subject: [Twisted-Python] Basic problem with deferreds
In-Reply-To: <ec664582125f3.4e52f9e8@fibertel.com.ar>
References: <ec664582125f3.4e52f9e8@fibertel.com.ar>
Message-ID: <CA+A=P1r5V3eQ-W-yQSujceOKQ_SApZ6ibstSnD7Fi8JWOX_d2A@mail.gmail.com>

On 23 August 2011 04:52,  <mayvimmer at fibertel.com.ar> wrote:
<snip>
> action and add the results to a list. No matter how I place the methods or how I call them when
> evaluating the user or the security code, I always get a Deferred object and I need the actual result
> so that the method continue to be executed or not, evaluating each object in the list. I thought that
> using the "callback" method this will fire the callbacks and give me the result, but I cannot find
> where I need to execute it.

You want the reactor to callback the deferred when the SQL query has
finished rather than you triggering the callback method.

Your get_userid function returns a deferred so if you want something
to happen after that you must attach it as a callback to this
deferred.

You could try something like the following that will run cb with the
result of get_userid and get_sec_code.

d1 = get_userid()
d2 = get_sec_code()
d = defer.DeferredList([d1, d2])
d.addCallback(cb)


>
> Here is my code:
>
> class ExampleObject(object):
>
>    def get_userid(self, username):
>        r1 = defer.Deferred()
>        def cb(rs):
>            if len(rs)==0:
>                resp = u'The user is not in the database'
>            else:
>                resp = rs[0]['id']
>            r1.callback(resp)
>        r1 = self.conn_pool.runQuery('select id from users where '
>                'username=?', (sql_safe(username),)).addCallback(cb)
>        return r1
>
>    def get_sec_code(self, sec_code):
>        r2 = defer.Deferred()
>        def cb(rs):
>            if len(rs)==0:
>                resp = u'The security code is invalid'
>            else:
>                resp = rs[0]['userid']
>            r2.callback(resp)
>        r2 = self.conn_pool.runQuery('select user_id from sec_codes where '
>                'sec_code=?', (sql_safe(sec_code),)).addCallback(cb)
>        return r2
>
>    def grant_objs(self, username, sec_code, objects):
>        errmsg = None
>
>        def grant_obj(pobj, puser, psec_code):
>            d = defer.Deferred()
>            def cb(rs):
>                if len(rs)==0:
>                    d.callback(False)
>                else:
>                    d.callback(True)
>            def cb2(rs):
>                if rs:
>                    self.conn_pool.runOperation('insert into inventory '\
>                        '(user_id, obj_id, quantity, dateadded) values '\
>                        '(?,?,?,?)', (pobj, pitem[0], pitemp[1],
>                        datetime.datetime.now())).callback(True)
>                else:
>                    d.callback('Object with id %d does not exist' % (pobj[0]))
>            self.conn_pool.runQuery("select id, ? as quantity from objects where "
>                    "id=?", (sql_safe(pobj[0]), sql_safe(pobj[1]))).\
>                    addCallback(cb).addCallback(cb2)
>
>        defs = []
>        def cb(value): return value
>        for i in enumerate(items):
>            if i[0]==0:
>                #
>                # I need the result right now, however I always get a Deferred object.
>                #
>                u_ = self.get_userid(username).addCallback(cb)
>                t_ = self.get_sec_code(sec_code).addCallback(cb)
>                if not isinstance(u_, int):
>                    errmsg = u_
>                elif not isinstance(t_, int):
>                    errmsg = t_
>                elif u_!=t_:
>                    errmsg = u'Your security code does not belong to the user'
>            if errmsg is not None:
>                defs.append(errmsg)
>                break
>            res = grant_obj(i[1], u_, t_)
>            defs.append(res)
>        return defs
>
> TIA for any pointers you can give me!
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From lists at collab.nl  Tue Aug 23 07:21:18 2011
From: lists at collab.nl (Thijs Triemstra)
Date: Tue, 23 Aug 2011 15:21:18 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA782F82.1418%ychan@quova.com>
References: <CA782F82.1418%ychan@quova.com>
Message-ID: <4E53A94E.5020000@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 08/23/2011 01:10 AM, Osborn Chan wrote:
> Hi Michal,
> 
> Thanks a lot!
> It is a very nice working example, and it is good for newbie as well.
> 
> Regards,
> 
> Osborn

I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
be included in the documentation.

Cheers,

Thijs
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU/Linux)

iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
=WET7
-----END PGP SIGNATURE-----



From jeff at ocjtech.us  Tue Aug 23 07:49:39 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Tue, 23 Aug 2011 08:49:39 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
Message-ID: <CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>

On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>
> The problem seems to be that the remote SFTP implementation isn't
> returning complete status response message - it doesn't include the
> error message and the language identifier.  I made a quite ugly
> workaround:

Wow... while googling for some other twisted/sftp related information,
I came across this:

http://twistedmatrix.com/trac/ticket/3009

-- 
Jeff Ollie



From tobias.oberstein at tavendo.de  Tue Aug 23 08:37:34 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 23 Aug 2011 07:37:34 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>

> > self.call(<procedure>, <arg>)
> > self.call("square", 6).addCallback(self.call,
> > "sqrt").addCallback(self.show)
> 
> The easiest way to do this is probably:
> 
> from functools import partial
> self.call("square", 6).addCallback(partial(self.call,
> "sqrt")).addCallback(self.show)

Thanks alot! Did not knew about partial .. I checked the solution you proposed: works.

It rectifies the arg order, but introduces more boilerplate to write (and making
usage convenient is my goal).

===

In the meantime, I've come up with 3 others options:

No chaining (no problem here):

      self.call("add", 23*23, 5).addCallback(self.show)

Chaining Option 1:

      self.call("square", 23).addCallback(self.rcall, "add", 5).addCallback(self.show)

Chaining Option 2:

      self.call("square", 23).addCallback(lambda res: self.call("add", res, 5)).addCallback(self.show)

Chaining Option 3:

      self.call("square", 23).call("add", 5).addCallback(self.show)


Option 1
=======

Makes use of rcall() vs call()  where rcall() does the reordering of arguments

   def rcall(self, *args):
      a = []
      a.append(args[1]) # procedure ID
      if args[0]:
         a.append(args[0]) # result from previous deferred
         a.extend(args[2:]) # new args
      return self.call(*a)

Pro:	terse, can handle callback&errback
Con:	user needs to remember to use rcall() not call()


Option 2
======
Similar to yours .. just using lambda.

Pro:	standard Python (as yours), can handle callbacks&errbacks
Con:	verbose


Option 3
=======

Makes use of

class AutobahnDeferred(Deferred):
   def call(self, *args):
      return self.addCallback(self.protocol.rcall, *args)

Pro:	most terse
Con:	only supports single callback no errback

====

Currently my thinking is: why not provide all variants?

Anything why I shouldn't do?


> mithrandi, i Ainil en-Balandor, a faer Ambar

ok. nice;) but what does it mean?


> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From ychan at quova.com  Tue Aug 23 11:54:04 2011
From: ychan at quova.com (Osborn Chan)
Date: Tue, 23 Aug 2011 17:54:04 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <4E53A94E.5020000@collab.nl>
Message-ID: <CA7936A0.145E%ychan@quova.com>

FYI:

The sample code is working on my side, but I had a problem to list the
files with permission issue.
I guessed it may be a issue related to my server setting. However, it
would be good if we have another person to test the code as well.

Thanks

On 8/23/11 6:21 AM, "Thijs Triemstra" <lists at collab.nl> wrote:

>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>On 08/23/2011 01:10 AM, Osborn Chan wrote:
>> Hi Michal,
>> 
>> Thanks a lot!
>> It is a very nice working example, and it is good for newbie as well.
>> 
>> Regards,
>> 
>> Osborn
>
>I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
>be included in the documentation.
>
>Cheers,
>
>Thijs
>-----BEGIN PGP SIGNATURE-----
>Version: GnuPG v1.4.11 (GNU/Linux)
>
>iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
>cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
>=WET7
>-----END PGP SIGNATURE-----
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From glyph at twistedmatrix.com  Tue Aug 23 12:27:22 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2011 14:27:22 -0400
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
	<CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
Message-ID: <F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>


On Aug 23, 2011, at 9:49 AM, Jeffrey Ollie wrote:

> On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>> 
>> The problem seems to be that the remote SFTP implementation isn't
>> returning complete status response message - it doesn't include the
>> error message and the language identifier.  I made a quite ugly
>> workaround:
> 
> Wow... while googling for some other twisted/sftp related information,
> I came across this:
> 
> http://twistedmatrix.com/trac/ticket/3009

Looks like there's a patch and everything!  It just needs some tests!  What are you waiting for! :)

-glyph


From glyph at twistedmatrix.com  Tue Aug 23 12:30:29 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 23 Aug 2011 14:30:29 -0400
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:

> class AutobahnDeferred(Deferred):
>   def call(self, *args):
>      return self.addCallback(self.protocol.rcall, *args)
> 
> Pro:	most terse
> Con:	only supports single callback no errback

Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

> Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110823/f9888ba2/attachment.html>

From tobias.oberstein at tavendo.de  Tue Aug 23 13:13:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Tue, 23 Aug 2011 12:13:48 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
	<7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5D142@EXVMBX020-12.exch020.serverdata.net>

Thanks for your advice .. that's what I was looking for;)

Makes sense, I'll stick to your advice, kick the subclassing approach and the stuff with the reordering version rcall().

That leaves "partial" and "lambda"

      # Option 1 : prints 31
      d2 = self.call("square", 6).addCallback(lambda res: self.call("sub", res, 5)).addCallback(self.show)

      # Option 3 : prints -31
      d4 = self.call("square", 6).addCallback(partial(self.call, "sub", 5)).addCallback(self.show)

Lambda is the most general, since it can insert the previous deferred's result anywhere in the next call.
Partial only simulates append result to end of args of next call.
But lambda is also most verbose.

I'll sleep one night and then see if I document and endorse both or only lambda.

Obviously, I can't hinder anyone using both. Built in stuff.

Thanks again,
Tobias



Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Dienstag, 23. August 2011 20:30
An: Twisted general discussion
Betreff: Re: [Twisted-Python] RPC design questions


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:


class AutobahnDeferred(Deferred):
  def call(self, *args):
     return self.addCallback(self.protocol.rcall, *args)

Pro:    most terse
Con:    only supports single callback no errback


Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110823/bd07c6cd/attachment.html>

From michal.mach at gmail.com  Tue Aug 23 19:14:25 2011
From: michal.mach at gmail.com (Michal Mach)
Date: Wed, 24 Aug 2011 03:14:25 +0200
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA7936A0.145E%ychan@quova.com>
References: <4E53A94E.5020000@collab.nl>
	<CA7936A0.145E%ychan@quova.com>
Message-ID: <CAPrioPMUcDGYYmvrb64Ht7N9_Y51m9Z7ZYU1YakvOFaY3bCGxg@mail.gmail.com>

Are you getting the error "Operation not permitted" when you try to do
directory listing?
This can be caused by running the SFTP server under a user which can't
change his
effective group and uid to 0 (uid of root user).
This is because when you login as user "foo" the server needs to execute all
subsequent
commands as this user (e.g. when you upload a file this file should be owned
by the user "foo")
and therefore temporary changing to user "foo".
This is exactly what the default implementation of UnixConchUser wants to
do, but fails and therefore you got
that error.

Regards,
Michal Mach


On Tue, Aug 23, 2011 at 7:54 PM, Osborn Chan <ychan at quova.com> wrote:

> FYI:
>
> The sample code is working on my side, but I had a problem to list the
> files with permission issue.
> I guessed it may be a issue related to my server setting. However, it
> would be good if we have another person to test the code as well.
>
> Thanks
>
> On 8/23/11 6:21 AM, "Thijs Triemstra" <lists at collab.nl> wrote:
>
> >-----BEGIN PGP SIGNED MESSAGE-----
> >Hash: SHA1
> >
> >On 08/23/2011 01:10 AM, Osborn Chan wrote:
> >> Hi Michal,
> >>
> >> Thanks a lot!
> >> It is a very nice working example, and it is good for newbie as well.
> >>
> >> Regards,
> >>
> >> Osborn
> >
> >I attached it to http://twistedmatrix.com/trac/ticket/5237 so it could
> >be included in the documentation.
> >
> >Cheers,
> >
> >Thijs
> >-----BEGIN PGP SIGNATURE-----
> >Version: GnuPG v1.4.11 (GNU/Linux)
> >
> >iEYEARECAAYFAk5TqU0ACgkQBRbMGagbo3lrAgCfR7lAPz5f+4J/R5bZmkFJA/iB
> >cW4An2Iqi+CGLZftFV+JZlh/R+UmsAkC
> >=WET7
> >-----END PGP SIGNATURE-----
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/572632d3/attachment.html>

From ychan at quova.com  Tue Aug 23 20:14:31 2011
From: ychan at quova.com (Osborn Chan)
Date: Wed, 24 Aug 2011 02:14:31 +0000
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CAPrioPMUcDGYYmvrb64Ht7N9_Y51m9Z7ZYU1YakvOFaY3bCGxg@mail.gmail.com>
Message-ID: <CA79AB10.1476%ychan@quova.com>

Hi Michal,

Actually, I was running the example under root. (sudo)
I was able to list/put/get file for my non-root user after login.
However, listing (ls) doesn't work on top level directory (e.g. /home/ychan), but it works fine anywhere else.

The following shows the issue.

ychan at ubuntu:~/sandbox$ sftp -P 2200 localhost
ychan at localhost's password:
Connected to localhost.
sftp> ls
Couldn't read directory: Permission denied

I guess there may be some issue related to my machine, and I may check it later.

Thanks for you help,

Osborn

From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Date: Wed, 24 Aug 2011 03:14:25 +0200
To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
Subject: Re: [Twisted-Python] SFTP Server sample

e server needs to execute all subsequent
commands as this user (e.g. when you upload a file this file should be owned by the user "foo")
and therefore temporary changing to user "foo"



From adi at roiban.ro  Wed Aug 24 12:17:03 2011
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 24 Aug 2011 21:17:03 +0300
Subject: [Twisted-Python] SFTP Server sample
In-Reply-To: <CA79AB10.1476%ychan@quova.com>
References: <CA79AB10.1476%ychan@quova.com>
Message-ID: <1314209823.11871.31.camel@pp>

On Wed, 2011-08-24 at 02:14 +0000, Osborn Chan wrote:
> Hi Michal,
> 
> Actually, I was running the example under root. (sudo)
> I was able to list/put/get file for my non-root user after login.
> However, listing (ls) doesn't work on top level directory (e.g. /home/ychan), but it works fine anywhere else.
> 
> The following shows the issue.
> 
> ychan at ubuntu:~/sandbox$ sftp -P 2200 localhost
> ychan at localhost's password:
> Connected to localhost.
> sftp> ls
> Couldn't read directory: Permission denied
> 
> I guess there may be some issue related to my machine, and I may check it later.

Your home folder most probably contains some special files/pipes for
which Twisted can not read the attributes.

When listing a folder, twisted FTP and SFTP servers are querying for
file attributes and they will return permission denied if one of the
file attributes can not be retrieved.

I am not sure if this is a bug or a feature.

Cheers,
Adi

> Osborn
> 
> From: Michal Mach <michal.mach at gmail.com<mailto:michal.mach at gmail.com>>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
> Date: Wed, 24 Aug 2011 03:14:25 +0200
> To: Twisted general discussion <twisted-python at twistedmatrix.com<mailto:twisted-python at twistedmatrix.com>>
> Subject: Re: [Twisted-Python] SFTP Server sample
> 
> e server needs to execute all subsequent
> commands as this user (e.g. when you upload a file this file should be owned by the user "foo")
> and therefore temporary changing to user "foo"
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From tobias.oberstein at tavendo.de  Wed Aug 24 16:22:32 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 15:22:32 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC design
 questions)
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <CA7B4648.4B2F%tobias.oberstein@tavendo.de>

I follow Glyphs advice and only keep the lambda version with standard Twisted Deferred.

However, I've got a (I believe) more serious "design" problem.

The RPC stuff works in Twisted, but also from JavaScript.

So I have 2 audiences (Twisted and JS developers).

On JS, I use the Deferreds that come standard with jQuery since 1.5.

Now compare the following Twisted code (self.call does the RPC and returns a Twisted Deferred):

      # prints 23
     d2 = self.call("square", 23).addCallback(lambda res: \
                        self.call("sqrt", res)).addCallback(self.show)

     # prints 23
     d3 = self.call("square", 23).addCallback(lambda res: \
                        self.call("sqrt", res).addCallback(self.show))

(note the subtle difference in bracketing)

with the following JS

            // prints 529
           sess.call("square", 23).then(function(res) {
                                            return sess.call("sqrt", res);
                                        }).then(console.log);

           // prints 23
           sess.call("square", 23).then(function(res) {
                                            sess.call("sqrt", res).then(console.log);
                                        });

===

The JS is structurally/syntactically similar to the Py version.

However they behave differently.

There seems to be a fundamental difference between Twisted and jQuery Deferreds.

When calling then() on a jQuery Deferred D, it seems to return D, not any Deferred that might
be returned within the handler within then().
http://api.jquery.com/deferred.then

Whereas the Twisted Deferred addCallback() returns the inner Deferred.

Am I getting something wrong?

I'd be glad on any hints/clarification whats going on here ..

Tobias

==

The complete examples are on:

JS:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_client.html

Py Client:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_client.py

Py Server:
https://github.com/oberstet/Autobahn/blob/master/demo/rpc/simple/simple_server.py

Library:
https://github.com/oberstet/Autobahn/tree/master/lib/python
=> python setup.py install




-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/e0e78d92/attachment.html>

From washort at twistedmatrix.com  Wed Aug 24 16:36:59 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 24 Aug 2011 15:36:59 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B4648.4B2F%tobias.oberstein@tavendo.de>
References: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
	<CA7B4648.4B2F%tobias.oberstein@tavendo.de>
Message-ID: <CAEzUHiOgLreKDP756zc-TSqvtT-iB2dZxOGaCPjvmuV=4=CH+A@mail.gmail.com>

No, this is something jQuery and CommonJS got wrong; callbacks don't chain
in their implementation.

Firing a jQuery promise invokes each callback in order with the same
argument. Firing a Deferred in Twisted invokes the first callback then
passes its return value as the arg to the next callback, and so forth.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/ab51b207/attachment.html>

From tobias.oberstein at tavendo.de  Wed Aug 24 16:52:48 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 15:52:48 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CAEzUHiOgLreKDP756zc-TSqvtT-iB2dZxOGaCPjvmuV=4=CH+A@mail.gmail.com>
Message-ID: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>

Ok. This is most unpleasant. In particular since my options then are:

1) write my own, sane (Twisted like, which I think is the sane way) JS deferred, not use jQuery/CommonJS (which everyone else does)
2) open the door for users running into issues when they do both Twisted & JS/jQuery and don't understand the subtle difference

bad.

of course not a Twisted mailing list topic anymore .. I'll go to jQuery list.

Thanks!
Tobias


On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:

No, this is something jQuery and CommonJS got wrong; callbacks don't chain in their implementation.

Firing a jQuery promise invokes each callback in order with the same argument. Firing a Deferred in Twisted invokes the first callback then passes its return value as the arg to the next callback, and so forth.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/534264cb/attachment.html>

From tobias.oberstein at tavendo.de  Wed Aug 24 17:30:07 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 16:30:07 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
Message-ID: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>

Found something: it seems in jQuery 1.6 they have introduced something which corresponds
more closely to Twisted Deferreds callback/errback chains:

            // prints 23
           sess.call("square", 23).pipe(function(res) {
                                            return sess.call("sqrt", res);
                                        }).pipe(console.log);

http://api.jquery.com/deferred.pipe/

I am still wondering why they called the other stuff "then()" when it's not then, but "also()"
and "pipe()" is the real <then> ;)

And now they have then() _and_ pipe().

This is all asking for confusion. - Whatever.

Tobias


On 25.08.11 00:52, "Tobias Oberstein" <tobias.oberstein at tavendo.de> wrote:

Ok. This is most unpleasant. In particular since my options then are:

1) write my own, sane (Twisted like, which I think is the sane way) JS deferred, not use jQuery/CommonJS (which everyone else does)
2) open the door for users running into issues when they do both Twisted & JS/jQuery and don't understand the subtle difference

bad.

of course not a Twisted mailing list topic anymore .. I'll go to jQuery list.

Thanks!
Tobias


On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:

No, this is something jQuery and CommonJS got wrong; callbacks don't chain in their implementation.

Firing a jQuery promise invokes each callback in order with the same argument. Firing a Deferred in Twisted invokes the first callback then passes its return value as the arg to the next callback, and so forth.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/c3bcd24b/attachment.html>

From jstpierre at mecheye.net  Wed Aug 24 17:36:39 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 24 Aug 2011 19:36:39 -0400
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
Message-ID: <CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>

As far as I know, Dojo's Deferreds are a direct port of Twisted's.

On Wed, Aug 24, 2011 at 7:30 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> Found something: it seems in jQuery 1.6 they have introduced something which
> corresponds
> more closely to Twisted Deferreds callback/errback chains:
>
>             // prints 23
>            sess.call("square", 23).pipe(function(res) {
>                                             return sess.call("sqrt", res);
>                                         }).pipe(console.log);
>
> http://api.jquery.com/deferred.pipe/
>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)
>
> And now they have then() _and_ pipe().
>
> This is all asking for confusion. - Whatever.
>
> Tobias
>
>
> On 25.08.11 00:52, "Tobias Oberstein" <tobias.oberstein at tavendo.de> wrote:
>
> Ok. This is most unpleasant. In particular since my options then are:
>
> 1) write my own, sane (Twisted like, which I think is the sane way) JS
> deferred, not use jQuery/CommonJS (which everyone else does)
> 2) open the door for users running into issues when they do both Twisted &
> JS/jQuery and don't understand the subtle difference
>
> bad.
>
> of course not a Twisted mailing list topic anymore .. I'll go to jQuery
> list.
>
> Thanks!
> Tobias
>
>
> On 25.08.11 00:36, "Allen Short" <washort at twistedmatrix.com> wrote:
>
> No, this is something jQuery and CommonJS got wrong; callbacks don't chain
> in their implementation.
>
> Firing a jQuery promise invokes each callback in order with the same
> argument. Firing a Deferred in Twisted invokes the first callback then
> passes its return value as the arg to the next callback, and so forth.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
  Jasper



From washort at twistedmatrix.com  Wed Aug 24 17:55:44 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Wed, 24 Aug 2011 16:55:44 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
	<CAA0H+QSXwe7F2OjYvr2A8mUGyoTi=kz2t1YyBhmiJ_VYovpN1Q@mail.gmail.com>
Message-ID: <CAEzUHiOXgjh_rOYS+2p1DPUJK-b46MmYC8zPDsr8CbJ1CETcxw@mail.gmail.com>

My understanding (partially aided by this post:
http://www.sitepen.com/blog/2010/05/03/robust-promises-with-dojo-deferred-1-5/)
is that Dojo provides both twisted-style "addCallback" and
CommonJS-style
"then" methods.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/71c83842/attachment-0001.html>

From m-lists at the-moon.net  Wed Aug 24 18:01:16 2011
From: m-lists at the-moon.net (Richard Wall)
Date: Thu, 25 Aug 2011 01:01:16 +0100
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B561F.4B3B%tobias.oberstein@tavendo.de>
References: <CA7B4D60.4B38%tobias.oberstein@tavendo.de>
	<CA7B561F.4B3B%tobias.oberstein@tavendo.de>
Message-ID: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>

On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
<snip>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)

I agree. I had the same frustration a few months ago and various
Twisted people pointed out missing features in Jquery deferred:
 * http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html

Mochikit is the best (and original) JS port of deferred..Dojo and
Google Closure both credit Mochikit (and Twisted) in their source
code. I'm planning to revert back to it.

I guess it would be useful / constructive to compile a list of the
weaknesses in the jquery / commonjs deferred API and the reasons and
use cases for the Twisted deferred API.
Perhaps they can be persuaded to evolve towards the Twisted API in time.

-RichardW.



From tobias.oberstein at tavendo.de  Wed Aug 24 18:20:18 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 24 Aug 2011 17:20:18 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
Message-ID: <CA7B61E2.4B41%tobias.oberstein@tavendo.de>

Jasper, Allen, Richard,

thanks all for the pointers. I am confused now;)

No, seriously, I need to _test_ those libs, to see what they actually do.

I.e. I suspect the "new Dojo Deferreds" with "then" return something
different than the broken "then" in jQuery 1.5.

This is all messy, personally, I want the Twisted semantics in JS, but want
to choose something "mainstream" to make it easy for users to adopt.

Well. I'll give me an hour tomorrow to look into Dojo and Mochikit.


On 25.08.11 02:01, "Richard Wall" <m-lists at the-moon.net> wrote:

On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:
<snip>
> I am still wondering why they called the other stuff "then()" when it's not
> then, but "also()"
> and "pipe()" is the real <then> ;)

I agree. I had the same frustration a few months ago and various
Twisted people pointed out missing features in Jquery deferred:
 * http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html

Mochikit is the best (and original) JS port of deferred..Dojo and
Google Closure both credit Mochikit (and Twisted) in their source
code. I'm planning to revert back to it.

I guess it would be useful / constructive to compile a list of the
weaknesses in the jquery / commonjs deferred API and the reasons and
use cases for the Twisted deferred API.
Perhaps they can be persuaded to evolve towards the Twisted API in time.

-RichardW.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110824/80b1f982/attachment.html>

From jstpierre at mecheye.net  Wed Aug 24 18:48:14 2011
From: jstpierre at mecheye.net (Jasper St. Pierre)
Date: Wed, 24 Aug 2011 20:48:14 -0400
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7B61E2.4B41%tobias.oberstein@tavendo.de>
References: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
	<CA7B61E2.4B41%tobias.oberstein@tavendo.de>
Message-ID: <CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>

Note that as far as I know, MochiKit isn't actively developed anymore.
Google's Closure has a fork of MochiKit's Deferred's, which seems to
incorporate some of Dojo's code as well.

  http://code.google.com/p/closure-library/source/browse/trunk/third_party/closure/goog/mochikit/async/

On Wed, Aug 24, 2011 at 8:20 PM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
> Jasper, Allen, Richard,
>
> thanks all for the pointers. I am confused now;)
>
> No, seriously, I need to _test_ those libs, to see what they actually do.
>
> I.e. I suspect the "new Dojo Deferreds" with "then" return something
> different than the broken "then" in jQuery 1.5.
>
> This is all messy, personally, I want the Twisted semantics in JS, but want
> to choose something "mainstream" to make it easy for users to adopt.
>
> Well. I'll give me an hour tomorrow to look into Dojo and Mochikit.
>
>
> On 25.08.11 02:01, "Richard Wall" <m-lists at the-moon.net> wrote:
>
> On 25 August 2011 00:30, Tobias Oberstein <tobias.oberstein at tavendo.de>
> wrote:
> <snip>
>> I am still wondering why they called the other stuff "then()" when it's
>> not
>> then, but "also()"
>> and "pipe()" is the real <then> ;)
>
> I agree. I had the same frustration a few months ago and various
> Twisted people pointed out missing features in Jquery deferred:
>  * http://twistedmatrix.com/pipermail/twisted-python/2011-June/024146.html
>
> Mochikit is the best (and original) JS port of deferred..Dojo and
> Google Closure both credit Mochikit (and Twisted) in their source
> code. I'm planning to revert back to it.
>
> I guess it would be useful / constructive to compile a list of the
> weaknesses in the jquery / commonjs deferred API and the reasons and
> use cases for the Twisted deferred API.
> Perhaps they can be persuaded to evolve towards the Twisted API in time.
>
> -RichardW.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



-- 
  Jasper



From ldanielburr at me.com  Wed Aug 24 18:58:57 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 24 Aug 2011 19:58:57 -0500
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re:
 RPC	design questions)
In-Reply-To: <CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>
References: <CABefbUpg-uXGiHRGXoivk579jaLZyU2ibo3RJMNV0wbji=fbCg@mail.gmail.com>
	<CA7B61E2.4B41%tobias.oberstein@tavendo.de>
	<CAA0H+QSt43dT9WU5ut8w1BdLAD3K0uQQ1w+ppiykYP6x9bCm9w@mail.gmail.com>
Message-ID: <op.v0qvojaeeyn2q3@tiassa.local>

Hi Jasper,


On Wed, 24 Aug 2011 19:48:14 -0500, Jasper St. Pierre  
<jstpierre at mecheye.net> wrote:

> Note that as far as I know, MochiKit isn't actively developed anymore.
> Google's Closure has a fork of MochiKit's Deferred's, which seems to
> incorporate some of Dojo's code as well.
>
>   http://code.google.com/p/closure-library/source/browse/trunk/third_party/closure/goog/mochikit/async/
>

Although it is certainly not "mainstream", like jQuery, or Dojo, or  
Closure, the most accurate implementation of Deferred in JavaScript is in  
Nevow.Athena.  I thought it might be worth mentioning, even though it  
isn't part of a widely-adopted JS lib.

Hope this helps,

L. Daniel Burr



From tobias.oberstein at tavendo.de  Thu Aug 25 03:43:41 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 25 Aug 2011 02:43:41 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
 design questions)
In-Reply-To: <op.v0qvojaeeyn2q3@tiassa.local>
Message-ID: <CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>

>> Note that as far as I know, MochiKit isn't actively developed anymore.
>> Google's Closure has a fork of MochiKit's Deferred's, which seems to
>> incorporate some of Dojo's code as well.
>> 
>>   
>> http://code.google.com/p/closure-library/source/browse/trunk/third_party/clos
>> ure/goog/mochikit/async/
>> 
> 
> Although it is certainly not "mainstream", like jQuery, or Dojo, or
> Closure, the most accurate implementation of Deferred in JavaScript is in
> Nevow.Athena.  I thought it might be worth mentioning, even though it
> isn't part of a widely-adopted JS lib.

I've been trying to find the code, but I'm too stupid, can't find

http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files

Where is it? Do you have a pointer to the JS Deferred?





From jml at mumak.net  Thu Aug 25 03:48:17 2011
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 25 Aug 2011 10:48:17 +0100
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
Message-ID: <CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>

On Thu, Aug 25, 2011 at 10:43 AM, Tobias Oberstein
<tobias.oberstein at tavendo.de> wrote:
>>> Note that as far as I know, MochiKit isn't actively developed anymore.
>>> Google's Closure has a fork of MochiKit's Deferred's, which seems to
>>> incorporate some of Dojo's code as well.
>>>
>>>
>>> http://code.google.com/p/closure-library/source/browse/trunk/third_party/clos
>>> ure/goog/mochikit/async/
>>>
>>
>> Although it is certainly not "mainstream", like jQuery, or Dojo, or
>> Closure, the most accurate implementation of Deferred in JavaScript is in
>> Nevow.Athena.  I thought it might be worth mentioning, even though it
>> isn't part of a widely-adopted JS lib.
>
> I've been trying to find the code, but I'm too stupid, can't find
>
> http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/files
>
> Where is it? Do you have a pointer to the JS Deferred?
>

http://bazaar.launchpad.net/~divmod-dev/divmod.org/trunk/view/head:/Nevow/nevow/js/Divmod/Defer.js

jml



From tobias.oberstein at tavendo.de  Thu Aug 25 05:29:25 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 25 Aug 2011 04:29:25 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re:
	RPC	design questions)
In-Reply-To: <CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
	<CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>

I have collected the Deferreds from

Nevow
MochiKit
Closure
jQuery
(and Twisted)

here

https://github.com/oberstet/jdeferred/tree/master/others

for convenient comparison.

I'd be interested in baking a JS Deferred which

- replicates the Twisted Deferred in semantics and syntax (API) as closely as possible
- has no external dependencies (totally self contained)
- contains only this: a JS Deferred

Anyone else?

I know this is kinda OT for this list, but it could serve Twisted indirectly: by propagating
it's mature, sane Deferred concept/terminology instead of half-baked, flawned others.

Cheers,
Tobias




From washort at twistedmatrix.com  Thu Aug 25 10:20:52 2011
From: washort at twistedmatrix.com (Allen Short)
Date: Thu, 25 Aug 2011 09:20:52 -0700
Subject: [Twisted-Python] Twisted vs jQuery Deferreds (was Re: RPC
	design questions)
In-Reply-To: <634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>
References: <op.v0qvojaeeyn2q3@tiassa.local>
	<CA7BE5ED.4B4E%tobias.oberstein@tavendo.de>
	<CAHZ8tnZx1t1ZE6r8_kXFtLLf7+cyifLwRFJ-=reLs86zfivA3g@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5D675@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAEzUHiNaQm3tD7kyC2A6PO+oC9Pgk=ZiyzLoyuPTpud3faE4hQ@mail.gmail.com>

On Thu, Aug 25, 2011 at 4:29 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> I know this is kinda OT for this list, but it could serve Twisted
> indirectly: by propagating
> it's mature, sane Deferred concept/terminology instead of half-baked,
> flawned others.
>


In some ways the popular JS design is better, since it provides
immutable-once-resolved promises. You can have that without breaking
chaining though; see how E's promises work.

I don't think Twisted's interface for Deferreds is the final answer, but
chaining is important to keep :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110825/652ad8e4/attachment.html>

From tobias.oberstein at tavendo.de  Sat Aug 27 09:15:04 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Sat, 27 Aug 2011 08:15:04 -0700
Subject: [Twisted-Python] RPC design questions
In-Reply-To: <7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
References: <CA78920C.4A4A%tobias.oberstein@tavendo.de>
	<CAMcKhMQmsD0GUEqs+D5Hr8e-Ra3o9LkyvT2t0=y+ffwhnhwRTw@mail.gmail.com>
	<634914A010D0B943A035D226786325D422C0D5CF73@EXVMBX020-12.exch020.serverdata.net>
	<7772D14C-5FD7-4B3E-9956-C010C1355E4D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0DFCB47@EXVMBX020-12.exch020.serverdata.net>

I thought I can strictly stick to the advice (only keep one variant -- I thought I keep "lambda"),
but today Python surprised me (which happens not so often).

Check out these snippets:

(1)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(lambda value: self.show(key, value))

(2)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(partial(self.show, key))

(3)
   def get(self, keys):
      for key in keys:
         self.call("keyvalue:get", key).addCallback(lambda value, key = key: self.show(key, value))

==

(2) and (3) will output the same. Not (1).

The reason is, that lambda establishes a closure over the reference "key", which changes
with loop iteration, and when the RPCs come back, that "key" will have the last value of the
list iterated over.

The result of (1) was not what I expected, and it took me some googling to find the answers.

(3) is somewhat a hack on lambda to establish closures over the value when the closure is
constructed, not the reference.

(2) does that by default.

I have some background in Erlang, where everything is immutable, and thus the issue is non.
This is where the half-functional character of Python has bitten me badly.

It may be nothing new to many, but it certainly was for me.

http://blog.markfeeney.com/2009/11/python-lambda-partial-and-scopes.html
http://stackoverflow.com/questions/938429/scope-of-python-lambda-functions-and-their-parameters
http://math.andrej.com/2009/04/09/pythons-lambda-is-broken/

==

Anyway, perhaps it's still easier for users to grasp (3) than having another construct (2).

What do you think?


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph Lefkowitz
Gesendet: Dienstag, 23. August 2011 20:30
An: Twisted general discussion
Betreff: Re: [Twisted-Python] RPC design questions


On Aug 23, 2011, at 10:37 AM, Tobias Oberstein wrote:


class AutobahnDeferred(Deferred):
  def call(self, *args):
     return self.addCallback(self.protocol.rcall, *args)

Pro:    most terse
Con:    only supports single callback no errback


Con: subclassing in general is a bad idea.  Subclassing Deferred is an even worse idea.  What if Deferred one day gets a new method called 'call' that does something different?  Your code would all break.

Anything why I shouldn't do?

Providing three different ways to do the same thing just so that you can use different syntax depending on your mood is a recipe for making your code hard to read.  Pick one style, stick to it as much as possible - consistency is more important than the benefits of any one particular style :).

(Except the subclassing one.  Don't do that.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110827/7fabacd5/attachment-0001.html>

From terry at jon.es  Sat Aug 27 19:20:03 2011
From: terry at jon.es (Terry Jones)
Date: Sun, 28 Aug 2011 02:20:03 +0100
Subject: [Twisted-Python] Retrying function calls
Message-ID: <20057.38851.947666.878499@jon.es>

I posted to the list about a Twisted class for retrying function calls
almost two years ago and blogged about it at http://bit.ly/ncnE72

I've just done the work to put that class into its own package, available
from various places:

  http://pypi.python.org/pypi/txretry
  https://github.com/fluidinfo/txretry
  https://launchpad.net/txretry

For now the only documentation is the above blog post.

Terry



From glyph at twistedmatrix.com  Sat Aug 27 21:23:09 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 27 Aug 2011 20:23:09 -0700
Subject: [Twisted-Python] Retrying function calls
In-Reply-To: <20057.38851.947666.878499@jon.es>
References: <20057.38851.947666.878499@jon.es>
Message-ID: <00239342-9C6D-410A-A681-4E84AD8113CE@twistedmatrix.com>


On Aug 27, 2011, at 6:20 PM, Terry Jones wrote:

> I posted to the list about a Twisted class for retrying function calls
> almost two years ago and blogged about it at http://bit.ly/ncnE72
> 
> I've just done the work to put that class into its own package, available
> from various places:
> 
>  http://pypi.python.org/pypi/txretry
>  https://github.com/fluidinfo/txretry
>  https://launchpad.net/txretry
> 
> For now the only documentation is the above blog post.
> 
> Terry

Thanks for packaging this up into a form which is more easily depended upon, terry! :)

-glyph




From exarkun at twistedmatrix.com  Sat Aug 27 22:05:22 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 28 Aug 2011 04:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1314504322.54.1792628933@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110828/f67a1f55/attachment-0001.html>

From jeff at ocjtech.us  Mon Aug 29 14:44:15 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 29 Aug 2011 15:44:15 -0500
Subject: [Twisted-Python] Problem Reading a Directory with Conch/SFTP
In-Reply-To: <F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>
References: <CAD-DQxT62=515Xv9nQRhaBt32NJ_0h1Yd4UZX4093-FWf7QDqg@mail.gmail.com>
	<CAD-DQxT3x_9sq3qt+ssOE4sQUG2Rv+HJQLfShKyf5Bpovavg7w@mail.gmail.com>
	<F9DF9B1C-1585-492C-9AFC-548469222047@twistedmatrix.com>
Message-ID: <CAD-DQxTWchEPCAbns+8+Xgn8c1gmJPJpY_Dxks2-0E90jiV2cA@mail.gmail.com>

On Tue, Aug 23, 2011 at 1:27 PM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Aug 23, 2011, at 9:49 AM, Jeffrey Ollie wrote:
>
>> On Mon, Aug 22, 2011 at 3:02 PM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
>>>
>>> The problem seems to be that the remote SFTP implementation isn't
>>> returning complete status response message - it doesn't include the
>>> error message and the language identifier.  I made a quite ugly
>>> workaround:
>>
>> Wow... while googling for some other twisted/sftp related information,
>> I came across this:
>>
>> http://twistedmatrix.com/trac/ticket/3009
>
> Looks like there's a patch and everything!  It just needs some tests!  What are you waiting for! :)

Time, and a little bit of inspiration :)

-- 
Jeff Ollie



From dialtone at gmail.com  Wed Aug 31 18:14:29 2011
From: dialtone at gmail.com (Valentino Volonghi)
Date: Wed, 31 Aug 2011 17:14:29 -0700
Subject: [Twisted-Python] [Job] AdRoll.com is hiring
Message-ID: <9A254FB1-3443-461B-949E-E4EA1EC5306F@gmail.com>

Hi Twisted devs and community,

In short, without repeating too much of the standard marketing material, AdRoll is a San Francisco-based advertising platform that buys impressions from ad exchanges to display ads, all in real time.

AdRoll is looking for some very skilled Python developers that can handle their own time and want to have the freedom to make critical decisions about our infrastructure.
Most of our code is in Python and some of the critical parts are in Twisted but there's also a little bit of Erlang and Java.
Our infrastructure is currently entirely deployed inside Amazon EC2 in multiple regions and availability zones and is growing a little bit every month.

We are a small but pretty open group and we contribute and release a lot of our software under Open Source licenses, for example some of the contributions to Twisted are Ampoule and turtl, released not too long ago.

Here https://www.adroll.com/why/careers you'll find more information about the company and other job openings.

Here is the more formal job posting: http://adroll.jobscore.com/jobs/adroll/scalability-engineer/d0eRBmq9Cr4ihCeJe4bk1X
However the really important requirement is to be able to learn new stuff quickly.

If you are interested send me an email at dialtone at adroll.com or dialtone at gmail.com.

-- 
Valentino Volonghi
http://www.adroll.com




