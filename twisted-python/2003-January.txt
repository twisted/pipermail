From andrew-twisted at puzzling.org  Wed Jan  1 00:06:40 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 1 Jan 2003 16:06:40 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101043247.GA12923@frobozz.local>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local>
Message-ID: <20030101050640.GB12923@frobozz.local>

On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > 
> > In case I accidentally stumble upon some time in the near future, what
> > are the requirements for documentation writing? Are plain text files
> > good enough, or HTML?
> 
> Look at the existing docs in doc/howto for examples.  They are in "Lore"
> format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> details (or http://twistedmatrix.com/documents/howto/doc-standard).

And, of course, we will gratefully accept documentation in any reasonable
format!  It's just that we'll be more grateful if it's in Lore :)

-Andrew.




From exarkun at intarweb.us  Wed Jan  1 00:23:06 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Wed, 1 Jan 2003 00:23:06 -0500
Subject: [Twisted-Python] DNS SRV support for Connectors
In-Reply-To: <20021229224704.GA21453@ki.yok.utu.fi>
References: <20021229224704.GA21453@ki.yok.utu.fi>
Message-ID: <20030101052306.GB7559@meson.dyndns.org>

On Mon, Dec 30, 2002 at 12:47:04AM +0200, Tommi Virtanen wrote:
> 	Hi. I wanted to have SRV record (RFC 2782) support connecting
> 	to services. So here we go.
> 
> 	The following patch adds a new Connector class that takes
> 	service (smtp, http, ldap, ..) and domain (example.com), looks
> 	for a DNS SRV record and falls back sanely if not found.
> 
> 	itamar pointed out that this might be more suitable in
> 	twisted.names.client -- feel free to point out what is the
> 	"right" place.
> 
> 	Please give feedback.

  Hooray. :)  One thing that concerns me is that these won't be serialized
correctly.  I -thought- you might be able to drop the resulting connector
into theApplication.tcpConnectors by hand, but at a closer look it doesn't
seem that would work.  Does anyone have any ideas on this?  Since
connectTCPService does depend on t.names, I agree with itamar that it isn't
appropriate for inclusion in t.internet, which rules out changing
Application to suit it specifically.  Perhaps a general interface for
user-specified connector functions?  Something like...

    app.connectWith(connectTCPService, 'service', 'domain', ...)

  so that the call info could be serialized and re-invoked on the next run.

  Good?  Bad?

  Jp

-- 
"The problem is, of course, that not only is economics bankrupt but it has
 always been nothing more than politics in disguise ... economics is a form
 of brain damage."  -- Hazel Henderson
--
 12:00am up 16 days, 9:46, 4 users, load average: 0.08, 0.09, 0.08
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030101/767a4f36/attachment.pgp 

From m at moshez.org  Wed Jan  1 01:22:26 2003
From: m at moshez.org (Moshe Zadka)
Date: 1 Jan 2003 06:22:26 -0000
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20021231201951.GB4327@ki.yok.utu.fi>
References: <20021231201951.GB4327@ki.yok.utu.fi>, <1041265642.640.30.camel@mingus> <20021230114825.4553701f.twisted@itamarst.org> <20021231015705.GA20756@frobozz.local> <20021231061639.GB20756@frobozz.local> <20021231064043.GD20756@frobozz.local> <20021231070822.GO944@ferd2.thristian.org> <20021231125343.GA30579@tv.stonesoft.com> <1041344881.607.15.camel@mingus>
Message-ID: <20030101062226.26100.qmail@green.zadka.com>

On Tue, 31 Dec 2002, Tommi Virtanen <tv at twistedmatrix.com> wrote:

> > > 	How does that differ from the normal file interface?
> 
> 	Stick with them until someone proves you can't.

\begin{proof}
What if there's an error? Like, the connection gets lost prematurely
(in the middle of a line, or something), or the connection never starts?
\end{proof}



From twisted at moshez.org  Wed Jan  1 01:25:12 2003
From: twisted at moshez.org (Moshe Zadka)
Date: 1 Jan 2003 06:25:12 -0000
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101035538.GR944@ferd2.thristian.org>
References: <20030101035538.GR944@ferd2.thristian.org>, <20021228105407.10208.qmail@green.zadka.com>
Message-ID: <20030101062512.26170.qmail@green.zadka.com>

On Wed, 1 Jan 2003, screwtape at froup.com wrote:

> In case I accidentally stumble upon some time in the near future, what
> are the requirements for documentation writing? Are plain text files
> good enough, or HTML?

See the "Documenting Twisted" HOWTO, in the HOWTO collection. It gives
more information than you want about it.



From andrew-twisted at puzzling.org  Wed Jan  1 10:16:14 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 2 Jan 2003 02:16:14 +1100
Subject: [Twisted-Python] doStart count leak?
Message-ID: <20030101151614.GA21924@frobozz.local>

Tv pointed this out on irc:

<Tv> _moshez: Are you guru enough to grok BaseConnector?
<Tv> Reconnects (calling connector.connect() in connectionLost/Failed) make
     it leak numPorts and never shutdown the factory.

Here is a diff for test_tcp that (I think) reveals this bug:

diff -u -r1.13 test_tcp.py
--- twisted/test/test_tcp.py    6 Aug 2002 17:12:42 -0000       1.13
+++ twisted/test/test_tcp.py    1 Jan 2003 14:59:55 -0000
@@ -56,6 +56,7 @@
 class MyClientFactory(protocol.ClientFactory):
 
     failed = 0
+    stopped = 0
     
     def buildProtocol(self, addr):
         p = MyProtocol()
@@ -69,6 +70,9 @@
     def clientConnectionLost(self, connector, reason):
         self.lostReason = reason
 
+    def stopFactory(self):
+        self.stopped = 1
+
 
 class LoopbackTestCase(unittest.TestCase):
     """Test loopback connections."""
@@ -274,6 +278,7 @@
         p = factory.protocol
         self.assertEquals((p.made, p.closed), (1, 1))
         factory.reason.trap(error.ConnectionRefusedError)
+        self.assertEquals(factory.stopped, 1)
 
         
 class CannotBindTestCase (unittest.TestCase):


-Andrew.




From jepler at unpythonic.net  Wed Jan  1 13:09:30 2003
From: jepler at unpythonic.net (Jeff Epler)
Date: Wed, 1 Jan 2003 12:09:30 -0600
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20030101023057.GA7348@meson.dyndns.org>
References: <20030101023057.GA7348@meson.dyndns.org>
Message-ID: <20030101120918.A1513@unpythonic.net>

On Tue, Dec 31, 2002 at 09:30:57PM -0500, Jp Calderone wrote:
> +try:
> +    from types import BooleanType
> +except ImportError:
> +    BooleanType = None

Maybe use
    BooleanType = type(not 1)
?  Though a compatability type sounds good too.

Jeff



From twisted at itamarst.org  Wed Jan  1 13:44:28 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 1 Jan 2003 13:44:28 -0500
Subject: [Twisted-Python] doStart count leak?
In-Reply-To: <20030101151614.GA21924@frobozz.local>
References: <20030101151614.GA21924@frobozz.local>
Message-ID: <20030101134428.53684c39.twisted@itamarst.org>

fixed in CVS. Thanks for the bug report.



From user143 at tsolver.com  Wed Jan  1 20:47:01 2003
From: user143 at tsolver.com (Allen Chan)
Date: Wed, 1 Jan 2003 20:47:01 -0500
Subject: [Twisted-Python] Problems in twisted.web.proxy.ReverseProxyResource
Message-ID: <HMEFJOHGCKGPIHHGENIIMEAKCAAA.user143@tsolver.com>

(1) The part of the URI starting with a '?' is not passed along to the
reverse proxy server.
(2) The browser hangs if conditional GET requests passed along to the
reverse proxy server returns a 304 (Not Modified) result.

The following diffs in twisted/web/proxy.py patches ReverseProxyResource to
temporarily get around these two problems.  However, more experienced
twisted developers may find better solutions.

--- proxy.py	Sun Dec 15 10:59:04 2002
+++ c:proxy.py	Thu Jan 02 01:27:43 2003
@@ -177,9 +177,22 @@

     def render(self, request):
         request.received_headers['host'] = self.host
-        clientFactory = ProxyClientFactory(request.method, self.path,
-                                     request.clientproto,
-                                     request.getAllHeaders(),
+
+        # need to add back the part of the uri starting with the '?'
+        newuri = self.path
+        if len(request.path) < len(request.uri):
+            newuri += request.uri[len(request.path):]
+
+        # need to remove all conditional get headers since the 304 response
+        # is not supported
+        newheaders = {}
+        for (k,v) in request.getAllHeaders().items():
+            if k[:3] != "if-":
+                newheaders[k] = v
+
+        clientFactory = ProxyClientFactory(request.method, newuri,
+                                     request.clientproto,
+                                     newheaders,
                                      request.content.read(),
                                      request)
         reactor.connectTCP(self.host, self.port, clientFactory)




From radix at twistedmatrix.com  Thu Jan  2 03:41:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 2 Jan 2003 03:41:58 -0500
Subject: [Twisted-Python] Migration to `twisted-web' debian package on twistedmatrix.com
Message-ID: <20030102084158.GA16470@Radii>

I've installed and configured twisted-web on pyramid, running on port
8880. Can everyone please browse through http://twistedmatrix.com:8880/
and make sure it behaves similarly to http://twistedmatrix.com/?
Tomorrow, I'll disable the old server and switch the twisted-web
configuration to use port 80.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From abe at fettig.net  Thu Jan  2 09:16:42 2003
From: abe at fettig.net (Abe Fettig)
Date: 02 Jan 2003 09:16:42 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20030101062226.26100.qmail@green.zadka.com>
References: <20021231201951.GB4327@ki.yok.utu.fi>
	, <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231061639.GB20756@frobozz.local>
	<20021231064043.GD20756@frobozz.local>
	<20021231070822.GO944@ferd2.thristian.org>
	<1041344881.607.15.camel@mingus>
	<20030101062226.26100.qmail@green.zadka.com>
Message-ID: <1041517001.630.4.camel@mingus>

On Wed, 2003-01-01 at 01:22, Moshe Zadka wrote:
> On Tue, 31 Dec 2002, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> 
> > > > 	How does that differ from the normal file interface?
> > 
> > 	Stick with them until someone proves you can't.
> 
> \begin{proof}
> What if there's an error? Like, the connection gets lost prematurely
> (in the middle of a line, or something), or the connection never starts?
> \end{proof}

I'm still pretty newbie-ish so sorry if this is a stupid question.  But
wouldn't lost connections, etc get handled on the Factory level?

Abe





From z3p at twistedmatrix.com  Thu Jan  2 23:20:16 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 02 Jan 2003 23:20:16 -0500
Subject: [Twisted-Python] Addition to IProcess API
Message-ID: <3E14C930.23740.2085CE4@localhost>

We talked about this on #twisted for a while, I 
just wanted to run this past the mailing list to 
make sure no one has any objections.  I propose a 
new method be added to the IProcess API.  The 
method is signalProcess, and will be used to send 
signals to process's run in the reactor.  The 
method would look something like this:

def signalProcess(self, signalID):
    """
    Send a signal to the process.  signalID can 
be:

    * one of "HUP", "KILL", "STOP", or "INT".  
These will be implemented in a
    cross-platform manner, and so should be used 
if possible.
    * an integer, where it represents a POSIX 
signal ID.
    """

The strings (or something like that) must be used 
because other than SIGINT, the windows signal 
module doesn't define the constants.

Any objections?  

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From jml at mumak.net  Fri Jan  3 07:35:50 2003
From: jml at mumak.net (Jonathan Lange)
Date: 03 Jan 2003 23:35:50 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
Message-ID: <1041597350.2123.13.camel@sting>

Announcing "Trial".

In the spirit of "We Invented NIH", Twisted Matrix Labs bring you a
replacement for your favourite unit test framework.

So what's my excuse?

Twisted has already forked pyunit, so in a sense this is nothing new.
However, changes made to that forked code-base aren't really that useful
to any of our users. To get any of our added value, they'd have to use
their own fork of pyunit. Re-writing it gets rid of any nasty copyright
issues.

Asynchronous unit tests are a challenge. The DeferredTestCase stuff in
pyunit.unittest is a start, but not enough. Hopefully, trial will make
it easier.

The tight coupling of runtests and test_all is kind of ugly. This is no
longer necessary in trial. 
  $ ./admin/runtests -t
is equivalent to 
  $ ./bin/trial -p twisted.test


Oh, I should mention that this wasn't my idea. It's all glyph's fault.
He made me do it.

cheers,
jml




From exarkun at intarweb.us  Fri Jan  3 22:38:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 3 Jan 2003 22:38:52 -0500
Subject: [Twisted-Python] twisted.python.rebuild error demonstration
Message-ID: <20030104033852.GA30846@meson.dyndns.org>


  This bug has plagued me for some time, but I've only just now managed to
track it down to something specific.  The attached is a minimal example of
how to replicate it.  I'll be pondering ways to fix it, but if anyone else
has any ideas, I'd love to hear them.  Optimal solutions will avoid making
calls to gc.get_referrers ;)

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
--
 12:00am up 18 days, 9:46, 6 users, load average: 0.06, 0.05, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: body.tar.gz
Type: application/x-tar-gz
Size: 587 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030103/8ea3013d/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030103/8ea3013d/attachment.pgp 

From missive at hotmail.com  Sat Jan  4 11:08:48 2003
From: missive at hotmail.com (Lee Harr)
Date: Sat, 04 Jan 2003 16:08:48 +0000
Subject: [Twisted-Python] PATCH? /doc/api/index.html
Message-ID: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>

Am I just using the wrong tool for browsing local
docs, or is this a reasonable thing to want?

I think it would be nice to have a /doc/index.html
which points to the website also.


11:02 >cvs diff -u index.html
Index: index.html
===================================================================
RCS file: /cvs/Twisted/doc/api/index.html,v
retrieving revision 1.1
diff -u -r1.1 index.html
--- index.html  9 Apr 2002 04:11:17 -0000       1.1
+++ index.html  4 Jan 2003 15:57:16 -0000
@@ -1,6 +1,11 @@
<html>
<head><title>The Twisted API Docs</title></head>
<body>
-This is where the API docs will go in the released tarballs.
+<p>This is where the API docs will go in the released tarballs.
+</p>
+
+<p>Latest released API docs are available at:
+<a 
href="http://twistedmatrix.com/documents/TwistedDocs/current/api/">http://twistedmatrix.com/documents/TwistedDocs/current/api/</a>
+</p>
</body>
</html>






_________________________________________________________________
Help STOP SPAM: Try the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From waterbug at beeblebrox.gsfc.nasa.gov  Sat Jan  4 16:37:50 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 04 Jan 2003 16:37:50 -0500
Subject: [Twisted-Python] Jelly rocks! ... and a question ...
Message-ID: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>

Hi Glyph and Twisted Gurus, 

First, thanks for the nice work on jelly, which has been 
very good to us in our xmlrpc interface development.  
I was a little apprehensive about how it might react 
to nesting, but I shouldn't have worried -- it doesn't even 
break a sweat jellying and unjellying objects with 3 levels 
of nesting ...!  :^)

Second: what's the latest twisted thinking on 
"best practice" for transfering bulk data (aka "file upload") 
in an xmlrpc or soap context?  (Yes, you've given me your 
thoughts on this before ... just checking to see if there's 
any new, er, twists ...)

Cheers,
-- Steve.



From twisted at itamarst.org  Sat Jan  4 17:43:24 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 4 Jan 2003 17:43:24 -0500
Subject: [Twisted-Python] Jelly rocks! ... and a question ...
In-Reply-To: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>
References: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>
Message-ID: <20030104174324.2403401e.twisted@itamarst.org>

On Sat, 04 Jan 2003 16:37:50 -0500
Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> Second: what's the latest twisted thinking on 
> "best practice" for transfering bulk data (aka "file upload") 
> in an xmlrpc or soap context?  (Yes, you've given me your 
> thoughts on this before ... just checking to see if there's 
> any new, er, twists ...)

Problem with twisted's built-in xmlrpc and soap code that it keeps the
whole request in memory. So, as is, sending in chunks using
twisted.web.xmlrpc.Binary (alias for xmlrpclib.Binary) might be a good
idea.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Sat Jan  4 18:28:55 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 4 Jan 2003 18:28:55 -0500
Subject: [Twisted-Python] PATCH? /doc/api/index.html
In-Reply-To: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
References: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
Message-ID: <20030104232855.GA2630@Radii>

On Sat, Jan 04, 2003 at 04:08:48PM +0000, Lee Harr wrote:
> Am I just using the wrong tool for browsing local
> docs, or is this a reasonable thing to want?

Well, the actual releases come with the API documentation in
doc/api. CVS version does not, because the API docs are
auto-generated. If you want to generate them yourself from CVS, and
you have epydoc installed (http://epydoc.sf.net), the command is
"./admin/epyrun -o doc/api" (from your base Twisted/
directory). Otherwise, just either use the website or get the latest
release (we have TwistedDocs tarballs as well as a twisted-doc debian
package, if you only want to install that).

> I think it would be nice to have a /doc/index.html
> which points to the website also.

I'll apply that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Sat Jan  4 21:22:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 13:22:19 +1100
Subject: [Twisted-Python] [OT] PyCon accomodation?
Message-ID: <20030105022219.GA9891@frobozz.local>

Hi all...

I'm intending on going to PyCon (http://www.python.org/pycon/), but I'm not
sure where I should stay for the week -- the places at
http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
expensive to my Australian dollars :)

Basically I'm looking to do this on the cheap; the airfare is expensive
enough... ideally, I'd probably share a room in a budget hotel with someone.
This has the bonus that they could help a clueless Aussie traveller find his
way around ;)

So, who's going to PyCon, and do they have any ideas on where I could stay?
I'd probably be looking to stay from Sunday night 23rd (so I could attend
the code sprint) through to Saturday the 29th, although I haven't thought
this out in detail.

-Andrew.




From twisted at itamarst.org  Sat Jan  4 21:31:29 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 4 Jan 2003 21:31:29 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <20030104213129.00c48141.twisted@itamarst.org>

On Sun, 5 Jan 2003 13:22:19 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> So, who's going to PyCon, and do they have any ideas on where I could
> stay? I'd probably be looking to stay from Sunday night 23rd (so I
> could attend the code sprint) through to Saturday the 29th, although I
> haven't thought this out in detail.

We're going to be camping out at Jean-Paul's mansion. But if that
doesn't work, splitting a hotel 3 ways makes it come out pretty cheap.



From exarkun at intarweb.us  Sat Jan  4 21:57:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 4 Jan 2003 21:57:40 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030104213129.00c48141.twisted@itamarst.org>
References: <20030105022219.GA9891@frobozz.local> <20030104213129.00c48141.twisted@itamarst.org>
Message-ID: <20030105025740.GA9755@meson.dyndns.org>

On Sat, Jan 04, 2003 at 09:31:29PM -0500, Itamar Shtull-Trauring wrote:
> 
> We're going to be camping out at Jean-Paul's mansion.

  Yea, someone remind me to lock up the hounds that week, I'd hate for them
to get you guys out there in your neat little tents.

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:00am up 19 days, 9:46, 2 users, load average: 0.07, 0.03, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030104/0487b586/attachment.pgp 

From jml at ids.org.au  Sat Jan  4 22:11:30 2003
From: jml at ids.org.au (Jonathan Lange)
Date: 05 Jan 2003 14:11:30 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041597350.2123.13.camel@sting>
References: <1041597350.2123.13.camel@sting>
Message-ID: <1041736290.2384.9.camel@sting>

On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> Announcing "Trial".
> 

CVS HEAD now uses trial. 
admin/runtests has been updated.

It's been tested with python 2.1 and 2.2 on debian linux.

It's almost exactly like pyunit in api. 

Where you did
    from twisted.trial import unittest

now do:
    from pyunit import unittest

Similarly
    class MyTest(unittest.TestCase):
        def __init__(self, method='runTests'):
            unittest.TestCase.__init__(method)
            # ...
becomes
    class MyTest(unittest.TestCase):
        def __init__(self):
            # ...

TODO (maybe):
- Add recursive search option (for -p)
- Fancy GUI
- Yummy async features.
- Randomize execution order
- Option to repeat tests n times.
- Incorporate warner's reactor cleaning patches
- Web reporter.


jml




From andrew-twisted at puzzling.org  Sat Jan  4 22:25:29 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 14:25:29 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <20030105032529.GB9891@frobozz.local>

On Sun, Jan 05, 2003 at 02:11:30PM +1100, Jonathan Lange wrote:
> 
> Where you did
>     from twisted.trial import unittest
> 
> now do:
>     from pyunit import unittest

You got this backwards, I presume?

-Andrew.




From jml at ids.org.au  Sat Jan  4 22:19:04 2003
From: jml at ids.org.au (Jonathan Lange)
Date: 05 Jan 2003 14:19:04 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <1041736743.2384.11.camel@sting>

On Sun, 2003-01-05 at 14:11, Jonathan Lange wrote:
> On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> > Announcing "Trial".
> > 
>
> Where you did
>     from twisted.trial import unittest
> 
> now do:
>     from pyunit import unittest

Ummm... the other way around. (Thanks bruce)





From radix at twistedmatrix.com  Sat Jan  4 22:24:33 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 4 Jan 2003 22:24:33 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <20030105032433.GB2630@Radii>

On Sun, Jan 05, 2003 at 01:22:19PM +1100, Andrew Bennetts wrote:
> Hi all...
> 
> I'm intending on going to PyCon (http://www.python.org/pycon/), but I'm not
> sure where I should stay for the week -- the places at
> http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
> expensive to my Australian dollars :)
> 
> Basically I'm looking to do this on the cheap; the airfare is expensive
> enough... ideally, I'd probably share a room in a budget hotel with someone.
> This has the bonus that they could help a clueless Aussie traveller find his
> way around ;)
> 
> So, who's going to PyCon, and do they have any ideas on where I could stay?
> I'd probably be looking to stay from Sunday night 23rd (so I could attend
> the code sprint) through to Saturday the 29th, although I haven't thought
> this out in detail.

Well, I'm planning on staying all week at a cheapie motel-6 or super-8
or something. There's a chance Nafai'll room with me, and the more the
merrier. No internet at those, though, afaik :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Sat Jan  4 22:50:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 14:50:09 +1100
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii>
References: <20030105022219.GA9891@frobozz.local> <20030105032433.GB2630@Radii>
Message-ID: <20030105035009.GC9891@frobozz.local>

On Sat, Jan 04, 2003 at 10:24:33PM -0500, Christopher Armstrong wrote:
> 
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)

I don't have a laptop or anything anyway, so that'd be fine... :)

-Andrew.




From screwtape at froup.com  Sat Jan  4 23:21:26 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 5 Jan 2003 15:21:26 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101043247.GA12923@frobozz.local>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local>
Message-ID: <20030105042125.GA26857@ferd2.thristian.org>

On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > > Hi.
> > > The following things are undocumented -- any volunteers would be welcome:
> > >  - Twisted chat HOWTO (im, words server, writing bots)
> > 
> > In case I accidentally stumble upon some time in the near future, what
> > are the requirements for documentation writing? Are plain text files
> > good enough, or HTML?
> 
> Look at the existing docs in doc/howto for examples.  They are in "Lore"
> format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> details (or http://twistedmatrix.com/documents/howto/doc-standard).

Well, I've had a go at documenting my experiences with Twisted IM.
How's this?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Universe-flavored. What you mortals call `butterscotch'." -- T&R, 1999-09-17
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030105/ce846c78/attachment.html 

From screwtape at froup.com  Sat Jan  4 23:45:32 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 5 Jan 2003 15:45:32 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030105042125.GA26857@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local> <20030105042125.GA26857@ferd2.thristian.org>
Message-ID: <20030105044532.GB26857@ferd2.thristian.org>

On Sun, Jan 05, 2003 at 03:21:26PM +1100, screwtape at froup.com wrote:
> On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> > On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > > On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > > > Hi.
> > > > The following things are undocumented -- any volunteers would be welcome:
> > > >  - Twisted chat HOWTO (im, words server, writing bots)
> > > 
> > > In case I accidentally stumble upon some time in the near future, what
> > > are the requirements for documentation writing? Are plain text files
> > > good enough, or HTML?
> > 
> > Look at the existing docs in doc/howto for examples.  They are in "Lore"
> > format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> > details (or http://twistedmatrix.com/documents/howto/doc-standard).
> 
> Well, I've had a go at documenting my experiences with Twisted IM.
> How's this?

Andrew tapped me on the shoulder on IRC and told me where to find
hlint. 

*blush*

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Fried eye car nelpew.
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20030105/78247ef4/attachment.html 

From missive at hotmail.com  Sun Jan  5 00:13:38 2003
From: missive at hotmail.com (Lee Harr)
Date: Sun, 05 Jan 2003 05:13:38 +0000
Subject: [Twisted-Python] PATCH: /doc/howto/pb-copyable.html
Message-ID: <F13705R73pd0JBN6l2300012538@hotmail.com>

Looks like in /doc/howto/listings/pb/copy_sender.py
RemotePond was renamed CopyPond, and this
reference in the howto was missed.



23:20 >cvs diff -u pb-copyable.html
Index: pb-copyable.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-copyable.html,v
retrieving revision 1.2
diff -u -r1.2 pb-copyable.html
--- pb-copyable.html    30 Dec 2002 13:16:18 -0000      1.2
+++ pb-copyable.html    5 Jan 2003 04:15:32 -0000
@@ -177,7 +177,7 @@
base="twisted.spread.flavors">Serializable</code> classes. In this section,
we focus on <code class="API" base="twisted.spread.flavors">Copyable</code>.
The copyable subclass of <code>LilyPond</code> is called
-<code>RemotePond</code>. We create an instance of it and send it through
+<code>CopyPond</code>. We create an instance of it and send it through
<code>callRemote</code> as an argument to the receiver's
<code>remote_takePond</code> method. The Jelly layer will serialize
(<q>jelly</q>) that object as an instance with a class name of


_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From andrew-twisted at puzzling.org  Sun Jan  5 00:35:47 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 16:35:47 +1100
Subject: [Twisted-Python] PATCH: /doc/howto/pb-copyable.html
In-Reply-To: <F13705R73pd0JBN6l2300012538@hotmail.com>
References: <F13705R73pd0JBN6l2300012538@hotmail.com>
Message-ID: <20030105053547.GE9891@frobozz.local>

On Sun, Jan 05, 2003 at 05:13:38AM +0000, Lee Harr wrote:
> Looks like in /doc/howto/listings/pb/copy_sender.py
> RemotePond was renamed CopyPond, and this
> reference in the howto was missed.

Checked in.  Thanks!

-Andrew.




From m at moshez.org  Sun Jan  5 00:57:14 2003
From: m at moshez.org (Moshe Zadka)
Date: 5 Jan 2003 05:57:14 -0000
Subject: [Twisted-Python] PATCH? /doc/api/index.html
In-Reply-To: <20030104232855.GA2630@Radii>
References: <20030104232855.GA2630@Radii>, <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
Message-ID: <20030105055714.18747.qmail@green.zadka.com>

On Sat, 4 Jan 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Well, the actual releases come with the API documentation in
> doc/api. CVS version does not, because the API docs are
> auto-generated. If you want to generate them yourself from CVS, and
> you have epydoc installed (http://epydoc.sf.net), the command is
> "./admin/epyrun -o doc/api" (from your base Twisted/
> directory).

I just wanted to add that if you're using Debian sid, you can just
"apt-get install python-epydoc" and be happy.



From radix at twistedmatrix.com  Sun Jan  5 03:45:39 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 5 Jan 2003 03:45:39 -0500
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <20030105084539.GD2630@Radii>

On Sun, Jan 05, 2003 at 02:11:30PM +1100, Jonathan Lange wrote:
> On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> > Announcing "Trial".
>
> TODO (maybe):
...
> - Randomize execution order

Thought of something.

When this is implemented, it'll be very important (for obvious
reasons) to have the execution order saved to some file on every run,
with the ability to read in that file for future runs.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lac at strakt.com  Sun Jan  5 04:06:44 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 05 Jan 2003 10:06:44 +0100
Subject: [Twisted-Python] from comp.lang.python
Message-ID: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>

an indication that a link to the license belongs prominently on
http://www.twistedmatrix.com/ ?

Laura Creighton

------- Forwarded Message

Return-Path: python-list-admin at python.org
Delivery-Date: Sun Jan  5 09:52:37 2003
From: m_webber_sydney at yahoo.com.au (Matthew)
Newsgroups: comp.lang.python
Subject: Re: Threaded server in python!?

Andrew Bennetts <andrew-pythonlist at puzzling.org> wrote
 
> Using a library like Twisted <http://twistedmatrix.com/>, it's
> straightforward to handle multiple sockets, without needing threads.
> 
> As a bonus, Twisted has implementations of many common protocols, ready for
> you to use and adapt to your problem -- I strongly recommend it, as I
> suspect you will find it *much* easier than the alternatives.

Twisted looks great, based on a quick glance at the web site, but if
the license terms were on the web site I could not find them. What
license is Twisted released under?
Thanks
- -- 
http://mail.python.org/mailman/listinfo/python-list

------- End of Forwarded Message




From bob at redivi.com  Sun Jan  5 04:26:13 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 5 Jan 2003 04:26:13 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii>
Message-ID: <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com>

On Saturday, Jan 4, 2003, at 22:24 America/New_York, Christopher 
Armstrong wrote:

> On Sun, Jan 05, 2003 at 01:22:19PM +1100, Andrew Bennetts wrote:
>> Hi all...
>>
>> I'm intending on going to PyCon (http://www.python.org/pycon/), but 
>> I'm not
>> sure where I should stay for the week -- the places at
>> http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
>> expensive to my Australian dollars :)
>>
>> Basically I'm looking to do this on the cheap; the airfare is 
>> expensive
>> enough... ideally, I'd probably share a room in a budget hotel with 
>> someone.
>> This has the bonus that they could help a clueless Aussie traveller 
>> find his
>> way around ;)
>>
>> So, who's going to PyCon, and do they have any ideas on where I could 
>> stay?
>> I'd probably be looking to stay from Sunday night 23rd (so I could 
>> attend
>> the code sprint) through to Saturday the 29th, although I haven't 
>> thought
>> this out in detail.
>
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)
>

Depending on how much you like subway transit (it's actually really 
clean there, but only runs until midnight-2am latest.. used to be 
midnight but I hear they've extended it slightly on weekends), you can 
pretty much stay anywhere near a metro station and make it to PyCon 
pretty easily..  Presumably, since it's at GWU, it's going to be really 
close to the Foggy Bottom stop on the orange/blue metro line.. which is 
quite accessible from the red line (or any other, but particularly the 
red and orange/blue).  The metro system there is pretty quick, and 
cheap (non-rush hour it's no more than $2.20 USD each way.. not too 
much more otherwise).  I really can't suggest accommodations, as I used 
to live in the area and have plenty of friends to crash with in those 
parts (and never had to use a hotel for any legitimate purpose), but 
it's relatively easy to get around without renting a car so long as 
you're within walking distance of a metro station.

For those of you traveling from points north or south via Amtrak, the 
train stops at the Union Station stop (red line), with an easy transfer 
over to the orange/blue at Metro Center.

http://www.wmata.com/metrorail/systemmap.cfm is the map of the 
metrorail system, where you could plot accessible hotels in the 
md/dc//va area.

And as far as internet access goes, you're probably SOL.. Net cafes and 
net access at hotels aren't very popular down there from what I 
remember.. if you're lucky you'll meet some cute college guy/girl that 
goes to a school at GWU / GMU / etc. and will let you "plug in" to "the 
ethernet" in her dorm, but that's the best you'll be able to do :)




From lac at strakt.com  Sun Jan  5 04:30:19 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 5 Jan 2003 10:30:19 +0100
Subject: [Twisted-Python] stale link
Message-ID: <200301050930.h059UJOw023595@ratthing-b246.strakt.com>

http://twistedmatrix.com/documents/TwistedDocs/Twisted-0.99.0/LICENSE.html
Clicking on 'table of contents' yields 'File not found'.



From lac at strakt.com  Sun Jan  5 05:20:20 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 05 Jan 2003 11:20:20 +0100
Subject: [Twisted-Python] [OT] PyCon accomodation? 
In-Reply-To: Message from Bob Ippolito <bob@redivi.com> 
   of "Sun, 05 Jan 2003 04:26:13 EST." <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com> 
References: <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com> 
Message-ID: <200301051020.h05AKKjL023787@ratthing-b246.strakt.com>

Last time I was in DC, I needed an internet connection and looked in the
phone book.  I found an internet cafe on the same metro line as the
Pentagon station.  So I trecked over there, only to find that the place
shut at 1800!    

I now am informed that Kinko's copies has reliable internet, and some of
then are open 24 hours -- perhaps all of them for all I know.

Laura Creighton



From twisted at itamarst.org  Sun Jan  5 11:47:45 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 5 Jan 2003 11:47:45 -0500
Subject: [Twisted-Python] from comp.lang.python
In-Reply-To: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>
References: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>
Message-ID: <20030105114745.2f84850d.twisted@itamarst.org>

On Sun, 05 Jan 2003 10:06:44 +0100
Laura Creighton <lac at strakt.com> wrote:

> an indication that a link to the license belongs prominently on
> http://www.twistedmatrix.com/ ?

Done.



From nafai at twistedmatrix.com  Sun Jan  5 02:39:48 2003
From: nafai at twistedmatrix.com (Travis B. Hartwell)
Date: Sun, 05 Jan 2003 00:39:48 -0700
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii> (Christopher Armstrong's message
 of "Sat, 04 Jan 2003 22:24:33 -0500")
References: <20030105022219.GA9891@frobozz.local>
	<20030105032433.GB2630@Radii>
Message-ID: <87vg14caez.fsf@lutya.travishartwell.net>

<snip>
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)
>
Yes, that's the plan.  So count me in on this budget motel shopping
spree.  I guess I'll have to suffer through dialup at these places, as
I have an ISP that is nationwide.  But the idea is to be able to
afford to go.  My current plan is to fly out Monday afternoon/evening
or Tuesday morning and leave Saturday morning.

Keep me informed if I'm not on IRC!

Nafai



From warner at lothar.com  Sun Jan  5 17:34:10 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 05 Jan 2003 14:34:10 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
Message-ID: <20030105.143410.28796355.warner@lothar.com>

Hi all..

For some reason not yet entirely clear to me, I started to put some time
into bringing cReactor up to date. My hope was to make it functional enough
to pass the full test suite. At the moment, it fails 120 of the 413 tests in
the suite (that doesn't include test_threads, which I had to disable to
prevent the test suite from hanging forever).

In tracking down the reasons for these failures, I've come across a number
of places where the reactor interface (as defined by IReactorCore and
friends in twisted.internet.interfaces) was ambiguous about something, and
the default reactor has implemented different functionality than the
cReactor. Several tests have come to rely upon default.py's implementation,
and fail when run under cReactor even though it appears to implement the
same interface.

To resolve these, we need to nail down the ambiguities in the Interface, so
that all reactors can implement the same thing. The two issues I've
encountered so far:

 IReactorCore.addSystemEventTrigger()   [1 test failure]

  The interface mentions three (startup, shutdown, persist) as examples of
  "system events", and says they will be fired internally by the Reactor. It
  also says:

        An implementor of this interface must only implement those events
        described here.

  The cReactor implements this literally, and refuses to accept calls to
  addSystemEventTrigger or fireSystemEvent with event names outside of
  ['startup', 'shutdown', 'persist']. The default reactor (and the ones that
  inherit system event code from it, which is all of them except cReactor)
  use a dict for the events, and therefore accept any string as a system
  event type. test_internet.InterfaceTestCase.testTriggerSystemEvent creates
  several new event types ("test", "defer", "remove") and runs tests with
  them. This test thus fails under cReactor.

  RESOLUTION: I think we decided that cReactor should accept arbitrary event
  names, and I'm working on code to implement that. That restrictive
  sentence should be removed from the docs. I'd also like to see a better
  explanation of what event types will be fired by whom: if the API allows
  an arbitrary string, but the Reactor will only fire "startup" and
  "shutdown" for you, then you have to know that it is your own
  responsibility to fire the new triggers that you've added.


 IReactorCore.stop() [38 test failures]

  The interface description for .stop and .crash make the claim that once
  the Reactor is shut down with .stop(), it may not be restarted with
  .run(). Reactors which have been stopped with .crash() *may* be restarted.

  cReactor implements this literally. Once reactor.stop() has been called,
  the reactor is moved into a state from which .run() and .iterate() raise a
  RuntimeError "the reactor is shut down!" exception. The default reactor
  does not enforce this: .run and .stop may be called as many times as you
  like.

  All tests in a given invocation of bin/trial or admin/runtests are
  executed with the same Reactor instance. Indeed everything done by a
  single python process is performed with the same Reactor instance. Normal
  apps don't care: they start the reactor in main() or under twistd, and it
  runs until the app shuts down. The tests, however, start and stop the
  reactor all the time, generally once per test case.

  Under cReactor, the first test to do reactor.stop() will terminate the
  reactor permanently, causing failures of all later tests that attempt
  reactor.run() or reactor.iterate(). This also tends to kill tests which
  re-bind to the same port multiple times, as the reactor.iterate() needed
  to release the port fails, leaving the port bound, causing a "Address
  already in use" error on the second test.

  POTENTIAL RESOLUTION: We need to decide whether the default reactor should
  obey the restriction defined by IReactorCore, or whether the interface
  (and cReactor) should be changed to match the behavior of the default
  reactor.

  Another possibility which might be easier to implement would be to enforce
  the no-restart restriction, but also create IReactorCore.reset(), and
  declare that it will return the reactor to the state it had at boot time,
  allowing .run() to be called on it once again. This method would also
  remove all DelayedCall events, remove any TCP/UDP sockets or listening
  ports, delete any systemEventTriggers that were added, and generally get
  rid of any other state which might have accumulated since startup. We
  could have the test suite use this to reset the reactor just after each
  test.


The other test failures are the result of functionality that is missing from
cReactor. In general, cReactor has not been maintained as new features were
added to the other reactors. Here is a summary of all the failures. (note
that some tests fail for multiple reasons).

 IReactorTCP.connectTCP [8 failures]
  client support (outbound sockets) is missing

 IListeningPort.getHost [22 failures]
  simple missing function, mostly used to determine the port number of a
  system-selected listening port

 IReactorProcess [9 failures]
  launching child processes is unimplemented 

 rebuild attempts: missing __dict__ [5 failures]
  twisted.python.rebuild attempts to rebuild a C module with no .__dict__

 IReactorMulticast [5 failures]
  multicast support is not implemented

 IReactorUDP [23 failures]
  UDP support is unimplemented

 IReactorCore.addSystemEventTrigger()   [1 test failure]

 IReactorCore.stop() [38 test failures]


Some of these aren't hard to fix: IListeningPort.getHost should only take a
few lines, connectTCP is pretty straightforward, and IReactorUDP should be a
fairly easy cut-and-paste job from the TCP code. But others are tricky:
IReactorProcess is fairly high-level, and IReactorMulticast might be relying
upon some portability code in the python socket module that wouldn't be
available at the C layer.

I think it is now pretty clear what work needs to be done. Everyone is
welcome to take a crack at it :). I will probably finish the getDelayedCall
and addSystemEventTrigger changes I'm working on, commit them, and then let
others pursue the pieces that are useful to them. (the default reactor is
currently good enough for my needs; I only put this much time into cReactor
because I wanted to understand the test failures well enough to know that my
changes weren't the cause).

cheers,
 -Brian



From andrew-twisted at puzzling.org  Sun Jan  5 18:19:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 6 Jan 2003 10:19:12 +1100
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030105231912.GA30384@frobozz.local>

On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:
>   Another possibility which might be easier to implement would be to enforce
>   the no-restart restriction, but also create IReactorCore.reset(), and
>   declare that it will return the reactor to the state it had at boot time,
>   allowing .run() to be called on it once again. This method would also
>   remove all DelayedCall events, remove any TCP/UDP sockets or listening
>   ports, delete any systemEventTriggers that were added, and generally get
>   rid of any other state which might have accumulated since startup. We
>   could have the test suite use this to reset the reactor just after each
>   test.

+1

-Andrew.




From jml at mumak.net  Sun Jan  5 18:49:58 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Mon, 6 Jan 2003 10:49:58 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] yay reactors! -r <submodule-of-twisted.internet>
In-Reply-To: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com>
References: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com>
Message-ID: <20030105234958.GA22173@grond.mumak.net>

On Sun, Jan 05, 2003 at 01:12:51AM -0600, radix CVS wrote:
> Modified files:
> Twisted/admin/runtests 1.18 1.19
> 
> ViewCVS links:
> http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/admin/runtests.diff?r1=text&tr1=1.18&r2=text&tr2=1.19&cvsroot=Twisted
> http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/scripts/trial.py.diff?r1=text&tr1=1.4&r2=text&tr2=1.5&cvsroot=Twisted
> 
> Index: Twisted/admin/runtests
> diff -u Twisted/admin/runtests:1.18 Twisted/admin/runtests:1.19
> --- Twisted/admin/runtests:1.18	Sat Jan  4 18:52:28 2003
> +++ Twisted/admin/runtests	Sat Jan  4 23:12:48 2003
> @@ -27,8 +27,8 @@
>  
>  from twisted.scripts import trial
>  
> -if len(sys.argv) == 1:
> -    sys.argv.extend(['-p', 'twisted.test'])
> +# People shouldn't really be passing -p to runtests; it's explicitly for twisted.test
> +sys.argv.extend(['-p', 'twisted.test'])
>  

Although people shouldn't be passing -p to runtests, they can be
expected to pass -m. 

The old behaviour was that 'runtests -m twisted.test.test_stuff' would
only run the tests in the test_stuff module. With this commit, the same
command will run the entire test suite, which sucks.

Can we fix it? 

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030106/8626b923/attachment.pgp 

From glyph at twistedmatrix.com  Sun Jan  5 20:52:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 05 Jan 2003 19:52:46 -0600 (CST)
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105231912.GA30384@frobozz.local>
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105231912.GA30384@frobozz.local>
Message-ID: <20030105.195246.59468345.glyph@twistedmatrix.com>


On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:

> Another possibility which might be easier to implement would be to enforce
> the no-restart restriction, but also create IReactorCore.reset(), and declare
> that it will return the reactor to the state it had at boot time, allowing
> .run() to be called on it once again. This method would also remove all
> DelayedCall events, remove any TCP/UDP sockets or listening ports, delete any
> systemEventTriggers that were added, and generally get rid of any other state
> which might have accumulated since startup. We could have the test suite use
> this to reset the reactor just after each test.

+infinity

This is definitely the way it should work.

Thanks, Brian, for taking the time to analyze the existing cReactor code in so
much depth.  I really owe you one.  I will need more time to fully read and
comprehend the rest of the message, but this part has been on my personal TODO
list for a while.

Ideally, I'd prefer that the reactor is *always* in a consistent state.  That
would probably involve redefining or removing the "crash" facility, since there
would only be "pause and return so that run() continues" or "stop properly so
run() restarts".  Whatever compromise you come up with in this vein is probably
acceptable, though.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030105/2baa4199/attachment.pgp 

From jml at ids.org.au  Sun Jan  5 21:41:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Mon, 6 Jan 2003 13:41:17 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] yay reactors! -r <submodule-of-twisted.internet>
In-Reply-To: <20030105234958.GA22173@grond.mumak.net>
References: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com> <20030105234958.GA22173@grond.mumak.net>
Message-ID: <20030106024117.GB22173@grond.mumak.net>

On Mon, Jan 06, 2003 at 10:49:58AM +1100, Jonathan M. Lange wrote:
> On Sun, Jan 05, 2003 at 01:12:51AM -0600, radix CVS wrote:
> > Modified files:
> > Twisted/admin/runtests 1.18 1.19
> > 
> > Index: Twisted/admin/runtests
> > diff -u Twisted/admin/runtests:1.18 Twisted/admin/runtests:1.19
> > --- Twisted/admin/runtests:1.18	Sat Jan  4 18:52:28 2003
> > +++ Twisted/admin/runtests	Sat Jan  4 23:12:48 2003
> > @@ -27,8 +27,8 @@
> >  
> >  from twisted.scripts import trial
> >  
> > -if len(sys.argv) == 1:
> > -    sys.argv.extend(['-p', 'twisted.test'])
> > +# People shouldn't really be passing -p to runtests; it's explicitly for twisted.test
> > +sys.argv.extend(['-p', 'twisted.test'])
> >  
> 
> Although people shouldn't be passing -p to runtests, they can be
> expected to pass -m. 
> 
> The old behaviour was that 'runtests -m twisted.test.test_stuff' would
> only run the tests in the test_stuff module. With this commit, the same
> command will run the entire test suite, which sucks.
> 
> Can we fix it? 
> 

BTW, I should mention that this stuff is entirely orthogonal to the good
work done by adding a reactor switch. Reverting to fix the -p / -m thing
would be a mistake.

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030106/7fdf35b0/attachment.pgp 

From exarkun at intarweb.us  Sun Jan  5 22:30:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 5 Jan 2003 22:30:54 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030106033054.GA15791@meson.dyndns.org>

On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:
> Hi all..
> 

  Excellent write up of the problems, thanks :)

> [snip]
> 
>  rebuild attempts: missing __dict__ [5 failures]
>   twisted.python.rebuild attempts to rebuild a C module with no .__dict__
> 

  Checked in a fixed this group tonight.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 20 days, 9:46, 2 users, load average: 0.10, 0.14, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030105/cd5c217c/attachment.pgp 

From twisted at itamarst.org  Sun Jan  5 23:50:17 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 5 Jan 2003 23:50:17 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030105235017.30debeef.twisted@itamarst.org>

On Sun, 05 Jan 2003 14:34:10 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

>  IReactorProcess [9 failures]
>   launching child processes is unimplemented 

>  IReactorMulticast [5 failures]
>   multicast support is not implemented
> 
>  IReactorUDP [23 failures]
>   UDP support is unimplemented

I'll fix the test suite to only run these tests if the appropriate
interface is implemented. There's no reason cReactor has to support UDP
or multicast, though it'd be nice if it implemented IFDSelector or
whatever it's called so that it could use the python UDP, SSL, process
and multicast code.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From tv at twistedmatrix.com  Sun Jan  5 23:06:08 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 6 Jan 2003 06:06:08 +0200
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030105084539.GD2630@Radii>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii>
Message-ID: <20030106040608.GA18843@ki.yok.utu.fi>

On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > TODO (maybe):
> ...
> > - Randomize execution order
> 
> Thought of something.
> 
> When this is implemented, it'll be very important (for obvious
> reasons) to have the execution order saved to some file on every run,
> with the ability to read in that file for future runs.

  Maybe just print out the PRNG seed you started with when exiting.

-- 
:(){ :|:&};:



From andrew-twisted at puzzling.org  Mon Jan  6 01:34:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 6 Jan 2003 17:34:17 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030106040608.GA18843@ki.yok.utu.fi>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii> <20030106040608.GA18843@ki.yok.utu.fi>
Message-ID: <20030106063417.GA30839@frobozz.local>

On Mon, Jan 06, 2003 at 06:06:08AM +0200, Tommi Virtanen wrote:
> On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > > TODO (maybe):
> > ...
> > > - Randomize execution order
> > 
> > Thought of something.
> > 
> > When this is implemented, it'll be very important (for obvious
> > reasons) to have the execution order saved to some file on every run,
> > with the ability to read in that file for future runs.
> 
>   Maybe just print out the PRNG seed you started with when exiting.

Hmm.  While Python's PRNG is pure python, so should give the same results
with the same seed on different platforms, I think saving the execution
order is better.  Consider the case of fixing a test that involves
generating more or less random numbers than before -- the act of fixing the
test loses the determinism you were hoping to preserve with the PRNG.

Also, it'd probably be nice if adding tests didn't interfere with
"replaying" a specific run of tests.

It's probably worth saving the PRNG with the execution order, though :)

-Andrew.




From exarkun at intarweb.us  Mon Jan  6 03:01:29 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 6 Jan 2003 03:01:29 -0500
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030106063417.GA30839@frobozz.local>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii> <20030106040608.GA18843@ki.yok.utu.fi> <20030106063417.GA30839@frobozz.local>
Message-ID: <20030106080129.GA17493@meson.dyndns.org>

On Mon, Jan 06, 2003 at 05:34:17PM +1100, Andrew Bennetts wrote:
> On Mon, Jan 06, 2003 at 06:06:08AM +0200, Tommi Virtanen wrote:
> > On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > > > TODO (maybe):
> > > ...
> > > > - Randomize execution order
> > > 
> > > Thought of something.
> > > 
> > > When this is implemented, it'll be very important (for obvious
> > > reasons) to have the execution order saved to some file on every run,
> > > with the ability to read in that file for future runs.
> > 
> >   Maybe just print out the PRNG seed you started with when exiting.
> 
> Hmm.  While Python's PRNG is pure python, so should give the same results
> with the same seed on different platforms, I think saving the execution
> order is better.  Consider the case of fixing a test that involves
> generating more or less random numbers than before -- the act of fixing the
> test loses the determinism you were hoping to preserve with the PRNG.
> 

  You could create a new Random object that is used exclusively by the test
framework.  Calls to its generation functions won't be interferred with by
calls to the "regular" functions, nor will it interfere with them.  I think
just saving the seed is a little cleaner and, imho, the unit tests already
leave far too much garbage lying around on the filesystem as it is ;)

    Jp

-- 
Where a calculator on the ENIAC is equipped with 18,000 vacuum tubes and
weighs 30 tons, computers in the future may have only 1,000 vacuum tubes and
weigh only 1.5 tons.    -- Popular Mechanics, March 1949
--
 12:00am up 21 days, 9:46, 1 user, load average: 0.04, 0.11, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030106/fc8b6023/attachment.pgp 

From ldanielburr at earthlink.net  Mon Jan  6 13:14:18 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 06 Jan 2003 10:14:18 -0800
Subject: [Twisted-Python] How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>

I am currently designing a code-deploying service, to be used in conjunction
with a variety of source control tools.  I'm looking to use Twisted in the
implementation of the file-transfer mechanism, as Twisted's broad protocol
support would make it easy for me to switch from say, FTP to HTTP, or to some
custom protocol I roll myself.

I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
can't seem to grok is how to perform file uploads.  I've read through the
code, and it seems that the FTP server class supports RETR and STOR, using
DTPFactory, while FTPClient only supports RETR, and implements it
independently.

Basically, I'm lost as to how to connect FTPClient to DTPFactory, such that I
can send files from FTPClient.  I just need some pointers on how to accomplish
this; it seems like the code is there to do it, but I'm missing the necessary
Twisted mindset in this case.

Thanks for your help.

L. Daniel Burr



From warner at lothar.com  Mon Jan  6 14:33:32 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 11:33:32 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
Message-ID: <20030106.113332.114777670.warner@lothar.com>

> I'll fix the test suite to only run these tests if the appropriate
> interface is implemented. There's no reason cReactor has to support UDP
> or multicast, though it'd be nice if it implemented IFDSelector or
> whatever it's called so that it could use the python UDP, SSL, process
> and multicast code.

You might want to provide an easy way to turn those tests back on (bypassing
the "is-it-implemented" test). Unit tests are a good way to point out
functionality that hasn't been implemented yet. If the test suite appears to
pass cleanly, someone might be fooled into thinking that cReactor works just
as well as the others.

Of course, there might be other/better ways to signal that this reactor
behaves differently than all the others, and that this is a design decision
and not just as-yet-unimplemented functionality. (__implements__ comes to
mind, but I don't know how visible that would be to a user who's left
wondering why their program fails when run under cReactor).

Is there anyone here who is using cReactor? If so, what is important to you
about it? Is UDP a burning desire?

thanks,
 -Brian



From twisted at itamarst.org  Mon Jan  6 14:39:26 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 6 Jan 2003 14:39:26 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030106.113332.114777670.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
	<20030106.113332.114777670.warner@lothar.com>
Message-ID: <20030106143926.0ed479be.twisted@itamarst.org>

On Mon, 06 Jan 2003 11:33:32 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

> You might want to provide an easy way to turn those tests back on
> (bypassing the "is-it-implemented" test). Unit tests are a good way to
> point out functionality that hasn't been implemented yet. If the test
> suite appears to pass cleanly, someone might be fooled into thinking
> that cReactor works just as well as the others.

I don't see it as being that important, we just need a good README for
cReactor saying what it supports.

> Of course, there might be other/better ways to signal that this
> reactor behaves differently than all the others, and that this is a
> design decision and not just as-yet-unimplemented functionality.
> (__implements__ comes to mind, but I don't know how visible that would
> be to a user who's left wondering why their program fails when run
> under cReactor).

__implements__ is how I'm going to check if a reactor implements
something.

As I said, if cReactor has addReader/addWriter interface
twisted.internet.interfaces.IReactorFDSet, we get ssl, udp, multicast,
serial and process support almost for free using the python code for
these, until a C version is written.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From warner at lothar.com  Mon Jan  6 14:55:32 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 11:55:32 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105231912.GA30384@frobozz.local>
	<20030105.195246.59468345.glyph@twistedmatrix.com>
Message-ID: <20030106.115532.88728086.warner@lothar.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> Ideally, I'd prefer that the reactor is *always* in a consistent state.
> That would probably involve redefining or removing the "crash" facility,
> since there would only be "pause and return so that run() continues" or
> "stop properly so run() restarts". Whatever compromise you come up with in
> this vein is probably acceptable, though.

What do you mean by "consistent"? Let me verify my understanding: we could
say that the two states are running and stopped, and that you can always
transition from one to the other. I'm guessing the reason for .crash and the
prohibition on running .start a second time is the systemEventTriggers, and a
desire to keep them from running more than once in any given process.

If we move to only two states and allow arbitrary transitions between them,
we'd probably have to declare that the triggers run on each transition.
Normal apps won't care, since they only start and stop once. The unit tests
would start/stop 0 or more times per test case, running triggers each time,
but the only triggers in place would probably be the ones added by the tests
themselves.

The other use for .crash listed in the docs is to avoid running shutdown
triggers. I've had programs where the shutdown.tap -writing routine raised an
exception, which appeared to cause the shutdown to abort and the program to
go back to the main loop. I had to kill it with SIGTERM to make it stop. I
imagine .crash could be used in an exception handler that wrapped app.save()
to terminate a program that was having trouble with the "after"-"shutdown"
event triggers. If that is useful, .crash would be just like .stop except it
wouldn't run the triggers.

So:
1: At boot time, we enter the "stopped" state
2: While we are in the "stopped" state, you may only run .start
3: .start moves us from "stopped" to "running" and runs "startup" triggers
4: While we are in the "running" state, you may only run .stop or .crash
5: .stop moves from "running" to "stopped" and runs "shutdown" triggers
6: .crash moves from "running" to "stopped" without running triggers

7: .reset does an implicit .stop, if necessary, before cleaning all reactor
state

All triggers remain attached until individually removed or reactor.reset() is
called, so an app that does .run(); .stop(); .run(); .stop(); is going to
have the triggers run multiple times. All other reactor state is preserved by
.stop and .crash (timers, sockets).


I think I've just restated what you said before, but this way if I got it
wrong somebody has the opportunity to correct my understanding before I get
around to writing any code :)

thanks,
 -Brian



From warner at lothar.com  Mon Jan  6 15:03:06 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 12:03:06 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
	<20030106.113332.114777670.warner@lothar.com>
	<20030106143926.0ed479be.twisted@itamarst.org>
Message-ID: <20030106.120306.70544703.warner@lothar.com>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:
> 
> As I said, if cReactor has addReader/addWriter interface
> twisted.internet.interfaces.IReactorFDSet, we get ssl, udp, multicast,
> serial and process support almost for free using the python code for
> these, until a C version is written.

Good point. And, the performance difference between having the fileno
originate from python code vs. having it originate from C code won't be an
issue until you're creating lots of sockets, so as long as the functionality
is present, moving it to C can wait until someone has a need for it.

I'll look into gluing IReactorFDSet into cReactor.

 -Brian



From acapnotic at twistedmatrix.com  Mon Jan  6 15:42:38 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 06 Jan 2003 12:42:38 -0800
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <1041885756.1305.149.camel@troglodyte.funhouse>

just for the record

> I'm intending on going to PyCon [...] Basically I'm looking to do this on 
> the cheap; the airfare is expensive enough [...] any ideas on where I 
> could stay?  I'd probably be looking to stay from Sunday night 23rd (so I
> could attend the code sprint) through to Saturday the 29th, although I 
> haven't thought this out in detail.

Me Too,

 - Kevin

-- 
The moon is waxing crescent, 14.8% illuminated, 3.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030106/3554c0bf/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Jan  6 18:37:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 7 Jan 2003 10:37:22 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>
References: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>
Message-ID: <20030106233722.GA32165@frobozz.local>

On Mon, Jan 06, 2003 at 10:14:18AM -0800,  Daniel Burr wrote:
> 
> I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
> can't seem to grok is how to perform file uploads.  I've read through the
> code, and it seems that the FTP server class supports RETR and STOR, using
> DTPFactory, while FTPClient only supports RETR, and implements it
> independently.

Yes, that's my fault.  I haven't gotten around to that yet -- I might have a
stab at it tonight, it shouldn't actually be that hard.  I'll try to make sure
I get this done in time for the 1.0.2 release.

Let me know if there are any other FTP commands you want implemented -- I've
also got MDTM on my todo list, which should be trivial (in fact, the
apt-proxy guys have already implemented it! :).  The current range of
commands more-or-less reflects what I needed for a previous job, and not
much more, but I'm happy to add any that someone else finds useful.  STOR is
definitely useful (and probably the hardest -- the code for uploading from
the client isn't really there yet).

> Basically, I'm lost as to how to connect FTPClient to DTPFactory, such that I
> can send files from FTPClient.  I just need some pointers on how to accomplish
> this; it seems like the code is there to do it, but I'm missing the necessary
> Twisted mindset in this case.

DTPFactory is part of the FTP server, which currently shares no code with
the client.  The server is desperately in need of a rewrite/refactoring to
use twisted.web (so that you can have dynamic resources, and the like).
This is on my longer-term todo list...

-Andrew.




From ldanielburr at earthlink.net  Mon Jan  6 22:47:48 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 06 Jan 2003 19:47:48 -0800
Subject: [Twisted-Python] How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>

On Tue, 7 Jan 2003 10:37:22, Andrew Bennetts wrote:

>Yes, that's my fault.  I haven't gotten around to
>that yet -- I might have a
>stab at it tonight, it shouldn't actually be that
>hard.  I'll try to make sure
>I get this done in time for the 1.0.2 release.

That'd be great; I'm interested to see how you do it, as I don't yet fully
understand the Twisted way.  I have always used Python's ftplib, so doing this
in a fully async manner is still a little mind-bending for me.

>Let me know if there are any other FTP commands
>you want implemented -- I've
>also got MDTM on my todo list, which should be
>trivial (in fact, the
>apt-proxy guys have already implemented it! :).

Well, since you asked, I could really use MKD and RMD too, since I am copying
a directory hierarchy from one server to another, and the target server may
not already have the correct directory layout.

>The server is desperately in need of a
>rewrite/refactoring to
>use twisted.web (so that you can have dynamic
>resources, and the like).
>This is on my longer-term todo list...
>
>-Andrew.

That sounds pretty cool, although I'll be perfectly happy if FTPClient can
reproduce the current functionality of ftplib.

On a semi-related note, I'm thinking about trying to write a Protocol/Factory
to handle the SCC protocol used by PVCS, SourceSafe, and a few other
commercial source control tools.  I'm thinking in terms of a Twisted.vcs
plugin.  Is this a good idea, or is this really not what Twisted is best used
for?

Thanks for the help,

L. Daniel Burr

Thanks for your help,

L. Daniel Burr



From andrew-twisted at puzzling.org  Mon Jan  6 23:05:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 7 Jan 2003 15:05:15 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>
References: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>
Message-ID: <20030107040515.GB32165@frobozz.local>

On Mon, Jan 06, 2003 at 07:47:48PM -0800,  Daniel Burr wrote:
> On Tue, 7 Jan 2003 10:37:22, Andrew Bennetts wrote:
> 
> >Yes, that's my fault.  I haven't gotten around to
> >that yet -- I might have a
> >stab at it tonight, it shouldn't actually be that
> >hard.  I'll try to make sure
> >I get this done in time for the 1.0.2 release.
> 
> That'd be great; I'm interested to see how you do it, as I don't yet fully
> understand the Twisted way.  I have always used Python's ftplib, so doing this
> in a fully async manner is still a little mind-bending for me.

The FTPClient isn't the prettiest code in Twisted, but it's alot better than
it used to be ;)

The key to understanding Twisted is really Deferreds, I think.  Once you
understand those, the rest starts to fall in place nicely.

> >Let me know if there are any other FTP commands
> >you want implemented -- I've
> >also got MDTM on my todo list, which should be
> >trivial (in fact, the
> >apt-proxy guys have already implemented it! :).
> 
> Well, since you asked, I could really use MKD and RMD too, since I am copying
> a directory hierarchy from one server to another, and the target server may
> not already have the correct directory layout.

Ah!  Good idea.

> >The server is desperately in need of a
> >rewrite/refactoring to
> >use twisted.web (so that you can have dynamic
> >resources, and the like).
> >This is on my longer-term todo list...
> >
> >-Andrew.
> 
> That sounds pretty cool, although I'll be perfectly happy if FTPClient can
> reproduce the current functionality of ftplib.

Well, I'm more inclined to spend time on adding a feature if I know
someone wants to/would use it, so keep pestering me :)

> On a semi-related note, I'm thinking about trying to write a Protocol/Factory
> to handle the SCC protocol used by PVCS, SourceSafe, and a few other
> commercial source control tools.  I'm thinking in terms of a Twisted.vcs
> plugin.  Is this a good idea, or is this really not what Twisted is best used
> for?

That sounds reasonable to me.  I know at least one of the Twisted developers
is keen to have WebDAV support, so that they can run Subversion without
Apache.

-Andrew.




From bh at intevation.de  Tue Jan  7 06:11:45 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 07 Jan 2003 12:11:45 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
Message-ID: <6qptr943ke.fsf@salmakis.intevation.de>

I wanted to get back to this sooner, but another project and
xmas+newyear intervened...

Moshe Zadka <m at moshez.org> writes:

> Hi Bernhard!

Hi Moshe!

> Glad to see you're using Twisted.

The decision to use Twisted was easy because 

a) I've met at least two of the Twisted developers so I know it's in
good hands :),

b) I've used asyncore in a different project and after a while I was
itching to do a substantial rewrite of asyncore, and

c) That other project's infrastructure was evolving in the direction of
twisted in some aspects

> > If there's interest in including my test case base class in twisted I
> > could make it available sooner and under LGPL.

The test base class is finally publically available inder GPL for now:
http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain

It's actually two mix-in classes to unittest.TestCase like test cases.
 
> FYI: Twisted patches must also be copyrighted by Glyph.

I'd have to clarify that with my employer, but that shouldn't be a
problem, as we regularly contribute back to Free Software packages we
use if we have something worthwhile to contribute.


   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From m at moshez.org  Tue Jan  7 07:42:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jan 2003 12:42:32 -0000
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qptr943ke.fsf@salmakis.intevation.de>
References: <6qptr943ke.fsf@salmakis.intevation.de>, <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
Message-ID: <20030107124232.14788.qmail@green.zadka.com>

On 07 Jan 2003, Bernhard Herzog <bh at intevation.de> wrote:

> The test base class is finally publically available inder GPL for now:
> http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain
> 
> It's actually two mix-in classes to unittest.TestCase like test cases.

Sounds nice.
Recently we moved to twisted.trial from pyunit: see latest CVS.
The interface is compatible, and the trial maintainer said your stuff
looks neat -- but I'll let him respond in fullness.

Thanks!
Moshe



From bh at intevation.de  Tue Jan  7 10:09:34 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 07 Jan 2003 16:09:34 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qptr943ke.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
	<6qptr943ke.fsf@salmakis.intevation.de>
Message-ID: <6qk7hh3sk1.fsf@salmakis.intevation.de>

I wrote:

[Mixin classes for tests that use reactors]
> The test base class is finally publically available inder GPL for now:
> http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain

Someone asked for a usage example in private mail. There are a few test
cases in the same CVS repository that use the mix-ins, but more
illustrative is probably a very simple example like this:


import unittest

from reactormixins import ReactorMixin

class Test(unittest.TestCase, ReactorMixin):

    def setUp(self):
        """Extend inherited method to set later_has_been_called to 0"""
        self.later_has_been_called = 0
        ReactorMixin.setUp(self)

    def test(self):
        """Simple test to show how to use ReactorMixin"""
        # scheduler self.later to be run after 0.1 seconds
        self.callLater(0.1, self.later)

        # run the reactor with a 10s time out
        self.run_reactor(10)

        self.assert_(self.later_has_been_called)

    def later(self):
        """Record that later has been called and stop the reactor"""
        self.later_has_been_called = 1
        self.stop_reactor()

if __name__ == "__main__":
    unittest.main()


This example doesn't do any networking but should give an idea of how to
use the mixin classes.

The networking support in the mixins is currently limited to listening
because that all I needed so far. My testcases start sub-processes that
connect to the reactor in the test case.

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From radix at twistedmatrix.com  Tue Jan  7 12:42:17 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 7 Jan 2003 12:42:17 -0500
Subject: [Twisted-Python] twisted.lore: `class="API" base="twisted.foo"' feature broken
Message-ID: <20030107174217.GA21590@Radii>

Or seems to be, anyway. e.g.,

http://twistedmatrix.com/documents/howto/woven

Notice that all links that don't have the entire `twisted.foo...'
prefix are broken; the `base' attribute isn't being honored (you won't
see the attributes in the source of that page, but look at
doc/howto/woven.html in CVS). I looked at twisted.lore.tree and didn't
see anything obviously wrong.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Tue Jan  7 13:41:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jan 2003 18:41:32 -0000
Subject: [Twisted-Python] twisted.lore: `class="API" base="twisted.foo"' feature broken
In-Reply-To: <20030107174217.GA21590@Radii>
References: <20030107174217.GA21590@Radii>
Message-ID: <20030107184132.18585.qmail@green.zadka.com>

On Tue, 7 Jan 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Notice that all links that don't have the entire `twisted.foo...'
> prefix are broken; the `base' attribute isn't being honored (you won't
> see the attributes in the source of that page, but look at
> doc/howto/woven.html in CVS). I looked at twisted.lore.tree and didn't
> see anything obviously wrong.

Fixed now.



From andrew-twisted at puzzling.org  Wed Jan  8 07:53:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 8 Jan 2003 23:53:17 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <20030106233722.GA32165@frobozz.local>
References: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net> <20030106233722.GA32165@frobozz.local>
Message-ID: <20030108125317.GD10826@frobozz.local>

On Tue, Jan 07, 2003 at 10:37:22AM +1100, Andrew Bennetts wrote:
> On Mon, Jan 06, 2003 at 10:14:18AM -0800,  Daniel Burr wrote:
> > 
> > I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
> > can't seem to grok is how to perform file uploads.  I've read through the
> > code, and it seems that the FTP server class supports RETR and STOR, using
> > DTPFactory, while FTPClient only supports RETR, and implements it
> > independently.
> 
> Yes, that's my fault.  I haven't gotten around to that yet -- I might have a
> stab at it tonight, it shouldn't actually be that hard.  I'll try to make sure
> I get this done in time for the 1.0.2 release.

Just letting you know I haven't forgotten about this, but solving this
properly really involves refactoring the mess in FTPClient.retrieve... and
if I do that properly, it'll make my planned rewrite of the FTP server alot
easier, as it ought to be able to re-use the code.  Unfortunately this means
it might take a few more days before this happens.

-Andrew.




From andrew-twisted at puzzling.org  Sat Jan 11 09:31:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 12 Jan 2003 01:31:09 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030105044532.GB26857@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local> <20030105042125.GA26857@ferd2.thristian.org> <20030105044532.GB26857@ferd2.thristian.org>
Message-ID: <20030111143109.GA7666@frobozz.local>

On Sun, Jan 05, 2003 at 03:45:32PM +1100, screwtape at froup.com wrote:
> On Sun, Jan 05, 2003 at 03:21:26PM +1100, screwtape at froup.com wrote:
> > 
> > Well, I've had a go at documenting my experiences with Twisted IM.
> > How's this?
> 
> Andrew tapped me on the shoulder on IRC and told me where to find
> hlint. 

I've checked this in (with some minor adjustments).  Thanks!

-Andrew.




From acapnotic at twistedmatrix.com  Sat Jan 11 23:48:33 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Jan 2003 20:48:33 -0800
Subject: [Twisted-Python] twisted.im has no tests
Message-ID: <1042346911.31601.18.camel@troglodyte.funhouse>

WARNING: The next person to work with twisted.im, be it radix, myself,
or someone else, is most likely going to break shit, because this
package needs some reconstructive surgery.  Currently, there are NO
TESTS for this package, nothing to tell us how much we've broken.  And
if we don't know how much we've broken, there's no reason to feel guilty
about it, right?

The upshot of this is that if you're using this package and there's
something that you need not to break, or maybe broken a little but at
least not be rewritten out of existence, WRITE TESTS NOW.

Cheers,

 - Kevin

-- 
The moon is first quarter, 62.1% illuminated, 8.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030111/822f8e7f/attachment.pgp 

From screwtape at froup.com  Sun Jan 12 00:46:18 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 12 Jan 2003 16:46:18 +1100
Subject: [Twisted-Python] Another twisted-im patch
Message-ID: <20030112054617.GA24415@ferd2.thristian.org>

Notwithstanding the last message about twisted.im being nuked and
replaced with something almost but not quite entirely different :)
here's a diff that I feel makes twisted-im a little more useful.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The cruel angel's thesis bleeds" 
|
-------------- next part --------------
Index: twisted/im/ircsupport.py
===================================================================
RCS file: /cvs/Twisted/twisted/im/ircsupport.py,v
retrieving revision 1.21
diff -u -r1.21 ircsupport.py
--- twisted/im/ircsupport.py	12 Jan 2003 04:28:45 -0000	1.21
+++ twisted/im/ircsupport.py	12 Jan 2003 05:35:51 -0000
@@ -40,11 +40,12 @@
         self.status=status
         self.chat.getContactsList().setContactStatus(self)
 
-    def sendMessage(self, text, meta=None):
-        if meta and meta.get("style", None) == "emote":
-            self.client.ctcpMakeQuery(self.name,[('ACTION', text)])
-            return succeed(text)
-        self.client.msg(self.name,text)
+    def sendMessage(self, text, meta={}):
+        for line in string.split(text, '\n'):
+            if meta and meta.get("style", None) == "emote":
+                self.client.ctcpMakeQuery(self.name,[('ACTION', line)])
+            else:
+                self.client.msg(self.name, line)
         return succeed(text)
 
 class IRCGroup(basesupport.AbstractGroup):
@@ -96,7 +97,7 @@
             if self.account.password:
                 self.sendLine("PASS :%s" % self.account.password)
             self.setNick(self.account.nickname)
-            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
+            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
             for channel in self.account.channels:
                 self.joinGroup(channel)
             self.account._isOnline=1

From glyph at twistedmatrix.com  Sun Jan 12 13:32:16 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jan 2003 12:32:16 -0600 (CST)
Subject: [Twisted-Python] twisted.im has no tests
In-Reply-To: <1042346911.31601.18.camel@troglodyte.funhouse>
References: <1042346911.31601.18.camel@troglodyte.funhouse>
Message-ID: <20030112.123216.55515263.glyph@twistedmatrix.com>


I'd really like for what little Jython code there is right now not to break.
This is rather hard to write a unit test for, though, and I imagine most people
who are making changes to IM would not see it break.

There are acceptance tests that involve running im against Words, so please use
those, if you can.

Thanks for the heads-up.

On 11 Jan 2003 20:48:33 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> The upshot of this is that if you're using this package and there's something
> that you need not to break, or maybe broken a little but at least not be
> rewritten out of existence, WRITE TESTS NOW.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030112/ca4ab3c0/attachment.pgp 

From glyph at twistedmatrix.com  Sun Jan 12 13:39:43 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jan 2003 12:39:43 -0600 (CST)
Subject: [Twisted-Python] twisted.im has no tests
In-Reply-To: <1042346911.31601.18.camel@troglodyte.funhouse>
References: <1042346911.31601.18.camel@troglodyte.funhouse>
Message-ID: <20030112.123943.112282247.glyph@twistedmatrix.com>

On 11 Jan 2003 20:48:33 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> this package needs some reconstructive surgery.

One other thing...

I am planning on developing some external code very soon which will rely upon
IM.  While I recognize that this reconstructive surgery is necessary, and I
don't want to get in your way, please take the trouble to provide documentation
for any changed interfaces (or better yet, backwards-compatibility and warnings
-- but this might be too difficult to be worthwhile).  If you don't, I may have
to revert your changes temporarily in order to get my demo working.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030112/730e7e49/attachment.pgp 

From radix at twistedmatrix.com  Sun Jan 12 15:22:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 12 Jan 2003 15:22:49 -0500
Subject: [Twisted-Python] developer sprint at PyCon
Message-ID: <20030112202249.GB31014@Radii>

So here are three suggestions for what we can hack on during the devel sprint.

* Adapterize/Componentize PB (this came up when Sylane was trying to make an
  object both Referenceable and Cacheable today)
* Twisted Reality
* Woven

I'm more interested in the first two, personally.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From pp64 at cornell.edu  Sun Jan 12 22:26:21 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 12 Jan 2003 19:26:21 -0800
Subject: [Twisted-Python] twisted.python.plugin
Message-ID: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>

Hi.
I extended t.py.p to use deferreds. The code is somewhat hideous and about
three times as slow, but at least it's asynchronous. There's a much more
elegant way to do it using generators. Hopefully, at some point in the
future Python 2.2 will be the minimum supported version.

diff is at http://people.cornell.edu/pages/pp64/tpypdiff





From andrew-twisted at puzzling.org  Mon Jan 13 01:43:31 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 13 Jan 2003 17:43:31 +1100
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
Message-ID: <20030113064331.GD15720@frobozz.local>

Hi,

Is there any reason why we shouldn't add:

    warnings.warn(
        'twisted.internet.main is deprecated.  '
        'Use twisted.internet.reactor instead.', 
        DeprecationWarning,
        stacklevel=2
    )

to every function in twisted.internet.main (except perhaps installReactor)?

At the very least, I think a PendingDeprecationWarning would be appropriate
(they are invisible by default).  There are still parts of Twisted that use
this old module (e.g. t.e.adbapi), and I expect this will be the case until
we have some nice big warnings jump up at us telling us to fix them :)

-Andrew.




From bob at redivi.com  Mon Jan 13 06:09:17 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 13 Jan 2003 06:09:17 -0500
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
In-Reply-To: <20030113064331.GD15720@frobozz.local>
Message-ID: <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>

On Monday, Jan 13, 2003, at 01:43 America/New_York, Andrew Bennetts 
wrote:

> At the very least, I think a PendingDeprecationWarning would be 
> appropriate
> (they are invisible by default).  There are still parts of Twisted 
> that use
> this old module (e.g. t.e.adbapi), and I expect this will be the case 
> until
> we have some nice big warnings jump up at us telling us to fix them :)

as of a few hours ago, t.e.adbapi no longer even imports main (uses 
reactor.addSystemEventTrigger instead).

-bob




From andrew-twisted at puzzling.org  Mon Jan 13 06:38:55 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 13 Jan 2003 22:38:55 +1100
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
In-Reply-To: <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>
References: <20030113064331.GD15720@frobozz.local> <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>
Message-ID: <20030113113855.GA12112@frobozz.local>

On Mon, Jan 13, 2003 at 06:09:17AM -0500, Bob Ippolito wrote:
> 
> On Monday, Jan 13, 2003, at 01:43 America/New_York, Andrew Bennetts 
> wrote:
> 
> >At the very least, I think a PendingDeprecationWarning would be
> >appropriate (they are invisible by default).  There are still parts of
> >Twisted that use this old module (e.g. t.e.adbapi), and I expect this
> >will be the case until we have some nice big warnings jump up at us
> >telling us to fix them :)
> 
> as of a few hours ago, t.e.adbapi no longer even imports main (uses 
> reactor.addSystemEventTrigger instead).

Heh :)

I'll take that as one more reason why we should add DeprecationWarning to
t.i.main ;)

-Andrew.




From andrew-twisted at puzzling.org  Mon Jan 13 09:18:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 14 Jan 2003 01:18:01 +1100
Subject: [Twisted-Python] In case anyone is bored... fun with tests!
Message-ID: <20030113141801.GC12112@frobozz.local>

There's a little bit of work to be done :)

Try running:
    python -Werror bin/trial -p twisted.test

(i.e. turn warnings into errors, thus making them register with trial...
hmm, perhaps trial should somehow hook into the warnings framework to make
it log these errors automagically?)

Under Python 2.2, I currently see: 
    FAILED (failures=4, errors=22)

Python 2.3a1 adds extra fun, thanks to the "hex/oct constants > sys.maxint
will return positive values in Python 2.4 and up" warning.

Also, I discovered that if I hit ^S then ^Q during testReadLimit, then all
subsequent tests fail, apparently due to the pendingTimedCalls never getting
cleared?  I'm a bit surprised by this one, but I did manage to reproduce it,
so I guess it must be real ;)

-Andrew.




From radix at twistedmatrix.com  Mon Jan 13 09:21:23 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 13 Jan 2003 09:21:23 -0500
Subject: [Twisted-Python] In case anyone is bored... fun with tests!
In-Reply-To: <20030113141801.GC12112@frobozz.local>
References: <20030113141801.GC12112@frobozz.local>
Message-ID: <20030113142123.GC31014@Radii>

On Tue, Jan 14, 2003 at 01:18:01AM +1100, Andrew Bennetts wrote:
> hmm, perhaps trial should somehow hook into the warnings framework to make
> it log these errors automagically?)

See twisted.python.log.showwarning and the two lines immediately below
it for an example of hooking into the warnings system (yes, that
really is the API you're supposed to use to do it).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From ldanielburr at earthlink.net  Mon Jan 13 20:14:26 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 13 Jan 2003 17:14:26 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>

On Wed, Jan 08, 2003 at 23:53:17 +1100 Andrew Bennetts wrote:

>> Yes, that's my fault.  I haven't gotten around
>> to that yet -- I might have a stab at it
>> tonight, it shouldn't actually be that hard.
>> I'll try to make sure  I get this done in time
>> for the 1.0.2 release.

That would be awesome; I'd be interested in contributing some code/tests/docs
for the revised module.

>
> Just letting you know I haven't forgotten about
> this, but solving this properly really involves
> refactoring the mess in FTPClient.retrieve...
> and if I do that properly, it'll make my planned
> rewrite of the FTP server alot easier, as it
> ought to be able to re-use the code.
> Unfortunately this means it might take a few
> more days before this happens.
>
> -Andrew.

While you are still thinking about the solution, might I suggest something
with regard to FTPClient ?

I've been going over the existing python ftplib.FTP code, as well as
twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why don't
either of these classes implement the client commands in the manner that your
typical command-line FTP client does?  I think FTPClient should have simple
methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
developer's viewpoint, you'd just use FTPClient in the same manner as you
would an interactive ftp client session; the actual queueing of commands,
creation of Deferreds, and callbacks could be hidden away a little more easily
then, and make life easier for developers just looking to roll a simple FTP
client application using Twisted.

Thanks for listening,

L. Daniel Burr



From glyph at twistedmatrix.com  Mon Jan 13 20:47:30 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2003 19:47:30 -0600 (CST)
Subject: [Twisted-Python] twisted.python.plugin
In-Reply-To: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>
References: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>
Message-ID: <20030113.194730.112201236.glyph@twistedmatrix.com>


On Sun, 12 Jan 2003 19:26:21 -0800, "Pavel Pergamenshchik" <pp64 at cornell.edu> wrote:
> I extended t.py.p to use deferreds. The code is somewhat hideous and about
> three times as slow, but at least it's asynchronous. There's a much more
> elegant way to do it using generators. Hopefully, at some point in the
> future Python 2.2 will be the minimum supported version.

Thanks for the effort, but this code is used most frequently from "mktap",
which is a command-line program and already performs agonizingly slowly for
something that should be instant-response.

In the plugin loader we need optimization before asynchrony (especially because
you'll never be loading code from a high-latency source).

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030113/1cd48be8/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Jan 13 21:21:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 14 Jan 2003 13:21:54 +1100
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>
References: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>
Message-ID: <20030114022154.GC27010@frobozz.local>

On Mon, Jan 13, 2003 at 05:14:26PM -0800,  Daniel Burr wrote:
> On Wed, Jan 08, 2003 at 23:53:17 +1100 Andrew Bennetts wrote:
> 
> >> Yes, that's my fault.  I haven't gotten around
> >> to that yet -- I might have a stab at it
> >> tonight, it shouldn't actually be that hard.
> >> I'll try to make sure  I get this done in time
> >> for the 1.0.2 release.
> 
> That would be awesome; I'd be interested in contributing some code/tests/docs
> for the revised module.

Now *that* would be awesome! :)

> > Just letting you know I haven't forgotten about
> > this, but solving this properly really involves
> > refactoring the mess in FTPClient.retrieve...
> > and if I do that properly, it'll make my planned
> > rewrite of the FTP server alot easier, as it
> > ought to be able to re-use the code.
> > Unfortunately this means it might take a few
> > more days before this happens.
> >
> > -Andrew.
> 
> While you are still thinking about the solution, might I suggest something
> with regard to FTPClient ?

Of course!  And you'd be welcome to even if I wasn't thinking about it.

> I've been going over the existing python ftplib.FTP code, as well as
> twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why don't
> either of these classes implement the client commands in the manner that your
> typical command-line FTP client does?  I think FTPClient should have simple
> methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
> developer's viewpoint, you'd just use FTPClient in the same manner as you
> would an interactive ftp client session; the actual queueing of commands,
> creation of Deferreds, and callbacks could be hidden away a little more easily
> then, and make life easier for developers just looking to roll a simple FTP
> client application using Twisted.

Indeed.  FTPClient is already almost this simple for simple FTP commands,
ones that don't require opening a data socket.  This is stuff like CWD, MKD,
etc.  The only unfriendly thing about it is it currently doesn't offer much
help with parsing the response, beyond stating that it is a success or a
failure (by calling your Deferred's callback or errback) -- but that's
probably all you care about.

There are a fair few of these I haven't wrapped up yet, for instance
"binary" (which is the "TYPE I" command, and I issue that automatically on
log in anyway -- is there ever any time when you *don't* want this?).

The problem is "get", which is not that simple, let alone stuff like mget
that has no one-to-one analogy with the raw protocol.  I don't think
FTPClient should be restricted to thinking everything is a file on disk --
you may want to process the data incrementally in another way [I certainly
did :) ].  Of course, most of the time, you probably want to just write it
to a file.

Thus I think I may need two layers; the current FTPClient is the low-level
plumbing that you don't interact with unless you need it's generality, and
then there's a higher-level interface that provides things like mget.  It's
entirely possible that I can fit this all into one class after all, but I'm
not sure yet.

So in summary, I want to allow for nifty/insane things like directly
funnelling data from e.g. an HTTP download into an FTP upload -- but I also
want a class that's straightforward to use in the common case as well.

What I'd really like from you, if you don't mind, is a sketch of what *you*
think the API should look like for the high-level interface.  Hopefully
that'll help me design this in a way that satisfies everyone :)

-Andrew.




From ldanielburr at earthlink.net  Mon Jan 13 23:38:33 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 13 Jan 2003 20:38:33 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042519113.0.44339500@webmail.pas.earthlink.net>

On Tue, 14 Jan 2003 at 13:21:54 +1100,  Andrew Bennetts wrote:
>On Mon, Jan 13, 2003 at 05:14:26PM -0800,  Daniel Burr wrote:
>> That would be awesome; I'd be interested in contributing some
code/tests/docs
>> for the revised module.
>
>Now *that* would be awesome! :)

Well, I think I grok the whole Deferred thing now,
and I'm poring over the Twisted developer docs for
information about contributing.  The only hurdle I
have to clear is getting up to speed with CVS.

It looks like the best place to start is writing
some tests for the proposed "high-level" ftp
interface.  That should help me to define it.

>> I've been going over the existing python ftplib.FTP code, as well as
>> twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why
don't
>> either of these classes implement the client commands in the manner that
your
>> typical command-line FTP client does?  I think FTPClient should have simple
>> methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
>> developer's viewpoint, you'd just use FTPClient in the same manner as you
>> would an interactive ftp client session; the actual queueing of commands,
>> creation of Deferreds, and callbacks could be hidden away a little more
easily
>> then, and make life easier for developers just looking to roll a simple FTP
>> client application using Twisted.
>
>Indeed.  FTPClient is already almost this simple
>for simple FTP commands, ones that don't require
>opening a data socket.  This is stuff like CWD,
>MKD,etc.  The only unfriendly thing about it is
>it currently doesn't offer much help with parsing
>the response, beyond stating that it is a success
>or a failure (by calling your Deferred's callback
>or errback) -- but that's probably all you care
>about.

Yep, for those basic commands I think we are well
covered.

As for parsing the response, I noticed that the
effbot has some ftp-parsing code, I'll take a look
at that, and see if it contains any ideas.

>There are a fair few of these I haven't wrapped
>up yet, for instance "binary" (which is the "TYPE
>I" command, and I issue that automatically on log
>in anyway -- is there ever any time when you
>*don't* want this?).

Not that I can think of; the first thing I always
do in an interactive FTP session is to issue the
"binary" command.

>The problem is "get", which is not that simple,
>let alone stuff like mget that has no one-to-one
>analogy with the raw protocol.  I don't think
>FTPClient should be restricted to thinking
>everything is a file on disk -- you may want to
>process the data incrementally in another way [I
>certainly did :) ].  Of course, most of the time,
>you probably want to just write it to a file.

To be honest, I can't think of a single scenario
in which I wouldn't be using FTP to put a file
to disk or get a file from disk.  Granted, I am
not blessed with much in the way of imagination...
;)

>Thus I think I may need two layers; the current
>FTPClient is the low-level plumbing that you
>don't interact with unless you need it's
>generality, and then there's a higher-level
>interface that provides things like mget.  It's
>entirely possible that I can fit this all into
>one class after all, but I'm not sure yet.

I think putting it all into twisted.protocols.ftp
would suffice.  All in one class sounds harder.

>So in summary, I want to allow for nifty/insane
>things like directly funnelling data from e.g. an
>HTTP download into an FTP upload -- but I also
>want a class that's straightforward to use in the
>common case as well.

This sounds fine to me; obviously I'm really only
interested in the common case, but nifty/insane
stuff is cool too. ;)

>What I'd really like from you, if you don't mind,
>is a sketch of what *you* think the API should
>look like for the high-level interface.
>Hopefully that'll help me design this in a way
>that satisfies everyone :)
>
>-Andrew.

I think the API for the high-level client should
basically be identical to what you would use for
an interactive FTP session.  I'll do some thinking
on this and post a rough draft by the weekend.

L. Daniel Burr



From twisted at sylane.com  Tue Jan 14 11:46:34 2003
From: twisted at sylane.com (Sylane)
Date: Tue, 14 Jan 2003 17:46:34 +0100
Subject: [Twisted-Python] First contribution...
Message-ID: <2770835065.20030114174634@sylane.com>

Hello twisted people,

      I actually working on the simplistic implementation of a complex
      spread example... soon in your best mailing list...

      But for now a little diff for pb... I hop it will be applied
      because my example don't work very nice without it...

--snip-snip--------------------------------------------------------
--- ./twisted/spread/pb-orig.py  Tue Jan 14 17:12:47 2003
+++ ./twisted/spread/pb.py     Tue Jan 14 17:23:51 2003
@@ -543,8 +543,18 @@
                 try:
                     d.errback(failure.Failure(PBConnectionLost()))
                 except:
-                    log.deferr()
-        for notifier in self.disconnects:
+                    log.deferr()
+        # Assure all Cacheable.stoppedObserving are called
+        for lobj in self.remotelyCachedObjects.values():
+            cacheable = lobj.object
+            perspective = lobj.perspective
+            try:
+                cacheable.stoppedObserving(perspective, RemoteCacheObserver(self, cacheable, perspective))
+            except:
+                log.deferr()        
+        # Loop on a copy to prevent notifiers to mixup
+        # the list by calling dontNotifyOnDisconnect
+        for notifier in self.disconnects[:]:
             try:
                 notifier()
             except:
--snip-snip--------------------------------------------------------
  

-- 
Best regards,
 Sylane                          mailto:twisted at sylane.com




From xavier at plebia.org  Tue Jan 14 14:23:14 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 20:23:14 +0100
Subject: [Twisted-Python] Woven
Message-ID: <20030114202314.2949ecd1.xavier@plebia.org>

Hello all,

I have spent most of the day looking at the documentation of Twisted,
and I am quite impressed. What a wonderful toy ! It is like Christmas a
second time in the year. Congratulations to you happy hackers, you have
accomplished a tremendous job.

However, I have a question regarding Woven; as the howto ends quite
abruptly, I have tried to figure out how I could build a web interface I
planned to develop in a more usual way. But I quickly became puzzled by
the lack of examples, and a quick look on the sources only helped a bit.

Is Woven usable at this state ? This question is based on a limitation I
encountered while trying to make the menu of my interface : I could not
find a way to build a link (Anchor) with a text different from the href
parameter. I found a message from Donovan Preston in this list's
archives
(http://twistedmatrix.com/pipermail/twisted-python/2002-December/002426
.html) stating that it was not possible with the actual Anchor widget. I
would have the option to write a subclass of Anchor implementing what I
need, but finding such a limitation on the first widget I look at is
disturbing. :-)

If Woven is usable, can you point some examples of realizations using
it, and/or some good example sources to get started ?

Thank you !

-- 
Xavier.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030114/3873ccbc/attachment.pgp 

From twisted at itamarst.org  Tue Jan 14 14:29:04 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 14 Jan 2003 14:29:04 -0500
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114202314.2949ecd1.xavier@plebia.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
Message-ID: <20030114142904.3cf7ba51.twisted@itamarst.org>

On Tue, 14 Jan 2003 20:23:14 +0100
Xavier Antoviaque <xavier at plebia.org> wrote:

> Is Woven usable at this state ? This question is based on a limitation
> I encountered while trying to make the menu of my interface : I could
> not find a way to build a link (Anchor) with a text different from the
> href parameter.

It's quite usable, but very undocumented, yes. For links, use a Link
widget instead of an Anchor widget. For examples, see Issues and Blog in
twistedmatrix.com CVS - they both should be accessable via the web
viewcvs link from the CVS page on the website.

--
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From glyph at twistedmatrix.com  Tue Jan 14 15:47:29 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2003 14:47:29 -0600 (CST)
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114142904.3cf7ba51.twisted@itamarst.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
Message-ID: <20030114.144729.42693910.glyph@twistedmatrix.com>


On Tue, 14 Jan 2003 14:29:04 -0500, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> It's quite usable, but very undocumented, yes. For links, use a Link widget
> instead of an Anchor widget. For examples, see Issues and Blog in
> twistedmatrix.com CVS - they both should be accessable via the web viewcvs
> link from the CVS page on the website.

If you're interested in using Woven, I highly recommend tracking CVS.  It's the
most actively developed part of Twisted right now, since several people
(including myself) are developing the first generation of applications using
woven+twisted, and we're discovering features that need to be added.

This Link class that Itamar mentions is one such feature: it's only available
in CVS currently, or in the 1.0.2 alpha.



-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030114/87e28283/attachment.pgp 

From xavier at plebia.org  Tue Jan 14 16:32:29 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:32:29 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114.144729.42693910.glyph@twistedmatrix.com>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
	<20030114.144729.42693910.glyph@twistedmatrix.com>
Message-ID: <20030114223229.242af43e.xavier@plebia.org>

On Tue, 14 Jan 2003 14:47:29 -0600 (CST)
Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> If you're interested in using Woven, I highly recommend tracking CVS. 
> It's the most actively developed part of Twisted right now, since
> several people(including myself) are developing the first generation
> of applications using woven+twisted, and we're discovering features
> that need to be added.

I just grabbed the CVS version; I also suscribed to twisted-commits to
track modifications.

> This Link class that Itamar mentions is one such feature: it's only
> available in CVS currently, or in the 1.0.2 alpha.

Yes - and it is exactly what I needed. Thanks !

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030114/1ad62273/attachment.pgp 

From xavier at plebia.org  Tue Jan 14 16:37:09 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:37:09 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114142904.3cf7ba51.twisted@itamarst.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
Message-ID: <20030114223709.42b4bb46.xavier@plebia.org>

On Tue, 14 Jan 2003 14:29:04 -0500
Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> It's quite usable, but very undocumented, yes. 

That's ok with me - my only fear was that Woven was not ready for
production. 

> For links, use a Link widget instead of an Anchor widget.

Thanks, it works well. :-)

> For examples, see Issues and Blog in twistedmatrix.com CVS

I could not find this part :

xavier at leto:~$ find prog/twisted/cvs/ -name "*.rpy"
prog/twisted/cvs/Twisted/doc/howto/listings/HelloWorld/HelloWorld.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/HelloWorld/HelloWorld2.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/soap.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/webquote.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/wovenquotes.r
py
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/xmlquote.rpy
prog/twisted/cvs/Twisted/static/test.rpy
xavier at leto:~$ find prog/twisted/cvs/ -name "*.?html"
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/WebQuotes.xht
ml
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/WovenQuotes.x
html
xavier at leto:~$ 

Do you have an idea of where these examples could be located ?

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030114/94c4c209/attachment.pgp 

From xavier at plebia.org  Tue Jan 14 16:58:10 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:58:10 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114223709.42b4bb46.xavier@plebia.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
	<20030114223709.42b4bb46.xavier@plebia.org>
Message-ID: <20030114225810.07e85cd0.xavier@plebia.org>

On Tue, 14 Jan 2003 22:37:09 +0100
Xavier Antoviaque <xavier at plebia.org> wrote:

> Do you have an idea of where these examples could be located ?

Forget about it, I found them. :)

cvs -d:pserver:anon at twistedmatrix.com:/cvs co Blog
cvs -d:pserver:anon at twistedmatrix.com:/cvs co Issues

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030114/7fa0b9f9/attachment.pgp 

From ldanielburr at earthlink.net  Tue Jan 14 17:43:02 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Tue, 14 Jan 2003 14:43:02 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>


WARNING!  Long-winded, and perhaps clueless post ahead!

As discussed earlier in this thread, here is a rough sketch of how I think
a high-level interface to twisted.protocols.ftp.FTPClient should look.

Currently, twisted.protocols.ftp contains mostly FTP-related classes; there
is only one module-level method, "parsePWDResponse".  I am thinking that we
could just implement the high-level client interface as methods within the
current twisted.protocols.ftp module.

Ideally, I'd like to be able to use it like so:

---------------------------------------------------------------------------
import os

from twisted.protocols import ftp

def deploy(self, appRoot, filePaths):
        """
        Deploy code to an ftp server

        appRoot - string containing the root directory of some app
        filePaths - list or tuple containing absolute filepaths
        """

        try:
            ftp.connect(host='foo.bar.org',
                        port=21,
                        user='anonymous'
                        password='anonymous at anonymous.net')

        except ftp.ConnectionFailed:
            return False

        else:
            for filePath in filePaths:
                fileDirectory, fileName = os.path.split(filePath)
                uploadDirectory = '%s/%s' % (appRoot, fileDirectory)

                if ftp.pwd() != (uploadDirectory):
                    try:
                        ftp.cd(uploadDirectory)

                    except ftp.DirDoesNotExist:
                        makeDirectory(uploadDirectory)
                        ftp.cd(uploadDirectory)

                    ftp.binary()
                    ftp.put(fileName)

            ftp.quit()
            return True

def makeDirectory(self, path):
    """
    Recursively create directories on the FTP server
    """

    parent, base = os.path.split(path)

    try:
        ftp.cd(parent)
        ftp.mkdir(base)

    except ftp.DirDoesNotExist:
        makeDirectory(parent)
        ftp.cd(parent)
        ftp.mkdir(base)
---------------------------------------------------------------------------


This code is pretty naive, to be sure, and not at all Twisted.  However, it
does hopefully illustrate the way I would like to interact with an FTP
client.  The "deploy" function could be refactored to use Deferreds pretty
easily; the "makeDirectory" function would be similarly simple.


As for the interface to FTPClient, I've outlined my thoughts below.  Note
that my immediate itch only calls for "cd", "pwd", "mkdir", and "put", of
which only "mkdir" and "put" need to be implemented.  It'd be cool, down
the road, to implement "mget" and friends, so that my sample code above
could be reduced even further, by removing the need to loop through the
list of file paths and transfer files one at a time.

My overall, grand ambition is to tie all of this together into a handy
code deployment tool that can pull versioned code from multiple source
control solutions, and deploy it using a variety of protocols.


---------------------------------------------------------------------------
# a module level variable to which we will bind an instance of FTPClient
theClient = None

def append(localFile, remoteFile=localFile)
    """
    Append the contents of a file on the client to a file on the server

    localFile  - string containing the name of the file on the client
    remoteFile - string containing the name of the file on the server;
                 defaults to the same name as the file on the client
    """

def ascii():
    """
    Set the transfer type to ascii (TYPE A)
    """

def binary():
    """
    Set the transfer type to binary (TYPE I)
    """

def bye():
    """
    Close the connection and exit the client
    """

def cd(remoteDirectory):
    """
    Change directory on the server (CWD)

    remoteDirectory - string containing the directory name
    """

def close():
    """
    Close the connection, but do not exit the client
    """

def connect(host, port, userID='anonymous', password='foo at bar.org'):
    """
    Connect to an FTP server

    This function will create an instance of FTPClient and bind it to
    "theClient", a module-level variable which we will treat like a
    singleton, so all these functions have an instance to work with
    """

def delete(remoteFile):
    """
    Delete a file from the server

    remoteFile - string containing the name of the file on the server
    """

def debug():
    """
    Toggle debugging mode on/off

    If debugging mode is on, debug info will be logged to some default file
    """

def disconnect():
    """
    Close the connection, but do not exit the client
    """

def get(remoteFile, localFile=remoteFile):
    """
    Transfer a file from the server to the client
    
    remoteFile - string containing the name of the file on the server
    localFile  - string containing the name of the file on the client;
                 defaults to the same name as the file on the server
    """

def literal(command):
    """
    Send arbitrary FTP command

    command - string containing the line to be sent as a command
    """

def mdelete(remoteFiles):
    """
    Delete multiple files from the server

    remoteFiles - list or tuple of filepaths on the server
    """

def mget(remoteFiles):
    """
    Transfer multiple files from the server to the client

    remoteFiles - list or tuple of filepaths on the server
    """

def mkdir(directory):
    """
    Create a directory on the server

    directory - string containing an absolute or relative path
    """

def mput(localFiles):
    """
    Transfer multiple file from the client to the server

    localFiles - list or tuple of filepaths on the client
    """

def put(localFile, remoteFile=localFile):
    """
    Transfer a file from the client to the server

    localFile  - string containing the name of the file on the client
    remoteFile - string containing the name of the file on the server;
                 defaults to the same name as the file on the client
    """

def quit():
    """
    Close the connection and exit the client
    """

def rmdir(directory):
    """
    Delete a directory on the server

    directory - string containing an absolute or relative path
    """
---------------------------------------------------------------------------


Well, that's my brain dump for now.  Be as harsh as you like in criticizing;
I have a thick hide, and I'm trying to learn, so don't pull any punches.
If anyone thinks it should be entirely different, that's fantastic, and I
want to hear about it.

L. Daniel Burr




From andrew-twisted at puzzling.org  Tue Jan 14 19:09:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 15 Jan 2003 11:09:23 +1100
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
References: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
Message-ID: <20030115000923.GA28656@frobozz.local>

On Tue, Jan 14, 2003 at 02:43:02PM -0800,  Daniel Burr wrote:
> 
> 
> WARNING!  Long-winded, and perhaps clueless post ahead!
> 
> As discussed earlier in this thread, here is a rough sketch of how I think
> a high-level interface to twisted.protocols.ftp.FTPClient should look.
> 
> Currently, twisted.protocols.ftp contains mostly FTP-related classes; there
> is only one module-level method, "parsePWDResponse".  I am thinking that we
> could just implement the high-level client interface as methods within the
> current twisted.protocols.ftp module.
> 
> Ideally, I'd like to be able to use it like so:

[snip code]

> This code is pretty naive, to be sure, and not at all Twisted.  However, it
> does hopefully illustrate the way I would like to interact with an FTP
> client.  The "deploy" function could be refactored to use Deferreds pretty
> easily; the "makeDirectory" function would be similarly simple.

Indeed.  I admit it is easier to think about these things synchronously,
though :)

> As for the interface to FTPClient, I've outlined my thoughts below.  Note
> that my immediate itch only calls for "cd", "pwd", "mkdir", and "put", of
> which only "mkdir" and "put" need to be implemented.  It'd be cool, down
> the road, to implement "mget" and friends, so that my sample code above
> could be reduced even further, by removing the need to loop through the
> list of file paths and transfer files one at a time.
> 
> My overall, grand ambition is to tie all of this together into a handy
> code deployment tool that can pull versioned code from multiple source
> control solutions, and deploy it using a variety of protocols.

Ah!  It's always nice to know what people are actually trying to do :)

> ---------------------------------------------------------------------------
> # a module level variable to which we will bind an instance of FTPClient
> theClient = None

Why do you want a global variable for this?  What's wrong with instatiating
and tracking your own FTPClient instance, and having these functions be
methods of that instance (rather than globals, as they seem to be now)?

> def append(localFile, remoteFile=localFile)
>     """
>     Append the contents of a file on the client to a file on the server
> 
>     localFile  - string containing the name of the file on the client
>     remoteFile - string containing the name of the file on the server;
>                  defaults to the same name as the file on the client
>     """

[..etc..]

And of course, these methods will have to return Deferreds.  Also, I don't
want FTPClient to be restricted to just plain files, as mentioned earlier,
but yeah :)

> Well, that's my brain dump for now.  Be as harsh as you like in criticizing;
> I have a thick hide, and I'm trying to learn, so don't pull any punches.
> If anyone thinks it should be entirely different, that's fantastic, and I
> want to hear about it.

That's ok... I'll have a deeper ponder on FTP with this in mind, and have
another attack at the code tonight.

-Andrew.




From radix at twistedmatrix.com  Tue Jan 14 22:31:22 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 14 Jan 2003 22:31:22 -0500
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
References: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
Message-ID: <20030115033122.GF31014@Radii>

On Tue, Jan 14, 2003 at 02:43:02PM -0800,  Daniel Burr wrote:
> As discussed earlier in this thread, here is a rough sketch of how I think
> a high-level interface to twisted.protocols.ftp.FTPClient should look.
 
> Ideally, I'd like to be able to use it like so:

>             for filePath in filePaths:
>                 fileDirectory, fileName = os.path.split(filePath)
>                 uploadDirectory = '%s/%s' % (appRoot, fileDirectory)
> 
>                 if ftp.pwd() != (uploadDirectory):
>                     try:
>                         ftp.cd(uploadDirectory)
> 
>                     except ftp.DirDoesNotExist:
>                         makeDirectory(uploadDirectory)
>                         ftp.cd(uploadDirectory)
> 
>                     ftp.binary()
>                     ftp.put(fileName)
> 
>             ftp.quit()
>             return True

This code assumes that the methods block, but they can't. Twisted is
an asynchronous framework, thus, no public interface functions (other
than reactor.run() and similar) block. I recommend implementing a
command-based FTP client on top of the asynchronous interfaces if you
actually want an interface with which you needn't worry about
asynchronous stuff. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Wed Jan 15 09:08:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Jan 2003 01:08:13 +1100
Subject: [Twisted-Python] Producers and Consumers
Message-ID: <20030115140813.GA32609@frobozz.local>

Hi all,

It seems to me that the IProducer and IConsumer interfaces in
twisted.internet.interfaces are effectively useless.

Say you wanted to write a class with a method like:

class MyConsumer:
    def foo(self, producer):
        """@type producer: L{IProducer}"""
        # keep a reference to the producer, to consume stuff from it later

How do you actually implement that method?

IProducer only specifies {resume,pause,stop}Producing.  IConsumer states
that it expects its write() method to be called by the producer.  But there
is no way to find out the IConsumer's producer using the methods documented
in IProducer/IConsumer (the interface doesn't explicitly say it, but it's
fairly obvious that there can only be one consumer per producer, and vice
versa).

Similarly, you can't write a method like this:

    def streamData(self):
        """@returns: a L{Deferred}, which will be called with an object
                     implementing L{IProducer}."""
        # ...

You'd use this like:

    d = source.streamData()
    d.addCallback(lambda p: self.registerProducer(p, streaming=1))

But of course, without knowing something extra about the producer beyond
what IProducer tells you, you can't implement this, because there's no way
to tell an IProducer what IConsumer to write to.

(Incidentally, the 'streaming' argument to registerProducer isn't very
clearly explained... after several readings, I *think* all it means is that
the producer starts producing immediately, rather than waiting for a call to
resumeProducing.)

Finally, I also see that there is no way for an producer to signal to its
consumer that it has finished.  Perhaps for the intended use cases of
producers and consumers, this is superfluous, but it would be very useful to
me!

My motivation for all this (in case you hadn't guessed :), is FTP.  I've
previously discussed the way the code currently works (by taking a Protocol
instance as an argument, so that downloads can be fed directly to it), and
I'm looking for clean ways to improve it, so I can add the STOR command
(i.e. uploads).

Now, I could do FTPClient.store similarly to how I do FTPClient.retrieve,
i.e.

    def store(self, path, protocol):
        """ ...
        @param path: The path to store data to.
        @param protocol: A L{Protocol} instance that will write the data
            to be stored upon a call to C{connectionMade}, and will call
            C{self.transport.loseConnection()} when done.
        """
        # ...

But everyone assures me that requiring protocol instances as parameters is a
bad way to do things, and my gut feeling agrees -- I just don't feel
comfortable with asking Twisted users to instantiate a Protocol without
involving a Factory.

The obvious alternative that occured to me was to use producers and
consumers -- after all, a download is just a stream of bytes waiting to be
consumed, and an upload is just a connection waiting for data to be produced
-- but IConsumer and IProducer don't fit this use-case.

So, are IConsumer and IProducer fundamentally broken, or is it intentional
that all Consumer/Producer implementations are co-dependent?  And what is
the right interface for FTPClient?

If I'm missing the Zen of Consumption and Production, then please enlighten
me, so that I may improve the existing docstrings and maybe write a howto?
:)

Regards,

-Andrew.




From andrew-twisted at puzzling.org  Wed Jan 15 09:23:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Jan 2003 01:23:22 +1100
Subject: [Twisted-Python] Producers and Consumers
In-Reply-To: <20030115140813.GA32609@frobozz.local>
References: <20030115140813.GA32609@frobozz.local>
Message-ID: <20030115142322.GB32609@frobozz.local>

On Thu, Jan 16, 2003 at 01:08:13AM +1100, Andrew Bennetts wrote:
> 
> Now, I could do FTPClient.store similarly to how I do FTPClient.retrieve,
> i.e.
> 
>     def store(self, path, protocol):
>         """ ...
>         @param path: The path to store data to.
>         @param protocol: A L{Protocol} instance that will write the data
>             to be stored upon a call to C{connectionMade}, and will call
>             C{self.transport.loseConnection()} when done.
>         """
>         # ...
> 
> But everyone assures me that requiring protocol instances as parameters is a
> bad way to do things, and my gut feeling agrees -- I just don't feel
> comfortable with asking Twisted users to instantiate a Protocol without
> involving a Factory.

I forgot to mention the other problem with this... I suspect the performance
of:

class Uploader:
    def connectionMade(self):
        self.transport.write(fiftyMegabyteString)
        self.transport.loseConnection()

would be suboptimal, to say the least ;)

In fact, I'm pretty certain the right way to do this is to use a producer,
just like twisted.web :)

-Andrew.




From rrichardson at eti-main.enabletech.com  Wed Jan 15 15:47:05 2003
From: rrichardson at eti-main.enabletech.com (Rick Richardson)
Date: Wed, 15 Jan 2003 12:47:05 -0800
Subject: [Twisted-Python] Large project (IMS) architecture
Message-ID: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>

I have had the task of the architecture of a lab information management
system.  If you're not familiar with a LIMS it basically tracks a sample of
something, be it a soil sample, a solution generated in a lab, whatever,
through its creation/logging through instrument testing, analysis,
verification and disposal.
It will be a replacement for our current project which is written currently
in C++ Builder 4, is about 1900 source files, 52 applications and.. approx
180 different screens/docked-panels. 

One of the challenges is the heavy relationships between all of the
different entities in the database, as well as some meta concepts of
batching and QC. 
Also the there is the maintenance of the overall system as well as roles of
admin/employee/customer. 
Much of the current app is redundant and could probably be reduced to about
60 screens that do perform quite a bit of computation of one sort or
another. 
This is also a somewhat distributed system, having a single system (either
client server or p2p) used on a multitude of desktops, possibly
geographically seperated.

My vision for the project is to, first off, create an Information Management
System, then customize it into a Lab IMS. I want to take a single (or very
few) screen approach that is data and context sensitive. So that it will
dynamically create most of the screens, leaving  custom development for only
a handful of computationally intensive tasks that still take advantage of an
sweet component structure. 

For this task I turn to Twisted. Partically because I'm enamoured with the
way that it takes advantage of, and complements pythons dynamic nature. And
partially I think because it is so large and amorphous that I'm sure there's
a solution somewhere in there for me. 

My questions: 
In what areas should I begin looking for components that will help me?
Is a single, dynamic screen approach reasonable?
What is people's preference? A centralized object center and RMI? Or purely
central data and all logic on the client?

I know this is a rather vague request for information but anything is
helpful.

Rick Richardson
Quidquid latine dictum sit, altum videtur.
(Anything said in Latin sounds profound.) 




From bob at redivi.com  Wed Jan 15 23:42:07 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 15 Jan 2003 23:42:07 -0500
Subject: [Twisted-Python] Some high-level python 2.2 generator toys
Message-ID: <DE275A5B-290C-11D7-8F7A-000A95686CD8@redivi.com>

I just spent an hour or two screwing around with generators and 
deferreds.  I threw this together, I think it's pretty slick.  I'm 
kinda tired, so the naming conventions and "documentation" might be 
stupid, but it does work.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: flow.py
Type: application/octet-stream
Size: 3767 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030115/0b1273af/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_flow.py
Type: application/octet-stream
Size: 2284 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030115/0b1273af/attachment-0001.obj 

From m at moshez.org  Thu Jan 16 01:09:13 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jan 2003 06:09:13 -0000
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
Message-ID: <20030116060913.15500.qmail@green.zadka.com>

On Wed, 15 Jan 2003, Rick Richardson <rrichardson at eti-main.enabletech.com> wrote:

> My questions: 
> In what areas should I begin looking for components that will help me?
> Is a single, dynamic screen approach reasonable?

You do understand you're asking a UI question on a developers' list, right? :)

> What is people's preference? A centralized object center and RMI? Or purely
> central data and all logic on the client?

It depends *a lot* on many details.



From pobrien at orbtech.com  Thu Jan 16 09:44:35 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 08:44:35 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
Message-ID: <200301160844.35501.pobrien@orbtech.com>

On Wednesday 15 January 2003 02:47 pm, Rick Richardson wrote:
> What is people's preference? A centralized object center and RMI? Or
> purely central data and all logic on the client?

You may want to look at the PyPerSyst project as well:

  http://sourceforge.net/projects/pypersyst/

PyPerSyst provides simple, robust persistence for Python objects. Note that 
the files are currently available only in CVS, and SourceForge has 
anonymous CVS shut down at the moment.

We recently added support for Pyro, which gives you client/server RMI-like 
remote access. You can find Pyro here:

  http://pyro.sourceforge.net/

I'd like to add support for Twisted as well, but I don't know when that will 
happen. Help from Twisted folks would be greatly appreciated.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------





From pobrien at orbtech.com  Thu Jan 16 11:48:40 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 10:48:40 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116104847.6e644ee8.itamar@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301160844.35501.pobrien@orbtech.com> <20030116104847.6e644ee8.itamar@itamarst.org>
Message-ID: <200301161048.40800.pobrien@orbtech.com>

On Thursday 16 January 2003 09:48 am, Itamar Shtull-Trauring wrote:
> On Thu, 16 Jan 2003 08:44:35 -0600
>
> "Patrick K. O'Brien" <pobrien at orbtech.com> wrote:
> > PyPerSyst provides simple, robust persistence for Python objects. Note
> > that the files are currently available only in CVS, and SourceForge
> > has anonymous CVS shut down at the moment.
>
> Twisted includes its own version of the idea behind PyPerSyst
> (www.prevayler.org) in twisted.persisted.journal.

Yes, I've looked at journal. I don't fully understand your implementation, 
because I don't fully understand Twisted yet. And, I had already started 
PyPerSyst before I knew about your implementation. Now I can't let it go. 
I'm sure you know how that is. :-)

> > We recently added support for Pyro, which gives you client/server
> > RMI-like remote access. You can find Pyro here:
> >
> >   http://pyro.sourceforge.net/
>
> I dislike Pyro since it uses pickles over the network. This is insecure,
> and even if that is acceptable limits you to Python clients only.

I'm not too worried about the limitation to Python clients. The security 
issue is a different matter. It looks like Pyro now supports XML pickles:

<quote>
Whether the marshaling is done using the safe xml pickling (from 
Gnosis_utils or PyXML) or the default pickle. The xml_pickle is not 
vulnerable for the pickle trojan problem mentioned in Chapter 7, but it is 
an order of a magnitude slower, and requires more bandwith. Use "any" for 
any implementation (defaults to PyXML), "pyxml" for PyXML, "gnosis" for 
Gnosis. PyXML seems to be about three times faster than Gnosis. You need to 
have installed Gnosis_Utils (at least version 1.0.2, latest is 1.0.5 at the 
time of writing). For PyXML, you need at least version 0.8, latest is 0.8.1 
at the time of writing. 
</quote>

> Twisted's remote object protocol Perspective Broker on the other hand
> does not use pickles, and can in fact be used with other languages (a
> Java implementation exists), while still offering many of the features
> Pyro provides.

PyPerSyst works with Pyro, but doesn't depend on it. I'd like to accomplish 
the same with Twisted. I started with Pyro because it was easier for me to 
figure out. Any suggestions for getting up-to-speed on Perspective Broker? 
Anything else I need to be aware of for this kind of application?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From twisted at itamarst.org  Thu Jan 16 12:08:01 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jan 2003 12:08:01 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161048.40800.pobrien@orbtech.com>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
	<200301160844.35501.pobrien@orbtech.com>
	<20030116104847.6e644ee8.itamar@itamarst.org>
	<200301161048.40800.pobrien@orbtech.com>
Message-ID: <20030116120801.12d79dc9.twisted@itamarst.org>

On Thu, 16 Jan 2003 10:48:40 -0600
"Patrick K. O'Brien" <pobrien at orbtech.com> wrote:

> Yes, I've looked at journal. I don't fully understand your
> implementation, because I don't fully understand Twisted yet. And, I
> had already started PyPerSyst before I knew about your implementation.
> Now I can't let it go. I'm sure you know how that is. :-)

Yah. And I need to write docs if I want people to use it :)

> Whether the marshaling is done using the safe xml pickling (from 
> Gnosis_utils or PyXML) or the default pickle. The xml_pickle is not 
> vulnerable for the pickle trojan problem mentioned in Chapter 7, but
> it is an order of a magnitude slower, and requires more bandwith.

PB actually implements its own version of Pickle as well (jelly), except
that it does *not* use a whole order of magnitude more of bandwidth -
it's probably the same bandwidth usage as pickle. It's still not as fast
as it could be, but we're working on it.

> PyPerSyst works with Pyro, but doesn't depend on it. I'd like to
> accomplish the same with Twisted. I started with Pyro because it was
> easier for me to figure out. Any suggestions for getting up-to-speed
> on Perspective Broker? 

http://twistedmatrix.com/documents/howto/pb-intro
http://twistedmatrix.com/documents/howto/pb-usage
http://twistedmatrix.com/documents/howto/pb-cred

Version 1.0.2 will have additional documentation.



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Jan 16 13:01:34 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 16 Jan 2003 13:01:34 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
		<200301160844.35501.pobrien@orbtech.com>
		<20030116104847.6e644ee8.itamar@itamarst.org>
		<200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>

Itamar Shtull-Trauring wrote:
> 
> PB actually implements its own version of Pickle as well (jelly)...

And jelly does nested objects, which Pickle can't.  
(...and which I need for my app. :^)

-- Steve.



From pobrien at orbtech.com  Thu Jan 16 13:38:40 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 12:38:40 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <20030116120801.12d79dc9.twisted@itamarst.org> <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
Message-ID: <200301161238.40611.pobrien@orbtech.com>

On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> Itamar Shtull-Trauring wrote:
> > PB actually implements its own version of Pickle as well (jelly)...
>
> And jelly does nested objects, which Pickle can't.

I'm not sure what you mean by that. Could you explain in what way Pickle 
can't handle nested objects? Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From pobrien at orbtech.com  Thu Jan 16 14:41:02 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 13:41:02 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116120801.12d79dc9.twisted@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <200301161341.02322.pobrien@orbtech.com>

On Thursday 16 January 2003 11:08 am, Itamar Shtull-Trauring wrote:
> > PyPerSyst works with Pyro, but doesn't depend on it. I'd like to
> > accomplish the same with Twisted. I started with Pyro because it was
> > easier for me to figure out. Any suggestions for getting up-to-speed
> > on Perspective Broker?
>
> http://twistedmatrix.com/documents/howto/pb-intro
> http://twistedmatrix.com/documents/howto/pb-usage
> http://twistedmatrix.com/documents/howto/pb-cred

Very nice. I can see how these capabilities would be useful. And now that 
I've read these I think I'm starting to understand Twisted. Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From twisted at itamarst.org  Thu Jan 16 14:51:38 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jan 2003 14:51:38 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161238.40611.pobrien@orbtech.com>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
	<20030116120801.12d79dc9.twisted@itamarst.org>
	<3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
	<200301161238.40611.pobrien@orbtech.com>
Message-ID: <20030116145138.6bf89e03.twisted@itamarst.org>

On Thu, 16 Jan 2003 12:38:40 -0600
"Patrick K. O'Brien" <pobrien at orbtech.com> wrote:

> I'm not sure what you mean by that. Could you explain in what way
> Pickle can't handle nested objects? Thanks.

Yes, what is a nested object?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Jan 16 15:32:58 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 16 Jan 2003 15:32:58 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <20030116120801.12d79dc9.twisted@itamarst.org> <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov> <200301161238.40611.pobrien@orbtech.com>
Message-ID: <3E2716FA.39B502A1@beeblebrox.gsfc.nasa.gov>

"Patrick K. O'Brien" wrote:
> 
> On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> >
> > And jelly does nested objects, which Pickle can't.
> 
> I'm not sure what you mean by that. Could you explain in what way Pickle
> can't handle nested objects? Thanks.

Sorry -- I didn't mean "nested objects", but nested 
functions of certain kinds, such as lambdas or 
curried functions.  E.g.:

>>> import pickle 
>>> f = lambda x: x in (1,2,3)
>>> pf = pickle.dumps(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/pickle.py", line 978, in dumps
    Pickler(file, bin).dump(object)
  File "/usr/local/lib/python2.2/pickle.py", line 115, in dump
    self.save(object)
  File "/usr/local/lib/python2.2/pickle.py", line 225, in save
    f(self, object)
  File "/usr/local/lib/python2.2/pickle.py", line 519, in save_global
    raise PicklingError(
pickle.PicklingError: Can't pickle <function <lambda> at 0x8161924>: it's not found as __main__.<lambda>
>>> from twisted.spread.jelly import jelly, unjelly
>>> jf = jelly(f)
>>> jf
['function', '__main__.<lambda>']
>>> newf = unjelly(f)
>>> newf(1)
1
>>> newf(4)
0

-- Steve.



From larryt at winfirst.com  Thu Jan 16 17:36:41 2003
From: larryt at winfirst.com (larryt at winfirst.com)
Date: Thu, 16 Jan 2003 14:36:41 -0800
Subject: [Twisted-Python] twisted.mail startup
Message-ID: <web-1093876@bmail1.winfirst.net>

Is there a set of options that I can feed mktap mail
that will start up twistedmail as a sendmail
replacement on my linux box.  I guess I'm looking for
something like the howto using-twistedweb.html, except
of course for twistedmail.

thanks,
larry



From pobrien at orbtech.com  Thu Jan 16 19:03:11 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 18:03:11 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116120801.12d79dc9.twisted@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <200301161803.11651.pobrien@orbtech.com>

On Thursday 16 January 2003 11:08 am, Itamar Shtull-Trauring wrote:
> http://twistedmatrix.com/documents/howto/pb-intro
> http://twistedmatrix.com/documents/howto/pb-usage
> http://twistedmatrix.com/documents/howto/pb-cred
>
> Version 1.0.2 will have additional documentation.

I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That is 
very cool stuff. I'm convinced that Twisted is the way to go.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From mario at ruggier.org  Thu Jan 16 19:07:28 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 17 Jan 2003 01:07:28 +0100
Subject: [Twisted-Python] twisted web on MacOSX -- apache, 80, firewall
Message-ID: <AA144918-29AF-11D7-9C8B-000393756786@ruggier.org>

I'm trying to install, and understand, twisted (1.0.2alpha1) web server 
on a
MacOS X 10.2.3 powerbook (a platform i am at the same time learning 
about).
Installation of twisted seems OK (even if with a number of exceptions 
from
admin/runtests, for which I temporarily put the log under twistd web, 
at:
http://ruggier.dyndns.org:8080/test.log ).

Getting the web server up to serve flat files was also successful. 
However, macos x
comes with apache on port 80 (turned on via Sharing->Services->Personal 
Web Sharing),
and a pre-set firewall (turned on via Sharing->Firewall).

To run twisted web on 8080 (http requests are served), the macos x 
firewall must be
turned off. That is correct?

If I turn off personal web sharing (to shut down apache) and launch 
twistd web on port 80,
http requests give "can't connect to server" error (this is with 
firewall on or off).
Is it possible to run twisted web on port 80? Is it not a good idea to 
start with?

Oh, btw, I am running python 2.2.2 (MacPython222full).

Thanks, mario




From bob at redivi.com  Fri Jan 17 02:58:17 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 02:58:17 -0500
Subject: [Twisted-Python] Cocoa (OS X) twisted example
Message-ID: <7013357A-29F1-11D7-95F7-000A95686CD8@redivi.com>

http://redivi.com/~bob/twisted-cocoaDemo.tgz

Essentially just a port of the QT "Twistzilla" example using the pyobjc 
project template and polling the default reactor with a NSTimer.  
Requires pyobjc (the released version is ok, no need for CVS).  Python 
must also be able to find pyobjc and twisted (i.e. in site-packages or 
dropped into the app bundle).  If you were to compile it and drop 
twisted+pyobjc in the bundle, it would run on any box with OS X 10.2+.

See http://pyobjc.sourceforge.net/ for more information.




From anthony at interlink.com.au  Fri Jan 17 03:03:01 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 17 Jan 2003 19:03:01 +1100
Subject: [Twisted-Python] PyPI evangelism :)
Message-ID: <200301170803.h0H831V29955@localhost.localdomain>

If you're running Python 2.3a1 or Python CVS, your distutils supports
the python package index, (PEP 301). This is just evangelism to try
to get people to register their packages - ooo, like, fr instance, 
twisted :)

http://www.amk.ca/cgi-bin/pypi.cgi

is the current test version of the interface. Adding more packages 
makes it more useful <hinthint>





From glyph at twistedmatrix.com  Fri Jan 17 04:01:09 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2003 03:01:09 -0600 (CST)
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161803.11651.pobrien@orbtech.com>
References: <200301161048.40800.pobrien@orbtech.com>
	<20030116120801.12d79dc9.twisted@itamarst.org>
	<200301161803.11651.pobrien@orbtech.com>
Message-ID: <20030117.030109.125895378.glyph@twistedmatrix.com>


On Thu, 16 Jan 2003 18:03:11 -0600, "Patrick K. O'Brien" <pobrien at orbtech.com> wrote:
> I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That is 
> very cool stuff. I'm convinced that Twisted is the way to go.

Okay, since this has been gnawing on my conscience every time somebody
mentioned PB in the last month, let me try to at least state this publicly once
for the record :-)

There is still one protocol-breaking change that I think we will be making to
PB.  The details are still a little hazy, but I am pretty sure that we can get
an order of magnitude performance increase (with no appreciable increase in
memory usage) by memoizing every object created from a Banana'd list rather
than creating explicit (reference 1 (foo ...)) expressions.

I find it hard to summarize what I mean by this, but for those of you familiar
with Jelly's implementation details, here's an attempt.

Currently, whenever an object is serialized, if it points to itself, it must be
"memo-ized" in order to give it a unique ID for the future.  This is best shown
with an example:

    >>> from twisted.spread.jelly import jelly
    >>> l = ['hello']
    >>> l.append(l)
    >>> jelly(l)
    ['reference', 1, ['list', 'hello', ['dereference', 1]]]

I believe that the technique we have been using to identify objects that
participate in circular references is slow and unnecessary.  Each object
corresponds to a Jelly expression (Python list) whose start has some position
in the banana stream relative to every other list start.  So in this example,
the resulting list could be:

    ['list', 'hello', ['dereference', 1]]

and the decoder could still quite easily recognize what the ['dereference', 1]
was pointing to because the list is the first in the stream.  For a more
complex example, this is what currently happens.

    >>> from twisted.spread.jelly import jelly
    >>> m = ['one']
    >>> m.append(m)
    >>> n = ['two']
    >>> n.append(n)
    >>> l = [n, m]
    >>> l = [m, n]
    >>> jelly(l)
    ['list', ['reference', 1, ['list', 'one', ['dereference', 1]]],
    ['reference', 2, ['list', 'two', ['dereference', 2]]]]

I'd prefer that produce this instead:

    ['list', ['list', 'one', ['dereference', 2]], ['list', 'two', ['dereference', 4]]]

To see why the numbers "2" and "4" make sense, count left brackets :).

This is technically a change to Jelly, not to PB, but it has ramifications on
the wire protocol.  In the process of doing this, I plan to add a
version-negotiation step to PB, similar to what currently exists for Jelly, so
that any potential future changes of this variety do not cause similar
problems.

What this MAY break:

  * Version Compatibility.
  
  If you have a running PB server, older versions of PB clients will no longer
  be able to connect.  This may be correctable but is probably not worth the
  effort, given the dearth of deployed PB services, and the fact that the
  primary incompatibility will be improved version negotiation so that this
  won't happen again :).
  
  * Things that use jellyFor directly
  
  The internal Jellier APIs may change in subtly incompatible ways.  Basic
  usage of jellyFor will probably still continue to work.
  
  * Alternate language implementations of PB
  
  These will need to be updated.  Emacs-PB looks to be in a non-working state
  already :-\ though I've already talked to Itamar about making similar changes
  to Java-PB, and they shouldn't be too hard.  It already reflects the Python
  code.

  * Applications using Jelly directly

  If you are using Jelly to store data in files or something like that, this
  will cause your new versions to be incompatible.  If there are really people
  doing this then perhaps we need version information for these files as well.
  
What this WILL NOT break:

  * Applications using PB at the high level
  
  If you have an app that just has objects which are Referenceable, Cacheable
  and so on, the existing semantics will continue to work, and if you upgrade
  Twisted on both server and client, both will continue to work with each other
  as they did before.

  * Applications using Banana directly

  This will have no impact on the Banana APIs or protocol and those look stable
  for the forseeable future.

Please keep in mind that nobody is working on this yet :-).  It may be that it
will not break any of the things above, but it will certainly not break the
last two.

There are other infrastructural changes to PB that I'd like to see (for
example, making the internal dictionaries use weakrefs rather than __del__) but
those should be completely transparent to end-users.

I believe this will also make the unified banana+jelly streaming optimization
(that Bruce has mentioned on IRC a few times) possible, but I'll have to leave
that to him when I've actually got some code/specs to describe this more
clearly.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030117/75013062/attachment.pgp 

From twisted at moshez.org  Fri Jan 17 05:16:17 2003
From: twisted at moshez.org (Moshe Zadka)
Date: Fri, 17 Jan 2003 04:16:17 -0600
Subject: [Twisted-Python] Debian Package Breakage
Message-ID: <E18ZTXt-0006LC-00@pyramid.twistedmatrix.com>

Dear Twisted Developers,

Concern has been expressed why the Debian build process is so easy to break.
I will try to address this concern here, but first let me reiterate my
request: please, let me or the list know *in advance* of any change which
might break the package build. If there is any doubt, an e-mail to the t-p
list is better than breakage. Because the Debian package build is a part
of the release procedure, breaking it means achieving a non-releasable state,
something I'm sure none of us want.

Now, to address the heart of the matter. The Debian package build breaks
whenever it encounters something it doesn't expect. The alternatives are
usually to overinculde or to underinclude. If I were to choose either of them,
I run the risk of producing suboptimal packages. If I refuse the temptation
to guess, I make sure that I have to fix it.

Don't treat the possible breakage as *bad* per-se: just think of it as another
good reason to discuss possible changes here before doing them, in the case
where it might cause problems.

Thanks in advance,
Moshe Zadka



From pobrien at orbtech.com  Fri Jan 17 09:00:54 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Fri, 17 Jan 2003 08:00:54 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030117.030109.125895378.glyph@twistedmatrix.com>
References: <200301161048.40800.pobrien@orbtech.com> <200301161803.11651.pobrien@orbtech.com> <20030117.030109.125895378.glyph@twistedmatrix.com>
Message-ID: <200301170800.54969.pobrien@orbtech.com>

On Friday 17 January 2003 03:01 am, Glyph Lefkowitz wrote:
> On Thu, 16 Jan 2003 18:03:11 -0600, "Patrick K. O'Brien" 
<pobrien at orbtech.com> wrote:
> > I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That
> > is very cool stuff. I'm convinced that Twisted is the way to go.
>
> Okay, since this has been gnawing on my conscience every time somebody
> mentioned PB in the last month, let me try to at least state this
> publicly once for the record :-)
>
> There is still one protocol-breaking change that I think we will be
> making to PB.  The details are still a little hazy, but I am pretty sure
> that we can get an order of magnitude performance increase (with no
> appreciable increase in memory usage) by memoizing every object created
> from a Banana'd list rather than creating explicit (reference 1 (foo
> ...)) expressions.

Sounds reasonable. Thanks for the heads-up.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From tv at twistedmatrix.com  Fri Jan 17 05:17:31 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 12:17:31 +0200
Subject: [Twisted-Python] twisted.mail startup
In-Reply-To: <web-1093876@bmail1.winfirst.net>
References: <web-1093876@bmail1.winfirst.net>
Message-ID: <20030117101731.GA6689@lapdog>

On Thu, Jan 16, 2003 at 02:36:41PM -0800, larryt at winfirst.com wrote:
> Is there a set of options that I can feed mktap mail
> that will start up twistedmail as a sendmail
> replacement on my linux box.  I guess I'm looking for
> something like the howto using-twistedweb.html, except
> of course for twistedmail.

	Moshez may have other things to say, but at this
	stage, based on my understanding of the code, I
	have two things to say:

	1. "No."

	2. "Don't use it yet if you like your email."



From tv at twistedmatrix.com  Fri Jan 17 10:27:29 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 17:27:29 +0200
Subject: [Twisted-Python] A nit on "Generalization of Deferred Execution in Python"
Message-ID: <20030117152729.GA8205@lapdog>

	http://cumulo-nimbus.mit.edu/deferex.xhtml

	"It is suggested that methods which must perform long-running
	calculations or communication with a remote host may return a
	Deferred."

	That's a horribly misleading paragraph. What you probably want
	to say is that you recommend such things to return a Deferred
	-- I currently read that such that functions should sometimes
	return Deferreds and sometimes real results, and that is very
	confusing. That's why there are defer.succeed() and
	defer.fail().



From tv at twistedmatrix.com  Fri Jan 17 10:34:45 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 17:34:45 +0200
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
Message-ID: <20030117153445.GA8629@lapdog>

        http://cumulo-nimbus.mit.edu/deferex.xhtml

	You call this "pretty"?

def prettyRequest(server, requestName):
    return server.makeRequest(requestName
                              ).addCallback(
        lambda result: ', '.join(result.asList())
        ).addErrback(
        lambda failure: failure.printTraceback())

	How about

def prettyRequest(server, requestName):
    d=server.makeRequest(requestName)
    d.addCallback(lambda result: ', '.join(result.asList()))
    d.addErrback(lambda failure: failure.printTraceback())
    return d

	I'm pretty sure everyone will consider that more readable.



From bob at redivi.com  Fri Jan 17 11:33:20 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 11:33:20 -0500
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <20030117153445.GA8629@lapdog>
Message-ID: <63BB4B66-2A39-11D7-95F7-000A95686CD8@redivi.com>

On Friday, Jan 17, 2003, at 10:34 America/New_York, Tommi Virtanen 
wrote:

>         http://cumulo-nimbus.mit.edu/deferex.xhtml
> def prettyRequest(server, requestName):
>     d=server.makeRequest(requestName)
>     d.addCallback(lambda result: ', '.join(result.asList()))
>     d.addErrback(lambda failure: failure.printTraceback())
>     return d

How about calling it prettyWorthlessRequest :)  You'll never see the 
result, just failures!  How about throwing a print statement in the 
callback lambda or something?

-bob




From mario at ruggier.org  Fri Jan 17 12:24:10 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 17 Jan 2003 18:24:10 +0100
Subject: [Twisted-Python] DOMTemplate best practice
Message-ID: <7DC40EE6-2A40-11D7-8FEE-000393756786@ruggier.org>

Hello,

I am playing with the examples and howtos, to try and figure some of 
this thing out.
The DOMTemplate HowTo goes through a simple example, and uses 3 files, 
one for
the template itself, one for a resource that sits next to the template 
file, and one for the
code that actually instantiates the template (and this one must be put 
in the pythonpath).
My question is that, given that this 3rd file (webquoteresource.py in 
this example) is anyhow
dedicated to this template (and will always be, given that the method 
names must match
hook names in the template), why is it kept separate and not part of 
the rpy itself?

Thanks, mario

ps; btw, this example if full of errors, namely:
-  webquoteresource.py:
from TwistedQuotes import quoters	(no quoters...)
templateFile = "WebQuotes.xhtml"	(never used, and filename non-existant)
- webquote.rpy:
#get the sibling file "quotes.txt" 		(no such "quotes.txt" file ...)
quotefile = os.path.join(os.path.split(__file__)[0], "quotes.txt")
- clicking on "See it in action" gives error...




From radix at twistedmatrix.com  Fri Jan 17 14:05:52 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 17 Jan 2003 14:05:52 -0500
Subject: [Twisted-Python] PyCon Devel Sprint
Message-ID: <20030117190552.GA16489@Radii>

Who wants to participate in the development sprint before PyCon? (The
24th and 25th of March.) It will require a fee, which will be less
than $50, estimated. I'll put together the sprint proposal and submit
it once I know how many people we can expect. Reply here or mention it
to me on IRC and I'll add your name to the list (along with a vote for
what we should hack on in particular, if you've got one).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Fri Jan 17 14:10:08 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 17 Jan 2003 14:10:08 -0500
Subject: [Twisted-Python] PyCon Devel Sprint
In-Reply-To: <20030117190552.GA16489@Radii>
References: <20030117190552.GA16489@Radii>
Message-ID: <20030117191008.GB16489@Radii>

On Fri, Jan 17, 2003 at 02:05:52PM -0500, Christopher Armstrong wrote:
> Who wants to participate in the development sprint before PyCon? (The
> 24th and 25th of March.) It will require a fee, which will be less
> than $50, estimated. I'll put together the sprint proposal and submit

That (maximum estimate) $50 covers both days of the sprint, btw.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From pobrien at orbtech.com  Fri Jan 17 15:32:36 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Fri, 17 Jan 2003 14:32:36 -0600
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <20030117153445.GA8629@lapdog>
References: <20030117153445.GA8629@lapdog>
Message-ID: <200301171432.36690.pobrien@orbtech.com>

On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
>         http://cumulo-nimbus.mit.edu/deferex.xhtml
>
> 	You call this "pretty"?
>
> def prettyRequest(server, requestName):
>     return server.makeRequest(requestName
>                               ).addCallback(
>         lambda result: ', '.join(result.asList())
>         ).addErrback(
>         lambda failure: failure.printTraceback())
>
> 	How about
>
> def prettyRequest(server, requestName):
>     d=server.makeRequest(requestName)
>     d.addCallback(lambda result: ', '.join(result.asList()))
>     d.addErrback(lambda failure: failure.printTraceback())
>     return d
>
> 	I'm pretty sure everyone will consider that more readable.

You've raised an issue I've wondered about as I've looked at some of the 
Twisted source. There seems to be a fondness for returning large 
expressions, rather than building up a return value in a more piecemeal 
(and more easily read and understood) fashion. Is this simply a matter of 
style, or is there something substantial going on here related to the 
nature of Twisted? My own code tends to look more like your second example.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From larryt at winfirst.com  Fri Jan 17 15:36:27 2003
From: larryt at winfirst.com (larryt at winfirst.com)
Date: Fri, 17 Jan 2003 12:36:27 -0800
Subject: 
 Subject: Re: [Twisted-Python] twisted.mail startup
Message-ID: <web-1094457@bmail1.winfirst.net>

Tommi Virtanen <tv at twistedmatrix.com> writes:
> larryt at winfirst.com wrote:
> > [..] twistedmail as a sendmail replacement [..]
>       [..]
> 	2. "Don't use it yet if you like your email."

Thanks, I'll check back later then.  For future
reference, if I could have gotten twisted.mail
working, I was interested in using it on a low
traffic Mailman host.  



From jason at asbahr.com  Fri Jan 17 17:25:23 2003
From: jason at asbahr.com (Jason Asbahr)
Date: Fri, 17 Jan 2003 16:25:23 -0600
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <200301171432.36690.pobrien@orbtech.com>
Message-ID: <9245D1FC-2A6A-11D7-8308-000393753460@asbahr.com>

On Friday, January 17, 2003, at 02:32 PM, Patrick K. O'Brien wrote:
> On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
>> def prettyRequest(server, requestName):
>>     d=server.makeRequest(requestName)
>>     d.addCallback(lambda result: ', '.join(result.asList()))
>>     d.addErrback(lambda failure: failure.printTraceback())
>>     return d
>>
>> 	I'm pretty sure everyone will consider that more readable.
>
> You've raised an issue I've wondered about as I've looked at some of 
> the
> Twisted source. There seems to be a fondness for returning large
> expressions, rather than building up a return value in a more piecemeal
> (and more easily read and understood) fashion. Is this simply a matter 
> of
> style, or is there something substantial going on here related to the
> nature of Twisted? My own code tends to look more like your second 
> example.

My code as well, favoring more, shorter lines for clarity.  I suspect 
the Twisted wizards don't even have to think about deferreds anymore, 
they just flow directly from mind to keyboard...  : )

Jason




From andrew-twisted at puzzling.org  Fri Jan 17 17:43:42 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 09:43:42 +1100
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <200301171432.36690.pobrien@orbtech.com>
References: <20030117153445.GA8629@lapdog> <200301171432.36690.pobrien@orbtech.com>
Message-ID: <20030117224342.GB5224@frobozz.local>

On Fri, Jan 17, 2003 at 02:32:36PM -0600, Patrick K. O'Brien wrote:
> On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
> >         http://cumulo-nimbus.mit.edu/deferex.xhtml
> >
> > 	You call this "pretty"?
> >
> > def prettyRequest(server, requestName):
> >     return server.makeRequest(requestName
> >                               ).addCallback(
> >         lambda result: ', '.join(result.asList())
> >         ).addErrback(
> >         lambda failure: failure.printTraceback())
> >
> > 	How about
> >
> > def prettyRequest(server, requestName):
> >     d=server.makeRequest(requestName)
> >     d.addCallback(lambda result: ', '.join(result.asList()))
> >     d.addErrback(lambda failure: failure.printTraceback())
> >     return d
> >
> > 	I'm pretty sure everyone will consider that more readable.
> 
> You've raised an issue I've wondered about as I've looked at some of the 
> Twisted source. There seems to be a fondness for returning large 
> expressions, rather than building up a return value in a more piecemeal 
> (and more easily read and understood) fashion. Is this simply a matter of 
> style, or is there something substantial going on here related to the 
> nature of Twisted? My own code tends to look more like your second example.

I find 
    d.addCallback(processResult).addErrback(reportError)
to be a nice and readable... but as soon as lambdas are involved, it tends
to get too messy, so I'll tend to use the piecemeal approach then.

So my answer is "it depends" :)

-Andrew.




From bob at redivi.com  Fri Jan 17 19:04:01 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 19:04:01 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <20030117224342.GB5224@frobozz.local>
Message-ID: <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>

I've noticed that there isn't really a good/standard way to do timeouts 
(without bad things happening) or cancel deferreds in Twisted [without 
subclassing everything you use, which isn't good in my book].

In the attached code sample (and log, so you don't need to run it to 
see its output), I demonstrate the problem, a quick-fix temporary 
solution (to prevent unhandleable exceptions from being raised), and a 
longer term proposed convention for refactoring existing classes to 
take advantage of this new functionality.

As radix mentioned, my proposed solution does make the meaning of 
errback somewhat ambiguous.  However if you add a new 
CancelledOperation exception to deferred, and addCanceller/cancel 
methods (addCanceller = addErrback, cancel = errback) then it'd be 
pretty transparent.

-bob


-------------- next part --------------
A non-text attachment was scrubbed...
Name: deferred.py
Type: application/octet-stream
Size: 3343 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030117/b1103e3a/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: deferred.log
Type: application/octet-stream
Size: 2426 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030117/b1103e3a/attachment-0001.obj 

From missive at hotmail.com  Sat Jan 18 03:57:43 2003
From: missive at hotmail.com (Lee Harr)
Date: Sat, 18 Jan 2003 08:57:43 +0000
Subject: [Twisted-Python] PATCH: /doc/examples/pbecho.py
Message-ID: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>

I was getting some deprecation errors running this one, so I
remodeled it to look like /doc/howto/listings/pb/pb6server.py


3:24 >cvs diff -u pbecho.py
Index: pbecho.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/pbecho.py,v
retrieving revision 1.7
diff -u -r1.7 pbecho.py
--- pbecho.py   25 May 2002 06:02:31 -0000      1.7
+++ pbecho.py   18 Jan 2003 08:20:44 -0000
@@ -17,6 +17,7 @@

from twisted.spread import pb
from twisted.internet import app
+from twisted.cred.authorizer import DefaultAuthorizer

class DefinedError(pb.Error):
     pass
@@ -35,6 +36,12 @@
if __name__ == '__main__':
     import pbecho
     appl = app.Application("pbecho")
-    
pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
-    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
+    auth = DefaultAuthorizer(appl)
+    s = pbecho.SimpleService("pbecho", appl, auth)
+    s.createPerspective("guest")
+    i1 = auth.createIdentity("guest")
+    i1.setPassword("guest")
+    i1.addKeyByString("pbecho", "guest")
+    auth.addIdentity(i1)
+    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(auth)))
     appl.save("start")






_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From andrew-twisted at puzzling.org  Sat Jan 18 07:26:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 23:26:38 +1100
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>
References: <20030117224342.GB5224@frobozz.local> <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>
Message-ID: <20030118122638.GA5708@frobozz.local>

On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
> I've noticed that there isn't really a good/standard way to do timeouts 
> (without bad things happening) or cancel deferreds in Twisted [without 
> subclassing everything you use, which isn't good in my book].

I've glanced at your code and log, but it's not immediately clear to me what
the problem is...

For timeouts, what's wrong with the Deferred.setTimeout method?

For cancelling a Deferred, what's wrong with
"d.errback(CancelledError(...))"?  

There's no standard "CancelledError" exception in Twisted, admittedly, but
that could be easily fixed.

-Andrew.




From andrew-twisted at puzzling.org  Sat Jan 18 07:57:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 23:57:53 +1100
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <20030118122638.GA5708@frobozz.local>
References: <20030117224342.GB5224@frobozz.local> <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com> <20030118122638.GA5708@frobozz.local>
Message-ID: <20030118125753.GC5708@frobozz.local>

On Sat, Jan 18, 2003 at 11:26:38PM +1100, Andrew Bennetts wrote:
> On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
> > I've noticed that there isn't really a good/standard way to do timeouts 
> > (without bad things happening) or cancel deferreds in Twisted [without 
> > subclassing everything you use, which isn't good in my book].
> 
> I've glanced at your code and log, but it's not immediately clear to me what
> the problem is...

Nevermind me, I shouldn't try to read code and post when I'm tired.

Your problem (if I'm understanding correctly :), is that exceptions are
raised by calling Deferred.callback, if that Deferred has timed out, or
otherwise been "cancelled" (by having its errback called).

I'm tempted to argue that this is a feature: the code attempting to fire the
callback probably should know that the Deferred has already expired due to
an error.  The obvious problem with this is that alot of the time you don't
care if the Deferred has already fired or not, and wrapping d.callback(x) in
a try/except AlreadyCalledError is hardly convenient.

So I'd still like at least the option for an exception to be raised, even if
it's disabled by default.  I can't shake the feeling that some apps will
need to know that it succeeds... although I guess they could just register
their own .errback if they really care?

For that matter, perhaps another solution would be to mandate that a method
creating a Deferred is responsible for configuring it with an errback that
will cancel pending operations so that .callback won't be called.  Ugh,
that's a confusing sentence.  What I'm trying to say is that similarly to
how when FTP opens a port and waits for a connection, it must set an errback
to close that port if the connection never comes (e.g. due to an error on
the control connection), whatever "owns" the Deferred should also cancel
whatever would call .callback if an error occured -- this is probably
necessary in general, not just for timeouts and cancels.

Interesting problem :)

-Andrew.




From pobrien at orbtech.com  Sat Jan 18 13:09:32 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Sat, 18 Jan 2003 12:09:32 -0600
Subject: [Twisted-Python] Copyright nit
Message-ID: <200301181209.32219.pobrien@orbtech.com>

>>> import twisted.copyright
>>> twisted.copyright.version
'1.0.2alpha4'
>>> twisted.copyright.copyright
'Copyright (c) 2000-2002 Matthew William Lefkowitz, all rights reserved.'

Should this be updated to "2000-2003"?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From rrichardson at eti-main.enabletech.com  Thu Jan 16 14:09:37 2003
From: rrichardson at eti-main.enabletech.com (Rick Richardson)
Date: Thu, 16 Jan 2003 11:09:37 -0800
Subject: [Twisted-Python] Nested objects in pickle (was:  Large projec
	t (IMS) architecture)
Message-ID: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>

that's a good question:

>>> class MyClass:
	def __init__(self):
		self.blah = 1
		
>>> class MySecondClass:
	def __init__(self):
		self.foo = MyClass()

>>> class MyThirdClass:
	def MyFunc():
		print "test"

>>> bar = MyThirdClass()
>>> bar.foo = MySecondClass()
>>> dir(bar)
['MyFunc', '__doc__', '__module__', 'foo']

>>> pickle.dump(bar, outfile)
 |
 ------
	 |
      \/
(i__main__
MyThirdClass
p0
(dp1
S'foo'
p2
(i__main__
MySecondClass
p3
(dp4
g2
(i__main__
MyClass
p5
(dp6
S'blah'
p7
I1
sbsbsb.

>>> blarg = pickle.load(infile)
>>> dir(blarg)
['MyFunc', '__doc__', '__module__', 'foo']

>>> blarg.foo.foo.blah
1
>>> 

The has-a nested relationships seem to work. Is it the is-a that is broken
in pickle? I never knew that to be a nested relationship.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Patrick K.
O'Brien
Sent: Thursday, January 16, 2003 10:39 AM
To: twisted-python at twistedmatrix.com; Steve Waterbury
Subject: Re: [Twisted-Python] Large project (IMS) architecture


On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> Itamar Shtull-Trauring wrote:
> > PB actually implements its own version of Pickle as well (jelly)...
>
> And jelly does nested objects, which Pickle can't.

I'm not sure what you mean by that. Could you explain in what way Pickle 
can't handle nested objects? Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From bob at redivi.com  Sat Jan 18 14:43:00 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 18 Jan 2003 14:43:00 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions 
Message-ID: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>

On Saturday, Jan 18, 2003, at 07:57 America/New_York, Andrew Bennetts 
wrote:

> On Sat, Jan 18, 2003 at 11:26:38PM +1100, Andrew Bennetts wrote:
>> On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
>>> I've noticed that there isn't really a good/standard way to do 
>>> timeouts
>>> (without bad things happening) or cancel deferreds in Twisted 
>>> [without
>>> subclassing everything you use, which isn't good in my book].
>>
>> I've glanced at your code and log, but it's not immediately clear to 
>> me what
>> the problem is...
>
> For that matter, perhaps another solution would be to mandate that a 
> method
> creating a Deferred is responsible for configuring it with an errback 
> that
> will cancel pending operations so that .callback won't be called.

That's exactly what I am proposing!  :)

Look at the class "DoesHandleTimeoutsByItself" -- that's exactly what 
it does, register an errback to a method such that it can cancel what 
it's doing so that it never tries to do a callback or another errback.

What bothers me most isn't that an exception is being raised, but that 
it is impossible to reasonably catch that exception unless you subclass 
  or otherwise do some nasty modifications to the reactor, deferred, or 
whichever class causes the exception.

-bob




From pobrien at orbtech.com  Sat Jan 18 14:59:58 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Sat, 18 Jan 2003 13:59:58 -0600
Subject: [Twisted-Python] Nested objects in pickle (was:  Large projec t (IMS) architecture)
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>
Message-ID: <200301181359.58439.pobrien@orbtech.com>

On Thursday 16 January 2003 01:09 pm, Rick Richardson wrote:
> The has-a nested relationships seem to work. Is it the is-a that is
> broken in pickle? I never knew that to be a nested relationship.

Not quite. The real issue concerns classes and functions defined within 
other classes, functions, or methods. Pickling only works on objects 
defined at the "top" level of a module. Here is an example:

>>> import pickle
>>> class Foo:
...     def __init__(self):
...         class Bar:
...             def __init__(self):
...                 self.type = 'Nested class'           
...         self.bar = Bar()
... 
>>> foo = Foo()
>>> foo.bar.type
'Nested class'
>>> s = pickle.dumps(foo)
>>> foo2 = pickle.loads(s)
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/pickle.py", line 986, in loads
    return Unpickler(file).load()
  File "/usr/local/lib/python2.2/pickle.py", line 597, in load
    dispatch[key](self)
  File "/usr/local/lib/python2.2/pickle.py", line 767, in load_inst
    klass = self.find_class(module, name)
  File "/usr/local/lib/python2.2/pickle.py", line 824, in find_class
    klass = getattr(mod, name)
AttributeError: 'module' object has no attribute 'Bar'
>>> 

For more pickling details see my article at 
http://www-106.ibm.com/developerworks/library/l-pypers.html as well as the 
section of the Python documentation dealing with Pickling limitations at 
http://www.python.org/doc/current/lib/node62.html.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From glyph at twistedmatrix.com  Sat Jan 18 19:14:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jan 2003 18:14:10 -0600 (CST)
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled
 exceptions 
In-Reply-To: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>
References: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>
Message-ID: <20030118.181410.17861993.glyph@twistedmatrix.com>


On Sat, 18 Jan 2003 14:43:00 -0500, Bob Ippolito <bob at redivi.com> wrote:

> What bothers me most isn't that an exception is being raised, but that it is
> impossible to reasonably catch that exception unless you subclass or
> otherwise do some nasty modifications to the reactor, deferred, or whichever
> class causes the exception.

I believe that I expressed concerns when setTimeout was originally proposed,
noting that only the system firing the callback can reasonably terminate
whatever process is doing the callback.

The meaning of "cancel" is domain-dependant, so if we want a general way of
doing this then we need a way to express cancellation in the code which expects
to be calling the callback.  I think that the system that calls the callback is
usually the one that creates the Deferred, so perhaps we could have an optional
argument to the constructor, cancelCallback.

I can't help but feel this is a really ugly corner case, which would be
inconvenient to effectively force everyone who uses a Deferred to implement in
order for setTimeout to be callable. However, I don't have any better ideas.
My original plan here was to always put timeouts somewhere else besides a
Deferred, and have the system that calls the deferred call an errback at that
point (such as with the "timeout" argument to connectTCP).

Another interesting case: what if two people call setTimeout on the same
Deferred?  If it's not purely the creator's responsibility to set the timeout
on a Deferred, then what do we do about conflicts between different points in
the processing chain?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030118/50c36457/attachment.pgp 

From bob at redivi.com  Sat Jan 18 20:57:26 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 18 Jan 2003 20:57:26 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions 
In-Reply-To: <20030118.181410.17861993.glyph@twistedmatrix.com>
Message-ID: <5BDDE2BE-2B51-11D7-9312-000A95686CD8@redivi.com>

On Saturday, Jan 18, 2003, at 19:14 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Sat, 18 Jan 2003 14:43:00 -0500, Bob Ippolito <bob at redivi.com> 
> wrote:
>
>> What bothers me most isn't that an exception is being raised, but 
>> that it is
>> impossible to reasonably catch that exception unless you subclass or
>> otherwise do some nasty modifications to the reactor, deferred, or 
>> whichever
>> class causes the exception.
>
> I believe that I expressed concerns when setTimeout was originally 
> proposed,
> noting that only the system firing the callback can reasonably 
> terminate
> whatever process is doing the callback.
>
> The meaning of "cancel" is domain-dependant, so if we want a general 
> way of
> doing this then we need a way to express cancellation in the code 
> which expects
> to be calling the callback.  I think that the system that calls the 
> callback is
> usually the one that creates the Deferred, so perhaps we could have an 
> optional
> argument to the constructor, cancelCallback.
>
> I can't help but feel this is a really ugly corner case, which would be
> inconvenient to effectively force everyone who uses a Deferred to 
> implement in
> order for setTimeout to be callable. However, I don't have any better 
> ideas.
> My original plan here was to always put timeouts somewhere else 
> besides a
> Deferred, and have the system that calls the deferred call an errback 
> at that
> point (such as with the "timeout" argument to connectTCP).
>
> Another interesting case: what if two people call setTimeout on the 
> same
> Deferred?  If it's not purely the creator's responsibility to set the 
> timeout
> on a Deferred, then what do we do about conflicts between different 
> points in
> the processing chain?

You definitely raise some more interesting points here that didn't 
occur to me, especially the multiple-listener case.  I can think of two 
approaches that could facilitate this..
1) Have the actual operations inherit from Deferred, and have them deal 
with setTimeout and cancellation on their own.
2) Make cancellation some kind of delegate process.. On cancellation 
request, if there are other listeners on that deferred it asks them all 
if they're ok with cancellation.  If all of them say yes, it cancels.  
Otherwise the ones that said yes are sent an errback saying that it was 
cancelled and removed from list of callback/errbacks (so it seems to 
them as if it were cancelled) but the ones that said no will remain as 
they were and the operation will not be cancelled.




From warner at lothar.com  Sun Jan 19 02:06:16 2003
From: warner at lothar.com (Brian Warner)
Date: 18 Jan 2003 23:06:16 -0800
Subject: [Twisted-Python] PATCH: /doc/examples/pbecho.py
In-Reply-To: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>
References: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>
Message-ID: <871y39vct3.fsf@luther.lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> I was getting some deprecation errors running this one, so I
> remodeled it to look like /doc/howto/listings/pb/pb6server.py

Thanks for the catch! I've committed your patch to CVS (in a modified form
which still uses .makeIdentity, so we have an example of that *somewhere* in
the docs).. should be in the next release.

thanks,
 -Brian



From acapnotic at twistedmatrix.com  Sun Jan 19 06:45:20 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 19 Jan 2003 03:45:20 -0800
Subject: [Twisted-Python] 1.0.2alpha4 test failures on Alpha, PPC
Message-ID: <1042976718.25671.78.camel@troglodyte.funhouse>

As part of preparation for a CVSToys release, I installed Twisted on
SourceForge's compile farm machines.  (At least the ones with suitable
versions of Python.)  I got a boatload of Errors running tests on their
Alpha machine, and a few Failures on their PPC box.  Results can be seen
in the 'tests' tarballs/directories at 
http://twistedmatrix.com/users/acapnotic/wip/

This generates some suggestions for Trial:
I didn't see a file with the quick OK/pass/fail summary in it in the
_trial directory, instead I made a runtests.out by redirecting stdout
and stderr.  It'd be nice if runtests generated such a thing alongside
test.log by itself, though.

Also, does trial record stats on the environment it's running in?  Host
platform, python versions, etc.  That might be good.

Quick list of offenders:

under Alpha:
FTP, names, test_policies, test_smtp.LoopbackSMTPTestCase.testMessages,
test_tcp.ConnectorTestCase.testUserFail (twice?),
test_udp.MulticastTestCase.testInterface.

under PPC:
testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
testReconnect (twisted.test.test_tcp.ConnectorTestCase)
testFailing (twisted.test.test_tcp.LoopbackTestCase)

"But-it-worked-on-my-machine"-ly,

 - Kevin

-- 
The moon is full, 99.4% illuminated, 15.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030119/53d2bd50/attachment.pgp 

From mike.thompson at day8.com.au  Sun Jan 19 07:42:51 2003
From: mike.thompson at day8.com.au (Mike Thompson)
Date: Sun, 19 Jan 2003 23:42:51 +1100
Subject: [Twisted-Python] ZEO/Twisted?
Message-ID: <000001c2bfb8$47bcd300$4cde1cd3@Notebook>

I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
transactions arrive at the server, they are stored thru ZEO into a ZODB
database.

Is this combination (ZEO/Twisted) known to work/not-work?  Any info/pointers
appreciated.

Yours drowning in technology,
Mike.






From mike.thompson at day8.com.au  Sun Jan 19 18:21:27 2003
From: mike.thompson at day8.com.au (Mike Thompson)
Date: Mon, 20 Jan 2003 10:21:27 +1100
Subject: [Twisted-Python] Re: ZEO/Twisted?
Message-ID: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>

> I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
> transactions arrive at the server, they are stored thru ZEO into a ZODB
> database.

> Is this combination (ZEO/Twisted) known to work/not-work?  Any
info/pointers
> appreciated.

> Yours drowning in technology,
> Mike.

Okay. I think I've answered my question. I've found this Feb-'02 post in the
Zope3-dev archives ...

     http://lists.zope.org/pipermail/zope3-dev/2002-February/000516.html

Seems to say that Twisted and ZEO do not mix.  $@#$!@*

This post is almost a year old, so I'm wondering if anything has anything
happened since it was written. Has the release of Standalone ZODB prompted
something, said he hopefully.

Is the potentially blocking nature of "ZEO commits" the problem?  Or is the
handling of the "ZEO cache invalidation", er, messages? Or is it something
else entirely?

Thanks,
Mike.





From mario at ruggier.org  Sun Jan 19 20:19:21 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 20 Jan 2003 02:19:21 +0100
Subject: [Twisted-Python] Re: ZEO/Twisted?
In-Reply-To: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
Message-ID: <34367D3A-2C15-11D7-8D12-000393756786@ruggier.org>

Hi,

fyi, in case you might not be aware of it... an interesting bridge for 
postgres (in
particular, but not only) was announced a few days ago  (on daily 
python-url,
http://www.pythonware.com/daily/index.htm  2003-01-14, titled "Modeling
Framework, an object-relational bridge for Python", by S?bastien 
Bigaret).
It is currently kind of bolted to Zope, but would be very interesting to
have it also available for twisted.

mario


On lundi, jan 20, 2003, at 00:21 Europe/Amsterdam, Mike Thompson wrote:

>
>> I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
>> transactions arrive at the server, they are stored thru ZEO into a 
>> ZODB
>> database.
>
>> Is this combination (ZEO/Twisted) known to work/not-work?  Any
> info/pointers
>> appreciated.
>
>> Yours drowning in technology,
>> Mike.
>
> Okay. I think I've answered my question. I've found this Feb-'02 post 
> in the
> Zope3-dev archives ...
>
>      
> http://lists.zope.org/pipermail/zope3-dev/2002-February/000516.html
>
> Seems to say that Twisted and ZEO do not mix.  $@#$!@*
>
> This post is almost a year old, so I'm wondering if anything has 
> anything
> happened since it was written. Has the release of Standalone ZODB 
> prompted
> something, said he hopefully.
>
> Is the potentially blocking nature of "ZEO commits" the problem?  Or 
> is the
> handling of the "ZEO cache invalidation", er, messages? Or is it 
> something
> else entirely?
>
> Thanks,
> Mike.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Sun Jan 19 23:36:59 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Jan 2003 23:36:59 -0500
Subject: [Twisted-Python] Re: ZEO/Twisted?
In-Reply-To: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
References: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
Message-ID: <20030119233659.00dbcbf6.twisted@itamarst.org>

On Mon, 20 Jan 2003 10:21:27 +1100
"Mike Thompson" <mike.thompson at day8.com.au> wrote:

> Is the potentially blocking nature of "ZEO commits" the problem?  Or
> is the handling of the "ZEO cache invalidation", er, messages? Or is
> it something else entirely?

They use different event loops. I'm hoping ZEO gets ported to Twisted's
event loop in the future.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From acapnotic at twistedmatrix.com  Mon Jan 20 01:05:32 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 19 Jan 2003 22:05:32 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.3, the Rise of Im
Message-ID: <1043042730.25671.112.camel@troglodyte.funhouse>

CVSToys version 1.0.3 has been released for your software consuming
pleasure.  The biggest changes are in the chat and web-based
notification clients.  Sending commit notifications to an IRC channel is
now possible without the hassle of an intermediary Words server, and the
web/RSS interface has been updated to work with recent versions of
Twisted.  Also, if your commits list has found it difficult to deal with
commit messages coming from different addresses, it's now possible to
specify a fixed address to put in the From header.

As always, everything CVSToys may be found at 
http://purl.net/net/CVSToys

Share and Enjoy,

 - Kevin Turner
   (Acapnotic)

-- 
The moon is waning gibbous, 97.4% illuminated, 16.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030119/6c461a1e/attachment.pgp 

From mrrileyx at yahoo.com  Sun Jan 19 20:43:53 2003
From: mrrileyx at yahoo.com (Sean Riley)
Date: Sun, 19 Jan 2003 19:43:53 -0600
Subject: [Twisted-Python] twisted mentioned on gamasutra
Message-ID: <HOEEKPCOKELHCNIJNMAGEEBACJAA.mrrileyx@yahoo.com>

http://www.gamasutra.com/php-bin/letter_display.php?letter_id=443

---------------------------------
"I'm not as interested in being witty as I am in being clear", Scott Meyers
Sean Riley
MrRileyX at yahoo.com



From exarkun at intarweb.us  Mon Jan 20 13:47:11 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 20 Jan 2003 13:47:11 -0500
Subject: [Twisted-Python] socket errors
Message-ID: <20030120184711.GA27668@meson.dyndns.org>

  Creating a socket can raise an exception in a few circumstances.  Bad
arguments for one (we don't have to worry about this, since we control the
arguments in all circumstances); too many open files for another.  Attached
patch addresses the second circumstance, by catching the raised socket.error
and wrapping it up in a CannotListenError.  It seems unlikely that anyone
has code to handle this error condition (and hence is relying on
socket.error being raised), and CannotListenError seems to be a better thing
to be raising in this case.  Anyone disagree?  Also, the XYZClient classes
might be changed to catch the same socket.error and raise a ConnectError
instead (attached doesn't address this).

  Jp


-- 
Elitism: It's lonely at the top, but it's comforting to look down upon
everyone at the bottom.
--
 12:00am up 35 days, 9:48, 3 users, load average: 0.61, 0.33, 0.22
-------------- next part --------------
Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.99
diff -u -r1.99 tcp.py
--- tcp.py	1 Jan 2003 14:32:27 -0000	1.99
+++ tcp.py	20 Jan 2003 18:36:48 -0000
@@ -451,8 +451,8 @@
             os.chmod(self.port, 0666)
             self.unixsocket = 1
         else:
-            skt = self.createInternetSocket()
             try:
+                skt = self.createInternetSocket()
                 skt.bind((self.interface, self.port))
             except socket.error, le:
                 raise CannotListenError, (self.interface, self.port, le)
Index: udp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/udp.py,v
retrieving revision 1.34
diff -u -r1.34 udp.py
--- udp.py	19 Nov 2002 17:48:58 -0000	1.34
+++ udp.py	20 Jan 2003 18:36:48 -0000
@@ -90,8 +90,8 @@
     
     def _bindSocket(self):
         log.msg("%s starting on %s"%(self.protocol.__class__, self.port))
-        skt = self.createInternetSocket()
         try:
+            skt = self.createInternetSocket()
             skt.bind((self.interface, self.port))
         except socket.error, le:
             raise error.CannotListenError, (self.interface, self.port, le)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030120/5339b232/attachment.pgp 

From radix at twistedmatrix.com  Mon Jan 20 16:37:42 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Jan 2003 16:37:42 -0500
Subject: [Twisted-Python] lore bug
Message-ID: <20030120213742.GA1029@Radii>

&lt; and &gt; in source listings that are inserted directly in the
source .html don't work. See
http://twistedmatrix.com/documents/howto/widgets.html and
doc/howto/widgets.html for an example of this. If nobody gets around
to this by tomorrow I'll try to dive in.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Mon Jan 20 16:41:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Jan 2003 16:41:41 -0500
Subject: [Twisted-Python] socket errors
In-Reply-To: <20030120184711.GA27668@meson.dyndns.org>
References: <20030120184711.GA27668@meson.dyndns.org>
Message-ID: <20030120164141.641b0a28.itamar@itamarst.org>

Patch looks fine to me.



From radix at twistedmatrix.com  Mon Jan 20 21:41:46 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Jan 2003 21:41:46 -0500
Subject: [Twisted-Python] lore bug
In-Reply-To: <20030120213742.GA1029@Radii>
References: <20030120213742.GA1029@Radii>
Message-ID: <20030121024146.GB1029@Radii>

On Mon, Jan 20, 2003 at 04:37:42PM -0500, Christopher Armstrong wrote:
> &lt; and &gt; in source listings that are inserted directly in the
> source .html don't work. See
> http://twistedmatrix.com/documents/howto/widgets.html and

Ahem. I meant http://twistedmatrix.com/documents/howto/widgets, of
course. The one with an .html extension is the source.

> doc/howto/widgets.html for an example of this. If nobody gets around
> to this by tomorrow I'll try to dive in.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at intarweb.us  Tue Jan 21 22:59:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 21 Jan 2003 22:59:01 -0500
Subject: [Twisted-Python] Test failures
Message-ID: <20030122035901.GA5387@meson.dyndns.org>

  Been playing around with different test orders (courtesy trials --random
parameter) and I've found that with a seed of 4:

===============================================================================
FAILURE: testWakeUp (twisted.test.test_internet.InterfaceTestCase)
-------------------------------------------------------------------------------
Traceback (most recent call last):
   File "/home/exarkun/projects/python/Twisted/twisted/trial/unittest.py", line 122, in runOneTest
    method(testCase)
   File "/home/exarkun/projects/python/Twisted/twisted/test/test_internet.py", line 266, in testWakeUp
    self.assertApproximates(time.time(), start + 0.5, 0.5)
   File "/home/exarkun/projects/python/Twisted/twisted/trial/unittest.py", line 62, in assertApproximates
    raise AssertionError, (msg or "%s ~== %s" % (first, second))
 AssertionError: 1043207178.43 ~== 1043207173.94
===============================================================================
ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
-------------------------------------------------------------------------------
Traceback! exceptions.AttributeError, TCPClient instance has no attribute 'connector'
/home/exarkun/projects/python/Twisted/twisted/internet/default.py:566:doSelect
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:250:doConnect
===============================================================================
ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
-------------------------------------------------------------------------------
Traceback! exceptions.AttributeError, 'NoneType' object has no attribute 'connectionLost'
/home/exarkun/projects/python/Twisted/twisted/internet/default.py:579:doSelect
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:258:connectionLost
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:140:connectionLost
-------------------------------------------------------------------------------

consistently comes up.

  Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 36 days, 9:48, 4 users, load average: 0.10, 0.14, 0.14
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030121/beeea534/attachment.pgp 

From dave at krondo.com  Wed Jan 22 04:45:11 2003
From: dave at krondo.com (Dave Peticolas)
Date: 22 Jan 2003 01:45:11 -0800
Subject: [Twisted-Python] Test failures
In-Reply-To: <20030122035901.GA5387@meson.dyndns.org>
References: <20030122035901.GA5387@meson.dyndns.org>
Message-ID: <1043228711.5173.199.camel@oneiros>

On Tue, 2003-01-21 at 19:59, Jp Calderone wrote:
>   Been playing around with different test orders (courtesy trials --random
> parameter) and I've found that with a seed of 4:
> 
> FAILURE: testWakeUp (twisted.test.test_internet.InterfaceTestCase)
> ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
> ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)

I haven't gotten the second two, but the first one was
caused by threading not being initialized in the reactor.
Should be fixed now.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030122/30282c5f/attachment.pgp 

From whisper at oz.net  Wed Jan 22 20:08:17 2003
From: whisper at oz.net (David LeBlanc)
Date: Wed, 22 Jan 2003 17:08:17 -0800
Subject: [Twisted-Python] Gtk version
Message-ID: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>

Which version of gtk and pygtk should I be using to get twisted GUI's to
work on Windows 2000? In this particular case, it's manhole.

PyGtk-0.6.11 complains about GDK on every keystroke:
This is after the GUI comes up:
setting login report 'connecting...'
-:1: error: invalid string constant "Console_stdout", expected valid string
constant

It does let me log in using the user and password entered when I made the
tap.
Every keystroke causes this:
Traceback (most recent call last):
  File "J:\Python22\Lib\site-packages\pygtk\gtk.py", line 127, in __call__
    ret = apply(self.func, a)
  File "J:\Python22\lib\site-packages\twisted\manhole\ui\pywidgets.py", line
63, in processKey
    isMeta = event.state & gtk.GDK.MOD4_MASK
AttributeError: 'module' object has no attribute 'GDK'

PyGtk-1.99.11-libglade dies with:
J:\twila>manhole
Traceback (most recent call last):
  File "J:\python22\scripts\manhole.py", line 33, in ?
    from twisted.scripts import manhole
  File "J:\Python22\Lib\site-packages\twisted\scripts\manhole.py", line 23,
in ?
    from twisted.spread.ui import gtkutil
  File "J:\Python22\lib\site-packages\twisted\spread\ui\gtkutil.py", line
62, in ?
    class GetString(gtk.GtkWindow):
AttributeError: 'module' object has no attribute 'GtkWindow'

PyGtk-0.6.11 seems to be using gtk+-1.3.0

PyGtk-1.99.11-libglade uses gtk2_libraries-win32.zip

Thanks,

David LeBlanc
Seattle, WA USA




From andrewextra at puzzling.org  Tue Jan 21 03:24:40 2003
From: andrewextra at puzzling.org (andrewextra at puzzling.org)
Date: Tue, 21 Jan 2003 03:24:40 -0500 (EST)
Subject: [Twisted-Python] lore bug
In-Reply-To: <20030121024146.GB1029@Radii>
References: <20030120213742.GA1029@Radii> <20030121024146.GB1029@Radii>
Message-ID: <4541.130.95.169.10.1043137480.squirrel@mail.puzzling.org>

> On Mon, Jan 20, 2003 at 04:37:42PM -0500, Christopher Armstrong wrote:
>
>> doc/howto/widgets.html for an example of this. If nobody gets around
>> to this by tomorrow I'll try to dive in.

I'm at linux.conf.au all week, so I won't be able to look at this anytime
soon. :(

-Andrew.




From mario at ruggier.org  Thu Jan 23 12:40:55 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 23 Jan 2003 18:40:55 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <D34E8C99-2EF9-11D7-A447-000393756786@ruggier.org>

Hi, sorry for the newbie questions but I do not understand how I can 
combine the resource interface with deferred callbacks. Or, 
specifically, can anyone point me to a simple example of a .rpy that 
does a simple database call, and returns the result to the http 
response?

Many thanks,

Mario 




From exarkun at intarweb.us  Thu Jan 23 14:19:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 23 Jan 2003 14:19:03 -0500
Subject: [Twisted-Python] Arbitrary Port/Connector objects
Message-ID: <20030123191903.GA5664@meson.dyndns.org>

  So far there are a couple use-cases for listening and connecting with
IListeningPort/IConnector implementers that aren't in twisted.internet. 
Tv's SRV connector is one, IPv6 sockets is another.  Currently it is
cumbersome to use these, both because there are no convenience methods in
reactor, and because if you want them to serialize properly you have to
handle storing and restarting them yourself.

  Attached patch adds two methods to Application and two methods to
the default reactor (they'll need to be put in an interface somewhere, too -
I wasn't sure what the best place for them would be): listenWith and
connectWith.  These take a type object that implements IListeningPort and
IConnector respectively, and then perform similar operations to the other
listen and connect methods, including serialization and rebinding the ports
on application startup.  Also added to Application is unlistenWith, an
awkwardly named function that causes a listening Port to stop listening.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
-- 
 up 38 days, 23:48, 5 users, load average: 1.88, 1.70, 1.66
-------------- next part --------------
? app.ann
? socket.diff
? with.diff
Index: app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.73
diff -u -r1.73 app.py
--- app.py	23 Jan 2003 16:28:07 -0000	1.73
+++ app.py	23 Jan 2003 19:05:43 -0000
@@ -259,11 +259,14 @@
         self.tcpPorts = []              # check
         self.udpPorts = []
         self.sslPorts = []
+        self.extraPorts = []
         self._listenerDict = {}
+        self._extraListeners = {}
         # a list of (tcp, ssl, udp) Connectors
         self.tcpConnectors = []
         self.sslConnectors = []
         self.unixConnectors = []
+        self.extraConnectors = []
         # a list of twisted.python.delay.Delayeds
         self.delayeds = []              # check
         # a list of twisted.internet.cred.service.Services
@@ -277,7 +280,7 @@
             self.uid = uid or os.getuid()
             self.gid = gid or os.getgid()
 
-    persistenceVersion = 10
+    persistenceVersion = 11
 
     _authorizer = None
 
@@ -289,6 +292,16 @@
             self._authorizer.setApplication(self)
         return self._authorizer
 
+    def upgradeToVersion11(self):
+        self._extraListeners = {}
+        self.extraPorts = []
+        self.extraConnectors = []
+
+    def upgradeToVersion10(self):
+        # persistenceVersion was 10, but this method did not exist
+        # I do not know why.
+        pass
+
     def upgradeToVersion9(self):
         self._authorizer = self.authorizer
         del self.authorizer
@@ -366,6 +379,36 @@
             del dict['_listenerDict']
         return dict
 
+    def listenWith(self, portType, *args, **kw):
+        """
+        Start an instance of the given C{portType} listening.
+
+        @type portType: type which implements C{IListeningPort}
+        """
+        self.extraPorts.append((portType, args, kw))
+        if self.running:
+            from twisted.internet import reactor
+            p = reactor.listenWith(portType, *args, **kw)
+            self._extraListeners[(portType, args, kw)] = p
+            return p
+
+    def unlistenWith(self, portType, *args, **kw):
+        toRemove = []
+        for t in self.extraPorts:
+            _portType, _args, _kw = t
+            if portType == _portType:
+                if args == _args[:len(args)]:
+                    for (k, v) in kw.items():
+                        if _kw.has_key(k) and _kw[k] != v:
+                            break
+                    else:
+                        toRemove.append(t)
+        for t in toRemove:
+            self.extraPorts.remove(t)
+            if self._extraListeners.has_key(t):
+                self._extraListeners[t].stopListening()
+                del self._extraListeners[t]
+
     def listenTCP(self, port, factory, backlog=5, interface=''):
         """
         Connects a given protocol factory to the given numeric TCP/IP port.
@@ -409,6 +452,17 @@
             from twisted.internet import reactor
             return reactor.listenSSL(port, factory, ctxFactory, backlog, interface)
 
+    def connectWith(self, connectorType, *args, **kw):
+        """
+        Start an instance of the given C{connectorType} connecting.
+        
+        @type connectorType: type which implements C{IConnector}
+        """
+        self.extraConnectors.append((connectorType, args, kw))
+        if self.running:
+            from twisted.internet import reactor
+            return reactor.connectWith(connectorType, *args, **kw)
+
     def connectTCP(self, host, port, factory, timeout=30, bindAddress=None):
         """Connect a given client protocol factory to a specific TCP server."""
         self.tcpConnectors.append((host, port, factory, timeout, bindAddress))
@@ -582,12 +636,17 @@
                 except error.CannotListenError, msg:
                     log.msg('error on SSL port %s: %s' % (port, msg))
                     return
+            for portType, args, kw in self.extraPorts:
+                reactor.listenWith(portType, *args, **kw)
+
             for host, port, factory, ctxFactory, timeout, bindAddress in self.sslConnectors:
                 reactor.connectSSL(host, port, factory, ctxFactory, timeout, bindAddress)
             for host, port, factory, timeout, bindAddress in self.tcpConnectors:
                 reactor.connectTCP(host, port, factory, timeout, bindAddress)
             for address, factory, timeout in self.unixConnectors:
                 reactor.connectUNIX(address, factory, timeout)
+            for connectorType, args, kw in self.extraConnectors:
+                reactor.connectWith(connectorType, *args, **kw)
 
             for service in self.services.values():
                 service.startService()
Index: default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.59
diff -u -r1.59 default.py
--- default.py	9 Jan 2003 08:03:11 -0000	1.59
+++ default.py	23 Jan 2003 19:05:43 -0000
@@ -380,7 +380,16 @@
         p.startListening()
         return p
 
+    # IReactorSomething else
+    def listenWith(self, portType, *args, **kw):
+        p = portType(*args, **kw)
+        p.startListening()
+        return p
 
+    def connectWith(self, connectorType, *args, **kw):
+        c = connectorType(*args, **kw)
+        c.connect()
+        return c
 
 class _Win32Waker(log.Logger, styles.Ephemeral):
     """I am a workaround for the lack of pipes on win32.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030123/6617556f/attachment.pgp 

From bh at intevation.de  Thu Jan 23 14:23:56 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 23 Jan 2003 20:23:56 +0100
Subject: [Twisted-Python] Error handling in Application.bindPorts
Message-ID: <6qhebzfz5f.fsf@salmakis.intevation.de>

Hi,

I'm trying to get one of my twisted programs to terminate immediately if
it can't listen on a port on startup. It's main program is basically the
same as in e.g. doc/howto/listings/application/app1.py, i.e (quoting
from app1.py):

app = twisted.internet.app.Application("daytimer")
f = Factory()
f.protocol = Daytime
app.listenTCP(8813, f)

app.run()

My program uses a different protocol and factory, but the principle is
the same: it calls app.listenTCP before it calls app.run().

Now, if the mainloop isn't running yet, listenTCP doesn't start
listening immediately[1] but simply appends the arguments to a list.
Then, when app.run() is called and that list is not empty it will call
bindPorts before entering the mainloop.

bindPorts simply catches the CannotListenError, logs a message and
returns immediately even if not all ports have been bound yet.
Unfortunately, even if bindPorts returns early, app.run still enters the
mainloop. There doesn't seem to be a good way to avoid this.

IMO bindPorts should reraise the exception after writing logging the
error instead of simply returning. 

   Bernhard


[1] I think app.listenTCP doesn't try to listen immediately because this
method is also used when creating taps and that should be possible even
if the port is currently in use or the user doesn't have permission to
listen on that port.

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From twisted at sylane.com  Thu Jan 23 14:25:23 2003
From: twisted at sylane.com (Sylane)
Date: Thu, 23 Jan 2003 20:25:23 +0100
Subject: [Twisted-Python] First contribution...
Message-ID: <80857963986.20030123202523@sylane.com>

Hi,

More than a week ago, I posted a little patch
for pb saying I working on a pb example...
Since this post, nobody ever reply it.
Even to say the patch sucks or something
and it's not applied to the CVS at this time.
The example I worked on DONT work without
this patch cause the cacheable implementation is broken...
If nobody care of my contributions,
OK say it and i will start a fork of  spread for my own use.
If I did bad, if it's not the way contributions
must be done, OK say it too.
If nobody received my post, you will not received
this one too... and I don't understand anymore.

P.S: Pleeeassse someone reply......
P.S.2: I'm not a paranoiac. And it's not because I'm a paranoiac that you're not all against me ! ! !

-- 
Best regards,
 Sylane                          mailto:twisted at sylane.com




From twisted at itamarst.org  Thu Jan 23 14:54:03 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Jan 2003 14:54:03 -0500
Subject: [Twisted-Python] First contribution...
In-Reply-To: <80857963986.20030123202523@sylane.com>
References: <80857963986.20030123202523@sylane.com>
Message-ID: <20030123145403.7500a7de.twisted@itamarst.org>

On Thu, 23 Jan 2003 20:25:23 +0100
Sylane <twisted at sylane.com> wrote:

> More than a week ago, I posted a little patch
> for pb saying I working on a pb example...
> Since this post, nobody ever reply it.
> Even to say the patch sucks or something

This can happen. things you can do:

1. Choose someone on #twisted with IRC access and nudnik them until they
put the patch in or tell you it's no good.
2. Add it to sf.net/projects/twisted bug tracker.
3. Help us finish our issue tracker so we can use a decent bug tracking
system and don't have to use mailing list or sourceforge.



From twisted at itamarst.org  Thu Jan 23 14:56:51 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Jan 2003 14:56:51 -0500
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <20030123191903.GA5664@meson.dyndns.org>
References: <20030123191903.GA5664@meson.dyndns.org>
Message-ID: <20030123145651.4bc76a49.twisted@itamarst.org>

On Thu, 23 Jan 2003 14:19:03 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   Attached patch adds two methods to Application and two methods to
> the default reactor (they'll need to be put in an interface somewhere,
> too - I wasn't sure what the best place for them would be): listenWith
> and connectWith.

I think the reactor implementations of the method should pass the
reactor as the first arg to the connectorType or listenType, e.g.:

+    def connectWith(self, connectorType, *args, **kw):
+        c = connectorType(self, *args, **kw)
+        c.connect()
+        return c



From glyph at twistedmatrix.com  Thu Jan 23 17:05:04 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Jan 2003 16:05:04 -0600 (CST)
Subject: [Twisted-Python] First contribution...
In-Reply-To: <80857963986.20030123202523@sylane.com>
References: <80857963986.20030123202523@sylane.com>
Message-ID: <20030123.160504.74745680.glyph@twistedmatrix.com>


On Thu, 23 Jan 2003 20:25:23 +0100, Sylane <twisted at sylane.com> wrote:

> If nobody care of my contributions, OK say it and i will start a fork of
> spread for my own use.  If I did bad, if it's not the way contributions must
> be done, OK say it too.  If nobody received my post, you will not received
> this one too... and I don't understand anymore.

Sylane,

I'm sorry, but most of the Twisted dev team is both very busy doing other work
and highly distractable :-).  That doesn't mean we're not interested in your
contributions, and I'm sorry for the long delay.

I don't know if your patch was applied, but I know that a few fixes did go into
twisted.spread last week.  If you're still having problems, I'll try to have a
look later this week.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030123/f625ce30/attachment.pgp 

From ldanielburr at earthlink.net  Thu Jan 23 20:25:42 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Thu, 23 Jan 2003 20:25:42 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Thu, 23 Jan 2003, Mario Ruggier wrote:

>Hi, sorry for the newbie questions but I do not understand how I
>can combine the resource interface with deferred callbacks.  Or,
>specifically, can anyone point me to a simple example of a .rpy
>that does a simple database call, and returns the result to the
>http response?
>
>Many thanks,
>
>Mario

I'm no expert, but you can do something like this (UNTESTED):
-----------------------------------------------------------------
# replace this import with whatever DBAPI module you use...
import cx_Oracle

# twisted imports
from twisted.internet import threads
from twisted.web import resource
from twisted.web.server import NOT_DONE_YET

def databaseOperation():
    con = cx_Oracle.connect("foo/bar at mydb.mysvr.org")
    cur = con.cursor()
    cur.execute("SELECT COUNT(*) FROM MyTable")
    databaseResult = cur.fetchall()
    cur.close()
    con.close()

    return databaseResult[0][0]

def databaseResult(result, httpRequest):
    httpRequest.write(result)
    httpRequest.finish()

class MyResource(resource.Resource):
    def render(self, request):
        d = threads.deferToThread(databaseOperation)
        d.addCallback(databaseResult, request)
        return NOT_DONE_YET

resource = MyResource()
-----------------------------------------------------------------

Of course, you could also use twisted.enterprise.adbapi, but I've experienced a lot of memory leaks occurring when going that route, so I just use deferToThread instead.

There is probably a better way to code this, but I'm not far enough along in my Python/Twisted experience to provide it.

L. Daniel Burr



From radix at twistedmatrix.com  Thu Jan 23 21:38:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 23 Jan 2003 21:38:32 -0500
Subject: [Twisted-Python] Gtk version
In-Reply-To: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>
References: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>
Message-ID: <20030124023832.GA2017@Radii>

On Wed, Jan 22, 2003 at 05:08:17PM -0800, David LeBlanc wrote:
> Which version of gtk and pygtk should I be using to get twisted GUI's to
> work on Windows 2000? In this particular case, it's manhole.
> 
> PyGtk-0.6.11 complains about GDK on every keystroke:
> This is after the GUI comes up:
> setting login report 'connecting...'
> -:1: error: invalid string constant "Console_stdout", expected valid string
> constant
> 
> It does let me log in using the user and password entered when I made the
> tap.
> Every keystroke causes this:
...
> AttributeError: 'module' object has no attribute 'GDK'
> 
> PyGtk-1.99.11-libglade dies with:
> J:\twila>manhole
...
> AttributeError: 'module' object has no attribute 'GtkWindow'
> 
> PyGtk-0.6.11 seems to be using gtk+-1.3.0

I think this might be your problem. Try Gtk 1.2.x.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dave at krondo.com  Fri Jan 24 03:39:36 2003
From: dave at krondo.com (Dave Peticolas)
Date: 24 Jan 2003 00:39:36 -0800
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
References: 
	 <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
Message-ID: <1043397576.5182.231.camel@oneiros>

On Thu, 2003-01-23 at 17:25, L. Daniel Burr wrote:
> Of course, you could also use twisted.enterprise.adbapi,
> but I've experienced a lot of memory leaks occurring when
> going that route, so I just use deferToThread instead.

I'm about to start using t.e.adbapi pretty heavily,
so I'm interested in this report. Do you have more
details?

thanks,
dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030124/f638600c/attachment.pgp 

From mario at ruggier.org  Fri Jan 24 05:14:56 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 24 Jan 2003 11:14:56 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
Message-ID: <B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>

Thanks a lot Daniel, that was very helpful. The code you sent works
almost verbatim on a test table in postgres. I have also tried mapped
the same solution to adbapi. Tthe rpy code for both versions is below.
To switch between the 2 just toggle commenting the resource defns.
In the adbapi version, I have some questions:

1.  First of all, would this be the correct way to do this with adbapi?
2. If I stop the reactor at the end of databaseResult_adbapi, twistdweb
returns the http request with correct content, but crashes  
(consistently on
each request).
3. If i just import the reactor privately inside the render() method  
(thus,
never call stop() on it), everything seems to work fine. But is this the
way it should be done?

Thanks again, mario


>> Hi, sorry for the newbie questions but I do not understand how I
>> can combine the resource interface with deferred callbacks.  Or,
>> specifically, can anyone point me to a simple example of a .rpy
>> that does a simple database call, and returns the result to the
>> http response?
>>
>> Many thanks,
>>
>> Mario
>
> I'm no expert, but you can do something like this (UNTESTED):

...

> Of course, you could also use twisted.enterprise.adbapi, but I've  
> experienced a lot of memory leaks occurring when going that route, so  
> I just use deferToThread instead.
>
> There is probably a better way to code this, but I'm not far enough  
> along in my Python/Twisted experience to provide it.
>
> L. Daniel Burr

========================
# common twisted imports
from twisted.web import resource
from twisted.web.server import NOT_DONE_YET

dbname = 'db'
dbuser = 'user'
dbpass = 'pw'

### dbapi

def databaseResult(result, httpRequest):
     httpRequest.write(str(result))
     httpRequest.finish()

def errBack(err, httpRequest):
     httpRequest.write('error: ' + str(err) )
     httpRequest.finish()

def databaseOperation():
     from pyPgSQL import PgSQL
     con = PgSQL.connect(database=dbname,user=dbuser,password=dbpass)
     cur = con.cursor()
     cur.execute("SELECT foo_id,name,weight FROM foo")
     databaseResult = cur.fetchall()
     cur.close()
     con.close()
     return databaseResult #[0][0]

class MyResource(resource.Resource):
     def render(self, request):
         from twisted.internet import threads
         d = threads.deferToThread(databaseOperation)
         d.addCallback(databaseResult, request)
         d.addErrback(errBack, request)
         return NOT_DONE_YET

### adpapi

from twisted.internet import reactor
from twisted.enterprise import row

class FooRow(row.RowObject):
   rowColumns = [
           ('foo_id', 'int'),
           ('name', 'varchar'),
           ('weight', 'int'),
                ]
   rowKeyColumns = [('foo_id', 'int4')]
   rowTableName = 'foo'
   #rowFactoryMethod = ['testFactoryMethod']

def databaseResult_adbapi(result, httpRequest):
     if result:
         for foo in result:
             httpRequest.write('foo: '+str(foo.__dict__)+'<br/>')
     else:
         httpRequest.write('stop:')
     httpRequest.finish()
     #reactor.stop()

def errBack_adbapi(err, httpRequest):
     httpRequest.write('error: '+str(err) )
     httpRequest.finish()
     #reactor.stop()

class MyResource_adbapi(resource.Resource):
     def render(self, request):
         #from twisted.internet import reactor
         from twisted.enterprise import adbapi, reflector
         from twisted.enterprise.sqlreflector import SQLReflector
         dbpool =  
adbapi.ConnectionPool('pyPgSQL.PgSQL',database=dbname,user=dbuser,passwo 
rd=dbpass)
         r = SQLReflector(dbpool,[FooRow])
         d = r.loadObjectsFrom('foo',whereClause=[('foo_id',  
reflector.LESSTHAN, 5)])
         d.addCallback(databaseResult_adbapi, request)
         d.addErrback(errBack_adbapi, request)
         reactor.run()
         return NOT_DONE_YET

###

#resource = MyResource()
resource = MyResource_adbapi()

###
========================





From luciano at hiper.com.br  Fri Jan 24 11:53:53 2003
From: luciano at hiper.com.br (Luciano Ramalho)
Date: Fri, 24 Jan 2003 13:53:53 -0300
Subject: [Twisted-Python] FTPClient put
Message-ID: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>

Can the FTPClient class be used to *send* files (STOR)? If yes, how?

I've succesfully used the ftpclient.py example to retrieve a file 
listing from a server, but reading the API docs and the source of the 
ftp.py module has not given me a clue about how to *send* a file.

Best regards,

Luciano




From twisted at itamarst.org  Fri Jan 24 12:01:34 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 24 Jan 2003 12:01:34 -0500
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>
References: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
	<B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>
Message-ID: <20030124120134.5fb8640c.twisted@itamarst.org>

On Fri, 24 Jan 2003 11:14:56 +0100
Mario Ruggier <mario at ruggier.org> wrote:

> 3. If i just import the reactor privately inside the render() method  
> (thus,
> never call stop() on it), everything seems to work fine. But is this
> the way it should be done?

Yes. I'm not even sure why you need to get at the reactor at all.



From mario at ruggier.org  Fri Jan 24 12:36:37 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 24 Jan 2003 18:36:37 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <20030124120134.5fb8640c.twisted@itamarst.org>
Message-ID: <640A9680-2FC2-11D7-B4F6-000393756786@ruggier.org>

> On Fri, 24 Jan 2003 11:14:56 +0100
> Mario Ruggier <mario at ruggier.org> wrote:
>
>> 3. If i just import the reactor privately inside the render() method
>> (thus,
>> never call stop() on it), everything seems to work fine. But is this
>> the way it should be done?
>
> Yes. I'm not even sure why you need to get at the reactor at all.

Easy. Because i am morphing the example code bits around, to make
the same functionality addressable via an http request, and i swear that
when i tried removing he reactor (as i imagined it was not needed in
such a case) it **did** not work If i do not work! Now you point it out 
I
have tried removing it again, and now it does work just fine!!!

I suggest that one or both of these (corrected) examples be added to 
the list
of examples bundled with twisted, as i would expect that many 
prospective
users will not find this very obvious. If i knew what i was doing i 
would offer
to do it myself...

All the best, mario





From ldanielburr at earthlink.net  Fri Jan 24 13:46:50 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Fri, 24 Jan 2003 13:46:50 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <2559267.1043444812637.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Fri, 24 Jan 2003 18:36:37 +0100, Mario Ruggier wrote:
>I suggest that one or both of these (corrected) examples be added
>to the list of examples bundled with twisted, as i would expect
>that many prospective users will not find this very obvious. If i
>knew what i was doing i would offer to do it myself...
>
>All the best, mario

You are right; Twisted has some good example code, but it needs
more examples that "do stuff", and especially examples that show
how to combine parts of Twisted (web and enterprise, for example)
to accomplish common internet development tasks.

I'll put my money where my mouth is on this one, and clean up the
example I posted (resource + deferToThread).  I'll also post an
example using twisted.enterprise (resource + adbapi).  By the
phrase "cleaned up", I mean compliant with the documentation
guidelines, development guidelines, epydoc, etc.  If the results
don't suck too badly, maybe somebody who understands CVS can
throw them in the examples directory.

L. Daniel Burr



From ldanielburr at earthlink.net  Fri Jan 24 14:08:30 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Fri, 24 Jan 2003 14:08:30 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <5735682.1043446112368.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Fri, 24 Jan 2003 00:39:36 -0800, Dave Peticolas wrote:
>On Thu, 2003-01-23 at 17:25, L. Daniel Burr wrote:
>>Of course, you could also use twisted.enterprise.adbapi,
>>but I've experienced a lot of memory leaks occurring when
>>going that route, so I just use deferToThread instead.
>
>I'm about to start using t.e.adbapi pretty heavily, so I'm
>interested in this report. Do you have more details?
>
>thanks,
>dave

To be clear, I definitely *haven't* been using adbapi heavily up
until this point.  The problem I experienced occurred around the
time of Twisted 1.0.1 final, and deadlines prevented my doing any
exhaustive testing.

The scenario was pretty basic:  Connect to an Oracle database,
perform a query, return the result.  Using adbapi from Twisted
1.0.1 and the cx_Oracle DBAPI module, the twistd process showed
steady growth in size.  Each time the code executed, the process
would grow by 10-50k, never releasing any memory.

The same scenario, using DCOracle2, showed similar leakage.
Having insufficient time to debug the thing, I went with the
process of elimination, and started using deferToThread instead
of adbapi, and the leak was gone.  That does not in any way prove
that adbapi is the root cause, only that it may be involved in
some way.

This was all on Win32, by the way, so I have no idea if it is an
issue on Linux or Solaris.  In any case, I'll get a chance to revisit the issue shortly, and I'll report my findings.

L. Daniel Burr



From whisper at oz.net  Fri Jan 24 19:29:38 2003
From: whisper at oz.net (David LeBlanc)
Date: Fri, 24 Jan 2003 16:29:38 -0800
Subject: [Twisted-Python] Gtk version
In-Reply-To: <20030124023832.GA2017@Radii>
Message-ID: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>

Can you tell me where I can find a Windows version of Gtk 1.2.x?

David LeBlanc
Seattle, WA USA

> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Christopher
> Armstrong
> Sent: Thursday, January 23, 2003 18:39
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Gtk version
>
>
> On Wed, Jan 22, 2003 at 05:08:17PM -0800, David LeBlanc wrote:
> > Which version of gtk and pygtk should I be using to get twisted GUI's to
> > work on Windows 2000? In this particular case, it's manhole.
> >
> > PyGtk-0.6.11 complains about GDK on every keystroke:
> > This is after the GUI comes up:
> > setting login report 'connecting...'
> > -:1: error: invalid string constant "Console_stdout", expected
> valid string
> > constant
> >
> > It does let me log in using the user and password entered when
> I made the
> > tap.
> > Every keystroke causes this:
> ...
> > AttributeError: 'module' object has no attribute 'GDK'
> >
> > PyGtk-1.99.11-libglade dies with:
> > J:\twila>manhole
> ...
> > AttributeError: 'module' object has no attribute 'GtkWindow'
> >
> > PyGtk-0.6.11 seems to be using gtk+-1.3.0
>
> I think this might be your problem. Try Gtk 1.2.x.
>
> --
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
> ---------+     http://twistedmatrix.com/users/radix.twistd/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dsposx at mac.com  Fri Jan 24 18:10:41 2003
From: dsposx at mac.com (Donovan Preston)
Date: Fri, 24 Jan 2003 15:10:41 -0800
Subject: [Twisted-Python] Woven Refactor
Message-ID: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>

Hello everyone in Twisted land,

This is an experimental Woven View refactoring that I have been working 
on for the past two weekends. What does it do?

* Uses a flat list of outstanding DOM nodes instead of recursion to 
keep track of where Woven is in the page rendering process

* Removes View's dependency on DOMTemplate as a base class, in 
preparation for deprecation of DOMTemplate (all of the same semantics 
are now directly implemented in View). As a result, View has no base 
classes, making the inheritance chain cleaner.

* Stores the namespace stacks (model, view, and controller name lookup 
chain) in the View directly, and each widget gets an immutable 
reference to it's position in the lookup chain when it is created, 
making re-rendering Widgets more reliable

* Represents the namespace stacks as a cons-like tuple structure 
instead of mutable python lists, reducing confusion and list-copying; 
instead of copying the current stack lists each time a Widget is 
created, it just gets a reference to the current tuples for each of the 
stacks

What does that mean?

* The tracebacks are far shorter now, since we're no longer recursing 
deeply into the DOM tree

* Namespace stack behavior is less buggy now; some of the outstanding 
mysterious bugs regarding rendering Widgets that have a Deferred model 
should hopefully go away

* View has no base classes now, making the inheritance tree much 
shallower

What do I need before I check it in?

* Feedback! If you have a Woven application, please apply this patch 
and let me know if anything breaks. There are no API changes, and 
behavior should be the same (unless you were relying on the older, 
possibly buggy behavior; this shouldn't be the case)

Assuming all goes well, I will check this in this weekend. Once I do, 
it paves the way for further cleanup of the Woven codebase. Onward and 
upward towards stable Woven!

Donovan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wovenRefactor.diff
Type: application/octet-stream
Size: 24494 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030124/126c7aee/attachment.obj 
-------------- next part --------------


From acapnotic at twistedmatrix.com  Sun Jan 26 03:33:22 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 26 Jan 2003 00:33:22 -0800
Subject: [Twisted-Python] Woven Refactor
In-Reply-To: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
References: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
Message-ID: <1043570000.27413.75.camel@troglodyte.funhouse>

Well, it doesn't break the web stuff in CVSToys.




From lordvan at lordvan.com  Sun Jan 26 05:19:48 2003
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 26 Jan 2003 11:19:48 +0100
Subject: [Twisted-Python] Gtk version
In-Reply-To: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>
References: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>
Message-ID: <1043576388.3e33b644b2c71@mail-at.net>

Quoting David LeBlanc <whisper at oz.net>:

> Can you tell me where I can find a Windows version of Gtk 1.2.x?
> 
try the gimp for windows page (just google for it :)
greetings

-- LordVan(ThomasR)

-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------

-------------------------------------------------
This mail sent through IMP: http://horde.org/imp/



From andrew-twisted at puzzling.org  Sun Jan 26 21:11:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 13:11:56 +1100
Subject: [Twisted-Python] FTPClient put
In-Reply-To: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>
References: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>
Message-ID: <20030127021156.GB451@frobozz.local>

On Fri, Jan 24, 2003 at 01:53:53PM -0300, Luciano Ramalho wrote:
> Can the FTPClient class be used to *send* files (STOR)? If yes, how?
> 
> I've succesfully used the ftpclient.py example to retrieve a file 
> listing from a server, but reading the API docs and the source of the 
> ftp.py module has not given me a clue about how to *send* a file.

STOR support isn't written yet; now that I'm back from Linux.conf.au I hope
to get this done soon.  There was a thread on the list a week or two ago
requesting this as well :)

-Andrew.




From radix at twistedmatrix.com  Mon Jan 27 00:37:42 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 00:37:42 -0500
Subject: [Twisted-Python] RC2 dead in the water
Message-ID: <20030127053742.GA8526@Radii>

Traceback (most recent call last):
  File "./bin/html2latex", line 29, in ?
    run()
  File "./twisted/scripts/html2latex.py", line 52, in run
    latex.processFile(spitter, open(file))
  File "./twisted/lore/latex.py", line 301, in processFile
    spitter.visitNode(dom)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 70, in visitNode_a
    return self.visitNode_a_href(node)
  File "./twisted/lore/latex.py", line 176, in visitNode_a_href
    if node.childNodes[0].data != href:
AttributeError: Element instance has no attribute 'data'
GenerateDocs failed, running uncommit.

Looks like basically the same bug that was in lint reproduced in
latex.py.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Mon Jan 27 03:45:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 03:45:47 -0500
Subject: [Twisted-Python] ANN: 1.0.2rc3 is out
Message-ID: <20030127084547.GB8526@Radii>

http://twistedmatrix.com/products/download -- please check out Twisted
1.0.2rc3 and report any bugs.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-pythonau at puzzling.org  Sun Jan 26 21:15:55 2003
From: andrew-pythonau at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 13:15:55 +1100
Subject: [Twisted-Python] [graeme_matthew@hotmail.com: [Python-au] Twisted Rocks !!!!!]
Message-ID: <20030127021555.GC451@frobozz.local>

This is from the python-au mailing list... I thought people might like to
know that we've got yet another happy "customer" ;)

The other thing I find amazing is the "about 5 minutes to understand" -- but
then the docs are much better than when I first used Twisted :)

-Andrew.

----- Forwarded message from Graeme Matthew <graeme_matthew at hotmail.com> -----

From: "Graeme Matthew" <graeme_matthew at hotmail.com>
To: python-au at python.net
Subject: [Python-au] Twisted Rocks !!!!!
Date: Wed, 22 Jan 2003 15:46:03 +1100


Garth, mate this Twisted stuff rocks, I cannot believe a Win32 install is 
700kb, took 1 minute to setup, and about 5 minutes to understand the basics 
in writing a client / server for data exchange,

mate u have saved me heaps of stress, thanks again !




_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*.  
http://join.msn.com/?page=features/featuredemail


_______________________________________________
python-au maillist  -  python-au at starship.python.net
http://starship.python.net/mailman/listinfo/python-au

----- End forwarded message -----



From andrew-twistedcommits at puzzling.org  Sun Jan 26 22:14:29 2003
From: andrew-twistedcommits at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 14:14:29 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] adapter for DeferredList
In-Reply-To: <E18bpeL-00085d-00@pyramid.twistedmatrix.com>
References: <E18bpeL-00085d-00@pyramid.twistedmatrix.com>
Message-ID: <20030127031429.GF451@frobozz.local>

On Thu, Jan 23, 2003 at 04:16:41PM -0600, itamarst CVS wrote:
> Modified files:
> Twisted/twisted/web/woven/model.py 1.32 1.33
> 
> Log message:
> adapter for DeferredList

[..snip..]

>      components.registerAdapter(DeferredWrapper, defer.Deferred, interfaces.IModel)
> +    components.registerAdapter(DeferredWrapper, defer.DeferredList, interfaces.IModel)

I know very little about Adapters, but shouldn't subclasses work
automatically?  Or is this too hard?

-Andrew.




From radix at twistedmatrix.com  Mon Jan 27 11:40:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 11:40:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] adapter for DeferredList
In-Reply-To: <20030127031429.GF451@frobozz.local>
References: <E18bpeL-00085d-00@pyramid.twistedmatrix.com> <20030127031429.GF451@frobozz.local>
Message-ID: <20030127164037.GC8526@Radii>

On Mon, Jan 27, 2003 at 02:14:29PM +1100, Andrew Bennetts wrote:
> On Thu, Jan 23, 2003 at 04:16:41PM -0600, itamarst CVS wrote:
> > Modified files:
> > Twisted/twisted/web/woven/model.py 1.32 1.33
> > 
> > Log message:
> > adapter for DeferredList
> 
> [..snip..]
> 
> >      components.registerAdapter(DeferredWrapper, defer.Deferred, interfaces.IModel)
> > +    components.registerAdapter(DeferredWrapper, defer.DeferredList, interfaces.IModel)
> 
> I know very little about Adapters, but shouldn't subclasses work
> automatically?  Or is this too hard?

getAdapter takes an optional argument of a function to do the lookup,
where the default does not look through the class hierarchy. You can
pass an already-defined function, getAdapterWithInheritance, or
something, which is in twisted.python.components, but I guess that's
too slow to be the default.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From ldanielburr at earthlink.net  Mon Jan 27 12:34:27 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Mon, 27 Jan 2003 12:34:27 -0500 (GMT)
Subject: [Twisted-Python] Example: Accessing a database from a Resource
Message-ID: <4963325.1043699670555.JavaMail.nobody@daisy.psp.pas.earthlink.net>

As promised in the thread about deferreds and resources, here is an
example of making a database call from a resource, using a thread.

I've tried to follow the Twisted development guidelines, so please
let me know if I've used any inappropriate naming conventions, etc.

I didn't provide epydoc-style docstrings as I had originally hoped;
I haven't had time to read the epydoc manual yet.

Next up will be an example using twisted.enterprise, with Row and
without.  Hopefully examples of this sort will help newer users in
grokking twisted.web, at least until the Woven stuff is ready.

L. Daniel Burr
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbresource.rpy
Type: application/octet-stream
Size: 3572 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030127/de0cb2c8/attachment.obj 

From corydodt at yahoo.com  Tue Jan 28 18:15:00 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 28 Jan 2003 15:15:00 -0800 (PST)
Subject: [Twisted-Python] We have Apple's ear
Message-ID: <20030128231500.56806.qmail@web10004.mail.yahoo.com>

Not really . . . but _I_ do, and you have my ear.

If you could ask Apple to change stuff which would make your life easier
as a Python developer, what would you ask?

Sometime in the next 2 weeks I'm going to be talking directly to an Apple
sales engineer (or equivalent) about getting my needs met.  Apple wants my
organization to hurry and port our product to the Mac, and the person I'll
be talking to will be taking requests for ways they can help us do that.

The product is being built on a foundation of pyopenssl, cog, pybsddb,
pycrypto, and twisted.  Are any of these less than perfect on a Mac?  Are
there specific ways Apple can help make this situation better?

I'll take the best suggestions and bring them to light when I have my
conversation.  Thanks for any help!


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From corydodt at yahoo.com  Tue Jan 28 18:21:28 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 28 Jan 2003 15:21:28 -0800 (PST)
Subject: [Twisted-Python] We have Apple's ear (cont'd)
Message-ID: <20030128232128.78331.qmail@web10006.mail.yahoo.com>

Just a list of things I plan to ask for anyway (in no particular order):

* hardware

* money

* engineers to fix Mac-related bugs in Twisted (or other dependencies)
directly ... the list could provide me with a log of a run of trial to
help here

* a list of the problems python users are most likely to mention to Apple
sales engineers, and solutions for same

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From bob at redivi.com  Tue Jan 28 19:05:45 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 28 Jan 2003 19:05:45 -0500
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <20030128232128.78331.qmail@web10006.mail.yahoo.com>
Message-ID: <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>

On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:

> Just a list of things I plan to ask for anyway (in no particular 
> order):
>
> * hardware
>
> * money
>
> * engineers to fix Mac-related bugs in Twisted (or other dependencies)
> directly ... the list could provide me with a log of a run of trial to
> help here
>
> * a list of the problems python users are most likely to mention to 
> Apple
> sales engineers, and solutions for same

Well, I think I'm the resident OS X developer here, I actually have the 
expensive subscription to their developer's program, mostly for the 
hardware discounts..  There isn't much of a problem for Twisted on 
MacOSX, even with the crippled stock 2.2 interpreter.. I use it as my 
primary development platform for Twisted and everything else.

What Apple needs to do, for god's sake, is allow Jack Jansen 
<Jack.Jansen at oratrix.com> to maintain the Python build in darwin and OS 
X proper.  Or at least consult with him before releasing something.

Apple er.. screwed up a lot of ./configure options when building the 
2.2 build that ships with OS X.  If the thing was built properly it'd 
be ready to do full GUI applications (Modules to interface with 
CoreFoundation, Carbon, etc), it even builds a GUI application launcher 
*and* an IDE!

It would also be nice if it shipped with the ctypes and pyobjc modules, 
which covers all of your other needs.  Neither of them are totally 
stable yet though.

Hardware, money, and engineers are not required at all..  The community 
has already done all of the work, it's just up to Apple to integrate it 
into their distribution.  Python has been pretty solid on OS X for 
about 12 months now.  It would be *nice* if some apple heads would 
subscribe to pythonmac-sig at python.org and 
pyobjc-dev at lists.sourceforge.net.

-bob




From bob at redivi.com  Tue Jan 28 19:11:11 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 28 Jan 2003 19:11:11 -0500
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
Message-ID: <2C8691D6-331E-11D7-B556-000A95686CD8@redivi.com>

On Tuesday, Jan 28, 2003, at 18:15 America/New_York, Cory Dodt wrote:
>
> Sometime in the next 2 weeks I'm going to be talking directly to an 
> Apple
> sales engineer (or equivalent) about getting my needs met.  Apple 
> wants my
> organization to hurry and port our product to the Mac, and the person 
> I'll
> be talking to will be taking requests for ways they can help us do 
> that.
>
> The product is being built on a foundation of pyopenssl, cog, pybsddb,
> pycrypto, and twisted.  Are any of these less than perfect on a Mac?  
> Are
> there specific ways Apple can help make this situation better?

You shouldn't have any real problems..  If you need help, let me know.  
SSL support in socket doesn't come with the 2.2 that ships with OS X 
10.2, but it can be easily replaced with one that does 
(http://radio.weblogs.com/0100490/2002/10/16.html)

pycrypto and twisted work just fine in my experience, I haven't worked 
with cog or pybsddb yet, but I would imagine they both work perfectly 
fine as well.




From jml at mumak.net  Mon Jan 27 18:19:25 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Tue, 28 Jan 2003 10:19:25 +1100
Subject: [Twisted-Python] Woven Refactor
In-Reply-To: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
References: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
Message-ID: <20030127231925.GB12999@mumak.net>

On Fri, Jan 24, 2003 at 03:10:41PM -0800, Donovan Preston wrote:
> * Feedback! If you have a Woven application, please apply this patch 
> and let me know if anything breaks. 

Issues works with the patch. Feels faster too.

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030128/ab97b36a/attachment.pgp 

From acapnotic at twistedmatrix.com  Wed Jan 29 04:20:13 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 29 Jan 2003 01:20:13 -0800
Subject: [Twisted-Python] Ephemeral Adapters
Message-ID: <1043832011.27415.200.camel@troglodyte.funhouse>

Forever struggling with what is persistent and what is not, today I have
an Adapter I think may be Ephemeral.  (It's based on im.basechat.ChatUI,
and its state is largely Protocol instances and things indexed by
them.)  What do I do about this?  Should Componentized weed all
Ephemerals from its _adapterCache in Componentized.__getstate__?  It
feels like too much mucking around with internals to do that in a
subclass.

-- 
The moon is waning crescent, 13.0% illuminated, 26.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030129/20cd6f35/attachment.pgp 

From twisted at itamarst.org  Wed Jan 29 11:20:25 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 11:20:25 -0500
Subject: [Twisted-Python] PLEASE: Add changelog entries when adding new features
Message-ID: <20030129112025.15e9d27d.twisted@itamarst.org>

Serial support, GPS support, GTK2 reactor, and no doubt other stuff were
NOT mentioned as being added in the ChangeLog.  This makes life harder
for people writing release announcements, and for users who don't hear
about all the nifty and cool new features you implemented. You do want
people to use them, right? :)

Oh, and is GTK2 listed in the "choosing a reactor" doc?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Wed Jan 29 11:33:45 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 11:33:45 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
Message-ID: <20030129113345.18c709a0.twisted@itamarst.org>

What's New in 1.0.2
===================

- Serial port support.
- GPS (global positioning system), supporting NMEA 0183 and Rockwell
Zodiac devices.
- GTK2 event loop.
- Improved event scheduling support.
- Many new examples, including an example of Cocoa (Mac OS X)
integration.
- Fancy Win32 installer, with Start menu integration.
- Large number of improvements to the SSH server. In addition, Twisted
now ships with a command-line ssh client (conch), with same options as
openssh client. Also included is a Tk GUI ssh client, that does not
require a terminal emulator, and a program for generating ssh keys.
- Simplified HTTP client API, for fetching URLs.
- Dict protocol implementation (RFC 2229).
- Improvements to cReactor, a networking event loop implemented in C.
- Lenient mode for microdom, which allows parsing very non-standard
HTML, and many improvements to the DOM support.
- Trial, a unit testing framework, replaces use of Python's unittest.py.
The API is almost identical to Python's.
- Google querying support.
- Shoutcast protocol support.
- Client XML-RPC support.
- Many improvements to Twisted's DNS support, both client and server.
- Bug fixes, more tests and documentation.




From elloyd at lancaster.lib.pa.us  Wed Jan 29 12:00:49 2003
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Wed, 29 Jan 2003 12:00:49 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
In-Reply-To: <20030129113345.18c709a0.twisted@itamarst.org>
References: <20030129113345.18c709a0.twisted@itamarst.org>
Message-ID: <200301291200.49552.elloyd@lancaster.lib.pa.us>

Hooray! How much has changed in the documentation?

Good job to all involved,

Eron

On Wednesday 29 January 2003 11:33 am, Itamar Shtull-Trauring wrote:
> What's New in 1.0.2
> ===================
>
> - Serial port support.
> - GPS (global positioning system), supporting NMEA 0183 and Rockwell
> Zodiac devices.
> - GTK2 event loop.
> - Improved event scheduling support.
> - Many new examples, including an example of Cocoa (Mac OS X)
> integration.
> - Fancy Win32 installer, with Start menu integration.
> - Large number of improvements to the SSH server. In addition, Twisted
> now ships with a command-line ssh client (conch), with same options as
> openssh client. Also included is a Tk GUI ssh client, that does not
> require a terminal emulator, and a program for generating ssh keys.
> - Simplified HTTP client API, for fetching URLs.
> - Dict protocol implementation (RFC 2229).
> - Improvements to cReactor, a networking event loop implemented in C.
> - Lenient mode for microdom, which allows parsing very non-standard
> HTML, and many improvements to the DOM support.
> - Trial, a unit testing framework, replaces use of Python's unittest.py.
> The API is almost identical to Python's.
> - Google querying support.
> - Shoutcast protocol support.
> - Client XML-RPC support.
> - Many improvements to Twisted's DNS support, both client and server.
> - Bug fixes, more tests and documentation.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> ---
> [This E-mail scanned for viruses by Declude Virus]

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From twisted at itamarst.org  Wed Jan 29 12:30:56 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 12:30:56 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
In-Reply-To: <200301291200.49552.elloyd@lancaster.lib.pa.us>
References: <20030129113345.18c709a0.twisted@itamarst.org>
	<200301291200.49552.elloyd@lancaster.lib.pa.us>
Message-ID: <20030129123056.71f05671.twisted@itamarst.org>

On Wed, 29 Jan 2003 12:00:49 -0500
Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:

> Hooray! How much has changed in the documentation?

PB Copyables, UDP, Twisted names, maybe more as well.



From jml at mumak.net  Wed Jan 29 13:04:50 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 30 Jan 2003 05:04:50 +1100
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>
References: <20030128232128.78331.qmail@web10006.mail.yahoo.com> <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>
Message-ID: <20030129180449.GA3890@mumak.net>

On Tue, Jan 28, 2003 at 07:05:45PM -0500, Bob Ippolito wrote:
> On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:
>
> Hardware, money, and engineers are not required at all..  

That said, if they want to hand out free / cheap TiBooks, I'll be more than
happy to hack for Macs :)

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030130/f19906e6/attachment.pgp 

From erik.myllymaki at starpointe.ca  Wed Jan 29 12:39:18 2003
From: erik.myllymaki at starpointe.ca (Erik Myllymaki)
Date: Wed, 29 Jan 2003 09:39:18 -0800
Subject: [Twisted-Python] twisted.enterprise error
References: <20030129113345.18c709a0.twisted@itamarst.org>
Message-ID: <015c01c2c7bd$59bed460$6521a8c0@topdown>

I get the folowing error with the twisted Enterprise Example -
row_example.py
on win2k using SAPDB(v7.3.00.29 of the win32 python2.2 driver).

However, it works if I don't declare a PRIMARY KEY on the furniture or rugs
tables...
(an older version of row_schema.sql had no PRIMARY KEYs declared at all and
this works...)


V:\Python22>python row_example.py
Connecting to database: SAPDB.sapdbapi () {'host': '192.168.33.99',
'password':
'DBA', 'user': 'DBA', 'database': 'TST'}
Enabling Multithreading.
starting waker
adbapi connecting: SAPDB.sapdbapi {'host': '192.168.33.99', 'password':
'DBA', '
user': 'DBA', 'database': 'TST'}
Exception in SQL interaction!  rolling back...
Traceback (most recent call last):
  File "V:\Python22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "V:\Python22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "V:\Python22\Lib\site-packages\twisted\python\threadpool.py", line
136, i
n _worker
    apply(function, args, kwargs)
  File "V:\Python22\Lib\site-packages\twisted\internet\threads.py", line 37,
in
_putResultInDeferred
    result = apply(f, args, kwargs)
--- <exception caught here> ---
  File "V:\Python22\lib\site-packages\twisted\enterprise\adbapi.py", line
157, i
n _runInteraction
    result = apply(interaction, (trans,)+args, kw)
  File "V:\Python22\Lib\site-packages\twisted\enterprise\sqlreflector.py",
line
118, in _rowLoader
    tableInfo = self.schema[tableName]
exceptions.KeyError: testrooms
Unhandled error in Deferred:
Traceback (most recent call last):
  File "V:\Python22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "V:\Python22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "V:\Python22\Lib\site-packages\twisted\python\threadpool.py", line
136, i
n _worker
    apply(function, args, kwargs)
--- <exception caught here> ---
  File "V:\Python22\Lib\site-packages\twisted\internet\threads.py", line 37,
in
_putResultInDeferred
    result = apply(f, args, kwargs)
  File "V:\Python22\lib\site-packages\twisted\enterprise\adbapi.py", line
157, i
n _runInteraction
    result = apply(interaction, (trans,)+args, kw)
  File "V:\Python22\Lib\site-packages\twisted\enterprise\sqlreflector.py",
line
118, in _rowLoader
    tableInfo = self.schema[tableName]
exceptions.KeyError: testrooms
Main loop terminated.




From bob at redivi.com  Wed Jan 29 13:16:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 29 Jan 2003 13:16:48 -0500
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <20030129180449.GA3890@mumak.net>
Message-ID: <D51400D4-33B5-11D7-B556-000A95686CD8@redivi.com>

On Wednesday, Jan 29, 2003, at 13:04 America/New_York, Jonathan M. 
Lange wrote:

> On Tue, Jan 28, 2003 at 07:05:45PM -0500, Bob Ippolito wrote:
>> On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:
>>
>> Hardware, money, and engineers are not required at all..
>
> That said, if they want to hand out free / cheap TiBooks, I'll be more 
> than
> happy to hack for Macs :)

Of course, but required != appreciated :)

-bob




From glyph at twistedmatrix.com  Wed Jan 29 13:38:56 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jan 2003 13:38:56 -0500 (EST)
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
References: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
Message-ID: <20030129.133856.71097482.glyph@twistedmatrix.com>

On Tue, 28 Jan 2003 15:15:00 -0800 (PST), Cory Dodt <corydodt at yahoo.com> wrote:
> Not really . . . but _I_ do, and you have my ear.

This is great.  As those who subscribe to my personal list no doubt know, I
have some frustration with apple, and some of this is due to the difficulty
I've had trying to get in contact with people "on the inside" through
traditional channels.  Hopefully your sales contact will be a bit more
forthcoming than support at apple.com! :-)

> If you could ask Apple to change stuff which would make your life easier as a
> Python developer, what would you ask?

Purely as a Python software developer, Bob Ippolito's comments are spot-on.  I
don't know why they've been missing this, since it seems the whole python/mac
community feels this way.  For emphasis, I will repeat the most salient points
here:

On Tue, 28 Jan 2003 19:05:45 -0500, Bob Ippolito <bob at redivi.com> wrote:

> What Apple needs to do, for god's sake, is allow Jack Jansen 
> <Jack.Jansen at oratrix.com> to maintain the Python build in darwin and OS 
> X proper.  Or at least consult with him before releasing something.

> Apple er.. screwed up a lot of ./configure options when building the 
> 2.2 build that ships with OS X.  If the thing was built properly it'd 
> be ready to do full GUI applications (Modules to interface with 
> CoreFoundation, Carbon, etc), it even builds a GUI application launcher 
> *and* an IDE!

I'd like to add to this that Python support included in Apple's dist of
ProjectBuilder, even if it were something as trivial as syntax highlighting,
would really be a nice thing.

Back to your comments:

> The product is being built on a foundation of pyopenssl, cog, pybsddb,
> pycrypto, and twisted.  Are any of these less than perfect on a Mac?  Are
> there specific ways Apple can help make this situation better?

Twisted?  Less than perfect?  Of COURSE not!  Unless of course imperfection
means I can milk this opportunity for HUGE CASH PAYOFFS, in which case yes,
it's full of problems, I'll just, ahem, come up with some.

Seriously, the biggest problem with Twisted on the mac is that we're still very
much living in a Unix mindset, and we have no platform-idiomatic tools for
either development or deploying applications on OS X.  I'm upset that I haven't
had enough time to work on Twisted as a platform (porting an application to a
platform like OS X ought to be a complete no-brainer, but it clearly isn't!),
and if Apple were willing to throw some resources my way I might build the
Cocoa front-end to COIL before rewriting the web one.  I'd sure like to have an
excuse, especially a paid excuse, to write apps using IB.

This is really more on the level of making my life more fun, and *Apple's* life
"easier".  I think that an integrated, GUI-friendly Twisted dist on MacOS would
be an awesome server-side compliment to Safari, possibly a killer app, but that
opinion may not be shared by Apple's higher-ups; this is a pipe dream.

(Folks from other platforms: to be clear, I'm not really interested in
including *exclusive* functionality for the mac, but I wouldn't mind building
it *enhanced* for the mac and building TTW interfaces after the fact.)

> I'll take the best suggestions and bring them to light when I have my
> conversation.  Thanks for any help!

I hope that this is relevant :-).

> Just a list of things I plan to ask for anyway (in no particular order):

It's expensive to develop apps for the mac, because it's expensive to own and
maintain a mac.  I think that almost all the Twisted developers could use some
support in these areas.

The most deserving developers in this regard are Donovan Preston and Bob
Ippolito, both Mac users who are already developing Twisted apps on that
platform.  However, they may be among those requiring the least assistance ;-)

> * hardware

I've got a way-too-damn-expensive Power Macintosh that I haven't had the
opportunity to use for much MacOS stuff because it's running Linux most of the
time (due to aforementioned lacks in the Apple dev. env.).  Obviously, more
hardware from Apple is better!  I would especially like a 14-inch powerbook to
replace my x86 laptop.

However, even given my existing Apple hardware, I'm unlikely to spend any of my
own time volunteering to enhance Apple's operating system with Twisted if I
have to keep shelling out $129.95 every few months for the privilege.  I would
really appreciate a no-cost license to Apple's software offerings, or at least
enough of them to do GUI application development with Twisted.

> * money

Since I'm not paying rent on a credit card yet :-), either this or hardware
might convince me to spend some time on a Mac-specific project to enhance
Twisted.

Honestly, for your application, I doubt that this is a priority.  It is
something I've thought Apple might be interested in for a while, but I haven't
had the cognitive bandwidth to get enough accomplished to attract Apple's
attention about it.

> * engineers to fix Mac-related bugs in Twisted (or other dependencies)
> directly ... the list could provide me with a log of a run of trial to help
> here

As far as I know, we really do have relatively few of these.  As Mr. Ippolito
said, the system works fine as is and several people use their Macs to write
Twisted code.




From twisted at itamarst.org  Wed Jan 29 17:23:12 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 17:23:12 -0500
Subject: [Twisted-Python] PLEASE: Add new packages to setup.py, or they will not get installed
Message-ID: <20030129172312.1f081731.twisted@itamarst.org>

gps and serialport were not installed in 1.0.2 due to this issue.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bob at redivi.com  Wed Jan 29 18:26:51 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 29 Jan 2003 18:26:51 -0500
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030129.133856.71097482.glyph@twistedmatrix.com>
Message-ID: <251B01C2-33E1-11D7-B556-000A95686CD8@redivi.com>

On Wednesday, Jan 29, 2003, at 13:38 America/New_York, Glyph Lefkowitz 
wrote:
>> Apple er.. screwed up a lot of ./configure options when building the
>> 2.2 build that ships with OS X.  If the thing was built properly it'd
>> be ready to do full GUI applications (Modules to interface with
>> CoreFoundation, Carbon, etc), it even builds a GUI application 
>> launcher
>> *and* an IDE!
>
> I'd like to add to this that Python support included in Apple's dist of
> ProjectBuilder, even if it were something as trivial as syntax 
> highlighting,
> would really be a nice thing.

bbum did that last month.  I haven't tried it personally (I'm a VIM 
user), but I imagine it works :)
http://radio.weblogs.com/0100490/2002/12/20.html

I'd imagine if the Python community had more of an in w/ the Cupertino 
crowd this could easily make it into the next developer tools update.

> Seriously, the biggest problem with Twisted on the mac is that we're 
> still very
> much living in a Unix mindset, and we have no platform-idiomatic tools 
> for
> either development or deploying applications on OS X.  I'm upset that 
> I haven't
> had enough time to work on Twisted as a platform (porting an 
> application to a
> platform like OS X ought to be a complete no-brainer, but it clearly 
> isn't!),
> and if Apple were willing to throw some resources my way I might build 
> the
> Cocoa front-end to COIL before rewriting the web one.  I'd sure like 
> to have an
> excuse, especially a paid excuse, to write apps using IB.

FYI, installing pyobjc adds a Python template for developing GUI pyobjc 
apps.  You don't need to do anything special to use nibs with pyobjc, 
works just like it does with Cocoa or AppleScript.  I've played around 
with outlets and such with no problems, YMMV of course.

It may be of some interest that Apple's WebObjects offering does 
something kinda similar [client-side gui/web app hybrids.. mostly for 
database apps], but only in java using a very CoreFoundation-like 
API... so it's like programming in ObjC, only slower.  I don't have 
time to play with WebObjects at all, but I get legitimate copies 
whenever a new release comes out (two sitting in a drawer, and 
counting).  If anyone wants to borrow the books or something to see if 
there's any good ideas worth borrowing just let me know.

> However, even given my existing Apple hardware, I'm unlikely to spend 
> any of my
> own time volunteering to enhance Apple's operating system with Twisted 
> if I
> have to keep shelling out $129.95 every few months for the privilege.  
> I would
> really appreciate a no-cost license to Apple's software offerings, or 
> at least
> enough of them to do GUI application development with Twisted.

<evangelism>
A few months is more like 18-24.. that's like a pack of manhattan 
cigarettes a month, at most.  It's pretty affordable.  If you're an ADC 
Select ($500/yr) or Premier ($3500/yr) member then license for all of 
their operating systems is included along with the betas and the 
ability to report bugs that they'll actually read.. among other things. 
  One of the nice things you get with a Premier subscription is 10 
hardware discounts a year, we've saved more than $3500 (6 purchases so 
far) on our overpriced computer equipment this year.. A hardware 
discount is usually about 20% off anything they sell (even accessories, 
like iPods).  One hardware discount counts for one desktop or laptop 
with whatever accessories.. so you can turn out pretty well.
</evangelism>

In any case, if one wants to deploy a Mac OS X 10.2+ application 
developed solely in python (using the installed python 2.2 runtime to 
minimize the distribution size), with or without Twisted, everything is 
already out there to do it.. you just have to know where to look and/or 
who to ask for the relevant information.

As a side note, I mentioned Twisted and my hackish method for writing 
the cocoa demo on the pyobjc list a week or two ago in response to a 
query about asyncore.  The whole issue sparked some interest with the 
core developers and they've been actively working on a better way of 
doing it than polling.  Jack Jansen just recently started working on a 
module that intelligently manages the Python GIL (Global Interpreter 
Lock) so that the ObjC and Python threads will play together 
efficiently... so perhaps in a few weeks, when the dust settles in my 
world and pyobjc is a bit more stable, I'll be able to develop a Cocoa 
reactor (which will be rather easy pretty soon) and some more advanced 
examples.

-bob




From acapnotic at twistedmatrix.com  Thu Jan 30 06:47:14 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 03:47:14 -0800
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <20030123191903.GA5664@meson.dyndns.org>
References: <20030123191903.GA5664@meson.dyndns.org>
Message-ID: <1043927233.17536.22.camel@troglodyte.funhouse>

A few comments made by other people on IRC that I want to make sure are
archived somewhere, because maybe they things I've seen while trying to
clean up freshcvs persistability recently.  The context is a discussion
of exarkun's upcoming patch, based on the one in the start of this
thread.

<glyph> exarkun: listenWith ought to say something about the
persistability of the IListeningPort being passed in.
<exarkun> glyph: it's taking a class/type - those should always be
persistable, yea?
<glyph> exarkun: Not necessarily; sockets aren't persistable, so it's
easy to screw up a ListeningPort instance :-)
<exarkun> Ahh, hmm
<glyph> oh wait, hang on, you're right ...
<glyph> This illustrates a serious flaw in the design of Application :-\
<glyph> or well, not serious, but annoying.
<glyph> Really we ought not be storing constructor arguments, we should
be storing state objects.
 * exarkun nods, "That would be better."
<glyph> That's the way it started out, but when the reactor refactor
happened this didn't get cleaned up like it should have.

(Some settling may have occurred during transcription.)

-- 
The moon is waning crescent, 6.0% illuminated, 27.2 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030130/35ebcfc3/attachment.pgp 

From acapnotic at twistedmatrix.com  Thu Jan 30 06:56:20 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 03:56:20 -0800
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <1043927233.17536.22.camel@troglodyte.funhouse>
References: <20030123191903.GA5664@meson.dyndns.org>
	 <1043927233.17536.22.camel@troglodyte.funhouse>
Message-ID: <1043927779.17533.27.camel@troglodyte.funhouse>

> maybe they [relate to] things I've seen while trying to
> clean up freshcvs persistability recently.

namely,
http://twistedmatrix.com/pipermail/twisted-commits/2003-January/005689.html





From wavy2gravy at yahoo.com  Thu Jan 30 10:51:12 2003
From: wavy2gravy at yahoo.com (Pink Floyd)
Date: Thu, 30 Jan 2003 07:51:12 -0800 (PST)
Subject: [Twisted-Python] Can I use twisted for this
Message-ID: <20030130155112.11631.qmail@web14004.mail.yahoo.com>

Greetings,
  I have a "daemon" that is written in python (with
some C extensions). The characterstics are:
  . A infinite loop, and in each cycle of the loop
there is some processing going on.
  . During the processing, (everything else is
blocked) so that she can do things uninterrupted.

 This is already a functional application. Coming to
my question, currently I would like to provide it with
a administrative interface that can be controlled over
the network. In short, I would like it to be also:
  a) network daemon
  b) a very simple challenge/response type protocol to
control the behaviour of the daemon.

 Obviously, "twisted" on the surface looked to be a
very good candidate to get this up quickly. Since, I
would be using a "reactor" interface, do I have to
create my own "reactor" by subclassing say the TCP
interface. Or, is there a easy way to integrate the
reactor loop (.run()) with my loop?

Thanks
MK

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From acapnotic at twistedmatrix.com  Thu Jan 30 11:54:36 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 08:54:36 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.5
Message-ID: <1043945674.17531.89.camel@troglodyte.funhouse>

CVSToys 1.0.5 is out, for the fixing of the IRC bots which get knocked
offline -- they now do reconnect again.  Once again I had to hack
twisted.im to make this possible, so we have more version creep and you
will be needing a Twisted 1.0.2 to take advantage of this latest CVSToys
release.

There have also been some fixes relating to freshcvs.tap
persistability.  If you have had problems with starting from a
freshcvs-shutdown.tap in the past, try again with this version, and let
me know how it goes.

Share and enjoy,

 - Kevin

-- 
The moon is waning crescent, 4.9% illuminated, 27.4 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030130/e0d664fd/attachment.pgp 

From andrew-twisted at puzzling.org  Fri Jan 31 01:23:24 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Jan 2003 17:23:24 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
Message-ID: <20030131062324.GJ14761@frobozz.local>

On Thu, Jan 30, 2003 at 03:19:34PM -0600, exarkun CVS wrote:
[..snip..]
> Index: Twisted/twisted/internet/tcp.py
> diff -u Twisted/twisted/internet/tcp.py:1.101 Twisted/twisted/internet/tcp.py:1.102
> --- Twisted/twisted/internet/tcp.py:1.101	Wed Jan 29 01:02:11 2003
> +++ Twisted/twisted/internet/tcp.py	Thu Jan 30 13:19:31 2003
[..snip..]
> @@ -530,6 +475,25 @@
>      def getHost(self):
>          """Returns a tuple of ('INET', hostname, port).
>  
> -        This indicates the servers address.
> +        This indicates the server's address.
>          """
>          return ('INET',)+self.socket.getsockname()
> +
> +
> +class Connector(base.BaseConnector):
> +    def __init__(self, host, port, factory, timeout, bindAddress, reactor=None):
> +        self.host = host
> +        if isinstance(port, types.StringTypes):
                               ^^^^^^^^^^^^^^^^^ This breaks Python 2.1

Should tcp.py import t.p.compat (ugh)?

Or is it safe to assume that service names for ports will always be ascii
(in which case we change that to "if port == types.StringTypes")?

-Andrew.




From glyph at twistedmatrix.com  Fri Jan 31 01:54:57 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jan 2003 00:54:57 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods;
 refactor/rearrangement of various internal classes
In-Reply-To: <20030131062324.GJ14761@frobozz.local>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
	<20030131062324.GJ14761@frobozz.local>
Message-ID: <20030131.005457.74752848.glyph@twistedmatrix.com>

On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > +        if isinstance(port, types.StringTypes):
>                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> 
> Should tcp.py import t.p.compat (ugh)?

I think not.  This has been the recommended style for a while.

    Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
    [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
    Type "copyright", "credits" or "license" for more information.
    >>> import types
    >>> isinstance(1, types.StringType)
    0
    >>> isinstance(1, types.IntType)
    1

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030131/fe2eaa1c/attachment.pgp 

From andrew-twisted at puzzling.org  Fri Jan 31 02:30:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Jan 2003 18:30:06 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <20030131.005457.74752848.glyph@twistedmatrix.com>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com> <20030131062324.GJ14761@frobozz.local> <20030131.005457.74752848.glyph@twistedmatrix.com>
Message-ID: <20030131073006.GL14761@frobozz.local>

On Fri, Jan 31, 2003 at 12:54:57AM -0600, Glyph Lefkowitz wrote:
> On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > > +        if isinstance(port, types.StringTypes):
> >                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> > 
> > Should tcp.py import t.p.compat (ugh)?
> 
> I think not.  This has been the recommended style for a while.
> 
>     Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
>     [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
>     Type "copyright", "credits" or "license" for more information.
>     >>> import types
>     >>> isinstance(1, types.StringType)
>     0
>     >>> isinstance(1, types.IntType)
>     1

Yes, but now try types.StringType*s*, as used in the code.

-Andrew.




From mario at ruggier.org  Fri Jan 31 05:56:03 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 31 Jan 2003 11:56:03 +0100
Subject: [Twisted-Python] Example: Accessing a database from a Resource
In-Reply-To: <4963325.1043699670555.JavaMail.nobody@daisy.psp.pas.earthlink.net>
Message-ID: <97747726-350A-11D7-833C-000393756786@ruggier.org>

Hi, thanks for the example. Just a couple of comments:

Your doc string for the resource-db exalple:
"""
Example: Making database calls from a Resource.

One of the most common web development tasks involves connecting to a
database, retrieving some data, formatting it as HTML, and returning
it to a web browser.  There are two primary means of accomplishing
this task within the Twisted framework, either via twisted.enterprise
(the preferred method), or via twisted.internet.threads.

This example demonstrates the second approach; this is mostly useful
in cases where you need something "quick and dirty", or where the use
of twisted.enterprise would be overkill.
"""

Well, as per the twisted philosophy, using components separately should
always be possible, and so choosing to use twisted.web.resource should
not oblige you to use twisted.enterprise. For a given application, 
another
"enterprise" layer may be more appropriate, or indeed required.

In the example shown, a connection is made and closed per request.
The adbapi integrates a dbpool handling. How would one go about
handling caching of connections and/or loaded data across requests,
and across users (outside of twisted.enterprise)? Would this require
writing a twisted server application? Is there a simpler way to do this?

And, for web resources in general, how does the concept of "web 
application
variables" (variables visible across all requests and user sessions, as
opposed to user session variables) ?

Many thanks, mario


On lundi, jan 27, 2003, at 18:34 Europe/Amsterdam, L. Daniel Burr wrote:

> As promised in the thread about deferreds and resources, here is an
> example of making a database call from a resource, using a thread.
>
> I've tried to follow the Twisted development guidelines, so please
> let me know if I've used any inappropriate naming conventions, etc.
>
> I didn't provide epydoc-style docstrings as I had originally hoped;
> I haven't had time to read the epydoc manual yet.
>
> Next up will be an example using twisted.enterprise, with Row and
> without.  Hopefully examples of this sort will help newer users in
> grokking twisted.web, at least until the Woven stuff is ready.
>
> L. Daniel Burr<dbresource.rpy>




From cyberlync at yahoo.com  Fri Jan 31 15:09:23 2003
From: cyberlync at yahoo.com (Eric Merritt)
Date: Fri, 31 Jan 2003 12:09:23 -0800 (PST)
Subject: [Twisted-Python] PB , authorizor, getIdentRequest
In-Reply-To: <20030131.005457.74752848.glyph@twistedmatrix.com>
Message-ID: <20030131200923.37735.qmail@web40807.mail.yahoo.com>

Hello all,

 I have been playing with pb for a few days now and
have run into a bit of a snag. I support of my pb
based server I created an authorizor that did a little
db based authorization. At first I had it returning
the ident object, but then I realized (after a few
attribute errors) that it should be returning a
deffered object. Then I saw the mention of dbcred from
the enterprise package. That help allot and I actually
got it working by pulling some code from dbcred. 

 At this point you could authorize yourself based on
the database and make calls to the server, and all was
good.

 At that point I was pretty happy but I noticed that
within the code for dbcred it makes a call to
threads.defferToTread. Me being me, I thought to
myself 'I am not using threads, so why am I using
this?' and I took it out. So I changed it, and am
simply returning a deffered object that has a callback
that returns the identity object, and it fails. In any
case, I was wondering if any one had any idea of why
removing the thread specific code causes it to fail.

Also in a completly unrelated question, is it possible
for the server to make calles on the client? I figure
this is possible by passing a referencable object to
the server perspective, but I thought I would get a
little advice before I started playing with it.

Thanks,
Eric


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From achim at procoders.net  Fri Jan 31 15:41:15 2003
From: achim at procoders.net (Achim Domma)
Date: Fri, 31 Jan 2003 21:41:15 +0100
Subject: [Twisted-Python] Webchat
Message-ID: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>

Hi,

I'm new to Twisted an want to understand a little bit more what it can do
for me. I have implemented a webchat using the asyncore module. If a user
logs in, he will the redirected to a frameset. The top frame contains the
'room view' and is in fact an endless page, so the connection has to be
keept alive as long as the user is logged in. The bottom frame contains the
input form. It posts a message to the server and the message is written to
the open connections of all users in the room.

Could somebody explain me, if such an architecture is possible with Twisted,
and what might be the benefits compared to using raw asyncore. If possible a
very rought roadmap how to begin would also be very helpfull.

regards,
Achim




From andrew-twisted at puzzling.org  Fri Jan 31 19:39:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 11:39:08 +1100
Subject: [Twisted-Python] PB , authorizor, getIdentRequest
In-Reply-To: <20030131200923.37735.qmail@web40807.mail.yahoo.com>
References: <20030131.005457.74752848.glyph@twistedmatrix.com> <20030131200923.37735.qmail@web40807.mail.yahoo.com>
Message-ID: <20030201003907.GB16606@frobozz.local>

On Fri, Jan 31, 2003 at 12:09:23PM -0800, Eric Merritt wrote:
> 
[..snip..]
>  At this point you could authorize yourself based on
> the database and make calls to the server, and all was
> good.
> 
>  At that point I was pretty happy but I noticed that
> within the code for dbcred it makes a call to
> threads.defferToTread. Me being me, I thought to
> myself 'I am not using threads, so why am I using
> this?' and I took it out. So I changed it, and am
> simply returning a deffered object that has a callback
> that returns the identity object, and it fails. In any
> case, I was wondering if any one had any idea of why
> removing the thread specific code causes it to fail.

Standard Python DB-API 2.0 modules are synchronous, i.e. they block while
they wait for results.  dbcred.DatabaseAuthorizer uses
twisted.enterprise.adbapi to talk with your database, and adbapi uses
threads so that it can present an asynchronous interface to the database
while using standard DB-API compliant modules (see the Introduction to
Twisted Enterprise HOWTO for details).

So unfortunately, database access does involve threads -- but Twisted takes
care of it all for you behind the scenes when you use twisted.enterprise, so
you can basically pretend they don't exist :)

I don't know why your specific change would fail, but it would cause
problems due to blocking -- remember that database queries can take an
arbitarily long amount of time to be processed, particularly under load.  My
advice is to just use the standard dbcred module as-is, if you can.

> Also in a completly unrelated question, is it possible
> for the server to make calles on the client? I figure
> this is possible by passing a referencable object to
> the server perspective, but I thought I would get a
> little advice before I started playing with it.

I know you can do this by getting the client to pass the server a reference
to itself, which the server can then do .callRemote on (just as the client
can do .callRemote on the server).  I'm not sure if there's a better way;
someone who knows more about PB that I do will have to tell you :)

-Andrew.




From andrew-twisted at puzzling.org  Fri Jan 31 19:51:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 11:51:30 +1100
Subject: [Twisted-Python] Webchat
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
Message-ID: <20030201005129.GC16606@frobozz.local>

On Fri, Jan 31, 2003 at 09:41:15PM +0100, Achim Domma wrote:
> Hi,
> 
> I'm new to Twisted an want to understand a little bit more what it can do
> for me. I have implemented a webchat using the asyncore module. If a user
> logs in, he will the redirected to a frameset. The top frame contains the
> 'room view' and is in fact an endless page, so the connection has to be
> keept alive as long as the user is logged in. The bottom frame contains the
> input form. It posts a message to the server and the message is written to
> the open connections of all users in the room.
> 
> Could somebody explain me, if such an architecture is possible with Twisted,
> and what might be the benefits compared to using raw asyncore. If possible a
> very rought roadmap how to begin would also be very helpfull.

It is possible, and the benefits include the fact that it's already written:
have a look at the LivePage class in twisted.web.woven.page.  ;)

But yes, with Twisted Web, you get alot of control over how you respond to
requests, including the ability to keep them open and feed new data to them
occasionally.

-Andrew.




From andrew-twisted at puzzling.org  Fri Jan 31 20:25:47 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 12:25:47 +1100
Subject: [Twisted-Python] Webchat
In-Reply-To: <20030201005129.GC16606@frobozz.local>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net> <20030201005129.GC16606@frobozz.local>
Message-ID: <20030201012547.GE16606@frobozz.local>

On Sat, Feb 01, 2003 at 11:51:30AM +1100, Andrew Bennetts wrote:
> 
> It is possible, and the benefits include the fact that it's already written:
> have a look at the LivePage class in twisted.web.woven.page.  ;)

It's been pointed out to me that LivePage isn't exactly the prettiest code
in Twisted, so just think of it as a proof that it can be done, rather than
an example of how your code will look :)

If you've already got asyncore code written, you probably wouldn't want to
use Woven anyway, but just Twisted Web directly...

-Andrew.




From ste at webaccess.mozquito.com  Fri Jan 31 21:15:25 2003
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Sat, 01 Feb 2003 03:15:25 +0100
Subject: [Twisted-Python] Webchat
In-Reply-To: <20030201005129.GC16606@frobozz.local>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net> <20030201005129.GC16606@frobozz.local>
Message-ID: <3E3B2DBD.1060904@webaccess.mozquito.com>

Andrew Bennetts wrote:
> But yes, with Twisted Web, you get alot of control over how you respond to
> requests, including the ability to keep them open and feed new data to them
> occasionally.

interesting, it would be nice to see an example of this...

ciao
ste




From exarkun at intarweb.us  Fri Jan 31 22:40:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 31 Jan 2003 22:40:51 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <20030131073006.GL14761@frobozz.local>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com> <20030131062324.GJ14761@frobozz.local> <20030131.005457.74752848.glyph@twistedmatrix.com> <20030131073006.GL14761@frobozz.local>
Message-ID: <20030201034051.GA8774@meson.dyndns.org>

On Fri, Jan 31, 2003 at 06:30:06PM +1100, Andrew Bennetts wrote:
> On Fri, Jan 31, 2003 at 12:54:57AM -0600, Glyph Lefkowitz wrote:
> > On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > > > +        if isinstance(port, types.StringTypes):
> > >                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> > > 
> > > Should tcp.py import t.p.compat (ugh)?
> > 
> > I think not.  This has been the recommended style for a while.
> > 
> >     Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
> >     [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
> >     Type "copyright", "credits" or "license" for more information.
> >     >>> import types
> >     >>> isinstance(1, types.StringType)
> >     0
> >     >>> isinstance(1, types.IntType)
> >     1
> 
> Yes, but now try types.StringType*s*, as used in the code.
> 

  Yea, thanks.  Fix has been checked in.  (Not only is StringTypes not in
2.1, but isinstance() doesn't work on tuples there either ;)

  Jp

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-- 
 up 46 days, 7:49, 5 users, load average: 0.55, 0.34, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20030131/6c8b2838/attachment.pgp 

From andrew-twisted at puzzling.org  Wed Jan  1 08:16:14 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 2 Jan 2003 02:16:14 +1100
Subject: [Twisted-Python] doStart count leak?
Message-ID: <20030101151614.GA21924@frobozz.local>

Tv pointed this out on irc:

<Tv> _moshez: Are you guru enough to grok BaseConnector?
<Tv> Reconnects (calling connector.connect() in connectionLost/Failed) make
     it leak numPorts and never shutdown the factory.

Here is a diff for test_tcp that (I think) reveals this bug:

diff -u -r1.13 test_tcp.py
--- twisted/test/test_tcp.py    6 Aug 2002 17:12:42 -0000       1.13
+++ twisted/test/test_tcp.py    1 Jan 2003 14:59:55 -0000
@@ -56,6 +56,7 @@
 class MyClientFactory(protocol.ClientFactory):
 
     failed = 0
+    stopped = 0
     
     def buildProtocol(self, addr):
         p = MyProtocol()
@@ -69,6 +70,9 @@
     def clientConnectionLost(self, connector, reason):
         self.lostReason = reason
 
+    def stopFactory(self):
+        self.stopped = 1
+
 
 class LoopbackTestCase(unittest.TestCase):
     """Test loopback connections."""
@@ -274,6 +278,7 @@
         p = factory.protocol
         self.assertEquals((p.made, p.closed), (1, 1))
         factory.reason.trap(error.ConnectionRefusedError)
+        self.assertEquals(factory.stopped, 1)
 
         
 class CannotBindTestCase (unittest.TestCase):


-Andrew.




From jepler at unpythonic.net  Wed Jan  1 11:09:30 2003
From: jepler at unpythonic.net (Jeff Epler)
Date: Wed, 1 Jan 2003 12:09:30 -0600
Subject: [Twisted-Python] BooleanType support for jelly
In-Reply-To: <20030101023057.GA7348@meson.dyndns.org>
References: <20030101023057.GA7348@meson.dyndns.org>
Message-ID: <20030101120918.A1513@unpythonic.net>

On Tue, Dec 31, 2002 at 09:30:57PM -0500, Jp Calderone wrote:
> +try:
> +    from types import BooleanType
> +except ImportError:
> +    BooleanType = None

Maybe use
    BooleanType = type(not 1)
?  Though a compatability type sounds good too.

Jeff



From twisted at itamarst.org  Wed Jan  1 11:44:28 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 1 Jan 2003 13:44:28 -0500
Subject: [Twisted-Python] doStart count leak?
In-Reply-To: <20030101151614.GA21924@frobozz.local>
References: <20030101151614.GA21924@frobozz.local>
Message-ID: <20030101134428.53684c39.twisted@itamarst.org>

fixed in CVS. Thanks for the bug report.



From user143 at tsolver.com  Wed Jan  1 18:47:01 2003
From: user143 at tsolver.com (Allen Chan)
Date: Wed, 1 Jan 2003 20:47:01 -0500
Subject: [Twisted-Python] Problems in twisted.web.proxy.ReverseProxyResource
Message-ID: <HMEFJOHGCKGPIHHGENIIMEAKCAAA.user143@tsolver.com>

(1) The part of the URI starting with a '?' is not passed along to the
reverse proxy server.
(2) The browser hangs if conditional GET requests passed along to the
reverse proxy server returns a 304 (Not Modified) result.

The following diffs in twisted/web/proxy.py patches ReverseProxyResource to
temporarily get around these two problems.  However, more experienced
twisted developers may find better solutions.

--- proxy.py	Sun Dec 15 10:59:04 2002
+++ c:proxy.py	Thu Jan 02 01:27:43 2003
@@ -177,9 +177,22 @@

     def render(self, request):
         request.received_headers['host'] = self.host
-        clientFactory = ProxyClientFactory(request.method, self.path,
-                                     request.clientproto,
-                                     request.getAllHeaders(),
+
+        # need to add back the part of the uri starting with the '?'
+        newuri = self.path
+        if len(request.path) < len(request.uri):
+            newuri += request.uri[len(request.path):]
+
+        # need to remove all conditional get headers since the 304 response
+        # is not supported
+        newheaders = {}
+        for (k,v) in request.getAllHeaders().items():
+            if k[:3] != "if-":
+                newheaders[k] = v
+
+        clientFactory = ProxyClientFactory(request.method, newuri,
+                                     request.clientproto,
+                                     newheaders,
                                      request.content.read(),
                                      request)
         reactor.connectTCP(self.host, self.port, clientFactory)




From radix at twistedmatrix.com  Thu Jan  2 01:41:58 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 2 Jan 2003 03:41:58 -0500
Subject: [Twisted-Python] Migration to `twisted-web' debian package on twistedmatrix.com
Message-ID: <20030102084158.GA16470@Radii>

I've installed and configured twisted-web on pyramid, running on port
8880. Can everyone please browse through http://twistedmatrix.com:8880/
and make sure it behaves similarly to http://twistedmatrix.com/?
Tomorrow, I'll disable the old server and switch the twisted-web
configuration to use port 80.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From abe at fettig.net  Thu Jan  2 07:16:42 2003
From: abe at fettig.net (Abe Fettig)
Date: 02 Jan 2003 09:16:42 -0500
Subject: [Twisted-Python] POP3 improvements
In-Reply-To: <20030101062226.26100.qmail@green.zadka.com>
References: <20021231201951.GB4327@ki.yok.utu.fi>
	, <1041265642.640.30.camel@mingus>
	<20021230114825.4553701f.twisted@itamarst.org>
	<20021231015705.GA20756@frobozz.local>
	<20021231061639.GB20756@frobozz.local>
	<20021231064043.GD20756@frobozz.local>
	<20021231070822.GO944@ferd2.thristian.org>
	<1041344881.607.15.camel@mingus>
	<20030101062226.26100.qmail@green.zadka.com>
Message-ID: <1041517001.630.4.camel@mingus>

On Wed, 2003-01-01 at 01:22, Moshe Zadka wrote:
> On Tue, 31 Dec 2002, Tommi Virtanen <tv at twistedmatrix.com> wrote:
> 
> > > > 	How does that differ from the normal file interface?
> > 
> > 	Stick with them until someone proves you can't.
> 
> \begin{proof}
> What if there's an error? Like, the connection gets lost prematurely
> (in the middle of a line, or something), or the connection never starts?
> \end{proof}

I'm still pretty newbie-ish so sorry if this is a stupid question.  But
wouldn't lost connections, etc get handled on the Factory level?

Abe





From z3p at twistedmatrix.com  Thu Jan  2 21:20:16 2003
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Thu, 02 Jan 2003 23:20:16 -0500
Subject: [Twisted-Python] Addition to IProcess API
Message-ID: <3E14C930.23740.2085CE4@localhost>

We talked about this on #twisted for a while, I 
just wanted to run this past the mailing list to 
make sure no one has any objections.  I propose a 
new method be added to the IProcess API.  The 
method is signalProcess, and will be used to send 
signals to process's run in the reactor.  The 
method would look something like this:

def signalProcess(self, signalID):
    """
    Send a signal to the process.  signalID can 
be:

    * one of "HUP", "KILL", "STOP", or "INT".  
These will be implemented in a
    cross-platform manner, and so should be used 
if possible.
    * an integer, where it represents a POSIX 
signal ID.
    """

The strings (or something like that) must be used 
because other than SIGINT, the windows signal 
module doesn't define the constants.

Any objections?  

-p
-- 
     Paul Swartz
(o_  http://twistedmatrix.com/users/z3p.twistd/
//\  z3p at twistedmatrix.com
V_/_ AIM: Z3Penguin




From jml at mumak.net  Fri Jan  3 05:35:50 2003
From: jml at mumak.net (Jonathan Lange)
Date: 03 Jan 2003 23:35:50 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
Message-ID: <1041597350.2123.13.camel@sting>

Announcing "Trial".

In the spirit of "We Invented NIH", Twisted Matrix Labs bring you a
replacement for your favourite unit test framework.

So what's my excuse?

Twisted has already forked pyunit, so in a sense this is nothing new.
However, changes made to that forked code-base aren't really that useful
to any of our users. To get any of our added value, they'd have to use
their own fork of pyunit. Re-writing it gets rid of any nasty copyright
issues.

Asynchronous unit tests are a challenge. The DeferredTestCase stuff in
pyunit.unittest is a start, but not enough. Hopefully, trial will make
it easier.

The tight coupling of runtests and test_all is kind of ugly. This is no
longer necessary in trial. 
  $ ./admin/runtests -t
is equivalent to 
  $ ./bin/trial -p twisted.test


Oh, I should mention that this wasn't my idea. It's all glyph's fault.
He made me do it.

cheers,
jml




From exarkun at intarweb.us  Fri Jan  3 20:38:52 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 3 Jan 2003 22:38:52 -0500
Subject: [Twisted-Python] twisted.python.rebuild error demonstration
Message-ID: <20030104033852.GA30846@meson.dyndns.org>


  This bug has plagued me for some time, but I've only just now managed to
track it down to something specific.  The attached is a minimal example of
how to replicate it.  I'll be pondering ways to fix it, but if anyone else
has any ideas, I'd love to hear them.  Optimal solutions will avoid making
calls to gc.get_referrers ;)

  Jp

-- 
Seduced, shaggy Samson snored.
She scissored short.  Sorely shorn,
Soon shackled slave, Samson sighed,
Silently scheming,
Sightlessly seeking
Some savage, spectacular suicide.
                -- Stanislaw Lem, "Cyberiad"
--
 12:00am up 18 days, 9:46, 6 users, load average: 0.06, 0.05, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: body.tar.gz
Type: application/x-tar-gz
Size: 587 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030103/8ea3013d/attachment-0002.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030103/8ea3013d/attachment.sig>

From missive at hotmail.com  Sat Jan  4 09:08:48 2003
From: missive at hotmail.com (Lee Harr)
Date: Sat, 04 Jan 2003 16:08:48 +0000
Subject: [Twisted-Python] PATCH? /doc/api/index.html
Message-ID: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>

Am I just using the wrong tool for browsing local
docs, or is this a reasonable thing to want?

I think it would be nice to have a /doc/index.html
which points to the website also.


11:02 >cvs diff -u index.html
Index: index.html
===================================================================
RCS file: /cvs/Twisted/doc/api/index.html,v
retrieving revision 1.1
diff -u -r1.1 index.html
--- index.html  9 Apr 2002 04:11:17 -0000       1.1
+++ index.html  4 Jan 2003 15:57:16 -0000
@@ -1,6 +1,11 @@
<html>
<head><title>The Twisted API Docs</title></head>
<body>
-This is where the API docs will go in the released tarballs.
+<p>This is where the API docs will go in the released tarballs.
+</p>
+
+<p>Latest released API docs are available at:
+<a 
href="http://twistedmatrix.com/documents/TwistedDocs/current/api/">http://twistedmatrix.com/documents/TwistedDocs/current/api/</a>
+</p>
</body>
</html>






_________________________________________________________________
Help STOP SPAM: Try the new MSN 8 and get 2 months FREE* 
http://join.msn.com/?page=features/junkmail




From waterbug at beeblebrox.gsfc.nasa.gov  Sat Jan  4 14:37:50 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Sat, 04 Jan 2003 16:37:50 -0500
Subject: [Twisted-Python] Jelly rocks! ... and a question ...
Message-ID: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>

Hi Glyph and Twisted Gurus, 

First, thanks for the nice work on jelly, which has been 
very good to us in our xmlrpc interface development.  
I was a little apprehensive about how it might react 
to nesting, but I shouldn't have worried -- it doesn't even 
break a sweat jellying and unjellying objects with 3 levels 
of nesting ...!  :^)

Second: what's the latest twisted thinking on 
"best practice" for transfering bulk data (aka "file upload") 
in an xmlrpc or soap context?  (Yes, you've given me your 
thoughts on this before ... just checking to see if there's 
any new, er, twists ...)

Cheers,
-- Steve.



From twisted at itamarst.org  Sat Jan  4 15:43:24 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 4 Jan 2003 17:43:24 -0500
Subject: [Twisted-Python] Jelly rocks! ... and a question ...
In-Reply-To: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>
References: <3E17542D.88E8F074@beeblebrox.gsfc.nasa.gov>
Message-ID: <20030104174324.2403401e.twisted@itamarst.org>

On Sat, 04 Jan 2003 16:37:50 -0500
Steve Waterbury <waterbug at beeblebrox.gsfc.nasa.gov> wrote:

> Second: what's the latest twisted thinking on 
> "best practice" for transfering bulk data (aka "file upload") 
> in an xmlrpc or soap context?  (Yes, you've given me your 
> thoughts on this before ... just checking to see if there's 
> any new, er, twists ...)

Problem with twisted's built-in xmlrpc and soap code that it keeps the
whole request in memory. So, as is, sending in chunks using
twisted.web.xmlrpc.Binary (alias for xmlrpclib.Binary) might be a good
idea.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From radix at twistedmatrix.com  Sat Jan  4 16:28:55 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 4 Jan 2003 18:28:55 -0500
Subject: [Twisted-Python] PATCH? /doc/api/index.html
In-Reply-To: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
References: <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
Message-ID: <20030104232855.GA2630@Radii>

On Sat, Jan 04, 2003 at 04:08:48PM +0000, Lee Harr wrote:
> Am I just using the wrong tool for browsing local
> docs, or is this a reasonable thing to want?

Well, the actual releases come with the API documentation in
doc/api. CVS version does not, because the API docs are
auto-generated. If you want to generate them yourself from CVS, and
you have epydoc installed (http://epydoc.sf.net), the command is
"./admin/epyrun -o doc/api" (from your base Twisted/
directory). Otherwise, just either use the website or get the latest
release (we have TwistedDocs tarballs as well as a twisted-doc debian
package, if you only want to install that).

> I think it would be nice to have a /doc/index.html
> which points to the website also.

I'll apply that.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Sat Jan  4 19:22:19 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 13:22:19 +1100
Subject: [Twisted-Python] [OT] PyCon accomodation?
Message-ID: <20030105022219.GA9891@frobozz.local>

Hi all...

I'm intending on going to PyCon (http://www.python.org/pycon/), but I'm not
sure where I should stay for the week -- the places at
http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
expensive to my Australian dollars :)

Basically I'm looking to do this on the cheap; the airfare is expensive
enough... ideally, I'd probably share a room in a budget hotel with someone.
This has the bonus that they could help a clueless Aussie traveller find his
way around ;)

So, who's going to PyCon, and do they have any ideas on where I could stay?
I'd probably be looking to stay from Sunday night 23rd (so I could attend
the code sprint) through to Saturday the 29th, although I haven't thought
this out in detail.

-Andrew.




From twisted at itamarst.org  Sat Jan  4 19:31:29 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 4 Jan 2003 21:31:29 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <20030104213129.00c48141.twisted@itamarst.org>

On Sun, 5 Jan 2003 13:22:19 +1100
Andrew Bennetts <andrew-twisted at puzzling.org> wrote:

> So, who's going to PyCon, and do they have any ideas on where I could
> stay? I'd probably be looking to stay from Sunday night 23rd (so I
> could attend the code sprint) through to Saturday the 29th, although I
> haven't thought this out in detail.

We're going to be camping out at Jean-Paul's mansion. But if that
doesn't work, splitting a hotel 3 ways makes it come out pretty cheap.



From exarkun at intarweb.us  Sat Jan  4 19:57:40 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sat, 4 Jan 2003 21:57:40 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030104213129.00c48141.twisted@itamarst.org>
References: <20030105022219.GA9891@frobozz.local> <20030104213129.00c48141.twisted@itamarst.org>
Message-ID: <20030105025740.GA9755@meson.dyndns.org>

On Sat, Jan 04, 2003 at 09:31:29PM -0500, Itamar Shtull-Trauring wrote:
> 
> We're going to be camping out at Jean-Paul's mansion.

  Yea, someone remind me to lock up the hounds that week, I'd hate for them
to get you guys out there in your neat little tents.

  Jp

-- 
"Minerals are inexhaustible and will never be depleted. A stream of
investment creates additions to proved reserves, a very large in-ground
inventory, constantly renewed as it is extracted... How much was in the
ground at the start and how much will be left at the end are unknown and
irrelevant."  -- Morry Adelman, World Renowned Economist
--
 12:00am up 19 days, 9:46, 2 users, load average: 0.07, 0.03, 0.00
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030104/0487b586/attachment.sig>

From jml at ids.org.au  Sat Jan  4 20:11:30 2003
From: jml at ids.org.au (Jonathan Lange)
Date: 05 Jan 2003 14:11:30 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041597350.2123.13.camel@sting>
References: <1041597350.2123.13.camel@sting>
Message-ID: <1041736290.2384.9.camel@sting>

On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> Announcing "Trial".
> 

CVS HEAD now uses trial. 
admin/runtests has been updated.

It's been tested with python 2.1 and 2.2 on debian linux.

It's almost exactly like pyunit in api. 

Where you did
    from twisted.trial import unittest

now do:
    from pyunit import unittest

Similarly
    class MyTest(unittest.TestCase):
        def __init__(self, method='runTests'):
            unittest.TestCase.__init__(method)
            # ...
becomes
    class MyTest(unittest.TestCase):
        def __init__(self):
            # ...

TODO (maybe):
- Add recursive search option (for -p)
- Fancy GUI
- Yummy async features.
- Randomize execution order
- Option to repeat tests n times.
- Incorporate warner's reactor cleaning patches
- Web reporter.


jml




From andrew-twisted at puzzling.org  Sat Jan  4 20:25:29 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 14:25:29 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <20030105032529.GB9891@frobozz.local>

On Sun, Jan 05, 2003 at 02:11:30PM +1100, Jonathan Lange wrote:
> 
> Where you did
>     from twisted.trial import unittest
> 
> now do:
>     from pyunit import unittest

You got this backwards, I presume?

-Andrew.




From jml at ids.org.au  Sat Jan  4 20:19:04 2003
From: jml at ids.org.au (Jonathan Lange)
Date: 05 Jan 2003 14:19:04 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <1041736743.2384.11.camel@sting>

On Sun, 2003-01-05 at 14:11, Jonathan Lange wrote:
> On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> > Announcing "Trial".
> > 
>
> Where you did
>     from twisted.trial import unittest
> 
> now do:
>     from pyunit import unittest

Ummm... the other way around. (Thanks bruce)





From radix at twistedmatrix.com  Sat Jan  4 20:24:33 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 4 Jan 2003 22:24:33 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <20030105032433.GB2630@Radii>

On Sun, Jan 05, 2003 at 01:22:19PM +1100, Andrew Bennetts wrote:
> Hi all...
> 
> I'm intending on going to PyCon (http://www.python.org/pycon/), but I'm not
> sure where I should stay for the week -- the places at
> http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
> expensive to my Australian dollars :)
> 
> Basically I'm looking to do this on the cheap; the airfare is expensive
> enough... ideally, I'd probably share a room in a budget hotel with someone.
> This has the bonus that they could help a clueless Aussie traveller find his
> way around ;)
> 
> So, who's going to PyCon, and do they have any ideas on where I could stay?
> I'd probably be looking to stay from Sunday night 23rd (so I could attend
> the code sprint) through to Saturday the 29th, although I haven't thought
> this out in detail.

Well, I'm planning on staying all week at a cheapie motel-6 or super-8
or something. There's a chance Nafai'll room with me, and the more the
merrier. No internet at those, though, afaik :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Sat Jan  4 20:50:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 14:50:09 +1100
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii>
References: <20030105022219.GA9891@frobozz.local> <20030105032433.GB2630@Radii>
Message-ID: <20030105035009.GC9891@frobozz.local>

On Sat, Jan 04, 2003 at 10:24:33PM -0500, Christopher Armstrong wrote:
> 
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)

I don't have a laptop or anything anyway, so that'd be fine... :)

-Andrew.




From screwtape at froup.com  Sat Jan  4 21:21:26 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 5 Jan 2003 15:21:26 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030101043247.GA12923@frobozz.local>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local>
Message-ID: <20030105042125.GA26857@ferd2.thristian.org>

On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > > Hi.
> > > The following things are undocumented -- any volunteers would be welcome:
> > >  - Twisted chat HOWTO (im, words server, writing bots)
> > 
> > In case I accidentally stumble upon some time in the near future, what
> > are the requirements for documentation writing? Are plain text files
> > good enough, or HTML?
> 
> Look at the existing docs in doc/howto for examples.  They are in "Lore"
> format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> details (or http://twistedmatrix.com/documents/howto/doc-standard).

Well, I've had a go at documenting my experiences with Twisted IM.
How's this?

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "Universe-flavored. What you mortals call `butterscotch'." -- T&R, 1999-09-17
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030105/ce846c78/attachment-0002.html>

From screwtape at froup.com  Sat Jan  4 21:45:32 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 5 Jan 2003 15:45:32 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030105042125.GA26857@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local> <20030105042125.GA26857@ferd2.thristian.org>
Message-ID: <20030105044532.GB26857@ferd2.thristian.org>

On Sun, Jan 05, 2003 at 03:21:26PM +1100, screwtape at froup.com wrote:
> On Wed, Jan 01, 2003 at 03:32:47PM +1100, Andrew Bennetts wrote:
> > On Wed, Jan 01, 2003 at 02:55:38PM +1100, screwtape at froup.com wrote:
> > > On Sat, Dec 28, 2002 at 10:54:07AM -0000, Moshe Zadka wrote:
> > > > Hi.
> > > > The following things are undocumented -- any volunteers would be welcome:
> > > >  - Twisted chat HOWTO (im, words server, writing bots)
> > > 
> > > In case I accidentally stumble upon some time in the near future, what
> > > are the requirements for documentation writing? Are plain text files
> > > good enough, or HTML?
> > 
> > Look at the existing docs in doc/howto for examples.  They are in "Lore"
> > format, which is a subset of XHTML.  See doc/howto/doc-standard.html for
> > details (or http://twistedmatrix.com/documents/howto/doc-standard).
> 
> Well, I've had a go at documenting my experiences with Twisted IM.
> How's this?

Andrew tapped me on the shoulder on IRC and told me where to find
hlint. 

*blush*

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| Fried eye car nelpew.
|
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20030105/78247ef4/attachment-0002.html>

From missive at hotmail.com  Sat Jan  4 22:13:38 2003
From: missive at hotmail.com (Lee Harr)
Date: Sun, 05 Jan 2003 05:13:38 +0000
Subject: [Twisted-Python] PATCH: /doc/howto/pb-copyable.html
Message-ID: <F13705R73pd0JBN6l2300012538@hotmail.com>

Looks like in /doc/howto/listings/pb/copy_sender.py
RemotePond was renamed CopyPond, and this
reference in the howto was missed.



23:20 >cvs diff -u pb-copyable.html
Index: pb-copyable.html
===================================================================
RCS file: /cvs/Twisted/doc/howto/pb-copyable.html,v
retrieving revision 1.2
diff -u -r1.2 pb-copyable.html
--- pb-copyable.html    30 Dec 2002 13:16:18 -0000      1.2
+++ pb-copyable.html    5 Jan 2003 04:15:32 -0000
@@ -177,7 +177,7 @@
base="twisted.spread.flavors">Serializable</code> classes. In this section,
we focus on <code class="API" base="twisted.spread.flavors">Copyable</code>.
The copyable subclass of <code>LilyPond</code> is called
-<code>RemotePond</code>. We create an instance of it and send it through
+<code>CopyPond</code>. We create an instance of it and send it through
<code>callRemote</code> as an argument to the receiver's
<code>remote_takePond</code> method. The Jelly layer will serialize
(<q>jelly</q>) that object as an instance with a class name of


_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*. 
http://join.msn.com/?page=features/featuredemail




From andrew-twisted at puzzling.org  Sat Jan  4 22:35:47 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 5 Jan 2003 16:35:47 +1100
Subject: [Twisted-Python] PATCH: /doc/howto/pb-copyable.html
In-Reply-To: <F13705R73pd0JBN6l2300012538@hotmail.com>
References: <F13705R73pd0JBN6l2300012538@hotmail.com>
Message-ID: <20030105053547.GE9891@frobozz.local>

On Sun, Jan 05, 2003 at 05:13:38AM +0000, Lee Harr wrote:
> Looks like in /doc/howto/listings/pb/copy_sender.py
> RemotePond was renamed CopyPond, and this
> reference in the howto was missed.

Checked in.  Thanks!

-Andrew.




From m at moshez.org  Sat Jan  4 22:57:14 2003
From: m at moshez.org (Moshe Zadka)
Date: 5 Jan 2003 05:57:14 -0000
Subject: [Twisted-Python] PATCH? /doc/api/index.html
In-Reply-To: <20030104232855.GA2630@Radii>
References: <20030104232855.GA2630@Radii>, <F43t3obYVzjvvqG2JQH000000a3@hotmail.com>
Message-ID: <20030105055714.18747.qmail@green.zadka.com>

On Sat, 4 Jan 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Well, the actual releases come with the API documentation in
> doc/api. CVS version does not, because the API docs are
> auto-generated. If you want to generate them yourself from CVS, and
> you have epydoc installed (http://epydoc.sf.net), the command is
> "./admin/epyrun -o doc/api" (from your base Twisted/
> directory).

I just wanted to add that if you're using Debian sid, you can just
"apt-get install python-epydoc" and be happy.



From radix at twistedmatrix.com  Sun Jan  5 01:45:39 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 5 Jan 2003 03:45:39 -0500
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <1041736290.2384.9.camel@sting>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting>
Message-ID: <20030105084539.GD2630@Radii>

On Sun, Jan 05, 2003 at 02:11:30PM +1100, Jonathan Lange wrote:
> On Fri, 2003-01-03 at 23:35, Jonathan Lange wrote:
> > Announcing "Trial".
>
> TODO (maybe):
...
> - Randomize execution order

Thought of something.

When this is implemented, it'll be very important (for obvious
reasons) to have the execution order saved to some file on every run,
with the ability to read in that file for future runs.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From lac at strakt.com  Sun Jan  5 02:06:44 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 05 Jan 2003 10:06:44 +0100
Subject: [Twisted-Python] from comp.lang.python
Message-ID: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>

an indication that a link to the license belongs prominently on
http://www.twistedmatrix.com/ ?

Laura Creighton

------- Forwarded Message

Return-Path: python-list-admin at python.org
Delivery-Date: Sun Jan  5 09:52:37 2003
From: m_webber_sydney at yahoo.com.au (Matthew)
Newsgroups: comp.lang.python
Subject: Re: Threaded server in python!?

Andrew Bennetts <andrew-pythonlist at puzzling.org> wrote
 
> Using a library like Twisted <http://twistedmatrix.com/>, it's
> straightforward to handle multiple sockets, without needing threads.
> 
> As a bonus, Twisted has implementations of many common protocols, ready for
> you to use and adapt to your problem -- I strongly recommend it, as I
> suspect you will find it *much* easier than the alternatives.

Twisted looks great, based on a quick glance at the web site, but if
the license terms were on the web site I could not find them. What
license is Twisted released under?
Thanks
- -- 
http://mail.python.org/mailman/listinfo/python-list

------- End of Forwarded Message




From bob at redivi.com  Sun Jan  5 02:26:13 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sun, 5 Jan 2003 04:26:13 -0500
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii>
Message-ID: <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com>

On Saturday, Jan 4, 2003, at 22:24 America/New_York, Christopher 
Armstrong wrote:

> On Sun, Jan 05, 2003 at 01:22:19PM +1100, Andrew Bennetts wrote:
>> Hi all...
>>
>> I'm intending on going to PyCon (http://www.python.org/pycon/), but 
>> I'm not
>> sure where I should stay for the week -- the places at
>> http://www.python.org/cgi-bin/moinmoin/PyConAccommodation sound very
>> expensive to my Australian dollars :)
>>
>> Basically I'm looking to do this on the cheap; the airfare is 
>> expensive
>> enough... ideally, I'd probably share a room in a budget hotel with 
>> someone.
>> This has the bonus that they could help a clueless Aussie traveller 
>> find his
>> way around ;)
>>
>> So, who's going to PyCon, and do they have any ideas on where I could 
>> stay?
>> I'd probably be looking to stay from Sunday night 23rd (so I could 
>> attend
>> the code sprint) through to Saturday the 29th, although I haven't 
>> thought
>> this out in detail.
>
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)
>

Depending on how much you like subway transit (it's actually really 
clean there, but only runs until midnight-2am latest.. used to be 
midnight but I hear they've extended it slightly on weekends), you can 
pretty much stay anywhere near a metro station and make it to PyCon 
pretty easily..  Presumably, since it's at GWU, it's going to be really 
close to the Foggy Bottom stop on the orange/blue metro line.. which is 
quite accessible from the red line (or any other, but particularly the 
red and orange/blue).  The metro system there is pretty quick, and 
cheap (non-rush hour it's no more than $2.20 USD each way.. not too 
much more otherwise).  I really can't suggest accommodations, as I used 
to live in the area and have plenty of friends to crash with in those 
parts (and never had to use a hotel for any legitimate purpose), but 
it's relatively easy to get around without renting a car so long as 
you're within walking distance of a metro station.

For those of you traveling from points north or south via Amtrak, the 
train stops at the Union Station stop (red line), with an easy transfer 
over to the orange/blue at Metro Center.

http://www.wmata.com/metrorail/systemmap.cfm is the map of the 
metrorail system, where you could plot accessible hotels in the 
md/dc//va area.

And as far as internet access goes, you're probably SOL.. Net cafes and 
net access at hotels aren't very popular down there from what I 
remember.. if you're lucky you'll meet some cute college guy/girl that 
goes to a school at GWU / GMU / etc. and will let you "plug in" to "the 
ethernet" in her dorm, but that's the best you'll be able to do :)




From lac at strakt.com  Sun Jan  5 02:30:19 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 5 Jan 2003 10:30:19 +0100
Subject: [Twisted-Python] stale link
Message-ID: <200301050930.h059UJOw023595@ratthing-b246.strakt.com>

http://twistedmatrix.com/documents/TwistedDocs/Twisted-0.99.0/LICENSE.html
Clicking on 'table of contents' yields 'File not found'.



From lac at strakt.com  Sun Jan  5 03:20:20 2003
From: lac at strakt.com (Laura Creighton)
Date: Sun, 05 Jan 2003 11:20:20 +0100
Subject: [Twisted-Python] [OT] PyCon accomodation? 
In-Reply-To: Message from Bob Ippolito <bob@redivi.com> 
   of "Sun, 05 Jan 2003 04:26:13 EST." <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com> 
References: <BBBA41DC-208F-11D7-9674-000A95686CD8@redivi.com> 
Message-ID: <200301051020.h05AKKjL023787@ratthing-b246.strakt.com>

Last time I was in DC, I needed an internet connection and looked in the
phone book.  I found an internet cafe on the same metro line as the
Pentagon station.  So I trecked over there, only to find that the place
shut at 1800!    

I now am informed that Kinko's copies has reliable internet, and some of
then are open 24 hours -- perhaps all of them for all I know.

Laura Creighton



From twisted at itamarst.org  Sun Jan  5 09:47:45 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 5 Jan 2003 11:47:45 -0500
Subject: [Twisted-Python] from comp.lang.python
In-Reply-To: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>
References: <200301050906.h0596ijL023462@ratthing-b246.strakt.com>
Message-ID: <20030105114745.2f84850d.twisted@itamarst.org>

On Sun, 05 Jan 2003 10:06:44 +0100
Laura Creighton <lac at strakt.com> wrote:

> an indication that a link to the license belongs prominently on
> http://www.twistedmatrix.com/ ?

Done.



From nafai at twistedmatrix.com  Sun Jan  5 00:39:48 2003
From: nafai at twistedmatrix.com (Travis B. Hartwell)
Date: Sun, 05 Jan 2003 00:39:48 -0700
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105032433.GB2630@Radii> (Christopher Armstrong's message
 of "Sat, 04 Jan 2003 22:24:33 -0500")
References: <20030105022219.GA9891@frobozz.local>
	<20030105032433.GB2630@Radii>
Message-ID: <87vg14caez.fsf@lutya.travishartwell.net>

<snip>
> Well, I'm planning on staying all week at a cheapie motel-6 or super-8
> or something. There's a chance Nafai'll room with me, and the more the
> merrier. No internet at those, though, afaik :-)
>
Yes, that's the plan.  So count me in on this budget motel shopping
spree.  I guess I'll have to suffer through dialup at these places, as
I have an ISP that is nationwide.  But the idea is to be able to
afford to go.  My current plan is to fly out Monday afternoon/evening
or Tuesday morning and leave Saturday morning.

Keep me informed if I'm not on IRC!

Nafai



From warner at lothar.com  Sun Jan  5 15:34:10 2003
From: warner at lothar.com (Brian Warner)
Date: Sun, 05 Jan 2003 14:34:10 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
Message-ID: <20030105.143410.28796355.warner@lothar.com>

Hi all..

For some reason not yet entirely clear to me, I started to put some time
into bringing cReactor up to date. My hope was to make it functional enough
to pass the full test suite. At the moment, it fails 120 of the 413 tests in
the suite (that doesn't include test_threads, which I had to disable to
prevent the test suite from hanging forever).

In tracking down the reasons for these failures, I've come across a number
of places where the reactor interface (as defined by IReactorCore and
friends in twisted.internet.interfaces) was ambiguous about something, and
the default reactor has implemented different functionality than the
cReactor. Several tests have come to rely upon default.py's implementation,
and fail when run under cReactor even though it appears to implement the
same interface.

To resolve these, we need to nail down the ambiguities in the Interface, so
that all reactors can implement the same thing. The two issues I've
encountered so far:

 IReactorCore.addSystemEventTrigger()   [1 test failure]

  The interface mentions three (startup, shutdown, persist) as examples of
  "system events", and says they will be fired internally by the Reactor. It
  also says:

        An implementor of this interface must only implement those events
        described here.

  The cReactor implements this literally, and refuses to accept calls to
  addSystemEventTrigger or fireSystemEvent with event names outside of
  ['startup', 'shutdown', 'persist']. The default reactor (and the ones that
  inherit system event code from it, which is all of them except cReactor)
  use a dict for the events, and therefore accept any string as a system
  event type. test_internet.InterfaceTestCase.testTriggerSystemEvent creates
  several new event types ("test", "defer", "remove") and runs tests with
  them. This test thus fails under cReactor.

  RESOLUTION: I think we decided that cReactor should accept arbitrary event
  names, and I'm working on code to implement that. That restrictive
  sentence should be removed from the docs. I'd also like to see a better
  explanation of what event types will be fired by whom: if the API allows
  an arbitrary string, but the Reactor will only fire "startup" and
  "shutdown" for you, then you have to know that it is your own
  responsibility to fire the new triggers that you've added.


 IReactorCore.stop() [38 test failures]

  The interface description for .stop and .crash make the claim that once
  the Reactor is shut down with .stop(), it may not be restarted with
  .run(). Reactors which have been stopped with .crash() *may* be restarted.

  cReactor implements this literally. Once reactor.stop() has been called,
  the reactor is moved into a state from which .run() and .iterate() raise a
  RuntimeError "the reactor is shut down!" exception. The default reactor
  does not enforce this: .run and .stop may be called as many times as you
  like.

  All tests in a given invocation of bin/trial or admin/runtests are
  executed with the same Reactor instance. Indeed everything done by a
  single python process is performed with the same Reactor instance. Normal
  apps don't care: they start the reactor in main() or under twistd, and it
  runs until the app shuts down. The tests, however, start and stop the
  reactor all the time, generally once per test case.

  Under cReactor, the first test to do reactor.stop() will terminate the
  reactor permanently, causing failures of all later tests that attempt
  reactor.run() or reactor.iterate(). This also tends to kill tests which
  re-bind to the same port multiple times, as the reactor.iterate() needed
  to release the port fails, leaving the port bound, causing a "Address
  already in use" error on the second test.

  POTENTIAL RESOLUTION: We need to decide whether the default reactor should
  obey the restriction defined by IReactorCore, or whether the interface
  (and cReactor) should be changed to match the behavior of the default
  reactor.

  Another possibility which might be easier to implement would be to enforce
  the no-restart restriction, but also create IReactorCore.reset(), and
  declare that it will return the reactor to the state it had at boot time,
  allowing .run() to be called on it once again. This method would also
  remove all DelayedCall events, remove any TCP/UDP sockets or listening
  ports, delete any systemEventTriggers that were added, and generally get
  rid of any other state which might have accumulated since startup. We
  could have the test suite use this to reset the reactor just after each
  test.


The other test failures are the result of functionality that is missing from
cReactor. In general, cReactor has not been maintained as new features were
added to the other reactors. Here is a summary of all the failures. (note
that some tests fail for multiple reasons).

 IReactorTCP.connectTCP [8 failures]
  client support (outbound sockets) is missing

 IListeningPort.getHost [22 failures]
  simple missing function, mostly used to determine the port number of a
  system-selected listening port

 IReactorProcess [9 failures]
  launching child processes is unimplemented 

 rebuild attempts: missing __dict__ [5 failures]
  twisted.python.rebuild attempts to rebuild a C module with no .__dict__

 IReactorMulticast [5 failures]
  multicast support is not implemented

 IReactorUDP [23 failures]
  UDP support is unimplemented

 IReactorCore.addSystemEventTrigger()   [1 test failure]

 IReactorCore.stop() [38 test failures]


Some of these aren't hard to fix: IListeningPort.getHost should only take a
few lines, connectTCP is pretty straightforward, and IReactorUDP should be a
fairly easy cut-and-paste job from the TCP code. But others are tricky:
IReactorProcess is fairly high-level, and IReactorMulticast might be relying
upon some portability code in the python socket module that wouldn't be
available at the C layer.

I think it is now pretty clear what work needs to be done. Everyone is
welcome to take a crack at it :). I will probably finish the getDelayedCall
and addSystemEventTrigger changes I'm working on, commit them, and then let
others pursue the pieces that are useful to them. (the default reactor is
currently good enough for my needs; I only put this much time into cReactor
because I wanted to understand the test failures well enough to know that my
changes weren't the cause).

cheers,
 -Brian



From andrew-twisted at puzzling.org  Sun Jan  5 16:19:12 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 6 Jan 2003 10:19:12 +1100
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030105231912.GA30384@frobozz.local>

On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:
>   Another possibility which might be easier to implement would be to enforce
>   the no-restart restriction, but also create IReactorCore.reset(), and
>   declare that it will return the reactor to the state it had at boot time,
>   allowing .run() to be called on it once again. This method would also
>   remove all DelayedCall events, remove any TCP/UDP sockets or listening
>   ports, delete any systemEventTriggers that were added, and generally get
>   rid of any other state which might have accumulated since startup. We
>   could have the test suite use this to reset the reactor just after each
>   test.

+1

-Andrew.




From jml at mumak.net  Sun Jan  5 16:49:58 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Mon, 6 Jan 2003 10:49:58 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] yay reactors! -r <submodule-of-twisted.internet>
In-Reply-To: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com>
References: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com>
Message-ID: <20030105234958.GA22173@grond.mumak.net>

On Sun, Jan 05, 2003 at 01:12:51AM -0600, radix CVS wrote:
> Modified files:
> Twisted/admin/runtests 1.18 1.19
> 
> ViewCVS links:
> http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/admin/runtests.diff?r1=text&tr1=1.18&r2=text&tr2=1.19&cvsroot=Twisted
> http://twistedmatrix.com/users/jh.twistd/viewcvs/cgi/viewcvs.cgi/twisted/scripts/trial.py.diff?r1=text&tr1=1.4&r2=text&tr2=1.5&cvsroot=Twisted
> 
> Index: Twisted/admin/runtests
> diff -u Twisted/admin/runtests:1.18 Twisted/admin/runtests:1.19
> --- Twisted/admin/runtests:1.18	Sat Jan  4 18:52:28 2003
> +++ Twisted/admin/runtests	Sat Jan  4 23:12:48 2003
> @@ -27,8 +27,8 @@
>  
>  from twisted.scripts import trial
>  
> -if len(sys.argv) == 1:
> -    sys.argv.extend(['-p', 'twisted.test'])
> +# People shouldn't really be passing -p to runtests; it's explicitly for twisted.test
> +sys.argv.extend(['-p', 'twisted.test'])
>  

Although people shouldn't be passing -p to runtests, they can be
expected to pass -m. 

The old behaviour was that 'runtests -m twisted.test.test_stuff' would
only run the tests in the test_stuff module. With this commit, the same
command will run the entire test suite, which sucks.

Can we fix it? 

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030106/8626b923/attachment.sig>

From glyph at twistedmatrix.com  Sun Jan  5 18:52:46 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 05 Jan 2003 19:52:46 -0600 (CST)
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105231912.GA30384@frobozz.local>
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105231912.GA30384@frobozz.local>
Message-ID: <20030105.195246.59468345.glyph@twistedmatrix.com>


On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:

> Another possibility which might be easier to implement would be to enforce
> the no-restart restriction, but also create IReactorCore.reset(), and declare
> that it will return the reactor to the state it had at boot time, allowing
> .run() to be called on it once again. This method would also remove all
> DelayedCall events, remove any TCP/UDP sockets or listening ports, delete any
> systemEventTriggers that were added, and generally get rid of any other state
> which might have accumulated since startup. We could have the test suite use
> this to reset the reactor just after each test.

+infinity

This is definitely the way it should work.

Thanks, Brian, for taking the time to analyze the existing cReactor code in so
much depth.  I really owe you one.  I will need more time to fully read and
comprehend the rest of the message, but this part has been on my personal TODO
list for a while.

Ideally, I'd prefer that the reactor is *always* in a consistent state.  That
would probably involve redefining or removing the "crash" facility, since there
would only be "pause and return so that run() continues" or "stop properly so
run() restarts".  Whatever compromise you come up with in this vein is probably
acceptable, though.

-- 
 |    <`'>    |  Glyph Lefkowitz: Traveling Sorcerer   |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030105/2baa4199/attachment.sig>

From jml at ids.org.au  Sun Jan  5 19:41:17 2003
From: jml at ids.org.au (jml at ids.org.au)
Date: Mon, 6 Jan 2003 13:41:17 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] yay reactors! -r <submodule-of-twisted.internet>
In-Reply-To: <20030105234958.GA22173@grond.mumak.net>
References: <E18V4xn-0003lX-00@pyramid.twistedmatrix.com> <20030105234958.GA22173@grond.mumak.net>
Message-ID: <20030106024117.GB22173@grond.mumak.net>

On Mon, Jan 06, 2003 at 10:49:58AM +1100, Jonathan M. Lange wrote:
> On Sun, Jan 05, 2003 at 01:12:51AM -0600, radix CVS wrote:
> > Modified files:
> > Twisted/admin/runtests 1.18 1.19
> > 
> > Index: Twisted/admin/runtests
> > diff -u Twisted/admin/runtests:1.18 Twisted/admin/runtests:1.19
> > --- Twisted/admin/runtests:1.18	Sat Jan  4 18:52:28 2003
> > +++ Twisted/admin/runtests	Sat Jan  4 23:12:48 2003
> > @@ -27,8 +27,8 @@
> >  
> >  from twisted.scripts import trial
> >  
> > -if len(sys.argv) == 1:
> > -    sys.argv.extend(['-p', 'twisted.test'])
> > +# People shouldn't really be passing -p to runtests; it's explicitly for twisted.test
> > +sys.argv.extend(['-p', 'twisted.test'])
> >  
> 
> Although people shouldn't be passing -p to runtests, they can be
> expected to pass -m. 
> 
> The old behaviour was that 'runtests -m twisted.test.test_stuff' would
> only run the tests in the test_stuff module. With this commit, the same
> command will run the entire test suite, which sucks.
> 
> Can we fix it? 
> 

BTW, I should mention that this stuff is entirely orthogonal to the good
work done by adding a reactor switch. Reverting to fix the -p / -m thing
would be a mistake.

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030106/7fdf35b0/attachment.sig>

From exarkun at intarweb.us  Sun Jan  5 20:30:54 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Sun, 5 Jan 2003 22:30:54 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030106033054.GA15791@meson.dyndns.org>

On Sun, Jan 05, 2003 at 02:34:10PM -0800, Brian Warner wrote:
> Hi all..
> 

  Excellent write up of the problems, thanks :)

> [snip]
> 
>  rebuild attempts: missing __dict__ [5 failures]
>   twisted.python.rebuild attempts to rebuild a C module with no .__dict__
> 

  Checked in a fixed this group tonight.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
--
 12:00am up 20 days, 9:46, 2 users, load average: 0.10, 0.14, 0.10
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030105/cd5c217c/attachment.sig>

From twisted at itamarst.org  Sun Jan  5 21:50:17 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 5 Jan 2003 23:50:17 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030105.143410.28796355.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
Message-ID: <20030105235017.30debeef.twisted@itamarst.org>

On Sun, 05 Jan 2003 14:34:10 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

>  IReactorProcess [9 failures]
>   launching child processes is unimplemented 

>  IReactorMulticast [5 failures]
>   multicast support is not implemented
> 
>  IReactorUDP [23 failures]
>   UDP support is unimplemented

I'll fix the test suite to only run these tests if the appropriate
interface is implemented. There's no reason cReactor has to support UDP
or multicast, though it'd be nice if it implemented IFDSelector or
whatever it's called so that it could use the python UDP, SSL, process
and multicast code.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From tv at twistedmatrix.com  Sun Jan  5 21:06:08 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 6 Jan 2003 06:06:08 +0200
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030105084539.GD2630@Radii>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii>
Message-ID: <20030106040608.GA18843@ki.yok.utu.fi>

On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > TODO (maybe):
> ...
> > - Randomize execution order
> 
> Thought of something.
> 
> When this is implemented, it'll be very important (for obvious
> reasons) to have the execution order saved to some file on every run,
> with the ability to read in that file for future runs.

  Maybe just print out the PRNG seed you started with when exiting.

-- 
:(){ :|:&};:



From andrew-twisted at puzzling.org  Sun Jan  5 23:34:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 6 Jan 2003 17:34:17 +1100
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030106040608.GA18843@ki.yok.utu.fi>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii> <20030106040608.GA18843@ki.yok.utu.fi>
Message-ID: <20030106063417.GA30839@frobozz.local>

On Mon, Jan 06, 2003 at 06:06:08AM +0200, Tommi Virtanen wrote:
> On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > > TODO (maybe):
> > ...
> > > - Randomize execution order
> > 
> > Thought of something.
> > 
> > When this is implemented, it'll be very important (for obvious
> > reasons) to have the execution order saved to some file on every run,
> > with the ability to read in that file for future runs.
> 
>   Maybe just print out the PRNG seed you started with when exiting.

Hmm.  While Python's PRNG is pure python, so should give the same results
with the same seed on different platforms, I think saving the execution
order is better.  Consider the case of fixing a test that involves
generating more or less random numbers than before -- the act of fixing the
test loses the determinism you were hoping to preserve with the PRNG.

Also, it'd probably be nice if adding tests didn't interfere with
"replaying" a specific run of tests.

It's probably worth saving the PRNG with the execution order, though :)

-Andrew.




From exarkun at intarweb.us  Mon Jan  6 01:01:29 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 6 Jan 2003 03:01:29 -0500
Subject: [Twisted-Python] Trial - A replacement for pyunit.
In-Reply-To: <20030106063417.GA30839@frobozz.local>
References: <1041597350.2123.13.camel@sting> <1041736290.2384.9.camel@sting> <20030105084539.GD2630@Radii> <20030106040608.GA18843@ki.yok.utu.fi> <20030106063417.GA30839@frobozz.local>
Message-ID: <20030106080129.GA17493@meson.dyndns.org>

On Mon, Jan 06, 2003 at 05:34:17PM +1100, Andrew Bennetts wrote:
> On Mon, Jan 06, 2003 at 06:06:08AM +0200, Tommi Virtanen wrote:
> > On Sun, Jan 05, 2003 at 03:45:39AM -0500, Christopher Armstrong wrote:
> > > > TODO (maybe):
> > > ...
> > > > - Randomize execution order
> > > 
> > > Thought of something.
> > > 
> > > When this is implemented, it'll be very important (for obvious
> > > reasons) to have the execution order saved to some file on every run,
> > > with the ability to read in that file for future runs.
> > 
> >   Maybe just print out the PRNG seed you started with when exiting.
> 
> Hmm.  While Python's PRNG is pure python, so should give the same results
> with the same seed on different platforms, I think saving the execution
> order is better.  Consider the case of fixing a test that involves
> generating more or less random numbers than before -- the act of fixing the
> test loses the determinism you were hoping to preserve with the PRNG.
> 

  You could create a new Random object that is used exclusively by the test
framework.  Calls to its generation functions won't be interferred with by
calls to the "regular" functions, nor will it interfere with them.  I think
just saving the seed is a little cleaner and, imho, the unit tests already
leave far too much garbage lying around on the filesystem as it is ;)

    Jp

-- 
Where a calculator on the ENIAC is equipped with 18,000 vacuum tubes and
weighs 30 tons, computers in the future may have only 1,000 vacuum tubes and
weigh only 1.5 tons.    -- Popular Mechanics, March 1949
--
 12:00am up 21 days, 9:46, 1 user, load average: 0.04, 0.11, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030106/fc8b6023/attachment.sig>

From ldanielburr at earthlink.net  Mon Jan  6 11:14:18 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 06 Jan 2003 10:14:18 -0800
Subject: [Twisted-Python] How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>

I am currently designing a code-deploying service, to be used in conjunction
with a variety of source control tools.  I'm looking to use Twisted in the
implementation of the file-transfer mechanism, as Twisted's broad protocol
support would make it easy for me to switch from say, FTP to HTTP, or to some
custom protocol I roll myself.

I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
can't seem to grok is how to perform file uploads.  I've read through the
code, and it seems that the FTP server class supports RETR and STOR, using
DTPFactory, while FTPClient only supports RETR, and implements it
independently.

Basically, I'm lost as to how to connect FTPClient to DTPFactory, such that I
can send files from FTPClient.  I just need some pointers on how to accomplish
this; it seems like the code is there to do it, but I'm missing the necessary
Twisted mindset in this case.

Thanks for your help.

L. Daniel Burr



From warner at lothar.com  Mon Jan  6 12:33:32 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 11:33:32 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
Message-ID: <20030106.113332.114777670.warner@lothar.com>

> I'll fix the test suite to only run these tests if the appropriate
> interface is implemented. There's no reason cReactor has to support UDP
> or multicast, though it'd be nice if it implemented IFDSelector or
> whatever it's called so that it could use the python UDP, SSL, process
> and multicast code.

You might want to provide an easy way to turn those tests back on (bypassing
the "is-it-implemented" test). Unit tests are a good way to point out
functionality that hasn't been implemented yet. If the test suite appears to
pass cleanly, someone might be fooled into thinking that cReactor works just
as well as the others.

Of course, there might be other/better ways to signal that this reactor
behaves differently than all the others, and that this is a design decision
and not just as-yet-unimplemented functionality. (__implements__ comes to
mind, but I don't know how visible that would be to a user who's left
wondering why their program fails when run under cReactor).

Is there anyone here who is using cReactor? If so, what is important to you
about it? Is UDP a burning desire?

thanks,
 -Brian



From twisted at itamarst.org  Mon Jan  6 12:39:26 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 6 Jan 2003 14:39:26 -0500
Subject: [Twisted-Python] cReactor fixes
In-Reply-To: <20030106.113332.114777670.warner@lothar.com>
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
	<20030106.113332.114777670.warner@lothar.com>
Message-ID: <20030106143926.0ed479be.twisted@itamarst.org>

On Mon, 06 Jan 2003 11:33:32 -0800 (PST)
Brian Warner <warner at lothar.com> wrote:

> You might want to provide an easy way to turn those tests back on
> (bypassing the "is-it-implemented" test). Unit tests are a good way to
> point out functionality that hasn't been implemented yet. If the test
> suite appears to pass cleanly, someone might be fooled into thinking
> that cReactor works just as well as the others.

I don't see it as being that important, we just need a good README for
cReactor saying what it supports.

> Of course, there might be other/better ways to signal that this
> reactor behaves differently than all the others, and that this is a
> design decision and not just as-yet-unimplemented functionality.
> (__implements__ comes to mind, but I don't know how visible that would
> be to a user who's left wondering why their program fails when run
> under cReactor).

__implements__ is how I'm going to check if a reactor implements
something.

As I said, if cReactor has addReader/addWriter interface
twisted.internet.interfaces.IReactorFDSet, we get ssl, udp, multicast,
serial and process support almost for free using the python code for
these, until a C version is written.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From warner at lothar.com  Mon Jan  6 12:55:32 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 11:55:32 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105231912.GA30384@frobozz.local>
	<20030105.195246.59468345.glyph@twistedmatrix.com>
Message-ID: <20030106.115532.88728086.warner@lothar.com>

Glyph Lefkowitz <glyph at twistedmatrix.com> writes:
> 
> Ideally, I'd prefer that the reactor is *always* in a consistent state.
> That would probably involve redefining or removing the "crash" facility,
> since there would only be "pause and return so that run() continues" or
> "stop properly so run() restarts". Whatever compromise you come up with in
> this vein is probably acceptable, though.

What do you mean by "consistent"? Let me verify my understanding: we could
say that the two states are running and stopped, and that you can always
transition from one to the other. I'm guessing the reason for .crash and the
prohibition on running .start a second time is the systemEventTriggers, and a
desire to keep them from running more than once in any given process.

If we move to only two states and allow arbitrary transitions between them,
we'd probably have to declare that the triggers run on each transition.
Normal apps won't care, since they only start and stop once. The unit tests
would start/stop 0 or more times per test case, running triggers each time,
but the only triggers in place would probably be the ones added by the tests
themselves.

The other use for .crash listed in the docs is to avoid running shutdown
triggers. I've had programs where the shutdown.tap -writing routine raised an
exception, which appeared to cause the shutdown to abort and the program to
go back to the main loop. I had to kill it with SIGTERM to make it stop. I
imagine .crash could be used in an exception handler that wrapped app.save()
to terminate a program that was having trouble with the "after"-"shutdown"
event triggers. If that is useful, .crash would be just like .stop except it
wouldn't run the triggers.

So:
1: At boot time, we enter the "stopped" state
2: While we are in the "stopped" state, you may only run .start
3: .start moves us from "stopped" to "running" and runs "startup" triggers
4: While we are in the "running" state, you may only run .stop or .crash
5: .stop moves from "running" to "stopped" and runs "shutdown" triggers
6: .crash moves from "running" to "stopped" without running triggers

7: .reset does an implicit .stop, if necessary, before cleaning all reactor
state

All triggers remain attached until individually removed or reactor.reset() is
called, so an app that does .run(); .stop(); .run(); .stop(); is going to
have the triggers run multiple times. All other reactor state is preserved by
.stop and .crash (timers, sockets).


I think I've just restated what you said before, but this way if I got it
wrong somebody has the opportunity to correct my understanding before I get
around to writing any code :)

thanks,
 -Brian



From warner at lothar.com  Mon Jan  6 13:03:06 2003
From: warner at lothar.com (Brian Warner)
Date: Mon, 06 Jan 2003 12:03:06 -0800 (PST)
Subject: [Twisted-Python] cReactor fixes
References: <20030105.143410.28796355.warner@lothar.com>
	<20030105235017.30debeef.twisted@itamarst.org>
	<20030106.113332.114777670.warner@lothar.com>
	<20030106143926.0ed479be.twisted@itamarst.org>
Message-ID: <20030106.120306.70544703.warner@lothar.com>

Itamar Shtull-Trauring <twisted at itamarst.org> writes:
> 
> As I said, if cReactor has addReader/addWriter interface
> twisted.internet.interfaces.IReactorFDSet, we get ssl, udp, multicast,
> serial and process support almost for free using the python code for
> these, until a C version is written.

Good point. And, the performance difference between having the fileno
originate from python code vs. having it originate from C code won't be an
issue until you're creating lots of sockets, so as long as the functionality
is present, moving it to C can wait until someone has a need for it.

I'll look into gluing IReactorFDSet into cReactor.

 -Brian



From acapnotic at twistedmatrix.com  Mon Jan  6 13:42:38 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 06 Jan 2003 12:42:38 -0800
Subject: [Twisted-Python] [OT] PyCon accomodation?
In-Reply-To: <20030105022219.GA9891@frobozz.local>
References: <20030105022219.GA9891@frobozz.local>
Message-ID: <1041885756.1305.149.camel@troglodyte.funhouse>

just for the record

> I'm intending on going to PyCon [...] Basically I'm looking to do this on 
> the cheap; the airfare is expensive enough [...] any ideas on where I 
> could stay?  I'd probably be looking to stay from Sunday night 23rd (so I
> could attend the code sprint) through to Saturday the 29th, although I 
> haven't thought this out in detail.

Me Too,

 - Kevin

-- 
The moon is waxing crescent, 14.8% illuminated, 3.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030106/3554c0bf/attachment.sig>

From andrew-twisted at puzzling.org  Mon Jan  6 16:37:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 7 Jan 2003 10:37:22 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>
References: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net>
Message-ID: <20030106233722.GA32165@frobozz.local>

On Mon, Jan 06, 2003 at 10:14:18AM -0800,  Daniel Burr wrote:
> 
> I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
> can't seem to grok is how to perform file uploads.  I've read through the
> code, and it seems that the FTP server class supports RETR and STOR, using
> DTPFactory, while FTPClient only supports RETR, and implements it
> independently.

Yes, that's my fault.  I haven't gotten around to that yet -- I might have a
stab at it tonight, it shouldn't actually be that hard.  I'll try to make sure
I get this done in time for the 1.0.2 release.

Let me know if there are any other FTP commands you want implemented -- I've
also got MDTM on my todo list, which should be trivial (in fact, the
apt-proxy guys have already implemented it! :).  The current range of
commands more-or-less reflects what I needed for a previous job, and not
much more, but I'm happy to add any that someone else finds useful.  STOR is
definitely useful (and probably the hardest -- the code for uploading from
the client isn't really there yet).

> Basically, I'm lost as to how to connect FTPClient to DTPFactory, such that I
> can send files from FTPClient.  I just need some pointers on how to accomplish
> this; it seems like the code is there to do it, but I'm missing the necessary
> Twisted mindset in this case.

DTPFactory is part of the FTP server, which currently shares no code with
the client.  The server is desperately in need of a rewrite/refactoring to
use twisted.web (so that you can have dynamic resources, and the like).
This is on my longer-term todo list...

-Andrew.




From ldanielburr at earthlink.net  Mon Jan  6 20:47:48 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 06 Jan 2003 19:47:48 -0800
Subject: [Twisted-Python] How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>

On Tue, 7 Jan 2003 10:37:22, Andrew Bennetts wrote:

>Yes, that's my fault.  I haven't gotten around to
>that yet -- I might have a
>stab at it tonight, it shouldn't actually be that
>hard.  I'll try to make sure
>I get this done in time for the 1.0.2 release.

That'd be great; I'm interested to see how you do it, as I don't yet fully
understand the Twisted way.  I have always used Python's ftplib, so doing this
in a fully async manner is still a little mind-bending for me.

>Let me know if there are any other FTP commands
>you want implemented -- I've
>also got MDTM on my todo list, which should be
>trivial (in fact, the
>apt-proxy guys have already implemented it! :).

Well, since you asked, I could really use MKD and RMD too, since I am copying
a directory hierarchy from one server to another, and the target server may
not already have the correct directory layout.

>The server is desperately in need of a
>rewrite/refactoring to
>use twisted.web (so that you can have dynamic
>resources, and the like).
>This is on my longer-term todo list...
>
>-Andrew.

That sounds pretty cool, although I'll be perfectly happy if FTPClient can
reproduce the current functionality of ftplib.

On a semi-related note, I'm thinking about trying to write a Protocol/Factory
to handle the SCC protocol used by PVCS, SourceSafe, and a few other
commercial source control tools.  I'm thinking in terms of a Twisted.vcs
plugin.  Is this a good idea, or is this really not what Twisted is best used
for?

Thanks for the help,

L. Daniel Burr

Thanks for your help,

L. Daniel Burr



From andrew-twisted at puzzling.org  Mon Jan  6 21:05:15 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 7 Jan 2003 15:05:15 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>
References: <Springmail.0994.1041911268.0.97144700@webmail.pas.earthlink.net>
Message-ID: <20030107040515.GB32165@frobozz.local>

On Mon, Jan 06, 2003 at 07:47:48PM -0800,  Daniel Burr wrote:
> On Tue, 7 Jan 2003 10:37:22, Andrew Bennetts wrote:
> 
> >Yes, that's my fault.  I haven't gotten around to
> >that yet -- I might have a
> >stab at it tonight, it shouldn't actually be that
> >hard.  I'll try to make sure
> >I get this done in time for the 1.0.2 release.
> 
> That'd be great; I'm interested to see how you do it, as I don't yet fully
> understand the Twisted way.  I have always used Python's ftplib, so doing this
> in a fully async manner is still a little mind-bending for me.

The FTPClient isn't the prettiest code in Twisted, but it's alot better than
it used to be ;)

The key to understanding Twisted is really Deferreds, I think.  Once you
understand those, the rest starts to fall in place nicely.

> >Let me know if there are any other FTP commands
> >you want implemented -- I've
> >also got MDTM on my todo list, which should be
> >trivial (in fact, the
> >apt-proxy guys have already implemented it! :).
> 
> Well, since you asked, I could really use MKD and RMD too, since I am copying
> a directory hierarchy from one server to another, and the target server may
> not already have the correct directory layout.

Ah!  Good idea.

> >The server is desperately in need of a
> >rewrite/refactoring to
> >use twisted.web (so that you can have dynamic
> >resources, and the like).
> >This is on my longer-term todo list...
> >
> >-Andrew.
> 
> That sounds pretty cool, although I'll be perfectly happy if FTPClient can
> reproduce the current functionality of ftplib.

Well, I'm more inclined to spend time on adding a feature if I know
someone wants to/would use it, so keep pestering me :)

> On a semi-related note, I'm thinking about trying to write a Protocol/Factory
> to handle the SCC protocol used by PVCS, SourceSafe, and a few other
> commercial source control tools.  I'm thinking in terms of a Twisted.vcs
> plugin.  Is this a good idea, or is this really not what Twisted is best used
> for?

That sounds reasonable to me.  I know at least one of the Twisted developers
is keen to have WebDAV support, so that they can run Subversion without
Apache.

-Andrew.




From bh at intevation.de  Tue Jan  7 04:11:45 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 07 Jan 2003 12:11:45 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
Message-ID: <6qptr943ke.fsf@salmakis.intevation.de>

I wanted to get back to this sooner, but another project and
xmas+newyear intervened...

Moshe Zadka <m at moshez.org> writes:

> Hi Bernhard!

Hi Moshe!

> Glad to see you're using Twisted.

The decision to use Twisted was easy because 

a) I've met at least two of the Twisted developers so I know it's in
good hands :),

b) I've used asyncore in a different project and after a while I was
itching to do a substantial rewrite of asyncore, and

c) That other project's infrastructure was evolving in the direction of
twisted in some aspects

> > If there's interest in including my test case base class in twisted I
> > could make it available sooner and under LGPL.

The test base class is finally publically available inder GPL for now:
http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain

It's actually two mix-in classes to unittest.TestCase like test cases.
 
> FYI: Twisted patches must also be copyrighted by Glyph.

I'd have to clarify that with my employer, but that shouldn't be a
problem, as we regularly contribute back to Free Software packages we
use if we have something worthwhile to contribute.


   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From m at moshez.org  Tue Jan  7 05:42:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jan 2003 12:42:32 -0000
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qptr943ke.fsf@salmakis.intevation.de>
References: <6qptr943ke.fsf@salmakis.intevation.de>, <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
Message-ID: <20030107124232.14788.qmail@green.zadka.com>

On 07 Jan 2003, Bernhard Herzog <bh at intevation.de> wrote:

> The test base class is finally publically available inder GPL for now:
> http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain
> 
> It's actually two mix-in classes to unittest.TestCase like test cases.

Sounds nice.
Recently we moved to twisted.trial from pyunit: see latest CVS.
The interface is compatible, and the trial maintainer said your stuff
looks neat -- but I'll let him respond in fullness.

Thanks!
Moshe



From bh at intevation.de  Tue Jan  7 08:09:34 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 07 Jan 2003 16:09:34 +0100
Subject: [Twisted-Python] Writing Unittests for Twisted Applications
In-Reply-To: <6qptr943ke.fsf@salmakis.intevation.de>
References: <6qd6ohejnq.fsf@salmakis.intevation.de>
	<20021204183926.32354.qmail@green.zadka.com>
	<6qptr943ke.fsf@salmakis.intevation.de>
Message-ID: <6qk7hh3sk1.fsf@salmakis.intevation.de>

I wrote:

[Mixin classes for tests that use reactors]
> The test base class is finally publically available inder GPL for now:
> http://www.intevation.de/cgi-bin/viewcvs-greater.cgi/*checkout*/GREAT-ERModel/test/reactormixins.py?rev=1.1&content-type=text/plain

Someone asked for a usage example in private mail. There are a few test
cases in the same CVS repository that use the mix-ins, but more
illustrative is probably a very simple example like this:


import unittest

from reactormixins import ReactorMixin

class Test(unittest.TestCase, ReactorMixin):

    def setUp(self):
        """Extend inherited method to set later_has_been_called to 0"""
        self.later_has_been_called = 0
        ReactorMixin.setUp(self)

    def test(self):
        """Simple test to show how to use ReactorMixin"""
        # scheduler self.later to be run after 0.1 seconds
        self.callLater(0.1, self.later)

        # run the reactor with a 10s time out
        self.run_reactor(10)

        self.assert_(self.later_has_been_called)

    def later(self):
        """Record that later has been called and stop the reactor"""
        self.later_has_been_called = 1
        self.stop_reactor()

if __name__ == "__main__":
    unittest.main()


This example doesn't do any networking but should give an idea of how to
use the mixin classes.

The networking support in the mixins is currently limited to listening
because that all I needed so far. My testcases start sub-processes that
connect to the reactor in the test case.

   Bernhard

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From radix at twistedmatrix.com  Tue Jan  7 10:42:17 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 7 Jan 2003 12:42:17 -0500
Subject: [Twisted-Python] twisted.lore: `class="API" base="twisted.foo"' feature broken
Message-ID: <20030107174217.GA21590@Radii>

Or seems to be, anyway. e.g.,

http://twistedmatrix.com/documents/howto/woven

Notice that all links that don't have the entire `twisted.foo...'
prefix are broken; the `base' attribute isn't being honored (you won't
see the attributes in the source of that page, but look at
doc/howto/woven.html in CVS). I looked at twisted.lore.tree and didn't
see anything obviously wrong.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From m at moshez.org  Tue Jan  7 11:41:32 2003
From: m at moshez.org (Moshe Zadka)
Date: 7 Jan 2003 18:41:32 -0000
Subject: [Twisted-Python] twisted.lore: `class="API" base="twisted.foo"' feature broken
In-Reply-To: <20030107174217.GA21590@Radii>
References: <20030107174217.GA21590@Radii>
Message-ID: <20030107184132.18585.qmail@green.zadka.com>

On Tue, 7 Jan 2003, Christopher Armstrong <radix at twistedmatrix.com> wrote:

> Notice that all links that don't have the entire `twisted.foo...'
> prefix are broken; the `base' attribute isn't being honored (you won't
> see the attributes in the source of that page, but look at
> doc/howto/woven.html in CVS). I looked at twisted.lore.tree and didn't
> see anything obviously wrong.

Fixed now.



From andrew-twisted at puzzling.org  Wed Jan  8 05:53:17 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 8 Jan 2003 23:53:17 +1100
Subject: [Twisted-Python] How do I upload files using FTPClient?
In-Reply-To: <20030106233722.GA32165@frobozz.local>
References: <Springmail.0994.1041876859.0.07496900@webmail.pas.earthlink.net> <20030106233722.GA32165@frobozz.local>
Message-ID: <20030108125317.GD10826@frobozz.local>

On Tue, Jan 07, 2003 at 10:37:22AM +1100, Andrew Bennetts wrote:
> On Mon, Jan 06, 2003 at 10:14:18AM -0800,  Daniel Burr wrote:
> > 
> > I've experimented with twisted.protocols.ftp.FTPClient, and the one thing I
> > can't seem to grok is how to perform file uploads.  I've read through the
> > code, and it seems that the FTP server class supports RETR and STOR, using
> > DTPFactory, while FTPClient only supports RETR, and implements it
> > independently.
> 
> Yes, that's my fault.  I haven't gotten around to that yet -- I might have a
> stab at it tonight, it shouldn't actually be that hard.  I'll try to make sure
> I get this done in time for the 1.0.2 release.

Just letting you know I haven't forgotten about this, but solving this
properly really involves refactoring the mess in FTPClient.retrieve... and
if I do that properly, it'll make my planned rewrite of the FTP server alot
easier, as it ought to be able to re-use the code.  Unfortunately this means
it might take a few more days before this happens.

-Andrew.




From andrew-twisted at puzzling.org  Sat Jan 11 07:31:09 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 12 Jan 2003 01:31:09 +1100
Subject: [Twisted-Python] Documentation Lacks
In-Reply-To: <20030105044532.GB26857@ferd2.thristian.org>
References: <20021228105407.10208.qmail@green.zadka.com> <20030101035538.GR944@ferd2.thristian.org> <20030101043247.GA12923@frobozz.local> <20030105042125.GA26857@ferd2.thristian.org> <20030105044532.GB26857@ferd2.thristian.org>
Message-ID: <20030111143109.GA7666@frobozz.local>

On Sun, Jan 05, 2003 at 03:45:32PM +1100, screwtape at froup.com wrote:
> On Sun, Jan 05, 2003 at 03:21:26PM +1100, screwtape at froup.com wrote:
> > 
> > Well, I've had a go at documenting my experiences with Twisted IM.
> > How's this?
> 
> Andrew tapped me on the shoulder on IRC and told me where to find
> hlint. 

I've checked this in (with some minor adjustments).  Thanks!

-Andrew.




From acapnotic at twistedmatrix.com  Sat Jan 11 21:48:33 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Jan 2003 20:48:33 -0800
Subject: [Twisted-Python] twisted.im has no tests
Message-ID: <1042346911.31601.18.camel@troglodyte.funhouse>

WARNING: The next person to work with twisted.im, be it radix, myself,
or someone else, is most likely going to break shit, because this
package needs some reconstructive surgery.  Currently, there are NO
TESTS for this package, nothing to tell us how much we've broken.  And
if we don't know how much we've broken, there's no reason to feel guilty
about it, right?

The upshot of this is that if you're using this package and there's
something that you need not to break, or maybe broken a little but at
least not be rewritten out of existence, WRITE TESTS NOW.

Cheers,

 - Kevin

-- 
The moon is first quarter, 62.1% illuminated, 8.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030111/822f8e7f/attachment.sig>

From screwtape at froup.com  Sat Jan 11 22:46:18 2003
From: screwtape at froup.com (screwtape at froup.com)
Date: Sun, 12 Jan 2003 16:46:18 +1100
Subject: [Twisted-Python] Another twisted-im patch
Message-ID: <20030112054617.GA24415@ferd2.thristian.org>

Notwithstanding the last message about twisted.im being nuked and
replaced with something almost but not quite entirely different :)
here's a diff that I feel makes twisted-im a little more useful.

-- 
 ___________ ____________________________
| Screwtape | Reply-To: munged on Usenet |________ ______ ____ __ _  _   _
|
| "The cruel angel's thesis bleeds" 
|
-------------- next part --------------
Index: twisted/im/ircsupport.py
===================================================================
RCS file: /cvs/Twisted/twisted/im/ircsupport.py,v
retrieving revision 1.21
diff -u -r1.21 ircsupport.py
--- twisted/im/ircsupport.py	12 Jan 2003 04:28:45 -0000	1.21
+++ twisted/im/ircsupport.py	12 Jan 2003 05:35:51 -0000
@@ -40,11 +40,12 @@
         self.status=status
         self.chat.getContactsList().setContactStatus(self)
 
-    def sendMessage(self, text, meta=None):
-        if meta and meta.get("style", None) == "emote":
-            self.client.ctcpMakeQuery(self.name,[('ACTION', text)])
-            return succeed(text)
-        self.client.msg(self.name,text)
+    def sendMessage(self, text, meta={}):
+        for line in string.split(text, '\n'):
+            if meta and meta.get("style", None) == "emote":
+                self.client.ctcpMakeQuery(self.name,[('ACTION', line)])
+            else:
+                self.client.msg(self.name, line)
         return succeed(text)
 
 class IRCGroup(basesupport.AbstractGroup):
@@ -96,7 +97,7 @@
             if self.account.password:
                 self.sendLine("PASS :%s" % self.account.password)
             self.setNick(self.account.nickname)
-            self.sendLine("USER %s foo bar :GTK-IM user"%self.nickname)
+            self.sendLine("USER %s foo bar :Twisted-IM user"%self.nickname)
             for channel in self.account.channels:
                 self.joinGroup(channel)
             self.account._isOnline=1

From glyph at twistedmatrix.com  Sun Jan 12 11:32:16 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jan 2003 12:32:16 -0600 (CST)
Subject: [Twisted-Python] twisted.im has no tests
In-Reply-To: <1042346911.31601.18.camel@troglodyte.funhouse>
References: <1042346911.31601.18.camel@troglodyte.funhouse>
Message-ID: <20030112.123216.55515263.glyph@twistedmatrix.com>


I'd really like for what little Jython code there is right now not to break.
This is rather hard to write a unit test for, though, and I imagine most people
who are making changes to IM would not see it break.

There are acceptance tests that involve running im against Words, so please use
those, if you can.

Thanks for the heads-up.

On 11 Jan 2003 20:48:33 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> The upshot of this is that if you're using this package and there's something
> that you need not to break, or maybe broken a little but at least not be
> rewritten out of existence, WRITE TESTS NOW.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030112/ca4ab3c0/attachment.sig>

From glyph at twistedmatrix.com  Sun Jan 12 11:39:43 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 12 Jan 2003 12:39:43 -0600 (CST)
Subject: [Twisted-Python] twisted.im has no tests
In-Reply-To: <1042346911.31601.18.camel@troglodyte.funhouse>
References: <1042346911.31601.18.camel@troglodyte.funhouse>
Message-ID: <20030112.123943.112282247.glyph@twistedmatrix.com>

On 11 Jan 2003 20:48:33 -0800, Kevin Turner <acapnotic at twistedmatrix.com> wrote:

> this package needs some reconstructive surgery.

One other thing...

I am planning on developing some external code very soon which will rely upon
IM.  While I recognize that this reconstructive surgery is necessary, and I
don't want to get in your way, please take the trouble to provide documentation
for any changed interfaces (or better yet, backwards-compatibility and warnings
-- but this might be too difficult to be worthwhile).  If you don't, I may have
to revert your changes temporarily in order to get my demo working.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030112/730e7e49/attachment.sig>

From radix at twistedmatrix.com  Sun Jan 12 13:22:49 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sun, 12 Jan 2003 15:22:49 -0500
Subject: [Twisted-Python] developer sprint at PyCon
Message-ID: <20030112202249.GB31014@Radii>

So here are three suggestions for what we can hack on during the devel sprint.

* Adapterize/Componentize PB (this came up when Sylane was trying to make an
  object both Referenceable and Cacheable today)
* Twisted Reality
* Woven

I'm more interested in the first two, personally.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From pp64 at cornell.edu  Sun Jan 12 20:26:21 2003
From: pp64 at cornell.edu (Pavel Pergamenshchik)
Date: Sun, 12 Jan 2003 19:26:21 -0800
Subject: [Twisted-Python] twisted.python.plugin
Message-ID: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>

Hi.
I extended t.py.p to use deferreds. The code is somewhat hideous and about
three times as slow, but at least it's asynchronous. There's a much more
elegant way to do it using generators. Hopefully, at some point in the
future Python 2.2 will be the minimum supported version.

diff is at http://people.cornell.edu/pages/pp64/tpypdiff





From andrew-twisted at puzzling.org  Sun Jan 12 23:43:31 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 13 Jan 2003 17:43:31 +1100
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
Message-ID: <20030113064331.GD15720@frobozz.local>

Hi,

Is there any reason why we shouldn't add:

    warnings.warn(
        'twisted.internet.main is deprecated.  '
        'Use twisted.internet.reactor instead.', 
        DeprecationWarning,
        stacklevel=2
    )

to every function in twisted.internet.main (except perhaps installReactor)?

At the very least, I think a PendingDeprecationWarning would be appropriate
(they are invisible by default).  There are still parts of Twisted that use
this old module (e.g. t.e.adbapi), and I expect this will be the case until
we have some nice big warnings jump up at us telling us to fix them :)

-Andrew.




From bob at redivi.com  Mon Jan 13 04:09:17 2003
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 13 Jan 2003 06:09:17 -0500
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
In-Reply-To: <20030113064331.GD15720@frobozz.local>
Message-ID: <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>

On Monday, Jan 13, 2003, at 01:43 America/New_York, Andrew Bennetts 
wrote:

> At the very least, I think a PendingDeprecationWarning would be 
> appropriate
> (they are invisible by default).  There are still parts of Twisted 
> that use
> this old module (e.g. t.e.adbapi), and I expect this will be the case 
> until
> we have some nice big warnings jump up at us telling us to fix them :)

as of a few hours ago, t.e.adbapi no longer even imports main (uses 
reactor.addSystemEventTrigger instead).

-bob




From andrew-twisted at puzzling.org  Mon Jan 13 04:38:55 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 13 Jan 2003 22:38:55 +1100
Subject: [Twisted-Python] Adding DeprecationWarnings to twisted.internet.main
In-Reply-To: <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>
References: <20030113064331.GD15720@frobozz.local> <756B7C67-26E7-11D7-B784-000A95686CD8@redivi.com>
Message-ID: <20030113113855.GA12112@frobozz.local>

On Mon, Jan 13, 2003 at 06:09:17AM -0500, Bob Ippolito wrote:
> 
> On Monday, Jan 13, 2003, at 01:43 America/New_York, Andrew Bennetts 
> wrote:
> 
> >At the very least, I think a PendingDeprecationWarning would be
> >appropriate (they are invisible by default).  There are still parts of
> >Twisted that use this old module (e.g. t.e.adbapi), and I expect this
> >will be the case until we have some nice big warnings jump up at us
> >telling us to fix them :)
> 
> as of a few hours ago, t.e.adbapi no longer even imports main (uses 
> reactor.addSystemEventTrigger instead).

Heh :)

I'll take that as one more reason why we should add DeprecationWarning to
t.i.main ;)

-Andrew.




From andrew-twisted at puzzling.org  Mon Jan 13 07:18:01 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 14 Jan 2003 01:18:01 +1100
Subject: [Twisted-Python] In case anyone is bored... fun with tests!
Message-ID: <20030113141801.GC12112@frobozz.local>

There's a little bit of work to be done :)

Try running:
    python -Werror bin/trial -p twisted.test

(i.e. turn warnings into errors, thus making them register with trial...
hmm, perhaps trial should somehow hook into the warnings framework to make
it log these errors automagically?)

Under Python 2.2, I currently see: 
    FAILED (failures=4, errors=22)

Python 2.3a1 adds extra fun, thanks to the "hex/oct constants > sys.maxint
will return positive values in Python 2.4 and up" warning.

Also, I discovered that if I hit ^S then ^Q during testReadLimit, then all
subsequent tests fail, apparently due to the pendingTimedCalls never getting
cleared?  I'm a bit surprised by this one, but I did manage to reproduce it,
so I guess it must be real ;)

-Andrew.




From radix at twistedmatrix.com  Mon Jan 13 07:21:23 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 13 Jan 2003 09:21:23 -0500
Subject: [Twisted-Python] In case anyone is bored... fun with tests!
In-Reply-To: <20030113141801.GC12112@frobozz.local>
References: <20030113141801.GC12112@frobozz.local>
Message-ID: <20030113142123.GC31014@Radii>

On Tue, Jan 14, 2003 at 01:18:01AM +1100, Andrew Bennetts wrote:
> hmm, perhaps trial should somehow hook into the warnings framework to make
> it log these errors automagically?)

See twisted.python.log.showwarning and the two lines immediately below
it for an example of hooking into the warnings system (yes, that
really is the API you're supposed to use to do it).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From ldanielburr at earthlink.net  Mon Jan 13 18:14:26 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 13 Jan 2003 17:14:26 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>

On Wed, Jan 08, 2003 at 23:53:17 +1100 Andrew Bennetts wrote:

>> Yes, that's my fault.  I haven't gotten around
>> to that yet -- I might have a stab at it
>> tonight, it shouldn't actually be that hard.
>> I'll try to make sure  I get this done in time
>> for the 1.0.2 release.

That would be awesome; I'd be interested in contributing some code/tests/docs
for the revised module.

>
> Just letting you know I haven't forgotten about
> this, but solving this properly really involves
> refactoring the mess in FTPClient.retrieve...
> and if I do that properly, it'll make my planned
> rewrite of the FTP server alot easier, as it
> ought to be able to re-use the code.
> Unfortunately this means it might take a few
> more days before this happens.
>
> -Andrew.

While you are still thinking about the solution, might I suggest something
with regard to FTPClient ?

I've been going over the existing python ftplib.FTP code, as well as
twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why don't
either of these classes implement the client commands in the manner that your
typical command-line FTP client does?  I think FTPClient should have simple
methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
developer's viewpoint, you'd just use FTPClient in the same manner as you
would an interactive ftp client session; the actual queueing of commands,
creation of Deferreds, and callbacks could be hidden away a little more easily
then, and make life easier for developers just looking to roll a simple FTP
client application using Twisted.

Thanks for listening,

L. Daniel Burr



From glyph at twistedmatrix.com  Mon Jan 13 18:47:30 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 13 Jan 2003 19:47:30 -0600 (CST)
Subject: [Twisted-Python] twisted.python.plugin
In-Reply-To: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>
References: <005f01c2bab3$8b77ed00$0400a8c0@stmnca.adelphia.net>
Message-ID: <20030113.194730.112201236.glyph@twistedmatrix.com>


On Sun, 12 Jan 2003 19:26:21 -0800, "Pavel Pergamenshchik" <pp64 at cornell.edu> wrote:
> I extended t.py.p to use deferreds. The code is somewhat hideous and about
> three times as slow, but at least it's asynchronous. There's a much more
> elegant way to do it using generators. Hopefully, at some point in the
> future Python 2.2 will be the minimum supported version.

Thanks for the effort, but this code is used most frequently from "mktap",
which is a command-line program and already performs agonizingly slowly for
something that should be instant-response.

In the plugin loader we need optimization before asynchrony (especially because
you'll never be loading code from a high-latency source).

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030113/1cd48be8/attachment.sig>

From andrew-twisted at puzzling.org  Mon Jan 13 19:21:54 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 14 Jan 2003 13:21:54 +1100
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>
References: <Springmail.0994.1042506866.0.73757900@webmail.pas.earthlink.net>
Message-ID: <20030114022154.GC27010@frobozz.local>

On Mon, Jan 13, 2003 at 05:14:26PM -0800,  Daniel Burr wrote:
> On Wed, Jan 08, 2003 at 23:53:17 +1100 Andrew Bennetts wrote:
> 
> >> Yes, that's my fault.  I haven't gotten around
> >> to that yet -- I might have a stab at it
> >> tonight, it shouldn't actually be that hard.
> >> I'll try to make sure  I get this done in time
> >> for the 1.0.2 release.
> 
> That would be awesome; I'd be interested in contributing some code/tests/docs
> for the revised module.

Now *that* would be awesome! :)

> > Just letting you know I haven't forgotten about
> > this, but solving this properly really involves
> > refactoring the mess in FTPClient.retrieve...
> > and if I do that properly, it'll make my planned
> > rewrite of the FTP server alot easier, as it
> > ought to be able to re-use the code.
> > Unfortunately this means it might take a few
> > more days before this happens.
> >
> > -Andrew.
> 
> While you are still thinking about the solution, might I suggest something
> with regard to FTPClient ?

Of course!  And you'd be welcome to even if I wasn't thinking about it.

> I've been going over the existing python ftplib.FTP code, as well as
> twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why don't
> either of these classes implement the client commands in the manner that your
> typical command-line FTP client does?  I think FTPClient should have simple
> methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
> developer's viewpoint, you'd just use FTPClient in the same manner as you
> would an interactive ftp client session; the actual queueing of commands,
> creation of Deferreds, and callbacks could be hidden away a little more easily
> then, and make life easier for developers just looking to roll a simple FTP
> client application using Twisted.

Indeed.  FTPClient is already almost this simple for simple FTP commands,
ones that don't require opening a data socket.  This is stuff like CWD, MKD,
etc.  The only unfriendly thing about it is it currently doesn't offer much
help with parsing the response, beyond stating that it is a success or a
failure (by calling your Deferred's callback or errback) -- but that's
probably all you care about.

There are a fair few of these I haven't wrapped up yet, for instance
"binary" (which is the "TYPE I" command, and I issue that automatically on
log in anyway -- is there ever any time when you *don't* want this?).

The problem is "get", which is not that simple, let alone stuff like mget
that has no one-to-one analogy with the raw protocol.  I don't think
FTPClient should be restricted to thinking everything is a file on disk --
you may want to process the data incrementally in another way [I certainly
did :) ].  Of course, most of the time, you probably want to just write it
to a file.

Thus I think I may need two layers; the current FTPClient is the low-level
plumbing that you don't interact with unless you need it's generality, and
then there's a higher-level interface that provides things like mget.  It's
entirely possible that I can fit this all into one class after all, but I'm
not sure yet.

So in summary, I want to allow for nifty/insane things like directly
funnelling data from e.g. an HTTP download into an FTP upload -- but I also
want a class that's straightforward to use in the common case as well.

What I'd really like from you, if you don't mind, is a sketch of what *you*
think the API should look like for the high-level interface.  Hopefully
that'll help me design this in a way that satisfies everyone :)

-Andrew.




From ldanielburr at earthlink.net  Mon Jan 13 21:38:33 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Mon, 13 Jan 2003 20:38:33 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042519113.0.44339500@webmail.pas.earthlink.net>

On Tue, 14 Jan 2003 at 13:21:54 +1100,  Andrew Bennetts wrote:
>On Mon, Jan 13, 2003 at 05:14:26PM -0800,  Daniel Burr wrote:
>> That would be awesome; I'd be interested in contributing some
code/tests/docs
>> for the revised module.
>
>Now *that* would be awesome! :)

Well, I think I grok the whole Deferred thing now,
and I'm poring over the Twisted developer docs for
information about contributing.  The only hurdle I
have to clear is getting up to speed with CVS.

It looks like the best place to start is writing
some tests for the proposed "high-level" ftp
interface.  That should help me to define it.

>> I've been going over the existing python ftplib.FTP code, as well as
>> twisted.protocols.ftp.FTPClient, and I'm left wondering one thing:  Why
don't
>> either of these classes implement the client commands in the manner that
your
>> typical command-line FTP client does?  I think FTPClient should have simple
>> methods, like "binary", "get", "mget", "mkdir", et cetera.  From the
>> developer's viewpoint, you'd just use FTPClient in the same manner as you
>> would an interactive ftp client session; the actual queueing of commands,
>> creation of Deferreds, and callbacks could be hidden away a little more
easily
>> then, and make life easier for developers just looking to roll a simple FTP
>> client application using Twisted.
>
>Indeed.  FTPClient is already almost this simple
>for simple FTP commands, ones that don't require
>opening a data socket.  This is stuff like CWD,
>MKD,etc.  The only unfriendly thing about it is
>it currently doesn't offer much help with parsing
>the response, beyond stating that it is a success
>or a failure (by calling your Deferred's callback
>or errback) -- but that's probably all you care
>about.

Yep, for those basic commands I think we are well
covered.

As for parsing the response, I noticed that the
effbot has some ftp-parsing code, I'll take a look
at that, and see if it contains any ideas.

>There are a fair few of these I haven't wrapped
>up yet, for instance "binary" (which is the "TYPE
>I" command, and I issue that automatically on log
>in anyway -- is there ever any time when you
>*don't* want this?).

Not that I can think of; the first thing I always
do in an interactive FTP session is to issue the
"binary" command.

>The problem is "get", which is not that simple,
>let alone stuff like mget that has no one-to-one
>analogy with the raw protocol.  I don't think
>FTPClient should be restricted to thinking
>everything is a file on disk -- you may want to
>process the data incrementally in another way [I
>certainly did :) ].  Of course, most of the time,
>you probably want to just write it to a file.

To be honest, I can't think of a single scenario
in which I wouldn't be using FTP to put a file
to disk or get a file from disk.  Granted, I am
not blessed with much in the way of imagination...
;)

>Thus I think I may need two layers; the current
>FTPClient is the low-level plumbing that you
>don't interact with unless you need it's
>generality, and then there's a higher-level
>interface that provides things like mget.  It's
>entirely possible that I can fit this all into
>one class after all, but I'm not sure yet.

I think putting it all into twisted.protocols.ftp
would suffice.  All in one class sounds harder.

>So in summary, I want to allow for nifty/insane
>things like directly funnelling data from e.g. an
>HTTP download into an FTP upload -- but I also
>want a class that's straightforward to use in the
>common case as well.

This sounds fine to me; obviously I'm really only
interested in the common case, but nifty/insane
stuff is cool too. ;)

>What I'd really like from you, if you don't mind,
>is a sketch of what *you* think the API should
>look like for the high-level interface.
>Hopefully that'll help me design this in a way
>that satisfies everyone :)
>
>-Andrew.

I think the API for the high-level client should
basically be identical to what you would use for
an interactive FTP session.  I'll do some thinking
on this and post a rough draft by the weekend.

L. Daniel Burr



From twisted at sylane.com  Tue Jan 14 09:46:34 2003
From: twisted at sylane.com (Sylane)
Date: Tue, 14 Jan 2003 17:46:34 +0100
Subject: [Twisted-Python] First contribution...
Message-ID: <2770835065.20030114174634@sylane.com>

Hello twisted people,

      I actually working on the simplistic implementation of a complex
      spread example... soon in your best mailing list...

      But for now a little diff for pb... I hop it will be applied
      because my example don't work very nice without it...

--snip-snip--------------------------------------------------------
--- ./twisted/spread/pb-orig.py  Tue Jan 14 17:12:47 2003
+++ ./twisted/spread/pb.py     Tue Jan 14 17:23:51 2003
@@ -543,8 +543,18 @@
                 try:
                     d.errback(failure.Failure(PBConnectionLost()))
                 except:
-                    log.deferr()
-        for notifier in self.disconnects:
+                    log.deferr()
+        # Assure all Cacheable.stoppedObserving are called
+        for lobj in self.remotelyCachedObjects.values():
+            cacheable = lobj.object
+            perspective = lobj.perspective
+            try:
+                cacheable.stoppedObserving(perspective, RemoteCacheObserver(self, cacheable, perspective))
+            except:
+                log.deferr()        
+        # Loop on a copy to prevent notifiers to mixup
+        # the list by calling dontNotifyOnDisconnect
+        for notifier in self.disconnects[:]:
             try:
                 notifier()
             except:
--snip-snip--------------------------------------------------------
  

-- 
Best regards,
 Sylane                          mailto:twisted at sylane.com




From xavier at plebia.org  Tue Jan 14 12:23:14 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 20:23:14 +0100
Subject: [Twisted-Python] Woven
Message-ID: <20030114202314.2949ecd1.xavier@plebia.org>

Hello all,

I have spent most of the day looking at the documentation of Twisted,
and I am quite impressed. What a wonderful toy ! It is like Christmas a
second time in the year. Congratulations to you happy hackers, you have
accomplished a tremendous job.

However, I have a question regarding Woven; as the howto ends quite
abruptly, I have tried to figure out how I could build a web interface I
planned to develop in a more usual way. But I quickly became puzzled by
the lack of examples, and a quick look on the sources only helped a bit.

Is Woven usable at this state ? This question is based on a limitation I
encountered while trying to make the menu of my interface : I could not
find a way to build a link (Anchor) with a text different from the href
parameter. I found a message from Donovan Preston in this list's
archives
(http://twistedmatrix.com/pipermail/twisted-python/2002-December/002426
.html) stating that it was not possible with the actual Anchor widget. I
would have the option to write a subclass of Anchor implementing what I
need, but finding such a limitation on the first widget I look at is
disturbing. :-)

If Woven is usable, can you point some examples of realizations using
it, and/or some good example sources to get started ?

Thank you !

-- 
Xavier.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030114/3873ccbc/attachment.sig>

From twisted at itamarst.org  Tue Jan 14 12:29:04 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 14 Jan 2003 14:29:04 -0500
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114202314.2949ecd1.xavier@plebia.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
Message-ID: <20030114142904.3cf7ba51.twisted@itamarst.org>

On Tue, 14 Jan 2003 20:23:14 +0100
Xavier Antoviaque <xavier at plebia.org> wrote:

> Is Woven usable at this state ? This question is based on a limitation
> I encountered while trying to make the menu of my interface : I could
> not find a way to build a link (Anchor) with a text different from the
> href parameter.

It's quite usable, but very undocumented, yes. For links, use a Link
widget instead of an Anchor widget. For examples, see Issues and Blog in
twistedmatrix.com CVS - they both should be accessable via the web
viewcvs link from the CVS page on the website.

--
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From glyph at twistedmatrix.com  Tue Jan 14 13:47:29 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Jan 2003 14:47:29 -0600 (CST)
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114142904.3cf7ba51.twisted@itamarst.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
Message-ID: <20030114.144729.42693910.glyph@twistedmatrix.com>


On Tue, 14 Jan 2003 14:29:04 -0500, Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> It's quite usable, but very undocumented, yes. For links, use a Link widget
> instead of an Anchor widget. For examples, see Issues and Blog in
> twistedmatrix.com CVS - they both should be accessable via the web viewcvs
> link from the CVS page on the website.

If you're interested in using Woven, I highly recommend tracking CVS.  It's the
most actively developed part of Twisted right now, since several people
(including myself) are developing the first generation of applications using
woven+twisted, and we're discovering features that need to be added.

This Link class that Itamar mentions is one such feature: it's only available
in CVS currently, or in the 1.0.2 alpha.



-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030114/87e28283/attachment.sig>

From xavier at plebia.org  Tue Jan 14 14:32:29 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:32:29 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114.144729.42693910.glyph@twistedmatrix.com>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
	<20030114.144729.42693910.glyph@twistedmatrix.com>
Message-ID: <20030114223229.242af43e.xavier@plebia.org>

On Tue, 14 Jan 2003 14:47:29 -0600 (CST)
Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> If you're interested in using Woven, I highly recommend tracking CVS. 
> It's the most actively developed part of Twisted right now, since
> several people(including myself) are developing the first generation
> of applications using woven+twisted, and we're discovering features
> that need to be added.

I just grabbed the CVS version; I also suscribed to twisted-commits to
track modifications.

> This Link class that Itamar mentions is one such feature: it's only
> available in CVS currently, or in the 1.0.2 alpha.

Yes - and it is exactly what I needed. Thanks !

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030114/1ad62273/attachment.sig>

From xavier at plebia.org  Tue Jan 14 14:37:09 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:37:09 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114142904.3cf7ba51.twisted@itamarst.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
Message-ID: <20030114223709.42b4bb46.xavier@plebia.org>

On Tue, 14 Jan 2003 14:29:04 -0500
Itamar Shtull-Trauring <twisted at itamarst.org> wrote:

> It's quite usable, but very undocumented, yes. 

That's ok with me - my only fear was that Woven was not ready for
production. 

> For links, use a Link widget instead of an Anchor widget.

Thanks, it works well. :-)

> For examples, see Issues and Blog in twistedmatrix.com CVS

I could not find this part :

xavier at leto:~$ find prog/twisted/cvs/ -name "*.rpy"
prog/twisted/cvs/Twisted/doc/howto/listings/HelloWorld/HelloWorld.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/HelloWorld/HelloWorld2.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/soap.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/webquote.rpy
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/wovenquotes.r
py
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/xmlquote.rpy
prog/twisted/cvs/Twisted/static/test.rpy
xavier at leto:~$ find prog/twisted/cvs/ -name "*.?html"
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/WebQuotes.xht
ml
prog/twisted/cvs/Twisted/doc/howto/listings/TwistedQuotes/WovenQuotes.x
html
xavier at leto:~$ 

Do you have an idea of where these examples could be located ?

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030114/94c4c209/attachment.sig>

From xavier at plebia.org  Tue Jan 14 14:58:10 2003
From: xavier at plebia.org (Xavier Antoviaque)
Date: Tue, 14 Jan 2003 22:58:10 +0100
Subject: [Twisted-Python] Woven
In-Reply-To: <20030114223709.42b4bb46.xavier@plebia.org>
References: <20030114202314.2949ecd1.xavier@plebia.org>
	<20030114142904.3cf7ba51.twisted@itamarst.org>
	<20030114223709.42b4bb46.xavier@plebia.org>
Message-ID: <20030114225810.07e85cd0.xavier@plebia.org>

On Tue, 14 Jan 2003 22:37:09 +0100
Xavier Antoviaque <xavier at plebia.org> wrote:

> Do you have an idea of where these examples could be located ?

Forget about it, I found them. :)

cvs -d:pserver:anon at twistedmatrix.com:/cvs co Blog
cvs -d:pserver:anon at twistedmatrix.com:/cvs co Issues

-- 
Xavier.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030114/7fa0b9f9/attachment.sig>

From ldanielburr at earthlink.net  Tue Jan 14 15:43:02 2003
From: ldanielburr at earthlink.net ( Daniel Burr)
Date: Tue, 14 Jan 2003 14:43:02 -0800
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
Message-ID: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>


WARNING!  Long-winded, and perhaps clueless post ahead!

As discussed earlier in this thread, here is a rough sketch of how I think
a high-level interface to twisted.protocols.ftp.FTPClient should look.

Currently, twisted.protocols.ftp contains mostly FTP-related classes; there
is only one module-level method, "parsePWDResponse".  I am thinking that we
could just implement the high-level client interface as methods within the
current twisted.protocols.ftp module.

Ideally, I'd like to be able to use it like so:

---------------------------------------------------------------------------
import os

from twisted.protocols import ftp

def deploy(self, appRoot, filePaths):
        """
        Deploy code to an ftp server

        appRoot - string containing the root directory of some app
        filePaths - list or tuple containing absolute filepaths
        """

        try:
            ftp.connect(host='foo.bar.org',
                        port=21,
                        user='anonymous'
                        password='anonymous at anonymous.net')

        except ftp.ConnectionFailed:
            return False

        else:
            for filePath in filePaths:
                fileDirectory, fileName = os.path.split(filePath)
                uploadDirectory = '%s/%s' % (appRoot, fileDirectory)

                if ftp.pwd() != (uploadDirectory):
                    try:
                        ftp.cd(uploadDirectory)

                    except ftp.DirDoesNotExist:
                        makeDirectory(uploadDirectory)
                        ftp.cd(uploadDirectory)

                    ftp.binary()
                    ftp.put(fileName)

            ftp.quit()
            return True

def makeDirectory(self, path):
    """
    Recursively create directories on the FTP server
    """

    parent, base = os.path.split(path)

    try:
        ftp.cd(parent)
        ftp.mkdir(base)

    except ftp.DirDoesNotExist:
        makeDirectory(parent)
        ftp.cd(parent)
        ftp.mkdir(base)
---------------------------------------------------------------------------


This code is pretty naive, to be sure, and not at all Twisted.  However, it
does hopefully illustrate the way I would like to interact with an FTP
client.  The "deploy" function could be refactored to use Deferreds pretty
easily; the "makeDirectory" function would be similarly simple.


As for the interface to FTPClient, I've outlined my thoughts below.  Note
that my immediate itch only calls for "cd", "pwd", "mkdir", and "put", of
which only "mkdir" and "put" need to be implemented.  It'd be cool, down
the road, to implement "mget" and friends, so that my sample code above
could be reduced even further, by removing the need to loop through the
list of file paths and transfer files one at a time.

My overall, grand ambition is to tie all of this together into a handy
code deployment tool that can pull versioned code from multiple source
control solutions, and deploy it using a variety of protocols.


---------------------------------------------------------------------------
# a module level variable to which we will bind an instance of FTPClient
theClient = None

def append(localFile, remoteFile=localFile)
    """
    Append the contents of a file on the client to a file on the server

    localFile  - string containing the name of the file on the client
    remoteFile - string containing the name of the file on the server;
                 defaults to the same name as the file on the client
    """

def ascii():
    """
    Set the transfer type to ascii (TYPE A)
    """

def binary():
    """
    Set the transfer type to binary (TYPE I)
    """

def bye():
    """
    Close the connection and exit the client
    """

def cd(remoteDirectory):
    """
    Change directory on the server (CWD)

    remoteDirectory - string containing the directory name
    """

def close():
    """
    Close the connection, but do not exit the client
    """

def connect(host, port, userID='anonymous', password='foo at bar.org'):
    """
    Connect to an FTP server

    This function will create an instance of FTPClient and bind it to
    "theClient", a module-level variable which we will treat like a
    singleton, so all these functions have an instance to work with
    """

def delete(remoteFile):
    """
    Delete a file from the server

    remoteFile - string containing the name of the file on the server
    """

def debug():
    """
    Toggle debugging mode on/off

    If debugging mode is on, debug info will be logged to some default file
    """

def disconnect():
    """
    Close the connection, but do not exit the client
    """

def get(remoteFile, localFile=remoteFile):
    """
    Transfer a file from the server to the client
    
    remoteFile - string containing the name of the file on the server
    localFile  - string containing the name of the file on the client;
                 defaults to the same name as the file on the server
    """

def literal(command):
    """
    Send arbitrary FTP command

    command - string containing the line to be sent as a command
    """

def mdelete(remoteFiles):
    """
    Delete multiple files from the server

    remoteFiles - list or tuple of filepaths on the server
    """

def mget(remoteFiles):
    """
    Transfer multiple files from the server to the client

    remoteFiles - list or tuple of filepaths on the server
    """

def mkdir(directory):
    """
    Create a directory on the server

    directory - string containing an absolute or relative path
    """

def mput(localFiles):
    """
    Transfer multiple file from the client to the server

    localFiles - list or tuple of filepaths on the client
    """

def put(localFile, remoteFile=localFile):
    """
    Transfer a file from the client to the server

    localFile  - string containing the name of the file on the client
    remoteFile - string containing the name of the file on the server;
                 defaults to the same name as the file on the client
    """

def quit():
    """
    Close the connection and exit the client
    """

def rmdir(directory):
    """
    Delete a directory on the server

    directory - string containing an absolute or relative path
    """
---------------------------------------------------------------------------


Well, that's my brain dump for now.  Be as harsh as you like in criticizing;
I have a thick hide, and I'm trying to learn, so don't pull any punches.
If anyone thinks it should be entirely different, that's fantastic, and I
want to hear about it.

L. Daniel Burr




From andrew-twisted at puzzling.org  Tue Jan 14 17:09:23 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 15 Jan 2003 11:09:23 +1100
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
References: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
Message-ID: <20030115000923.GA28656@frobozz.local>

On Tue, Jan 14, 2003 at 02:43:02PM -0800,  Daniel Burr wrote:
> 
> 
> WARNING!  Long-winded, and perhaps clueless post ahead!
> 
> As discussed earlier in this thread, here is a rough sketch of how I think
> a high-level interface to twisted.protocols.ftp.FTPClient should look.
> 
> Currently, twisted.protocols.ftp contains mostly FTP-related classes; there
> is only one module-level method, "parsePWDResponse".  I am thinking that we
> could just implement the high-level client interface as methods within the
> current twisted.protocols.ftp module.
> 
> Ideally, I'd like to be able to use it like so:

[snip code]

> This code is pretty naive, to be sure, and not at all Twisted.  However, it
> does hopefully illustrate the way I would like to interact with an FTP
> client.  The "deploy" function could be refactored to use Deferreds pretty
> easily; the "makeDirectory" function would be similarly simple.

Indeed.  I admit it is easier to think about these things synchronously,
though :)

> As for the interface to FTPClient, I've outlined my thoughts below.  Note
> that my immediate itch only calls for "cd", "pwd", "mkdir", and "put", of
> which only "mkdir" and "put" need to be implemented.  It'd be cool, down
> the road, to implement "mget" and friends, so that my sample code above
> could be reduced even further, by removing the need to loop through the
> list of file paths and transfer files one at a time.
> 
> My overall, grand ambition is to tie all of this together into a handy
> code deployment tool that can pull versioned code from multiple source
> control solutions, and deploy it using a variety of protocols.

Ah!  It's always nice to know what people are actually trying to do :)

> ---------------------------------------------------------------------------
> # a module level variable to which we will bind an instance of FTPClient
> theClient = None

Why do you want a global variable for this?  What's wrong with instatiating
and tracking your own FTPClient instance, and having these functions be
methods of that instance (rather than globals, as they seem to be now)?

> def append(localFile, remoteFile=localFile)
>     """
>     Append the contents of a file on the client to a file on the server
> 
>     localFile  - string containing the name of the file on the client
>     remoteFile - string containing the name of the file on the server;
>                  defaults to the same name as the file on the client
>     """

[..etc..]

And of course, these methods will have to return Deferreds.  Also, I don't
want FTPClient to be restricted to just plain files, as mentioned earlier,
but yeah :)

> Well, that's my brain dump for now.  Be as harsh as you like in criticizing;
> I have a thick hide, and I'm trying to learn, so don't pull any punches.
> If anyone thinks it should be entirely different, that's fantastic, and I
> want to hear about it.

That's ok... I'll have a deeper ponder on FTP with this in mind, and have
another attack at the code tonight.

-Andrew.




From radix at twistedmatrix.com  Tue Jan 14 20:31:22 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 14 Jan 2003 22:31:22 -0500
Subject: [Twisted-Python] RE: How do I upload files using FTPClient?
In-Reply-To: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
References: <Springmail.0994.1042584182.0.87573800@webmail.pas.earthlink.net>
Message-ID: <20030115033122.GF31014@Radii>

On Tue, Jan 14, 2003 at 02:43:02PM -0800,  Daniel Burr wrote:
> As discussed earlier in this thread, here is a rough sketch of how I think
> a high-level interface to twisted.protocols.ftp.FTPClient should look.
 
> Ideally, I'd like to be able to use it like so:

>             for filePath in filePaths:
>                 fileDirectory, fileName = os.path.split(filePath)
>                 uploadDirectory = '%s/%s' % (appRoot, fileDirectory)
> 
>                 if ftp.pwd() != (uploadDirectory):
>                     try:
>                         ftp.cd(uploadDirectory)
> 
>                     except ftp.DirDoesNotExist:
>                         makeDirectory(uploadDirectory)
>                         ftp.cd(uploadDirectory)
> 
>                     ftp.binary()
>                     ftp.put(fileName)
> 
>             ftp.quit()
>             return True

This code assumes that the methods block, but they can't. Twisted is
an asynchronous framework, thus, no public interface functions (other
than reactor.run() and similar) block. I recommend implementing a
command-based FTP client on top of the asynchronous interfaces if you
actually want an interface with which you needn't worry about
asynchronous stuff. :-)

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-twisted at puzzling.org  Wed Jan 15 07:08:13 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Jan 2003 01:08:13 +1100
Subject: [Twisted-Python] Producers and Consumers
Message-ID: <20030115140813.GA32609@frobozz.local>

Hi all,

It seems to me that the IProducer and IConsumer interfaces in
twisted.internet.interfaces are effectively useless.

Say you wanted to write a class with a method like:

class MyConsumer:
    def foo(self, producer):
        """@type producer: L{IProducer}"""
        # keep a reference to the producer, to consume stuff from it later

How do you actually implement that method?

IProducer only specifies {resume,pause,stop}Producing.  IConsumer states
that it expects its write() method to be called by the producer.  But there
is no way to find out the IConsumer's producer using the methods documented
in IProducer/IConsumer (the interface doesn't explicitly say it, but it's
fairly obvious that there can only be one consumer per producer, and vice
versa).

Similarly, you can't write a method like this:

    def streamData(self):
        """@returns: a L{Deferred}, which will be called with an object
                     implementing L{IProducer}."""
        # ...

You'd use this like:

    d = source.streamData()
    d.addCallback(lambda p: self.registerProducer(p, streaming=1))

But of course, without knowing something extra about the producer beyond
what IProducer tells you, you can't implement this, because there's no way
to tell an IProducer what IConsumer to write to.

(Incidentally, the 'streaming' argument to registerProducer isn't very
clearly explained... after several readings, I *think* all it means is that
the producer starts producing immediately, rather than waiting for a call to
resumeProducing.)

Finally, I also see that there is no way for an producer to signal to its
consumer that it has finished.  Perhaps for the intended use cases of
producers and consumers, this is superfluous, but it would be very useful to
me!

My motivation for all this (in case you hadn't guessed :), is FTP.  I've
previously discussed the way the code currently works (by taking a Protocol
instance as an argument, so that downloads can be fed directly to it), and
I'm looking for clean ways to improve it, so I can add the STOR command
(i.e. uploads).

Now, I could do FTPClient.store similarly to how I do FTPClient.retrieve,
i.e.

    def store(self, path, protocol):
        """ ...
        @param path: The path to store data to.
        @param protocol: A L{Protocol} instance that will write the data
            to be stored upon a call to C{connectionMade}, and will call
            C{self.transport.loseConnection()} when done.
        """
        # ...

But everyone assures me that requiring protocol instances as parameters is a
bad way to do things, and my gut feeling agrees -- I just don't feel
comfortable with asking Twisted users to instantiate a Protocol without
involving a Factory.

The obvious alternative that occured to me was to use producers and
consumers -- after all, a download is just a stream of bytes waiting to be
consumed, and an upload is just a connection waiting for data to be produced
-- but IConsumer and IProducer don't fit this use-case.

So, are IConsumer and IProducer fundamentally broken, or is it intentional
that all Consumer/Producer implementations are co-dependent?  And what is
the right interface for FTPClient?

If I'm missing the Zen of Consumption and Production, then please enlighten
me, so that I may improve the existing docstrings and maybe write a howto?
:)

Regards,

-Andrew.




From andrew-twisted at puzzling.org  Wed Jan 15 07:23:22 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Jan 2003 01:23:22 +1100
Subject: [Twisted-Python] Producers and Consumers
In-Reply-To: <20030115140813.GA32609@frobozz.local>
References: <20030115140813.GA32609@frobozz.local>
Message-ID: <20030115142322.GB32609@frobozz.local>

On Thu, Jan 16, 2003 at 01:08:13AM +1100, Andrew Bennetts wrote:
> 
> Now, I could do FTPClient.store similarly to how I do FTPClient.retrieve,
> i.e.
> 
>     def store(self, path, protocol):
>         """ ...
>         @param path: The path to store data to.
>         @param protocol: A L{Protocol} instance that will write the data
>             to be stored upon a call to C{connectionMade}, and will call
>             C{self.transport.loseConnection()} when done.
>         """
>         # ...
> 
> But everyone assures me that requiring protocol instances as parameters is a
> bad way to do things, and my gut feeling agrees -- I just don't feel
> comfortable with asking Twisted users to instantiate a Protocol without
> involving a Factory.

I forgot to mention the other problem with this... I suspect the performance
of:

class Uploader:
    def connectionMade(self):
        self.transport.write(fiftyMegabyteString)
        self.transport.loseConnection()

would be suboptimal, to say the least ;)

In fact, I'm pretty certain the right way to do this is to use a producer,
just like twisted.web :)

-Andrew.




From rrichardson at eti-main.enabletech.com  Wed Jan 15 13:47:05 2003
From: rrichardson at eti-main.enabletech.com (Rick Richardson)
Date: Wed, 15 Jan 2003 12:47:05 -0800
Subject: [Twisted-Python] Large project (IMS) architecture
Message-ID: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>

I have had the task of the architecture of a lab information management
system.  If you're not familiar with a LIMS it basically tracks a sample of
something, be it a soil sample, a solution generated in a lab, whatever,
through its creation/logging through instrument testing, analysis,
verification and disposal.
It will be a replacement for our current project which is written currently
in C++ Builder 4, is about 1900 source files, 52 applications and.. approx
180 different screens/docked-panels. 

One of the challenges is the heavy relationships between all of the
different entities in the database, as well as some meta concepts of
batching and QC. 
Also the there is the maintenance of the overall system as well as roles of
admin/employee/customer. 
Much of the current app is redundant and could probably be reduced to about
60 screens that do perform quite a bit of computation of one sort or
another. 
This is also a somewhat distributed system, having a single system (either
client server or p2p) used on a multitude of desktops, possibly
geographically seperated.

My vision for the project is to, first off, create an Information Management
System, then customize it into a Lab IMS. I want to take a single (or very
few) screen approach that is data and context sensitive. So that it will
dynamically create most of the screens, leaving  custom development for only
a handful of computationally intensive tasks that still take advantage of an
sweet component structure. 

For this task I turn to Twisted. Partically because I'm enamoured with the
way that it takes advantage of, and complements pythons dynamic nature. And
partially I think because it is so large and amorphous that I'm sure there's
a solution somewhere in there for me. 

My questions: 
In what areas should I begin looking for components that will help me?
Is a single, dynamic screen approach reasonable?
What is people's preference? A centralized object center and RMI? Or purely
central data and all logic on the client?

I know this is a rather vague request for information but anything is
helpful.

Rick Richardson
Quidquid latine dictum sit, altum videtur.
(Anything said in Latin sounds profound.) 




From bob at redivi.com  Wed Jan 15 21:42:07 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 15 Jan 2003 23:42:07 -0500
Subject: [Twisted-Python] Some high-level python 2.2 generator toys
Message-ID: <DE275A5B-290C-11D7-8F7A-000A95686CD8@redivi.com>

I just spent an hour or two screwing around with generators and 
deferreds.  I threw this together, I think it's pretty slick.  I'm 
kinda tired, so the naming conventions and "documentation" might be 
stupid, but it does work.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: flow.py
Type: application/octet-stream
Size: 3767 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030115/0b1273af/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_flow.py
Type: application/octet-stream
Size: 2284 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030115/0b1273af/attachment-0005.obj>

From m at moshez.org  Wed Jan 15 23:09:13 2003
From: m at moshez.org (Moshe Zadka)
Date: 16 Jan 2003 06:09:13 -0000
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
Message-ID: <20030116060913.15500.qmail@green.zadka.com>

On Wed, 15 Jan 2003, Rick Richardson <rrichardson at eti-main.enabletech.com> wrote:

> My questions: 
> In what areas should I begin looking for components that will help me?
> Is a single, dynamic screen approach reasonable?

You do understand you're asking a UI question on a developers' list, right? :)

> What is people's preference? A centralized object center and RMI? Or purely
> central data and all logic on the client?

It depends *a lot* on many details.



From pobrien at orbtech.com  Thu Jan 16 07:44:35 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 08:44:35 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
Message-ID: <200301160844.35501.pobrien@orbtech.com>

On Wednesday 15 January 2003 02:47 pm, Rick Richardson wrote:
> What is people's preference? A centralized object center and RMI? Or
> purely central data and all logic on the client?

You may want to look at the PyPerSyst project as well:

  http://sourceforge.net/projects/pypersyst/

PyPerSyst provides simple, robust persistence for Python objects. Note that 
the files are currently available only in CVS, and SourceForge has 
anonymous CVS shut down at the moment.

We recently added support for Pyro, which gives you client/server RMI-like 
remote access. You can find Pyro here:

  http://pyro.sourceforge.net/

I'd like to add support for Twisted as well, but I don't know when that will 
happen. Help from Twisted folks would be greatly appreciated.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------





From pobrien at orbtech.com  Thu Jan 16 09:48:40 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 10:48:40 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116104847.6e644ee8.itamar@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301160844.35501.pobrien@orbtech.com> <20030116104847.6e644ee8.itamar@itamarst.org>
Message-ID: <200301161048.40800.pobrien@orbtech.com>

On Thursday 16 January 2003 09:48 am, Itamar Shtull-Trauring wrote:
> On Thu, 16 Jan 2003 08:44:35 -0600
>
> "Patrick K. O'Brien" <pobrien at orbtech.com> wrote:
> > PyPerSyst provides simple, robust persistence for Python objects. Note
> > that the files are currently available only in CVS, and SourceForge
> > has anonymous CVS shut down at the moment.
>
> Twisted includes its own version of the idea behind PyPerSyst
> (www.prevayler.org) in twisted.persisted.journal.

Yes, I've looked at journal. I don't fully understand your implementation, 
because I don't fully understand Twisted yet. And, I had already started 
PyPerSyst before I knew about your implementation. Now I can't let it go. 
I'm sure you know how that is. :-)

> > We recently added support for Pyro, which gives you client/server
> > RMI-like remote access. You can find Pyro here:
> >
> >   http://pyro.sourceforge.net/
>
> I dislike Pyro since it uses pickles over the network. This is insecure,
> and even if that is acceptable limits you to Python clients only.

I'm not too worried about the limitation to Python clients. The security 
issue is a different matter. It looks like Pyro now supports XML pickles:

<quote>
Whether the marshaling is done using the safe xml pickling (from 
Gnosis_utils or PyXML) or the default pickle. The xml_pickle is not 
vulnerable for the pickle trojan problem mentioned in Chapter 7, but it is 
an order of a magnitude slower, and requires more bandwith. Use "any" for 
any implementation (defaults to PyXML), "pyxml" for PyXML, "gnosis" for 
Gnosis. PyXML seems to be about three times faster than Gnosis. You need to 
have installed Gnosis_Utils (at least version 1.0.2, latest is 1.0.5 at the 
time of writing). For PyXML, you need at least version 0.8, latest is 0.8.1 
at the time of writing. 
</quote>

> Twisted's remote object protocol Perspective Broker on the other hand
> does not use pickles, and can in fact be used with other languages (a
> Java implementation exists), while still offering many of the features
> Pyro provides.

PyPerSyst works with Pyro, but doesn't depend on it. I'd like to accomplish 
the same with Twisted. I started with Pyro because it was easier for me to 
figure out. Any suggestions for getting up-to-speed on Perspective Broker? 
Anything else I need to be aware of for this kind of application?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From twisted at itamarst.org  Thu Jan 16 10:08:01 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jan 2003 12:08:01 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161048.40800.pobrien@orbtech.com>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
	<200301160844.35501.pobrien@orbtech.com>
	<20030116104847.6e644ee8.itamar@itamarst.org>
	<200301161048.40800.pobrien@orbtech.com>
Message-ID: <20030116120801.12d79dc9.twisted@itamarst.org>

On Thu, 16 Jan 2003 10:48:40 -0600
"Patrick K. O'Brien" <pobrien at orbtech.com> wrote:

> Yes, I've looked at journal. I don't fully understand your
> implementation, because I don't fully understand Twisted yet. And, I
> had already started PyPerSyst before I knew about your implementation.
> Now I can't let it go. I'm sure you know how that is. :-)

Yah. And I need to write docs if I want people to use it :)

> Whether the marshaling is done using the safe xml pickling (from 
> Gnosis_utils or PyXML) or the default pickle. The xml_pickle is not 
> vulnerable for the pickle trojan problem mentioned in Chapter 7, but
> it is an order of a magnitude slower, and requires more bandwith.

PB actually implements its own version of Pickle as well (jelly), except
that it does *not* use a whole order of magnitude more of bandwidth -
it's probably the same bandwidth usage as pickle. It's still not as fast
as it could be, but we're working on it.

> PyPerSyst works with Pyro, but doesn't depend on it. I'd like to
> accomplish the same with Twisted. I started with Pyro because it was
> easier for me to figure out. Any suggestions for getting up-to-speed
> on Perspective Broker? 

http://twistedmatrix.com/documents/howto/pb-intro
http://twistedmatrix.com/documents/howto/pb-usage
http://twistedmatrix.com/documents/howto/pb-cred

Version 1.0.2 will have additional documentation.



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Jan 16 11:01:34 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 16 Jan 2003 13:01:34 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
		<200301160844.35501.pobrien@orbtech.com>
		<20030116104847.6e644ee8.itamar@itamarst.org>
		<200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>

Itamar Shtull-Trauring wrote:
> 
> PB actually implements its own version of Pickle as well (jelly)...

And jelly does nested objects, which Pickle can't.  
(...and which I need for my app. :^)

-- Steve.



From pobrien at orbtech.com  Thu Jan 16 11:38:40 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 12:38:40 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <20030116120801.12d79dc9.twisted@itamarst.org> <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
Message-ID: <200301161238.40611.pobrien@orbtech.com>

On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> Itamar Shtull-Trauring wrote:
> > PB actually implements its own version of Pickle as well (jelly)...
>
> And jelly does nested objects, which Pickle can't.

I'm not sure what you mean by that. Could you explain in what way Pickle 
can't handle nested objects? Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From pobrien at orbtech.com  Thu Jan 16 12:41:02 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 13:41:02 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116120801.12d79dc9.twisted@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <200301161341.02322.pobrien@orbtech.com>

On Thursday 16 January 2003 11:08 am, Itamar Shtull-Trauring wrote:
> > PyPerSyst works with Pyro, but doesn't depend on it. I'd like to
> > accomplish the same with Twisted. I started with Pyro because it was
> > easier for me to figure out. Any suggestions for getting up-to-speed
> > on Perspective Broker?
>
> http://twistedmatrix.com/documents/howto/pb-intro
> http://twistedmatrix.com/documents/howto/pb-usage
> http://twistedmatrix.com/documents/howto/pb-cred

Very nice. I can see how these capabilities would be useful. And now that 
I've read these I think I'm starting to understand Twisted. Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From twisted at itamarst.org  Thu Jan 16 12:51:38 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 16 Jan 2003 14:51:38 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161238.40611.pobrien@orbtech.com>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int>
	<20030116120801.12d79dc9.twisted@itamarst.org>
	<3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov>
	<200301161238.40611.pobrien@orbtech.com>
Message-ID: <20030116145138.6bf89e03.twisted@itamarst.org>

On Thu, 16 Jan 2003 12:38:40 -0600
"Patrick K. O'Brien" <pobrien at orbtech.com> wrote:

> I'm not sure what you mean by that. Could you explain in what way
> Pickle can't handle nested objects? Thanks.

Yes, what is a nested object?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From waterbug at beeblebrox.gsfc.nasa.gov  Thu Jan 16 13:32:58 2003
From: waterbug at beeblebrox.gsfc.nasa.gov (Steve Waterbury)
Date: Thu, 16 Jan 2003 15:32:58 -0500
Subject: [Twisted-Python] Large project (IMS) architecture
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <20030116120801.12d79dc9.twisted@itamarst.org> <3E26F37D.2E15AAAD@beeblebrox.gsfc.nasa.gov> <200301161238.40611.pobrien@orbtech.com>
Message-ID: <3E2716FA.39B502A1@beeblebrox.gsfc.nasa.gov>

"Patrick K. O'Brien" wrote:
> 
> On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> >
> > And jelly does nested objects, which Pickle can't.
> 
> I'm not sure what you mean by that. Could you explain in what way Pickle
> can't handle nested objects? Thanks.

Sorry -- I didn't mean "nested objects", but nested 
functions of certain kinds, such as lambdas or 
curried functions.  E.g.:

>>> import pickle 
>>> f = lambda x: x in (1,2,3)
>>> pf = pickle.dumps(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/pickle.py", line 978, in dumps
    Pickler(file, bin).dump(object)
  File "/usr/local/lib/python2.2/pickle.py", line 115, in dump
    self.save(object)
  File "/usr/local/lib/python2.2/pickle.py", line 225, in save
    f(self, object)
  File "/usr/local/lib/python2.2/pickle.py", line 519, in save_global
    raise PicklingError(
pickle.PicklingError: Can't pickle <function <lambda> at 0x8161924>: it's not found as __main__.<lambda>
>>> from twisted.spread.jelly import jelly, unjelly
>>> jf = jelly(f)
>>> jf
['function', '__main__.<lambda>']
>>> newf = unjelly(f)
>>> newf(1)
1
>>> newf(4)
0

-- Steve.



From larryt at winfirst.com  Thu Jan 16 15:36:41 2003
From: larryt at winfirst.com (larryt at winfirst.com)
Date: Thu, 16 Jan 2003 14:36:41 -0800
Subject: [Twisted-Python] twisted.mail startup
Message-ID: <web-1093876@bmail1.winfirst.net>

Is there a set of options that I can feed mktap mail
that will start up twistedmail as a sendmail
replacement on my linux box.  I guess I'm looking for
something like the howto using-twistedweb.html, except
of course for twistedmail.

thanks,
larry



From pobrien at orbtech.com  Thu Jan 16 17:03:11 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Thu, 16 Jan 2003 18:03:11 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030116120801.12d79dc9.twisted@itamarst.org>
References: <A7E67E8DB535D411ADC8009027F6449B49638D@www.et.rts.int> <200301161048.40800.pobrien@orbtech.com> <20030116120801.12d79dc9.twisted@itamarst.org>
Message-ID: <200301161803.11651.pobrien@orbtech.com>

On Thursday 16 January 2003 11:08 am, Itamar Shtull-Trauring wrote:
> http://twistedmatrix.com/documents/howto/pb-intro
> http://twistedmatrix.com/documents/howto/pb-usage
> http://twistedmatrix.com/documents/howto/pb-cred
>
> Version 1.0.2 will have additional documentation.

I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That is 
very cool stuff. I'm convinced that Twisted is the way to go.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From mario at ruggier.org  Thu Jan 16 17:07:28 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 17 Jan 2003 01:07:28 +0100
Subject: [Twisted-Python] twisted web on MacOSX -- apache, 80, firewall
Message-ID: <AA144918-29AF-11D7-9C8B-000393756786@ruggier.org>

I'm trying to install, and understand, twisted (1.0.2alpha1) web server 
on a
MacOS X 10.2.3 powerbook (a platform i am at the same time learning 
about).
Installation of twisted seems OK (even if with a number of exceptions 
from
admin/runtests, for which I temporarily put the log under twistd web, 
at:
http://ruggier.dyndns.org:8080/test.log ).

Getting the web server up to serve flat files was also successful. 
However, macos x
comes with apache on port 80 (turned on via Sharing->Services->Personal 
Web Sharing),
and a pre-set firewall (turned on via Sharing->Firewall).

To run twisted web on 8080 (http requests are served), the macos x 
firewall must be
turned off. That is correct?

If I turn off personal web sharing (to shut down apache) and launch 
twistd web on port 80,
http requests give "can't connect to server" error (this is with 
firewall on or off).
Is it possible to run twisted web on port 80? Is it not a good idea to 
start with?

Oh, btw, I am running python 2.2.2 (MacPython222full).

Thanks, mario




From bob at redivi.com  Fri Jan 17 00:58:17 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 02:58:17 -0500
Subject: [Twisted-Python] Cocoa (OS X) twisted example
Message-ID: <7013357A-29F1-11D7-95F7-000A95686CD8@redivi.com>

http://redivi.com/~bob/twisted-cocoaDemo.tgz

Essentially just a port of the QT "Twistzilla" example using the pyobjc 
project template and polling the default reactor with a NSTimer.  
Requires pyobjc (the released version is ok, no need for CVS).  Python 
must also be able to find pyobjc and twisted (i.e. in site-packages or 
dropped into the app bundle).  If you were to compile it and drop 
twisted+pyobjc in the bundle, it would run on any box with OS X 10.2+.

See http://pyobjc.sourceforge.net/ for more information.




From anthony at interlink.com.au  Fri Jan 17 01:03:01 2003
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 17 Jan 2003 19:03:01 +1100
Subject: [Twisted-Python] PyPI evangelism :)
Message-ID: <200301170803.h0H831V29955@localhost.localdomain>

If you're running Python 2.3a1 or Python CVS, your distutils supports
the python package index, (PEP 301). This is just evangelism to try
to get people to register their packages - ooo, like, fr instance, 
twisted :)

http://www.amk.ca/cgi-bin/pypi.cgi

is the current test version of the interface. Adding more packages 
makes it more useful <hinthint>





From glyph at twistedmatrix.com  Fri Jan 17 02:01:09 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Jan 2003 03:01:09 -0600 (CST)
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <200301161803.11651.pobrien@orbtech.com>
References: <200301161048.40800.pobrien@orbtech.com>
	<20030116120801.12d79dc9.twisted@itamarst.org>
	<200301161803.11651.pobrien@orbtech.com>
Message-ID: <20030117.030109.125895378.glyph@twistedmatrix.com>


On Thu, 16 Jan 2003 18:03:11 -0600, "Patrick K. O'Brien" <pobrien at orbtech.com> wrote:
> I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That is 
> very cool stuff. I'm convinced that Twisted is the way to go.

Okay, since this has been gnawing on my conscience every time somebody
mentioned PB in the last month, let me try to at least state this publicly once
for the record :-)

There is still one protocol-breaking change that I think we will be making to
PB.  The details are still a little hazy, but I am pretty sure that we can get
an order of magnitude performance increase (with no appreciable increase in
memory usage) by memoizing every object created from a Banana'd list rather
than creating explicit (reference 1 (foo ...)) expressions.

I find it hard to summarize what I mean by this, but for those of you familiar
with Jelly's implementation details, here's an attempt.

Currently, whenever an object is serialized, if it points to itself, it must be
"memo-ized" in order to give it a unique ID for the future.  This is best shown
with an example:

    >>> from twisted.spread.jelly import jelly
    >>> l = ['hello']
    >>> l.append(l)
    >>> jelly(l)
    ['reference', 1, ['list', 'hello', ['dereference', 1]]]

I believe that the technique we have been using to identify objects that
participate in circular references is slow and unnecessary.  Each object
corresponds to a Jelly expression (Python list) whose start has some position
in the banana stream relative to every other list start.  So in this example,
the resulting list could be:

    ['list', 'hello', ['dereference', 1]]

and the decoder could still quite easily recognize what the ['dereference', 1]
was pointing to because the list is the first in the stream.  For a more
complex example, this is what currently happens.

    >>> from twisted.spread.jelly import jelly
    >>> m = ['one']
    >>> m.append(m)
    >>> n = ['two']
    >>> n.append(n)
    >>> l = [n, m]
    >>> l = [m, n]
    >>> jelly(l)
    ['list', ['reference', 1, ['list', 'one', ['dereference', 1]]],
    ['reference', 2, ['list', 'two', ['dereference', 2]]]]

I'd prefer that produce this instead:

    ['list', ['list', 'one', ['dereference', 2]], ['list', 'two', ['dereference', 4]]]

To see why the numbers "2" and "4" make sense, count left brackets :).

This is technically a change to Jelly, not to PB, but it has ramifications on
the wire protocol.  In the process of doing this, I plan to add a
version-negotiation step to PB, similar to what currently exists for Jelly, so
that any potential future changes of this variety do not cause similar
problems.

What this MAY break:

  * Version Compatibility.
  
  If you have a running PB server, older versions of PB clients will no longer
  be able to connect.  This may be correctable but is probably not worth the
  effort, given the dearth of deployed PB services, and the fact that the
  primary incompatibility will be improved version negotiation so that this
  won't happen again :).
  
  * Things that use jellyFor directly
  
  The internal Jellier APIs may change in subtly incompatible ways.  Basic
  usage of jellyFor will probably still continue to work.
  
  * Alternate language implementations of PB
  
  These will need to be updated.  Emacs-PB looks to be in a non-working state
  already :-\ though I've already talked to Itamar about making similar changes
  to Java-PB, and they shouldn't be too hard.  It already reflects the Python
  code.

  * Applications using Jelly directly

  If you are using Jelly to store data in files or something like that, this
  will cause your new versions to be incompatible.  If there are really people
  doing this then perhaps we need version information for these files as well.
  
What this WILL NOT break:

  * Applications using PB at the high level
  
  If you have an app that just has objects which are Referenceable, Cacheable
  and so on, the existing semantics will continue to work, and if you upgrade
  Twisted on both server and client, both will continue to work with each other
  as they did before.

  * Applications using Banana directly

  This will have no impact on the Banana APIs or protocol and those look stable
  for the forseeable future.

Please keep in mind that nobody is working on this yet :-).  It may be that it
will not break any of the things above, but it will certainly not break the
last two.

There are other infrastructural changes to PB that I'd like to see (for
example, making the internal dictionaries use weakrefs rather than __del__) but
those should be completely transparent to end-users.

I believe this will also make the unified banana+jelly streaming optimization
(that Bruce has mentioned on IRC a few times) possible, but I'll have to leave
that to him when I've actually got some code/specs to describe this more
clearly.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030117/75013062/attachment.sig>

From twisted at moshez.org  Fri Jan 17 03:16:17 2003
From: twisted at moshez.org (Moshe Zadka)
Date: Fri, 17 Jan 2003 04:16:17 -0600
Subject: [Twisted-Python] Debian Package Breakage
Message-ID: <E18ZTXt-0006LC-00@pyramid.twistedmatrix.com>

Dear Twisted Developers,

Concern has been expressed why the Debian build process is so easy to break.
I will try to address this concern here, but first let me reiterate my
request: please, let me or the list know *in advance* of any change which
might break the package build. If there is any doubt, an e-mail to the t-p
list is better than breakage. Because the Debian package build is a part
of the release procedure, breaking it means achieving a non-releasable state,
something I'm sure none of us want.

Now, to address the heart of the matter. The Debian package build breaks
whenever it encounters something it doesn't expect. The alternatives are
usually to overinculde or to underinclude. If I were to choose either of them,
I run the risk of producing suboptimal packages. If I refuse the temptation
to guess, I make sure that I have to fix it.

Don't treat the possible breakage as *bad* per-se: just think of it as another
good reason to discuss possible changes here before doing them, in the case
where it might cause problems.

Thanks in advance,
Moshe Zadka



From pobrien at orbtech.com  Fri Jan 17 07:00:54 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Fri, 17 Jan 2003 08:00:54 -0600
Subject: [Twisted-Python] Large project (IMS) architecture
In-Reply-To: <20030117.030109.125895378.glyph@twistedmatrix.com>
References: <200301161048.40800.pobrien@orbtech.com> <200301161803.11651.pobrien@orbtech.com> <20030117.030109.125895378.glyph@twistedmatrix.com>
Message-ID: <200301170800.54969.pobrien@orbtech.com>

On Friday 17 January 2003 03:01 am, Glyph Lefkowitz wrote:
> On Thu, 16 Jan 2003 18:03:11 -0600, "Patrick K. O'Brien" 
<pobrien at orbtech.com> wrote:
> > I just updated from CVS and read doc/howto/pb-copyable.html. Wow! That
> > is very cool stuff. I'm convinced that Twisted is the way to go.
>
> Okay, since this has been gnawing on my conscience every time somebody
> mentioned PB in the last month, let me try to at least state this
> publicly once for the record :-)
>
> There is still one protocol-breaking change that I think we will be
> making to PB.  The details are still a little hazy, but I am pretty sure
> that we can get an order of magnitude performance increase (with no
> appreciable increase in memory usage) by memoizing every object created
> from a Banana'd list rather than creating explicit (reference 1 (foo
> ...)) expressions.

Sounds reasonable. Thanks for the heads-up.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From tv at twistedmatrix.com  Fri Jan 17 03:17:31 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 12:17:31 +0200
Subject: [Twisted-Python] twisted.mail startup
In-Reply-To: <web-1093876@bmail1.winfirst.net>
References: <web-1093876@bmail1.winfirst.net>
Message-ID: <20030117101731.GA6689@lapdog>

On Thu, Jan 16, 2003 at 02:36:41PM -0800, larryt at winfirst.com wrote:
> Is there a set of options that I can feed mktap mail
> that will start up twistedmail as a sendmail
> replacement on my linux box.  I guess I'm looking for
> something like the howto using-twistedweb.html, except
> of course for twistedmail.

	Moshez may have other things to say, but at this
	stage, based on my understanding of the code, I
	have two things to say:

	1. "No."

	2. "Don't use it yet if you like your email."



From tv at twistedmatrix.com  Fri Jan 17 08:27:29 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 17:27:29 +0200
Subject: [Twisted-Python] A nit on "Generalization of Deferred Execution in Python"
Message-ID: <20030117152729.GA8205@lapdog>

	http://cumulo-nimbus.mit.edu/deferex.xhtml

	"It is suggested that methods which must perform long-running
	calculations or communication with a remote host may return a
	Deferred."

	That's a horribly misleading paragraph. What you probably want
	to say is that you recommend such things to return a Deferred
	-- I currently read that such that functions should sometimes
	return Deferreds and sometimes real results, and that is very
	confusing. That's why there are defer.succeed() and
	defer.fail().



From tv at twistedmatrix.com  Fri Jan 17 08:34:45 2003
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 17 Jan 2003 17:34:45 +0200
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
Message-ID: <20030117153445.GA8629@lapdog>

        http://cumulo-nimbus.mit.edu/deferex.xhtml

	You call this "pretty"?

def prettyRequest(server, requestName):
    return server.makeRequest(requestName
                              ).addCallback(
        lambda result: ', '.join(result.asList())
        ).addErrback(
        lambda failure: failure.printTraceback())

	How about

def prettyRequest(server, requestName):
    d=server.makeRequest(requestName)
    d.addCallback(lambda result: ', '.join(result.asList()))
    d.addErrback(lambda failure: failure.printTraceback())
    return d

	I'm pretty sure everyone will consider that more readable.



From bob at redivi.com  Fri Jan 17 09:33:20 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 11:33:20 -0500
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <20030117153445.GA8629@lapdog>
Message-ID: <63BB4B66-2A39-11D7-95F7-000A95686CD8@redivi.com>

On Friday, Jan 17, 2003, at 10:34 America/New_York, Tommi Virtanen 
wrote:

>         http://cumulo-nimbus.mit.edu/deferex.xhtml
> def prettyRequest(server, requestName):
>     d=server.makeRequest(requestName)
>     d.addCallback(lambda result: ', '.join(result.asList()))
>     d.addErrback(lambda failure: failure.printTraceback())
>     return d

How about calling it prettyWorthlessRequest :)  You'll never see the 
result, just failures!  How about throwing a print statement in the 
callback lambda or something?

-bob




From mario at ruggier.org  Fri Jan 17 10:24:10 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 17 Jan 2003 18:24:10 +0100
Subject: [Twisted-Python] DOMTemplate best practice
Message-ID: <7DC40EE6-2A40-11D7-8FEE-000393756786@ruggier.org>

Hello,

I am playing with the examples and howtos, to try and figure some of 
this thing out.
The DOMTemplate HowTo goes through a simple example, and uses 3 files, 
one for
the template itself, one for a resource that sits next to the template 
file, and one for the
code that actually instantiates the template (and this one must be put 
in the pythonpath).
My question is that, given that this 3rd file (webquoteresource.py in 
this example) is anyhow
dedicated to this template (and will always be, given that the method 
names must match
hook names in the template), why is it kept separate and not part of 
the rpy itself?

Thanks, mario

ps; btw, this example if full of errors, namely:
-  webquoteresource.py:
from TwistedQuotes import quoters	(no quoters...)
templateFile = "WebQuotes.xhtml"	(never used, and filename non-existant)
- webquote.rpy:
#get the sibling file "quotes.txt" 		(no such "quotes.txt" file ...)
quotefile = os.path.join(os.path.split(__file__)[0], "quotes.txt")
- clicking on "See it in action" gives error...




From radix at twistedmatrix.com  Fri Jan 17 12:05:52 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 17 Jan 2003 14:05:52 -0500
Subject: [Twisted-Python] PyCon Devel Sprint
Message-ID: <20030117190552.GA16489@Radii>

Who wants to participate in the development sprint before PyCon? (The
24th and 25th of March.) It will require a fee, which will be less
than $50, estimated. I'll put together the sprint proposal and submit
it once I know how many people we can expect. Reply here or mention it
to me on IRC and I'll add your name to the list (along with a vote for
what we should hack on in particular, if you've got one).

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Fri Jan 17 12:10:08 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 17 Jan 2003 14:10:08 -0500
Subject: [Twisted-Python] PyCon Devel Sprint
In-Reply-To: <20030117190552.GA16489@Radii>
References: <20030117190552.GA16489@Radii>
Message-ID: <20030117191008.GB16489@Radii>

On Fri, Jan 17, 2003 at 02:05:52PM -0500, Christopher Armstrong wrote:
> Who wants to participate in the development sprint before PyCon? (The
> 24th and 25th of March.) It will require a fee, which will be less
> than $50, estimated. I'll put together the sprint proposal and submit

That (maximum estimate) $50 covers both days of the sprint, btw.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From pobrien at orbtech.com  Fri Jan 17 13:32:36 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Fri, 17 Jan 2003 14:32:36 -0600
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <20030117153445.GA8629@lapdog>
References: <20030117153445.GA8629@lapdog>
Message-ID: <200301171432.36690.pobrien@orbtech.com>

On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
>         http://cumulo-nimbus.mit.edu/deferex.xhtml
>
> 	You call this "pretty"?
>
> def prettyRequest(server, requestName):
>     return server.makeRequest(requestName
>                               ).addCallback(
>         lambda result: ', '.join(result.asList())
>         ).addErrback(
>         lambda failure: failure.printTraceback())
>
> 	How about
>
> def prettyRequest(server, requestName):
>     d=server.makeRequest(requestName)
>     d.addCallback(lambda result: ', '.join(result.asList()))
>     d.addErrback(lambda failure: failure.printTraceback())
>     return d
>
> 	I'm pretty sure everyone will consider that more readable.

You've raised an issue I've wondered about as I've looked at some of the 
Twisted source. There seems to be a fondness for returning large 
expressions, rather than building up a return value in a more piecemeal 
(and more easily read and understood) fashion. Is this simply a matter of 
style, or is there something substantial going on here related to the 
nature of Twisted? My own code tends to look more like your second example.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From larryt at winfirst.com  Fri Jan 17 13:36:27 2003
From: larryt at winfirst.com (larryt at winfirst.com)
Date: Fri, 17 Jan 2003 12:36:27 -0800
Subject:  Subject: Re: [Twisted-Python] twisted.mail startup
Message-ID: <web-1094457@bmail1.winfirst.net>

Tommi Virtanen <tv at twistedmatrix.com> writes:
> larryt at winfirst.com wrote:
> > [..] twistedmail as a sendmail replacement [..]
>       [..]
> 	2. "Don't use it yet if you like your email."

Thanks, I'll check back later then.  For future
reference, if I could have gotten twisted.mail
working, I was interested in using it on a low
traffic Mailman host.  



From jason at asbahr.com  Fri Jan 17 15:25:23 2003
From: jason at asbahr.com (Jason Asbahr)
Date: Fri, 17 Jan 2003 16:25:23 -0600
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <200301171432.36690.pobrien@orbtech.com>
Message-ID: <9245D1FC-2A6A-11D7-8308-000393753460@asbahr.com>

On Friday, January 17, 2003, at 02:32 PM, Patrick K. O'Brien wrote:
> On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
>> def prettyRequest(server, requestName):
>>     d=server.makeRequest(requestName)
>>     d.addCallback(lambda result: ', '.join(result.asList()))
>>     d.addErrback(lambda failure: failure.printTraceback())
>>     return d
>>
>> 	I'm pretty sure everyone will consider that more readable.
>
> You've raised an issue I've wondered about as I've looked at some of 
> the
> Twisted source. There seems to be a fondness for returning large
> expressions, rather than building up a return value in a more piecemeal
> (and more easily read and understood) fashion. Is this simply a matter 
> of
> style, or is there something substantial going on here related to the
> nature of Twisted? My own code tends to look more like your second 
> example.

My code as well, favoring more, shorter lines for clarity.  I suspect 
the Twisted wizards don't even have to think about deferreds anymore, 
they just flow directly from mind to keyboard...  : )

Jason




From andrew-twisted at puzzling.org  Fri Jan 17 15:43:42 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 09:43:42 +1100
Subject: [Twisted-Python] Another nit on "Generalization of Deferred Execution in Python"
In-Reply-To: <200301171432.36690.pobrien@orbtech.com>
References: <20030117153445.GA8629@lapdog> <200301171432.36690.pobrien@orbtech.com>
Message-ID: <20030117224342.GB5224@frobozz.local>

On Fri, Jan 17, 2003 at 02:32:36PM -0600, Patrick K. O'Brien wrote:
> On Friday 17 January 2003 09:34 am, Tommi Virtanen wrote:
> >         http://cumulo-nimbus.mit.edu/deferex.xhtml
> >
> > 	You call this "pretty"?
> >
> > def prettyRequest(server, requestName):
> >     return server.makeRequest(requestName
> >                               ).addCallback(
> >         lambda result: ', '.join(result.asList())
> >         ).addErrback(
> >         lambda failure: failure.printTraceback())
> >
> > 	How about
> >
> > def prettyRequest(server, requestName):
> >     d=server.makeRequest(requestName)
> >     d.addCallback(lambda result: ', '.join(result.asList()))
> >     d.addErrback(lambda failure: failure.printTraceback())
> >     return d
> >
> > 	I'm pretty sure everyone will consider that more readable.
> 
> You've raised an issue I've wondered about as I've looked at some of the 
> Twisted source. There seems to be a fondness for returning large 
> expressions, rather than building up a return value in a more piecemeal 
> (and more easily read and understood) fashion. Is this simply a matter of 
> style, or is there something substantial going on here related to the 
> nature of Twisted? My own code tends to look more like your second example.

I find 
    d.addCallback(processResult).addErrback(reportError)
to be a nice and readable... but as soon as lambdas are involved, it tends
to get too messy, so I'll tend to use the piecemeal approach then.

So my answer is "it depends" :)

-Andrew.




From bob at redivi.com  Fri Jan 17 17:04:01 2003
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 17 Jan 2003 19:04:01 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <20030117224342.GB5224@frobozz.local>
Message-ID: <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>

I've noticed that there isn't really a good/standard way to do timeouts 
(without bad things happening) or cancel deferreds in Twisted [without 
subclassing everything you use, which isn't good in my book].

In the attached code sample (and log, so you don't need to run it to 
see its output), I demonstrate the problem, a quick-fix temporary 
solution (to prevent unhandleable exceptions from being raised), and a 
longer term proposed convention for refactoring existing classes to 
take advantage of this new functionality.

As radix mentioned, my proposed solution does make the meaning of 
errback somewhat ambiguous.  However if you add a new 
CancelledOperation exception to deferred, and addCanceller/cancel 
methods (addCanceller = addErrback, cancel = errback) then it'd be 
pretty transparent.

-bob


-------------- next part --------------
A non-text attachment was scrubbed...
Name: deferred.py
Type: application/octet-stream
Size: 3343 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030117/b1103e3a/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: deferred.log
Type: application/octet-stream
Size: 2426 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030117/b1103e3a/attachment-0005.obj>

From missive at hotmail.com  Sat Jan 18 01:57:43 2003
From: missive at hotmail.com (Lee Harr)
Date: Sat, 18 Jan 2003 08:57:43 +0000
Subject: [Twisted-Python] PATCH: /doc/examples/pbecho.py
Message-ID: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>

I was getting some deprecation errors running this one, so I
remodeled it to look like /doc/howto/listings/pb/pb6server.py


3:24 >cvs diff -u pbecho.py
Index: pbecho.py
===================================================================
RCS file: /cvs/Twisted/doc/examples/pbecho.py,v
retrieving revision 1.7
diff -u -r1.7 pbecho.py
--- pbecho.py   25 May 2002 06:02:31 -0000      1.7
+++ pbecho.py   18 Jan 2003 08:20:44 -0000
@@ -17,6 +17,7 @@

from twisted.spread import pb
from twisted.internet import app
+from twisted.cred.authorizer import DefaultAuthorizer

class DefinedError(pb.Error):
     pass
@@ -35,6 +36,12 @@
if __name__ == '__main__':
     import pbecho
     appl = app.Application("pbecho")
-    
pbecho.SimpleService("pbecho",appl).getPerspectiveNamed("guest").makeIdentity("guest")
-    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(appl)))
+    auth = DefaultAuthorizer(appl)
+    s = pbecho.SimpleService("pbecho", appl, auth)
+    s.createPerspective("guest")
+    i1 = auth.createIdentity("guest")
+    i1.setPassword("guest")
+    i1.addKeyByString("pbecho", "guest")
+    auth.addIdentity(i1)
+    appl.listenTCP(pb.portno, pb.BrokerFactory(pb.AuthRoot(auth)))
     appl.save("start")






_________________________________________________________________
MSN 8 with e-mail virus protection service: 2 months FREE* 
http://join.msn.com/?page=features/virus




From andrew-twisted at puzzling.org  Sat Jan 18 05:26:38 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 23:26:38 +1100
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>
References: <20030117224342.GB5224@frobozz.local> <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com>
Message-ID: <20030118122638.GA5708@frobozz.local>

On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
> I've noticed that there isn't really a good/standard way to do timeouts 
> (without bad things happening) or cancel deferreds in Twisted [without 
> subclassing everything you use, which isn't good in my book].

I've glanced at your code and log, but it's not immediately clear to me what
the problem is...

For timeouts, what's wrong with the Deferred.setTimeout method?

For cancelling a Deferred, what's wrong with
"d.errback(CancelledError(...))"?  

There's no standard "CancelledError" exception in Twisted, admittedly, but
that could be easily fixed.

-Andrew.




From andrew-twisted at puzzling.org  Sat Jan 18 05:57:53 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 18 Jan 2003 23:57:53 +1100
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions
In-Reply-To: <20030118122638.GA5708@frobozz.local>
References: <20030117224342.GB5224@frobozz.local> <599AB060-2A78-11D7-9312-000A95686CD8@redivi.com> <20030118122638.GA5708@frobozz.local>
Message-ID: <20030118125753.GC5708@frobozz.local>

On Sat, Jan 18, 2003 at 11:26:38PM +1100, Andrew Bennetts wrote:
> On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
> > I've noticed that there isn't really a good/standard way to do timeouts 
> > (without bad things happening) or cancel deferreds in Twisted [without 
> > subclassing everything you use, which isn't good in my book].
> 
> I've glanced at your code and log, but it's not immediately clear to me what
> the problem is...

Nevermind me, I shouldn't try to read code and post when I'm tired.

Your problem (if I'm understanding correctly :), is that exceptions are
raised by calling Deferred.callback, if that Deferred has timed out, or
otherwise been "cancelled" (by having its errback called).

I'm tempted to argue that this is a feature: the code attempting to fire the
callback probably should know that the Deferred has already expired due to
an error.  The obvious problem with this is that alot of the time you don't
care if the Deferred has already fired or not, and wrapping d.callback(x) in
a try/except AlreadyCalledError is hardly convenient.

So I'd still like at least the option for an exception to be raised, even if
it's disabled by default.  I can't shake the feeling that some apps will
need to know that it succeeds... although I guess they could just register
their own .errback if they really care?

For that matter, perhaps another solution would be to mandate that a method
creating a Deferred is responsible for configuring it with an errback that
will cancel pending operations so that .callback won't be called.  Ugh,
that's a confusing sentence.  What I'm trying to say is that similarly to
how when FTP opens a port and waits for a connection, it must set an errback
to close that port if the connection never comes (e.g. due to an error on
the control connection), whatever "owns" the Deferred should also cancel
whatever would call .callback if an error occured -- this is probably
necessary in general, not just for timeouts and cancels.

Interesting problem :)

-Andrew.




From pobrien at orbtech.com  Sat Jan 18 11:09:32 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Sat, 18 Jan 2003 12:09:32 -0600
Subject: [Twisted-Python] Copyright nit
Message-ID: <200301181209.32219.pobrien@orbtech.com>

>>> import twisted.copyright
>>> twisted.copyright.version
'1.0.2alpha4'
>>> twisted.copyright.copyright
'Copyright (c) 2000-2002 Matthew William Lefkowitz, all rights reserved.'

Should this be updated to "2000-2003"?

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From rrichardson at eti-main.enabletech.com  Thu Jan 16 12:09:37 2003
From: rrichardson at eti-main.enabletech.com (Rick Richardson)
Date: Thu, 16 Jan 2003 11:09:37 -0800
Subject: [Twisted-Python] Nested objects in pickle (was:  Large projec
	t (IMS) architecture)
Message-ID: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>

that's a good question:

>>> class MyClass:
	def __init__(self):
		self.blah = 1
		
>>> class MySecondClass:
	def __init__(self):
		self.foo = MyClass()

>>> class MyThirdClass:
	def MyFunc():
		print "test"

>>> bar = MyThirdClass()
>>> bar.foo = MySecondClass()
>>> dir(bar)
['MyFunc', '__doc__', '__module__', 'foo']

>>> pickle.dump(bar, outfile)
 |
 ------
	 |
      \/
(i__main__
MyThirdClass
p0
(dp1
S'foo'
p2
(i__main__
MySecondClass
p3
(dp4
g2
(i__main__
MyClass
p5
(dp6
S'blah'
p7
I1
sbsbsb.

>>> blarg = pickle.load(infile)
>>> dir(blarg)
['MyFunc', '__doc__', '__module__', 'foo']

>>> blarg.foo.foo.blah
1
>>> 

The has-a nested relationships seem to work. Is it the is-a that is broken
in pickle? I never knew that to be a nested relationship.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Patrick K.
O'Brien
Sent: Thursday, January 16, 2003 10:39 AM
To: twisted-python at twistedmatrix.com; Steve Waterbury
Subject: Re: [Twisted-Python] Large project (IMS) architecture


On Thursday 16 January 2003 12:01 pm, Steve Waterbury wrote:
> Itamar Shtull-Trauring wrote:
> > PB actually implements its own version of Pickle as well (jelly)...
>
> And jelly does nested objects, which Pickle can't.

I'm not sure what you mean by that. Could you explain in what way Pickle 
can't handle nested objects? Thanks.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From bob at redivi.com  Sat Jan 18 12:43:00 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 18 Jan 2003 14:43:00 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions 
Message-ID: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>

On Saturday, Jan 18, 2003, at 07:57 America/New_York, Andrew Bennetts 
wrote:

> On Sat, Jan 18, 2003 at 11:26:38PM +1100, Andrew Bennetts wrote:
>> On Fri, Jan 17, 2003 at 07:04:01PM -0500, Bob Ippolito wrote:
>>> I've noticed that there isn't really a good/standard way to do 
>>> timeouts
>>> (without bad things happening) or cancel deferreds in Twisted 
>>> [without
>>> subclassing everything you use, which isn't good in my book].
>>
>> I've glanced at your code and log, but it's not immediately clear to 
>> me what
>> the problem is...
>
> For that matter, perhaps another solution would be to mandate that a 
> method
> creating a Deferred is responsible for configuring it with an errback 
> that
> will cancel pending operations so that .callback won't be called.

That's exactly what I am proposing!  :)

Look at the class "DoesHandleTimeoutsByItself" -- that's exactly what 
it does, register an errback to a method such that it can cancel what 
it's doing so that it never tries to do a callback or another errback.

What bothers me most isn't that an exception is being raised, but that 
it is impossible to reasonably catch that exception unless you subclass 
  or otherwise do some nasty modifications to the reactor, deferred, or 
whichever class causes the exception.

-bob




From pobrien at orbtech.com  Sat Jan 18 12:59:58 2003
From: pobrien at orbtech.com (Patrick K. O'Brien)
Date: Sat, 18 Jan 2003 13:59:58 -0600
Subject: [Twisted-Python] Nested objects in pickle (was:  Large projec t (IMS) architecture)
In-Reply-To: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>
References: <A7E67E8DB535D411ADC8009027F6449B496393@www.et.rts.int>
Message-ID: <200301181359.58439.pobrien@orbtech.com>

On Thursday 16 January 2003 01:09 pm, Rick Richardson wrote:
> The has-a nested relationships seem to work. Is it the is-a that is
> broken in pickle? I never knew that to be a nested relationship.

Not quite. The real issue concerns classes and functions defined within 
other classes, functions, or methods. Pickling only works on objects 
defined at the "top" level of a module. Here is an example:

>>> import pickle
>>> class Foo:
...     def __init__(self):
...         class Bar:
...             def __init__(self):
...                 self.type = 'Nested class'           
...         self.bar = Bar()
... 
>>> foo = Foo()
>>> foo.bar.type
'Nested class'
>>> s = pickle.dumps(foo)
>>> foo2 = pickle.loads(s)
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/pickle.py", line 986, in loads
    return Unpickler(file).load()
  File "/usr/local/lib/python2.2/pickle.py", line 597, in load
    dispatch[key](self)
  File "/usr/local/lib/python2.2/pickle.py", line 767, in load_inst
    klass = self.find_class(module, name)
  File "/usr/local/lib/python2.2/pickle.py", line 824, in find_class
    klass = getattr(mod, name)
AttributeError: 'module' object has no attribute 'Bar'
>>> 

For more pickling details see my article at 
http://www-106.ibm.com/developerworks/library/l-pypers.html as well as the 
section of the Python documentation dealing with Pickling limitations at 
http://www.python.org/doc/current/lib/node62.html.

-- 
Patrick K. O'Brien
Orbtech      http://www.orbtech.com/web/pobrien
-----------------------------------------------
"Your source for Python programming expertise."
-----------------------------------------------




From glyph at twistedmatrix.com  Sat Jan 18 17:14:10 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Jan 2003 18:14:10 -0600 (CST)
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled
 exceptions 
In-Reply-To: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>
References: <0D3381A2-2B1D-11D7-9312-000A95686CD8@redivi.com>
Message-ID: <20030118.181410.17861993.glyph@twistedmatrix.com>


On Sat, 18 Jan 2003 14:43:00 -0500, Bob Ippolito <bob at redivi.com> wrote:

> What bothers me most isn't that an exception is being raised, but that it is
> impossible to reasonably catch that exception unless you subclass or
> otherwise do some nasty modifications to the reactor, deferred, or whichever
> class causes the exception.

I believe that I expressed concerns when setTimeout was originally proposed,
noting that only the system firing the callback can reasonably terminate
whatever process is doing the callback.

The meaning of "cancel" is domain-dependant, so if we want a general way of
doing this then we need a way to express cancellation in the code which expects
to be calling the callback.  I think that the system that calls the callback is
usually the one that creates the Deferred, so perhaps we could have an optional
argument to the constructor, cancelCallback.

I can't help but feel this is a really ugly corner case, which would be
inconvenient to effectively force everyone who uses a Deferred to implement in
order for setTimeout to be callable. However, I don't have any better ideas.
My original plan here was to always put timeouts somewhere else besides a
Deferred, and have the system that calls the deferred call an errback at that
point (such as with the "timeout" argument to connectTCP).

Another interesting case: what if two people call setTimeout on the same
Deferred?  If it's not purely the creator's responsibility to set the timeout
on a Deferred, then what do we do about conflicts between different points in
the processing chain?

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030118/50c36457/attachment.sig>

From bob at redivi.com  Sat Jan 18 18:57:26 2003
From: bob at redivi.com (Bob Ippolito)
Date: Sat, 18 Jan 2003 20:57:26 -0500
Subject: [Twisted-Python] Deferred execution, timeouts, and unhandled exceptions 
In-Reply-To: <20030118.181410.17861993.glyph@twistedmatrix.com>
Message-ID: <5BDDE2BE-2B51-11D7-9312-000A95686CD8@redivi.com>

On Saturday, Jan 18, 2003, at 19:14 America/New_York, Glyph Lefkowitz 
wrote:

>
> On Sat, 18 Jan 2003 14:43:00 -0500, Bob Ippolito <bob at redivi.com> 
> wrote:
>
>> What bothers me most isn't that an exception is being raised, but 
>> that it is
>> impossible to reasonably catch that exception unless you subclass or
>> otherwise do some nasty modifications to the reactor, deferred, or 
>> whichever
>> class causes the exception.
>
> I believe that I expressed concerns when setTimeout was originally 
> proposed,
> noting that only the system firing the callback can reasonably 
> terminate
> whatever process is doing the callback.
>
> The meaning of "cancel" is domain-dependant, so if we want a general 
> way of
> doing this then we need a way to express cancellation in the code 
> which expects
> to be calling the callback.  I think that the system that calls the 
> callback is
> usually the one that creates the Deferred, so perhaps we could have an 
> optional
> argument to the constructor, cancelCallback.
>
> I can't help but feel this is a really ugly corner case, which would be
> inconvenient to effectively force everyone who uses a Deferred to 
> implement in
> order for setTimeout to be callable. However, I don't have any better 
> ideas.
> My original plan here was to always put timeouts somewhere else 
> besides a
> Deferred, and have the system that calls the deferred call an errback 
> at that
> point (such as with the "timeout" argument to connectTCP).
>
> Another interesting case: what if two people call setTimeout on the 
> same
> Deferred?  If it's not purely the creator's responsibility to set the 
> timeout
> on a Deferred, then what do we do about conflicts between different 
> points in
> the processing chain?

You definitely raise some more interesting points here that didn't 
occur to me, especially the multiple-listener case.  I can think of two 
approaches that could facilitate this..
1) Have the actual operations inherit from Deferred, and have them deal 
with setTimeout and cancellation on their own.
2) Make cancellation some kind of delegate process.. On cancellation 
request, if there are other listeners on that deferred it asks them all 
if they're ok with cancellation.  If all of them say yes, it cancels.  
Otherwise the ones that said yes are sent an errback saying that it was 
cancelled and removed from list of callback/errbacks (so it seems to 
them as if it were cancelled) but the ones that said no will remain as 
they were and the operation will not be cancelled.




From warner at lothar.com  Sun Jan 19 00:06:16 2003
From: warner at lothar.com (Brian Warner)
Date: 18 Jan 2003 23:06:16 -0800
Subject: [Twisted-Python] PATCH: /doc/examples/pbecho.py
In-Reply-To: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>
References: <F150S5ovOPFAEVjbDr20000ed63@hotmail.com>
Message-ID: <871y39vct3.fsf@luther.lothar.com>

"Lee Harr" <missive at hotmail.com> writes:

> I was getting some deprecation errors running this one, so I
> remodeled it to look like /doc/howto/listings/pb/pb6server.py

Thanks for the catch! I've committed your patch to CVS (in a modified form
which still uses .makeIdentity, so we have an example of that *somewhere* in
the docs).. should be in the next release.

thanks,
 -Brian



From acapnotic at twistedmatrix.com  Sun Jan 19 04:45:20 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 19 Jan 2003 03:45:20 -0800
Subject: [Twisted-Python] 1.0.2alpha4 test failures on Alpha, PPC
Message-ID: <1042976718.25671.78.camel@troglodyte.funhouse>

As part of preparation for a CVSToys release, I installed Twisted on
SourceForge's compile farm machines.  (At least the ones with suitable
versions of Python.)  I got a boatload of Errors running tests on their
Alpha machine, and a few Failures on their PPC box.  Results can be seen
in the 'tests' tarballs/directories at 
http://twistedmatrix.com/users/acapnotic/wip/

This generates some suggestions for Trial:
I didn't see a file with the quick OK/pass/fail summary in it in the
_trial directory, instead I made a runtests.out by redirecting stdout
and stderr.  It'd be nice if runtests generated such a thing alongside
test.log by itself, though.

Also, does trial record stats on the environment it's running in?  Host
platform, python versions, etc.  That might be good.

Quick list of offenders:

under Alpha:
FTP, names, test_policies, test_smtp.LoopbackSMTPTestCase.testMessages,
test_tcp.ConnectorTestCase.testUserFail (twice?),
test_udp.MulticastTestCase.testInterface.

under PPC:
testFileRebuild (twisted.test.test_rebuild.RebuildTestCase)
testReconnect (twisted.test.test_tcp.ConnectorTestCase)
testFailing (twisted.test.test_tcp.LoopbackTestCase)

"But-it-worked-on-my-machine"-ly,

 - Kevin

-- 
The moon is full, 99.4% illuminated, 15.5 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030119/53d2bd50/attachment.sig>

From mike.thompson at day8.com.au  Sun Jan 19 05:42:51 2003
From: mike.thompson at day8.com.au (Mike Thompson)
Date: Sun, 19 Jan 2003 23:42:51 +1100
Subject: [Twisted-Python] ZEO/Twisted?
Message-ID: <000001c2bfb8$47bcd300$4cde1cd3@Notebook>

I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
transactions arrive at the server, they are stored thru ZEO into a ZODB
database.

Is this combination (ZEO/Twisted) known to work/not-work?  Any info/pointers
appreciated.

Yours drowning in technology,
Mike.






From mike.thompson at day8.com.au  Sun Jan 19 16:21:27 2003
From: mike.thompson at day8.com.au (Mike Thompson)
Date: Mon, 20 Jan 2003 10:21:27 +1100
Subject: [Twisted-Python] Re: ZEO/Twisted?
Message-ID: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>

> I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
> transactions arrive at the server, they are stored thru ZEO into a ZODB
> database.

> Is this combination (ZEO/Twisted) known to work/not-work?  Any
info/pointers
> appreciated.

> Yours drowning in technology,
> Mike.

Okay. I think I've answered my question. I've found this Feb-'02 post in the
Zope3-dev archives ...

     http://lists.zope.org/pipermail/zope3-dev/2002-February/000516.html

Seems to say that Twisted and ZEO do not mix.  $@#$!@*

This post is almost a year old, so I'm wondering if anything has anything
happened since it was written. Has the release of Standalone ZODB prompted
something, said he hopefully.

Is the potentially blocking nature of "ZEO commits" the problem?  Or is the
handling of the "ZEO cache invalidation", er, messages? Or is it something
else entirely?

Thanks,
Mike.





From mario at ruggier.org  Sun Jan 19 18:19:21 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Mon, 20 Jan 2003 02:19:21 +0100
Subject: [Twisted-Python] Re: ZEO/Twisted?
In-Reply-To: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
Message-ID: <34367D3A-2C15-11D7-8D12-000393756786@ruggier.org>

Hi,

fyi, in case you might not be aware of it... an interesting bridge for 
postgres (in
particular, but not only) was announced a few days ago  (on daily 
python-url,
http://www.pythonware.com/daily/index.htm  2003-01-14, titled "Modeling
Framework, an object-relational bridge for Python", by Sébastien 
Bigaret).
It is currently kind of bolted to Zope, but would be very interesting to
have it also available for twisted.

mario


On lundi, jan 20, 2003, at 00:21 Europe/Amsterdam, Mike Thompson wrote:

>
>> I'm considering using ZEO/ZODB to backend a Twisted server.  I.e. as
>> transactions arrive at the server, they are stored thru ZEO into a 
>> ZODB
>> database.
>
>> Is this combination (ZEO/Twisted) known to work/not-work?  Any
> info/pointers
>> appreciated.
>
>> Yours drowning in technology,
>> Mike.
>
> Okay. I think I've answered my question. I've found this Feb-'02 post 
> in the
> Zope3-dev archives ...
>
>      
> http://lists.zope.org/pipermail/zope3-dev/2002-February/000516.html
>
> Seems to say that Twisted and ZEO do not mix.  $@#$!@*
>
> This post is almost a year old, so I'm wondering if anything has 
> anything
> happened since it was written. Has the release of Standalone ZODB 
> prompted
> something, said he hopefully.
>
> Is the potentially blocking nature of "ZEO commits" the problem?  Or 
> is the
> handling of the "ZEO cache invalidation", er, messages? Or is it 
> something
> else entirely?
>
> Thanks,
> Mike.
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Sun Jan 19 21:36:59 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 19 Jan 2003 23:36:59 -0500
Subject: [Twisted-Python] Re: ZEO/Twisted?
In-Reply-To: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
References: <000101c2c011$7db7f4e0$4cde1cd3@Notebook>
Message-ID: <20030119233659.00dbcbf6.twisted@itamarst.org>

On Mon, 20 Jan 2003 10:21:27 +1100
"Mike Thompson" <mike.thompson at day8.com.au> wrote:

> Is the potentially blocking nature of "ZEO commits" the problem?  Or
> is the handling of the "ZEO cache invalidation", er, messages? Or is
> it something else entirely?

They use different event loops. I'm hoping ZEO gets ported to Twisted's
event loop in the future.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From acapnotic at twistedmatrix.com  Sun Jan 19 23:05:32 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 19 Jan 2003 22:05:32 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.3, the Rise of Im
Message-ID: <1043042730.25671.112.camel@troglodyte.funhouse>

CVSToys version 1.0.3 has been released for your software consuming
pleasure.  The biggest changes are in the chat and web-based
notification clients.  Sending commit notifications to an IRC channel is
now possible without the hassle of an intermediary Words server, and the
web/RSS interface has been updated to work with recent versions of
Twisted.  Also, if your commits list has found it difficult to deal with
commit messages coming from different addresses, it's now possible to
specify a fixed address to put in the From header.

As always, everything CVSToys may be found at 
http://purl.net/net/CVSToys

Share and Enjoy,

 - Kevin Turner
   (Acapnotic)

-- 
The moon is waning gibbous, 97.4% illuminated, 16.3 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030119/6c461a1e/attachment.sig>

From mrrileyx at yahoo.com  Sun Jan 19 18:43:53 2003
From: mrrileyx at yahoo.com (Sean Riley)
Date: Sun, 19 Jan 2003 19:43:53 -0600
Subject: [Twisted-Python] twisted mentioned on gamasutra
Message-ID: <HOEEKPCOKELHCNIJNMAGEEBACJAA.mrrileyx@yahoo.com>

http://www.gamasutra.com/php-bin/letter_display.php?letter_id=443

---------------------------------
"I'm not as interested in being witty as I am in being clear", Scott Meyers
Sean Riley
MrRileyX at yahoo.com



From exarkun at intarweb.us  Mon Jan 20 11:47:11 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Mon, 20 Jan 2003 13:47:11 -0500
Subject: [Twisted-Python] socket errors
Message-ID: <20030120184711.GA27668@meson.dyndns.org>

  Creating a socket can raise an exception in a few circumstances.  Bad
arguments for one (we don't have to worry about this, since we control the
arguments in all circumstances); too many open files for another.  Attached
patch addresses the second circumstance, by catching the raised socket.error
and wrapping it up in a CannotListenError.  It seems unlikely that anyone
has code to handle this error condition (and hence is relying on
socket.error being raised), and CannotListenError seems to be a better thing
to be raising in this case.  Anyone disagree?  Also, the XYZClient classes
might be changed to catch the same socket.error and raise a ConnectError
instead (attached doesn't address this).

  Jp


-- 
Elitism: It's lonely at the top, but it's comforting to look down upon
everyone at the bottom.
--
 12:00am up 35 days, 9:48, 3 users, load average: 0.61, 0.33, 0.22
-------------- next part --------------
Index: tcp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/tcp.py,v
retrieving revision 1.99
diff -u -r1.99 tcp.py
--- tcp.py	1 Jan 2003 14:32:27 -0000	1.99
+++ tcp.py	20 Jan 2003 18:36:48 -0000
@@ -451,8 +451,8 @@
             os.chmod(self.port, 0666)
             self.unixsocket = 1
         else:
-            skt = self.createInternetSocket()
             try:
+                skt = self.createInternetSocket()
                 skt.bind((self.interface, self.port))
             except socket.error, le:
                 raise CannotListenError, (self.interface, self.port, le)
Index: udp.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/udp.py,v
retrieving revision 1.34
diff -u -r1.34 udp.py
--- udp.py	19 Nov 2002 17:48:58 -0000	1.34
+++ udp.py	20 Jan 2003 18:36:48 -0000
@@ -90,8 +90,8 @@
     
     def _bindSocket(self):
         log.msg("%s starting on %s"%(self.protocol.__class__, self.port))
-        skt = self.createInternetSocket()
         try:
+            skt = self.createInternetSocket()
             skt.bind((self.interface, self.port))
         except socket.error, le:
             raise error.CannotListenError, (self.interface, self.port, le)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030120/5339b232/attachment.sig>

From radix at twistedmatrix.com  Mon Jan 20 14:37:42 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Jan 2003 16:37:42 -0500
Subject: [Twisted-Python] lore bug
Message-ID: <20030120213742.GA1029@Radii>

&lt; and &gt; in source listings that are inserted directly in the
source .html don't work. See
http://twistedmatrix.com/documents/howto/widgets.html and
doc/howto/widgets.html for an example of this. If nobody gets around
to this by tomorrow I'll try to dive in.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From itamar at itamarst.org  Mon Jan 20 14:41:41 2003
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Jan 2003 16:41:41 -0500
Subject: [Twisted-Python] socket errors
In-Reply-To: <20030120184711.GA27668@meson.dyndns.org>
References: <20030120184711.GA27668@meson.dyndns.org>
Message-ID: <20030120164141.641b0a28.itamar@itamarst.org>

Patch looks fine to me.



From radix at twistedmatrix.com  Mon Jan 20 19:41:46 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 20 Jan 2003 21:41:46 -0500
Subject: [Twisted-Python] lore bug
In-Reply-To: <20030120213742.GA1029@Radii>
References: <20030120213742.GA1029@Radii>
Message-ID: <20030121024146.GB1029@Radii>

On Mon, Jan 20, 2003 at 04:37:42PM -0500, Christopher Armstrong wrote:
> &lt; and &gt; in source listings that are inserted directly in the
> source .html don't work. See
> http://twistedmatrix.com/documents/howto/widgets.html and

Ahem. I meant http://twistedmatrix.com/documents/howto/widgets, of
course. The one with an .html extension is the source.

> doc/howto/widgets.html for an example of this. If nobody gets around
> to this by tomorrow I'll try to dive in.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From exarkun at intarweb.us  Tue Jan 21 20:59:01 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Tue, 21 Jan 2003 22:59:01 -0500
Subject: [Twisted-Python] Test failures
Message-ID: <20030122035901.GA5387@meson.dyndns.org>

  Been playing around with different test orders (courtesy trials --random
parameter) and I've found that with a seed of 4:

===============================================================================
FAILURE: testWakeUp (twisted.test.test_internet.InterfaceTestCase)
-------------------------------------------------------------------------------
Traceback (most recent call last):
   File "/home/exarkun/projects/python/Twisted/twisted/trial/unittest.py", line 122, in runOneTest
    method(testCase)
   File "/home/exarkun/projects/python/Twisted/twisted/test/test_internet.py", line 266, in testWakeUp
    self.assertApproximates(time.time(), start + 0.5, 0.5)
   File "/home/exarkun/projects/python/Twisted/twisted/trial/unittest.py", line 62, in assertApproximates
    raise AssertionError, (msg or "%s ~== %s" % (first, second))
 AssertionError: 1043207178.43 ~== 1043207173.94
===============================================================================
ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
-------------------------------------------------------------------------------
Traceback! exceptions.AttributeError, TCPClient instance has no attribute 'connector'
/home/exarkun/projects/python/Twisted/twisted/internet/default.py:566:doSelect
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:250:doConnect
===============================================================================
ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
-------------------------------------------------------------------------------
Traceback! exceptions.AttributeError, 'NoneType' object has no attribute 'connectionLost'
/home/exarkun/projects/python/Twisted/twisted/internet/default.py:579:doSelect
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:258:connectionLost
/home/exarkun/projects/python/Twisted/twisted/internet/tcp.py:140:connectionLost
-------------------------------------------------------------------------------

consistently comes up.

  Jp

-- 
"There is no reason for any individual to have a computer in their
home."
                -- Ken Olson, President of DEC, World Future Society
                   Convention, 1977
--
 12:00am up 36 days, 9:48, 4 users, load average: 0.10, 0.14, 0.14
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030121/beeea534/attachment.sig>

From dave at krondo.com  Wed Jan 22 02:45:11 2003
From: dave at krondo.com (Dave Peticolas)
Date: 22 Jan 2003 01:45:11 -0800
Subject: [Twisted-Python] Test failures
In-Reply-To: <20030122035901.GA5387@meson.dyndns.org>
References: <20030122035901.GA5387@meson.dyndns.org>
Message-ID: <1043228711.5173.199.camel@oneiros>

On Tue, 2003-01-21 at 19:59, Jp Calderone wrote:
>   Been playing around with different test orders (courtesy trials --random
> parameter) and I've found that with a seed of 4:
> 
> FAILURE: testWakeUp (twisted.test.test_internet.InterfaceTestCase)
> ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)
> ERROR: testFailedRETR (twisted.test.test_ftp.FTPClientTests)

I haven't gotten the second two, but the first one was
caused by threading not being initialized in the reactor.
Should be fixed now.

dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030122/30282c5f/attachment.sig>

From whisper at oz.net  Wed Jan 22 18:08:17 2003
From: whisper at oz.net (David LeBlanc)
Date: Wed, 22 Jan 2003 17:08:17 -0800
Subject: [Twisted-Python] Gtk version
Message-ID: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>

Which version of gtk and pygtk should I be using to get twisted GUI's to
work on Windows 2000? In this particular case, it's manhole.

PyGtk-0.6.11 complains about GDK on every keystroke:
This is after the GUI comes up:
setting login report 'connecting...'
-:1: error: invalid string constant "Console_stdout", expected valid string
constant

It does let me log in using the user and password entered when I made the
tap.
Every keystroke causes this:
Traceback (most recent call last):
  File "J:\Python22\Lib\site-packages\pygtk\gtk.py", line 127, in __call__
    ret = apply(self.func, a)
  File "J:\Python22\lib\site-packages\twisted\manhole\ui\pywidgets.py", line
63, in processKey
    isMeta = event.state & gtk.GDK.MOD4_MASK
AttributeError: 'module' object has no attribute 'GDK'

PyGtk-1.99.11-libglade dies with:
J:\twila>manhole
Traceback (most recent call last):
  File "J:\python22\scripts\manhole.py", line 33, in ?
    from twisted.scripts import manhole
  File "J:\Python22\Lib\site-packages\twisted\scripts\manhole.py", line 23,
in ?
    from twisted.spread.ui import gtkutil
  File "J:\Python22\lib\site-packages\twisted\spread\ui\gtkutil.py", line
62, in ?
    class GetString(gtk.GtkWindow):
AttributeError: 'module' object has no attribute 'GtkWindow'

PyGtk-0.6.11 seems to be using gtk+-1.3.0

PyGtk-1.99.11-libglade uses gtk2_libraries-win32.zip

Thanks,

David LeBlanc
Seattle, WA USA




From andrewextra at puzzling.org  Tue Jan 21 01:24:40 2003
From: andrewextra at puzzling.org (andrewextra at puzzling.org)
Date: Tue, 21 Jan 2003 03:24:40 -0500 (EST)
Subject: [Twisted-Python] lore bug
In-Reply-To: <20030121024146.GB1029@Radii>
References: <20030120213742.GA1029@Radii> <20030121024146.GB1029@Radii>
Message-ID: <4541.130.95.169.10.1043137480.squirrel@mail.puzzling.org>

> On Mon, Jan 20, 2003 at 04:37:42PM -0500, Christopher Armstrong wrote:
>
>> doc/howto/widgets.html for an example of this. If nobody gets around
>> to this by tomorrow I'll try to dive in.

I'm at linux.conf.au all week, so I won't be able to look at this anytime
soon. :(

-Andrew.




From mario at ruggier.org  Thu Jan 23 10:40:55 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Thu, 23 Jan 2003 18:40:55 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <D34E8C99-2EF9-11D7-A447-000393756786@ruggier.org>

Hi, sorry for the newbie questions but I do not understand how I can 
combine the resource interface with deferred callbacks. Or, 
specifically, can anyone point me to a simple example of a .rpy that 
does a simple database call, and returns the result to the http 
response?

Many thanks,

Mario 




From exarkun at intarweb.us  Thu Jan 23 12:19:03 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Thu, 23 Jan 2003 14:19:03 -0500
Subject: [Twisted-Python] Arbitrary Port/Connector objects
Message-ID: <20030123191903.GA5664@meson.dyndns.org>

  So far there are a couple use-cases for listening and connecting with
IListeningPort/IConnector implementers that aren't in twisted.internet. 
Tv's SRV connector is one, IPv6 sockets is another.  Currently it is
cumbersome to use these, both because there are no convenience methods in
reactor, and because if you want them to serialize properly you have to
handle storing and restarting them yourself.

  Attached patch adds two methods to Application and two methods to
the default reactor (they'll need to be put in an interface somewhere, too -
I wasn't sure what the best place for them would be): listenWith and
connectWith.  These take a type object that implements IListeningPort and
IConnector respectively, and then perform similar operations to the other
listen and connect methods, including serialization and rebinding the ports
on application startup.  Also added to Application is unlistenWith, an
awkwardly named function that causes a listening Port to stop listening.

  Jp

-- 
Lowery's Law:
        If it jams -- force it.  If it breaks, it needed replacing anyway.
-- 
 up 38 days, 23:48, 5 users, load average: 1.88, 1.70, 1.66
-------------- next part --------------
? app.ann
? socket.diff
? with.diff
Index: app.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/app.py,v
retrieving revision 1.73
diff -u -r1.73 app.py
--- app.py	23 Jan 2003 16:28:07 -0000	1.73
+++ app.py	23 Jan 2003 19:05:43 -0000
@@ -259,11 +259,14 @@
         self.tcpPorts = []              # check
         self.udpPorts = []
         self.sslPorts = []
+        self.extraPorts = []
         self._listenerDict = {}
+        self._extraListeners = {}
         # a list of (tcp, ssl, udp) Connectors
         self.tcpConnectors = []
         self.sslConnectors = []
         self.unixConnectors = []
+        self.extraConnectors = []
         # a list of twisted.python.delay.Delayeds
         self.delayeds = []              # check
         # a list of twisted.internet.cred.service.Services
@@ -277,7 +280,7 @@
             self.uid = uid or os.getuid()
             self.gid = gid or os.getgid()
 
-    persistenceVersion = 10
+    persistenceVersion = 11
 
     _authorizer = None
 
@@ -289,6 +292,16 @@
             self._authorizer.setApplication(self)
         return self._authorizer
 
+    def upgradeToVersion11(self):
+        self._extraListeners = {}
+        self.extraPorts = []
+        self.extraConnectors = []
+
+    def upgradeToVersion10(self):
+        # persistenceVersion was 10, but this method did not exist
+        # I do not know why.
+        pass
+
     def upgradeToVersion9(self):
         self._authorizer = self.authorizer
         del self.authorizer
@@ -366,6 +379,36 @@
             del dict['_listenerDict']
         return dict
 
+    def listenWith(self, portType, *args, **kw):
+        """
+        Start an instance of the given C{portType} listening.
+
+        @type portType: type which implements C{IListeningPort}
+        """
+        self.extraPorts.append((portType, args, kw))
+        if self.running:
+            from twisted.internet import reactor
+            p = reactor.listenWith(portType, *args, **kw)
+            self._extraListeners[(portType, args, kw)] = p
+            return p
+
+    def unlistenWith(self, portType, *args, **kw):
+        toRemove = []
+        for t in self.extraPorts:
+            _portType, _args, _kw = t
+            if portType == _portType:
+                if args == _args[:len(args)]:
+                    for (k, v) in kw.items():
+                        if _kw.has_key(k) and _kw[k] != v:
+                            break
+                    else:
+                        toRemove.append(t)
+        for t in toRemove:
+            self.extraPorts.remove(t)
+            if self._extraListeners.has_key(t):
+                self._extraListeners[t].stopListening()
+                del self._extraListeners[t]
+
     def listenTCP(self, port, factory, backlog=5, interface=''):
         """
         Connects a given protocol factory to the given numeric TCP/IP port.
@@ -409,6 +452,17 @@
             from twisted.internet import reactor
             return reactor.listenSSL(port, factory, ctxFactory, backlog, interface)
 
+    def connectWith(self, connectorType, *args, **kw):
+        """
+        Start an instance of the given C{connectorType} connecting.
+        
+        @type connectorType: type which implements C{IConnector}
+        """
+        self.extraConnectors.append((connectorType, args, kw))
+        if self.running:
+            from twisted.internet import reactor
+            return reactor.connectWith(connectorType, *args, **kw)
+
     def connectTCP(self, host, port, factory, timeout=30, bindAddress=None):
         """Connect a given client protocol factory to a specific TCP server."""
         self.tcpConnectors.append((host, port, factory, timeout, bindAddress))
@@ -582,12 +636,17 @@
                 except error.CannotListenError, msg:
                     log.msg('error on SSL port %s: %s' % (port, msg))
                     return
+            for portType, args, kw in self.extraPorts:
+                reactor.listenWith(portType, *args, **kw)
+
             for host, port, factory, ctxFactory, timeout, bindAddress in self.sslConnectors:
                 reactor.connectSSL(host, port, factory, ctxFactory, timeout, bindAddress)
             for host, port, factory, timeout, bindAddress in self.tcpConnectors:
                 reactor.connectTCP(host, port, factory, timeout, bindAddress)
             for address, factory, timeout in self.unixConnectors:
                 reactor.connectUNIX(address, factory, timeout)
+            for connectorType, args, kw in self.extraConnectors:
+                reactor.connectWith(connectorType, *args, **kw)
 
             for service in self.services.values():
                 service.startService()
Index: default.py
===================================================================
RCS file: /cvs/Twisted/twisted/internet/default.py,v
retrieving revision 1.59
diff -u -r1.59 default.py
--- default.py	9 Jan 2003 08:03:11 -0000	1.59
+++ default.py	23 Jan 2003 19:05:43 -0000
@@ -380,7 +380,16 @@
         p.startListening()
         return p
 
+    # IReactorSomething else
+    def listenWith(self, portType, *args, **kw):
+        p = portType(*args, **kw)
+        p.startListening()
+        return p
 
+    def connectWith(self, connectorType, *args, **kw):
+        c = connectorType(*args, **kw)
+        c.connect()
+        return c
 
 class _Win32Waker(log.Logger, styles.Ephemeral):
     """I am a workaround for the lack of pipes on win32.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030123/6617556f/attachment.sig>

From bh at intevation.de  Thu Jan 23 12:23:56 2003
From: bh at intevation.de (Bernhard Herzog)
Date: 23 Jan 2003 20:23:56 +0100
Subject: [Twisted-Python] Error handling in Application.bindPorts
Message-ID: <6qhebzfz5f.fsf@salmakis.intevation.de>

Hi,

I'm trying to get one of my twisted programs to terminate immediately if
it can't listen on a port on startup. It's main program is basically the
same as in e.g. doc/howto/listings/application/app1.py, i.e (quoting
from app1.py):

app = twisted.internet.app.Application("daytimer")
f = Factory()
f.protocol = Daytime
app.listenTCP(8813, f)

app.run()

My program uses a different protocol and factory, but the principle is
the same: it calls app.listenTCP before it calls app.run().

Now, if the mainloop isn't running yet, listenTCP doesn't start
listening immediately[1] but simply appends the arguments to a list.
Then, when app.run() is called and that list is not empty it will call
bindPorts before entering the mainloop.

bindPorts simply catches the CannotListenError, logs a message and
returns immediately even if not all ports have been bound yet.
Unfortunately, even if bindPorts returns early, app.run still enters the
mainloop. There doesn't seem to be a good way to avoid this.

IMO bindPorts should reraise the exception after writing logging the
error instead of simply returning. 

   Bernhard


[1] I think app.listenTCP doesn't try to listen immediately because this
method is also used when creating taps and that should be possible even
if the port is currently in use or the user doesn't have permission to
listen on that port.

-- 
Intevation GmbH                                 http://intevation.de/
Sketch                                 http://sketch.sourceforge.net/
MapIt!                                           http://www.mapit.de/



From twisted at sylane.com  Thu Jan 23 12:25:23 2003
From: twisted at sylane.com (Sylane)
Date: Thu, 23 Jan 2003 20:25:23 +0100
Subject: [Twisted-Python] First contribution...
Message-ID: <80857963986.20030123202523@sylane.com>

Hi,

More than a week ago, I posted a little patch
for pb saying I working on a pb example...
Since this post, nobody ever reply it.
Even to say the patch sucks or something
and it's not applied to the CVS at this time.
The example I worked on DONT work without
this patch cause the cacheable implementation is broken...
If nobody care of my contributions,
OK say it and i will start a fork of  spread for my own use.
If I did bad, if it's not the way contributions
must be done, OK say it too.
If nobody received my post, you will not received
this one too... and I don't understand anymore.

P.S: Pleeeassse someone reply......
P.S.2: I'm not a paranoiac. And it's not because I'm a paranoiac that you're not all against me ! ! !

-- 
Best regards,
 Sylane                          mailto:twisted at sylane.com




From twisted at itamarst.org  Thu Jan 23 12:54:03 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Jan 2003 14:54:03 -0500
Subject: [Twisted-Python] First contribution...
In-Reply-To: <80857963986.20030123202523@sylane.com>
References: <80857963986.20030123202523@sylane.com>
Message-ID: <20030123145403.7500a7de.twisted@itamarst.org>

On Thu, 23 Jan 2003 20:25:23 +0100
Sylane <twisted at sylane.com> wrote:

> More than a week ago, I posted a little patch
> for pb saying I working on a pb example...
> Since this post, nobody ever reply it.
> Even to say the patch sucks or something

This can happen. things you can do:

1. Choose someone on #twisted with IRC access and nudnik them until they
put the patch in or tell you it's no good.
2. Add it to sf.net/projects/twisted bug tracker.
3. Help us finish our issue tracker so we can use a decent bug tracking
system and don't have to use mailing list or sourceforge.



From twisted at itamarst.org  Thu Jan 23 12:56:51 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 23 Jan 2003 14:56:51 -0500
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <20030123191903.GA5664@meson.dyndns.org>
References: <20030123191903.GA5664@meson.dyndns.org>
Message-ID: <20030123145651.4bc76a49.twisted@itamarst.org>

On Thu, 23 Jan 2003 14:19:03 -0500
Jp Calderone <exarkun at intarweb.us> wrote:

>   Attached patch adds two methods to Application and two methods to
> the default reactor (they'll need to be put in an interface somewhere,
> too - I wasn't sure what the best place for them would be): listenWith
> and connectWith.

I think the reactor implementations of the method should pass the
reactor as the first arg to the connectorType or listenType, e.g.:

+    def connectWith(self, connectorType, *args, **kw):
+        c = connectorType(self, *args, **kw)
+        c.connect()
+        return c



From glyph at twistedmatrix.com  Thu Jan 23 15:05:04 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Jan 2003 16:05:04 -0600 (CST)
Subject: [Twisted-Python] First contribution...
In-Reply-To: <80857963986.20030123202523@sylane.com>
References: <80857963986.20030123202523@sylane.com>
Message-ID: <20030123.160504.74745680.glyph@twistedmatrix.com>


On Thu, 23 Jan 2003 20:25:23 +0100, Sylane <twisted at sylane.com> wrote:

> If nobody care of my contributions, OK say it and i will start a fork of
> spread for my own use.  If I did bad, if it's not the way contributions must
> be done, OK say it too.  If nobody received my post, you will not received
> this one too... and I don't understand anymore.

Sylane,

I'm sorry, but most of the Twisted dev team is both very busy doing other work
and highly distractable :-).  That doesn't mean we're not interested in your
contributions, and I'm sorry for the long delay.

I don't know if your patch was applied, but I know that a few fixes did go into
twisted.spread last week.  If you're still having problems, I'll try to have a
look later this week.

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030123/f625ce30/attachment.sig>

From ldanielburr at earthlink.net  Thu Jan 23 18:25:42 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Thu, 23 Jan 2003 20:25:42 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Thu, 23 Jan 2003, Mario Ruggier wrote:

>Hi, sorry for the newbie questions but I do not understand how I
>can combine the resource interface with deferred callbacks.  Or,
>specifically, can anyone point me to a simple example of a .rpy
>that does a simple database call, and returns the result to the
>http response?
>
>Many thanks,
>
>Mario

I'm no expert, but you can do something like this (UNTESTED):
-----------------------------------------------------------------
# replace this import with whatever DBAPI module you use...
import cx_Oracle

# twisted imports
from twisted.internet import threads
from twisted.web import resource
from twisted.web.server import NOT_DONE_YET

def databaseOperation():
    con = cx_Oracle.connect("foo/bar at mydb.mysvr.org")
    cur = con.cursor()
    cur.execute("SELECT COUNT(*) FROM MyTable")
    databaseResult = cur.fetchall()
    cur.close()
    con.close()

    return databaseResult[0][0]

def databaseResult(result, httpRequest):
    httpRequest.write(result)
    httpRequest.finish()

class MyResource(resource.Resource):
    def render(self, request):
        d = threads.deferToThread(databaseOperation)
        d.addCallback(databaseResult, request)
        return NOT_DONE_YET

resource = MyResource()
-----------------------------------------------------------------

Of course, you could also use twisted.enterprise.adbapi, but I've experienced a lot of memory leaks occurring when going that route, so I just use deferToThread instead.

There is probably a better way to code this, but I'm not far enough along in my Python/Twisted experience to provide it.

L. Daniel Burr



From radix at twistedmatrix.com  Thu Jan 23 19:38:32 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 23 Jan 2003 21:38:32 -0500
Subject: [Twisted-Python] Gtk version
In-Reply-To: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>
References: <GCEDKONBLEFPPADDJCOEGEPHHIAA.whisper@oz.net>
Message-ID: <20030124023832.GA2017@Radii>

On Wed, Jan 22, 2003 at 05:08:17PM -0800, David LeBlanc wrote:
> Which version of gtk and pygtk should I be using to get twisted GUI's to
> work on Windows 2000? In this particular case, it's manhole.
> 
> PyGtk-0.6.11 complains about GDK on every keystroke:
> This is after the GUI comes up:
> setting login report 'connecting...'
> -:1: error: invalid string constant "Console_stdout", expected valid string
> constant
> 
> It does let me log in using the user and password entered when I made the
> tap.
> Every keystroke causes this:
...
> AttributeError: 'module' object has no attribute 'GDK'
> 
> PyGtk-1.99.11-libglade dies with:
> J:\twila>manhole
...
> AttributeError: 'module' object has no attribute 'GtkWindow'
> 
> PyGtk-0.6.11 seems to be using gtk+-1.3.0

I think this might be your problem. Try Gtk 1.2.x.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From dave at krondo.com  Fri Jan 24 01:39:36 2003
From: dave at krondo.com (Dave Peticolas)
Date: 24 Jan 2003 00:39:36 -0800
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
References: 	 <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
Message-ID: <1043397576.5182.231.camel@oneiros>

On Thu, 2003-01-23 at 17:25, L. Daniel Burr wrote:
> Of course, you could also use twisted.enterprise.adbapi,
> but I've experienced a lot of memory leaks occurring when
> going that route, so I just use deferToThread instead.

I'm about to start using t.e.adbapi pretty heavily,
so I'm interested in this report. Do you have more
details?

thanks,
dave

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030124/f638600c/attachment.sig>

From mario at ruggier.org  Fri Jan 24 03:14:56 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 24 Jan 2003 11:14:56 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
Message-ID: <B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>

Thanks a lot Daniel, that was very helpful. The code you sent works
almost verbatim on a test table in postgres. I have also tried mapped
the same solution to adbapi. Tthe rpy code for both versions is below.
To switch between the 2 just toggle commenting the resource defns.
In the adbapi version, I have some questions:

1.  First of all, would this be the correct way to do this with adbapi?
2. If I stop the reactor at the end of databaseResult_adbapi, twistdweb
returns the http request with correct content, but crashes  
(consistently on
each request).
3. If i just import the reactor privately inside the render() method  
(thus,
never call stop() on it), everything seems to work fine. But is this the
way it should be done?

Thanks again, mario


>> Hi, sorry for the newbie questions but I do not understand how I
>> can combine the resource interface with deferred callbacks.  Or,
>> specifically, can anyone point me to a simple example of a .rpy
>> that does a simple database call, and returns the result to the
>> http response?
>>
>> Many thanks,
>>
>> Mario
>
> I'm no expert, but you can do something like this (UNTESTED):

...

> Of course, you could also use twisted.enterprise.adbapi, but I've  
> experienced a lot of memory leaks occurring when going that route, so  
> I just use deferToThread instead.
>
> There is probably a better way to code this, but I'm not far enough  
> along in my Python/Twisted experience to provide it.
>
> L. Daniel Burr

========================
# common twisted imports
from twisted.web import resource
from twisted.web.server import NOT_DONE_YET

dbname = 'db'
dbuser = 'user'
dbpass = 'pw'

### dbapi

def databaseResult(result, httpRequest):
     httpRequest.write(str(result))
     httpRequest.finish()

def errBack(err, httpRequest):
     httpRequest.write('error: ' + str(err) )
     httpRequest.finish()

def databaseOperation():
     from pyPgSQL import PgSQL
     con = PgSQL.connect(database=dbname,user=dbuser,password=dbpass)
     cur = con.cursor()
     cur.execute("SELECT foo_id,name,weight FROM foo")
     databaseResult = cur.fetchall()
     cur.close()
     con.close()
     return databaseResult #[0][0]

class MyResource(resource.Resource):
     def render(self, request):
         from twisted.internet import threads
         d = threads.deferToThread(databaseOperation)
         d.addCallback(databaseResult, request)
         d.addErrback(errBack, request)
         return NOT_DONE_YET

### adpapi

from twisted.internet import reactor
from twisted.enterprise import row

class FooRow(row.RowObject):
   rowColumns = [
           ('foo_id', 'int'),
           ('name', 'varchar'),
           ('weight', 'int'),
                ]
   rowKeyColumns = [('foo_id', 'int4')]
   rowTableName = 'foo'
   #rowFactoryMethod = ['testFactoryMethod']

def databaseResult_adbapi(result, httpRequest):
     if result:
         for foo in result:
             httpRequest.write('foo: '+str(foo.__dict__)+'<br/>')
     else:
         httpRequest.write('stop:')
     httpRequest.finish()
     #reactor.stop()

def errBack_adbapi(err, httpRequest):
     httpRequest.write('error: '+str(err) )
     httpRequest.finish()
     #reactor.stop()

class MyResource_adbapi(resource.Resource):
     def render(self, request):
         #from twisted.internet import reactor
         from twisted.enterprise import adbapi, reflector
         from twisted.enterprise.sqlreflector import SQLReflector
         dbpool =  
adbapi.ConnectionPool('pyPgSQL.PgSQL',database=dbname,user=dbuser,passwo 
rd=dbpass)
         r = SQLReflector(dbpool,[FooRow])
         d = r.loadObjectsFrom('foo',whereClause=[('foo_id',  
reflector.LESSTHAN, 5)])
         d.addCallback(databaseResult_adbapi, request)
         d.addErrback(errBack_adbapi, request)
         reactor.run()
         return NOT_DONE_YET

###

#resource = MyResource()
resource = MyResource_adbapi()

###
========================





From luciano at hiper.com.br  Fri Jan 24 09:53:53 2003
From: luciano at hiper.com.br (Luciano Ramalho)
Date: Fri, 24 Jan 2003 13:53:53 -0300
Subject: [Twisted-Python] FTPClient put
Message-ID: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>

Can the FTPClient class be used to *send* files (STOR)? If yes, how?

I've succesfully used the ftpclient.py example to retrieve a file 
listing from a server, but reading the API docs and the source of the 
ftp.py module has not given me a clue about how to *send* a file.

Best regards,

Luciano




From twisted at itamarst.org  Fri Jan 24 10:01:34 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 24 Jan 2003 12:01:34 -0500
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>
References: <2045032.1043381404891.JavaMail.nobody@louie.psp.pas.earthlink.net>
	<B03E27DF-2F84-11D7-9D1A-000393756786@ruggier.org>
Message-ID: <20030124120134.5fb8640c.twisted@itamarst.org>

On Fri, 24 Jan 2003 11:14:56 +0100
Mario Ruggier <mario at ruggier.org> wrote:

> 3. If i just import the reactor privately inside the render() method  
> (thus,
> never call stop() on it), everything seems to work fine. But is this
> the way it should be done?

Yes. I'm not even sure why you need to get at the reactor at all.



From mario at ruggier.org  Fri Jan 24 10:36:37 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 24 Jan 2003 18:36:37 +0100
Subject: [Twisted-Python] deferreds, and .rpy resources
In-Reply-To: <20030124120134.5fb8640c.twisted@itamarst.org>
Message-ID: <640A9680-2FC2-11D7-B4F6-000393756786@ruggier.org>

> On Fri, 24 Jan 2003 11:14:56 +0100
> Mario Ruggier <mario at ruggier.org> wrote:
>
>> 3. If i just import the reactor privately inside the render() method
>> (thus,
>> never call stop() on it), everything seems to work fine. But is this
>> the way it should be done?
>
> Yes. I'm not even sure why you need to get at the reactor at all.

Easy. Because i am morphing the example code bits around, to make
the same functionality addressable via an http request, and i swear that
when i tried removing he reactor (as i imagined it was not needed in
such a case) it **did** not work If i do not work! Now you point it out 
I
have tried removing it again, and now it does work just fine!!!

I suggest that one or both of these (corrected) examples be added to 
the list
of examples bundled with twisted, as i would expect that many 
prospective
users will not find this very obvious. If i knew what i was doing i 
would offer
to do it myself...

All the best, mario





From ldanielburr at earthlink.net  Fri Jan 24 11:46:50 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Fri, 24 Jan 2003 13:46:50 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <2559267.1043444812637.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Fri, 24 Jan 2003 18:36:37 +0100, Mario Ruggier wrote:
>I suggest that one or both of these (corrected) examples be added
>to the list of examples bundled with twisted, as i would expect
>that many prospective users will not find this very obvious. If i
>knew what i was doing i would offer to do it myself...
>
>All the best, mario

You are right; Twisted has some good example code, but it needs
more examples that "do stuff", and especially examples that show
how to combine parts of Twisted (web and enterprise, for example)
to accomplish common internet development tasks.

I'll put my money where my mouth is on this one, and clean up the
example I posted (resource + deferToThread).  I'll also post an
example using twisted.enterprise (resource + adbapi).  By the
phrase "cleaned up", I mean compliant with the documentation
guidelines, development guidelines, epydoc, etc.  If the results
don't suck too badly, maybe somebody who understands CVS can
throw them in the examples directory.

L. Daniel Burr



From ldanielburr at earthlink.net  Fri Jan 24 12:08:30 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Fri, 24 Jan 2003 14:08:30 -0500 (GMT)
Subject: [Twisted-Python] deferreds, and .rpy resources
Message-ID: <5735682.1043446112368.JavaMail.nobody@louie.psp.pas.earthlink.net>

On Fri, 24 Jan 2003 00:39:36 -0800, Dave Peticolas wrote:
>On Thu, 2003-01-23 at 17:25, L. Daniel Burr wrote:
>>Of course, you could also use twisted.enterprise.adbapi,
>>but I've experienced a lot of memory leaks occurring when
>>going that route, so I just use deferToThread instead.
>
>I'm about to start using t.e.adbapi pretty heavily, so I'm
>interested in this report. Do you have more details?
>
>thanks,
>dave

To be clear, I definitely *haven't* been using adbapi heavily up
until this point.  The problem I experienced occurred around the
time of Twisted 1.0.1 final, and deadlines prevented my doing any
exhaustive testing.

The scenario was pretty basic:  Connect to an Oracle database,
perform a query, return the result.  Using adbapi from Twisted
1.0.1 and the cx_Oracle DBAPI module, the twistd process showed
steady growth in size.  Each time the code executed, the process
would grow by 10-50k, never releasing any memory.

The same scenario, using DCOracle2, showed similar leakage.
Having insufficient time to debug the thing, I went with the
process of elimination, and started using deferToThread instead
of adbapi, and the leak was gone.  That does not in any way prove
that adbapi is the root cause, only that it may be involved in
some way.

This was all on Win32, by the way, so I have no idea if it is an
issue on Linux or Solaris.  In any case, I'll get a chance to revisit the issue shortly, and I'll report my findings.

L. Daniel Burr



From whisper at oz.net  Fri Jan 24 17:29:38 2003
From: whisper at oz.net (David LeBlanc)
Date: Fri, 24 Jan 2003 16:29:38 -0800
Subject: [Twisted-Python] Gtk version
In-Reply-To: <20030124023832.GA2017@Radii>
Message-ID: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>

Can you tell me where I can find a Windows version of Gtk 1.2.x?

David LeBlanc
Seattle, WA USA

> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Christopher
> Armstrong
> Sent: Thursday, January 23, 2003 18:39
> To: twisted-python at twistedmatrix.com
> Subject: Re: [Twisted-Python] Gtk version
>
>
> On Wed, Jan 22, 2003 at 05:08:17PM -0800, David LeBlanc wrote:
> > Which version of gtk and pygtk should I be using to get twisted GUI's to
> > work on Windows 2000? In this particular case, it's manhole.
> >
> > PyGtk-0.6.11 complains about GDK on every keystroke:
> > This is after the GUI comes up:
> > setting login report 'connecting...'
> > -:1: error: invalid string constant "Console_stdout", expected
> valid string
> > constant
> >
> > It does let me log in using the user and password entered when
> I made the
> > tap.
> > Every keystroke causes this:
> ...
> > AttributeError: 'module' object has no attribute 'GDK'
> >
> > PyGtk-1.99.11-libglade dies with:
> > J:\twila>manhole
> ...
> > AttributeError: 'module' object has no attribute 'GtkWindow'
> >
> > PyGtk-0.6.11 seems to be using gtk+-1.3.0
>
> I think this might be your problem. Try Gtk 1.2.x.
>
> --
>  Twisted | Christopher Armstrong: International Man of Twistery
>   Radix  |          Release Manager,  Twisted Project
> ---------+     http://twistedmatrix.com/users/radix.twistd/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dsposx at mac.com  Fri Jan 24 16:10:41 2003
From: dsposx at mac.com (Donovan Preston)
Date: Fri, 24 Jan 2003 15:10:41 -0800
Subject: [Twisted-Python] Woven Refactor
Message-ID: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>

Hello everyone in Twisted land,

This is an experimental Woven View refactoring that I have been working 
on for the past two weekends. What does it do?

* Uses a flat list of outstanding DOM nodes instead of recursion to 
keep track of where Woven is in the page rendering process

* Removes View's dependency on DOMTemplate as a base class, in 
preparation for deprecation of DOMTemplate (all of the same semantics 
are now directly implemented in View). As a result, View has no base 
classes, making the inheritance chain cleaner.

* Stores the namespace stacks (model, view, and controller name lookup 
chain) in the View directly, and each widget gets an immutable 
reference to it's position in the lookup chain when it is created, 
making re-rendering Widgets more reliable

* Represents the namespace stacks as a cons-like tuple structure 
instead of mutable python lists, reducing confusion and list-copying; 
instead of copying the current stack lists each time a Widget is 
created, it just gets a reference to the current tuples for each of the 
stacks

What does that mean?

* The tracebacks are far shorter now, since we're no longer recursing 
deeply into the DOM tree

* Namespace stack behavior is less buggy now; some of the outstanding 
mysterious bugs regarding rendering Widgets that have a Deferred model 
should hopefully go away

* View has no base classes now, making the inheritance tree much 
shallower

What do I need before I check it in?

* Feedback! If you have a Woven application, please apply this patch 
and let me know if anything breaks. There are no API changes, and 
behavior should be the same (unless you were relying on the older, 
possibly buggy behavior; this shouldn't be the case)

Assuming all goes well, I will check this in this weekend. Once I do, 
it paves the way for further cleanup of the Woven codebase. Onward and 
upward towards stable Woven!

Donovan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wovenRefactor.diff
Type: application/octet-stream
Size: 24494 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030124/126c7aee/attachment-0002.obj>
-------------- next part --------------


From acapnotic at twistedmatrix.com  Sun Jan 26 01:33:22 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 26 Jan 2003 00:33:22 -0800
Subject: [Twisted-Python] Woven Refactor
In-Reply-To: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
References: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
Message-ID: <1043570000.27413.75.camel@troglodyte.funhouse>

Well, it doesn't break the web stuff in CVSToys.




From lordvan at lordvan.com  Sun Jan 26 03:19:48 2003
From: lordvan at lordvan.com (Thomas Raschbacher)
Date: Sun, 26 Jan 2003 11:19:48 +0100
Subject: [Twisted-Python] Gtk version
In-Reply-To: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>
References: <GCEDKONBLEFPPADDJCOEEEMPHJAA.whisper@oz.net>
Message-ID: <1043576388.3e33b644b2c71@mail-at.net>

Quoting David LeBlanc <whisper at oz.net>:

> Can you tell me where I can find a Windows version of Gtk 1.2.x?
> 
try the gimp for windows page (just google for it :)
greetings

-- LordVan(ThomasR)

-----BEGIN GEEK CODE BLOCK-----
GCS/CC/E/M/MU/S d- s: a--- C++++(++) UL++++ P+ L++++ E W+++ N+++ o-- K w-- O
M-- V- PS+ PE-- Y++ PGP+++ t+++ 5+ X- R tv b++++ DI- D+ G++ e-->+++++ h-- !r
z- 
------END GEEK CODE BLOCK------

-------------------------------------------------
This mail sent through IMP: http://horde.org/imp/



From andrew-twisted at puzzling.org  Sun Jan 26 19:11:56 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 13:11:56 +1100
Subject: [Twisted-Python] FTPClient put
In-Reply-To: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>
References: <6B8749DD-2FBC-11D7-B2A3-0003939E3E58@hiper.com.br>
Message-ID: <20030127021156.GB451@frobozz.local>

On Fri, Jan 24, 2003 at 01:53:53PM -0300, Luciano Ramalho wrote:
> Can the FTPClient class be used to *send* files (STOR)? If yes, how?
> 
> I've succesfully used the ftpclient.py example to retrieve a file 
> listing from a server, but reading the API docs and the source of the 
> ftp.py module has not given me a clue about how to *send* a file.

STOR support isn't written yet; now that I'm back from Linux.conf.au I hope
to get this done soon.  There was a thread on the list a week or two ago
requesting this as well :)

-Andrew.




From radix at twistedmatrix.com  Sun Jan 26 22:37:42 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 00:37:42 -0500
Subject: [Twisted-Python] RC2 dead in the water
Message-ID: <20030127053742.GA8526@Radii>

Traceback (most recent call last):
  File "./bin/html2latex", line 29, in ?
    run()
  File "./twisted/scripts/html2latex.py", line 52, in run
    latex.processFile(spitter, open(file))
  File "./twisted/lore/latex.py", line 301, in processFile
    spitter.visitNode(dom)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 62, in visitNodeDefault
    self.visitNode(child)
  File "./twisted/lore/latex.py", line 57, in visitNode
    getattr(self, 'visitNode_'+node.tagName, self.visitNodeDefault)(node)
  File "./twisted/lore/latex.py", line 70, in visitNode_a
    return self.visitNode_a_href(node)
  File "./twisted/lore/latex.py", line 176, in visitNode_a_href
    if node.childNodes[0].data != href:
AttributeError: Element instance has no attribute 'data'
GenerateDocs failed, running uncommit.

Looks like basically the same bug that was in lint reproduced in
latex.py.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From radix at twistedmatrix.com  Mon Jan 27 01:45:47 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 03:45:47 -0500
Subject: [Twisted-Python] ANN: 1.0.2rc3 is out
Message-ID: <20030127084547.GB8526@Radii>

http://twistedmatrix.com/products/download -- please check out Twisted
1.0.2rc3 and report any bugs.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From andrew-pythonau at puzzling.org  Sun Jan 26 19:15:55 2003
From: andrew-pythonau at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 13:15:55 +1100
Subject: [Twisted-Python] [graeme_matthew@hotmail.com: [Python-au] Twisted Rocks !!!!!]
Message-ID: <20030127021555.GC451@frobozz.local>

This is from the python-au mailing list... I thought people might like to
know that we've got yet another happy "customer" ;)

The other thing I find amazing is the "about 5 minutes to understand" -- but
then the docs are much better than when I first used Twisted :)

-Andrew.

----- Forwarded message from Graeme Matthew <graeme_matthew at hotmail.com> -----

From: "Graeme Matthew" <graeme_matthew at hotmail.com>
To: python-au at python.net
Subject: [Python-au] Twisted Rocks !!!!!
Date: Wed, 22 Jan 2003 15:46:03 +1100


Garth, mate this Twisted stuff rocks, I cannot believe a Win32 install is 
700kb, took 1 minute to setup, and about 5 minutes to understand the basics 
in writing a client / server for data exchange,

mate u have saved me heaps of stress, thanks again !




_________________________________________________________________
Add photos to your e-mail with MSN 8. Get 2 months FREE*.  
http://join.msn.com/?page=features/featuredemail


_______________________________________________
python-au maillist  -  python-au at starship.python.net
http://starship.python.net/mailman/listinfo/python-au

----- End forwarded message -----



From andrew-twistedcommits at puzzling.org  Sun Jan 26 20:14:29 2003
From: andrew-twistedcommits at puzzling.org (Andrew Bennetts)
Date: Mon, 27 Jan 2003 14:14:29 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] adapter for DeferredList
In-Reply-To: <E18bpeL-00085d-00@pyramid.twistedmatrix.com>
References: <E18bpeL-00085d-00@pyramid.twistedmatrix.com>
Message-ID: <20030127031429.GF451@frobozz.local>

On Thu, Jan 23, 2003 at 04:16:41PM -0600, itamarst CVS wrote:
> Modified files:
> Twisted/twisted/web/woven/model.py 1.32 1.33
> 
> Log message:
> adapter for DeferredList

[..snip..]

>      components.registerAdapter(DeferredWrapper, defer.Deferred, interfaces.IModel)
> +    components.registerAdapter(DeferredWrapper, defer.DeferredList, interfaces.IModel)

I know very little about Adapters, but shouldn't subclasses work
automatically?  Or is this too hard?

-Andrew.




From radix at twistedmatrix.com  Mon Jan 27 09:40:37 2003
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 27 Jan 2003 11:40:37 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] adapter for DeferredList
In-Reply-To: <20030127031429.GF451@frobozz.local>
References: <E18bpeL-00085d-00@pyramid.twistedmatrix.com> <20030127031429.GF451@frobozz.local>
Message-ID: <20030127164037.GC8526@Radii>

On Mon, Jan 27, 2003 at 02:14:29PM +1100, Andrew Bennetts wrote:
> On Thu, Jan 23, 2003 at 04:16:41PM -0600, itamarst CVS wrote:
> > Modified files:
> > Twisted/twisted/web/woven/model.py 1.32 1.33
> > 
> > Log message:
> > adapter for DeferredList
> 
> [..snip..]
> 
> >      components.registerAdapter(DeferredWrapper, defer.Deferred, interfaces.IModel)
> > +    components.registerAdapter(DeferredWrapper, defer.DeferredList, interfaces.IModel)
> 
> I know very little about Adapters, but shouldn't subclasses work
> automatically?  Or is this too hard?

getAdapter takes an optional argument of a function to do the lookup,
where the default does not look through the class hierarchy. You can
pass an already-defined function, getAdapterWithInheritance, or
something, which is in twisted.python.components, but I guess that's
too slow to be the default.

-- 
 Twisted | Christopher Armstrong: International Man of Twistery
  Radix  |          Release Manager,  Twisted Project
---------+     http://twistedmatrix.com/users/radix.twistd/



From ldanielburr at earthlink.net  Mon Jan 27 10:34:27 2003
From: ldanielburr at earthlink.net (L. Daniel Burr)
Date: Mon, 27 Jan 2003 12:34:27 -0500 (GMT)
Subject: [Twisted-Python] Example: Accessing a database from a Resource
Message-ID: <4963325.1043699670555.JavaMail.nobody@daisy.psp.pas.earthlink.net>

As promised in the thread about deferreds and resources, here is an
example of making a database call from a resource, using a thread.

I've tried to follow the Twisted development guidelines, so please
let me know if I've used any inappropriate naming conventions, etc.

I didn't provide epydoc-style docstrings as I had originally hoped;
I haven't had time to read the epydoc manual yet.

Next up will be an example using twisted.enterprise, with Row and
without.  Hopefully examples of this sort will help newer users in
grokking twisted.web, at least until the Woven stuff is ready.

L. Daniel Burr
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dbresource.rpy
Type: application/octet-stream
Size: 3572 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030127/de0cb2c8/attachment-0002.obj>

From corydodt at yahoo.com  Tue Jan 28 16:15:00 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 28 Jan 2003 15:15:00 -0800 (PST)
Subject: [Twisted-Python] We have Apple's ear
Message-ID: <20030128231500.56806.qmail@web10004.mail.yahoo.com>

Not really . . . but _I_ do, and you have my ear.

If you could ask Apple to change stuff which would make your life easier
as a Python developer, what would you ask?

Sometime in the next 2 weeks I'm going to be talking directly to an Apple
sales engineer (or equivalent) about getting my needs met.  Apple wants my
organization to hurry and port our product to the Mac, and the person I'll
be talking to will be taking requests for ways they can help us do that.

The product is being built on a foundation of pyopenssl, cog, pybsddb,
pycrypto, and twisted.  Are any of these less than perfect on a Mac?  Are
there specific ways Apple can help make this situation better?

I'll take the best suggestions and bring them to light when I have my
conversation.  Thanks for any help!


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From corydodt at yahoo.com  Tue Jan 28 16:21:28 2003
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 28 Jan 2003 15:21:28 -0800 (PST)
Subject: [Twisted-Python] We have Apple's ear (cont'd)
Message-ID: <20030128232128.78331.qmail@web10006.mail.yahoo.com>

Just a list of things I plan to ask for anyway (in no particular order):

* hardware

* money

* engineers to fix Mac-related bugs in Twisted (or other dependencies)
directly ... the list could provide me with a log of a run of trial to
help here

* a list of the problems python users are most likely to mention to Apple
sales engineers, and solutions for same

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From bob at redivi.com  Tue Jan 28 17:05:45 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 28 Jan 2003 19:05:45 -0500
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <20030128232128.78331.qmail@web10006.mail.yahoo.com>
Message-ID: <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>

On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:

> Just a list of things I plan to ask for anyway (in no particular 
> order):
>
> * hardware
>
> * money
>
> * engineers to fix Mac-related bugs in Twisted (or other dependencies)
> directly ... the list could provide me with a log of a run of trial to
> help here
>
> * a list of the problems python users are most likely to mention to 
> Apple
> sales engineers, and solutions for same

Well, I think I'm the resident OS X developer here, I actually have the 
expensive subscription to their developer's program, mostly for the 
hardware discounts..  There isn't much of a problem for Twisted on 
MacOSX, even with the crippled stock 2.2 interpreter.. I use it as my 
primary development platform for Twisted and everything else.

What Apple needs to do, for god's sake, is allow Jack Jansen 
<Jack.Jansen at oratrix.com> to maintain the Python build in darwin and OS 
X proper.  Or at least consult with him before releasing something.

Apple er.. screwed up a lot of ./configure options when building the 
2.2 build that ships with OS X.  If the thing was built properly it'd 
be ready to do full GUI applications (Modules to interface with 
CoreFoundation, Carbon, etc), it even builds a GUI application launcher 
*and* an IDE!

It would also be nice if it shipped with the ctypes and pyobjc modules, 
which covers all of your other needs.  Neither of them are totally 
stable yet though.

Hardware, money, and engineers are not required at all..  The community 
has already done all of the work, it's just up to Apple to integrate it 
into their distribution.  Python has been pretty solid on OS X for 
about 12 months now.  It would be *nice* if some apple heads would 
subscribe to pythonmac-sig at python.org and 
pyobjc-dev at lists.sourceforge.net.

-bob




From bob at redivi.com  Tue Jan 28 17:11:11 2003
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 28 Jan 2003 19:11:11 -0500
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
Message-ID: <2C8691D6-331E-11D7-B556-000A95686CD8@redivi.com>

On Tuesday, Jan 28, 2003, at 18:15 America/New_York, Cory Dodt wrote:
>
> Sometime in the next 2 weeks I'm going to be talking directly to an 
> Apple
> sales engineer (or equivalent) about getting my needs met.  Apple 
> wants my
> organization to hurry and port our product to the Mac, and the person 
> I'll
> be talking to will be taking requests for ways they can help us do 
> that.
>
> The product is being built on a foundation of pyopenssl, cog, pybsddb,
> pycrypto, and twisted.  Are any of these less than perfect on a Mac?  
> Are
> there specific ways Apple can help make this situation better?

You shouldn't have any real problems..  If you need help, let me know.  
SSL support in socket doesn't come with the 2.2 that ships with OS X 
10.2, but it can be easily replaced with one that does 
(http://radio.weblogs.com/0100490/2002/10/16.html)

pycrypto and twisted work just fine in my experience, I haven't worked 
with cog or pybsddb yet, but I would imagine they both work perfectly 
fine as well.




From jml at mumak.net  Mon Jan 27 16:19:25 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Tue, 28 Jan 2003 10:19:25 +1100
Subject: [Twisted-Python] Woven Refactor
In-Reply-To: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
References: <0F31F1DC-2FF1-11D7-9CC4-000393B3EC2C@mac.com>
Message-ID: <20030127231925.GB12999@mumak.net>

On Fri, Jan 24, 2003 at 03:10:41PM -0800, Donovan Preston wrote:
> * Feedback! If you have a Woven application, please apply this patch 
> and let me know if anything breaks. 

Issues works with the patch. Feels faster too.

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030128/ab97b36a/attachment.sig>

From acapnotic at twistedmatrix.com  Wed Jan 29 02:20:13 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 29 Jan 2003 01:20:13 -0800
Subject: [Twisted-Python] Ephemeral Adapters
Message-ID: <1043832011.27415.200.camel@troglodyte.funhouse>

Forever struggling with what is persistent and what is not, today I have
an Adapter I think may be Ephemeral.  (It's based on im.basechat.ChatUI,
and its state is largely Protocol instances and things indexed by
them.)  What do I do about this?  Should Componentized weed all
Ephemerals from its _adapterCache in Componentized.__getstate__?  It
feels like too much mucking around with internals to do that in a
subclass.

-- 
The moon is waning crescent, 13.0% illuminated, 26.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030129/20cd6f35/attachment.sig>

From twisted at itamarst.org  Wed Jan 29 09:20:25 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 11:20:25 -0500
Subject: [Twisted-Python] PLEASE: Add changelog entries when adding new features
Message-ID: <20030129112025.15e9d27d.twisted@itamarst.org>

Serial support, GPS support, GTK2 reactor, and no doubt other stuff were
NOT mentioned as being added in the ChangeLog.  This makes life harder
for people writing release announcements, and for users who don't hear
about all the nifty and cool new features you implemented. You do want
people to use them, right? :)

Oh, and is GTK2 listed in the "choosing a reactor" doc?

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From twisted at itamarst.org  Wed Jan 29 09:33:45 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 11:33:45 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
Message-ID: <20030129113345.18c709a0.twisted@itamarst.org>

What's New in 1.0.2
===================

- Serial port support.
- GPS (global positioning system), supporting NMEA 0183 and Rockwell
Zodiac devices.
- GTK2 event loop.
- Improved event scheduling support.
- Many new examples, including an example of Cocoa (Mac OS X)
integration.
- Fancy Win32 installer, with Start menu integration.
- Large number of improvements to the SSH server. In addition, Twisted
now ships with a command-line ssh client (conch), with same options as
openssh client. Also included is a Tk GUI ssh client, that does not
require a terminal emulator, and a program for generating ssh keys.
- Simplified HTTP client API, for fetching URLs.
- Dict protocol implementation (RFC 2229).
- Improvements to cReactor, a networking event loop implemented in C.
- Lenient mode for microdom, which allows parsing very non-standard
HTML, and many improvements to the DOM support.
- Trial, a unit testing framework, replaces use of Python's unittest.py.
The API is almost identical to Python's.
- Google querying support.
- Shoutcast protocol support.
- Client XML-RPC support.
- Many improvements to Twisted's DNS support, both client and server.
- Bug fixes, more tests and documentation.




From elloyd at lancaster.lib.pa.us  Wed Jan 29 10:00:49 2003
From: elloyd at lancaster.lib.pa.us (Eron Lloyd)
Date: Wed, 29 Jan 2003 12:00:49 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
In-Reply-To: <20030129113345.18c709a0.twisted@itamarst.org>
References: <20030129113345.18c709a0.twisted@itamarst.org>
Message-ID: <200301291200.49552.elloyd@lancaster.lib.pa.us>

Hooray! How much has changed in the documentation?

Good job to all involved,

Eron

On Wednesday 29 January 2003 11:33 am, Itamar Shtull-Trauring wrote:
> What's New in 1.0.2
> ===================
>
> - Serial port support.
> - GPS (global positioning system), supporting NMEA 0183 and Rockwell
> Zodiac devices.
> - GTK2 event loop.
> - Improved event scheduling support.
> - Many new examples, including an example of Cocoa (Mac OS X)
> integration.
> - Fancy Win32 installer, with Start menu integration.
> - Large number of improvements to the SSH server. In addition, Twisted
> now ships with a command-line ssh client (conch), with same options as
> openssh client. Also included is a Tk GUI ssh client, that does not
> require a terminal emulator, and a program for generating ssh keys.
> - Simplified HTTP client API, for fetching URLs.
> - Dict protocol implementation (RFC 2229).
> - Improvements to cReactor, a networking event loop implemented in C.
> - Lenient mode for microdom, which allows parsing very non-standard
> HTML, and many improvements to the DOM support.
> - Trial, a unit testing framework, replaces use of Python's unittest.py.
> The API is almost identical to Python's.
> - Google querying support.
> - Shoutcast protocol support.
> - Client XML-RPC support.
> - Many improvements to Twisted's DNS support, both client and server.
> - Bug fixes, more tests and documentation.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> ---
> [This E-mail scanned for viruses by Declude Virus]

-- 
Eron Lloyd
Technology Coordinator
Lancaster County Library
elloyd at lancaster.lib.pa.us
Phone: 717-239-2116
Fax: 717-394-3083

---
[This E-mail scanned for viruses by Declude Virus]




From twisted at itamarst.org  Wed Jan 29 10:30:56 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 12:30:56 -0500
Subject: [Twisted-Python] ANN: Twisted 1.0.2 [short version]
In-Reply-To: <200301291200.49552.elloyd@lancaster.lib.pa.us>
References: <20030129113345.18c709a0.twisted@itamarst.org>
	<200301291200.49552.elloyd@lancaster.lib.pa.us>
Message-ID: <20030129123056.71f05671.twisted@itamarst.org>

On Wed, 29 Jan 2003 12:00:49 -0500
Eron Lloyd <elloyd at lancaster.lib.pa.us> wrote:

> Hooray! How much has changed in the documentation?

PB Copyables, UDP, Twisted names, maybe more as well.



From jml at mumak.net  Wed Jan 29 11:04:50 2003
From: jml at mumak.net (Jonathan M. Lange)
Date: Thu, 30 Jan 2003 05:04:50 +1100
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>
References: <20030128232128.78331.qmail@web10006.mail.yahoo.com> <6A061DFC-331D-11D7-B556-000A95686CD8@redivi.com>
Message-ID: <20030129180449.GA3890@mumak.net>

On Tue, Jan 28, 2003 at 07:05:45PM -0500, Bob Ippolito wrote:
> On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:
>
> Hardware, money, and engineers are not required at all..  

That said, if they want to hand out free / cheap TiBooks, I'll be more than
happy to hack for Macs :)

jml
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030130/f19906e6/attachment.sig>

From erik.myllymaki at starpointe.ca  Wed Jan 29 10:39:18 2003
From: erik.myllymaki at starpointe.ca (Erik Myllymaki)
Date: Wed, 29 Jan 2003 09:39:18 -0800
Subject: [Twisted-Python] twisted.enterprise error
References: <20030129113345.18c709a0.twisted@itamarst.org>
Message-ID: <015c01c2c7bd$59bed460$6521a8c0@topdown>

I get the folowing error with the twisted Enterprise Example -
row_example.py
on win2k using SAPDB(v7.3.00.29 of the win32 python2.2 driver).

However, it works if I don't declare a PRIMARY KEY on the furniture or rugs
tables...
(an older version of row_schema.sql had no PRIMARY KEYs declared at all and
this works...)


V:\Python22>python row_example.py
Connecting to database: SAPDB.sapdbapi () {'host': '192.168.33.99',
'password':
'DBA', 'user': 'DBA', 'database': 'TST'}
Enabling Multithreading.
starting waker
adbapi connecting: SAPDB.sapdbapi {'host': '192.168.33.99', 'password':
'DBA', '
user': 'DBA', 'database': 'TST'}
Exception in SQL interaction!  rolling back...
Traceback (most recent call last):
  File "V:\Python22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "V:\Python22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "V:\Python22\Lib\site-packages\twisted\python\threadpool.py", line
136, i
n _worker
    apply(function, args, kwargs)
  File "V:\Python22\Lib\site-packages\twisted\internet\threads.py", line 37,
in
_putResultInDeferred
    result = apply(f, args, kwargs)
--- <exception caught here> ---
  File "V:\Python22\lib\site-packages\twisted\enterprise\adbapi.py", line
157, i
n _runInteraction
    result = apply(interaction, (trans,)+args, kw)
  File "V:\Python22\Lib\site-packages\twisted\enterprise\sqlreflector.py",
line
118, in _rowLoader
    tableInfo = self.schema[tableName]
exceptions.KeyError: testrooms
Unhandled error in Deferred:
Traceback (most recent call last):
  File "V:\Python22\lib\threading.py", line 408, in __bootstrap
    self.run()
  File "V:\Python22\lib\threading.py", line 396, in run
    apply(self.__target, self.__args, self.__kwargs)
  File "V:\Python22\Lib\site-packages\twisted\python\threadpool.py", line
136, i
n _worker
    apply(function, args, kwargs)
--- <exception caught here> ---
  File "V:\Python22\Lib\site-packages\twisted\internet\threads.py", line 37,
in
_putResultInDeferred
    result = apply(f, args, kwargs)
  File "V:\Python22\lib\site-packages\twisted\enterprise\adbapi.py", line
157, i
n _runInteraction
    result = apply(interaction, (trans,)+args, kw)
  File "V:\Python22\Lib\site-packages\twisted\enterprise\sqlreflector.py",
line
118, in _rowLoader
    tableInfo = self.schema[tableName]
exceptions.KeyError: testrooms
Main loop terminated.




From bob at redivi.com  Wed Jan 29 11:16:48 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 29 Jan 2003 13:16:48 -0500
Subject: [Twisted-Python] We have Apple's ear (cont'd)
In-Reply-To: <20030129180449.GA3890@mumak.net>
Message-ID: <D51400D4-33B5-11D7-B556-000A95686CD8@redivi.com>

On Wednesday, Jan 29, 2003, at 13:04 America/New_York, Jonathan M. 
Lange wrote:

> On Tue, Jan 28, 2003 at 07:05:45PM -0500, Bob Ippolito wrote:
>> On Tuesday, Jan 28, 2003, at 18:21 America/New_York, Cory Dodt wrote:
>>
>> Hardware, money, and engineers are not required at all..
>
> That said, if they want to hand out free / cheap TiBooks, I'll be more 
> than
> happy to hack for Macs :)

Of course, but required != appreciated :)

-bob




From glyph at twistedmatrix.com  Wed Jan 29 11:38:56 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 29 Jan 2003 13:38:56 -0500 (EST)
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
References: <20030128231500.56806.qmail@web10004.mail.yahoo.com>
Message-ID: <20030129.133856.71097482.glyph@twistedmatrix.com>

On Tue, 28 Jan 2003 15:15:00 -0800 (PST), Cory Dodt <corydodt at yahoo.com> wrote:
> Not really . . . but _I_ do, and you have my ear.

This is great.  As those who subscribe to my personal list no doubt know, I
have some frustration with apple, and some of this is due to the difficulty
I've had trying to get in contact with people "on the inside" through
traditional channels.  Hopefully your sales contact will be a bit more
forthcoming than support at apple.com! :-)

> If you could ask Apple to change stuff which would make your life easier as a
> Python developer, what would you ask?

Purely as a Python software developer, Bob Ippolito's comments are spot-on.  I
don't know why they've been missing this, since it seems the whole python/mac
community feels this way.  For emphasis, I will repeat the most salient points
here:

On Tue, 28 Jan 2003 19:05:45 -0500, Bob Ippolito <bob at redivi.com> wrote:

> What Apple needs to do, for god's sake, is allow Jack Jansen 
> <Jack.Jansen at oratrix.com> to maintain the Python build in darwin and OS 
> X proper.  Or at least consult with him before releasing something.

> Apple er.. screwed up a lot of ./configure options when building the 
> 2.2 build that ships with OS X.  If the thing was built properly it'd 
> be ready to do full GUI applications (Modules to interface with 
> CoreFoundation, Carbon, etc), it even builds a GUI application launcher 
> *and* an IDE!

I'd like to add to this that Python support included in Apple's dist of
ProjectBuilder, even if it were something as trivial as syntax highlighting,
would really be a nice thing.

Back to your comments:

> The product is being built on a foundation of pyopenssl, cog, pybsddb,
> pycrypto, and twisted.  Are any of these less than perfect on a Mac?  Are
> there specific ways Apple can help make this situation better?

Twisted?  Less than perfect?  Of COURSE not!  Unless of course imperfection
means I can milk this opportunity for HUGE CASH PAYOFFS, in which case yes,
it's full of problems, I'll just, ahem, come up with some.

Seriously, the biggest problem with Twisted on the mac is that we're still very
much living in a Unix mindset, and we have no platform-idiomatic tools for
either development or deploying applications on OS X.  I'm upset that I haven't
had enough time to work on Twisted as a platform (porting an application to a
platform like OS X ought to be a complete no-brainer, but it clearly isn't!),
and if Apple were willing to throw some resources my way I might build the
Cocoa front-end to COIL before rewriting the web one.  I'd sure like to have an
excuse, especially a paid excuse, to write apps using IB.

This is really more on the level of making my life more fun, and *Apple's* life
"easier".  I think that an integrated, GUI-friendly Twisted dist on MacOS would
be an awesome server-side compliment to Safari, possibly a killer app, but that
opinion may not be shared by Apple's higher-ups; this is a pipe dream.

(Folks from other platforms: to be clear, I'm not really interested in
including *exclusive* functionality for the mac, but I wouldn't mind building
it *enhanced* for the mac and building TTW interfaces after the fact.)

> I'll take the best suggestions and bring them to light when I have my
> conversation.  Thanks for any help!

I hope that this is relevant :-).

> Just a list of things I plan to ask for anyway (in no particular order):

It's expensive to develop apps for the mac, because it's expensive to own and
maintain a mac.  I think that almost all the Twisted developers could use some
support in these areas.

The most deserving developers in this regard are Donovan Preston and Bob
Ippolito, both Mac users who are already developing Twisted apps on that
platform.  However, they may be among those requiring the least assistance ;-)

> * hardware

I've got a way-too-damn-expensive Power Macintosh that I haven't had the
opportunity to use for much MacOS stuff because it's running Linux most of the
time (due to aforementioned lacks in the Apple dev. env.).  Obviously, more
hardware from Apple is better!  I would especially like a 14-inch powerbook to
replace my x86 laptop.

However, even given my existing Apple hardware, I'm unlikely to spend any of my
own time volunteering to enhance Apple's operating system with Twisted if I
have to keep shelling out $129.95 every few months for the privilege.  I would
really appreciate a no-cost license to Apple's software offerings, or at least
enough of them to do GUI application development with Twisted.

> * money

Since I'm not paying rent on a credit card yet :-), either this or hardware
might convince me to spend some time on a Mac-specific project to enhance
Twisted.

Honestly, for your application, I doubt that this is a priority.  It is
something I've thought Apple might be interested in for a while, but I haven't
had the cognitive bandwidth to get enough accomplished to attract Apple's
attention about it.

> * engineers to fix Mac-related bugs in Twisted (or other dependencies)
> directly ... the list could provide me with a log of a run of trial to help
> here

As far as I know, we really do have relatively few of these.  As Mr. Ippolito
said, the system works fine as is and several people use their Macs to write
Twisted code.




From twisted at itamarst.org  Wed Jan 29 15:23:12 2003
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 29 Jan 2003 17:23:12 -0500
Subject: [Twisted-Python] PLEASE: Add new packages to setup.py, or they will not get installed
Message-ID: <20030129172312.1f081731.twisted@itamarst.org>

gps and serialport were not installed in 1.0.2 due to this issue.

-- 
Itamar Shtull-Trauring    http://itamarst.org/
Available for Python, Twisted, Zope and Java consulting
***> http://VoteNoWar.org -- vote/donate/volunteer <***



From bob at redivi.com  Wed Jan 29 16:26:51 2003
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 29 Jan 2003 18:26:51 -0500
Subject: [Twisted-Python] We have Apple's ear
In-Reply-To: <20030129.133856.71097482.glyph@twistedmatrix.com>
Message-ID: <251B01C2-33E1-11D7-B556-000A95686CD8@redivi.com>

On Wednesday, Jan 29, 2003, at 13:38 America/New_York, Glyph Lefkowitz 
wrote:
>> Apple er.. screwed up a lot of ./configure options when building the
>> 2.2 build that ships with OS X.  If the thing was built properly it'd
>> be ready to do full GUI applications (Modules to interface with
>> CoreFoundation, Carbon, etc), it even builds a GUI application 
>> launcher
>> *and* an IDE!
>
> I'd like to add to this that Python support included in Apple's dist of
> ProjectBuilder, even if it were something as trivial as syntax 
> highlighting,
> would really be a nice thing.

bbum did that last month.  I haven't tried it personally (I'm a VIM 
user), but I imagine it works :)
http://radio.weblogs.com/0100490/2002/12/20.html

I'd imagine if the Python community had more of an in w/ the Cupertino 
crowd this could easily make it into the next developer tools update.

> Seriously, the biggest problem with Twisted on the mac is that we're 
> still very
> much living in a Unix mindset, and we have no platform-idiomatic tools 
> for
> either development or deploying applications on OS X.  I'm upset that 
> I haven't
> had enough time to work on Twisted as a platform (porting an 
> application to a
> platform like OS X ought to be a complete no-brainer, but it clearly 
> isn't!),
> and if Apple were willing to throw some resources my way I might build 
> the
> Cocoa front-end to COIL before rewriting the web one.  I'd sure like 
> to have an
> excuse, especially a paid excuse, to write apps using IB.

FYI, installing pyobjc adds a Python template for developing GUI pyobjc 
apps.  You don't need to do anything special to use nibs with pyobjc, 
works just like it does with Cocoa or AppleScript.  I've played around 
with outlets and such with no problems, YMMV of course.

It may be of some interest that Apple's WebObjects offering does 
something kinda similar [client-side gui/web app hybrids.. mostly for 
database apps], but only in java using a very CoreFoundation-like 
API... so it's like programming in ObjC, only slower.  I don't have 
time to play with WebObjects at all, but I get legitimate copies 
whenever a new release comes out (two sitting in a drawer, and 
counting).  If anyone wants to borrow the books or something to see if 
there's any good ideas worth borrowing just let me know.

> However, even given my existing Apple hardware, I'm unlikely to spend 
> any of my
> own time volunteering to enhance Apple's operating system with Twisted 
> if I
> have to keep shelling out $129.95 every few months for the privilege.  
> I would
> really appreciate a no-cost license to Apple's software offerings, or 
> at least
> enough of them to do GUI application development with Twisted.

<evangelism>
A few months is more like 18-24.. that's like a pack of manhattan 
cigarettes a month, at most.  It's pretty affordable.  If you're an ADC 
Select ($500/yr) or Premier ($3500/yr) member then license for all of 
their operating systems is included along with the betas and the 
ability to report bugs that they'll actually read.. among other things. 
  One of the nice things you get with a Premier subscription is 10 
hardware discounts a year, we've saved more than $3500 (6 purchases so 
far) on our overpriced computer equipment this year.. A hardware 
discount is usually about 20% off anything they sell (even accessories, 
like iPods).  One hardware discount counts for one desktop or laptop 
with whatever accessories.. so you can turn out pretty well.
</evangelism>

In any case, if one wants to deploy a Mac OS X 10.2+ application 
developed solely in python (using the installed python 2.2 runtime to 
minimize the distribution size), with or without Twisted, everything is 
already out there to do it.. you just have to know where to look and/or 
who to ask for the relevant information.

As a side note, I mentioned Twisted and my hackish method for writing 
the cocoa demo on the pyobjc list a week or two ago in response to a 
query about asyncore.  The whole issue sparked some interest with the 
core developers and they've been actively working on a better way of 
doing it than polling.  Jack Jansen just recently started working on a 
module that intelligently manages the Python GIL (Global Interpreter 
Lock) so that the ObjC and Python threads will play together 
efficiently... so perhaps in a few weeks, when the dust settles in my 
world and pyobjc is a bit more stable, I'll be able to develop a Cocoa 
reactor (which will be rather easy pretty soon) and some more advanced 
examples.

-bob




From acapnotic at twistedmatrix.com  Thu Jan 30 04:47:14 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 03:47:14 -0800
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <20030123191903.GA5664@meson.dyndns.org>
References: <20030123191903.GA5664@meson.dyndns.org>
Message-ID: <1043927233.17536.22.camel@troglodyte.funhouse>

A few comments made by other people on IRC that I want to make sure are
archived somewhere, because maybe they things I've seen while trying to
clean up freshcvs persistability recently.  The context is a discussion
of exarkun's upcoming patch, based on the one in the start of this
thread.

<glyph> exarkun: listenWith ought to say something about the
persistability of the IListeningPort being passed in.
<exarkun> glyph: it's taking a class/type - those should always be
persistable, yea?
<glyph> exarkun: Not necessarily; sockets aren't persistable, so it's
easy to screw up a ListeningPort instance :-)
<exarkun> Ahh, hmm
<glyph> oh wait, hang on, you're right ...
<glyph> This illustrates a serious flaw in the design of Application :-\
<glyph> or well, not serious, but annoying.
<glyph> Really we ought not be storing constructor arguments, we should
be storing state objects.
 * exarkun nods, "That would be better."
<glyph> That's the way it started out, but when the reactor refactor
happened this didn't get cleaned up like it should have.

(Some settling may have occurred during transcription.)

-- 
The moon is waning crescent, 6.0% illuminated, 27.2 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030130/35ebcfc3/attachment.sig>

From acapnotic at twistedmatrix.com  Thu Jan 30 04:56:20 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 03:56:20 -0800
Subject: [Twisted-Python] Arbitrary Port/Connector objects
In-Reply-To: <1043927233.17536.22.camel@troglodyte.funhouse>
References: <20030123191903.GA5664@meson.dyndns.org>
	 <1043927233.17536.22.camel@troglodyte.funhouse>
Message-ID: <1043927779.17533.27.camel@troglodyte.funhouse>

> maybe they [relate to] things I've seen while trying to
> clean up freshcvs persistability recently.

namely,
http://twistedmatrix.com/pipermail/twisted-commits/2003-January/005689.html





From wavy2gravy at yahoo.com  Thu Jan 30 08:51:12 2003
From: wavy2gravy at yahoo.com (Pink Floyd)
Date: Thu, 30 Jan 2003 07:51:12 -0800 (PST)
Subject: [Twisted-Python] Can I use twisted for this
Message-ID: <20030130155112.11631.qmail@web14004.mail.yahoo.com>

Greetings,
  I have a "daemon" that is written in python (with
some C extensions). The characterstics are:
  . A infinite loop, and in each cycle of the loop
there is some processing going on.
  . During the processing, (everything else is
blocked) so that she can do things uninterrupted.

 This is already a functional application. Coming to
my question, currently I would like to provide it with
a administrative interface that can be controlled over
the network. In short, I would like it to be also:
  a) network daemon
  b) a very simple challenge/response type protocol to
control the behaviour of the daemon.

 Obviously, "twisted" on the surface looked to be a
very good candidate to get this up quickly. Since, I
would be using a "reactor" interface, do I have to
create my own "reactor" by subclassing say the TCP
interface. Or, is there a easy way to integrate the
reactor loop (.run()) with my loop?

Thanks
MK

__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From acapnotic at twistedmatrix.com  Thu Jan 30 09:54:36 2003
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 30 Jan 2003 08:54:36 -0800
Subject: [Twisted-Python] ANN: CVSToys 1.0.5
Message-ID: <1043945674.17531.89.camel@troglodyte.funhouse>

CVSToys 1.0.5 is out, for the fixing of the IRC bots which get knocked
offline -- they now do reconnect again.  Once again I had to hack
twisted.im to make this possible, so we have more version creep and you
will be needing a Twisted 1.0.2 to take advantage of this latest CVSToys
release.

There have also been some fixes relating to freshcvs.tap
persistability.  If you have had problems with starting from a
freshcvs-shutdown.tap in the past, try again with this version, and let
me know how it goes.

Share and enjoy,

 - Kevin

-- 
The moon is waning crescent, 4.9% illuminated, 27.4 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20030130/e0d664fd/attachment.sig>

From andrew-twisted at puzzling.org  Thu Jan 30 23:23:24 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Jan 2003 17:23:24 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
Message-ID: <20030131062324.GJ14761@frobozz.local>

On Thu, Jan 30, 2003 at 03:19:34PM -0600, exarkun CVS wrote:
[..snip..]
> Index: Twisted/twisted/internet/tcp.py
> diff -u Twisted/twisted/internet/tcp.py:1.101 Twisted/twisted/internet/tcp.py:1.102
> --- Twisted/twisted/internet/tcp.py:1.101	Wed Jan 29 01:02:11 2003
> +++ Twisted/twisted/internet/tcp.py	Thu Jan 30 13:19:31 2003
[..snip..]
> @@ -530,6 +475,25 @@
>      def getHost(self):
>          """Returns a tuple of ('INET', hostname, port).
>  
> -        This indicates the servers address.
> +        This indicates the server's address.
>          """
>          return ('INET',)+self.socket.getsockname()
> +
> +
> +class Connector(base.BaseConnector):
> +    def __init__(self, host, port, factory, timeout, bindAddress, reactor=None):
> +        self.host = host
> +        if isinstance(port, types.StringTypes):
                               ^^^^^^^^^^^^^^^^^ This breaks Python 2.1

Should tcp.py import t.p.compat (ugh)?

Or is it safe to assume that service names for ports will always be ascii
(in which case we change that to "if port == types.StringTypes")?

-Andrew.




From glyph at twistedmatrix.com  Thu Jan 30 23:54:57 2003
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 31 Jan 2003 00:54:57 -0600 (CST)
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods;
 refactor/rearrangement of various internal classes
In-Reply-To: <20030131062324.GJ14761@frobozz.local>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com>
	<20030131062324.GJ14761@frobozz.local>
Message-ID: <20030131.005457.74752848.glyph@twistedmatrix.com>

On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > +        if isinstance(port, types.StringTypes):
>                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> 
> Should tcp.py import t.p.compat (ugh)?

I think not.  This has been the recommended style for a while.

    Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
    [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
    Type "copyright", "credits" or "license" for more information.
    >>> import types
    >>> isinstance(1, types.StringType)
    0
    >>> isinstance(1, types.IntType)
    1

-- 
 |    <`'>    |  Glyph Lefkowitz: Travelling Sorcerer  |
 |   < _/ >   |  Lead Developer,  the Twisted project  |
 |  < ___/ >  |      http://www.twistedmatrix.com      |
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030131/fe2eaa1c/attachment.sig>

From andrew-twisted at puzzling.org  Fri Jan 31 00:30:06 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 31 Jan 2003 18:30:06 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <20030131.005457.74752848.glyph@twistedmatrix.com>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com> <20030131062324.GJ14761@frobozz.local> <20030131.005457.74752848.glyph@twistedmatrix.com>
Message-ID: <20030131073006.GL14761@frobozz.local>

On Fri, Jan 31, 2003 at 12:54:57AM -0600, Glyph Lefkowitz wrote:
> On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > > +        if isinstance(port, types.StringTypes):
> >                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> > 
> > Should tcp.py import t.p.compat (ugh)?
> 
> I think not.  This has been the recommended style for a while.
> 
>     Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
>     [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
>     Type "copyright", "credits" or "license" for more information.
>     >>> import types
>     >>> isinstance(1, types.StringType)
>     0
>     >>> isinstance(1, types.IntType)
>     1

Yes, but now try types.StringType*s*, as used in the code.

-Andrew.




From mario at ruggier.org  Fri Jan 31 03:56:03 2003
From: mario at ruggier.org (Mario Ruggier)
Date: Fri, 31 Jan 2003 11:56:03 +0100
Subject: [Twisted-Python] Example: Accessing a database from a Resource
In-Reply-To: <4963325.1043699670555.JavaMail.nobody@daisy.psp.pas.earthlink.net>
Message-ID: <97747726-350A-11D7-833C-000393756786@ruggier.org>

Hi, thanks for the example. Just a couple of comments:

Your doc string for the resource-db exalple:
"""
Example: Making database calls from a Resource.

One of the most common web development tasks involves connecting to a
database, retrieving some data, formatting it as HTML, and returning
it to a web browser.  There are two primary means of accomplishing
this task within the Twisted framework, either via twisted.enterprise
(the preferred method), or via twisted.internet.threads.

This example demonstrates the second approach; this is mostly useful
in cases where you need something "quick and dirty", or where the use
of twisted.enterprise would be overkill.
"""

Well, as per the twisted philosophy, using components separately should
always be possible, and so choosing to use twisted.web.resource should
not oblige you to use twisted.enterprise. For a given application, 
another
"enterprise" layer may be more appropriate, or indeed required.

In the example shown, a connection is made and closed per request.
The adbapi integrates a dbpool handling. How would one go about
handling caching of connections and/or loaded data across requests,
and across users (outside of twisted.enterprise)? Would this require
writing a twisted server application? Is there a simpler way to do this?

And, for web resources in general, how does the concept of "web 
application
variables" (variables visible across all requests and user sessions, as
opposed to user session variables) ?

Many thanks, mario


On lundi, jan 27, 2003, at 18:34 Europe/Amsterdam, L. Daniel Burr wrote:

> As promised in the thread about deferreds and resources, here is an
> example of making a database call from a resource, using a thread.
>
> I've tried to follow the Twisted development guidelines, so please
> let me know if I've used any inappropriate naming conventions, etc.
>
> I didn't provide epydoc-style docstrings as I had originally hoped;
> I haven't had time to read the epydoc manual yet.
>
> Next up will be an example using twisted.enterprise, with Row and
> without.  Hopefully examples of this sort will help newer users in
> grokking twisted.web, at least until the Woven stuff is ready.
>
> L. Daniel Burr<dbresource.rpy>




From cyberlync at yahoo.com  Fri Jan 31 13:09:23 2003
From: cyberlync at yahoo.com (Eric Merritt)
Date: Fri, 31 Jan 2003 12:09:23 -0800 (PST)
Subject: [Twisted-Python] PB , authorizor, getIdentRequest
In-Reply-To: <20030131.005457.74752848.glyph@twistedmatrix.com>
Message-ID: <20030131200923.37735.qmail@web40807.mail.yahoo.com>

Hello all,

 I have been playing with pb for a few days now and
have run into a bit of a snag. I support of my pb
based server I created an authorizor that did a little
db based authorization. At first I had it returning
the ident object, but then I realized (after a few
attribute errors) that it should be returning a
deffered object. Then I saw the mention of dbcred from
the enterprise package. That help allot and I actually
got it working by pulling some code from dbcred. 

 At this point you could authorize yourself based on
the database and make calls to the server, and all was
good.

 At that point I was pretty happy but I noticed that
within the code for dbcred it makes a call to
threads.defferToTread. Me being me, I thought to
myself 'I am not using threads, so why am I using
this?' and I took it out. So I changed it, and am
simply returning a deffered object that has a callback
that returns the identity object, and it fails. In any
case, I was wondering if any one had any idea of why
removing the thread specific code causes it to fail.

Also in a completly unrelated question, is it possible
for the server to make calles on the client? I figure
this is possible by passing a referencable object to
the server perspective, but I thought I would get a
little advice before I started playing with it.

Thanks,
Eric


__________________________________________________
Do you Yahoo!?
Yahoo! Mail Plus - Powerful. Affordable. Sign up now.
http://mailplus.yahoo.com



From achim at procoders.net  Fri Jan 31 13:41:15 2003
From: achim at procoders.net (Achim Domma)
Date: Fri, 31 Jan 2003 21:41:15 +0100
Subject: [Twisted-Python] Webchat
Message-ID: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>

Hi,

I'm new to Twisted an want to understand a little bit more what it can do
for me. I have implemented a webchat using the asyncore module. If a user
logs in, he will the redirected to a frameset. The top frame contains the
'room view' and is in fact an endless page, so the connection has to be
keept alive as long as the user is logged in. The bottom frame contains the
input form. It posts a message to the server and the message is written to
the open connections of all users in the room.

Could somebody explain me, if such an architecture is possible with Twisted,
and what might be the benefits compared to using raw asyncore. If possible a
very rought roadmap how to begin would also be very helpfull.

regards,
Achim




From andrew-twisted at puzzling.org  Fri Jan 31 17:39:08 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 11:39:08 +1100
Subject: [Twisted-Python] PB , authorizor, getIdentRequest
In-Reply-To: <20030131200923.37735.qmail@web40807.mail.yahoo.com>
References: <20030131.005457.74752848.glyph@twistedmatrix.com> <20030131200923.37735.qmail@web40807.mail.yahoo.com>
Message-ID: <20030201003907.GB16606@frobozz.local>

On Fri, Jan 31, 2003 at 12:09:23PM -0800, Eric Merritt wrote:
> 
[..snip..]
>  At this point you could authorize yourself based on
> the database and make calls to the server, and all was
> good.
> 
>  At that point I was pretty happy but I noticed that
> within the code for dbcred it makes a call to
> threads.defferToTread. Me being me, I thought to
> myself 'I am not using threads, so why am I using
> this?' and I took it out. So I changed it, and am
> simply returning a deffered object that has a callback
> that returns the identity object, and it fails. In any
> case, I was wondering if any one had any idea of why
> removing the thread specific code causes it to fail.

Standard Python DB-API 2.0 modules are synchronous, i.e. they block while
they wait for results.  dbcred.DatabaseAuthorizer uses
twisted.enterprise.adbapi to talk with your database, and adbapi uses
threads so that it can present an asynchronous interface to the database
while using standard DB-API compliant modules (see the Introduction to
Twisted Enterprise HOWTO for details).

So unfortunately, database access does involve threads -- but Twisted takes
care of it all for you behind the scenes when you use twisted.enterprise, so
you can basically pretend they don't exist :)

I don't know why your specific change would fail, but it would cause
problems due to blocking -- remember that database queries can take an
arbitarily long amount of time to be processed, particularly under load.  My
advice is to just use the standard dbcred module as-is, if you can.

> Also in a completly unrelated question, is it possible
> for the server to make calles on the client? I figure
> this is possible by passing a referencable object to
> the server perspective, but I thought I would get a
> little advice before I started playing with it.

I know you can do this by getting the client to pass the server a reference
to itself, which the server can then do .callRemote on (just as the client
can do .callRemote on the server).  I'm not sure if there's a better way;
someone who knows more about PB that I do will have to tell you :)

-Andrew.




From andrew-twisted at puzzling.org  Fri Jan 31 17:51:30 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 11:51:30 +1100
Subject: [Twisted-Python] Webchat
In-Reply-To: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net>
Message-ID: <20030201005129.GC16606@frobozz.local>

On Fri, Jan 31, 2003 at 09:41:15PM +0100, Achim Domma wrote:
> Hi,
> 
> I'm new to Twisted an want to understand a little bit more what it can do
> for me. I have implemented a webchat using the asyncore module. If a user
> logs in, he will the redirected to a frameset. The top frame contains the
> 'room view' and is in fact an endless page, so the connection has to be
> keept alive as long as the user is logged in. The bottom frame contains the
> input form. It posts a message to the server and the message is written to
> the open connections of all users in the room.
> 
> Could somebody explain me, if such an architecture is possible with Twisted,
> and what might be the benefits compared to using raw asyncore. If possible a
> very rought roadmap how to begin would also be very helpfull.

It is possible, and the benefits include the fact that it's already written:
have a look at the LivePage class in twisted.web.woven.page.  ;)

But yes, with Twisted Web, you get alot of control over how you respond to
requests, including the ability to keep them open and feed new data to them
occasionally.

-Andrew.




From andrew-twisted at puzzling.org  Fri Jan 31 18:25:47 2003
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 1 Feb 2003 12:25:47 +1100
Subject: [Twisted-Python] Webchat
In-Reply-To: <20030201005129.GC16606@frobozz.local>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net> <20030201005129.GC16606@frobozz.local>
Message-ID: <20030201012547.GE16606@frobozz.local>

On Sat, Feb 01, 2003 at 11:51:30AM +1100, Andrew Bennetts wrote:
> 
> It is possible, and the benefits include the fact that it's already written:
> have a look at the LivePage class in twisted.web.woven.page.  ;)

It's been pointed out to me that LivePage isn't exactly the prettiest code
in Twisted, so just think of it as a proof that it can be done, rather than
an example of how your code will look :)

If you've already got asyncore code written, you probably wouldn't want to
use Woven anyway, but just Twisted Web directly...

-Andrew.




From ste at webaccess.mozquito.com  Fri Jan 31 19:15:25 2003
From: ste at webaccess.mozquito.com (Stefano Debenedetti)
Date: Sat, 01 Feb 2003 03:15:25 +0100
Subject: [Twisted-Python] Webchat
In-Reply-To: <20030201005129.GC16606@frobozz.local>
References: <FCEMIEFBFOIDAOJDEPIAAEBDEJAA.achim@procoders.net> <20030201005129.GC16606@frobozz.local>
Message-ID: <3E3B2DBD.1060904@webaccess.mozquito.com>

Andrew Bennetts wrote:
> But yes, with Twisted Web, you get alot of control over how you respond to
> requests, including the ability to keep them open and feed new data to them
> occasionally.

interesting, it would be nice to see an example of this...

ciao
ste




From exarkun at intarweb.us  Fri Jan 31 20:40:51 2003
From: exarkun at intarweb.us (Jp Calderone)
Date: Fri, 31 Jan 2003 22:40:51 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] *With() methods; refactor/rearrangement of various internal classes
In-Reply-To: <20030131073006.GL14761@frobozz.local>
References: <E18eM5u-0000u5-00@pyramid.twistedmatrix.com> <20030131062324.GJ14761@frobozz.local> <20030131.005457.74752848.glyph@twistedmatrix.com> <20030131073006.GL14761@frobozz.local>
Message-ID: <20030201034051.GA8774@meson.dyndns.org>

On Fri, Jan 31, 2003 at 06:30:06PM +1100, Andrew Bennetts wrote:
> On Fri, Jan 31, 2003 at 12:54:57AM -0600, Glyph Lefkowitz wrote:
> > On Fri, 31 Jan 2003 17:23:24 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> > > > +        if isinstance(port, types.StringTypes):
> > >                                ^^^^^^^^^^^^^^^^^ This breaks Python 2.1
> > > 
> > > Should tcp.py import t.p.compat (ugh)?
> > 
> > I think not.  This has been the recommended style for a while.
> > 
> >     Python 2.1.3 (#1, Jan  3 2003, 13:08:57) 
> >     [GCC 2.95.4 20011002 (Debian prerelease)] on linux2
> >     Type "copyright", "credits" or "license" for more information.
> >     >>> import types
> >     >>> isinstance(1, types.StringType)
> >     0
> >     >>> isinstance(1, types.IntType)
> >     1
> 
> Yes, but now try types.StringType*s*, as used in the code.
> 

  Yea, thanks.  Fix has been checked in.  (Not only is StringTypes not in
2.1, but isinstance() doesn't work on tuples there either ;)

  Jp

-- 
C/C++/Java/Perl/Python/Smalltalk/PHP/ASP/XML/Linux (User+Admin)
Genetic Algorithms/Genetic Programming/Neural Networks
Networking/Multithreading/Legacy Code Maintenance/OpenGL
See my complete resume at http://intarweb.us:8080/
-- 
 up 46 days, 7:49, 5 users, load average: 0.55, 0.34, 0.16
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20030131/6c8b2838/attachment.sig>

