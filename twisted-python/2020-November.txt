From trac at twistedmatrix.com  Sun Nov  1 00:05:16 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Nov 2020 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1604210716.62.1858605454639798029@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201101/19d7bda0/attachment.htm>

From trac at twistedmatrix.com  Sun Nov  8 00:05:17 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Nov 2020 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1604819117.91.3637388694848985440@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201108/6b4102fd/attachment.htm>

From trac at twistedmatrix.com  Sun Nov 15 00:05:17 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Nov 2020 07:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1605423917.26.1425982495210459160@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201115/ac9b3142/attachment.htm>

From trac at twistedmatrix.com  Sun Nov 22 00:05:16 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 22 Nov 2020 07:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1606028716.84.2672288245985118382@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201122/bb1fd004/attachment.htm>

From chris at withers.org  Mon Nov 23 04:10:28 2020
From: chris at withers.org (Chris Withers)
Date: Mon, 23 Nov 2020 11:10:28 +0000
Subject: [Twisted-Python] twisted vs asyncio vs tornado (and other event
 loops?)
Message-ID: <711661ef-b27b-2df7-6695-b4389e440a34@withers.org>

Hi All,

Just bumped into Glyph's post from last year:
https://twistedmatrix.com/pipermail/twisted-python/2019-April/032280.html

Doesn't look like there was much of a response, so wondered what had 
happened with the plans laid out?

Also interested in how people see crochet fitting into this world...

cheers,

Chris


From glyph at twistedmatrix.com  Wed Nov 25 00:08:19 2020
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 24 Nov 2020 23:08:19 -0800
Subject: [Twisted-Python] twisted vs asyncio vs tornado (and other event
 loops?)
In-Reply-To: <711661ef-b27b-2df7-6695-b4389e440a34@withers.org>
References: <711661ef-b27b-2df7-6695-b4389e440a34@withers.org>
Message-ID: <DDC77B40-71E1-47F2-A4BA-6C167303DB1A@twistedmatrix.com>

I still don't personally have time to execute on this, but I still think it's an important thing we should do if anyone has time to hack on it :)

-g

> On Nov 23, 2020, at 3:10 AM, Chris Withers <chris at withers.org> wrote:
> 
> Hi All,
> 
> Just bumped into Glyph's post from last year:
> https://twistedmatrix.com/pipermail/twisted-python/2019-April/032280.html
> 
> Doesn't look like there was much of a response, so wondered what had happened with the plans laid out?
> 
> Also interested in how people see crochet fitting into this world...
> 
> cheers,
> 
> Chris
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Wed Nov 25 16:03:17 2020
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 25 Nov 2020 15:03:17 -0800
Subject: [Twisted-Python] smb component progress
In-Reply-To: <39de2dee-7d52-2530-9be9-59e8e080b6d3@haywood.id.au>
References: <39de2dee-7d52-2530-9be9-59e8e080b6d3@haywood.id.au>
Message-ID: <EA0780CC-85AB-4050-8299-EB03FE410BF5@twistedmatrix.com>



> On Sep 8, 2020, at 4:18 AM, Ian Haywood <ian at haywood.id.au> wrote:
> 
> I have continued to work slowly on this project. Named pipes are supported, the samba client can connect and list available shares.
> 
> i am currently working on a vfs layer using deferToThread to provide asynchronous file access
> 
>  I have tried to keep the code divided into logically separate chunks . my first chunk received comments from glyph 2 months ago but has remained in the review queue since.
> 
> https://twistedmatrix.com/trac/ticket/9818
> 
> is there anyone available to review this code to progress it ?

Hi Ian,

I am sorry I haven't really had any time in this crazy year we've been having to review this myself.

Judging by the growing length of https://twisted.reviews <https://twisted.reviews/>, the pandemic has not been friendly to most other Twisted reviewers' schedules either.

The whole point of folding this into Twisted was supposed to make it easier to find reviewers, but "easier" remains a relative statement :).

If anyone else out there has a few spare cycles to look at these PRs, they're all still in review, and it would be very cool to get a memory-safe SMB implementation out there, particularly if we could make it part of Twisted.

Thanks again for this enormously valuable contribution; I hope we can find a way to integrate it.

-g


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201125/d3446622/attachment.htm>

From glyph at twistedmatrix.com  Sat Nov 28 21:46:56 2020
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 28 Nov 2020 20:46:56 -0800
Subject: [Twisted-Python] revert / rework of "AMPv2" change?
In-Reply-To: <f698ca11-1de1-b024-8ae4-e31ca7710c67@x2a.org>
References: <BE3583A2-6E4E-4550-AE6D-ACD4A12CF900@twistedmatrix.com>
 <CAFycZ9crqs1dJqMgqEs1b3XnsbKib1U+2cRuR5iavBeNM-K6Ug@mail.gmail.com>
 <f698ca11-1de1-b024-8ae4-e31ca7710c67@x2a.org>
Message-ID: <DED5503F-8CFD-40F2-B9E4-7AC63EB79D76@twistedmatrix.com>



> On Oct 21, 2020, at 10:34 AM, Jonathan Bastien-Filiatrault <joe at x2a.org> wrote:
> 
> On 2020-10-20 04 h 57, adi at roiban.ro (Adi Roiban) wrote:
>> Just my 2 cents
>> I think that whether this should be reverted or reworked should be between
>> the person raising this issue (Glyph) and the author of the PR (Jonathan).
> Glyph has asked me to submit the type annotation work on AMP, I will do
> this. I also plan on resubmitting a reworked patch that addresses the
> issues that glyph raised.
>> 
>> I see that Jonathan has responded to the feedback inside the merged PR.I
>> hope it can be reworked.
>> 
>> Since AMP v2 is not standardized maybe is ok to have it as a separate
>> experimental top level name.
>> 
>> I have never used AMP ...I tried to use it via ampoule but ended up using
>> the stdlib process pool as I was not able see any performance difference.
>> 
>> Since `amp` is used by `trial -j`  we need to keep it inside twisted.
>> 
>> But since AMP v2 is experimental, I think that is best to have it as a
>> separate txamp2 project.
>> In this way, the twisted AMP v2 project can follow its own rules.
>> Once AMP v2 is "mature" it can be moved to core twisted
>> 
>> So my take is to revert it and move it to twisted/txamp2.
> 
> I have no issue with changing the name or if this patch lives as a
> project besides twisted. I might even rework it into something more
> forward-compatible as suggested by glyph. I think netstrings are a
> decent option as it would make long value handling easier since values
> would always be contiguous without "continuation markers" interspersed.
> The main thing I dislike about netstrings are the variable-length ASCII
> numbers, but that is not a big complexity.

I originally didn't like this either, but since I designed AMP I've come around:

The thing about variable-length ASCII numbers is that they give you a lot of leeway to error out in case the protocol is not being respected.  With packed binary values, any 2-byte sequence is a valid length, so if something opens a socket and says "EHLO", it starts waiting for 17734 more bytes which it will never receive.  By contrast, netstrings have built-in redudancy; for a very low overhead (most length prefixes end up being 2-3 bytes rather than 2) you get the ability to immediately error out with a clear exception as soon as you see "E".  Anyone implementing this in a static context where they don't want heap allocations for the length prefix itself should not allocate arbitrary data, but rather, allocate a very small fixed buffer (6 bytes will get you considerably beyond the built-in limitations of AMP already) and again, immediately error out if that is exceeded.  Similarly the trailing comma provides an in-band sanity check where buggy applications will promptly crash rather than bleeding into the next message.

> Could the next AMP version
> use values framed using 32 bit or 64 bit integers ?

I'd really rather go with netstrings for all the reasons listed above.

> Transmitting long-ish values is a real use case and whatever extension
> we do must retain the dead-simple, easy to implement nature of the
> current AMP protocol. I now realise that I somewhat hijacked the
> "streaming values" bug (2529). IMHO, streaming should be handled at the
> application level, but I digress.

Yeah, that bug is more about making it easy to do the application-level stuff than implementing something implicit within the protocol.

>> ----
>> 
>> BTW this is also my suggestion for the PR trying to introduce support for
>> SMB.... have twisted SMB implementation in a separate project.
>> 
> All the best,
> 
> Jonathan

Same to you.  Thanks for your contributions, and sorry for the slow pace of communication here; 2020 is a heck of a year.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201128/8025b4dd/attachment.htm>

From trac at twistedmatrix.com  Sun Nov 29 00:05:15 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 29 Nov 2020 07:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1606633515.84.7196712569569545621@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201129/33710527/attachment.htm>

From robert.difalco at gmail.com  Sun Nov 29 10:41:26 2020
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Sun, 29 Nov 2020 09:41:26 -0800
Subject: [Twisted-Python] More Conch Questions
Message-ID: <CAAXGW-wdwFLNKkCvFUbvGL-G57OB_-j9HK5_+r2Ua8YkP4AZwg@mail.gmail.com>

I'm continuing to wrestle with conch, this time around authentication and
notifying deferred of auth failure.

It seems like the SSH factory has a deferred to be notified of auth
failures here:
https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66

Unfortunately, this deferred is cleared because prior to auth, it
receives this on successful connect:
https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L83-L88

As you can see this clears the deferred so it is no longer available to get
an errback. This also prevents the SSHClientTransport from getting a
sendDisconnect.

To try it change the user to something invalid here:
https://gist.github.com/radifalco/5a5cca4bf8d49d5c61113e36f9be7553#file-sftp-py-L328

This will never get a callback to errback.

I guess I would have expected this to get the error but it actually
succeeds with None. As a result there is no deferred to get the auth
failure and my app waits forever for a notification.

There is one ting I *think* I know how to do, add a timeout with a callback
later on the sftpClient deferred. But that seems lame. What I'd like to do
is to get this ConchError as it has the actual reason for the connection
failure.  Thoughts?

https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201129/549aa4ee/attachment-0001.htm>

From peter.westlake at pobox.com  Mon Nov 30 04:48:05 2020
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 30 Nov 2020 11:48:05 +0000
Subject: [Twisted-Python] ClientFactory design
Message-ID: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>

I'm studying an SSH client implementation using Conch, and was surprised to see that the ClientFactory subclass had a connect() method which calls connectTCP. This isn't really a problem - the code works - but it seems like an odd place to do the connection. Am I right to be surprised?

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/0d197afa/attachment.htm>

From colin.dunklau at gmail.com  Mon Nov 30 06:05:42 2020
From: colin.dunklau at gmail.com (Colin Dunklau)
Date: Mon, 30 Nov 2020 07:05:42 -0600
Subject: [Twisted-Python] ClientFactory design
In-Reply-To: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>
References: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>
Message-ID: <E03306AF-6131-4D80-BFA4-3F760C233768@gmail.com>



> On 30. Nov 2020, at 05:48, Peter Westlake <peter.westlake at pobox.com> wrote:
> 
> ﻿
> I'm studying an SSH client implementation using Conch, and was surprised to see that the ClientFactory subclass had a connect() method which calls connectTCP. This isn't really a problem - the code works - but it seems like an odd place to do the connection. Am I right to be surprised?
> 
> Peter.

Hi Peter,

ClientFactory doesn’t define a connect method, so that’s probably just a custom convenience method added by the author, rather than something involved in the twisted interface. As for if it’s weird or not, that’s hard to say without seeing the full implementation.

- Colin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/dfc0ee05/attachment.htm>

From exarkun at twistedmatrix.com  Mon Nov 30 06:38:36 2020
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 30 Nov 2020 08:38:36 -0500
Subject: [Twisted-Python] ClientFactory design
In-Reply-To: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>
References: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>
Message-ID: <CAEeXt4PEO_r03S2rn8VLUVCSKMgAu5n+TevhPDZAku1FDSzOBw@mail.gmail.com>

On Mon, Nov 30, 2020 at 6:48 AM Peter Westlake <peter.westlake at pobox.com>
wrote:

> I'm studying an SSH client implementation using Conch, and was surprised
> to see that the ClientFactory subclass had a connect() method which calls
> connectTCP. This isn't really a problem - the code works - but it seems
> like an odd place to do the connection. Am I right to be surprised?
>

Putting transport setup on the factory unnecessarily couples protocol and
transport logic.  More flexibility is provided by keeping these concerns
independent.


>
> Peter.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/e3768872/attachment.htm>

From peter.westlake at pobox.com  Mon Nov 30 11:07:01 2020
From: peter.westlake at pobox.com (Peter Westlake)
Date: Mon, 30 Nov 2020 18:07:01 +0000
Subject: [Twisted-Python] ClientFactory design
In-Reply-To: <CAEeXt4PEO_r03S2rn8VLUVCSKMgAu5n+TevhPDZAku1FDSzOBw@mail.gmail.com>
References: <07e386a0-ceeb-4940-9fa4-13f74a7ddbdd@www.fastmail.com>
 <CAEeXt4PEO_r03S2rn8VLUVCSKMgAu5n+TevhPDZAku1FDSzOBw@mail.gmail.com>
Message-ID: <68993dfb-cacc-4284-b027-c6ed21ee1f25@www.fastmail.com>

On Mon, 30 Nov 2020, at 13:38, Jean-Paul Calderone wrote:
> On Mon, Nov 30, 2020 at 6:48 AM Peter Westlake <peter.westlake at pobox.com> wrote:
>> __
>> I'm studying an SSH client implementation using Conch, and was surprised to see that the ClientFactory subclass had a connect() method which calls connectTCP. This isn't really a problem - the code works - but it seems like an odd place to do the connection. Am I right to be surprised?
> 
> Putting transport setup on the factory unnecessarily couples protocol and transport logic.  More flexibility is provided by keeping these concerns independent.

That was my feeling too. Thanks!

Peter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/0adf9672/attachment.htm>

From robert.difalco at gmail.com  Mon Nov 30 17:00:19 2020
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Mon, 30 Nov 2020 16:00:19 -0800
Subject: [Twisted-Python] More Conch Questions
In-Reply-To: <CAAXGW-wdwFLNKkCvFUbvGL-G57OB_-j9HK5_+r2Ua8YkP4AZwg@mail.gmail.com>
References: <CAAXGW-wdwFLNKkCvFUbvGL-G57OB_-j9HK5_+r2Ua8YkP4AZwg@mail.gmail.com>
Message-ID: <CAAXGW-wEBfEmdPzBXzyv=PGy5H=ESTasfM8UTSTPCeqp4YvZKA@mail.gmail.com>

Ok, my solution is to re-write the connect function like this. Any issues
with this approach?

def connect(options, userAuthObject):
    d_connect = Deferred()
    d_authorized = Deferred()

    factory = SFTPClientFactory(d_connect, options, userAuthObject)

    def _connect_failed(*args, **kwargs):
        d_authorized.errback(args[0])

    def _connected(*args, **kwargs):
        # Reset the factory's deferred
        factory.d = d_authorized

    d_connect.addErrback(_connect_failed).addCallback(_connected)

    reactor.connectTCP(options["host"], options["port"], factory)

    return d_authorized.addCallback(lambda ignore: factory)


On Sun, Nov 29, 2020 at 9:41 AM Robert DiFalco <robert.difalco at gmail.com>
wrote:

> I'm continuing to wrestle with conch, this time around authentication and
> notifying deferred of auth failure.
>
> It seems like the SSH factory has a deferred to be notified of auth
> failures here:
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>
> Unfortunately, this deferred is cleared because prior to auth, it
> receives this on successful connect:
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L83-L88
>
> As you can see this clears the deferred so it is no longer available to
> get an errback. This also prevents the SSHClientTransport from getting a
> sendDisconnect.
>
> To try it change the user to something invalid here:
> https://gist.github.com/radifalco/5a5cca4bf8d49d5c61113e36f9be7553#file-sftp-py-L328
>
> This will never get a callback to errback.
>
> I guess I would have expected this to get the error but it actually
> succeeds with None. As a result there is no deferred to get the auth
> failure and my app waits forever for a notification.
>
> There is one ting I *think* I know how to do, add a timeout with a
> callback later on the sftpClient deferred. But that seems lame. What I'd
> like to do is to get this ConchError as it has the actual reason for the
> connection failure.  Thoughts?
>
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/1f4008c2/attachment.htm>

From robert.difalco at gmail.com  Mon Nov 30 21:21:19 2020
From: robert.difalco at gmail.com (Robert DiFalco)
Date: Mon, 30 Nov 2020 20:21:19 -0800
Subject: [Twisted-Python] More Conch Questions
In-Reply-To: <CAAXGW-wEBfEmdPzBXzyv=PGy5H=ESTasfM8UTSTPCeqp4YvZKA@mail.gmail.com>
References: <CAAXGW-wdwFLNKkCvFUbvGL-G57OB_-j9HK5_+r2Ua8YkP4AZwg@mail.gmail.com>
 <CAAXGW-wEBfEmdPzBXzyv=PGy5H=ESTasfM8UTSTPCeqp4YvZKA@mail.gmail.com>
Message-ID: <CAAXGW-zb1MDdRzyCS98_b6ezzcbqetM6XzcBnVoNJ6pDppAj5w@mail.gmail.com>

Alright, it's a but in twisted. How do I report twisted bugs? Under python3
service.name is bytes and not a string.

https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L86

On Mon, Nov 30, 2020 at 4:00 PM Robert DiFalco <robert.difalco at gmail.com>
wrote:

> Ok, my solution is to re-write the connect function like this. Any issues
> with this approach?
>
> def connect(options, userAuthObject):
>     d_connect = Deferred()
>     d_authorized = Deferred()
>
>     factory = SFTPClientFactory(d_connect, options, userAuthObject)
>
>     def _connect_failed(*args, **kwargs):
>         d_authorized.errback(args[0])
>
>     def _connected(*args, **kwargs):
>         # Reset the factory's deferred
>         factory.d = d_authorized
>
>     d_connect.addErrback(_connect_failed).addCallback(_connected)
>
>     reactor.connectTCP(options["host"], options["port"], factory)
>
>     return d_authorized.addCallback(lambda ignore: factory)
>
>
> On Sun, Nov 29, 2020 at 9:41 AM Robert DiFalco <robert.difalco at gmail.com>
> wrote:
>
>> I'm continuing to wrestle with conch, this time around authentication and
>> notifying deferred of auth failure.
>>
>> It seems like the SSH factory has a deferred to be notified of auth
>> failures here:
>>
>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>>
>> Unfortunately, this deferred is cleared because prior to auth, it
>> receives this on successful connect:
>>
>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L83-L88
>>
>> As you can see this clears the deferred so it is no longer available to
>> get an errback. This also prevents the SSHClientTransport from getting a
>> sendDisconnect.
>>
>> To try it change the user to something invalid here:
>> https://gist.github.com/radifalco/5a5cca4bf8d49d5c61113e36f9be7553#file-sftp-py-L328
>>
>> This will never get a callback to errback.
>>
>> I guess I would have expected this to get the error but it actually
>> succeeds with None. As a result there is no deferred to get the auth
>> failure and my app waits forever for a notification.
>>
>> There is one ting I *think* I know how to do, add a timeout with a
>> callback later on the sftpClient deferred. But that seems lame. What I'd
>> like to do is to get this ConchError as it has the actual reason for the
>> connection failure.  Thoughts?
>>
>>
>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/7a4c4ac6/attachment.htm>

From colin.dunklau at gmail.com  Mon Nov 30 21:32:14 2020
From: colin.dunklau at gmail.com (Colin Dunklau)
Date: Mon, 30 Nov 2020 22:32:14 -0600
Subject: [Twisted-Python] More Conch Questions
In-Reply-To: <CAAXGW-zb1MDdRzyCS98_b6ezzcbqetM6XzcBnVoNJ6pDppAj5w@mail.gmail.com>
References: <CAAXGW-wdwFLNKkCvFUbvGL-G57OB_-j9HK5_+r2Ua8YkP4AZwg@mail.gmail.com>
 <CAAXGW-wEBfEmdPzBXzyv=PGy5H=ESTasfM8UTSTPCeqp4YvZKA@mail.gmail.com>
 <CAAXGW-zb1MDdRzyCS98_b6ezzcbqetM6XzcBnVoNJ6pDppAj5w@mail.gmail.com>
Message-ID: <CAMTx_3D6QYUaVKugLo47a8wmqZwmsdqVN+n4G6jcKWLO0POHwg@mail.gmail.com>

On Mon, Nov 30, 2020 at 10:21 PM Robert DiFalco <robert.difalco at gmail.com>
wrote:

> Alright, it's a but in twisted. How do I report twisted bugs? Under
> python3 service.name is bytes and not a string.
>
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L86
>

https://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#TheresabuginTwisted.WheredoIreportit

If that's the case, that comparison should throw a TypeError. Does it?


>
>
> On Mon, Nov 30, 2020 at 4:00 PM Robert DiFalco <robert.difalco at gmail.com>
> wrote:
>
>> Ok, my solution is to re-write the connect function like this. Any issues
>> with this approach?
>>
>> def connect(options, userAuthObject):
>>     d_connect = Deferred()
>>     d_authorized = Deferred()
>>
>>     factory = SFTPClientFactory(d_connect, options, userAuthObject)
>>
>>     def _connect_failed(*args, **kwargs):
>>         d_authorized.errback(args[0])
>>
>>     def _connected(*args, **kwargs):
>>         # Reset the factory's deferred
>>         factory.d = d_authorized
>>
>>     d_connect.addErrback(_connect_failed).addCallback(_connected)
>>
>>     reactor.connectTCP(options["host"], options["port"], factory)
>>
>>     return d_authorized.addCallback(lambda ignore: factory)
>>
>>
>> On Sun, Nov 29, 2020 at 9:41 AM Robert DiFalco <robert.difalco at gmail.com>
>> wrote:
>>
>>> I'm continuing to wrestle with conch, this time around authentication
>>> and notifying deferred of auth failure.
>>>
>>> It seems like the SSH factory has a deferred to be notified of auth
>>> failures here:
>>>
>>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>>>
>>> Unfortunately, this deferred is cleared because prior to auth, it
>>> receives this on successful connect:
>>>
>>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L83-L88
>>>
>>> As you can see this clears the deferred so it is no longer available to
>>> get an errback. This also prevents the SSHClientTransport from getting a
>>> sendDisconnect.
>>>
>>> To try it change the user to something invalid here:
>>> https://gist.github.com/radifalco/5a5cca4bf8d49d5c61113e36f9be7553#file-sftp-py-L328
>>>
>>> This will never get a callback to errback.
>>>
>>> I guess I would have expected this to get the error but it actually
>>> succeeds with None. As a result there is no deferred to get the auth
>>> failure and my app waits forever for a notification.
>>>
>>> There is one ting I *think* I know how to do, add a timeout with a
>>> callback later on the sftpClient deferred. But that seems lame. What I'd
>>> like to do is to get this ConchError as it has the actual reason for the
>>> connection failure.  Thoughts?
>>>
>>>
>>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/client/direct.py#L61-L66
>>>
>>> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20201130/38de4846/attachment-0001.htm>

