From jasbahr at twistedmatrix.com  Sun Jul  1 14:15:04 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Sun, 1 Jul 2001 13:15:04 -0500
Subject: [Twisted-Python] What you thought would always last has passed you by...
In-Reply-To: <Pine.LNX.4.21.0106302021320.15953-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMAECCGPAA.jasbahr@twistedmatrix.com>

>Finally, in a roundabout way, the issue was raised that perhaps we 
>should change the project's name.  Twisted Python is mimsleading; it's
>not a distribution of python, it's a collection of things written *in*
>python (the convention is that other projects -- Stackless Python,
>Active Python, Mac Python, Jython -- are actually interpreters).
>
>Any thoughts on the name change issue?

That's true.  'TwistedMatrix' is a good name, but I also like 
the shortened name 'Twisted'.  :-)

Jason







From grolgh at online.no  Mon Jul  2 03:39:33 2001
From: grolgh at online.no (benjamin bruheim)
Date: Mon, 2 Jul 2001 09:39:33 +0200
Subject: [Twisted-Python] vfs-draft
Message-ID: <3B400F5E@epostleser.online.no>

Hepp, ramblings coming up.

while working on twisted.ftp I had to add a system to virtualize the dirs, so 
I began to outline a vfs of some kind. it does not deal with direct 
interaction with files, but rather lists them and so on. There's plenty of 
design issues left, but since I'm not that self-confidient on how to work this 
thing out, I felt like letting you have a peek on the idea as it is now.

Radix suggested it could be used to provide a user-space which is seperated 
from the OS.

It's a short test, and it uses authenticator. To test it, you need to rewrite 
the paths heavily. you guys can handle that ;) The example-code is at the 
bottom.

There's loads of comments up front, but many of those are not longer valid.
The part which creates most problem is the 'userFileSystem' atm.

See for yourself:
http://www.twistedmatrix.com/users/phed/vfs.py

Feedback, and give your opinions! 
And when the filesystem is done, I have some suggested projects of extra 
FileSystems as 'archiveFileSystem' (as in .zip-files), 'configFileSystem' and 
'emailattachmentFileSystem'. ;) (Sure...)

benjamin
http://mp3.com/benjamin






From carmstro at twistedmatrix.com  Mon Jul  2 17:09:47 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 2 Jul 2001 17:09:47 -0400
Subject: [Twisted-Python] TWN issue #1!
Message-ID: <20010702170947.A930@Fookidla.org>

* The TwistedPython Weekly News *

1st Issue. Monday, July 2, 2001

QOTW:

  --> java (dutkiewicz at 91.portland-01-02rs.or.dial-access.att.net) has joined
  #python
  <java> yes
  <-- java (dutkiewicz at 91.portland-01-02rs.or.dial-access.att.net) has left
  #python
  <glyph> goodbye, java
  <glyph> hehe, that's surprisingly satisfying to say


Welcome to the TwistedPython Weekly News. This is the first issue, so it will
cover a larger time-frame than a single week. If we find that we do not have
enough news for an issue every week, we may change it to the TwistedPython
Monthly News.

* Progress *

After a period of low activity, there were a lot of new changes in the Twisted
code base. Here are some summaries.

* Refactorings: Chris Armstrong did a lot of work refactoring both twisted.web
  and twisted.reality. The web refactoring was finished on 2001-06-11 and
  twisted.reality on 2001-06-20. During these refactorings, a change to the
  Coding Standard was required, as Chris found that Python has limitations on
  circular imports in packages. Sibling imports were allowed in this case
  ("import html" instead of "from twisted.web import html").
* Twisted Explorer: Chris started doing an interactive Object Browser that he
  eventually wants to write a Reality front-end to, and has been heard rambling
  about a potential 3d interface.
* Other stuff: There have been other minor hacks lately: Chris started
  rewriting calendar.py, the web calendar, and started the twisted.pim package
  with the 'todo' module. There is a web-based front-end for todo, and an
  instance of it is running here. There have also been a few additions to net
  and authenticator.
* Name Change: There has been talk of a name change. The name "Twisted Python"
  is definitely going, as it can mislead people to believe that it's some sort
  of distribution of Python (Most Python ports/distributions are "Something
  Python"). Two ideas so far are just "Twisted" or "TwistedMatrix".


* Short-term Todo *

Watch out for some cool new things coming to TwistedPython.

* Chris is working on a spell-casting system for Twisted Reality.
* Jason Asbahr will be working on InstanceMessenger, a new messaging system
  based on the new PerspectiveBroker.
* Watch out for twisted.pim. Glyph is getting an Agenda VR3 soon and he wants
  Twisted Python running on it. :)


* Interesting Thing Of the Week:
* The Twisted PerspectiveBroker

After much mucking about, Glyph finally refactored ProxyBroker into
PerspectiveBroker. This is probably the most exciting new development for
Twisted Python in recent time. pb is a replacement for Gloop, which mainly uses
cPickle for serialization of objects. pb, on the other hand, uses 'jelly', a
home-made serialization library which uses S-Expressions. This is going to be a
very central part of TPy, and we're all very excited about it. Go Glyph!

Ok, that's it for this week. Thanks for reading!
Chris Armstrong

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Tue Jul  3 03:00:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jul 2001 02:00:26 -0500 (CDT)
Subject: [Twisted-Python] TWN issue #1!
In-Reply-To: <20010702170947.A930@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0107021819500.14497-100000@zaibach.twistedmatrix.com>

On Mon, 2 Jul 2001, Chris Armstrong wrote:

> * The TwistedPython Weekly News *
> 1st Issue. Monday, July 2, 2001

A round of applause for Chris putting together such a nice review!  I
think this is a great idea and I look forward to seeing more of these in
the future.

> * Name Change: There has been talk of a name change. The name "Twisted Python"
>   is definitely going, as it can mislead people to believe that it's some sort
>   of distribution of Python (Most Python ports/distributions are "Something
>   Python"). Two ideas so far are just "Twisted" or "TwistedMatrix".

I think I like "Twisted".  An adjective name gives us a couple of things;
like natural sounding submodules (as is appropriate for an all-inclusive
project such as this one).  Also, it seems to be the de-facto name
already; people refer to 'twisted' on #python IRC all the time.

> Watch out for some cool new things coming to TwistedPython.
> 
> * Chris is working on a spell-casting system for Twisted Reality.
> * Jason Asbahr will be working on InstanceMessenger, a new messaging system
>   based on the new PerspectiveBroker.
> * Watch out for twisted.pim. Glyph is getting an Agenda VR3 soon and he wants
>   Twisted Python running on it. :)

Unfortunately my VR3 seems very late and the agenda computing folks have
been uncommunicative.

> * Interesting Thing Of the Week:
> * The Twisted PerspectiveBroker
> 
> After much mucking about, Glyph finally refactored ProxyBroker into
> PerspectiveBroker. This is probably the most exciting new development for
> Twisted Python in recent time. pb is a replacement for Gloop, which mainly uses
> cPickle for serialization of objects. pb, on the other hand, uses 'jelly', a
> home-made serialization library which uses S-Expressions. This is going to be a
> very central part of TPy, and we're all very excited about it. Go Glyph!

Sorry to contradict you so soon after the news, but it's no longer based
on s-expressions! :)

Perspective Broker is a tiered protocol; at the lowest tier is
twisted.glen, the Generic List Encoder.  Glen is a pretty interesting
accomplishment in itself, but it hides its details pretty well -- all that
PerspectiveBroker deals with is lists of strings/ints/floats.  So,
currently glen is almost completely isomorhpic to sexps, but is much
faster to generate, faster to parse, and *MUCH* smaller in terms of data
transmission size, especially for protocols like pb (like, an order of
magnitude).  There is currently somewhat of a CPU bottleneck in
ListEncoding.dataReceived, but I believe this function will not be
difficult to rewrite in c When The Time Comes To Optimize.

Those of you who have Twisted websites on twistedmatrix.com, there will be
a bit of a "red flag day" this sunday.  We're going to be switching from
the old Gloop-based distributed websites to a newer, shinier, altogether
less totally sucky PB-based distributed web system.  The short version is
that this will cause your dynamic websites to not function with the new
server.  (I hope to release 0.9.0 before then, so it'll be on the website
before the web server itself is upgraded.)

It should be a simple process of regenerating your SPL in order to use the
new code, assuming that Chris refactored web properly :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph










From slt5v at cc.usu.edu  Wed Jul  4 00:25:28 2001
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Tue, 3 Jul 2001 22:25:28 -0600
Subject: [Twisted-Python] Twisted.pim
Message-ID: <20010703222528.A544@cc.usu.edu>

Hey Twisted gang!

  Well, since Chris's mention of Twisted.pim in TWN #1, I have began
  to think a lot about how such a thing would be implemented.  It has
  been my idea for a while now to implement some sort of tools to
  accomplish "Personal Information Management," and since glyph and
  his minions have been trying to drag me into this for a while, I
  decided to succumb. :)

  Chris (radix) and I discussed for a while today on IRC some of our
  ideas for what Twisted.pim would do and how it would be
  implemented.  Short of boring you with a long log of our
  conversation, here is a brief summary of some of our ideas.  I
  submit them here for your review, criticism, praise, and
  volunteering to help write this! :)

  What is it?
      First of all, Twisted.pim should be more than what traditional
      PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).
      The main function of those applications is to handle
      appointments, contacts, and to-do lists -- but all of that
      separately.  It's almost like they are "Personal Appointment,
      Things to do, and Contact Managers" instead of a more broad
      "Personal _Information_ Managers."  Let me illustrate with a
      couple of examples of what I mean:

      Example 1:
        Integration.  Normally, when I have an appointment scheduled,
        it will involve something I have stored elsewhere -- whether
        it be contact info for someone, or perhaps an item on my to-do
        list, or a memo I had made earlier.  With the Palm and other
        traditional PIM's, it isn't possible to link this information.
        Wouldn't it be nice to be able to click on an icon, or select
        an item from a list, from within that appointment view that
        would take to you the related information?  Or that you could
        take notes on that particular meeting and those notes show up
        with your memos and perhaps with your completed to-do item?

      Example 2:
        Information management.  I like to take notes on what I'm
        studying and working on.  Perhaps it is notes on how to
        complete a particular phase of a project at work.  Or maybe
        they are notes for a class at school.  Or perhaps it is notes
        on something new I learned in sys admin stuff.  I would love
        to be able to store these notes, be able to cross reference
        them, and sometimes associate them with to-do lists or
        appointments.  Or store links to information I found on the
        web or whatever.  So, for example, when I see on a weekly view
        that I have a test coming up, I could look at that appointment
        and have a link to my class notes to view them.  So, I am
        concerned about here more types of data being stored than the
        usual, yet all of them being able to be related and associated
        together.


      I've been doing a lot of reading lately of the works of Stephen
      R. Covey, specifically "The 7 Habits of Highly Effective People"
      and "First Things First."  He talks a lot about different
      generations of tools used is managing and organizing one's time
      and resources.  Without going into too much detail, I want to be
      able to use Twisted.pim to center my life on my "mission
      statement" and goals stemming from that, then be able to manage
      my life from this.  The linking and different views stemming
      from my ideas of Twisted.pim are essential for me to do this.
      
      Other than going beyond a tradition PIM in what data is stored
      and how it can be associated it, building this upon Twisted
      brings up some interesting possibilities.  First of all, my main
      interest is having ubiquitous access to my data, so this truly
      will be a useful tool for me.  So, whether it be through an
      interface to Emacs, a GTK view, a Web interface, or whatever, I
      want access to the same data and same functionality.
      Eventually, I would love to get an Agenda or another PDA running
      Linux and ideally this would run on it as well.  Secondly,
      because it is built upon Twisted, this leads well to a
      multi-user type of system.  Almost a groupware type of
      application.  This leads to questions of authorization and
      ownership of data items and who has permission to view them.  I
      will lead the design of such items to people such as glyph who
      is the "man with the internet."

      So, basically, in a long nutshell, those are my ideas now of
      what Twisted.pim should do.


  How will it be implemented?
      Here are notes of some of the things radix and I thought.  I'm
      not too good at design of such systems right now, so this is
      where I need a lot of help.

      * Have a base class for all of the data types, that would
        include shared items such as association info, name, owner,
        etc.  Example data types descended from this would be
        appointment, to-do item, memo, etc.

      * Implement twisted.pim.associator which will provide the
        support for associating and linking data items together.

      * 'middle-end' classes which the UI viewers talk to.  Examples
        of these would be the calendar view, the to-do list viewer,
        etc.

      * And of course, the UI's of which would include Emacs modes,
        GTK interfaces, web pages, etc.

      * Use the new twisted.pb to handle the access to this data,
        except in the case of our small, handheld clients which would
        access the middle-end objects directly, due to the hardware
        restraints on these systems.  For access of local data on
        desktop machines, it would just connect to localhost.

      * Anyone volunteer to work on Pippy to get this sort of thing to
        work on the Palm?

      * And, until I get a PDA to run this on, I would like conduits
        to export this data to my Palm.

   Other than that, the implementation is kinda fuzzy right now.  I
   want to get better at designing such things.  Hopefully all of you
   ubercoders can help me figure this out. :)

   Thanks for listening to my ideas!

Nafai
      








From churchr at ghostbitch.org  Wed Jul  4 00:54:01 2001
From: churchr at ghostbitch.org (R. Church)
Date: Tue, 3 Jul 2001 21:54:01 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010703215400.H8168@ghostbitch.org>

You absolutely need to read about the Remembrance Agent. It's a PIM,
in the sense of "personal information", and it uses a Google-style
relavence engine to self-organize documents, to some extent. It also
does searches in the background while you type, so that a buffer at
the bottom of the screen display documents similar to the one you're
currently writing. If you're in class typing notes about the French
Revolution, it will show you a list of other documents you've typed
about the French Revolution. It's very neat, and it's all implemented
in Emacs.

http://rhodes.www.media.mit.edu/people/rhodes/Papers/wear-ra.html

Beyond that, I think you need to take a serious look at Wiki
technology. For me, it's hard to beat Wiki as a PIM platform. It can
take any kind of text. MoinMoin lets me make nice templates for things
like addresses and appointments. It's all searchable. Everything is
hyperlinkable. And, it's suspiciously simple. I think you should
consider incorporating some of these characteristics in your PIM.

On Tue, Jul 03, 2001 at 10:25:28PM -0600, Travis B. Hartwell quipped:
> Hey Twisted gang!
> 
>   Well, since Chris's mention of Twisted.pim in TWN #1, I have began
>   to think a lot about how such a thing would be implemented.  It has
>   been my idea for a while now to implement some sort of tools to
>   accomplish "Personal Information Management," and since glyph and
>   his minions have been trying to drag me into this for a while, I
>   decided to succumb. :)
> 
>   Chris (radix) and I discussed for a while today on IRC some of our
>   ideas for what Twisted.pim would do and how it would be
>   implemented.  Short of boring you with a long log of our
>   conversation, here is a brief summary of some of our ideas.  I
>   submit them here for your review, criticism, praise, and
>   volunteering to help write this! :)
> 
>   What is it?
>       First of all, Twisted.pim should be more than what traditional
>       PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).
>       The main function of those applications is to handle
>       appointments, contacts, and to-do lists -- but all of that
>       separately.  It's almost like they are "Personal Appointment,
>       Things to do, and Contact Managers" instead of a more broad
>       "Personal _Information_ Managers."  Let me illustrate with a
>       couple of examples of what I mean:
> 
>       Example 1:
>         Integration.  Normally, when I have an appointment scheduled,
>         it will involve something I have stored elsewhere -- whether
>         it be contact info for someone, or perhaps an item on my to-do
>         list, or a memo I had made earlier.  With the Palm and other
>         traditional PIM's, it isn't possible to link this information.
>         Wouldn't it be nice to be able to click on an icon, or select
>         an item from a list, from within that appointment view that
>         would take to you the related information?  Or that you could
>         take notes on that particular meeting and those notes show up
>         with your memos and perhaps with your completed to-do item?
> 
>       Example 2:
>         Information management.  I like to take notes on what I'm
>         studying and working on.  Perhaps it is notes on how to
>         complete a particular phase of a project at work.  Or maybe
>         they are notes for a class at school.  Or perhaps it is notes
>         on something new I learned in sys admin stuff.  I would love
>         to be able to store these notes, be able to cross reference
>         them, and sometimes associate them with to-do lists or
>         appointments.  Or store links to information I found on the
>         web or whatever.  So, for example, when I see on a weekly view
>         that I have a test coming up, I could look at that appointment
>         and have a link to my class notes to view them.  So, I am
>         concerned about here more types of data being stored than the
>         usual, yet all of them being able to be related and associated
>         together.
> 
> 
>       I've been doing a lot of reading lately of the works of Stephen
>       R. Covey, specifically "The 7 Habits of Highly Effective People"
>       and "First Things First."  He talks a lot about different
>       generations of tools used is managing and organizing one's time
>       and resources.  Without going into too much detail, I want to be
>       able to use Twisted.pim to center my life on my "mission
>       statement" and goals stemming from that, then be able to manage
>       my life from this.  The linking and different views stemming
>       from my ideas of Twisted.pim are essential for me to do this.
>       
>       Other than going beyond a tradition PIM in what data is stored
>       and how it can be associated it, building this upon Twisted
>       brings up some interesting possibilities.  First of all, my main
>       interest is having ubiquitous access to my data, so this truly
>       will be a useful tool for me.  So, whether it be through an
>       interface to Emacs, a GTK view, a Web interface, or whatever, I
>       want access to the same data and same functionality.
>       Eventually, I would love to get an Agenda or another PDA running
>       Linux and ideally this would run on it as well.  Secondly,
>       because it is built upon Twisted, this leads well to a
>       multi-user type of system.  Almost a groupware type of
>       application.  This leads to questions of authorization and
>       ownership of data items and who has permission to view them.  I
>       will lead the design of such items to people such as glyph who
>       is the "man with the internet."
> 
>       So, basically, in a long nutshell, those are my ideas now of
>       what Twisted.pim should do.
> 
> 
>   How will it be implemented?
>       Here are notes of some of the things radix and I thought.  I'm
>       not too good at design of such systems right now, so this is
>       where I need a lot of help.
> 
>       * Have a base class for all of the data types, that would
>         include shared items such as association info, name, owner,
>         etc.  Example data types descended from this would be
>         appointment, to-do item, memo, etc.
> 
>       * Implement twisted.pim.associator which will provide the
>         support for associating and linking data items together.
> 
>       * 'middle-end' classes which the UI viewers talk to.  Examples
>         of these would be the calendar view, the to-do list viewer,
>         etc.
> 
>       * And of course, the UI's of which would include Emacs modes,
>         GTK interfaces, web pages, etc.
> 
>       * Use the new twisted.pb to handle the access to this data,
>         except in the case of our small, handheld clients which would
>         access the middle-end objects directly, due to the hardware
>         restraints on these systems.  For access of local data on
>         desktop machines, it would just connect to localhost.
> 
>       * Anyone volunteer to work on Pippy to get this sort of thing to
>         work on the Palm?
> 
>       * And, until I get a PDA to run this on, I would like conduits
>         to export this data to my Palm.
> 
>    Other than that, the implementation is kinda fuzzy right now.  I
>    want to get better at designing such things.  Hopefully all of you
>    ubercoders can help me figure this out. :)
> 
>    Thanks for listening to my ideas!
> 
> Nafai
>       
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From acapnotic at twistedmatrix.com  Wed Jul  4 13:43:42 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 4 Jul 2001 10:43:42 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010704104342.B1260@troglodyte.menefee>

On Tue, Jul 03, 2001 at 10:25:28PM -0600, Travis B. Hartwell wrote:
>   What is it?
>       First of all, Twisted.pim should be more than what traditional
>       PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).

Please look at Evolution too.  I'm sure you can find something to not
like about it, but there's been a lot of sweat put into it, so you
should at least be able to learn something from their efforts.

>       Example 1:
>         Integration.

You can't spend too much time thinking about integration before someone
brings up the rather ill-defined idea of "desktop environment".  Now, 
forget I said that phase, because it doesn't mean much.  ;)  I just
raise a few more questions:  What if the resource you are working on is
not an emacs buffer, but an Excel spreadsheet?  Can you incorporate
resources into this system that you, the Twisted.pim designer, did not
anticipate the existance of?  Can other third-party applications make
use of your contact list and schedule things into your calendar -- even
if they're not written in Python?  To what degree does "integratibility"
imply "embedability"?

Now, we all know that since PB is being published under the Twisted
label, it's got to be the greatest thing since spreadable cheese.  But
even so, but I'd sleep better at night if I read a memo comparing its
suitability for "Integration." to the other things that are being used
these days from that pot of ole soap ipc corba orbit bonobo rpc kparts
stew.

>       Example 2:
>         Information management.  

Another good place to look for examples of information management (in
addition to what churchr mentioned) is at Zigzag, Ted Nelson's
brainchild.  There's an implementation now that's at least far along
enough that you can play with it at http://gzigzag.sourceforge.net/ .
I don't feel it's quite to the point where it's ready to take off on its
own, as the applications for it are rather incomplete and the only
chunks of data you can really use in the default interface are one-line
strings, but it's a toy from which you might be able to learn something
about dense bidirectoinal hyperlinking.

>       I've been doing a lot of reading lately of the works of Stephen
>       R. Covey, specifically "The 7 Habits of Highly Effective People"
>       and "First Things First."

Ok, now sir, you are scaring me.  ;)
(Sorry, personal allergy to the ideology of Mr. Covey.  Gives me hives.)

Best wishes,

   - Kevin
  (Acapnotic)




From carmstro at twistedmatrix.com  Wed Jul  4 14:21:42 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 4 Jul 2001 14:21:42 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010704104342.B1260@troglodyte.menefee>
Message-ID: <20010704142142.A6495@Fookidla.org>

On Wed, Jul 04, 2001 at 10:43:42AM -0700, Kevin Turner wrote:
> Please look at Evolution too.  I'm sure you can find something to not
> like about it, but there's been a lot of sweat put into it, so you
> should at least be able to learn something from their efforts.

The biggest problem with Evolution (or anything) is that it's not Twisted 
enough. One small part of the philosophy behind Twisted is reinventing the 
wheel, but to be a rocket-powered wheel (look at all the UNIX services we're
reimplementing).

> You can't spend too much time thinking about integration before someone
> brings up the rather ill-defined idea of "desktop environment".  Now, 
> forget I said that phase, because it doesn't mean much.  ;)  I just
> raise a few more questions:  What if the resource you are working on is
> not an emacs buffer, but an Excel spreadsheet?  Can you incorporate
> resources into this system that you, the Twisted.pim designer, did not
> anticipate the existance of?  Can other third-party applications make

If you want to make a new type of information, make a new subclass of the
base InfoData class. You can also make a new organizer class for it, and 
a new UI. The "integration" he's talking of isn't at the UI level, it's at
the base. In other words, our integration isn't the same integration that
Desktop Environments are going after -- Look&Feel integration. We're going for
data that will be integrated. The associator will be able to associate 
arbitrary InfoDatas to each other.

> use of your contact list and schedule things into your calendar -- even
> if they're not written in Python?  To what degree does "integratibility"
> imply "embedability"?

Sure, as long as there is a PB implementation in that language (on a side note,
dash seems to be getting along with a Lisp implementation of glen. After glen,
there will probably be a PB implementation for Lisp, too). Of course,
accessing the data without going through PB will be harder, but that wouldn't
be Twisted.

> Now, we all know that since PB is being published under the Twisted
> label, it's got to be the greatest thing since spreadable cheese.  But
> even so, but I'd sleep better at night if I read a memo comparing its
> suitability for "Integration." to the other things that are being used
> these days from that pot of ole soap ipc corba orbit bonobo rpc kparts
> stew.

PB has nothing to do with the integration of the PIM. The big integrator
is the imaginary 'associator' module in the PIM package. PB will just serve
as the protocol for remote access to the PIM information, and by remote I
don't just mean connecting to remote hosts - there will be a PIM service running
on your local twisted process, and you connect to that with the PIM clients.


-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Wed Jul  4 19:24:23 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jul 2001 18:24:23 -0500 (CDT)
Subject: [Twisted-Python] after being royalty in spain
Message-ID: <Pine.LNX.4.21.0107041818430.8814-200000@zaibach.twistedmatrix.com>


TDFL pronouncement: we're going with "Twisted" as the name.

I'm renaming and restructuring the CVS repository right now.  Most
everything is moving into packages within twisted.  The new directory
structure is attached.  I'll be importing a "Twisted" CVS module some time
tonight.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph
-------------- next part --------------
Twisted
|-- bin
|   |-- efaucet
|   |-- gnusto
|   |-- gtkfaucet
|   |-- jfaucet
|   |-- malyon
|   |-- mapeditor
|   |-- mkftpserver
|   |-- mkmailserver
|   |-- mkrealityserver
|   |-- mktelnetserver
|   |-- mkwebserver
|   |-- runtests
|   |-- twistd
|   |-- twistd-debug
|   `-- vacuum
|-- credits.py
|-- doc
|   |-- API-CHANGES-0.8.10
|   |-- CodingStandard.html
|   `-- QUICKSTART
|-- license.py
|-- pyunit
|   |-- PyUnit.html
|   |-- __init__.py
|   |-- unittest.py
|   `-- unittestgui.py
|-- readme.py
|-- static
|   |-- five.cgi
|   |-- index.html
|   |-- test.cgi
|   `-- test.epy
|-- twisted
|   |-- __init__.py
|   |-- authenticator.py
|   |-- copyright.py
|   |-- disted
|   |   |-- __init__.py
|   |   |-- banana.py
|   |   |-- jelly.py
|   |   `-- pb.py
|   |-- internet
|   |   |-- __init__.py
|   |   |-- abstract.py
|   |   |-- gtknet.py
|   |   |-- main.py
|   |   |-- process.py
|   |   |-- ssl.py
|   |   |-- stdio.py
|   |   |-- task.py
|   |   `-- tcp.py
|   |-- persisted
|   |   |-- __init__.py
|   |   |-- dirdbm.py
|   |   `-- styles.py
|   |-- pim
|   |   |-- __init__.py
|   |   `-- todo.py
|   |-- protocols
|   |   |-- __init__.py
|   |   |-- basic.py
|   |   |-- ftp.py
|   |   |-- http.py
|   |   |-- irc.py
|   |   |-- pop3.py
|   |   |-- protocol.py
|   |   |-- smtp.py
|   |   `-- telnet.py
|   |-- python
|   |   |-- __init__.py
|   |   |-- delay.py
|   |   |-- explorer.py
|   |   |-- hook.py
|   |   |-- log.py
|   |   |-- observable.py
|   |   |-- ouroboros.py
|   |   |-- reference.py
|   |   |-- reflect.py
|   |   |-- threadable.py
|   |   |-- threadpool.py
|   |   |-- usage.py
|   |   `-- worker.py
|   |-- reality
|   |   |-- __init__.py
|   |   |-- clothing.py
|   |   |-- container.py
|   |   |-- door.py
|   |   |-- error.py
|   |   |-- furniture.py
|   |   |-- geometry.py
|   |   |-- lock.py
|   |   |-- player.py
|   |   |-- plumbing.py
|   |   |-- reality.py
|   |   |-- room.py
|   |   |-- sentence.py
|   |   |-- source.py
|   |   `-- thing.py
|   |-- telnet.py
|   |-- test
|   |   |-- __init__.py
|   |   |-- test_all.py
|   |   |-- test_banana.py
|   |   |-- test_delay.py
|   |   |-- test_dirdbm.py
|   |   |-- test_explorer.py
|   |   |-- test_glen.pyc
|   |   |-- test_hook.py
|   |   |-- test_import.py
|   |   |-- test_jelly.py
|   |   |-- test_observable.py
|   |   |-- test_pb.py
|   |   |-- test_pop3.py
|   |   |-- test_protocols.py
|   |   |-- test_reality.py
|   |   |-- test_reflect.py
|   |   |-- test_sexpy.py
|   |   |-- test_smtp.py
|   |   `-- test_todo.py
|   |-- ui
|   |   |-- ImageServer.py
|   |   |-- __init__.py
|   |   |-- gtkfaucet.py
|   |   |-- jfaucet.py
|   |   |-- text.py
|   |   `-- tkfaucet.py
|   `-- web
|       |-- __init__.py
|       |-- calendar.py
|       |-- distributed.py
|       |-- error.py
|       |-- html.py
|       |-- resource.py
|       |-- script.py
|       |-- server.py
|       |-- static.py
|       |-- test.py
|       |-- todo.py
|       |-- twcgi.py
|       |-- utils.py
|       |-- vhost.py
|       `-- weblog.py
`-- win
    |-- MakeWebServer.pyw
    |-- RunServer.py
    `-- TKFaucet.pyw

16 directories, 131 files

From jh at web.de  Wed Jul  4 20:05:56 2001
From: jh at web.de (Juergen Hermann)
Date: Thu, 05 Jul 2001 02:05:56 +0200
Subject: [Twisted-Python] Look mommy, it's an installer!
Message-ID: <m15HweU-007o5TC@smtp.web.de>



-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 43174 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010705/6bf6bc03/attachment.jpeg 

From acapnotic at twistedmatrix.com  Thu Jul  5 23:16:09 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:16:09 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010705201609.A3233@troglodyte.menefee>

On 07/03/2001, I heard Nafai say *something* like this, err, kinda,
anyway...  Please, do not hesitate to correct me where I have heard
incorrectly.

> Hey Twisted gang!  I have been assimilated into the Twisted
> collective.  radix and I were discussing our ideas for Twisted.pim;
> here's a brief summary.  I submit them for crunchy things to add to
> your breakfast cereal.

> First of all, Twisted.pim should be more than what traditional PIMs
> (i.e. Outlook) offer.  The main function of those applications is to
> handle appointments, contacts, and to-do lists.  It's almost like they
> are applications written to do these things instead of being grand
> universal "_Information_ Manager"s.  Examples:
 
>       Example 1:
>         Integration.  Normally, when I have an appointment scheduled,
>         it will involve something other than the number of seconds
>         elapsed since the dawn of the epoch.  With the Palm and other
>         traditional PIMs, it isn't possible to link this other
>         information to the appointment.  Wouldn't it be nice to have
>         hyperlinks?
 
>       Example 2:
>         Information management.  I take notes.  I would like to store
>         and catalouge these notes, and make references to them from
>         other documents, and vice versa.  To achieve this goal, I
>         believe my application must have knowlodge of any and all
>         types of data I may encounter, for the only way I can be sure
>         I can make inter-document references is to own all the storage
>         formats.

>       Having access to my data from a wide range of platforms is
>       important to me.  I believe Twisted will help me with this, as
>       it lends itself to building resources with multiple interfaces
>       and is funky like that.
>       I believe that Twisted will also facilitate taking this project
>       into a multi-user groupware kind of thang, but as that leads to
>       hairy access control issues, I'll leave that part to someone
>       else with more internet than I.

>       So, basically, in a long nutshell (ehh... macademia?), those are
>       my ideas now of what Twisted.pim should do.

>   How will it be implemented?
>
>   With a cross-platform three-tier client-server arcitecture with
>   internet on top.  Except on systems running on thin computing
>   devices -- we think we'll only be able to fit two tiers in these.

> Thanks for listening to my ideas!
>
>  Nafai

Ok, so here are my issues:

1) Where is the line between PIM (Personal Information Manager) and that
great holy grail of the Information Age, the Universal Information
Manager?  What *doesn't* Twisted.pim do?  


2) What I'm hearing, distilled:

    "We have a project to manage relations between all types of
    documents a person may ever come in contact with.  Since this
    project is self-contained, we will use a private interface to manage
    related information between these documents.  This is okay, since we
    will always be able to manage any amount of information about any
    number of document types from a centeral place -- that is, this
    codebase.
    "In contrast to what's in our internal structure (that is,
    chunks of information with relations between them), there will be
    clients and other information tools for which we will have a
    seperate interface (using PB).  This is a different interface
    because these clients display documents... err, structured
    information...   which is built of relations to the information on
    other documents, which...   uhh, damn, what was the difference
    between this and our other thing again?"

I'm also taking issue with this notion that all sorts of documents will
be handled by the Twisted.pim codebase.  Let me humbly suggest that you
are wrong ;) and that you will not actually sit down and write a class
for everything under the sun.  Even if you did, there's going to be Some
Other Type of document out there, and someone is going to want to write
a third-party module for it, and perhaps I'm just not being Pythonic
enough, but I'm thinking this module is not going into the Twisted.pim
codebase.  

Twisted is ambitious.  Twisted laughs in the face of previous inventors
of the wheel.  But I feel Twisted is also pretty good at being modular
and de-centeralized, so I'm hoping it can realize the limitations of its
resources and leverage this other aspect, leaving a window open for more
resources to be linked in as they become available at a later date.


-- 
The moon is full, %99.95 full. (15.0 days old) phase: 0.506983
Angular diameter as seen from the earth: 0.4973 degrees




From acapnotic at twistedmatrix.com  Thu Jul  5 23:19:02 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:19:02 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010704142142.A6495@Fookidla.org>
Message-ID: <20010705201902.B3233@troglodyte.menefee>

On Wed, Jul 04, 2001 at 02:21:42PM -0400, Chris Armstrong wrote:
> On Wed, Jul 04, 2001 at 10:43:42AM -0700, Kevin Turner wrote:
> > Please look at Evolution too.  I'm sure you can find something to
> > not like about it, but there's been a lot of sweat put into it, so
> > you should at least be able to learn something from their efforts.
>
> The biggest problem with Evolution (or anything) is that it's not
> Twisted enough.

Oh, as I said, I have no doubt that there are problems, from biggest to
littlest.  I was merely suggesting the possibility that they might have
got something *right* too -- and if so, that's good information to have
when you're setting out to achieve something with many of the same
goals.  I don't think it hurts to know what the wheel looks like before
you reinvent it.

> > Now, forget I said that phase, because it doesn't mean much. ;) I
> > just raise a few more questions:  What if the resource you are
> > working on is not an emacs buffer, but an Excel spreadsheet?  Can
> > you incorporate resources into this system that you, the Twisted.pim
> > designer, did not anticipate the existance of?

> If you want to make a new type of information, make a new subclass
> of the base InfoData class. [...] The "integration" he's talking
> of isn't at the UI level, it's at the base. In other words, our
> integration isn't the same integration that Desktop Environments
> are going after -- Look&Feel integration.  We're going for data
> that will be integrated.

This is why I told you to forget I said the "d. e." phrase =)
I think you underestimate miguel's ambition -- Twisted folks aren't the
only ones trying to take over the world. ;)   Having a cohesive
environment does not just mean that the dialog boxes all look similar
and the context-sensitive pop-ups feel the same, you also need to be
able to incorporate the product of one application into another -- e.g.
your plotter into your spreadsheet, your spreadsheet into your marketing
document, your documents into your conferences and presentations.  You
have not convinced me that this is different from your "data
integration".

[ http://www.ximian.com/tech/bonobo.php3           ]
[ The "why corba sucks" flamewar may now commence. ]
[ Feel free to understand a "How little Acap understands things" flame
too ;) ]

> > Now, we all know that since PB is being published under the Twisted
> > label, it's got to be the greatest thing since spreadable cheese.  But
> > even so, but I'd sleep better at night if I read a memo comparing its
> > suitability for "Integration." to [...] corba [etc...].

(The following is me paraphrasing radix, not quite his original words:)
} PB has nothing to do with integration between the PIM components.
} That will be done by our /imaginary/ [emphasis mine ;) ] 'associator'
} module.  PB will just serve as the portocol for [remote] access to the
} information.

See issue my #2 in my other post from today,
<20010705201609.A3233 at troglodyte.menefee>

Cheers,

  - Acapnotic
 (Kevin Turner)





From kevin.m.turner at pobox.com  Thu Jul  5 23:24:18 2001
From: kevin.m.turner at pobox.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:24:18 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010705202418.A3424@troglodyte.menefee>

On Thu, Jul 05, 2001 at 08:19:02PM -0700, I wrote:
> [ Feel free to understand a "How little Acap understands things" flame
> too ;) ]
err, s/understand/include/

oops.




From shortwa at auburn.edu  Thu Jul  5 23:35:50 2001
From: shortwa at auburn.edu (Allen Short)
Date: Thu, 05 Jul 2001 22:35:50 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>
References: <20010704142142.A6495@Fookidla.org>
	<20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010705223550G.washort@ghostwheel.dhis.net>

>>>>> "Acapnotic" == Kevin Turner <acapnotic at twistedmatrix.com> writes:

    > This is why I told you to forget I said the "d. e." phrase =) I
    > think you underestimate miguel's ambition -- Twisted folks
    > aren't the only ones trying to take over the world. ;) Having a
    > cohesive environment does not just mean that the dialog boxes
    > all look similar and the context-sensitive pop-ups feel the
    > same, you also need to be able to incorporate the product of one
    > application into another -- e.g.  your plotter into your
    > spreadsheet, your spreadsheet into your marketing document, your
    > documents into your conferences and presentations.  You have not
    > convinced me that this is different from your "data
    > integration".

    > [ http://www.ximian.com/tech/bonobo.php3 ] [ The "why corba
    > sucks" flamewar may now commence. ] [ Feel free to understand a
    > "How little Acap understands things" flame too ;) ]


Given the constraints of GNOME's environment (i.e. "using C"), I think
ORBit/Bonobo dont suck _too_ badly. At some point in the future (after
at least one rev each of Twisted and GNOME), I think it'd be worth
looking at getting Twisted to handle Bonobo components
intelligently. That'd make a _lot_ of client-side integration stuff
easier -- and incidentally help along twisted.pim. ;)

At this point though, there's not a whole lot we can do with
integration with 'desktop tools' (which _is_ what something of this
scope should do) -- and I dont think writing our own is all that great
of a solution either. So, for now, I think it's worth concentrating on
stuff we can write and use _now_ (and an integrate easily into
existing twisted modules -- the biggest example i'm thinking of now is
a webpage-annotation system a la crit.org, but personal and not
written in horrid perl) rather than do-everything frameworks that
depend on stuff we dont have yet. 

--  
Allen Short             Programmer-Archaeologist             shortwa at auburn.edu
"optimization is hacker crack. " -- Johan Kullstam, comp.lang.lisp




From carmstro at twistedmatrix.com  Fri Jul  6 13:36:06 2001
From: carmstro at twistedmatrix.com (carmstro at twistedmatrix.com)
Date: Fri, 6 Jul 2001 12:36:06 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>; from acapnotic@twistedmatrix.com on Thu, Jul 05, 2001 at 08:19:02PM -0700
References: <20010704142142.A6495@Fookidla.org> <20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010706123606.A322@twistedmatrix.com>

On Thu, Jul 05, 2001 at 08:19:02PM -0700, Kevin Turner wrote:
> This is why I told you to forget I said the "d. e." phrase =)
> I think you underestimate miguel's ambition -- Twisted folks aren't the
> only ones trying to take over the world. ;)   Having a cohesive
> environment does not just mean that the dialog boxes all look similar
> and the context-sensitive pop-ups feel the same, you also need to be
> able to incorporate the product of one application into another -- e.g.
> your plotter into your spreadsheet, your spreadsheet into your marketing
> document, your documents into your conferences and presentations.  You
> have not convinced me that this is different from your "data
> integration".

Well, except that we're not integrating spreadsheets into documents, we're
integrating personal information. (see below)

> > > Now, we all know that since PB is being published under the Twisted
> > > label, it's got to be the greatest thing since spreadable cheese.  But
> > > even so, but I'd sleep better at night if I read a memo comparing its
> > > suitability for "Integration." to [...] corba [etc...].
> 
> (The following is me paraphrasing radix, not quite his original words:)
> } PB has nothing to do with integration between the PIM components.
> } That will be done by our /imaginary/ [emphasis mine ;) ] 'associator'
> } module.  PB will just serve as the portocol for [remote] access to the
> } information.

The associator module will probably be pretty easy to implement. It's just
that Nafai nor I have gotten around to it yet. ;) I put up some preliminary
babblings on the associator on the Wiki page for TwistedPim.

I also think you don't quite understand what we're trying to do here - We're
not trying to integrate "everything under the sun", we're just making it so
the PIM Data we have is highly interconnected. The PIM idea came before the
Associator idea, and it just fits really well. The associator isn't meant to
be the end-all be-all, Twisted is. ;-)

On a side note, we really have to stop using the term "associator module" ;)
The association code will be in the InfoData class itself, and there will
probably be another module that just keeps track of lists of all the different
kinds of InfoData. Not sure what this should be called -- anyway, go read
TwistedPim, I'm babbling =) 




From glyph at twistedmatrix.com  Fri Jul  6 16:42:51 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jul 2001 15:42:51 -0500 (CDT)
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706123606.A322@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107061541250.2070-100000@zaibach.twistedmatrix.com>

On Fri, 6 Jul 2001 carmstro at twistedmatrix.com wrote:

> On a side note, we really have to stop using the term "associator module" ;)
> The association code will be in the InfoData class itself, and there will
> probably be another module that just keeps track of lists of all the different
> kinds of InfoData. Not sure what this should be called -- anyway, go read
> TwistedPim, I'm babbling =) 

I really have completely stopped understanding what you're talking about
here.  When you're talking about associations, is it a relational
database?  That's a fairly heavy degree of complexity, but it's necessary
for some of what you're describing.  The cool thing about Twisted is that
it just uses the "the world is a directed graph" feature of Python to
maintain associations.  I don't see why you need to be more complicated
than that.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From acapnotic at twistedmatrix.com  Fri Jul  6 16:35:16 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 6 Jul 2001 13:35:16 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706123606.A322@twistedmatrix.com>
Message-ID: <20010706133516.A3826@troglodyte.menefee>

On Fri, Jul 06, 2001 at 12:36:06PM -0500, carmstro at twistedmatrix.com wrote:
> I also think you don't quite understand what we're trying to do here - We're
> not trying to integrate "everything under the sun", 

I'm glad I got that across :)  no, I don't quite understand, so I'm
trying to get you to define scope (something Nafai has confessed to
struggling with).  What is "PIM data"?  Which things are "personal
information" that you're managing, as opposed to "apersonal
information"?  You have ToDo entries, grouped in lists, some of which
have times associated with them and thus get called "appointments".
Does that cover it?  Then why didn't you say so?  ;)

-- 
The moon is waning gibbous, %99.15 full. (15.6 days old) phase: 0.529400
Angular diameter as seen from the earth: 0.4949 degrees.




From glyph at twistedmatrix.com  Sat Jul  7 13:56:00 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jul 2001 12:56:00 -0500 (CDT)
Subject: [Twisted-Python] Flag Day
Message-ID: <Pine.LNX.4.21.0107071244150.10428-100000@zaibach.twistedmatrix.com>

On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
like they're on track for that.

This release will, among other things, add a new CVS module (named
Twisted) and completely change how distributed webservers work.  Gloop is
going away completely, to be replaced by pb.  If you are currently running
a twisted server, you'll probably have to rebuild your .spl manually in
order to get it to work with the new webserver.  Since it will be looking
for a different file to discover your distributed web service on, your
current "personal" web services will be unavailable from sunday evening
until you convert them to the new style.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From j.her at t-online.de  Sat Jul  7 14:09:24 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Sat, 07 Jul 2001 20:09:24 +0200
Subject: [Twisted-Python] Flag Day
In-Reply-To: <Pine.LNX.4.21.0107071244150.10428-100000@zaibach.twistedmatrix.com>
Message-ID: <15IwW9-1Gy3nMC@fwd01.sul.t-online.com>

On Sat, 7 Jul 2001 12:56:00 -0500 (CDT), Glyph Lefkowitz wrote:

>On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
>like they're on track for that.

If you want a setup.py for that, you have to act NOW. Is the new CVS
module in place, where is it, ...?
--
Juergen Hermann, Karlsruhe, Germany | IRC: snibril






From carmstro at twistedmatrix.com  Sun Jul  8 01:04:56 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 8 Jul 2001 01:04:56 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <Pine.LNX.4.21.0107061541250.2070-100000@zaibach.twistedmatrix.com>
Message-ID: <20010708010455.A8816@Fookidla.org>

Well, now you're confusing me. :) All I'm thinking of so far is having every
PIM data object have a dict filled with other objects by key. Check out my
sample implementation of InfoData on the wiki.

On Fri, Jul 06, 2001 at 03:42:51PM -0500, Glyph Lefkowitz wrote:
> I really have completely stopped understanding what you're talking about
> here.  When you're talking about associations, is it a relational
> database?  That's a fairly heavy degree of complexity, but it's necessary
> for some of what you're describing.  The cool thing about Twisted is that
> it just uses the "the world is a directed graph" feature of Python to
> maintain associations.  I don't see why you need to be more complicated
> than that.
> 
>                       ______      __   __  _____  _     _
>                      |  ____ |      \_/   |_____] |_____|
>                      |_____| |_____  |    |       |     |
>                      @ t w i s t e d m a t r i x  . c o m
>                      http://twistedmatrix.com/users/glyph
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From carmstro at twistedmatrix.com  Sun Jul  8 01:24:46 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 8 Jul 2001 01:24:46 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706133516.A3826@troglodyte.menefee>
Message-ID: <20010708012446.A8918@Fookidla.org>

On Fri, Jul 06, 2001 at 01:35:16PM -0700, Kevin Turner wrote:
> On Fri, Jul 06, 2001 at 12:36:06PM -0500, carmstro at twistedmatrix.com wrote:
> > I also think you don't quite understand what we're trying to do here - We're
> > not trying to integrate "everything under the sun", 
> 
> I'm glad I got that across :)  no, I don't quite understand, so I'm
> trying to get you to define scope (something Nafai has confessed to
> struggling with).  What is "PIM data"?  Which things are "personal
> information" that you're managing, as opposed to "apersonal
> information"?  You have ToDo entries, grouped in lists, some of which
> have times associated with them and thus get called "appointments".
> Does that cover it?  Then why didn't you say so?  ;)

Well, for instance, something that is *not* personal data is your example
of embedding spreadsheets in documents. Appointments, todo lists, contacts,
and any other data that deals specifically with *you* are personal information.
I think Glyph has also mentioned something about InstanceMessenger somehow
integrating with Twisted Pim, but I don't remember what for.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From carmstro at twistedmatrix.com  Mon Jul  9 00:25:23 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 9 Jul 2001 00:25:23 -0400
Subject: [Twisted-Python] TWN #2!
Message-ID: <20010709002523.A12506@Fookidla.org>

The second issue of Twisted Weekly News is up on the Twisted Matrix
web site. Check it out at http://twistedmatrix.com/pages/twn-2.html.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From jasbahr at twistedmatrix.com  Mon Jul  9 01:38:28 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Mon, 9 Jul 2001 00:38:28 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010708012446.A8918@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMAEHHGPAA.jasbahr@twistedmatrix.com>

Greetings,

Palm's latest desktop app has a new look:

http://www.palm.com/software/desktop/

A Twisted app which could match Palm's level of personal
information organization would be good, one that could
surpass it would be great.

I've used paper-based Franklin Planners, the original
Apple Newton, the Palm III, and currently loving the
Kyocera Palm/cellphone combo unit (with Internet access,
oh yeah).

I spend 80% of my time with the Palm in the Memos
section, 15% in Addresses, 5% in Calendar, and 0%
in Todos.  Not that I don't keep todos, it's just
that the one built into the Palm suite is too limited.
(I keep them in various memo categories.)

When I'm sitting in front of a computer, I have the
Palm desktop app open.  When I get up, I sync and
have the Palm with me.  The Palm bridges data between
computers that I use.  Activity logs, ideas, project
meta-information, notes, web links are all there,
part of the seamless information space formed between
the desktop apps and the portable device.  From this
perspective, the device is far less important than the
information space, it can be seen as merely one view
into that space.

In addition to the basic Palm apps, I use a piece
of software called 'Secret!', which has a Palm-hosted
app, a desktop-front end, and a conduit to connect
the two.  It acts as a (simple) memo app, but it
encrypts that data for true privacy:

http://linkesoft.com/english/secret/

Strong encryption is a requirement for any personal
information application.

Also, there's some really interesting functionality
being developed by the oddly named folks, Llama
Graphics:

http://www.llamagraphics.com/

Their app is called "Life Balance", which claims to be
"the first personal productivity application designed to help Palm users go
beyond conventional planning systems to not only manage their time but to
achieve balance between the often conflicting demands of career and personal
life."

They don't have the desktop front-end ready, but will
RSN.  When they do, it will probably be a tool worth
evaluating.

There are still good ideas to extract from the Franklin
Planner people, especially their diverse set of forms
for various specialized purposes.  Hmm... Checking the
site now, they have a new app called 'One Place' which
does some interesting indexing and cross-referencing
of your hard drive and documents, behold the intensely
cheesy demo:

http://www.franklincovey.com/oneplace/demo.html

Jason







From glyph at twistedmatrix.com  Mon Jul  9 01:44:48 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jul 2001 00:44:48 -0500 (CDT)
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <EIEFLCFECLLBKGPNJJIMAEHHGPAA.jasbahr@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107090040050.31874-100000@zaibach.twistedmatrix.com>

On Mon, 9 Jul 2001, Jason L. Asbahr wrote:

> I spend 80% of my time with the Palm in the Memos section, 15% in
> Addresses, 5% in Calendar, and 0% in Todos.  Not that I don't keep
> todos, it's just that the one built into the Palm suite is too
> limited. (I keep them in various memo categories.)

  [snip]

In case that whole schpiel didn't speak for itself, I have to say that I
consider Jason somewhat of a domain expert in the PIM space :).  
Whoever's writing code for this PIM thing, I strongly suggest you pick his
brain (or better yet -- somehow trick him into writing code! ^_^).  I
would like to at least avoid making the *same* design mistakes previous
platforms have made.

I do think it's interesting to note that arguably the most useful app on
the Palm is the memo pad; I think that the semantics of memos are almost
completely isomorphic to a directory structure.  Is there anything else
that they do which I don't know about?




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Mon Jul  9 02:10:48 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jul 2001 01:10:48 -0500 (CDT)
Subject: [Twisted-Python] Flag Day
In-Reply-To: <15IwW9-1Gy3nMC@fwd01.sul.t-online.com>
Message-ID: <Pine.LNX.4.21.0107090108590.352-100000@zaibach.twistedmatrix.com>

There is a new CVS repository now, module "Twisted".  I don't expect to
have a setup.py for this version, but thanks for your efforts so far!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Sat, 7 Jul 2001, Juergen Hermann wrote:

> On Sat, 7 Jul 2001 12:56:00 -0500 (CDT), Glyph Lefkowitz wrote:
> 
> >On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
> >like they're on track for that.
> 
> If you want a setup.py for that, you have to act NOW. Is the new CVS
> module in place, where is it, ...?
> --
> Juergen Hermann, Karlsruhe, Germany | IRC: snibril
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From jasbahr at twistedmatrix.com  Mon Jul  9 21:00:14 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Mon, 9 Jul 2001 20:00:14 -0500
Subject: [Twisted-Python] OpenCyc
In-Reply-To: <Pine.LNX.4.21.0107090108590.352-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMCEIIGPAA.jasbahr@twistedmatrix.com>

Folks,

I had an excellent -- and long -- meeting today with the 
people behind the OpenCyc effort at Cycorp.  I'm very
interested in using knowledge bases like Cyc to advance 
the state of the art of massively multiplayer virtual 
worlds.  I believe that the next wave of MMPVR will employ 
knowledge bases to capture game abstractions, rules, 
and semantics.  The Cyc folks are very interested in 
helping with that effort.  

Naturally, integrating Cyc with Twisted seems like the 
right way to pursue this.  :-)  

Y'all probably read the article that was posted on Slashdot
awhile back, but here it is again:

www.latimes.com/business/cutting/lat_cyc010621.htm

and the main sites:

http://www.cyc.com
http://www.opencyc.org

The Cycorp folks are going to develop a Python interface
to Cyc, and we'll be getting access to early releases of
OpenCyc here shortly.  I'd like whoever is interested in
this to read over the docs when they become available, and
to be prepared to submit feedback to the OpenCyc folks to
help them make the docs as useful as possible.

Cheers,

Jason





From carmstro at twistedmatrix.com  Tue Jul 10 00:06:56 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 10 Jul 2001 00:06:56 -0400
Subject: [Twisted-Python] OpenCyc
In-Reply-To: <EIEFLCFECLLBKGPNJJIMCEIIGPAA.jasbahr@twistedmatrix.com>
Message-ID: <20010710000656.A13251@Fookidla.org>

Ok, I'm very excited about this, but i'm just curious as to what examples
you might have come up with specifically for MM games. Mainly an AI thing
or an ontology engine, or both? By "ontology engine" I mean some kind of
system that will cause things to happen in the universe that lead to some
goal. Kinda like logic programming, I guess.

After thinking of this, I was reminded of an RPG project I read about
a while ago - Totality (http://sourceforge.net/projects/totality/). It's
got this "Conflict Generator" that really strikes me as something that
would work well with something like OpenCyc (even though I have no clue
as to what OpenCyc is or how it works ;)). Check out the docs section
for totality and read about the conflict generator. very interesting stuff.

Sorry for the brambling message, I need to get to sleep.

On Mon, Jul 09, 2001 at 08:00:14PM -0500, Jason L. Asbahr wrote:
> Folks,
> 
> I had an excellent -- and long -- meeting today with the 
> people behind the OpenCyc effort at Cycorp.  I'm very
> interested in using knowledge bases like Cyc to advance 
> the state of the art of massively multiplayer virtual 
> worlds.  I believe that the next wave of MMPVR will employ 
> knowledge bases to capture game abstractions, rules, 
> and semantics.  The Cyc folks are very interested in 
> helping with that effort.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Tue Jul 10 08:41:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 10 Jul 2001 07:41:56 -0500 (CDT)
Subject: [Twisted-Python] Is everything speeding up, or am I slowing down?
Message-ID: <Pine.LNX.4.21.0107100713550.16442-100000@zaibach.twistedmatrix.com>

Twisted version 0.9.0 is available, and the main TwistedMatrix.com website
is running it!

This release drops "Python" from the project's name; this will hopefully
reduce confusion, and underscore the fact that we hope Twisted to be a
cross-language environment.

This release is bringing some cool functionality to Twisted.  Perspective
Broker is the culmination of my research and experimentation with RPC
protocols.  For those of you who remember it, this includes the original
'faucet' protocol, the obscure "V3" protocol, and both incarnations of
Gloop; my extensive experiences with RMI, a bit of tinkering with XMLRPC,
and my confusion at the sprawling standards base that is CORBA...

I believe that PB will be a foundation for much of what makes Twisted
really interesting in the coming releases.  This evaluation is borne out
by the fact that Allen has found it sufficiently interesting that he's
already (before the release!) ported the encoding layer (banana) to 2
other languages!  This is the first step towards cross-language
compatibility.

In other news, I am now with a company called Ninjaneering, where I may be
leveraging some of the technology that we've built with Twisted.  Have no
fear, though!  The Ninjas are very cool folks; the code will remain under
my copyright control, and therefore released as LGPL.  Some of you may
recognize a fellow Ninjaneer, Sean Riley, the author of PyUI, in the
CREDITS for this release.  I am *very* glad I managed to rope Sean into
helping me out with this code ;)

I would like to put out a call for documentation at this point -- if any
one of you out there knows enough to write a Twisted tutorial, or even a
part of one, please do so :).  The old "Philosophical Tutorial" has fallen
seriously out of date as of this release and so it's been taken off the
web.  Even if you can't write a tutorial, simple patches correcting or
adding docstrings would be greatly appreciated; I'd like the documentation
to be clear, consistent, and concise, and right now it's somewhat of a
mess and I find I don't have enough time to work on it.

That's all for this release.  Thanks for tuning in.






From j.her at t-online.de  Wed Jul 11 03:08:03 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Wed, 11 Jul 2001 09:08:03 +0200
Subject: [Twisted-Python] Traceback
Message-ID: <15KE6T-24WABkC@fwd02.sul.t-online.com>

10/Jul/2001 20:07 CDT [-]: Traceback (most recent call last):
10/Jul/2001 20:07 CDT [-]:   File
"/home/jh/lib/python/twisted/internet/main.py", line 163, in doSelect
10/Jul/2001 20:07 CDT [-]:     why = getattr(selectable, method)()
10/Jul/2001 20:07 CDT [-]:   File
"/home/jh/lib/python/twisted/internet/process.py", line 220, in doWrite
10/Jul/2001 20:07 CDT [-]:     return CONNECTION_DONE
10/Jul/2001 20:07 CDT [-]: NameError: There is no variable named
'CONNECTION_DONE'                                             





From glyph at twistedmatrix.com  Wed Jul 11 16:49:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jul 2001 15:49:50 -0500 (CDT)
Subject: [Twisted-Python] Traceback
In-Reply-To: <15KE6T-24WABkC@fwd02.sul.t-online.com>
Message-ID: <Pine.LNX.4.21.0107111549310.32275-100000@zaibach.twistedmatrix.com>

I think this should be fixed in the current CVS...

On Wed, 11 Jul 2001, Juergen Hermann wrote:

> 10/Jul/2001 20:07 CDT [-]: Traceback (most recent call last):
> 10/Jul/2001 20:07 CDT [-]:   File
> "/home/jh/lib/python/twisted/internet/main.py", line 163, in doSelect
> 10/Jul/2001 20:07 CDT [-]:     why = getattr(selectable, method)()
> 10/Jul/2001 20:07 CDT [-]:   File
> "/home/jh/lib/python/twisted/internet/process.py", line 220, in doWrite
> 10/Jul/2001 20:07 CDT [-]:     return CONNECTION_DONE
> 10/Jul/2001 20:07 CDT [-]: NameError: There is no variable named
> 'CONNECTION_DONE'                                             


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From carmstro at twistedmatrix.com  Fri Jul 13 13:41:26 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Fri, 13 Jul 2001 12:41:26 -0500
Subject: [Twisted-Python] bugs
Message-ID: <20010713124126.A2848@twistedmatrix.com>

Ok, i've found the following bugs while figuring out why my personal
webserver is not working.

1) in daemon mode, twistd is closing oldstdout, which later is needed if
an exception is raised. (there's a traceback print on oldstdout)

2) skt.bind() in twisted/internet/tcp.py will fail if ~/.twisted-web-pb exists.
I guess when the server is shut down it should delete this file.

3) Something else, after working around these two bugs, is preventing the
personal webservers to work.




From jasbahr at onebox.com  Fri Jul 13 15:34:54 2001
From: jasbahr at onebox.com (Jason Asbahr)
Date: Fri, 13 Jul 2001 14:34:54 -0500
Subject: [Twisted-Python] Ontology Links from the OpenCyc List
Message-ID: <20010713193454.NXNX3258.mta06.onebox.com@onebox.com>

Background material for your reading pleasure:

"
A complete list of ontology related web links is http://www.cs.utexas.edu/users/mfkb/related.html


The OpenCyc ontology is a an update and amplification of the Cyc Upper
Ontology whose tutorial is http://www.cyc.com/cyc-2-1/intro-public.html

"

J







From glyph at twistedmatrix.com  Fri Jul 13 15:36:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jul 2001 14:36:24 -0500 (CDT)
Subject: [Twisted-Python] bugs
In-Reply-To: <20010713124126.A2848@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107131433300.10423-100000@zaibach.twistedmatrix.com>

On Fri, 13 Jul 2001, Chris Armstrong wrote:

> 1) in daemon mode, twistd is closing oldstdout, which later is needed if
> an exception is raised. (there's a traceback print on oldstdout)

This is debugging info which at worst will make nothing happen and at
best will help us debug obscure problems with logging :)

> 2) skt.bind() in twisted/internet/tcp.py will fail if
> ~/.twisted-web-pb exists. I guess when the server is shut down it
> should delete this file.

It does, if it shuts down cleanly.  And that's not really a file, it's a
socket; closing it removes the "file".

> 3) Something else, after working around these two bugs, is preventing the
> personal webservers to work.

I believe you should be able to manually change the permissions on your
~/.twisted-web-pb socket to 777; this is necessary for the www-data user
to be able to open/read from/write to it.  This isn't *really* a bug; I
suppose that it should automatically set your umask when binding a unix
socket; I confess that I don't quite understand why this is happening,
since it seemed to work before and I never had any umask-tweaking code, to
my knowledge.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From jasbahr at twistedmatrix.com  Fri Jul 13 19:41:28 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Fri, 13 Jul 2001 18:41:28 -0500
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <Pine.LNX.4.21.0107111549310.32275-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMEEMMGPAA.jasbahr@twistedmatrix.com>

Random thought of the day:

Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
views onto my the data that I'm carrying around.  One Palm Desktop
window into the data is restrictive.  

J








From carmstro at twistedmatrix.com  Sat Jul 14 11:36:03 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sat, 14 Jul 2001 11:36:03 -0400
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <EIEFLCFECLLBKGPNJJIMEEMMGPAA.jasbahr@twistedmatrix.com>
Message-ID: <20010714113602.A18216@Fookidla.org>

On Fri, Jul 13, 2001 at 06:41:28PM -0500, Jason L. Asbahr wrote:
> Random thought of the day:
> 
> Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
> views onto my the data that I'm carrying around.  One Palm Desktop
> window into the data is restrictive.  
> 
> J

Ok, first off, what's SIS?

If you're talking about TwistedPim, then we do plan on having multiple GUIs
for whatever pim interfaces you want (web, Palm, GTK+..).
*Are* you talking about TwistedPim?

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From jasbahr at twistedmatrix.com  Sat Jul 14 12:29:48 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Sat, 14 Jul 2001 11:29:48 -0500
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <20010714113602.A18216@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMGENDGPAA.jasbahr@twistedmatrix.com>

Chris, 

It's in the subject line.  :-)  S.I.S. is just my way of 
referring to that data I carry around in the Palm and access 
with the Palm Desktop, which could someday in the future be 
replaced by some set of objects running in Twisted, including 
Twisted PIM.  "Seamless information space" describes an
experience of relating to the data, as not having the data 
be *a* file on *that* computer, but as an integrated set of
data that you can access anywhere, even if you are offline
(like on the Palm).

To clarify my previous statement, I meant that it would be 
cool to have multiple _simultaneous_ views into the same 
information space, which being client-server, shouldn't
be a problem, right?  It could be multiple web browsers,
I suppose, or multiple GTK+ clients.  

An example of that idea in the Palm Desktop case would be
to have two or more instances of Desktop visible, each 
displaying different categories of data, so you can work
in different data contexts without flipping back and forth.

Roughly, the virtual equivalent of having several books
open on your desk to just the right spot in each.

The Palm Desktop currently isn't designed to let you do
that, and that limitation can be frustrating.

How is TwistedPim coming along?

J  


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Chris
Armstrong
Sent: Saturday, July 14, 2001 10:36 AM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Seamless Information Space


On Fri, Jul 13, 2001 at 06:41:28PM -0500, Jason L. Asbahr wrote:
> Random thought of the day:
> 
> Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
> views onto my the data that I'm carrying around.  One Palm Desktop
> window into the data is restrictive.  
> 
> J

Ok, first off, what's SIS?

If you're talking about TwistedPim, then we do plan on having multiple GUIs
for whatever pim interfaces you want (web, Palm, GTK+..).
*Are* you talking about TwistedPim?

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From z3p at MailAndNews.com  Sat Jul 14 18:27:14 2001
From: z3p at MailAndNews.com (z3p)
Date: Sat, 14 Jul 2001 18:27:14 -0400
Subject: [Twisted-Python] twisted.protcols.toc
Message-ID: <3B61F539@MailAndNews.com>

I've been talking about this in #python for a while, and I finally got around 
to doing it.  It works as a TOC server, but only implements IM and the buddy 
list right now.  It doesn't authenticate to the big AIM server, but there is a 
function (TOC.authenticate()) that gets called to check if the user can log in 
with the username and password given.  No client in the file yet, I'm going to 
finish all the server options first, and then do the client.

URL: http://www.z3p.f2s.com/download/code/twisted/toc.py
Drop it in twisted/protocols, and creating mktocserver was easy, just stole it 
from mkircserver.

-z

---------------------
(o_       z3p at z3p.org
//\       www.z3p.org
V_/_

"All animals are equal, but some are more equal than others." - Animal Farm, George Orwell





From glyph at twistedmatrix.com  Mon Jul 16 17:18:43 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jul 2001 16:18:43 -0500 (CDT)
Subject: [Twisted-Python] twisted.protcols.toc
In-Reply-To: <3B61F539@MailAndNews.com>
Message-ID: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>

On Sat, 14 Jul 2001, z3p wrote:

> I've been talking about this in #python for a while, and I finally got around 
> to doing it.  It works as a TOC server, but only implements IM and the buddy 
> list right now.  It doesn't authenticate to the big AIM server, but there is a 
> function (TOC.authenticate()) that gets called to check if the user can log in 
> with the username and password given.  No client in the file yet, I'm going to 
> finish all the server options first, and then do the client.
> 
> URL: http://www.z3p.f2s.com/download/code/twisted/toc.py
> Drop it in twisted/protocols, and creating mktocserver was easy, just stole it 
> from mkircserver.

Wow, this is pretty cool!

I'm not too familiar with TOC; is it a distributed protocol, where you can
actually have TOC subservers authenticating with the main TOC server?  

I'm not sure I've got a use for this program yet, but it's fun to know we
have it :)


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From z3p at mailandnews.com  Mon Jul 16 21:42:32 2001
From: z3p at mailandnews.com (z3p)
Date: Mon, 16 Jul 2001 21:42:32 -0400
Subject: [Twisted-Python] twisted.protcols.toc
In-Reply-To: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>
Message-ID: <20010716214231.A866@mailandnews.com>

On Mon, Jul 16, 2001 at 04:18:43PM -0500, Glyph Lefkowitz wrote:
> Wow, this is pretty cool!
> 
> I'm not too familiar with TOC; is it a distributed protocol, where you can
> actually have TOC subservers authenticating with the main TOC server?  

To the best of my knowledge, the main TOC server doesn't do this.  However, I'm fairly sure that the twisted version could be made to.

> I'm not sure I've got a use for this program yet, but it's fun to know we
> have it :)

Also, a newer version is online (http://www.z3p.f2s.com/download/code/twisted/toc.py) along with a unittest for it (http://www.z3p.f2s.com/download/code/twisted/test_toc.py).  I'll probably get around to starting the client later tonight or tommorow.

-p

-- 
(o_	http://www.z3p.f2s.com/
//\     z3p at mailandnews.com
U_/_    AIM: z3penguin

GPG print: 353A 4103 FFDD A6A2 85CE  06D5 6F48 D823 BDD9 A668 
Key ID: 0xBDD9A668
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20010716/f8b7b822/attachment.pgp 

From carmstro at twistedmatrix.com  Tue Jul 17 18:54:49 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 17 Jul 2001 18:54:49 -0400
Subject: [Twisted-Python] TWN #3!
Message-ID: <20010717185449.A2414@Fookidla.org>

The Twisted Weekly News
=======================

3rd Issue. Monday, July 16, 2001
QOTW:

  <lyn:#lisp> making things fast generally seems to involve trading space for
  time
  <dan`b:#lisp> not so!  you're thinking like a typical lisp programer
  <dan`b:#lisp> you can also trade correctness, like any self-respecting C
  hacker


Welcome to the 3rd issue of the Twisted Weekly News! This issue was slightly
late due to the absent-mindedness and exhaustion of the author.

= Progress =

There have been a few interesting developments this week.

* Twisted 0.9.0: The latest version[1] of Twisted was released early last week!
  congrats to Glyph for doing a *huge* refactoring on the Twisted directory
  hierarchy for this release.
* Twisted IRC: An implementation of a Twisted IRC server slipped between the
  cracks this week, with not very much fanfare. I tested it out, and I could
  log on with x-chat and do some basic IRC things. Very cool!
* The Twisted Philosophy FAQ: Chris Armstrong wrote the Twisted Philosophy 
  FAQ[2] this week. Glyph gave a word of approval on the FAQ and made Chris 
  a very happy boy. ;-)
* Twisted banana ports: Allen Short, in a cloud of smoke, ported[3] banana to
  Mozart/Oz and Common Lisp. This is finally opening up Twisted to be a cross-
  language standard.


= Mailling List Activity =

There's been some interesting activity this week. Here's a summary.

* Is everything speeding up, or am I slowing down?: Glyph posted[4] one of his
  signature long, revealing posts about what's been going on in his life and
  the life of Twisted. He revealed that he is with a company named
  Ninjaneering, and may be using Twisted there in his job. He also said that
  they agreed to leaving the copyright in his name, so us Twisted folks don't
  have to worry about those corporate bastards. ;-) Finally, he requested that
  the Twisted developers start concentrating more on documentation. Twisted is
  coming more into the public eye, and we need to look good.
* Seamless Information Space: Jason Asbahr had a few comments[5] on some
  philosophical[6] ideas behind information management.
* OpenCyc: Jason Asbahr posted[7] about a meeting he had with some of the people
  involved in the OpenCyc[8] project, and what it boils down to is that he wants
  to integrate OpenCyc with Twisted. This would lead to some interesting
  developments, especially for Reality. Chris Armstrong replied[9] with a 
  pointer to another project with interesting Ontological goals that has 
  produced a few papers on ontology in online games.
* twisted.protcols.toc: It seems z3p has been developing a TOC protocol
  implementation for Twisted behind our backs! TOC is one of the protocols that
  the AOL Instant Messenger uses. This is the Cool Thing of the Week, so see
  below for more information.


= Cool Thing Of the Week: =
Twisted TOC

z3p, who usually hangs out on #python at ircnet, has been development a TOC
protocol implementation for Twisted. This is a very interesting and exciting
development. The server portion of the protocol is functional, and after he
irons out some of the issues with that, he'll implement the client part. The
client is of special interest to a few of us Twisted folks, as it will probably
be useful for AIM connectivity through Instance Messenger. The code is
available here[10] (That module belongs in the twisted/protocols directory) and a
unit test here[11] (which goes in twisted/test).

A round of applause for z3p for this unexpected and appreciated contribution!
Ok, that's it for this week. Thanks for reading!

Chris Armstrong[12]

References
[1] http://www.twistedmatrix.com/downloads/Twisted-0.9.0.tar.gz
[2] http://www.twistedmatrix.com/page.epy/twistedphil.html
[3] http://www.twistedmatrix.com/users/washort/
[4] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000123.html
[5] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000129.html
[6] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000131.html
[7] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000121.html
[8] http://www.opencyc.org
[9] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000122.html
[10] http://www.z3p.f2s.com/download/code/twisted/toc.py
[11] http://www.z3p.f2s.com/download/code/twisted/test_toc.py
[12] carmstro at twistedmatrix.com

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Thu Jul 19 05:52:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jul 2001 04:52:11 -0500 (CDT)
Subject: [Twisted-Python] ANN: I am the end of all your dreams.
Message-ID: <Pine.LNX.4.21.0107190340500.12032-100000@zaibach.twistedmatrix.com>

DARKNESS AT THE END OF TIME (AP): The increasingly infamous "Twisted"
internet infrastructure suite from Twisted Matrix Laboratories got another
revision today, at version 0.9.1.  During a routine rearranging of the
web-site in preparation for the release, the software's much touted
"ability to destroy the sun" was accidentally triggered, causing the star
at the center of our solar system to implode violently and extinguish
itself.  Prepared for just such an eventuality, Chris Armstrong -- a
spokesperson for Twisted Matrix -- announced that the "enterprise edition"
of Twisted-0.9.2 will "come packaged with three free `ability to restore
the sun' support incidents, for the modest price of 3 quintillion standard
galactic credits".

While many were quick to cast the solar vandals in a poor light, a
little-known, but influential, political group, the "Pittsburgh Society of
Underwriters", promptly made a public statement in Twisted's defense; that
"far graver threats to freedom and whitespace exist than those within our
small planetary orbit".  A spokesperson for the group, identified only as
"Tim"  said at a press conference (in a twangy, metallic voice), "Space
holds a terrible power".

Chief Reality Engineer Allen Short could not be reached for comment, but
sources close to the Matrix claim he was off-planet, visiting Hornclausica
IV, the enigmatic homeworld of Prolog programmers.

----

This release contains a few bugfixes for twisted.spread, a more stable
spreadable webserver, an actually functional IRC server.  Additionally the
tm.com website has been reorganized slightly (finally pythonic.org has a
different frontpage... ^_^).

I'd like to ask that anybody looking for something fun to do with twisted
start trying to break pb, especially its security.  I'm curious how it
will hold up to a real focused onslaught.

Until next time...


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From carmstro at twistedmatrix.com  Mon Jul 23 21:42:55 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 23 Jul 2001 21:42:55 -0400
Subject: [Twisted-Python] TWN #4!
Message-ID: <20010723214255.A1030@Fookidla.org>

The Twisted Weekly News
=======================

4th Issue. Monday, July 23, 2001
QOTW:

  <radix> scripts are just usually short programs that do a very specific thing
  <radix> that's why a lot of us people who use interpreted languages hate it
  when someone calls our language a "Scripting language" ;)
  <radix> (I mean, look at Twisted and call it a "script" with a straight face)

Welcome to the 4th issue of the Twisted Weekly News! This issue sees a new
format similar to Debian weekly news, where the editor just babbles on in
paragraph format.

Progress this week consists mainly of new Twisted releases -- there were three
patch-level releases in a period of 3 days. Other than that, not much has been
going on (which is why this TWN is so short).

* Twisted 0.9.1: This release saw some important bugfixes to the distributed
  web server, and the IRC implementation was introduced. Benjamin Bruheim also
  contributed an 'edna' derivative.
* Twisted 0.9.2: This one had some nifty feature improvements. Glyph completely
  remade gtknet from scratch, with a more robust design. It is now called
  inGTKernet. He also made logging nicer, and reintroduced the gtk faucet and
  updated reality for PB. The most interesting thing for this release, though,
  was probably twisted.python.rebuild, which raises the potential of how
  dynamic Twisted can be. Basically, it's an automatic reload() interface, but
  oh so much more. :-)
* Twisted 0.9.3: This saw a few bug fixes, as well as a parallel of inGTKernet
  for Tk, called tkinternet. The AOL TOC protocol implementation was officially
  brought into Twisted, and the debian package information was brought up-to-
  date.

Cool Thing of the Week:
twisted.python.rebuild

Glyph wrote twisted.python.rebuild this week, and it's a very cool module
indeed. It really opens up some possibilities for making Twisted super-dynamic.
Basically it's a wrapper around reload that you mixin with your classes, and it
allows updating the old code on the fly when you make modifications. I've
always found Twisted incredibly cool *because* of it's dynamic nature, and this
will help make it even more dynamic. Thanks Glyph!

Ok, that's it for this week. Thanks for reading!
Chris Armstrong <carmstro at twistedmatrix.com>

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From acapnotic at twistedmatrix.com  Tue Jul 24 00:29:23 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 23 Jul 2001 21:29:23 -0700
Subject: [Twisted-Python] tcp.Port
Message-ID: <20010723212923.A3357@troglodyte.menefee>

it doesn't bother anyone else that you deal with unix sockets through
something named "tcp.Port"?  "TCP" has quite a specific meaning, after
all, and unix sockets are neither dependant on nor a subset of
TCPness...  

My first impulse would be to rename the tcp module to 'socket', but
that would probably b0rk stuff horribly due to collisions with the
standard 'socket' module.

-- 
"The naming of hosts is a serious matter,
 not just one of your holiday games..."
   -- RFC 2100, "The Naming of Hosts"




From glyph at twistedmatrix.com  Tue Jul 24 06:19:55 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jul 2001 05:19:55 -0500 (CDT)
Subject: [Twisted-Python] tcp.Port
In-Reply-To: <20010723212923.A3357@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0107240508210.18966-100000@zaibach.twistedmatrix.com>

On Mon, 23 Jul 2001, Kevin Turner wrote:

> it doesn't bother anyone else that you deal with unix sockets through
> something named "tcp.Port"?

Given that nobody answered your message, I'm going to guess "no" :)

> "TCP" has quite a specific meaning, after all, and unix sockets are
> neither dependant on nor a subset of TCPness...

UNIX sockets have the same semantics as TCP sockets; unlike, say, UDP
sockets.  I think that it makes sense to group them together, especially
since UNIX sockets are effectively an 'extension' to TCP sockets that's
only available on UNIX os's.

> My first impulse would be to rename the tcp module to 'socket', but
> that would probably b0rk stuff horribly due to collisions with the
> standard 'socket' module.

Indeed it would.  As I mentioned, the choice of naming was for the
semantics of TCP.  I suppose I could have called the module
'twisted.internet.streamed_ordered_garuanteed_delivery', but 'tcp' seems
more succinct :).


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Sat Jul 28 15:26:08 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 28 Jul 2001 12:26:08 -0700
Subject: [Twisted-Python] Configuration, Persistance and Version Control
Message-ID: <20010728122608.A1933@troglodyte.menefee>

So, Tv and itamar were on channel today, asking about Twisted
philosophy, persistance, and configurability.  Lacking the
presence of anyone closer to the pure Twisted light, I tried
to be a good little minion and make the case...  But since
I'm the guy who doesn't quite believe in .spl files, I wasn't
able to be terribly convincing.

And now I could try to play his side of the argument with you guys,
but ya know, it'd be so much easier for me to just let his words do
the talking.  Scrollback excerpts:

<itamar|home> anyone who knows how twisted's config mechanism works?
<itamar|home> typically, glyph is on 24 hours a day unless I
          actually want to talk to a twisted developer
<Acapnotic> Wait, Twisted has a config mechanism?
<itamar|home> well, its server are persistent
<Acapnotic> right
<itamar|home> you coifgure them and then can pickle them to disk
<Acapnotic> right
<itamar|home> my question is: how do I configure them?
<itamar|home> can this mechanism be used with other software
          packages?
<Acapnotic> You load them up, set them, and re-pickle them.  You
          can also set them through the interactive python interface on the
          telnet server, say
<Acapnotic> Now somehow, Glyph claims that this is easier than
          having configuration files.
<Acapnotic> I am not yet convinced of that, however.
<itamar|home> I am
<itamar|home> my software right now needs either something like
          that or an XML config file
<itamar|home> which'll end up being a pickle equivalent anyway, so
          there's no point

[...]

<Acapnotic> itamar: Well, so far as I've been able to tell, there's
          not overmuch magic there.  'mkfooserver' just creates an instance
          of a server object and pickle.dumps it, twistd just pickle.loads it
          and invokes its the run() method.
<itamar|home> Acapnotic: well, my configs are pretty complex
<Tv> Acapnotic: But all that does is make your "config settings"
          into "command line settings".
<Tv> I don't see it making things very easy.
<Tv> And think about version upgrades.

[...]

<Tv> I see trouble with the approach; mostly losing the unix
          ubiquitousness (sp?). I can grep my config files; I store them in
          CVS.
<Tv> DavidC_: You want every program to contain some UI or command
          mechanism to fully configure it.
<Tv> There's a lot of things I'd wish someone would spell out about
          twisted. One thing is "how do I version control my configuration?"
<Tv> And don't give a trivial example..
<Tv> I have multi-hundred-line config files here.
<Tv> Shared between n hosts, via CVS.
<Tv> I'd love to hear more of the twisted philosophy..

[...]

<Tv> Personally, I have _needed_ programmability in config files
          many times.

[...]

<Tv> Acapnotic: Oh, I like version control. I wish I could put more
          things into it.
<Tv> Have you ever screwed up a config file?
<Tv> Have you ever downgraded something, and found out it won't
          understand the new config file, and had to recreate the config to
          match the older version?
<Tv> The same reasons you version control source code.

<Acapnotic> tv: you should post to the list at
          twisted-python at twistedmatrix.com
<Tv> Acapnotic: I'm not following any more lists until I have
          migrated my mail to another domain :)
<Acapnotic> tv: bah, you don't have to follow it, just post ;)

[...]

<Acapnotic> Tv: so if you want programmable config, is there a
          problem with just using python?  In which case your configuration
          process is a script that does "app = pickle.load(...) app['web'].
          port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app, 
          ...) ?
<Tv> Acapnotic: That may very well be what I'd do. But then the
          mechanism needs to support _both_ getting config programmatically
          and state from pickle, at the same time.
<Acapnotic> Well, if I follow this train, there is only the state
          of the application, since it is persistant.  That state may be
          changed or examined programmaticly.
<Tv> I see something beautiful there, but..
<Tv> noone has yet explained persistence to me well enough to
          convince me.
<Acapnotic> but what happens when you upgrade?  heh.
<Tv> What if a buggy program corrupts its state?
<Tv> Then you lose your config file also.
<Tv> There needs to be something else.
<Tv> Something that is less volatile.
<DavidC_> what do you mean? both config and state are the same
          thing.
<Tv> No.
<Tv> config changes when *I* say it changes.
<itamar|home> nah, config is parsed and then "rendered" into state
<Tv> program can change it's state as it wants.
<Tv> Any bug in program must never change the port to bind to.
<Tv> :)
<Tv> I see config as sort of a factory for initial program states,
          if you want to put it that way.
<itamar|home> lets say by mistake someone does "del serverInstace.
          port"
<itamar|home> and then shuts down the server
<itamar|home> the pickled state is now wrong
<DavidC_> well that would be a bug.
<itamar|home> the point is that if you have an external, version
          controleld config file
<itamar|home> these bugs don't bite you, or even if they do at
          least they don't effect the configuration





From matsaleh at austin.rr.com  Sat Jul 28 16:37:00 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Sat, 28 Jul 2001 15:37:00 -0500
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <20010728122608.A1933@troglodyte.menefee>
Message-ID: <000401c117a5$0d54aba0$7100a8c0@tomservo>

Hmmm. Interesting context for the assignment Glyph just gave me - come up
with a friendly and robust config system for servers. I'm just coming up to
speed, so I have nothing to contribute yet, but I'm eager and this is a good
set of questions to begin with.

Sounds like one problem to solve is to differentiate between the initial
state with which you start/construct a server and the runtime state that
evolves during the use of the server, which is pickled. We need a robust and
easy way to a) establish the initial state (a la configure a server) and b)
enable that state to be saved and re-used in the future (e.g. kept in CVS or
other source control) while c) not mucking with the persistability of the
runtime state.

As I said, I am a twisted neophyte, so I'm going to spend much time learning
and listening and experimenting for a while first, but thanks for brining
the topic up.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kevin Turner
Sent: Saturday, July 28, 2001 2:26 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Configuration, Persistance and Version Control


So, Tv and itamar were on channel today, asking about Twisted
philosophy, persistance, and configurability.  Lacking the
presence of anyone closer to the pure Twisted light, I tried
to be a good little minion and make the case...  But since
I'm the guy who doesn't quite believe in .spl files, I wasn't
able to be terribly convincing.

And now I could try to play his side of the argument with you guys,
but ya know, it'd be so much easier for me to just let his words do
the talking.  Scrollback excerpts:

<itamar|home> anyone who knows how twisted's config mechanism works?
<itamar|home> typically, glyph is on 24 hours a day unless I
          actually want to talk to a twisted developer
<Acapnotic> Wait, Twisted has a config mechanism?
<itamar|home> well, its server are persistent
<Acapnotic> right
<itamar|home> you coifgure them and then can pickle them to disk
<Acapnotic> right
<itamar|home> my question is: how do I configure them?
<itamar|home> can this mechanism be used with other software
          packages?
<Acapnotic> You load them up, set them, and re-pickle them.  You
          can also set them through the interactive python interface on the
          telnet server, say
<Acapnotic> Now somehow, Glyph claims that this is easier than
          having configuration files.
<Acapnotic> I am not yet convinced of that, however.
<itamar|home> I am
<itamar|home> my software right now needs either something like
          that or an XML config file
<itamar|home> which'll end up being a pickle equivalent anyway, so
          there's no point

[...]

<Acapnotic> itamar: Well, so far as I've been able to tell, there's
          not overmuch magic there.  'mkfooserver' just creates an instance
          of a server object and pickle.dumps it, twistd just pickle.loads
it
          and invokes its the run() method.
<itamar|home> Acapnotic: well, my configs are pretty complex
<Tv> Acapnotic: But all that does is make your "config settings"
          into "command line settings".
<Tv> I don't see it making things very easy.
<Tv> And think about version upgrades.

[...]

<Tv> I see trouble with the approach; mostly losing the unix
          ubiquitousness (sp?). I can grep my config files; I store them in
          CVS.
<Tv> DavidC_: You want every program to contain some UI or command
          mechanism to fully configure it.
<Tv> There's a lot of things I'd wish someone would spell out about
          twisted. One thing is "how do I version control my configuration?"
<Tv> And don't give a trivial example..
<Tv> I have multi-hundred-line config files here.
<Tv> Shared between n hosts, via CVS.
<Tv> I'd love to hear more of the twisted philosophy..

[...]

<Tv> Personally, I have _needed_ programmability in config files
          many times.

[...]

<Tv> Acapnotic: Oh, I like version control. I wish I could put more
          things into it.
<Tv> Have you ever screwed up a config file?
<Tv> Have you ever downgraded something, and found out it won't
          understand the new config file, and had to recreate the config to
          match the older version?
<Tv> The same reasons you version control source code.

<Acapnotic> tv: you should post to the list at
          twisted-python at twistedmatrix.com
<Tv> Acapnotic: I'm not following any more lists until I have
          migrated my mail to another domain :)
<Acapnotic> tv: bah, you don't have to follow it, just post ;)

[...]

<Acapnotic> Tv: so if you want programmable config, is there a
          problem with just using python?  In which case your configuration
          process is a script that does "app = pickle.load(...) app['web'].
          port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app,
          ...) ?
<Tv> Acapnotic: That may very well be what I'd do. But then the
          mechanism needs to support _both_ getting config programmatically
          and state from pickle, at the same time.
<Acapnotic> Well, if I follow this train, there is only the state
          of the application, since it is persistant.  That state may be
          changed or examined programmaticly.
<Tv> I see something beautiful there, but..
<Tv> noone has yet explained persistence to me well enough to
          convince me.
<Acapnotic> but what happens when you upgrade?  heh.
<Tv> What if a buggy program corrupts its state?
<Tv> Then you lose your config file also.
<Tv> There needs to be something else.
<Tv> Something that is less volatile.
<DavidC_> what do you mean? both config and state are the same
          thing.
<Tv> No.
<Tv> config changes when *I* say it changes.
<itamar|home> nah, config is parsed and then "rendered" into state
<Tv> program can change it's state as it wants.
<Tv> Any bug in program must never change the port to bind to.
<Tv> :)
<Tv> I see config as sort of a factory for initial program states,
          if you want to put it that way.
<itamar|home> lets say by mistake someone does "del serverInstace.
          port"
<itamar|home> and then shuts down the server
<itamar|home> the pickled state is now wrong
<DavidC_> well that would be a bug.
<itamar|home> the point is that if you have an external, version
          controleld config file
<itamar|home> these bugs don't bite you, or even if they do at
          least they don't effect the configuration



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From m at moshez.org  Sat Jul 28 18:19:48 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 29 Jul 2001 01:19:48 +0300
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <000401c117a5$0d54aba0$7100a8c0@tomservo>
References: <000401c117a5$0d54aba0$7100a8c0@tomservo>
Message-ID: <E15QcR2-0008Az-00@darjeeling>

On Sat, 28 Jul 2001, "Matthew Walker" <matsaleh at austin.rr.com> wrote:

> Hmmm. Interesting context for the assignment Glyph just gave me - come up
> with a friendly and robust config system for servers. I'm just coming up to
> speed, so I have nothing to contribute yet, but I'm eager and this is a good
> set of questions to begin with.

Make sure you read the e-mails I've sent to this list about those
things...(it's all in the archives)
It included things like pluggable user-interfaces and conformance-checking.

-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From matsaleh at austin.rr.com  Sat Jul 28 20:36:06 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Sat, 28 Jul 2001 19:36:06 -0500
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <E15QcR2-0008Az-00@darjeeling>
Message-ID: <000001c117c6$74da6dc0$7100a8c0@tomservo>

Yes, thanks. I'll look at the archives. That is part of my "coming up to
speed".

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Saturday, July 28, 2001 5:20 PM
To: twisted-python at twistedmatrix.com
Cc: twisted-python at twistedmatrix.com
Subject: RE: [Twisted-Python] Configuration, Persistance and Version
Control


On Sat, 28 Jul 2001, "Matthew Walker" <matsaleh at austin.rr.com> wrote:

> Hmmm. Interesting context for the assignment Glyph just gave me - come up
> with a friendly and robust config system for servers. I'm just coming up
to
> speed, so I have nothing to contribute yet, but I'm eager and this is a
good
> set of questions to begin with.

Make sure you read the e-mails I've sent to this list about those
things...(it's all in the archives)
It included things like pluggable user-interfaces and conformance-checking.

--
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at twistedmatrix.com  Sun Jul 29 14:40:19 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jul 2001 13:40:19 -0500 (CDT)
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <20010728122608.A1933@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0107282348170.32721-100000@zaibach.twistedmatrix.com>

Kickin' it IRC style --

Here are some responses interspersed with the dialogue.  Hope this helps
:)

On Sat, 28 Jul 2001, Kevin Turner wrote:

> <itamar|home> you coifgure them and then can pickle them to disk

... OR you run them, depending on your requirements.  The default 'twistd'
binary does UNIX daemonization; but if you wanted to do an NT service,
you'd obviously have to have some different code.

> <Tv> Acapnotic: But all that does is make your "config settings"
>           into "command line settings".

It makes your *initial* "config settings" into "command line settings".  
Those scripts exist more for examples than for actual configuration; the
"settings" they provide are a small subset of the full set available in
the code.

> <Tv> I don't see it making things very easy.
> <Tv> And think about version upgrades.

We here at Twisted Matrix Laboratories have a commitment to backwards
compatibility :-).  *IF* we had more users, the 0.9.0 upgrade would have
gone much more smoothly; we actually had a backwards compatibility plan
and decided to forego it for efficiency because we (rightly) believed that
nobody would care.

My configuration (e.g. the www.twistedmatrix.com site) is fairly complex,
and I've been maintaining it with Twisted since the inception of
Twisted.Web (which I think was .7 or so).  It's never taken me more than 3
or 4 minutes to replicate this with simple python scripts.

> <Tv> I see trouble with the approach; mostly losing the unix
>           ubiquitousness (sp?). I can grep my config files; I store them in
>           CVS.

1: learn how to use add +kb :-)

2: use pickle's "text" mode.

3: version control a script which generates and runs your monumentally
byzantine configuration, then store THAT in cvs.

About option 3: radix, moshez, and I have been thinking about, and
prototyping configuration systems for quite a while.  I have yet to think
of a system which can't be easily beaten by "just using Python".  For
example, here's an example XML solution;

<Site name="myvhost">
 <NameVirtualHost>
  <Host name="myhost.com">
   <Resource>
    ...
   </Resource>
  </Host>
 </NameVirtualHost>
</Site>
...
<WebServer port=80 site="myvhost"/>

And here's the actual Twisted code which will do the same thing (I
haven't had an opportunity to test it, but you get the idea):

---
from twisted.web.server import Site
from twisted.web.vhost import NameVirtualHost
from twisted.internet.main impot Application
a = Application("web")
v = NameVirtualHost()
r = SomeResource(...)
v.addHost("myhost.com", r)
s = Site()
s.resource = v
a.listenOn(80, s)
---

It's equally concise *and* more flexible.

> <Tv> And don't give a trivial example..
> <Tv> I have multi-hundred-line config files here.
> <Tv> Shared between n hosts, via CVS.
> <Tv> I'd love to hear more of the twisted philosophy..

If you have multi-hundred-line configuration files some of which allow
programmability), I'm guessing that you have considerable applications
that are written in buggy half-thought-out programming languages with no
module systems and you're using version control as part of a crutch to
make up for their many and varied deficiencies.

Since Twisted will allow you to use Python (or save your configuration in
Pickles, which is usually more convenient -- keep in mind I use this
software myself; pickles are how I use it -- to configure your servers,
you can encapsulate parts of your configuration or segment it however you
like.  and VC it too.

> <Tv> Personally, I have _needed_ programmability in config files
>           many times.

And you've got it ;)

> <Tv> Acapnotic: Oh, I like version control. I wish I could put more
>           things into it.

Hopefully jasbahr will jump in here with a little comment about potential
future ideas for version control within Twisted itself... ;-)

> <Tv> Have you ever screwed up a config file?
> <Tv> Have you ever downgraded something, and found out it won't
>           understand the new config file, and had to recreate the config to
>           match the older version?
> <Tv> The same reasons you version control source code.

> <Acapnotic> tv: you should post to the list at
>           twisted-python at twistedmatrix.com
> <Tv> Acapnotic: I'm not following any more lists until I have
>           migrated my mail to another domain :)
> <Acapnotic> tv: bah, you don't have to follow it, just post ;)

I would *really* appreciate it if more people took advantage of resources
like the mailing list, and my personal email address :-), to resolve
issues like this.  Thanks, kevin, for posting this log!

> <Acapnotic> Tv: so if you want programmable config, is there a
>           problem with just using python?  In which case your configuration
>           process is a script that does "app = pickle.load(...) app['web'].
>           port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app, 
>           ...) ?
> <Tv> Acapnotic: That may very well be what I'd do. But then the
>           mechanism needs to support _both_ getting config programmatically
>           and state from pickle, at the same time.

Just make your "configuration file" as described, except put "app.run()"
at the end of it.  This lets you do what "configuration" really is; e.g.
to make a customized version of the application for your site.

> <Acapnotic> Well, if I follow this train, there is only the state
>           of the application, since it is persistant.  That state may be
>           changed or examined programmaticly.

It's *optionally* persistent.

The point of Twisted's configuration philosophy is that "configuration" is
not really a disjoint set of options, but rather the custom development of
a personal application.  Twisted provides you with a big pile of very
well-developed pieces (so you hopefully don't have to spend time fixing
the little pieces while you're building your big one), but you still have
to put them together somehow.  The mk*server scripts provide one way to
do that; hopefully matsaleh's upcoming configuration protoserver will
allow it to be done interactively so that users can discover more aspects
of the software.

In eschewing the ubiquity of "configuration files" on UNIX, twisted also
eschews the necessity of dedicating a large body of code to parsing,
interpreting, and understanding an underpowered mini-language designed
only for talking to it.  "Configure" with python.  "Script" with python.  
"Code" with python.  "Debug" with python.

The twisted philosophy is that all of these tasks are inherently the same,
and are all complex enough to warrant a full-powered programming language.  
Event-based dynamic modification of a stateful system is what object
orientation was originally intended to do.

> <Tv> I see something beautiful there, but..
> <Tv> noone has yet explained persistence to me well enough to
>           convince me.
> <Acapnotic> but what happens when you upgrade?  heh.
> <Tv> What if a buggy program corrupts its state?
> <Tv> Then you lose your config file also.

This assumes you don't back up your original config file.  Why would you
throw it away?  If it were complex, I'd keep mine in CVS :)

> <Tv> There needs to be something else.
> <Tv> Something that is less volatile.
> <DavidC_> what do you mean? both config and state are the same
>           thing.
> <Tv> No.
> <Tv> config changes when *I* say it changes.

Config is *initial* state.  e.g. the state that you start the server up
with; so it changes whenever the program changes.  Or does anything.  You
can always stop the server and start from scratch again, but that doesn't
mean that bugs won't affect you.

> <itamar|home> nah, config is parsed and then "rendered" into state
> <Tv> program can change it's state as it wants.
> <Tv> Any bug in program must never change the port to bind to.

If the bug would change the persistent port, then it would change the
runtime port.  That seems like it would be pretty bad too :)

> <Tv> :)
> <Tv> I see config as sort of a factory for initial program states,
>           if you want to put it that way.

If one were to believe there is something beyond this that describes
"configuration", then they would be confused :-).  The *state* of the
server changes whenever it executes an action that causes state to change;
the difference between Twisted and other systems is that Twisted *can*
remember these changes to state automatically.  This state will not
replace your initial state, nor will it prevent you from writing scripts
which create the initial state each time that the server is run.

The reason I suggest the pickle-the-state approach is because if you make
a change to the "configuration" as the server is running, you can change
it *live*, test it, etc, and know that when the server comes up next time,
it'll start the same way, rather than having to change your "factory",
shut down your server and start it again, or make the change to your
factory and your runtime state concurrently and take the risk that they'll
be different.

> <itamar|home> lets say by mistake someone does "del serverInstace.
>           port"
> <itamar|home> and then shuts down the server
> <itamar|home> the pickled state is now wrong

The pickled state that the server saved *when it shut down* is now wrong.  
The initial state (what *I* consider the "configuration") is still
correct; but you now have the corrupt state to study as well (so you can
figure out what happened with information beyond the log.)

> <DavidC_> well that would be a bug.
> <itamar|home> the point is that if you have an external, version
>           controleld config file
> <itamar|home> these bugs don't bite you, or even if they do at
>           least they don't effect the configuration

In conclusion, "so do that then" :).

I still don't understand how a pickled file isn't "external".  It's not
like it gets mmap'd when you start the Python process and then
automatically overwritten after every action that happens :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From carmstro at twistedmatrix.com  Mon Jul 30 14:46:18 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 30 Jul 2001 13:46:18 -0500
Subject: [Twisted-Python] "Ports" vs. "Listeners"
Message-ID: <20010730134618.A24110@twistedmatrix.com>

I really do not like that we call our "servers" "Ports". I think a much
better term would be "Listener". I've talked to glyph before about this,
and he's  usually been too busy to discuss it with me (at least, that's what
*he* says...), so here it is on the list. What's wrong with using "Listener"?

A lot of people get confused by the term "Port". When they think "Port",
they don't necessarily think of "something that sits on a port, and listens
for incoming connections". That's just how I understand it. Another argument
against Port is that it's not only for "waiting for incoming connections" --
clients also allocate ports when they connect to remote hosts. So, even
technically, Port is an inaccurate term for this class. You might find other
technical details that make "Listener" slightly inaccurate, but it still
just Makes Sense to most people (I'm guessing -- DavidC_, after me using
the word "Port", and explaining that I'd rather prefer "listener", told
me he would've immediately understood what I was talking about if I had
used that term from the beginning).

So, it should just be known that I am vehemently against using "Port" for
this class. If you can come up with something better than Listener (and
that also *makes sense* without having it explained to me first), then
that's great.




From glyph at twistedmatrix.com  Mon Jul 30 22:34:37 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jul 2001 21:34:37 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <20010730134618.A24110@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>

Here I am, responding to a message on the mailing list that I was too busy
to respond to in chat.  Those of you reluctant to use the mailing list,
take note :)

On Mon, 30 Jul 2001, Chris Armstrong wrote:

> I really do not like that we call our "servers" "Ports". I think a
> much better term would be "Listener". I've talked to glyph before
> about this, and he's usually been too busy to discuss it with me (at
> least, that's what *he* says...), so here it is on the list. What's
> wrong with using "Listener"?

Well, "listener" seems equally vague to me :), and in questions like this
the status quo wins by default.

> A lot of people get confused by the term "Port". When they think
> "Port", they don't necessarily think of "something that sits on a
> port, and listens for incoming connections". That's just how I
> understand it. Another argument against Port is that it's not only for
> "waiting for incoming connections" -- clients also allocate ports when
> they connect to remote hosts. So, even technically, Port is an
> inaccurate term for this class. You might find other technical details
> that make "Listener" slightly inaccurate, but it still just Makes
> Sense to most people (I'm guessing -- DavidC_, after me using the word
> "Port", and explaining that I'd rather prefer "listener", told me he
> would've immediately understood what I was talking about if I had used
> that term from the beginning).

I'd be interested to hear more feedback on this.  Do folks generally think
that "listener" makes more sense than "port"?

> So, it should just be known that I am vehemently against using "Port"
> for this class. If you can come up with something better than Listener
> (and that also *makes sense* without having it explained to me first),
> then that's great.

"ServerSocket" probably makes the most sense... but then it would make
sense to change everything around to sound more like the java.net
classnames.  I've not really been happy with the classnames in
twisted.internet, so I encourage further debate...


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From acapnotic at twistedmatrix.com  Mon Jul 30 22:59:28 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 30 Jul 2001 19:59:28 -0700
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <20010730134618.A24110@twistedmatrix.com>
Message-ID: <20010730195928.A2302@troglodyte.menefee>

well, since you asked...
"Listener" is very passive, non-directed.  It would be nice if we could
convey the idea of something dedicated/allocated wishing/waiting/hoping
for a _potential connection.  It's not "someone who happens to be
listening" to a broadcast, it's more like "operators are standing by."

Of course, the word "operator" is plainly no good, as it's a loaded term
in this environment.  A close synonym is "receptionist", but that's a
bit unwieldy and doesn't feel quite right to me.  "clerk" is too
general, "teller" (as in bank) doesn't work either.

I'm not sure "port" is really that bad.  It's a point of contact,
something with a *specific address* which may be connected to (which
"Listener" does /not/ convey), something that things traveling
to/from remote locations go through.  And hell, if you're going to use a
phrase like "TCP", you might as well use the standard terminology that
goes with it.  =)

You're right though, in saying that not all ports are for inbound
connections, they're also for outbound connections.  Maybe a qualifier
is in order?

PortListener ListnerPort ListeningPort InPort InboundPort 
ReceptivePort ReceivingPort DockingPort OpenPort
SuckingPort TapPort WatchedPort SentryPort
ok I think I better stop there

-- 
Whaddyamean you don't wanna call it
	"twisted.internet.streamed_ordered_garuanteed_delivery"?




From m at moshez.org  Mon Jul 30 23:55:28 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 31 Jul 2001 06:55:28 +0300
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
Message-ID: <E15RQcy-0006uI-00@darjeeling>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Mon, 30 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> "ServerSocket" probably makes the most sense... but then it would make
> sense to change everything around to sound more like the java.net
> classnames.

ServerSocket is the official Pythonic name, as in "the ServerSocket
module".
- -- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjtmLCUACgkQx/ymNkbQG9b+qQCdGxsrwBpC2fFjhC0qmyifHoO7
qBQAnjZ07vJKLheCaDWDEJRSXp1YJsAN
=l1Fk
-----END PGP SIGNATURE-----




From matsaleh at austin.rr.com  Tue Jul 31 00:12:06 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Mon, 30 Jul 2001 23:12:06 -0500
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <E15RQcy-0006uI-00@darjeeling>
Message-ID: <000001c11976$f61b63b0$7100a8c0@tomservo>

"Port" to me suggests some sort of system resource, whereas "Listener" at
least connotes something is being *done*. If indeed, we are talking about a
class whose responsibility it is to receive requests and handle them, then a
more active name such as "Listener" (or even "server") might be more
appropriate.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Monday, July 30, 2001 10:55 PM
To: twisted-python at twistedmatrix.com
Cc: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] "Ports" vs. "Listeners"


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Mon, 30 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> "ServerSocket" probably makes the most sense... but then it would make
> sense to change everything around to sound more like the java.net
> classnames.

ServerSocket is the official Pythonic name, as in "the ServerSocket
module".
- --
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjtmLCUACgkQx/ymNkbQG9b+qQCdGxsrwBpC2fFjhC0qmyifHoO7
qBQAnjZ07vJKLheCaDWDEJRSXp1YJsAN
=l1Fk
-----END PGP SIGNATURE-----


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From chrish at mincom.com  Tue Jul 31 00:17:26 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 31 Jul 2001 14:17:26 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com> <E15RQcy-0006uI-00@darjeeling>
Message-ID: <010501c11977$b4ddc540$ad7711ac@pikachu>

Does anyone know how I can get the Reality Servers running on a Windows
system? I have been able to get a static server working okay, but I don't
know what the parameters for mkrealityserver are.

Thanks in advance for help.

ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Tue Jul 31 02:25:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 01:25:24 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <000001c11976$f61b63b0$7100a8c0@tomservo>
Message-ID: <Pine.LNX.4.21.0107310118440.12930-100000@zaibach.twistedmatrix.com>

On Mon, 30 Jul 2001, Matthew Walker wrote:

> "Port" to me suggests some sort of system resource, whereas "Listener" at
> least connotes something is being *done*. If indeed, we are talking about a
> class whose responsibility it is to receive requests and handle them, then a
> more active name such as "Listener" (or even "server") might be more
> appropriate.

Terms like "request", "receive", and "handle" in this context are
maddeningly vague. :)

And actually, your reasoning (although inverted) is the reason I chose the
word "Port".  The actual Port instance does nearly nothing except to
maintain state associated with the connection-accepting socket
(persistently, only what numeric port it's on); the associated
protocol.Factory instance generates Protocol instances, which "handle" the
incoming "requests", insofar as such a thing is ever done (they convert
the data into events and make appropriate callbacks to user code...)

"Listener" really implies to me that the user has to subclass it to make
it *do* something.  However, I'll agree that the word "listen" more
clearly implies what it is that a Port does specifically, so I'm more in
favor of deprecating direct use of the Port class, replacing it with
twisted.internet.main.Application.listenOn(...); I've already started
doing so.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Tue Jul 31 02:26:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 01:26:34 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <E15RQcy-0006uI-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>

On Tue, 31 Jul 2001, Moshe Zadka wrote:

> ServerSocket is the official Pythonic name, as in "the ServerSocket
> module".

Where does this module appear?

glyph at helix:~% python2.1 
Python 2.1 (#1, May 31 2001, 15:00:32) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-81)] on linux2
Type "copyright", "credits" or "license" for more information.
>>> import ServerSocket
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: No module named ServerSocket



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From m at moshez.org  Tue Jul 31 02:47:04 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 31 Jul 2001 09:47:04 +0300
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>
Message-ID: <E15RTJ2-0007pI-00@darjeeling>

On Tue, 31 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> On Tue, 31 Jul 2001, Moshe Zadka wrote:
> 
> > ServerSocket is the official Pythonic name, as in "the ServerSocket
> > module".
> 
> Where does this module appear?

Woooops!
my bad: SocketServer

Python 2.1 (#1, Apr 27 2001, 01:24:08)
[GCC 2.95.3 20010219 (prerelease)] on linux2
Type "copyright", "credits" or "license" for more information.
>>> import SocketServer
>>> print SocketServer.__doc__
Generic socket server classes.

This module tries to capture the various aspects of defining a server:
....

-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From davidc at sat.net  Tue Jul 31 16:34:12 2001
From: davidc at sat.net (David C)
Date: Tue, 31 Jul 2001 15:34:12 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107311440520.22074-100000@multivac.localhost>

On Mon, 30 Jul 2001, Glyph Lefkowitz wrote:

> On Mon, 30 Jul 2001, Chris Armstrong wrote:
> 
> > A lot of people get confused by the term "Port". When they think
> > "Port", they don't necessarily think of "something that sits on a
> > port, and listens for incoming connections". That's just how I
> > understand it. Another argument against Port is that it's not only for
> > "waiting for incoming connections" -- clients also allocate ports when
> > they connect to remote hosts. So, even technically, Port is an
> > inaccurate term for this class. You might find other technical details
> > that make "Listener" slightly inaccurate, but it still just Makes
> > Sense to most people (I'm guessing -- DavidC_, after me using the word
> > "Port", and explaining that I'd rather prefer "listener", told me he
> > would've immediately understood what I was talking about if I had used
> > that term from the beginning).
> 
> I'd be interested to hear more feedback on this.  Do folks generally think
> that "listener" makes more sense than "port"?
> 
Well my misunderstanding comes from already having worked with
sockets. A tcp port is just a number attached to each packet. When you
want to make a server you call listen() on a bound port number. You listen
for people who want to talk to you. So you create a Listener.

By the way, spread.pb is neat.

name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From glyph at twistedmatrix.com  Tue Jul 31 19:20:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 18:20:47 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <010501c11977$b4ddc540$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0107311621210.25027-100000@zaibach.twistedmatrix.com>

On Tue, 31 Jul 2001, Chris Hadgis wrote:

> Does anyone know how I can get the Reality Servers running on a Windows
> system? I have been able to get a static server working okay, but I don't
> know what the parameters for mkrealityserver are.
> 
> Thanks in advance for help.

It's very similiar to getting it working on UNIX.  Do you have
Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
twistedmatrix.com?


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From chrish at mincom.com  Tue Jul 31 22:27:15 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Wed, 1 Aug 2001 12:27:15 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107311621210.25027-100000@zaibach.twistedmatrix.com>
Message-ID: <001201c11a31$7a926a20$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

>
> On Tue, 31 Jul 2001, Chris Hadgis wrote:
>
> > Does anyone know how I can get the Reality Servers running on a Windows
> > system? I have been able to get a static server working okay, but I
don't
> > know what the parameters for mkrealityserver are.
> >
> > Thanks in advance for help.
>
> It's very similiar to getting it working on UNIX.  Do you have
> Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
> twistedmatrix.com?

Yes I have. I have both of those.

The doco for mkrealityserver indicates there are two parameters: map.rpl and
map.spl. This will ultimately produce a file called pump.spl. I understand
this, but I don't know where to get the rpl and spl files from, or how to
generate them.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Tue Jul 31 23:53:39 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 22:53:39 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <001201c11a31$7a926a20$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0107312240060.5089-100000@zaibach.twistedmatrix.com>

On Wed, 1 Aug 2001, Chris Hadgis wrote:

> From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>
>
> > It's very similiar to getting it working on UNIX.  Do you have
> > Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
> > twistedmatrix.com?
> 
> Yes I have. I have both of those.
> 
> The doco for mkrealityserver indicates there are two parameters: map.rpl and
> map.spl. This will ultimately produce a file called pump.spl. I understand
> this, but I don't know where to get the rpl and spl files from, or how to
> generate them.

A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
Inheritance or TRDemo directories will create 'x.rpl' which you can use
with mkrealityserver.  HTH.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From jasbahr at twistedmatrix.com  Sun Jul  1 12:15:04 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Sun, 1 Jul 2001 13:15:04 -0500
Subject: [Twisted-Python] What you thought would always last has passed you by...
In-Reply-To: <Pine.LNX.4.21.0106302021320.15953-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMAECCGPAA.jasbahr@twistedmatrix.com>

>Finally, in a roundabout way, the issue was raised that perhaps we 
>should change the project's name.  Twisted Python is mimsleading; it's
>not a distribution of python, it's a collection of things written *in*
>python (the convention is that other projects -- Stackless Python,
>Active Python, Mac Python, Jython -- are actually interpreters).
>
>Any thoughts on the name change issue?

That's true.  'TwistedMatrix' is a good name, but I also like 
the shortened name 'Twisted'.  :-)

Jason







From grolgh at online.no  Mon Jul  2 01:39:33 2001
From: grolgh at online.no (benjamin bruheim)
Date: Mon, 2 Jul 2001 09:39:33 +0200
Subject: [Twisted-Python] vfs-draft
Message-ID: <3B400F5E@epostleser.online.no>

Hepp, ramblings coming up.

while working on twisted.ftp I had to add a system to virtualize the dirs, so 
I began to outline a vfs of some kind. it does not deal with direct 
interaction with files, but rather lists them and so on. There's plenty of 
design issues left, but since I'm not that self-confidient on how to work this 
thing out, I felt like letting you have a peek on the idea as it is now.

Radix suggested it could be used to provide a user-space which is seperated 
from the OS.

It's a short test, and it uses authenticator. To test it, you need to rewrite 
the paths heavily. you guys can handle that ;) The example-code is at the 
bottom.

There's loads of comments up front, but many of those are not longer valid.
The part which creates most problem is the 'userFileSystem' atm.

See for yourself:
http://www.twistedmatrix.com/users/phed/vfs.py

Feedback, and give your opinions! 
And when the filesystem is done, I have some suggested projects of extra 
FileSystems as 'archiveFileSystem' (as in .zip-files), 'configFileSystem' and 
'emailattachmentFileSystem'. ;) (Sure...)

benjamin
http://mp3.com/benjamin






From carmstro at twistedmatrix.com  Mon Jul  2 15:09:47 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 2 Jul 2001 17:09:47 -0400
Subject: [Twisted-Python] TWN issue #1!
Message-ID: <20010702170947.A930@Fookidla.org>

* The TwistedPython Weekly News *

1st Issue. Monday, July 2, 2001

QOTW:

  --> java (dutkiewicz at 91.portland-01-02rs.or.dial-access.att.net) has joined
  #python
  <java> yes
  <-- java (dutkiewicz at 91.portland-01-02rs.or.dial-access.att.net) has left
  #python
  <glyph> goodbye, java
  <glyph> hehe, that's surprisingly satisfying to say


Welcome to the TwistedPython Weekly News. This is the first issue, so it will
cover a larger time-frame than a single week. If we find that we do not have
enough news for an issue every week, we may change it to the TwistedPython
Monthly News.

* Progress *

After a period of low activity, there were a lot of new changes in the Twisted
code base. Here are some summaries.

* Refactorings: Chris Armstrong did a lot of work refactoring both twisted.web
  and twisted.reality. The web refactoring was finished on 2001-06-11 and
  twisted.reality on 2001-06-20. During these refactorings, a change to the
  Coding Standard was required, as Chris found that Python has limitations on
  circular imports in packages. Sibling imports were allowed in this case
  ("import html" instead of "from twisted.web import html").
* Twisted Explorer: Chris started doing an interactive Object Browser that he
  eventually wants to write a Reality front-end to, and has been heard rambling
  about a potential 3d interface.
* Other stuff: There have been other minor hacks lately: Chris started
  rewriting calendar.py, the web calendar, and started the twisted.pim package
  with the 'todo' module. There is a web-based front-end for todo, and an
  instance of it is running here. There have also been a few additions to net
  and authenticator.
* Name Change: There has been talk of a name change. The name "Twisted Python"
  is definitely going, as it can mislead people to believe that it's some sort
  of distribution of Python (Most Python ports/distributions are "Something
  Python"). Two ideas so far are just "Twisted" or "TwistedMatrix".


* Short-term Todo *

Watch out for some cool new things coming to TwistedPython.

* Chris is working on a spell-casting system for Twisted Reality.
* Jason Asbahr will be working on InstanceMessenger, a new messaging system
  based on the new PerspectiveBroker.
* Watch out for twisted.pim. Glyph is getting an Agenda VR3 soon and he wants
  Twisted Python running on it. :)


* Interesting Thing Of the Week:
* The Twisted PerspectiveBroker

After much mucking about, Glyph finally refactored ProxyBroker into
PerspectiveBroker. This is probably the most exciting new development for
Twisted Python in recent time. pb is a replacement for Gloop, which mainly uses
cPickle for serialization of objects. pb, on the other hand, uses 'jelly', a
home-made serialization library which uses S-Expressions. This is going to be a
very central part of TPy, and we're all very excited about it. Go Glyph!

Ok, that's it for this week. Thanks for reading!
Chris Armstrong

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Tue Jul  3 01:00:26 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jul 2001 02:00:26 -0500 (CDT)
Subject: [Twisted-Python] TWN issue #1!
In-Reply-To: <20010702170947.A930@Fookidla.org>
Message-ID: <Pine.LNX.4.21.0107021819500.14497-100000@zaibach.twistedmatrix.com>

On Mon, 2 Jul 2001, Chris Armstrong wrote:

> * The TwistedPython Weekly News *
> 1st Issue. Monday, July 2, 2001

A round of applause for Chris putting together such a nice review!  I
think this is a great idea and I look forward to seeing more of these in
the future.

> * Name Change: There has been talk of a name change. The name "Twisted Python"
>   is definitely going, as it can mislead people to believe that it's some sort
>   of distribution of Python (Most Python ports/distributions are "Something
>   Python"). Two ideas so far are just "Twisted" or "TwistedMatrix".

I think I like "Twisted".  An adjective name gives us a couple of things;
like natural sounding submodules (as is appropriate for an all-inclusive
project such as this one).  Also, it seems to be the de-facto name
already; people refer to 'twisted' on #python IRC all the time.

> Watch out for some cool new things coming to TwistedPython.
> 
> * Chris is working on a spell-casting system for Twisted Reality.
> * Jason Asbahr will be working on InstanceMessenger, a new messaging system
>   based on the new PerspectiveBroker.
> * Watch out for twisted.pim. Glyph is getting an Agenda VR3 soon and he wants
>   Twisted Python running on it. :)

Unfortunately my VR3 seems very late and the agenda computing folks have
been uncommunicative.

> * Interesting Thing Of the Week:
> * The Twisted PerspectiveBroker
> 
> After much mucking about, Glyph finally refactored ProxyBroker into
> PerspectiveBroker. This is probably the most exciting new development for
> Twisted Python in recent time. pb is a replacement for Gloop, which mainly uses
> cPickle for serialization of objects. pb, on the other hand, uses 'jelly', a
> home-made serialization library which uses S-Expressions. This is going to be a
> very central part of TPy, and we're all very excited about it. Go Glyph!

Sorry to contradict you so soon after the news, but it's no longer based
on s-expressions! :)

Perspective Broker is a tiered protocol; at the lowest tier is
twisted.glen, the Generic List Encoder.  Glen is a pretty interesting
accomplishment in itself, but it hides its details pretty well -- all that
PerspectiveBroker deals with is lists of strings/ints/floats.  So,
currently glen is almost completely isomorhpic to sexps, but is much
faster to generate, faster to parse, and *MUCH* smaller in terms of data
transmission size, especially for protocols like pb (like, an order of
magnitude).  There is currently somewhat of a CPU bottleneck in
ListEncoding.dataReceived, but I believe this function will not be
difficult to rewrite in c When The Time Comes To Optimize.

Those of you who have Twisted websites on twistedmatrix.com, there will be
a bit of a "red flag day" this sunday.  We're going to be switching from
the old Gloop-based distributed websites to a newer, shinier, altogether
less totally sucky PB-based distributed web system.  The short version is
that this will cause your dynamic websites to not function with the new
server.  (I hope to release 0.9.0 before then, so it'll be on the website
before the web server itself is upgraded.)

It should be a simple process of regenerating your SPL in order to use the
new code, assuming that Chris refactored web properly :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph










From slt5v at cc.usu.edu  Tue Jul  3 22:25:28 2001
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Tue, 3 Jul 2001 22:25:28 -0600
Subject: [Twisted-Python] Twisted.pim
Message-ID: <20010703222528.A544@cc.usu.edu>

Hey Twisted gang!

  Well, since Chris's mention of Twisted.pim in TWN #1, I have began
  to think a lot about how such a thing would be implemented.  It has
  been my idea for a while now to implement some sort of tools to
  accomplish "Personal Information Management," and since glyph and
  his minions have been trying to drag me into this for a while, I
  decided to succumb. :)

  Chris (radix) and I discussed for a while today on IRC some of our
  ideas for what Twisted.pim would do and how it would be
  implemented.  Short of boring you with a long log of our
  conversation, here is a brief summary of some of our ideas.  I
  submit them here for your review, criticism, praise, and
  volunteering to help write this! :)

  What is it?
      First of all, Twisted.pim should be more than what traditional
      PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).
      The main function of those applications is to handle
      appointments, contacts, and to-do lists -- but all of that
      separately.  It's almost like they are "Personal Appointment,
      Things to do, and Contact Managers" instead of a more broad
      "Personal _Information_ Managers."  Let me illustrate with a
      couple of examples of what I mean:

      Example 1:
        Integration.  Normally, when I have an appointment scheduled,
        it will involve something I have stored elsewhere -- whether
        it be contact info for someone, or perhaps an item on my to-do
        list, or a memo I had made earlier.  With the Palm and other
        traditional PIM's, it isn't possible to link this information.
        Wouldn't it be nice to be able to click on an icon, or select
        an item from a list, from within that appointment view that
        would take to you the related information?  Or that you could
        take notes on that particular meeting and those notes show up
        with your memos and perhaps with your completed to-do item?

      Example 2:
        Information management.  I like to take notes on what I'm
        studying and working on.  Perhaps it is notes on how to
        complete a particular phase of a project at work.  Or maybe
        they are notes for a class at school.  Or perhaps it is notes
        on something new I learned in sys admin stuff.  I would love
        to be able to store these notes, be able to cross reference
        them, and sometimes associate them with to-do lists or
        appointments.  Or store links to information I found on the
        web or whatever.  So, for example, when I see on a weekly view
        that I have a test coming up, I could look at that appointment
        and have a link to my class notes to view them.  So, I am
        concerned about here more types of data being stored than the
        usual, yet all of them being able to be related and associated
        together.


      I've been doing a lot of reading lately of the works of Stephen
      R. Covey, specifically "The 7 Habits of Highly Effective People"
      and "First Things First."  He talks a lot about different
      generations of tools used is managing and organizing one's time
      and resources.  Without going into too much detail, I want to be
      able to use Twisted.pim to center my life on my "mission
      statement" and goals stemming from that, then be able to manage
      my life from this.  The linking and different views stemming
      from my ideas of Twisted.pim are essential for me to do this.
      
      Other than going beyond a tradition PIM in what data is stored
      and how it can be associated it, building this upon Twisted
      brings up some interesting possibilities.  First of all, my main
      interest is having ubiquitous access to my data, so this truly
      will be a useful tool for me.  So, whether it be through an
      interface to Emacs, a GTK view, a Web interface, or whatever, I
      want access to the same data and same functionality.
      Eventually, I would love to get an Agenda or another PDA running
      Linux and ideally this would run on it as well.  Secondly,
      because it is built upon Twisted, this leads well to a
      multi-user type of system.  Almost a groupware type of
      application.  This leads to questions of authorization and
      ownership of data items and who has permission to view them.  I
      will lead the design of such items to people such as glyph who
      is the "man with the internet."

      So, basically, in a long nutshell, those are my ideas now of
      what Twisted.pim should do.


  How will it be implemented?
      Here are notes of some of the things radix and I thought.  I'm
      not too good at design of such systems right now, so this is
      where I need a lot of help.

      * Have a base class for all of the data types, that would
        include shared items such as association info, name, owner,
        etc.  Example data types descended from this would be
        appointment, to-do item, memo, etc.

      * Implement twisted.pim.associator which will provide the
        support for associating and linking data items together.

      * 'middle-end' classes which the UI viewers talk to.  Examples
        of these would be the calendar view, the to-do list viewer,
        etc.

      * And of course, the UI's of which would include Emacs modes,
        GTK interfaces, web pages, etc.

      * Use the new twisted.pb to handle the access to this data,
        except in the case of our small, handheld clients which would
        access the middle-end objects directly, due to the hardware
        restraints on these systems.  For access of local data on
        desktop machines, it would just connect to localhost.

      * Anyone volunteer to work on Pippy to get this sort of thing to
        work on the Palm?

      * And, until I get a PDA to run this on, I would like conduits
        to export this data to my Palm.

   Other than that, the implementation is kinda fuzzy right now.  I
   want to get better at designing such things.  Hopefully all of you
   ubercoders can help me figure this out. :)

   Thanks for listening to my ideas!

Nafai
      








From churchr at ghostbitch.org  Tue Jul  3 22:54:01 2001
From: churchr at ghostbitch.org (R. Church)
Date: Tue, 3 Jul 2001 21:54:01 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010703215400.H8168@ghostbitch.org>

You absolutely need to read about the Remembrance Agent. It's a PIM,
in the sense of "personal information", and it uses a Google-style
relavence engine to self-organize documents, to some extent. It also
does searches in the background while you type, so that a buffer at
the bottom of the screen display documents similar to the one you're
currently writing. If you're in class typing notes about the French
Revolution, it will show you a list of other documents you've typed
about the French Revolution. It's very neat, and it's all implemented
in Emacs.

http://rhodes.www.media.mit.edu/people/rhodes/Papers/wear-ra.html

Beyond that, I think you need to take a serious look at Wiki
technology. For me, it's hard to beat Wiki as a PIM platform. It can
take any kind of text. MoinMoin lets me make nice templates for things
like addresses and appointments. It's all searchable. Everything is
hyperlinkable. And, it's suspiciously simple. I think you should
consider incorporating some of these characteristics in your PIM.

On Tue, Jul 03, 2001 at 10:25:28PM -0600, Travis B. Hartwell quipped:
> Hey Twisted gang!
> 
>   Well, since Chris's mention of Twisted.pim in TWN #1, I have began
>   to think a lot about how such a thing would be implemented.  It has
>   been my idea for a while now to implement some sort of tools to
>   accomplish "Personal Information Management," and since glyph and
>   his minions have been trying to drag me into this for a while, I
>   decided to succumb. :)
> 
>   Chris (radix) and I discussed for a while today on IRC some of our
>   ideas for what Twisted.pim would do and how it would be
>   implemented.  Short of boring you with a long log of our
>   conversation, here is a brief summary of some of our ideas.  I
>   submit them here for your review, criticism, praise, and
>   volunteering to help write this! :)
> 
>   What is it?
>       First of all, Twisted.pim should be more than what traditional
>       PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).
>       The main function of those applications is to handle
>       appointments, contacts, and to-do lists -- but all of that
>       separately.  It's almost like they are "Personal Appointment,
>       Things to do, and Contact Managers" instead of a more broad
>       "Personal _Information_ Managers."  Let me illustrate with a
>       couple of examples of what I mean:
> 
>       Example 1:
>         Integration.  Normally, when I have an appointment scheduled,
>         it will involve something I have stored elsewhere -- whether
>         it be contact info for someone, or perhaps an item on my to-do
>         list, or a memo I had made earlier.  With the Palm and other
>         traditional PIM's, it isn't possible to link this information.
>         Wouldn't it be nice to be able to click on an icon, or select
>         an item from a list, from within that appointment view that
>         would take to you the related information?  Or that you could
>         take notes on that particular meeting and those notes show up
>         with your memos and perhaps with your completed to-do item?
> 
>       Example 2:
>         Information management.  I like to take notes on what I'm
>         studying and working on.  Perhaps it is notes on how to
>         complete a particular phase of a project at work.  Or maybe
>         they are notes for a class at school.  Or perhaps it is notes
>         on something new I learned in sys admin stuff.  I would love
>         to be able to store these notes, be able to cross reference
>         them, and sometimes associate them with to-do lists or
>         appointments.  Or store links to information I found on the
>         web or whatever.  So, for example, when I see on a weekly view
>         that I have a test coming up, I could look at that appointment
>         and have a link to my class notes to view them.  So, I am
>         concerned about here more types of data being stored than the
>         usual, yet all of them being able to be related and associated
>         together.
> 
> 
>       I've been doing a lot of reading lately of the works of Stephen
>       R. Covey, specifically "The 7 Habits of Highly Effective People"
>       and "First Things First."  He talks a lot about different
>       generations of tools used is managing and organizing one's time
>       and resources.  Without going into too much detail, I want to be
>       able to use Twisted.pim to center my life on my "mission
>       statement" and goals stemming from that, then be able to manage
>       my life from this.  The linking and different views stemming
>       from my ideas of Twisted.pim are essential for me to do this.
>       
>       Other than going beyond a tradition PIM in what data is stored
>       and how it can be associated it, building this upon Twisted
>       brings up some interesting possibilities.  First of all, my main
>       interest is having ubiquitous access to my data, so this truly
>       will be a useful tool for me.  So, whether it be through an
>       interface to Emacs, a GTK view, a Web interface, or whatever, I
>       want access to the same data and same functionality.
>       Eventually, I would love to get an Agenda or another PDA running
>       Linux and ideally this would run on it as well.  Secondly,
>       because it is built upon Twisted, this leads well to a
>       multi-user type of system.  Almost a groupware type of
>       application.  This leads to questions of authorization and
>       ownership of data items and who has permission to view them.  I
>       will lead the design of such items to people such as glyph who
>       is the "man with the internet."
> 
>       So, basically, in a long nutshell, those are my ideas now of
>       what Twisted.pim should do.
> 
> 
>   How will it be implemented?
>       Here are notes of some of the things radix and I thought.  I'm
>       not too good at design of such systems right now, so this is
>       where I need a lot of help.
> 
>       * Have a base class for all of the data types, that would
>         include shared items such as association info, name, owner,
>         etc.  Example data types descended from this would be
>         appointment, to-do item, memo, etc.
> 
>       * Implement twisted.pim.associator which will provide the
>         support for associating and linking data items together.
> 
>       * 'middle-end' classes which the UI viewers talk to.  Examples
>         of these would be the calendar view, the to-do list viewer,
>         etc.
> 
>       * And of course, the UI's of which would include Emacs modes,
>         GTK interfaces, web pages, etc.
> 
>       * Use the new twisted.pb to handle the access to this data,
>         except in the case of our small, handheld clients which would
>         access the middle-end objects directly, due to the hardware
>         restraints on these systems.  For access of local data on
>         desktop machines, it would just connect to localhost.
> 
>       * Anyone volunteer to work on Pippy to get this sort of thing to
>         work on the Palm?
> 
>       * And, until I get a PDA to run this on, I would like conduits
>         to export this data to my Palm.
> 
>    Other than that, the implementation is kinda fuzzy right now.  I
>    want to get better at designing such things.  Hopefully all of you
>    ubercoders can help me figure this out. :)
> 
>    Thanks for listening to my ideas!
> 
> Nafai
>       
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From acapnotic at twistedmatrix.com  Wed Jul  4 11:43:42 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Wed, 4 Jul 2001 10:43:42 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010704104342.B1260@troglodyte.menefee>

On Tue, Jul 03, 2001 at 10:25:28PM -0600, Travis B. Hartwell wrote:
>   What is it?
>       First of all, Twisted.pim should be more than what traditional
>       PIMs offer (think of the Palm apps, KOrganizer, Outlook, etc.).

Please look at Evolution too.  I'm sure you can find something to not
like about it, but there's been a lot of sweat put into it, so you
should at least be able to learn something from their efforts.

>       Example 1:
>         Integration.

You can't spend too much time thinking about integration before someone
brings up the rather ill-defined idea of "desktop environment".  Now, 
forget I said that phase, because it doesn't mean much.  ;)  I just
raise a few more questions:  What if the resource you are working on is
not an emacs buffer, but an Excel spreadsheet?  Can you incorporate
resources into this system that you, the Twisted.pim designer, did not
anticipate the existance of?  Can other third-party applications make
use of your contact list and schedule things into your calendar -- even
if they're not written in Python?  To what degree does "integratibility"
imply "embedability"?

Now, we all know that since PB is being published under the Twisted
label, it's got to be the greatest thing since spreadable cheese.  But
even so, but I'd sleep better at night if I read a memo comparing its
suitability for "Integration." to the other things that are being used
these days from that pot of ole soap ipc corba orbit bonobo rpc kparts
stew.

>       Example 2:
>         Information management.  

Another good place to look for examples of information management (in
addition to what churchr mentioned) is at Zigzag, Ted Nelson's
brainchild.  There's an implementation now that's at least far along
enough that you can play with it at http://gzigzag.sourceforge.net/ .
I don't feel it's quite to the point where it's ready to take off on its
own, as the applications for it are rather incomplete and the only
chunks of data you can really use in the default interface are one-line
strings, but it's a toy from which you might be able to learn something
about dense bidirectoinal hyperlinking.

>       I've been doing a lot of reading lately of the works of Stephen
>       R. Covey, specifically "The 7 Habits of Highly Effective People"
>       and "First Things First."

Ok, now sir, you are scaring me.  ;)
(Sorry, personal allergy to the ideology of Mr. Covey.  Gives me hives.)

Best wishes,

   - Kevin
  (Acapnotic)




From carmstro at twistedmatrix.com  Wed Jul  4 12:21:42 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Wed, 4 Jul 2001 14:21:42 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010704104342.B1260@troglodyte.menefee>
Message-ID: <20010704142142.A6495@Fookidla.org>

On Wed, Jul 04, 2001 at 10:43:42AM -0700, Kevin Turner wrote:
> Please look at Evolution too.  I'm sure you can find something to not
> like about it, but there's been a lot of sweat put into it, so you
> should at least be able to learn something from their efforts.

The biggest problem with Evolution (or anything) is that it's not Twisted 
enough. One small part of the philosophy behind Twisted is reinventing the 
wheel, but to be a rocket-powered wheel (look at all the UNIX services we're
reimplementing).

> You can't spend too much time thinking about integration before someone
> brings up the rather ill-defined idea of "desktop environment".  Now, 
> forget I said that phase, because it doesn't mean much.  ;)  I just
> raise a few more questions:  What if the resource you are working on is
> not an emacs buffer, but an Excel spreadsheet?  Can you incorporate
> resources into this system that you, the Twisted.pim designer, did not
> anticipate the existance of?  Can other third-party applications make

If you want to make a new type of information, make a new subclass of the
base InfoData class. You can also make a new organizer class for it, and 
a new UI. The "integration" he's talking of isn't at the UI level, it's at
the base. In other words, our integration isn't the same integration that
Desktop Environments are going after -- Look&Feel integration. We're going for
data that will be integrated. The associator will be able to associate 
arbitrary InfoDatas to each other.

> use of your contact list and schedule things into your calendar -- even
> if they're not written in Python?  To what degree does "integratibility"
> imply "embedability"?

Sure, as long as there is a PB implementation in that language (on a side note,
dash seems to be getting along with a Lisp implementation of glen. After glen,
there will probably be a PB implementation for Lisp, too). Of course,
accessing the data without going through PB will be harder, but that wouldn't
be Twisted.

> Now, we all know that since PB is being published under the Twisted
> label, it's got to be the greatest thing since spreadable cheese.  But
> even so, but I'd sleep better at night if I read a memo comparing its
> suitability for "Integration." to the other things that are being used
> these days from that pot of ole soap ipc corba orbit bonobo rpc kparts
> stew.

PB has nothing to do with the integration of the PIM. The big integrator
is the imaginary 'associator' module in the PIM package. PB will just serve
as the protocol for remote access to the PIM information, and by remote I
don't just mean connecting to remote hosts - there will be a PIM service running
on your local twisted process, and you connect to that with the PIM clients.


-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Wed Jul  4 17:24:23 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jul 2001 18:24:23 -0500 (CDT)
Subject: [Twisted-Python] after being royalty in spain
Message-ID: <Pine.LNX.4.21.0107041818430.8814-200000@zaibach.twistedmatrix.com>


TDFL pronouncement: we're going with "Twisted" as the name.

I'm renaming and restructuring the CVS repository right now.  Most
everything is moving into packages within twisted.  The new directory
structure is attached.  I'll be importing a "Twisted" CVS module some time
tonight.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph
-------------- next part --------------
Twisted
|-- bin
|   |-- efaucet
|   |-- gnusto
|   |-- gtkfaucet
|   |-- jfaucet
|   |-- malyon
|   |-- mapeditor
|   |-- mkftpserver
|   |-- mkmailserver
|   |-- mkrealityserver
|   |-- mktelnetserver
|   |-- mkwebserver
|   |-- runtests
|   |-- twistd
|   |-- twistd-debug
|   `-- vacuum
|-- credits.py
|-- doc
|   |-- API-CHANGES-0.8.10
|   |-- CodingStandard.html
|   `-- QUICKSTART
|-- license.py
|-- pyunit
|   |-- PyUnit.html
|   |-- __init__.py
|   |-- unittest.py
|   `-- unittestgui.py
|-- readme.py
|-- static
|   |-- five.cgi
|   |-- index.html
|   |-- test.cgi
|   `-- test.epy
|-- twisted
|   |-- __init__.py
|   |-- authenticator.py
|   |-- copyright.py
|   |-- disted
|   |   |-- __init__.py
|   |   |-- banana.py
|   |   |-- jelly.py
|   |   `-- pb.py
|   |-- internet
|   |   |-- __init__.py
|   |   |-- abstract.py
|   |   |-- gtknet.py
|   |   |-- main.py
|   |   |-- process.py
|   |   |-- ssl.py
|   |   |-- stdio.py
|   |   |-- task.py
|   |   `-- tcp.py
|   |-- persisted
|   |   |-- __init__.py
|   |   |-- dirdbm.py
|   |   `-- styles.py
|   |-- pim
|   |   |-- __init__.py
|   |   `-- todo.py
|   |-- protocols
|   |   |-- __init__.py
|   |   |-- basic.py
|   |   |-- ftp.py
|   |   |-- http.py
|   |   |-- irc.py
|   |   |-- pop3.py
|   |   |-- protocol.py
|   |   |-- smtp.py
|   |   `-- telnet.py
|   |-- python
|   |   |-- __init__.py
|   |   |-- delay.py
|   |   |-- explorer.py
|   |   |-- hook.py
|   |   |-- log.py
|   |   |-- observable.py
|   |   |-- ouroboros.py
|   |   |-- reference.py
|   |   |-- reflect.py
|   |   |-- threadable.py
|   |   |-- threadpool.py
|   |   |-- usage.py
|   |   `-- worker.py
|   |-- reality
|   |   |-- __init__.py
|   |   |-- clothing.py
|   |   |-- container.py
|   |   |-- door.py
|   |   |-- error.py
|   |   |-- furniture.py
|   |   |-- geometry.py
|   |   |-- lock.py
|   |   |-- player.py
|   |   |-- plumbing.py
|   |   |-- reality.py
|   |   |-- room.py
|   |   |-- sentence.py
|   |   |-- source.py
|   |   `-- thing.py
|   |-- telnet.py
|   |-- test
|   |   |-- __init__.py
|   |   |-- test_all.py
|   |   |-- test_banana.py
|   |   |-- test_delay.py
|   |   |-- test_dirdbm.py
|   |   |-- test_explorer.py
|   |   |-- test_glen.pyc
|   |   |-- test_hook.py
|   |   |-- test_import.py
|   |   |-- test_jelly.py
|   |   |-- test_observable.py
|   |   |-- test_pb.py
|   |   |-- test_pop3.py
|   |   |-- test_protocols.py
|   |   |-- test_reality.py
|   |   |-- test_reflect.py
|   |   |-- test_sexpy.py
|   |   |-- test_smtp.py
|   |   `-- test_todo.py
|   |-- ui
|   |   |-- ImageServer.py
|   |   |-- __init__.py
|   |   |-- gtkfaucet.py
|   |   |-- jfaucet.py
|   |   |-- text.py
|   |   `-- tkfaucet.py
|   `-- web
|       |-- __init__.py
|       |-- calendar.py
|       |-- distributed.py
|       |-- error.py
|       |-- html.py
|       |-- resource.py
|       |-- script.py
|       |-- server.py
|       |-- static.py
|       |-- test.py
|       |-- todo.py
|       |-- twcgi.py
|       |-- utils.py
|       |-- vhost.py
|       `-- weblog.py
`-- win
    |-- MakeWebServer.pyw
    |-- RunServer.py
    `-- TKFaucet.pyw

16 directories, 131 files

From jh at web.de  Wed Jul  4 18:05:56 2001
From: jh at web.de (Juergen Hermann)
Date: Thu, 05 Jul 2001 02:05:56 +0200
Subject: [Twisted-Python] Look mommy, it's an installer!
Message-ID: <m15HweU-007o5TC@smtp.web.de>



-------------- next part --------------
A non-text attachment was scrubbed...
Name: twinst.jpg
Type: image/jpeg
Size: 43174 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010705/6bf6bc03/attachment.jpg>

From acapnotic at twistedmatrix.com  Thu Jul  5 21:16:09 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:16:09 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010703222528.A544@cc.usu.edu>
Message-ID: <20010705201609.A3233@troglodyte.menefee>

On 07/03/2001, I heard Nafai say *something* like this, err, kinda,
anyway...  Please, do not hesitate to correct me where I have heard
incorrectly.

> Hey Twisted gang!  I have been assimilated into the Twisted
> collective.  radix and I were discussing our ideas for Twisted.pim;
> here's a brief summary.  I submit them for crunchy things to add to
> your breakfast cereal.

> First of all, Twisted.pim should be more than what traditional PIMs
> (i.e. Outlook) offer.  The main function of those applications is to
> handle appointments, contacts, and to-do lists.  It's almost like they
> are applications written to do these things instead of being grand
> universal "_Information_ Manager"s.  Examples:
 
>       Example 1:
>         Integration.  Normally, when I have an appointment scheduled,
>         it will involve something other than the number of seconds
>         elapsed since the dawn of the epoch.  With the Palm and other
>         traditional PIMs, it isn't possible to link this other
>         information to the appointment.  Wouldn't it be nice to have
>         hyperlinks?
 
>       Example 2:
>         Information management.  I take notes.  I would like to store
>         and catalouge these notes, and make references to them from
>         other documents, and vice versa.  To achieve this goal, I
>         believe my application must have knowlodge of any and all
>         types of data I may encounter, for the only way I can be sure
>         I can make inter-document references is to own all the storage
>         formats.

>       Having access to my data from a wide range of platforms is
>       important to me.  I believe Twisted will help me with this, as
>       it lends itself to building resources with multiple interfaces
>       and is funky like that.
>       I believe that Twisted will also facilitate taking this project
>       into a multi-user groupware kind of thang, but as that leads to
>       hairy access control issues, I'll leave that part to someone
>       else with more internet than I.

>       So, basically, in a long nutshell (ehh... macademia?), those are
>       my ideas now of what Twisted.pim should do.

>   How will it be implemented?
>
>   With a cross-platform three-tier client-server arcitecture with
>   internet on top.  Except on systems running on thin computing
>   devices -- we think we'll only be able to fit two tiers in these.

> Thanks for listening to my ideas!
>
>  Nafai

Ok, so here are my issues:

1) Where is the line between PIM (Personal Information Manager) and that
great holy grail of the Information Age, the Universal Information
Manager?  What *doesn't* Twisted.pim do?  


2) What I'm hearing, distilled:

    "We have a project to manage relations between all types of
    documents a person may ever come in contact with.  Since this
    project is self-contained, we will use a private interface to manage
    related information between these documents.  This is okay, since we
    will always be able to manage any amount of information about any
    number of document types from a centeral place -- that is, this
    codebase.
    "In contrast to what's in our internal structure (that is,
    chunks of information with relations between them), there will be
    clients and other information tools for which we will have a
    seperate interface (using PB).  This is a different interface
    because these clients display documents... err, structured
    information...   which is built of relations to the information on
    other documents, which...   uhh, damn, what was the difference
    between this and our other thing again?"

I'm also taking issue with this notion that all sorts of documents will
be handled by the Twisted.pim codebase.  Let me humbly suggest that you
are wrong ;) and that you will not actually sit down and write a class
for everything under the sun.  Even if you did, there's going to be Some
Other Type of document out there, and someone is going to want to write
a third-party module for it, and perhaps I'm just not being Pythonic
enough, but I'm thinking this module is not going into the Twisted.pim
codebase.  

Twisted is ambitious.  Twisted laughs in the face of previous inventors
of the wheel.  But I feel Twisted is also pretty good at being modular
and de-centeralized, so I'm hoping it can realize the limitations of its
resources and leverage this other aspect, leaving a window open for more
resources to be linked in as they become available at a later date.


-- 
The moon is full, %99.95 full. (15.0 days old) phase: 0.506983
Angular diameter as seen from the earth: 0.4973 degrees




From acapnotic at twistedmatrix.com  Thu Jul  5 21:19:02 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:19:02 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010704142142.A6495@Fookidla.org>
Message-ID: <20010705201902.B3233@troglodyte.menefee>

On Wed, Jul 04, 2001 at 02:21:42PM -0400, Chris Armstrong wrote:
> On Wed, Jul 04, 2001 at 10:43:42AM -0700, Kevin Turner wrote:
> > Please look at Evolution too.  I'm sure you can find something to
> > not like about it, but there's been a lot of sweat put into it, so
> > you should at least be able to learn something from their efforts.
>
> The biggest problem with Evolution (or anything) is that it's not
> Twisted enough.

Oh, as I said, I have no doubt that there are problems, from biggest to
littlest.  I was merely suggesting the possibility that they might have
got something *right* too -- and if so, that's good information to have
when you're setting out to achieve something with many of the same
goals.  I don't think it hurts to know what the wheel looks like before
you reinvent it.

> > Now, forget I said that phase, because it doesn't mean much. ;) I
> > just raise a few more questions:  What if the resource you are
> > working on is not an emacs buffer, but an Excel spreadsheet?  Can
> > you incorporate resources into this system that you, the Twisted.pim
> > designer, did not anticipate the existance of?

> If you want to make a new type of information, make a new subclass
> of the base InfoData class. [...] The "integration" he's talking
> of isn't at the UI level, it's at the base. In other words, our
> integration isn't the same integration that Desktop Environments
> are going after -- Look&Feel integration.  We're going for data
> that will be integrated.

This is why I told you to forget I said the "d. e." phrase =)
I think you underestimate miguel's ambition -- Twisted folks aren't the
only ones trying to take over the world. ;)   Having a cohesive
environment does not just mean that the dialog boxes all look similar
and the context-sensitive pop-ups feel the same, you also need to be
able to incorporate the product of one application into another -- e.g.
your plotter into your spreadsheet, your spreadsheet into your marketing
document, your documents into your conferences and presentations.  You
have not convinced me that this is different from your "data
integration".

[ http://www.ximian.com/tech/bonobo.php3           ]
[ The "why corba sucks" flamewar may now commence. ]
[ Feel free to understand a "How little Acap understands things" flame
too ;) ]

> > Now, we all know that since PB is being published under the Twisted
> > label, it's got to be the greatest thing since spreadable cheese.  But
> > even so, but I'd sleep better at night if I read a memo comparing its
> > suitability for "Integration." to [...] corba [etc...].

(The following is me paraphrasing radix, not quite his original words:)
} PB has nothing to do with integration between the PIM components.
} That will be done by our /imaginary/ [emphasis mine ;) ] 'associator'
} module.  PB will just serve as the portocol for [remote] access to the
} information.

See issue my #2 in my other post from today,
<20010705201609.A3233 at troglodyte.menefee>

Cheers,

  - Acapnotic
 (Kevin Turner)





From kevin.m.turner at pobox.com  Thu Jul  5 21:24:18 2001
From: kevin.m.turner at pobox.com (Kevin Turner)
Date: Thu, 5 Jul 2001 20:24:18 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010705202418.A3424@troglodyte.menefee>

On Thu, Jul 05, 2001 at 08:19:02PM -0700, I wrote:
> [ Feel free to understand a "How little Acap understands things" flame
> too ;) ]
err, s/understand/include/

oops.




From shortwa at auburn.edu  Thu Jul  5 21:35:50 2001
From: shortwa at auburn.edu (Allen Short)
Date: Thu, 05 Jul 2001 22:35:50 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>
References: <20010704142142.A6495@Fookidla.org>
	<20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010705223550G.washort@ghostwheel.dhis.net>

>>>>> "Acapnotic" == Kevin Turner <acapnotic at twistedmatrix.com> writes:

    > This is why I told you to forget I said the "d. e." phrase =) I
    > think you underestimate miguel's ambition -- Twisted folks
    > aren't the only ones trying to take over the world. ;) Having a
    > cohesive environment does not just mean that the dialog boxes
    > all look similar and the context-sensitive pop-ups feel the
    > same, you also need to be able to incorporate the product of one
    > application into another -- e.g.  your plotter into your
    > spreadsheet, your spreadsheet into your marketing document, your
    > documents into your conferences and presentations.  You have not
    > convinced me that this is different from your "data
    > integration".

    > [ http://www.ximian.com/tech/bonobo.php3 ] [ The "why corba
    > sucks" flamewar may now commence. ] [ Feel free to understand a
    > "How little Acap understands things" flame too ;) ]


Given the constraints of GNOME's environment (i.e. "using C"), I think
ORBit/Bonobo dont suck _too_ badly. At some point in the future (after
at least one rev each of Twisted and GNOME), I think it'd be worth
looking at getting Twisted to handle Bonobo components
intelligently. That'd make a _lot_ of client-side integration stuff
easier -- and incidentally help along twisted.pim. ;)

At this point though, there's not a whole lot we can do with
integration with 'desktop tools' (which _is_ what something of this
scope should do) -- and I dont think writing our own is all that great
of a solution either. So, for now, I think it's worth concentrating on
stuff we can write and use _now_ (and an integrate easily into
existing twisted modules -- the biggest example i'm thinking of now is
a webpage-annotation system a la crit.org, but personal and not
written in horrid perl) rather than do-everything frameworks that
depend on stuff we dont have yet. 

--  
Allen Short             Programmer-Archaeologist             shortwa at auburn.edu
"optimization is hacker crack. " -- Johan Kullstam, comp.lang.lisp




From carmstro at twistedmatrix.com  Fri Jul  6 11:36:06 2001
From: carmstro at twistedmatrix.com (carmstro at twistedmatrix.com)
Date: Fri, 6 Jul 2001 12:36:06 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010705201902.B3233@troglodyte.menefee>; from acapnotic@twistedmatrix.com on Thu, Jul 05, 2001 at 08:19:02PM -0700
References: <20010704142142.A6495@Fookidla.org> <20010705201902.B3233@troglodyte.menefee>
Message-ID: <20010706123606.A322@twistedmatrix.com>

On Thu, Jul 05, 2001 at 08:19:02PM -0700, Kevin Turner wrote:
> This is why I told you to forget I said the "d. e." phrase =)
> I think you underestimate miguel's ambition -- Twisted folks aren't the
> only ones trying to take over the world. ;)   Having a cohesive
> environment does not just mean that the dialog boxes all look similar
> and the context-sensitive pop-ups feel the same, you also need to be
> able to incorporate the product of one application into another -- e.g.
> your plotter into your spreadsheet, your spreadsheet into your marketing
> document, your documents into your conferences and presentations.  You
> have not convinced me that this is different from your "data
> integration".

Well, except that we're not integrating spreadsheets into documents, we're
integrating personal information. (see below)

> > > Now, we all know that since PB is being published under the Twisted
> > > label, it's got to be the greatest thing since spreadable cheese.  But
> > > even so, but I'd sleep better at night if I read a memo comparing its
> > > suitability for "Integration." to [...] corba [etc...].
> 
> (The following is me paraphrasing radix, not quite his original words:)
> } PB has nothing to do with integration between the PIM components.
> } That will be done by our /imaginary/ [emphasis mine ;) ] 'associator'
> } module.  PB will just serve as the portocol for [remote] access to the
> } information.

The associator module will probably be pretty easy to implement. It's just
that Nafai nor I have gotten around to it yet. ;) I put up some preliminary
babblings on the associator on the Wiki page for TwistedPim.

I also think you don't quite understand what we're trying to do here - We're
not trying to integrate "everything under the sun", we're just making it so
the PIM Data we have is highly interconnected. The PIM idea came before the
Associator idea, and it just fits really well. The associator isn't meant to
be the end-all be-all, Twisted is. ;-)

On a side note, we really have to stop using the term "associator module" ;)
The association code will be in the InfoData class itself, and there will
probably be another module that just keeps track of lists of all the different
kinds of InfoData. Not sure what this should be called -- anyway, go read
TwistedPim, I'm babbling =) 




From glyph at twistedmatrix.com  Fri Jul  6 14:42:51 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 6 Jul 2001 15:42:51 -0500 (CDT)
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706123606.A322@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107061541250.2070-100000@zaibach.twistedmatrix.com>

On Fri, 6 Jul 2001 carmstro at twistedmatrix.com wrote:

> On a side note, we really have to stop using the term "associator module" ;)
> The association code will be in the InfoData class itself, and there will
> probably be another module that just keeps track of lists of all the different
> kinds of InfoData. Not sure what this should be called -- anyway, go read
> TwistedPim, I'm babbling =) 

I really have completely stopped understanding what you're talking about
here.  When you're talking about associations, is it a relational
database?  That's a fairly heavy degree of complexity, but it's necessary
for some of what you're describing.  The cool thing about Twisted is that
it just uses the "the world is a directed graph" feature of Python to
maintain associations.  I don't see why you need to be more complicated
than that.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From acapnotic at twistedmatrix.com  Fri Jul  6 14:35:16 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Fri, 6 Jul 2001 13:35:16 -0700
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706123606.A322@twistedmatrix.com>
Message-ID: <20010706133516.A3826@troglodyte.menefee>

On Fri, Jul 06, 2001 at 12:36:06PM -0500, carmstro at twistedmatrix.com wrote:
> I also think you don't quite understand what we're trying to do here - We're
> not trying to integrate "everything under the sun", 

I'm glad I got that across :)  no, I don't quite understand, so I'm
trying to get you to define scope (something Nafai has confessed to
struggling with).  What is "PIM data"?  Which things are "personal
information" that you're managing, as opposed to "apersonal
information"?  You have ToDo entries, grouped in lists, some of which
have times associated with them and thus get called "appointments".
Does that cover it?  Then why didn't you say so?  ;)

-- 
The moon is waning gibbous, %99.15 full. (15.6 days old) phase: 0.529400
Angular diameter as seen from the earth: 0.4949 degrees.




From glyph at twistedmatrix.com  Sat Jul  7 11:56:00 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 7 Jul 2001 12:56:00 -0500 (CDT)
Subject: [Twisted-Python] Flag Day
Message-ID: <Pine.LNX.4.21.0107071244150.10428-100000@zaibach.twistedmatrix.com>

On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
like they're on track for that.

This release will, among other things, add a new CVS module (named
Twisted) and completely change how distributed webservers work.  Gloop is
going away completely, to be replaced by pb.  If you are currently running
a twisted server, you'll probably have to rebuild your .spl manually in
order to get it to work with the new webserver.  Since it will be looking
for a different file to discover your distributed web service on, your
current "personal" web services will be unavailable from sunday evening
until you convert them to the new style.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph





From j.her at t-online.de  Sat Jul  7 12:09:24 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Sat, 07 Jul 2001 20:09:24 +0200
Subject: [Twisted-Python] Flag Day
In-Reply-To: <Pine.LNX.4.21.0107071244150.10428-100000@zaibach.twistedmatrix.com>
Message-ID: <15IwW9-1Gy3nMC@fwd01.sul.t-online.com>

On Sat, 7 Jul 2001 12:56:00 -0500 (CDT), Glyph Lefkowitz wrote:

>On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
>like they're on track for that.

If you want a setup.py for that, you have to act NOW. Is the new CVS
module in place, where is it, ...?
--
Juergen Hermann, Karlsruhe, Germany | IRC: snibril






From carmstro at twistedmatrix.com  Sat Jul  7 23:04:56 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 8 Jul 2001 01:04:56 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <Pine.LNX.4.21.0107061541250.2070-100000@zaibach.twistedmatrix.com>
Message-ID: <20010708010455.A8816@Fookidla.org>

Well, now you're confusing me. :) All I'm thinking of so far is having every
PIM data object have a dict filled with other objects by key. Check out my
sample implementation of InfoData on the wiki.

On Fri, Jul 06, 2001 at 03:42:51PM -0500, Glyph Lefkowitz wrote:
> I really have completely stopped understanding what you're talking about
> here.  When you're talking about associations, is it a relational
> database?  That's a fairly heavy degree of complexity, but it's necessary
> for some of what you're describing.  The cool thing about Twisted is that
> it just uses the "the world is a directed graph" feature of Python to
> maintain associations.  I don't see why you need to be more complicated
> than that.
> 
>                       ______      __   __  _____  _     _
>                      |  ____ |      \_/   |_____] |_____|
>                      |_____| |_____  |    |       |     |
>                      @ t w i s t e d m a t r i x  . c o m
>                      http://twistedmatrix.com/users/glyph
> 
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From carmstro at twistedmatrix.com  Sat Jul  7 23:24:46 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sun, 8 Jul 2001 01:24:46 -0400
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010706133516.A3826@troglodyte.menefee>
Message-ID: <20010708012446.A8918@Fookidla.org>

On Fri, Jul 06, 2001 at 01:35:16PM -0700, Kevin Turner wrote:
> On Fri, Jul 06, 2001 at 12:36:06PM -0500, carmstro at twistedmatrix.com wrote:
> > I also think you don't quite understand what we're trying to do here - We're
> > not trying to integrate "everything under the sun", 
> 
> I'm glad I got that across :)  no, I don't quite understand, so I'm
> trying to get you to define scope (something Nafai has confessed to
> struggling with).  What is "PIM data"?  Which things are "personal
> information" that you're managing, as opposed to "apersonal
> information"?  You have ToDo entries, grouped in lists, some of which
> have times associated with them and thus get called "appointments".
> Does that cover it?  Then why didn't you say so?  ;)

Well, for instance, something that is *not* personal data is your example
of embedding spreadsheets in documents. Appointments, todo lists, contacts,
and any other data that deals specifically with *you* are personal information.
I think Glyph has also mentioned something about InstanceMessenger somehow
integrating with Twisted Pim, but I don't remember what for.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From carmstro at twistedmatrix.com  Sun Jul  8 22:25:23 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 9 Jul 2001 00:25:23 -0400
Subject: [Twisted-Python] TWN #2!
Message-ID: <20010709002523.A12506@Fookidla.org>

The second issue of Twisted Weekly News is up on the Twisted Matrix
web site. Check it out at http://twistedmatrix.com/pages/twn-2.html.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From jasbahr at twistedmatrix.com  Sun Jul  8 23:38:28 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Mon, 9 Jul 2001 00:38:28 -0500
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <20010708012446.A8918@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMAEHHGPAA.jasbahr@twistedmatrix.com>

Greetings,

Palm's latest desktop app has a new look:

http://www.palm.com/software/desktop/

A Twisted app which could match Palm's level of personal
information organization would be good, one that could
surpass it would be great.

I've used paper-based Franklin Planners, the original
Apple Newton, the Palm III, and currently loving the
Kyocera Palm/cellphone combo unit (with Internet access,
oh yeah).

I spend 80% of my time with the Palm in the Memos
section, 15% in Addresses, 5% in Calendar, and 0%
in Todos.  Not that I don't keep todos, it's just
that the one built into the Palm suite is too limited.
(I keep them in various memo categories.)

When I'm sitting in front of a computer, I have the
Palm desktop app open.  When I get up, I sync and
have the Palm with me.  The Palm bridges data between
computers that I use.  Activity logs, ideas, project
meta-information, notes, web links are all there,
part of the seamless information space formed between
the desktop apps and the portable device.  From this
perspective, the device is far less important than the
information space, it can be seen as merely one view
into that space.

In addition to the basic Palm apps, I use a piece
of software called 'Secret!', which has a Palm-hosted
app, a desktop-front end, and a conduit to connect
the two.  It acts as a (simple) memo app, but it
encrypts that data for true privacy:

http://linkesoft.com/english/secret/

Strong encryption is a requirement for any personal
information application.

Also, there's some really interesting functionality
being developed by the oddly named folks, Llama
Graphics:

http://www.llamagraphics.com/

Their app is called "Life Balance", which claims to be
"the first personal productivity application designed to help Palm users go
beyond conventional planning systems to not only manage their time but to
achieve balance between the often conflicting demands of career and personal
life."

They don't have the desktop front-end ready, but will
RSN.  When they do, it will probably be a tool worth
evaluating.

There are still good ideas to extract from the Franklin
Planner people, especially their diverse set of forms
for various specialized purposes.  Hmm... Checking the
site now, they have a new app called 'One Place' which
does some interesting indexing and cross-referencing
of your hard drive and documents, behold the intensely
cheesy demo:

http://www.franklincovey.com/oneplace/demo.html

Jason







From glyph at twistedmatrix.com  Sun Jul  8 23:44:48 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jul 2001 00:44:48 -0500 (CDT)
Subject: [Twisted-Python] Twisted.pim
In-Reply-To: <EIEFLCFECLLBKGPNJJIMAEHHGPAA.jasbahr@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107090040050.31874-100000@zaibach.twistedmatrix.com>

On Mon, 9 Jul 2001, Jason L. Asbahr wrote:

> I spend 80% of my time with the Palm in the Memos section, 15% in
> Addresses, 5% in Calendar, and 0% in Todos.  Not that I don't keep
> todos, it's just that the one built into the Palm suite is too
> limited. (I keep them in various memo categories.)

  [snip]

In case that whole schpiel didn't speak for itself, I have to say that I
consider Jason somewhat of a domain expert in the PIM space :).  
Whoever's writing code for this PIM thing, I strongly suggest you pick his
brain (or better yet -- somehow trick him into writing code! ^_^).  I
would like to at least avoid making the *same* design mistakes previous
platforms have made.

I do think it's interesting to note that arguably the most useful app on
the Palm is the memo pad; I think that the semantics of memos are almost
completely isomorphic to a directory structure.  Is there anything else
that they do which I don't know about?




                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From glyph at twistedmatrix.com  Mon Jul  9 00:10:48 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 9 Jul 2001 01:10:48 -0500 (CDT)
Subject: [Twisted-Python] Flag Day
In-Reply-To: <15IwW9-1Gy3nMC@fwd01.sul.t-online.com>
Message-ID: <Pine.LNX.4.21.0107090108590.352-100000@zaibach.twistedmatrix.com>

There is a new CVS repository now, module "Twisted".  I don't expect to
have a setup.py for this version, but thanks for your efforts so far!

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph

On Sat, 7 Jul 2001, Juergen Hermann wrote:

> On Sat, 7 Jul 2001 12:56:00 -0500 (CDT), Glyph Lefkowitz wrote:
> 
> >On Sunday, I plan to do a release of Twisted-0.9.0; things are looking
> >like they're on track for that.
> 
> If you want a setup.py for that, you have to act NOW. Is the new CVS
> module in place, where is it, ...?
> --
> Juergen Hermann, Karlsruhe, Germany | IRC: snibril
> 
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 





From jasbahr at twistedmatrix.com  Mon Jul  9 19:00:14 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Mon, 9 Jul 2001 20:00:14 -0500
Subject: [Twisted-Python] OpenCyc
In-Reply-To: <Pine.LNX.4.21.0107090108590.352-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMCEIIGPAA.jasbahr@twistedmatrix.com>

Folks,

I had an excellent -- and long -- meeting today with the 
people behind the OpenCyc effort at Cycorp.  I'm very
interested in using knowledge bases like Cyc to advance 
the state of the art of massively multiplayer virtual 
worlds.  I believe that the next wave of MMPVR will employ 
knowledge bases to capture game abstractions, rules, 
and semantics.  The Cyc folks are very interested in 
helping with that effort.  

Naturally, integrating Cyc with Twisted seems like the 
right way to pursue this.  :-)  

Y'all probably read the article that was posted on Slashdot
awhile back, but here it is again:

www.latimes.com/business/cutting/lat_cyc010621.htm

and the main sites:

http://www.cyc.com
http://www.opencyc.org

The Cycorp folks are going to develop a Python interface
to Cyc, and we'll be getting access to early releases of
OpenCyc here shortly.  I'd like whoever is interested in
this to read over the docs when they become available, and
to be prepared to submit feedback to the OpenCyc folks to
help them make the docs as useful as possible.

Cheers,

Jason





From carmstro at twistedmatrix.com  Mon Jul  9 22:06:56 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 10 Jul 2001 00:06:56 -0400
Subject: [Twisted-Python] OpenCyc
In-Reply-To: <EIEFLCFECLLBKGPNJJIMCEIIGPAA.jasbahr@twistedmatrix.com>
Message-ID: <20010710000656.A13251@Fookidla.org>

Ok, I'm very excited about this, but i'm just curious as to what examples
you might have come up with specifically for MM games. Mainly an AI thing
or an ontology engine, or both? By "ontology engine" I mean some kind of
system that will cause things to happen in the universe that lead to some
goal. Kinda like logic programming, I guess.

After thinking of this, I was reminded of an RPG project I read about
a while ago - Totality (http://sourceforge.net/projects/totality/). It's
got this "Conflict Generator" that really strikes me as something that
would work well with something like OpenCyc (even though I have no clue
as to what OpenCyc is or how it works ;)). Check out the docs section
for totality and read about the conflict generator. very interesting stuff.

Sorry for the brambling message, I need to get to sleep.

On Mon, Jul 09, 2001 at 08:00:14PM -0500, Jason L. Asbahr wrote:
> Folks,
> 
> I had an excellent -- and long -- meeting today with the 
> people behind the OpenCyc effort at Cycorp.  I'm very
> interested in using knowledge bases like Cyc to advance 
> the state of the art of massively multiplayer virtual 
> worlds.  I believe that the next wave of MMPVR will employ 
> knowledge bases to capture game abstractions, rules, 
> and semantics.  The Cyc folks are very interested in 
> helping with that effort.

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Tue Jul 10 06:41:56 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 10 Jul 2001 07:41:56 -0500 (CDT)
Subject: [Twisted-Python] Is everything speeding up, or am I slowing down?
Message-ID: <Pine.LNX.4.21.0107100713550.16442-100000@zaibach.twistedmatrix.com>

Twisted version 0.9.0 is available, and the main TwistedMatrix.com website
is running it!

This release drops "Python" from the project's name; this will hopefully
reduce confusion, and underscore the fact that we hope Twisted to be a
cross-language environment.

This release is bringing some cool functionality to Twisted.  Perspective
Broker is the culmination of my research and experimentation with RPC
protocols.  For those of you who remember it, this includes the original
'faucet' protocol, the obscure "V3" protocol, and both incarnations of
Gloop; my extensive experiences with RMI, a bit of tinkering with XMLRPC,
and my confusion at the sprawling standards base that is CORBA...

I believe that PB will be a foundation for much of what makes Twisted
really interesting in the coming releases.  This evaluation is borne out
by the fact that Allen has found it sufficiently interesting that he's
already (before the release!) ported the encoding layer (banana) to 2
other languages!  This is the first step towards cross-language
compatibility.

In other news, I am now with a company called Ninjaneering, where I may be
leveraging some of the technology that we've built with Twisted.  Have no
fear, though!  The Ninjas are very cool folks; the code will remain under
my copyright control, and therefore released as LGPL.  Some of you may
recognize a fellow Ninjaneer, Sean Riley, the author of PyUI, in the
CREDITS for this release.  I am *very* glad I managed to rope Sean into
helping me out with this code ;)

I would like to put out a call for documentation at this point -- if any
one of you out there knows enough to write a Twisted tutorial, or even a
part of one, please do so :).  The old "Philosophical Tutorial" has fallen
seriously out of date as of this release and so it's been taken off the
web.  Even if you can't write a tutorial, simple patches correcting or
adding docstrings would be greatly appreciated; I'd like the documentation
to be clear, consistent, and concise, and right now it's somewhat of a
mess and I find I don't have enough time to work on it.

That's all for this release.  Thanks for tuning in.






From j.her at t-online.de  Wed Jul 11 01:08:03 2001
From: j.her at t-online.de (Juergen Hermann)
Date: Wed, 11 Jul 2001 09:08:03 +0200
Subject: [Twisted-Python] Traceback
Message-ID: <15KE6T-24WABkC@fwd02.sul.t-online.com>

10/Jul/2001 20:07 CDT [-]: Traceback (most recent call last):
10/Jul/2001 20:07 CDT [-]:   File
"/home/jh/lib/python/twisted/internet/main.py", line 163, in doSelect
10/Jul/2001 20:07 CDT [-]:     why = getattr(selectable, method)()
10/Jul/2001 20:07 CDT [-]:   File
"/home/jh/lib/python/twisted/internet/process.py", line 220, in doWrite
10/Jul/2001 20:07 CDT [-]:     return CONNECTION_DONE
10/Jul/2001 20:07 CDT [-]: NameError: There is no variable named
'CONNECTION_DONE'                                             





From glyph at twistedmatrix.com  Wed Jul 11 14:49:50 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 11 Jul 2001 15:49:50 -0500 (CDT)
Subject: [Twisted-Python] Traceback
In-Reply-To: <15KE6T-24WABkC@fwd02.sul.t-online.com>
Message-ID: <Pine.LNX.4.21.0107111549310.32275-100000@zaibach.twistedmatrix.com>

I think this should be fixed in the current CVS...

On Wed, 11 Jul 2001, Juergen Hermann wrote:

> 10/Jul/2001 20:07 CDT [-]: Traceback (most recent call last):
> 10/Jul/2001 20:07 CDT [-]:   File
> "/home/jh/lib/python/twisted/internet/main.py", line 163, in doSelect
> 10/Jul/2001 20:07 CDT [-]:     why = getattr(selectable, method)()
> 10/Jul/2001 20:07 CDT [-]:   File
> "/home/jh/lib/python/twisted/internet/process.py", line 220, in doWrite
> 10/Jul/2001 20:07 CDT [-]:     return CONNECTION_DONE
> 10/Jul/2001 20:07 CDT [-]: NameError: There is no variable named
> 'CONNECTION_DONE'                                             


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From carmstro at twistedmatrix.com  Fri Jul 13 11:41:26 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Fri, 13 Jul 2001 12:41:26 -0500
Subject: [Twisted-Python] bugs
Message-ID: <20010713124126.A2848@twistedmatrix.com>

Ok, i've found the following bugs while figuring out why my personal
webserver is not working.

1) in daemon mode, twistd is closing oldstdout, which later is needed if
an exception is raised. (there's a traceback print on oldstdout)

2) skt.bind() in twisted/internet/tcp.py will fail if ~/.twisted-web-pb exists.
I guess when the server is shut down it should delete this file.

3) Something else, after working around these two bugs, is preventing the
personal webservers to work.




From jasbahr at onebox.com  Fri Jul 13 13:34:54 2001
From: jasbahr at onebox.com (Jason Asbahr)
Date: Fri, 13 Jul 2001 14:34:54 -0500
Subject: [Twisted-Python] Ontology Links from the OpenCyc List
Message-ID: <20010713193454.NXNX3258.mta06.onebox.com@onebox.com>

Background material for your reading pleasure:

"
A complete list of ontology related web links is http://www.cs.utexas.edu/users/mfkb/related.html


The OpenCyc ontology is a an update and amplification of the Cyc Upper
Ontology whose tutorial is http://www.cyc.com/cyc-2-1/intro-public.html

"

J







From glyph at twistedmatrix.com  Fri Jul 13 13:36:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 13 Jul 2001 14:36:24 -0500 (CDT)
Subject: [Twisted-Python] bugs
In-Reply-To: <20010713124126.A2848@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107131433300.10423-100000@zaibach.twistedmatrix.com>

On Fri, 13 Jul 2001, Chris Armstrong wrote:

> 1) in daemon mode, twistd is closing oldstdout, which later is needed if
> an exception is raised. (there's a traceback print on oldstdout)

This is debugging info which at worst will make nothing happen and at
best will help us debug obscure problems with logging :)

> 2) skt.bind() in twisted/internet/tcp.py will fail if
> ~/.twisted-web-pb exists. I guess when the server is shut down it
> should delete this file.

It does, if it shuts down cleanly.  And that's not really a file, it's a
socket; closing it removes the "file".

> 3) Something else, after working around these two bugs, is preventing the
> personal webservers to work.

I believe you should be able to manually change the permissions on your
~/.twisted-web-pb socket to 777; this is necessary for the www-data user
to be able to open/read from/write to it.  This isn't *really* a bug; I
suppose that it should automatically set your umask when binding a unix
socket; I confess that I don't quite understand why this is happening,
since it seemed to work before and I never had any umask-tweaking code, to
my knowledge.


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From jasbahr at twistedmatrix.com  Fri Jul 13 17:41:28 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Fri, 13 Jul 2001 18:41:28 -0500
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <Pine.LNX.4.21.0107111549310.32275-100000@zaibach.twistedmatrix.com>
Message-ID: <EIEFLCFECLLBKGPNJJIMEEMMGPAA.jasbahr@twistedmatrix.com>

Random thought of the day:

Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
views onto my the data that I'm carrying around.  One Palm Desktop
window into the data is restrictive.  

J








From carmstro at twistedmatrix.com  Sat Jul 14 09:36:03 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Sat, 14 Jul 2001 11:36:03 -0400
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <EIEFLCFECLLBKGPNJJIMEEMMGPAA.jasbahr@twistedmatrix.com>
Message-ID: <20010714113602.A18216@Fookidla.org>

On Fri, Jul 13, 2001 at 06:41:28PM -0500, Jason L. Asbahr wrote:
> Random thought of the day:
> 
> Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
> views onto my the data that I'm carrying around.  One Palm Desktop
> window into the data is restrictive.  
> 
> J

Ok, first off, what's SIS?

If you're talking about TwistedPim, then we do plan on having multiple GUIs
for whatever pim interfaces you want (web, Palm, GTK+..).
*Are* you talking about TwistedPim?

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From jasbahr at twistedmatrix.com  Sat Jul 14 10:29:48 2001
From: jasbahr at twistedmatrix.com (Jason L. Asbahr)
Date: Sat, 14 Jul 2001 11:29:48 -0500
Subject: [Twisted-Python] Seamless Information Space
In-Reply-To: <20010714113602.A18216@Fookidla.org>
Message-ID: <EIEFLCFECLLBKGPNJJIMGENDGPAA.jasbahr@twistedmatrix.com>

Chris, 

It's in the subject line.  :-)  S.I.S. is just my way of 
referring to that data I carry around in the Palm and access 
with the Palm Desktop, which could someday in the future be 
replaced by some set of objects running in Twisted, including 
Twisted PIM.  "Seamless information space" describes an
experience of relating to the data, as not having the data 
be *a* file on *that* computer, but as an integrated set of
data that you can access anywhere, even if you are offline
(like on the Palm).

To clarify my previous statement, I meant that it would be 
cool to have multiple _simultaneous_ views into the same 
information space, which being client-server, shouldn't
be a problem, right?  It could be multiple web browsers,
I suppose, or multiple GTK+ clients.  

An example of that idea in the Palm Desktop case would be
to have two or more instances of Desktop visible, each 
displaying different categories of data, so you can work
in different data contexts without flipping back and forth.

Roughly, the virtual equivalent of having several books
open on your desk to just the right spot in each.

The Palm Desktop currently isn't designed to let you do
that, and that limitation can be frustrating.

How is TwistedPim coming along?

J  


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Chris
Armstrong
Sent: Saturday, July 14, 2001 10:36 AM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] Seamless Information Space


On Fri, Jul 13, 2001 at 06:41:28PM -0500, Jason L. Asbahr wrote:
> Random thought of the day:
> 
> Speaking of S.I.S., ;-), I'm finding that I really want *multiple* 
> views onto my the data that I'm carrying around.  One Palm Desktop
> window into the data is restrictive.  
> 
> J

Ok, first off, what's SIS?

If you're talking about TwistedPim, then we do plan on having multiple GUIs
for whatever pim interfaces you want (web, Palm, GTK+..).
*Are* you talking about TwistedPim?

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From z3p at MailAndNews.com  Sat Jul 14 16:27:14 2001
From: z3p at MailAndNews.com (z3p)
Date: Sat, 14 Jul 2001 18:27:14 -0400
Subject: [Twisted-Python] twisted.protcols.toc
Message-ID: <3B61F539@MailAndNews.com>

I've been talking about this in #python for a while, and I finally got around 
to doing it.  It works as a TOC server, but only implements IM and the buddy 
list right now.  It doesn't authenticate to the big AIM server, but there is a 
function (TOC.authenticate()) that gets called to check if the user can log in 
with the username and password given.  No client in the file yet, I'm going to 
finish all the server options first, and then do the client.

URL: http://www.z3p.f2s.com/download/code/twisted/toc.py
Drop it in twisted/protocols, and creating mktocserver was easy, just stole it 
from mkircserver.

-z

---------------------
(o_       z3p at z3p.org
//\       www.z3p.org
V_/_

"All animals are equal, but some are more equal than others." - Animal Farm, George Orwell





From glyph at twistedmatrix.com  Mon Jul 16 15:18:43 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 16 Jul 2001 16:18:43 -0500 (CDT)
Subject: [Twisted-Python] twisted.protcols.toc
In-Reply-To: <3B61F539@MailAndNews.com>
Message-ID: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>

On Sat, 14 Jul 2001, z3p wrote:

> I've been talking about this in #python for a while, and I finally got around 
> to doing it.  It works as a TOC server, but only implements IM and the buddy 
> list right now.  It doesn't authenticate to the big AIM server, but there is a 
> function (TOC.authenticate()) that gets called to check if the user can log in 
> with the username and password given.  No client in the file yet, I'm going to 
> finish all the server options first, and then do the client.
> 
> URL: http://www.z3p.f2s.com/download/code/twisted/toc.py
> Drop it in twisted/protocols, and creating mktocserver was easy, just stole it 
> from mkircserver.

Wow, this is pretty cool!

I'm not too familiar with TOC; is it a distributed protocol, where you can
actually have TOC subservers authenticating with the main TOC server?  

I'm not sure I've got a use for this program yet, but it's fun to know we
have it :)


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From z3p at mailandnews.com  Mon Jul 16 19:42:32 2001
From: z3p at mailandnews.com (z3p)
Date: Mon, 16 Jul 2001 21:42:32 -0400
Subject: [Twisted-Python] twisted.protcols.toc
In-Reply-To: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107161615570.5008-100000@zaibach.twistedmatrix.com>
Message-ID: <20010716214231.A866@mailandnews.com>

On Mon, Jul 16, 2001 at 04:18:43PM -0500, Glyph Lefkowitz wrote:
> Wow, this is pretty cool!
> 
> I'm not too familiar with TOC; is it a distributed protocol, where you can
> actually have TOC subservers authenticating with the main TOC server?  

To the best of my knowledge, the main TOC server doesn't do this.  However, I'm fairly sure that the twisted version could be made to.

> I'm not sure I've got a use for this program yet, but it's fun to know we
> have it :)

Also, a newer version is online (http://www.z3p.f2s.com/download/code/twisted/toc.py) along with a unittest for it (http://www.z3p.f2s.com/download/code/twisted/test_toc.py).  I'll probably get around to starting the client later tonight or tommorow.

-p

-- 
(o_	http://www.z3p.f2s.com/
//\     z3p at mailandnews.com
U_/_    AIM: z3penguin

GPG print: 353A 4103 FFDD A6A2 85CE  06D5 6F48 D823 BDD9 A668 
Key ID: 0xBDD9A668
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20010716/f8b7b822/attachment.sig>

From carmstro at twistedmatrix.com  Tue Jul 17 16:54:49 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Tue, 17 Jul 2001 18:54:49 -0400
Subject: [Twisted-Python] TWN #3!
Message-ID: <20010717185449.A2414@Fookidla.org>

The Twisted Weekly News
=======================

3rd Issue. Monday, July 16, 2001
QOTW:

  <lyn:#lisp> making things fast generally seems to involve trading space for
  time
  <dan`b:#lisp> not so!  you're thinking like a typical lisp programer
  <dan`b:#lisp> you can also trade correctness, like any self-respecting C
  hacker


Welcome to the 3rd issue of the Twisted Weekly News! This issue was slightly
late due to the absent-mindedness and exhaustion of the author.

= Progress =

There have been a few interesting developments this week.

* Twisted 0.9.0: The latest version[1] of Twisted was released early last week!
  congrats to Glyph for doing a *huge* refactoring on the Twisted directory
  hierarchy for this release.
* Twisted IRC: An implementation of a Twisted IRC server slipped between the
  cracks this week, with not very much fanfare. I tested it out, and I could
  log on with x-chat and do some basic IRC things. Very cool!
* The Twisted Philosophy FAQ: Chris Armstrong wrote the Twisted Philosophy 
  FAQ[2] this week. Glyph gave a word of approval on the FAQ and made Chris 
  a very happy boy. ;-)
* Twisted banana ports: Allen Short, in a cloud of smoke, ported[3] banana to
  Mozart/Oz and Common Lisp. This is finally opening up Twisted to be a cross-
  language standard.


= Mailling List Activity =

There's been some interesting activity this week. Here's a summary.

* Is everything speeding up, or am I slowing down?: Glyph posted[4] one of his
  signature long, revealing posts about what's been going on in his life and
  the life of Twisted. He revealed that he is with a company named
  Ninjaneering, and may be using Twisted there in his job. He also said that
  they agreed to leaving the copyright in his name, so us Twisted folks don't
  have to worry about those corporate bastards. ;-) Finally, he requested that
  the Twisted developers start concentrating more on documentation. Twisted is
  coming more into the public eye, and we need to look good.
* Seamless Information Space: Jason Asbahr had a few comments[5] on some
  philosophical[6] ideas behind information management.
* OpenCyc: Jason Asbahr posted[7] about a meeting he had with some of the people
  involved in the OpenCyc[8] project, and what it boils down to is that he wants
  to integrate OpenCyc with Twisted. This would lead to some interesting
  developments, especially for Reality. Chris Armstrong replied[9] with a 
  pointer to another project with interesting Ontological goals that has 
  produced a few papers on ontology in online games.
* twisted.protcols.toc: It seems z3p has been developing a TOC protocol
  implementation for Twisted behind our backs! TOC is one of the protocols that
  the AOL Instant Messenger uses. This is the Cool Thing of the Week, so see
  below for more information.


= Cool Thing Of the Week: =
Twisted TOC

z3p, who usually hangs out on #python at ircnet, has been development a TOC
protocol implementation for Twisted. This is a very interesting and exciting
development. The server portion of the protocol is functional, and after he
irons out some of the issues with that, he'll implement the client part. The
client is of special interest to a few of us Twisted folks, as it will probably
be useful for AIM connectivity through Instance Messenger. The code is
available here[10] (That module belongs in the twisted/protocols directory) and a
unit test here[11] (which goes in twisted/test).

A round of applause for z3p for this unexpected and appreciated contribution!
Ok, that's it for this week. Thanks for reading!

Chris Armstrong[12]

References
[1] http://www.twistedmatrix.com/downloads/Twisted-0.9.0.tar.gz
[2] http://www.twistedmatrix.com/page.epy/twistedphil.html
[3] http://www.twistedmatrix.com/users/washort/
[4] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000123.html
[5] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000129.html
[6] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000131.html
[7] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000121.html
[8] http://www.opencyc.org
[9] http://www.twistedmatrix.com/pipermail/twisted-python/2001-July/000122.html
[10] http://www.z3p.f2s.com/download/code/twisted/toc.py
[11] http://www.z3p.f2s.com/download/code/twisted/test_toc.py
[12] carmstro at twistedmatrix.com

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From glyph at twistedmatrix.com  Thu Jul 19 03:52:11 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jul 2001 04:52:11 -0500 (CDT)
Subject: [Twisted-Python] ANN: I am the end of all your dreams.
Message-ID: <Pine.LNX.4.21.0107190340500.12032-100000@zaibach.twistedmatrix.com>

DARKNESS AT THE END OF TIME (AP): The increasingly infamous "Twisted"
internet infrastructure suite from Twisted Matrix Laboratories got another
revision today, at version 0.9.1.  During a routine rearranging of the
web-site in preparation for the release, the software's much touted
"ability to destroy the sun" was accidentally triggered, causing the star
at the center of our solar system to implode violently and extinguish
itself.  Prepared for just such an eventuality, Chris Armstrong -- a
spokesperson for Twisted Matrix -- announced that the "enterprise edition"
of Twisted-0.9.2 will "come packaged with three free `ability to restore
the sun' support incidents, for the modest price of 3 quintillion standard
galactic credits".

While many were quick to cast the solar vandals in a poor light, a
little-known, but influential, political group, the "Pittsburgh Society of
Underwriters", promptly made a public statement in Twisted's defense; that
"far graver threats to freedom and whitespace exist than those within our
small planetary orbit".  A spokesperson for the group, identified only as
"Tim"  said at a press conference (in a twangy, metallic voice), "Space
holds a terrible power".

Chief Reality Engineer Allen Short could not be reached for comment, but
sources close to the Matrix claim he was off-planet, visiting Hornclausica
IV, the enigmatic homeworld of Prolog programmers.

----

This release contains a few bugfixes for twisted.spread, a more stable
spreadable webserver, an actually functional IRC server.  Additionally the
tm.com website has been reorganized slightly (finally pythonic.org has a
different frontpage... ^_^).

I'd like to ask that anybody looking for something fun to do with twisted
start trying to break pb, especially its security.  I'm curious how it
will hold up to a real focused onslaught.

Until next time...


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From carmstro at twistedmatrix.com  Mon Jul 23 19:42:55 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 23 Jul 2001 21:42:55 -0400
Subject: [Twisted-Python] TWN #4!
Message-ID: <20010723214255.A1030@Fookidla.org>

The Twisted Weekly News
=======================

4th Issue. Monday, July 23, 2001
QOTW:

  <radix> scripts are just usually short programs that do a very specific thing
  <radix> that's why a lot of us people who use interpreted languages hate it
  when someone calls our language a "Scripting language" ;)
  <radix> (I mean, look at Twisted and call it a "script" with a straight face)

Welcome to the 4th issue of the Twisted Weekly News! This issue sees a new
format similar to Debian weekly news, where the editor just babbles on in
paragraph format.

Progress this week consists mainly of new Twisted releases -- there were three
patch-level releases in a period of 3 days. Other than that, not much has been
going on (which is why this TWN is so short).

* Twisted 0.9.1: This release saw some important bugfixes to the distributed
  web server, and the IRC implementation was introduced. Benjamin Bruheim also
  contributed an 'edna' derivative.
* Twisted 0.9.2: This one had some nifty feature improvements. Glyph completely
  remade gtknet from scratch, with a more robust design. It is now called
  inGTKernet. He also made logging nicer, and reintroduced the gtk faucet and
  updated reality for PB. The most interesting thing for this release, though,
  was probably twisted.python.rebuild, which raises the potential of how
  dynamic Twisted can be. Basically, it's an automatic reload() interface, but
  oh so much more. :-)
* Twisted 0.9.3: This saw a few bug fixes, as well as a parallel of inGTKernet
  for Tk, called tkinternet. The AOL TOC protocol implementation was officially
  brought into Twisted, and the debian package information was brought up-to-
  date.

Cool Thing of the Week:
twisted.python.rebuild

Glyph wrote twisted.python.rebuild this week, and it's a very cool module
indeed. It really opens up some possibilities for making Twisted super-dynamic.
Basically it's a wrapper around reload that you mixin with your classes, and it
allows updating the old code on the fly when you make modifications. I've
always found Twisted incredibly cool *because* of it's dynamic nature, and this
will help make it even more dynamic. Thanks Glyph!

Ok, that's it for this week. Thanks for reading!
Chris Armstrong <carmstro at twistedmatrix.com>

-- 
Chris Armstrong                        carmstro at twistedmatrix.com
http://twistedmatrix.com/~carmstro     carmstro at dynup.net




From acapnotic at twistedmatrix.com  Mon Jul 23 22:29:23 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 23 Jul 2001 21:29:23 -0700
Subject: [Twisted-Python] tcp.Port
Message-ID: <20010723212923.A3357@troglodyte.menefee>

it doesn't bother anyone else that you deal with unix sockets through
something named "tcp.Port"?  "TCP" has quite a specific meaning, after
all, and unix sockets are neither dependant on nor a subset of
TCPness...  

My first impulse would be to rename the tcp module to 'socket', but
that would probably b0rk stuff horribly due to collisions with the
standard 'socket' module.

-- 
"The naming of hosts is a serious matter,
 not just one of your holiday games..."
   -- RFC 2100, "The Naming of Hosts"




From glyph at twistedmatrix.com  Tue Jul 24 04:19:55 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jul 2001 05:19:55 -0500 (CDT)
Subject: [Twisted-Python] tcp.Port
In-Reply-To: <20010723212923.A3357@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0107240508210.18966-100000@zaibach.twistedmatrix.com>

On Mon, 23 Jul 2001, Kevin Turner wrote:

> it doesn't bother anyone else that you deal with unix sockets through
> something named "tcp.Port"?

Given that nobody answered your message, I'm going to guess "no" :)

> "TCP" has quite a specific meaning, after all, and unix sockets are
> neither dependant on nor a subset of TCPness...

UNIX sockets have the same semantics as TCP sockets; unlike, say, UDP
sockets.  I think that it makes sense to group them together, especially
since UNIX sockets are effectively an 'extension' to TCP sockets that's
only available on UNIX os's.

> My first impulse would be to rename the tcp module to 'socket', but
> that would probably b0rk stuff horribly due to collisions with the
> standard 'socket' module.

Indeed it would.  As I mentioned, the choice of naming was for the
semantics of TCP.  I suppose I could have called the module
'twisted.internet.streamed_ordered_garuanteed_delivery', but 'tcp' seems
more succinct :).


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From acapnotic at twistedmatrix.com  Sat Jul 28 13:26:08 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Sat, 28 Jul 2001 12:26:08 -0700
Subject: [Twisted-Python] Configuration, Persistance and Version Control
Message-ID: <20010728122608.A1933@troglodyte.menefee>

So, Tv and itamar were on channel today, asking about Twisted
philosophy, persistance, and configurability.  Lacking the
presence of anyone closer to the pure Twisted light, I tried
to be a good little minion and make the case...  But since
I'm the guy who doesn't quite believe in .spl files, I wasn't
able to be terribly convincing.

And now I could try to play his side of the argument with you guys,
but ya know, it'd be so much easier for me to just let his words do
the talking.  Scrollback excerpts:

<itamar|home> anyone who knows how twisted's config mechanism works?
<itamar|home> typically, glyph is on 24 hours a day unless I
          actually want to talk to a twisted developer
<Acapnotic> Wait, Twisted has a config mechanism?
<itamar|home> well, its server are persistent
<Acapnotic> right
<itamar|home> you coifgure them and then can pickle them to disk
<Acapnotic> right
<itamar|home> my question is: how do I configure them?
<itamar|home> can this mechanism be used with other software
          packages?
<Acapnotic> You load them up, set them, and re-pickle them.  You
          can also set them through the interactive python interface on the
          telnet server, say
<Acapnotic> Now somehow, Glyph claims that this is easier than
          having configuration files.
<Acapnotic> I am not yet convinced of that, however.
<itamar|home> I am
<itamar|home> my software right now needs either something like
          that or an XML config file
<itamar|home> which'll end up being a pickle equivalent anyway, so
          there's no point

[...]

<Acapnotic> itamar: Well, so far as I've been able to tell, there's
          not overmuch magic there.  'mkfooserver' just creates an instance
          of a server object and pickle.dumps it, twistd just pickle.loads it
          and invokes its the run() method.
<itamar|home> Acapnotic: well, my configs are pretty complex
<Tv> Acapnotic: But all that does is make your "config settings"
          into "command line settings".
<Tv> I don't see it making things very easy.
<Tv> And think about version upgrades.

[...]

<Tv> I see trouble with the approach; mostly losing the unix
          ubiquitousness (sp?). I can grep my config files; I store them in
          CVS.
<Tv> DavidC_: You want every program to contain some UI or command
          mechanism to fully configure it.
<Tv> There's a lot of things I'd wish someone would spell out about
          twisted. One thing is "how do I version control my configuration?"
<Tv> And don't give a trivial example..
<Tv> I have multi-hundred-line config files here.
<Tv> Shared between n hosts, via CVS.
<Tv> I'd love to hear more of the twisted philosophy..

[...]

<Tv> Personally, I have _needed_ programmability in config files
          many times.

[...]

<Tv> Acapnotic: Oh, I like version control. I wish I could put more
          things into it.
<Tv> Have you ever screwed up a config file?
<Tv> Have you ever downgraded something, and found out it won't
          understand the new config file, and had to recreate the config to
          match the older version?
<Tv> The same reasons you version control source code.

<Acapnotic> tv: you should post to the list at
          twisted-python at twistedmatrix.com
<Tv> Acapnotic: I'm not following any more lists until I have
          migrated my mail to another domain :)
<Acapnotic> tv: bah, you don't have to follow it, just post ;)

[...]

<Acapnotic> Tv: so if you want programmable config, is there a
          problem with just using python?  In which case your configuration
          process is a script that does "app = pickle.load(...) app['web'].
          port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app, 
          ...) ?
<Tv> Acapnotic: That may very well be what I'd do. But then the
          mechanism needs to support _both_ getting config programmatically
          and state from pickle, at the same time.
<Acapnotic> Well, if I follow this train, there is only the state
          of the application, since it is persistant.  That state may be
          changed or examined programmaticly.
<Tv> I see something beautiful there, but..
<Tv> noone has yet explained persistence to me well enough to
          convince me.
<Acapnotic> but what happens when you upgrade?  heh.
<Tv> What if a buggy program corrupts its state?
<Tv> Then you lose your config file also.
<Tv> There needs to be something else.
<Tv> Something that is less volatile.
<DavidC_> what do you mean? both config and state are the same
          thing.
<Tv> No.
<Tv> config changes when *I* say it changes.
<itamar|home> nah, config is parsed and then "rendered" into state
<Tv> program can change it's state as it wants.
<Tv> Any bug in program must never change the port to bind to.
<Tv> :)
<Tv> I see config as sort of a factory for initial program states,
          if you want to put it that way.
<itamar|home> lets say by mistake someone does "del serverInstace.
          port"
<itamar|home> and then shuts down the server
<itamar|home> the pickled state is now wrong
<DavidC_> well that would be a bug.
<itamar|home> the point is that if you have an external, version
          controleld config file
<itamar|home> these bugs don't bite you, or even if they do at
          least they don't effect the configuration





From matsaleh at austin.rr.com  Sat Jul 28 14:37:00 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Sat, 28 Jul 2001 15:37:00 -0500
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <20010728122608.A1933@troglodyte.menefee>
Message-ID: <000401c117a5$0d54aba0$7100a8c0@tomservo>

Hmmm. Interesting context for the assignment Glyph just gave me - come up
with a friendly and robust config system for servers. I'm just coming up to
speed, so I have nothing to contribute yet, but I'm eager and this is a good
set of questions to begin with.

Sounds like one problem to solve is to differentiate between the initial
state with which you start/construct a server and the runtime state that
evolves during the use of the server, which is pickled. We need a robust and
easy way to a) establish the initial state (a la configure a server) and b)
enable that state to be saved and re-used in the future (e.g. kept in CVS or
other source control) while c) not mucking with the persistability of the
runtime state.

As I said, I am a twisted neophyte, so I'm going to spend much time learning
and listening and experimenting for a while first, but thanks for brining
the topic up.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kevin Turner
Sent: Saturday, July 28, 2001 2:26 PM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Configuration, Persistance and Version Control


So, Tv and itamar were on channel today, asking about Twisted
philosophy, persistance, and configurability.  Lacking the
presence of anyone closer to the pure Twisted light, I tried
to be a good little minion and make the case...  But since
I'm the guy who doesn't quite believe in .spl files, I wasn't
able to be terribly convincing.

And now I could try to play his side of the argument with you guys,
but ya know, it'd be so much easier for me to just let his words do
the talking.  Scrollback excerpts:

<itamar|home> anyone who knows how twisted's config mechanism works?
<itamar|home> typically, glyph is on 24 hours a day unless I
          actually want to talk to a twisted developer
<Acapnotic> Wait, Twisted has a config mechanism?
<itamar|home> well, its server are persistent
<Acapnotic> right
<itamar|home> you coifgure them and then can pickle them to disk
<Acapnotic> right
<itamar|home> my question is: how do I configure them?
<itamar|home> can this mechanism be used with other software
          packages?
<Acapnotic> You load them up, set them, and re-pickle them.  You
          can also set them through the interactive python interface on the
          telnet server, say
<Acapnotic> Now somehow, Glyph claims that this is easier than
          having configuration files.
<Acapnotic> I am not yet convinced of that, however.
<itamar|home> I am
<itamar|home> my software right now needs either something like
          that or an XML config file
<itamar|home> which'll end up being a pickle equivalent anyway, so
          there's no point

[...]

<Acapnotic> itamar: Well, so far as I've been able to tell, there's
          not overmuch magic there.  'mkfooserver' just creates an instance
          of a server object and pickle.dumps it, twistd just pickle.loads
it
          and invokes its the run() method.
<itamar|home> Acapnotic: well, my configs are pretty complex
<Tv> Acapnotic: But all that does is make your "config settings"
          into "command line settings".
<Tv> I don't see it making things very easy.
<Tv> And think about version upgrades.

[...]

<Tv> I see trouble with the approach; mostly losing the unix
          ubiquitousness (sp?). I can grep my config files; I store them in
          CVS.
<Tv> DavidC_: You want every program to contain some UI or command
          mechanism to fully configure it.
<Tv> There's a lot of things I'd wish someone would spell out about
          twisted. One thing is "how do I version control my configuration?"
<Tv> And don't give a trivial example..
<Tv> I have multi-hundred-line config files here.
<Tv> Shared between n hosts, via CVS.
<Tv> I'd love to hear more of the twisted philosophy..

[...]

<Tv> Personally, I have _needed_ programmability in config files
          many times.

[...]

<Tv> Acapnotic: Oh, I like version control. I wish I could put more
          things into it.
<Tv> Have you ever screwed up a config file?
<Tv> Have you ever downgraded something, and found out it won't
          understand the new config file, and had to recreate the config to
          match the older version?
<Tv> The same reasons you version control source code.

<Acapnotic> tv: you should post to the list at
          twisted-python at twistedmatrix.com
<Tv> Acapnotic: I'm not following any more lists until I have
          migrated my mail to another domain :)
<Acapnotic> tv: bah, you don't have to follow it, just post ;)

[...]

<Acapnotic> Tv: so if you want programmable config, is there a
          problem with just using python?  In which case your configuration
          process is a script that does "app = pickle.load(...) app['web'].
          port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app,
          ...) ?
<Tv> Acapnotic: That may very well be what I'd do. But then the
          mechanism needs to support _both_ getting config programmatically
          and state from pickle, at the same time.
<Acapnotic> Well, if I follow this train, there is only the state
          of the application, since it is persistant.  That state may be
          changed or examined programmaticly.
<Tv> I see something beautiful there, but..
<Tv> noone has yet explained persistence to me well enough to
          convince me.
<Acapnotic> but what happens when you upgrade?  heh.
<Tv> What if a buggy program corrupts its state?
<Tv> Then you lose your config file also.
<Tv> There needs to be something else.
<Tv> Something that is less volatile.
<DavidC_> what do you mean? both config and state are the same
          thing.
<Tv> No.
<Tv> config changes when *I* say it changes.
<itamar|home> nah, config is parsed and then "rendered" into state
<Tv> program can change it's state as it wants.
<Tv> Any bug in program must never change the port to bind to.
<Tv> :)
<Tv> I see config as sort of a factory for initial program states,
          if you want to put it that way.
<itamar|home> lets say by mistake someone does "del serverInstace.
          port"
<itamar|home> and then shuts down the server
<itamar|home> the pickled state is now wrong
<DavidC_> well that would be a bug.
<itamar|home> the point is that if you have an external, version
          controleld config file
<itamar|home> these bugs don't bite you, or even if they do at
          least they don't effect the configuration



_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From m at moshez.org  Sat Jul 28 16:19:48 2001
From: m at moshez.org (Moshe Zadka)
Date: Sun, 29 Jul 2001 01:19:48 +0300
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <000401c117a5$0d54aba0$7100a8c0@tomservo>
References: <000401c117a5$0d54aba0$7100a8c0@tomservo>
Message-ID: <E15QcR2-0008Az-00@darjeeling>

On Sat, 28 Jul 2001, "Matthew Walker" <matsaleh at austin.rr.com> wrote:

> Hmmm. Interesting context for the assignment Glyph just gave me - come up
> with a friendly and robust config system for servers. I'm just coming up to
> speed, so I have nothing to contribute yet, but I'm eager and this is a good
> set of questions to begin with.

Make sure you read the e-mails I've sent to this list about those
things...(it's all in the archives)
It included things like pluggable user-interfaces and conformance-checking.

-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From matsaleh at austin.rr.com  Sat Jul 28 18:36:06 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Sat, 28 Jul 2001 19:36:06 -0500
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <E15QcR2-0008Az-00@darjeeling>
Message-ID: <000001c117c6$74da6dc0$7100a8c0@tomservo>

Yes, thanks. I'll look at the archives. That is part of my "coming up to
speed".

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Saturday, July 28, 2001 5:20 PM
To: twisted-python at twistedmatrix.com
Cc: twisted-python at twistedmatrix.com
Subject: RE: [Twisted-Python] Configuration, Persistance and Version
Control


On Sat, 28 Jul 2001, "Matthew Walker" <matsaleh at austin.rr.com> wrote:

> Hmmm. Interesting context for the assignment Glyph just gave me - come up
> with a friendly and robust config system for servers. I'm just coming up
to
> speed, so I have nothing to contribute yet, but I'm eager and this is a
good
> set of questions to begin with.

Make sure you read the e-mails I've sent to this list about those
things...(it's all in the archives)
It included things like pluggable user-interfaces and conformance-checking.

--
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From glyph at twistedmatrix.com  Sun Jul 29 12:40:19 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 29 Jul 2001 13:40:19 -0500 (CDT)
Subject: [Twisted-Python] Configuration, Persistance and Version Control
In-Reply-To: <20010728122608.A1933@troglodyte.menefee>
Message-ID: <Pine.LNX.4.21.0107282348170.32721-100000@zaibach.twistedmatrix.com>

Kickin' it IRC style --

Here are some responses interspersed with the dialogue.  Hope this helps
:)

On Sat, 28 Jul 2001, Kevin Turner wrote:

> <itamar|home> you coifgure them and then can pickle them to disk

... OR you run them, depending on your requirements.  The default 'twistd'
binary does UNIX daemonization; but if you wanted to do an NT service,
you'd obviously have to have some different code.

> <Tv> Acapnotic: But all that does is make your "config settings"
>           into "command line settings".

It makes your *initial* "config settings" into "command line settings".  
Those scripts exist more for examples than for actual configuration; the
"settings" they provide are a small subset of the full set available in
the code.

> <Tv> I don't see it making things very easy.
> <Tv> And think about version upgrades.

We here at Twisted Matrix Laboratories have a commitment to backwards
compatibility :-).  *IF* we had more users, the 0.9.0 upgrade would have
gone much more smoothly; we actually had a backwards compatibility plan
and decided to forego it for efficiency because we (rightly) believed that
nobody would care.

My configuration (e.g. the www.twistedmatrix.com site) is fairly complex,
and I've been maintaining it with Twisted since the inception of
Twisted.Web (which I think was .7 or so).  It's never taken me more than 3
or 4 minutes to replicate this with simple python scripts.

> <Tv> I see trouble with the approach; mostly losing the unix
>           ubiquitousness (sp?). I can grep my config files; I store them in
>           CVS.

1: learn how to use add +kb :-)

2: use pickle's "text" mode.

3: version control a script which generates and runs your monumentally
byzantine configuration, then store THAT in cvs.

About option 3: radix, moshez, and I have been thinking about, and
prototyping configuration systems for quite a while.  I have yet to think
of a system which can't be easily beaten by "just using Python".  For
example, here's an example XML solution;

<Site name="myvhost">
 <NameVirtualHost>
  <Host name="myhost.com">
   <Resource>
    ...
   </Resource>
  </Host>
 </NameVirtualHost>
</Site>
...
<WebServer port=80 site="myvhost"/>

And here's the actual Twisted code which will do the same thing (I
haven't had an opportunity to test it, but you get the idea):

---
from twisted.web.server import Site
from twisted.web.vhost import NameVirtualHost
from twisted.internet.main impot Application
a = Application("web")
v = NameVirtualHost()
r = SomeResource(...)
v.addHost("myhost.com", r)
s = Site()
s.resource = v
a.listenOn(80, s)
---

It's equally concise *and* more flexible.

> <Tv> And don't give a trivial example..
> <Tv> I have multi-hundred-line config files here.
> <Tv> Shared between n hosts, via CVS.
> <Tv> I'd love to hear more of the twisted philosophy..

If you have multi-hundred-line configuration files some of which allow
programmability), I'm guessing that you have considerable applications
that are written in buggy half-thought-out programming languages with no
module systems and you're using version control as part of a crutch to
make up for their many and varied deficiencies.

Since Twisted will allow you to use Python (or save your configuration in
Pickles, which is usually more convenient -- keep in mind I use this
software myself; pickles are how I use it -- to configure your servers,
you can encapsulate parts of your configuration or segment it however you
like.  and VC it too.

> <Tv> Personally, I have _needed_ programmability in config files
>           many times.

And you've got it ;)

> <Tv> Acapnotic: Oh, I like version control. I wish I could put more
>           things into it.

Hopefully jasbahr will jump in here with a little comment about potential
future ideas for version control within Twisted itself... ;-)

> <Tv> Have you ever screwed up a config file?
> <Tv> Have you ever downgraded something, and found out it won't
>           understand the new config file, and had to recreate the config to
>           match the older version?
> <Tv> The same reasons you version control source code.

> <Acapnotic> tv: you should post to the list at
>           twisted-python at twistedmatrix.com
> <Tv> Acapnotic: I'm not following any more lists until I have
>           migrated my mail to another domain :)
> <Acapnotic> tv: bah, you don't have to follow it, just post ;)

I would *really* appreciate it if more people took advantage of resources
like the mailing list, and my personal email address :-), to resolve
issues like this.  Thanks, kevin, for posting this log!

> <Acapnotic> Tv: so if you want programmable config, is there a
>           problem with just using python?  In which case your configuration
>           process is a script that does "app = pickle.load(...) app['web'].
>           port = 8080 ; app.append(ChickenServer()) ; ... ; pickle.dump(app, 
>           ...) ?
> <Tv> Acapnotic: That may very well be what I'd do. But then the
>           mechanism needs to support _both_ getting config programmatically
>           and state from pickle, at the same time.

Just make your "configuration file" as described, except put "app.run()"
at the end of it.  This lets you do what "configuration" really is; e.g.
to make a customized version of the application for your site.

> <Acapnotic> Well, if I follow this train, there is only the state
>           of the application, since it is persistant.  That state may be
>           changed or examined programmaticly.

It's *optionally* persistent.

The point of Twisted's configuration philosophy is that "configuration" is
not really a disjoint set of options, but rather the custom development of
a personal application.  Twisted provides you with a big pile of very
well-developed pieces (so you hopefully don't have to spend time fixing
the little pieces while you're building your big one), but you still have
to put them together somehow.  The mk*server scripts provide one way to
do that; hopefully matsaleh's upcoming configuration protoserver will
allow it to be done interactively so that users can discover more aspects
of the software.

In eschewing the ubiquity of "configuration files" on UNIX, twisted also
eschews the necessity of dedicating a large body of code to parsing,
interpreting, and understanding an underpowered mini-language designed
only for talking to it.  "Configure" with python.  "Script" with python.  
"Code" with python.  "Debug" with python.

The twisted philosophy is that all of these tasks are inherently the same,
and are all complex enough to warrant a full-powered programming language.  
Event-based dynamic modification of a stateful system is what object
orientation was originally intended to do.

> <Tv> I see something beautiful there, but..
> <Tv> noone has yet explained persistence to me well enough to
>           convince me.
> <Acapnotic> but what happens when you upgrade?  heh.
> <Tv> What if a buggy program corrupts its state?
> <Tv> Then you lose your config file also.

This assumes you don't back up your original config file.  Why would you
throw it away?  If it were complex, I'd keep mine in CVS :)

> <Tv> There needs to be something else.
> <Tv> Something that is less volatile.
> <DavidC_> what do you mean? both config and state are the same
>           thing.
> <Tv> No.
> <Tv> config changes when *I* say it changes.

Config is *initial* state.  e.g. the state that you start the server up
with; so it changes whenever the program changes.  Or does anything.  You
can always stop the server and start from scratch again, but that doesn't
mean that bugs won't affect you.

> <itamar|home> nah, config is parsed and then "rendered" into state
> <Tv> program can change it's state as it wants.
> <Tv> Any bug in program must never change the port to bind to.

If the bug would change the persistent port, then it would change the
runtime port.  That seems like it would be pretty bad too :)

> <Tv> :)
> <Tv> I see config as sort of a factory for initial program states,
>           if you want to put it that way.

If one were to believe there is something beyond this that describes
"configuration", then they would be confused :-).  The *state* of the
server changes whenever it executes an action that causes state to change;
the difference between Twisted and other systems is that Twisted *can*
remember these changes to state automatically.  This state will not
replace your initial state, nor will it prevent you from writing scripts
which create the initial state each time that the server is run.

The reason I suggest the pickle-the-state approach is because if you make
a change to the "configuration" as the server is running, you can change
it *live*, test it, etc, and know that when the server comes up next time,
it'll start the same way, rather than having to change your "factory",
shut down your server and start it again, or make the change to your
factory and your runtime state concurrently and take the risk that they'll
be different.

> <itamar|home> lets say by mistake someone does "del serverInstace.
>           port"
> <itamar|home> and then shuts down the server
> <itamar|home> the pickled state is now wrong

The pickled state that the server saved *when it shut down* is now wrong.  
The initial state (what *I* consider the "configuration") is still
correct; but you now have the corrupt state to study as well (so you can
figure out what happened with information beyond the log.)

> <DavidC_> well that would be a bug.
> <itamar|home> the point is that if you have an external, version
>           controleld config file
> <itamar|home> these bugs don't bite you, or even if they do at
>           least they don't effect the configuration

In conclusion, "so do that then" :).

I still don't understand how a pickled file isn't "external".  It's not
like it gets mmap'd when you start the Python process and then
automatically overwritten after every action that happens :)

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From carmstro at twistedmatrix.com  Mon Jul 30 12:46:18 2001
From: carmstro at twistedmatrix.com (Chris Armstrong)
Date: Mon, 30 Jul 2001 13:46:18 -0500
Subject: [Twisted-Python] "Ports" vs. "Listeners"
Message-ID: <20010730134618.A24110@twistedmatrix.com>

I really do not like that we call our "servers" "Ports". I think a much
better term would be "Listener". I've talked to glyph before about this,
and he's  usually been too busy to discuss it with me (at least, that's what
*he* says...), so here it is on the list. What's wrong with using "Listener"?

A lot of people get confused by the term "Port". When they think "Port",
they don't necessarily think of "something that sits on a port, and listens
for incoming connections". That's just how I understand it. Another argument
against Port is that it's not only for "waiting for incoming connections" --
clients also allocate ports when they connect to remote hosts. So, even
technically, Port is an inaccurate term for this class. You might find other
technical details that make "Listener" slightly inaccurate, but it still
just Makes Sense to most people (I'm guessing -- DavidC_, after me using
the word "Port", and explaining that I'd rather prefer "listener", told
me he would've immediately understood what I was talking about if I had
used that term from the beginning).

So, it should just be known that I am vehemently against using "Port" for
this class. If you can come up with something better than Listener (and
that also *makes sense* without having it explained to me first), then
that's great.




From glyph at twistedmatrix.com  Mon Jul 30 20:34:37 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 30 Jul 2001 21:34:37 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <20010730134618.A24110@twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>

Here I am, responding to a message on the mailing list that I was too busy
to respond to in chat.  Those of you reluctant to use the mailing list,
take note :)

On Mon, 30 Jul 2001, Chris Armstrong wrote:

> I really do not like that we call our "servers" "Ports". I think a
> much better term would be "Listener". I've talked to glyph before
> about this, and he's usually been too busy to discuss it with me (at
> least, that's what *he* says...), so here it is on the list. What's
> wrong with using "Listener"?

Well, "listener" seems equally vague to me :), and in questions like this
the status quo wins by default.

> A lot of people get confused by the term "Port". When they think
> "Port", they don't necessarily think of "something that sits on a
> port, and listens for incoming connections". That's just how I
> understand it. Another argument against Port is that it's not only for
> "waiting for incoming connections" -- clients also allocate ports when
> they connect to remote hosts. So, even technically, Port is an
> inaccurate term for this class. You might find other technical details
> that make "Listener" slightly inaccurate, but it still just Makes
> Sense to most people (I'm guessing -- DavidC_, after me using the word
> "Port", and explaining that I'd rather prefer "listener", told me he
> would've immediately understood what I was talking about if I had used
> that term from the beginning).

I'd be interested to hear more feedback on this.  Do folks generally think
that "listener" makes more sense than "port"?

> So, it should just be known that I am vehemently against using "Port"
> for this class. If you can come up with something better than Listener
> (and that also *makes sense* without having it explained to me first),
> then that's great.

"ServerSocket" probably makes the most sense... but then it would make
sense to change everything around to sound more like the java.net
classnames.  I've not really been happy with the classnames in
twisted.internet, so I encourage further debate...


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From acapnotic at twistedmatrix.com  Mon Jul 30 20:59:28 2001
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: Mon, 30 Jul 2001 19:59:28 -0700
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <20010730134618.A24110@twistedmatrix.com>
Message-ID: <20010730195928.A2302@troglodyte.menefee>

well, since you asked...
"Listener" is very passive, non-directed.  It would be nice if we could
convey the idea of something dedicated/allocated wishing/waiting/hoping
for a _potential connection.  It's not "someone who happens to be
listening" to a broadcast, it's more like "operators are standing by."

Of course, the word "operator" is plainly no good, as it's a loaded term
in this environment.  A close synonym is "receptionist", but that's a
bit unwieldy and doesn't feel quite right to me.  "clerk" is too
general, "teller" (as in bank) doesn't work either.

I'm not sure "port" is really that bad.  It's a point of contact,
something with a *specific address* which may be connected to (which
"Listener" does /not/ convey), something that things traveling
to/from remote locations go through.  And hell, if you're going to use a
phrase like "TCP", you might as well use the standard terminology that
goes with it.  =)

You're right though, in saying that not all ports are for inbound
connections, they're also for outbound connections.  Maybe a qualifier
is in order?

PortListener ListnerPort ListeningPort InPort InboundPort 
ReceptivePort ReceivingPort DockingPort OpenPort
SuckingPort TapPort WatchedPort SentryPort
ok I think I better stop there

-- 
Whaddyamean you don't wanna call it
	"twisted.internet.streamed_ordered_garuanteed_delivery"?




From m at moshez.org  Mon Jul 30 21:55:28 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 31 Jul 2001 06:55:28 +0300
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
Message-ID: <E15RQcy-0006uI-00@darjeeling>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Mon, 30 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> "ServerSocket" probably makes the most sense... but then it would make
> sense to change everything around to sound more like the java.net
> classnames.

ServerSocket is the official Pythonic name, as in "the ServerSocket
module".
- -- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjtmLCUACgkQx/ymNkbQG9b+qQCdGxsrwBpC2fFjhC0qmyifHoO7
qBQAnjZ07vJKLheCaDWDEJRSXp1YJsAN
=l1Fk
-----END PGP SIGNATURE-----




From matsaleh at austin.rr.com  Mon Jul 30 22:12:06 2001
From: matsaleh at austin.rr.com (Matthew Walker)
Date: Mon, 30 Jul 2001 23:12:06 -0500
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <E15RQcy-0006uI-00@darjeeling>
Message-ID: <000001c11976$f61b63b0$7100a8c0@tomservo>

"Port" to me suggests some sort of system resource, whereas "Listener" at
least connotes something is being *done*. If indeed, we are talking about a
class whose responsibility it is to receive requests and handle them, then a
more active name such as "Listener" (or even "server") might be more
appropriate.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Monday, July 30, 2001 10:55 PM
To: twisted-python at twistedmatrix.com
Cc: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] "Ports" vs. "Listeners"


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Mon, 30 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> "ServerSocket" probably makes the most sense... but then it would make
> sense to change everything around to sound more like the java.net
> classnames.

ServerSocket is the official Pythonic name, as in "the ServerSocket
module".
- --
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjtmLCUACgkQx/ymNkbQG9b+qQCdGxsrwBpC2fFjhC0qmyifHoO7
qBQAnjZ07vJKLheCaDWDEJRSXp1YJsAN
=l1Fk
-----END PGP SIGNATURE-----


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From chrish at mincom.com  Mon Jul 30 22:17:26 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Tue, 31 Jul 2001 14:17:26 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com> <E15RQcy-0006uI-00@darjeeling>
Message-ID: <010501c11977$b4ddc540$ad7711ac@pikachu>

Does anyone know how I can get the Reality Servers running on a Windows
system? I have been able to get a static server working okay, but I don't
know what the parameters for mkrealityserver are.

Thanks in advance for help.

ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Tue Jul 31 00:25:24 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 01:25:24 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <000001c11976$f61b63b0$7100a8c0@tomservo>
Message-ID: <Pine.LNX.4.21.0107310118440.12930-100000@zaibach.twistedmatrix.com>

On Mon, 30 Jul 2001, Matthew Walker wrote:

> "Port" to me suggests some sort of system resource, whereas "Listener" at
> least connotes something is being *done*. If indeed, we are talking about a
> class whose responsibility it is to receive requests and handle them, then a
> more active name such as "Listener" (or even "server") might be more
> appropriate.

Terms like "request", "receive", and "handle" in this context are
maddeningly vague. :)

And actually, your reasoning (although inverted) is the reason I chose the
word "Port".  The actual Port instance does nearly nothing except to
maintain state associated with the connection-accepting socket
(persistently, only what numeric port it's on); the associated
protocol.Factory instance generates Protocol instances, which "handle" the
incoming "requests", insofar as such a thing is ever done (they convert
the data into events and make appropriate callbacks to user code...)

"Listener" really implies to me that the user has to subclass it to make
it *do* something.  However, I'll agree that the word "listen" more
clearly implies what it is that a Port does specifically, so I'm more in
favor of deprecating direct use of the Port class, replacing it with
twisted.internet.main.Application.listenOn(...); I've already started
doing so.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






From glyph at twistedmatrix.com  Tue Jul 31 00:26:34 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 01:26:34 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <E15RQcy-0006uI-00@darjeeling>
Message-ID: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>

On Tue, 31 Jul 2001, Moshe Zadka wrote:

> ServerSocket is the official Pythonic name, as in "the ServerSocket
> module".

Where does this module appear?

glyph at helix:~% python2.1 
Python 2.1 (#1, May 31 2001, 15:00:32) 
[GCC 2.96 20000731 (Red Hat Linux 7.1 2.96-81)] on linux2
Type "copyright", "credits" or "license" for more information.
>>> import ServerSocket
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: No module named ServerSocket



                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From m at moshez.org  Tue Jul 31 00:47:04 2001
From: m at moshez.org (Moshe Zadka)
Date: Tue, 31 Jul 2001 09:47:04 +0300
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>
References: <Pine.LNX.4.21.0107310125390.12930-100000@zaibach.twistedmatrix.com>
Message-ID: <E15RTJ2-0007pI-00@darjeeling>

On Tue, 31 Jul 2001, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> On Tue, 31 Jul 2001, Moshe Zadka wrote:
> 
> > ServerSocket is the official Pythonic name, as in "the ServerSocket
> > module".
> 
> Where does this module appear?

Woooops!
my bad: SocketServer

Python 2.1 (#1, Apr 27 2001, 01:24:08)
[GCC 2.95.3 20010219 (prerelease)] on linux2
Type "copyright", "credits" or "license" for more information.
>>> import SocketServer
>>> print SocketServer.__doc__
Generic socket server classes.

This module tries to capture the various aspects of defining a server:
....

-- 
gpg --keyserver keyserver.pgp.com --recv-keys 46D01BD6 54C4E1FE
Secure (inaccessible): 4BD1 7705 EEC0 260A 7F21  4817 C7FC A636 46D0 1BD6
Insecure (accessible): C5A5 A8FA CA39 AB03 10B8  F116 1713 1BCF 54C4 E1FE
Learn Python! http://www.ibiblio.org/obp/thinkCSpy




From davidc at sat.net  Tue Jul 31 14:34:12 2001
From: davidc at sat.net (David C)
Date: Tue, 31 Jul 2001 15:34:12 -0500 (CDT)
Subject: [Twisted-Python] "Ports" vs. "Listeners"
In-Reply-To: <Pine.LNX.4.21.0107302105420.31157-100000@zaibach.twistedmatrix.com>
Message-ID: <Pine.LNX.4.21.0107311440520.22074-100000@multivac.localhost>

On Mon, 30 Jul 2001, Glyph Lefkowitz wrote:

> On Mon, 30 Jul 2001, Chris Armstrong wrote:
> 
> > A lot of people get confused by the term "Port". When they think
> > "Port", they don't necessarily think of "something that sits on a
> > port, and listens for incoming connections". That's just how I
> > understand it. Another argument against Port is that it's not only for
> > "waiting for incoming connections" -- clients also allocate ports when
> > they connect to remote hosts. So, even technically, Port is an
> > inaccurate term for this class. You might find other technical details
> > that make "Listener" slightly inaccurate, but it still just Makes
> > Sense to most people (I'm guessing -- DavidC_, after me using the word
> > "Port", and explaining that I'd rather prefer "listener", told me he
> > would've immediately understood what I was talking about if I had used
> > that term from the beginning).
> 
> I'd be interested to hear more feedback on this.  Do folks generally think
> that "listener" makes more sense than "port"?
> 
Well my misunderstanding comes from already having worked with
sockets. A tcp port is just a number attached to each packet. When you
want to make a server you call listen() on a bound port number. You listen
for people who want to talk to you. So you create a Listener.

By the way, spread.pb is neat.

name:       David Creswick
website:    http://braznet.com/david
jabber id:  davec at jabber.org





From glyph at twistedmatrix.com  Tue Jul 31 17:20:47 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 18:20:47 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <010501c11977$b4ddc540$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0107311621210.25027-100000@zaibach.twistedmatrix.com>

On Tue, 31 Jul 2001, Chris Hadgis wrote:

> Does anyone know how I can get the Reality Servers running on a Windows
> system? I have been able to get a static server working okay, but I don't
> know what the parameters for mkrealityserver are.
> 
> Thanks in advance for help.

It's very similiar to getting it working on UNIX.  Do you have
Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
twistedmatrix.com?


                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph







From chrish at mincom.com  Tue Jul 31 20:27:15 2001
From: chrish at mincom.com (Chris Hadgis)
Date: Wed, 1 Aug 2001 12:27:15 +1000
Subject: [Twisted-Python] Reality Servers
References: <Pine.LNX.4.21.0107311621210.25027-100000@zaibach.twistedmatrix.com>
Message-ID: <001201c11a31$7a926a20$ad7711ac@pikachu>

From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>

>
> On Tue, 31 Jul 2001, Chris Hadgis wrote:
>
> > Does anyone know how I can get the Reality Servers running on a Windows
> > system? I have been able to get a static server working okay, but I
don't
> > know what the parameters for mkrealityserver are.
> >
> > Thanks in advance for help.
>
> It's very similiar to getting it working on UNIX.  Do you have
> Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
> twistedmatrix.com?

Yes I have. I have both of those.

The doco for mkrealityserver indicates there are two parameters: map.rpl and
map.spl. This will ultimately produce a file called pump.spl. I understand
this, but I don't know where to get the rpl and spl files from, or how to
generate them.

Cheers,
ChrisH





-- 
This transmission is for the intended addressee only and is confidential
information.  If you have received this transmission in error, please
delete it and notify the sender.  The contents of this e-mail are the
opinion of the writer only and are not endorsed by the Mincom Group
of companies unless expressly stated otherwise.




From glyph at twistedmatrix.com  Tue Jul 31 21:53:39 2001
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 31 Jul 2001 22:53:39 -0500 (CDT)
Subject: [Twisted-Python] Reality Servers
In-Reply-To: <001201c11a31$7a926a20$ad7711ac@pikachu>
Message-ID: <Pine.LNX.4.21.0107312240060.5089-100000@zaibach.twistedmatrix.com>

On Wed, 1 Aug 2001, Chris Hadgis wrote:

> From: "Glyph Lefkowitz" <glyph at twistedmatrix.com>
>
> > It's very similiar to getting it working on UNIX.  Do you have
> > Inheritance.tar.gz or TRDemo.tar.gz from the 'reality' page on
> > twistedmatrix.com?
> 
> Yes I have. I have both of those.
> 
> The doco for mkrealityserver indicates there are two parameters: map.rpl and
> map.spl. This will ultimately produce a file called pump.spl. I understand
> this, but I don't know where to get the rpl and spl files from, or how to
> generate them.

A command like 'gnusto build_map x.rpl mapcopy.py' in one of the
Inheritance or TRDemo directories will create 'x.rpl' which you can use
with mkrealityserver.  HTH.

                      ______      __   __  _____  _     _
                     |  ____ |      \_/   |_____] |_____|
                     |_____| |_____  |    |       |     |
                     @ t w i s t e d m a t r i x  . c o m
                     http://twistedmatrix.com/users/glyph






