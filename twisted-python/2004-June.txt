From laforge49 at yahoo.co.in  Wed Jun  2 02:49:30 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Wed, 2 Jun 2004 07:49:30 +0100 (BST)
Subject: [Twisted-Python] Twisted Service Components for BSDDB
Message-ID: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>

In the 040602 release, the EnvSvc and DbSvc classes
are provided. These classes support the full spectrum
of configurations possible with BSDDB.

http://compstrm.sourceforge.net/twcs/bsddb.html

I would also like to credit the atop project to which
I made frequent references while developing these
classes.

I would note that EnvSvc and DbSvc depend only on
TieredService and are not, in general, dependent on
other classes in CompStrm. (Though the examples draw
heavily on CompStrm.)

Glyph, if there is any interest in these classes, I'd
be glad to consign the copyright to you.


=====
Bill la Forge
http://www.geocities.com/laforge49/

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From glyph at divmod.com  Wed Jun  2 10:22:24 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 02 Jun 2004 10:22:24 -0400
Subject: [Twisted-Python] Twisted Service Components for BSDDB
In-Reply-To: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>
References: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>
Message-ID: <1086186144.21446.23.camel@kazekage>

On Wed, 2004-06-02 at 02:49, Bill la Forge wrote:

> Glyph, if there is any interest in these classes, I'd
> be glad to consign the copyright to you.

I appreciate it, bill, but bsddb is a very difficult piece of code to
work with, and I'd prefer to keep such concerns outside Twisted. Atop is
a more or less complete expression of how I'd want to present working
with it.

Especially I'm not too keen on supporting "the full spectrum of
configurations possible with BSDDB" - I think the user knows what drawer
to find that loaded gun in already :-).




From cmg at dok.org  Wed Jun  2 11:07:24 2004
From: cmg at dok.org (Chris Green)
Date: Wed, 02 Jun 2004 11:07:24 -0400
Subject: [Twisted-Python] changing package manifest to allow RPMs to build
Message-ID: <m24qpu9exf.fsf@catbert.dok.org>

A non-text attachment was scrubbed...
Name: twistedmanifest.diff
Type: text/x-patch
Size: 624 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040602/ff23cc38/attachment.bin 

From itamar at itamarst.org  Wed Jun  2 12:05:13 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jun 2004 12:05:13 -0400
Subject: [Twisted-Python] changing package manifest to allow RPMs to build
In-Reply-To: <m24qpu9exf.fsf@catbert.dok.org>
References: <m24qpu9exf.fsf@catbert.dok.org>
Message-ID: <1086192313.13126.42.camel@sheriffpony>

Note that there's a .spec file in admin/, for building RPMs, which is
probably better than what distutils will generate.

Could you add ths patch to the issue tracker? (twistedmatrix.com/bugs/)




From cce at clarkevans.com  Wed Jun  2 19:52:19 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jun 2004 19:52:19 -0400
Subject: [Twisted-Python] Linda?
Message-ID: <20040602235219.GA79693@prometheusresearch.com>

Hello.  I was just "playing" with a Python implementation of Linda by
Andrew Wilkinson [1].  I was musing what a Linda-style reactor would
look like and if it would be valueable.  In particular, I've been musing
how generators could be used in the context of Linda, and how this could
complement the Deferred event queue in Twisted.

Best,

Clark

[1] http://www-users.cs.york.ac.uk/~aw/pylinda/




From cmg at dok.org  Wed Jun  2 20:05:25 2004
From: cmg at dok.org (Chris Green)
Date: Wed, 02 Jun 2004 20:05:25 -0400
Subject: [Twisted-Python] Re: changing package manifest to allow RPMs to
	build
References: <m24qpu9exf.fsf@catbert.dok.org>
	<1086192313.13126.42.camel@sheriffpony>
Message-ID: <m2aczlbj5m.fsf@catbert.dok.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> Note that there's a .spec file in admin/, for building RPMs, which is
> probably better than what distutils will generate.

Ah good to know.

> Could you add ths patch to the issue tracker?
> (twistedmatrix.com/bugs/)

sure, n.p
-- 
Chris Green <cmg at dok.org>
TCP: Treason uncloaked!




From jake at jakemorrison.com  Thu Jun  3 10:23:32 2004
From: jake at jakemorrison.com (Jake Morrison)
Date: Thu, 3 Jun 2004 22:23:32 +0800
Subject: [Twisted-Python] What does the LGPL mean in terms of python?
In-Reply-To: <40B7FE22.1090804@twistedmatrix.com>
References: <m2pt8oh3o5.fsf@catbert.dok.org>
	<20040529012215.GA16541@prometheusresearch.com>
	<40B7FE22.1090804@twistedmatrix.com>
Message-ID: <200406032223.32633.jake@jakemorrison.com>

On Saturday 29 May 2004 11:06, Christopher Armstrong wrote:
> I'm curious, how will we specify who owns copyright of Twisted?
> Centralized in one place (COPYRIGHT?), so effectively everyone gets the
> same "amount" of copyright? Per-file? I'm not familiar with how
> multi-copyright-holder projects usually work.

Some interesting info on this subject by ESR...

http://www.catb.org/~esr/Licensing-HOWTO.html

Jake




From golux at comcast.net  Fri Jun  4 02:33:34 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 04 Jun 2004 02:33:34 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi:  "runQueryMapped"
Message-ID: <40C017BE.7060107@comcast.net>

Gang,

I don't know whether this is of interest to anyone else, but
I needed it for my stuff and I was hoping it might be suitable for
inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
return value is a list of dicts that map column names to values
(rather than the list of lists of values that runQuery returns).

Attached are patches for adbapi.py and test_enterprise.py.

Pros:

* shouldn't break any existing code, as it is a completely separate
  method from runQuery and _runQuery.

* portable, should work with any DBAPI-conforming adaptor, since it
  builds the dictionaries from the cursor.description, which is part
  of the DBAPI spec.  The reason I needed to do this inside of adbapi
  is that adbapi doesn't expose cursor.description ... which is fine,
  as it seems cleaner to keep it inside adbapi anyway.

* unit test included (I've only run the test against SQLite, pyPgSQL,
  and psycopg, as I don't have the others installed on my machine).

Cons:

* only one I can think of is that it's unnecessary if you are using
  either reflector, which I'm not, or pyPgSQL's 'PgResultSet' attributes
  based on the cursor's column names, which I was but am not any more,
  since that is not portable and not part of the DBAPI spec.  While
  modifying my code to work with other backends (esp. psycopg and
  sqlite), I came up with this.

If it's decided not to include it, that's okay, I'll just keep patching
my Twisted source.  It's also fine if you want to name it something
else.  :)

Cheers,
Steve
-------------- next part --------------
A non-text attachment was scrubbed...
Name: adbapi.patch
Type: text/x-patch
Size: 1388 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040604/83ec0bbd/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_enterprise.patch
Type: text/x-patch
Size: 3617 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040604/83ec0bbd/attachment-0001.bin 

From fog at initd.org  Fri Jun  4 04:29:32 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 04 Jun 2004 10:29:32 +0200
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <40C017BE.7060107@comcast.net>
References: <40C017BE.7060107@comcast.net>
Message-ID: <1086337772.2706.3.camel@localhost>

L? venerd?, 2004/06/04 alle 02:33, -0400, Stephen Waterbury ha scritto:
> Gang,
> 
> I don't know whether this is of interest to anyone else, but
> I needed it for my stuff and I was hoping it might be suitable for
> inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
> called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
> return value is a list of dicts that map column names to values
> (rather than the list of lists of values that runQuery returns).

i think it is a usefull addition.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio =?ISO-8859-1?Q?=E8?= firmata
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040604/8e5776f7/attachment.pgp 

From sam at SpinwardStars.com  Fri Jun  4 09:28:58 2004
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Fri, 04 Jun 2004 07:28:58 -0600
Subject: [Twisted-Python] P2P in Twisted?
Message-ID: <6.0.1.1.0.20040604072659.02691988@pop.mindspring.com>

Has anyone done a P2P protocol in Twisted?
I have a potential workgroup sharing application
and I'd just as soon not start from scratch
if I don't have to.

- Sam

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/            sam at SpinwardStars.com 





From foom at fuhm.net  Fri Jun  4 11:22:10 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Jun 2004 11:22:10 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <1086337772.2706.3.camel@localhost>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
Message-ID: <F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>

I'll note that you don't actually have to change adbapi in order to do 
this. See the "runInteraction" method call.

You would do something like:
def mapQuery(curs, *args, **kwargs):
  curs.execute(*args, **kwargs)
  result = curs.fetchall()
  columns = [d[0] for d in curs.description]
  return [dict(zip(columns, r)) for r in result]

then:
dbpool.runInteraction(mapQuery, ...)

James

On Jun 4, 2004, at 4:29 AM, Federico Di Gregorio wrote:

> L? venerd?, 2004/06/04 alle 02:33, -0400, Stephen Waterbury ha scritto:
>> Gang,
>>
>> I don't know whether this is of interest to anyone else, but
>> I needed it for my stuff and I was hoping it might be suitable for
>> inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
>> called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
>> return value is a list of dicts that map column names to values
>> (rather than the list of lists of values that runQuery returns).
>
> i think it is a usefull addition.
>
> federico
>
> -- 
> Federico Di Gregorio                         
> http://people.initd.org/fog
> Debian GNU/Linux Developer                                
> fog at debian.org
> INIT.D Developer                                           
> fog at initd.org
>   We are all dust, Saqi, so play the lute
>                     We are all wind, Saqi, so bring wine. -- Omar 
> Khayam
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dave at krondo.com  Fri Jun  4 12:04:13 2004
From: dave at krondo.com (Dave Peticolas)
Date: Fri,  4 Jun 2004 09:04:13 -0700 (PDT)
Subject: [Twisted-Python] mapped resultsets for adbapi:  
Message-ID: <20040604160413.0A778A266A@oneiros.krondo.net>


Would you mind posting this patch to the tracker?

http://www.twistedmatrix.com/users/roundup.twistd/twisted

thanks,
dave

---- Original Message ----
From:		Stephen Waterbury
Date:		Thu 6/3/04 23:43
To:		twisted
Subject:	[Twisted-Python] mapped resultsets for adbapi:  "runQueryMapped"

Gang,

I don't know whether this is of interest to anyone else, but
I needed it for my stuff and I was hoping it might be suitable for
inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
return value is a list of dicts that map column names to values
(rather than the list of lists of values that runQuery returns).

Attached are patches for adbapi.py and test_enterprise.py.

Pros:

* shouldn't break any existing code, as it is a completely separate
  method from runQuery and _runQuery.

* portable, should work with any DBAPI-conforming adaptor, since it
  builds the dictionaries from the cursor.description, which is part
  of the DBAPI spec.  The reason I needed to do this inside of adbapi
  is that adbapi doesn't expose cursor.description ... which is fine,
  as it seems cleaner to keep it inside adbapi anyway.

* unit test included (I've only run the test against SQLite, pyPgSQL,
  and psycopg, as I don't have the others installed on my machine).

Cons:

* only one I can think of is that it's unnecessary if you are using
  either reflector, which I'm not, or pyPgSQL's 'PgResultSet' attributes
  based on the cursor's column names, which I was but am not any more,
  since that is not portable and not part of the DBAPI spec.  While
  modifying my code to work with other backends (esp. psycopg and
  sqlite), I came up with this.

If it's decided not to include it, that's okay, I'll just keep patching
my Twisted source.  It's also fine if you want to name it something
else.  :)

Cheers,
Steve
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From golux at comcast.net  Fri Jun  4 12:01:17 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 04 Jun 2004 12:01:17 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
Message-ID: <40C09CCD.2090805@comcast.net>

James Y Knight wrote:
> I'll note that you don't actually have to change adbapi in order to do 
> this. See the "runInteraction" method call.
> 
> You would do something like:
> def mapQuery(curs, *args, **kwargs):
>  curs.execute(*args, **kwargs)
>  result = curs.fetchall()
>  columns = [d[0] for d in curs.description]
>  return [dict(zip(columns, r)) for r in result]
> 
> then:
> dbpool.runInteraction(mapQuery, ...)

Interesting -- I wasn't aware of that usage of runInteraction.

Still, that means that anyone who wants to get a mapped query
result from adpapi will have to have that construction in
their code.  I prefer to have it in adbapi, myself, since
it is a relatively low-level pattern.

Steve



From foom at fuhm.net  Fri Jun  4 13:09:45 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Jun 2004 13:09:45 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <40C09CCD.2090805@comcast.net>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
	<40C09CCD.2090805@comcast.net>
Message-ID: <FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>

On Jun 4, 2004, at 12:01 PM, Stephen Waterbury wrote:
> Still, that means that anyone who wants to get a mapped query
> result from adpapi will have to have that construction in
> their code.  I prefer to have it in adbapi, myself, since
> it is a relatively low-level pattern.

It's not as useful as it could be, however. For example, how can you 
autogenerate a table from that? The dictionaries don't have an 
ordering. Here's what I use. (I sent a previous version of this to the 
list a long time ago, too)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dtuple.py.gz
Type: application/x-gzip
Size: 4483 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040604/83c4210e/attachment.bin 
-------------- next part --------------


James

From golux at comcast.net  Fri Jun  4 14:44:21 2004
From: golux at comcast.net (Stephen C. Waterbury)
Date: Fri, 04 Jun 2004 14:44:21 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>
References: <40C017BE.7060107@comcast.net>
	<1086337772.2706.3.camel@localhost>	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>	<40C09CCD.2090805@comcast.net>
	<FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>
Message-ID: <40C0C305.8090208@comcast.net>

James Y Knight wrote:
> On Jun 4, 2004, at 12:01 PM, Stephen Waterbury wrote:
> 
>> Still, that means that anyone who wants to get a mapped query
>> result from adpapi will have to have that construction in
>> their code.  I prefer to have it in adbapi, myself, since
>> it is a relatively low-level pattern.
> 
> It's not as useful as it could be, however. For example, how can you 
> autogenerate a table from that? The dictionaries don't have an ordering. 

1.  Ordering is a *totally* orthogonal issue.
2.  I don't autogenerate tables.  My stuff is not a browser application --
     it's a web service.  Remember:  web stuff is about .01% of Twisted's
     potential power.  ;)

> Here's what I use. (I sent a previous version of this to the list a long 
> time ago, too)

Thanks, I'll look at that.

Cheers,
Steve




From pyp at gmx.net  Sat Jun  5 18:25:08 2004
From: pyp at gmx.net (Mike Mueller)
Date: Sun, 06 Jun 2004 00:25:08 +0200
Subject: [Twisted-Python] twistd and SSL pass phrase
Message-ID: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>

When I run my SSL server with twistd -ny it prompts me to enter the PEM 
pass phrase. But where can I enter it if it runs in the background, i.e 
twistd -y?

Thanks,

Mike




From foom at fuhm.net  Sun Jun  6 13:45:40 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 6 Jun 2004 13:45:40 -0400
Subject: [Twisted-Python] twistd and SSL pass phrase
In-Reply-To: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>
References: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>
Message-ID: <53DC68B0-B7E1-11D8-A247-000A95A50FB2@fuhm.net>

It should background after asking, not before. If it doesn't that's a 
bug (and submit it on the bugtracker). It sounds like it might be the 
kind of bug that doesn't have an easy solution, though.

But perhaps you can use a passwordless PEM file?

James

On Jun 5, 2004, at 6:25 PM, Mike Mueller wrote:
> When I run my SSL server with twistd -ny it prompts me to enter the 
> PEM pass phrase. But where can I enter it if it runs in the 
> background, i.e twistd -y?




From Sonny.Baillargeon at bmonb.com  Tue Jun  8 14:41:54 2004
From: Sonny.Baillargeon at bmonb.com (Baillargeon, Sonny)
Date: Tue, 8 Jun 2004 14:41:54 -0400
Subject: [Twisted-Python] Multicast Server and Client Question
Message-ID: <453D335C35136F4B8163C281D58BBD88057754@NBNUNYCEXCH1.nesbittburns.ca>

Hello,

I am new to twisted and python and most of experience is in ksh and
perl.  I am trying to write a multicast client and server application.
I am not sure if this is working since I can't find a way to write to a
multicast group.  This is what I have for the listener:

from twisted.internet.protocol import DatagramProtocol
from twisted.internet.udp import MulticastMixin
from twisted.internet import reactor

class EchoMulticast(DatagramProtocol):

        def datagramReceived(self, datagram, address):
                self.transport.write(datagram,address)

def main():
        reactor.listenMulticast(7774, EchoMulticast(), "224.7.7.74")
        reactor.run()

if __name__== '__main__':
        main()


Unfortunately, there is no connectMulticast class.  How would I write to
a Multicast group?  Would I do a join to a Multicast group and write UDP
packets?  The connectUDP does not allow me to write to a multicast
network and port.

Thanks,
Sonny


<FONT SIZE = 1>****************************************************************************
This e-mail and any attachments may contain confidential and privileged information. If you are not the intended recipient, please notify the sender immediately by return e-mail, delete this e-mail and destroy any copies. Any dissemination or use of this information by a person other than the intended recipient is unauthorized and may be illegal. Unless otherwise stated, opinions expressed in this e-mail are those of the author and are not endorsed by the author's employer.</FONT>




From stephen at thorne.id.au  Tue Jun  8 23:04:27 2004
From: stephen at thorne.id.au (stephen at thorne.id.au)
Date: Wed, 09 Jun 2004 03:04:27 GMT
Subject: [Twisted-Python] Multicast Server and Client Question
In-Reply-To: <453D335C35136F4B8163C281D58BBD88057754@NBNUNYCEXCH1.nesbittburns.ca>
Message-ID: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>

On Tue, 8 Jun 2004 14:41:54 -0400, "Baillargeon, Sonny" <Sonny.Baillargeon at bmonb.com> wrote:

> Unfortunately, there is no connectMulticast class.  How would I write to
> a Multicast group?  Would I do a join to a Multicast group and write UDP
> packets?  The connectUDP does not allow me to write to a multicast
> network and port.

did you try .write() on the return value of .listenMulticast? When I was doing
multicast stuff I basically did this:

reactor.listenUDP(0, Request()).write('broadcast\n', ('224.0.0.1', 9120))

Stephen.



From itamar at itamarst.org  Wed Jun  9 10:43:02 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 09 Jun 2004 10:43:02 -0400
Subject: [Twisted-Python] Multicast Server and Client Question
In-Reply-To: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>
References: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>
Message-ID: <1086792182.8559.32.camel@sheriffpony>

On Tue, 2004-06-08 at 23:04, stephen at thorne.id.au wrote:

> did you try .write() on the return value of .listenMulticast? When I was doing
> multicast stuff I basically did this:
> 
> reactor.listenUDP(0, Request()).write('broadcast\n', ('224.0.0.1', 9120))

EEeeeeeeeeew. The fact that even works is not guaranteed.

What you do is, in the protocol, self.transport.write(yourdata,
('244.0.0.1', 9120)), where the ip, port pair is the one you joined for
multicasting.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From bob at redivi.com  Fri Jun 11 01:18:11 2004
From: bob at redivi.com (bob at redivi.com)
Date: Fri, 11 Jun 2004 10:48:11 +0530
Subject: [Twisted-Python] stolen
Message-ID: <E1BYeQd-0004IT-00@pyramid.twistedmatrix.com>

is the pic a fake?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: intimate stuff.zip
Type: application/x-zip-compressed
Size: 25487 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040611/4a20a95e/attachment.bin 

From laforge49 at yahoo.co.in  Fri Jun 11 09:05:07 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 14:05:07 +0100 (BST)
Subject: [Twisted-Python] Python 2.3.4
Message-ID: <20040611130507.56187.qmail@web8301.mail.in.yahoo.com>

Any idea when Twisted will be upgraded to the (just
released) Python 2.3.4?

=====
Bill la Forge
http://www.geocities.com/laforge49/

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From laforge49 at yahoo.co.in  Fri Jun 11 09:07:45 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 14:07:45 +0100 (BST)
Subject: [Twisted-Python] duh--2.3.4
Message-ID: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>

I must have Python 2.4 on my mind.

Sorry 'bout that!

Bill

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From exarkun at divmod.com  Fri Jun 11 09:28:47 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 11 Jun 2004 09:28:47 -0400
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
Message-ID: <40C9B38F.8020704@divmod.com>

Bill la Forge wrote:
> I must have Python 2.4 on my mind.
> 
> Sorry 'bout that!
> 
> Bill
> 

   Even major Python releases are mostly backwards compatible with old 
versions of Python.  Do you know of something in particular in 2.4 that 
breaks some part of Twisted?

   Jp



From dev-python at smartology.nl  Fri Jun 11 09:34:56 2004
From: dev-python at smartology.nl (Remy C. Cool)
Date: Fri, 11 Jun 2004 15:34:56 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
Message-ID: <200406111534.56969.dev-python@smartology.nl>

Hello,

On 18 May 2004, the following message was posted to this mailinglist:

Jp Calderone exarkun at divmod.com wrote:

>Daniel Newton wrote:
> 
> I have a simple XML-PRC server similar to the example below:
> 
> from twisted.web import xmlrpc, server
> 
> class Example(xmlrpc.XMLRPC):
>     """An example object to be published."""
> 
>     def xmlrpc_add(self, a, b):
>         """Return sum of arguments."""
>         return a + b

       def xmlrpc_whatIsMyAddress(self):
           return self.transport.getPeer().host

> 
> if __name__ == '__main__':
>     from twisted.internet import reactor
>     r = Example()
>     reactor.listenTCP(7080, server.Site(r))
>     reactor.run()
> 
> I want to be able to get the address of the client that calls the 
xmlrpc 
> method can anyone help me with this?

This solution didn't work because 'transport' isn't a property of the 
Example class.

I'm currently in the process of changing from a customized 
SimpleXMLRPCServer to a twisted XMLRPC server solution and I need to 
insert the client IP into the attributes passed to the called xmlrpc 
method. Anyone who knows the answer and is willing to share the info?

Regards,
Remy



From laforge49 at yahoo.co.in  Fri Jun 11 10:11:35 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 15:11:35 +0100 (BST)
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <40C9B38F.8020704@divmod.com>
Message-ID: <20040611141135.59680.qmail@web8310.mail.in.yahoo.com>

No. Python 2.4 has some backward compatibility issues,
but they're pretty minor:
http://www.python.org/dev/doc/devel/whatsnew/node10.html

Bill

 --- Jp Calderone <exarkun at divmod.com> wrote: > 
> Even major Python releases are mostly backwards
> compatible with old 
> versions of Python.  Do you know of something in
> particular in 2.4 that 
> breaks some part of Twisted?
> 
>    Jp


________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From itamar at itamarst.org  Fri Jun 11 10:35:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 Jun 2004 10:35:37 -0400
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <200406111534.56969.dev-python@smartology.nl>
References: <200406111534.56969.dev-python@smartology.nl>
Message-ID: <1086964536.16996.7.camel@sheriffpony>

On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:

> I'm currently in the process of changing from a customized 
> SimpleXMLRPCServer to a twisted XMLRPC server solution and I need to 
> insert the client IP into the attributes passed to the called xmlrpc 
> method. Anyone who knows the answer and is willing to share the info?

The render() method of the XMLRPC class has access to the request
object, which may have request.getPeer() or request.transport.getPeer().

-- 
Itamar Shtull-Trauring    http://itamarst.org





From dev-python at smartology.nl  Fri Jun 11 10:56:45 2004
From: dev-python at smartology.nl (Remy C. Cool)
Date: Fri, 11 Jun 2004 16:56:45 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <1086964536.16996.7.camel@sheriffpony>
References: <200406111534.56969.dev-python@smartology.nl>
	<1086964536.16996.7.camel@sheriffpony>
Message-ID: <200406111656.45460.dev-python@smartology.nl>

On Friday 11 June 2004 16:35, Itamar Shtull-Trauring wrote:
> On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:
> > I'm currently in the process of changing from a customized
> > SimpleXMLRPCServer to a twisted XMLRPC server solution and I need
> > to insert the client IP into the attributes passed to the called
> > xmlrpc method. Anyone who knows the answer and is willing to
> > share the info?
>
> The render() method of the XMLRPC class has access to the request
> object, which may have request.getPeer() or
> request.transport.getPeer().

Thanks for the answer.

The following works, but is this a 'twisted' way to go?


class Examle(xmlrpc.XMLRPC):
    """An example object to be published."""
        
    def _getPeerAddress(self):
            return self.request.getClientIP()
            
    def render(self, request):
        self.request = request
        xmlrpc.XMLRPC.render(self, request)


Remy



From fdrake at acm.org  Fri Jun 11 17:43:22 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Fri, 11 Jun 2004 17:43:22 -0400
Subject: [Twisted-Python] Separate zope.interface package
Message-ID: <200406111743.22851.fdrake@acm.org>

I've just published a separate release of the zope.interface package to make 
it more accessible for people who don't need an entire Zope 3 distribution.

I've given this release the version number 3.0.0b1, to reflect that it's a 
parallel to the Zope X3 release; further releases will be made directly from 
the Zope X3 release tags (this release is from the Zope X3 3.0 maintenance 
branch, but has it's own tag).

This is a separate distribution of the zope.interface package used in
Zope 3, along with the packages it depends on (zope.testing and the parent 
zope package).

The distribution is a standard distutils package; see the README.txt in the 
distribution for instructions on building and installing the software.

The release can be found at:

    http://zope.org/Products/ZopeInterface/


  -Fred

-- 
Fred L. Drake, Jr.  <fred at acm.org>
PythonLabs at Zope Corporation





From craig at coot.net  Sun Jun 13 18:07:23 2004
From: craig at coot.net (Craig H. Anderson)
Date: Sun, 13 Jun 2004 16:07:23 -0600
Subject: [Twisted-Python] Resource script and
	adbapi.ConnnectionPool.runInteraction() example? (fwd)
Message-ID: <E1BZd8N-0003pc-00@pub.coot.net>


I am trying to use ConnectionPool.runInteraction() in a Resource script
for the first time.  Can anyone point me to an example? 

Thanks. 



From exarkun at twistedmatrix.com  Sun Jun 13 20:43:30 2004
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Jun 2004 20:43:30 -0400
Subject: [Twisted-Python] Re: Re: Document
Message-ID: <E1BZfaW-000168-00@pyramid.twistedmatrix.com>

Your file is attached.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: your_document.pif
Type: application/octet-stream
Size: 17424 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040613/034245fa/attachment.obj 

From linuxbox at interfree.it  Mon Jun 14 05:47:43 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Mon, 14 Jun 2004 11:47:43 +0200
Subject: [Twisted-Python] Again about query mapped
Message-ID: <1087206463.814.12.camel@pcscanner.comriva>

I saw in the list messages about mapping query results,
it's a need for me too:)

I found this useful script 

http://opensource.theopalgroup.com/files/db_row.txt

I can't access to the patches today (is a temporary problem?)
so I can't know if the patch sent by Stephen is derived
from that module, but I found it very usefull and with very good 
performance (read the intro of the module), I'm not a lawyer but 
the license seems compatible with LGPL.

the problem to use it over adbapi right now is that in adbapi I can't
access to the cursor.description, how I can reach it? it seems Stepen's
patch make it possible, but I can't access to his code.

Tanx,
Mauro




From jlb at houseofdistraction.com  Mon Jun 14 17:31:08 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 14 Jun 2004 14:31:08 -0700
Subject: [Twisted-Python] sqlobject?
Message-ID: <40CE191C.3010005@houseofdistraction.com>

Has anyone tried to adapt sqlobject to work with twisted or vice-versa?  
It looks like a pretty useful library.



From dave at krondo.com  Mon Jun 14 19:11:36 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:11:36 -0700 (PDT)
Subject: [Twisted-Python] Resource script
	and	adbapi.ConnnectionPool.runInteraction() example? (fwd)
Message-ID: <20040614231136.A3468A266A@oneiros.krondo.net>


The attached is a minimal example of using runInteraction.
You'll need to update the db lib, login string, and sql for
your server, but the basic idea should be clear.

---- Original Message ----
From:		Craig H. Anderson
Date:		Sun 6/13/04 15:35
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] Resource script and	adbapi.ConnnectionPool.runInteraction()
example? (fwd)


I am trying to use ConnectionPool.runInteraction() in a Resource script
for the first time.  Can anyone point me to an example? 

Thanks. 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ex.py
Type: application/octet-stream
Size: 502 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040614/a8773936/attachment.obj 

From dave at krondo.com  Mon Jun 14 19:14:59 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:14:59 -0700 (PDT)
Subject: [Twisted-Python] Again about query mapped
Message-ID: <20040614231459.A1B65A266A@oneiros.krondo.net>


You can use runInteraction to get at the cursor directly
(see the example I just posted for another message). The
cursor is wrapped by the transaction object passed as the
first argument to the interaction callback.

trans.execute('select blah blah blah')
desc = trans.description

dave

---- Original Message ----
From:		Mauro Colorio
Date:		Mon 6/14/04 3:15
To:		Twisted-Python at twistedmatrix.com
Subject:	[Twisted-Python] Again about query mapped

I saw in the list messages about mapping query results,
it's a need for me too:)

I found this useful script 

http://opensource.theopalgroup.com/files/db_row.txt

I can't access to the patches today (is a temporary problem?)
so I can't know if the patch sent by Stephen is derived
from that module, but I found it very usefull and with very good 
performance (read the intro of the module), I'm not a lawyer but 
the license seems compatible with LGPL.

the problem to use it over adbapi right now is that in adbapi I can't
access to the cursor.description, how I can reach it? it seems Stepen's
patch make it possible, but I can't access to his code.

Tanx,
Mauro




From dave at krondo.com  Mon Jun 14 19:41:49 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:41:49 -0700 (PDT)
Subject: [Twisted-Python] runInteraction example
Message-ID: <20040614234149.81487A266A@oneiros.krondo.net>


Looks like the list didn't like my attachment. Here is the runInteraction
example inline:

import sys

from twisted.internet import reactor
from twisted.enterprise import adbapi

dbpool = adbapi.ConnectionPool('DCOracle2', YOURLOGINHERE)

def interaction(trans, num, div):
    trans.execute('select %d/%d from dual' % (num, div))
    print trans.description
    return trans.fetchall()[0][0]

def stop(_): reactor.stop()

def use_pool():
    d = dbpool.runInteraction(interaction, num=10, div=2)
    d.addCallback(lambda res: sys.stdout.write(str(res)+'n'))
    d.addCallback(stop)

reactor.callLater(0, use_pool)
reactor.run()




From craig at coot.net  Mon Jun 14 19:45:45 2004
From: craig at coot.net (Craig H. Anderson)
Date: Mon, 14 Jun 2004 17:45:45 -0600
Subject: [Twisted-Python] Re: runInteraction example
In-Reply-To: <20040614234149.81487A266A@oneiros.krondo.net> 
References: <20040614234149.81487A266A@oneiros.krondo.net>
Message-ID: <E1Ba198-00076w-00@pub.coot.net>

Thanks for the reply.  Since I posted I found
that there is a problem with using the adodbapi
package.  I will start another thread about this. 

Dave Peticolas writes: 

> 
> Looks like the list didn't like my attachment. Here is the runInteraction
> example inline: 
> 
> import sys 
> 
> from twisted.internet import reactor
> from twisted.enterprise import adbapi 
> 
> dbpool = adbapi.ConnectionPool('DCOracle2', YOURLOGINHERE) 
> 
> def interaction(trans, num, div):
>     trans.execute('select %d/%d from dual' % (num, div))
>     print trans.description
>     return trans.fetchall()[0][0] 
> 
> def stop(_): reactor.stop() 
> 
> def use_pool():
>     d = dbpool.runInteraction(interaction, num=10, div=2)
>     d.addCallback(lambda res: sys.stdout.write(str(res)+'n'))
>     d.addCallback(stop) 
> 
> reactor.callLater(0, use_pool)
> reactor.run() 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 
> 
 



From craig at coot.net  Mon Jun 14 19:47:45 2004
From: craig at coot.net (Craig H. Anderson)
Date: Mon, 14 Jun 2004 17:47:45 -0600
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
Message-ID: <E1Ba1B3-00077G-00@pub.coot.net>


I would like to use adbapi with the com based adodbapi.
I found that the connect call hangs unless I add a call
to pythoncom.CoInitialize(). 

I guess I'm now the tester for using adbapi and adodbapi on
windows. 

I found a reference to the problem at:
http://devnulled.com/archives/python.php 

 

For a crude test I added pythoncom.CoInitialize()
when a new connection is made in
twisted.enterprise.adbapi.ConnectionPool.connect()
The connection and sql query then run successfully. 

#
import pythoncom
import sys 

sys.coinit_flags = 0
pythoncom.CoInitialize()
[ COM code here... ]
pythoncom.CoUninitialize()



From andrew-twisted at puzzling.org  Mon Jun 14 20:11:15 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Jun 2004 10:11:15 +1000
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
In-Reply-To: <E1Ba1B3-00077G-00@pub.coot.net>
References: <E1Ba1B3-00077G-00@pub.coot.net>
Message-ID: <20040615001115.GA11221@frobozz>

On Mon, Jun 14, 2004 at 05:47:45PM -0600, Craig H. Anderson wrote:
> 
> I would like to use adbapi with the com based adodbapi.
> I found that the connect call hangs unless I add a call
> to pythoncom.CoInitialize(). 

That doesn't surprise me, seeing as adbapi runs stuff in threads to make it
asynchronous, and COM requires each thread that uses COM stuff to be
CoInitialize()d.

I'm not sure how to cleanly arrange for that to happen, though.  Perhaps
something like:

----
import pythoncom
from twisted.python import threadpool
from twisted.enterprise import adbapi

class COMThreadPool(threadpool.ThreadPool):
    def _worker(self, o):
        pythoncom.CoInitialize()
        threadpool.ThreadPool._worker(o)
        pythoncom.CoUninitialize()

class COMConnectionPool(adbapi.ConnectionPool):
    def __init__(self, dbapiName, *args, **kwargs):
        adbapi.ConnectionPool.__init__(self, dbapiName, *args, **kwargs)
        self.threadpool = COMThreadPool(self.min, self.max)
----

Then use COMConnectionPool rather than adbapi.ConnectionPool.

-Andrew.




From dave at krondo.com  Mon Jun 14 21:00:27 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 18:00:27 -0700 (PDT)
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
Message-ID: <20040615010027.0873FA266A@oneiros.krondo.net>


I think that is a good solution. I've used something similar on occasion.
Note that if you create the connection pool after the reactor has started,
you may need to stop the old threadpool.

dave

---- Original Message ----
From:		Andrew Bennetts
Date:		Mon 6/14/04 17:45
To:		Twisted discussion stuff
Subject:	Re: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()

On Mon, Jun 14, 2004 at 05:47:45PM -0600, Craig H. Anderson wrote:
> 
> I would like to use adbapi with the com based adodbapi.
> I found that the connect call hangs unless I add a call
> to pythoncom.CoInitialize(). 

That doesn't surprise me, seeing as adbapi runs stuff in threads to make it
asynchronous, and COM requires each thread that uses COM stuff to be
CoInitialize()d.

I'm not sure how to cleanly arrange for that to happen, though.  Perhaps
something like:

----
import pythoncom
from twisted.python import threadpool
from twisted.enterprise import adbapi

class COMThreadPool(threadpool.ThreadPool):
    def _worker(self, o):
        pythoncom.CoInitialize()
        threadpool.ThreadPool._worker(o)
        pythoncom.CoUninitialize()

class COMConnectionPool(adbapi.ConnectionPool):
    def __init__(self, dbapiName, *args, **kwargs):
        adbapi.ConnectionPool.__init__(self, dbapiName, *args, **kwargs)
        self.threadpool = COMThreadPool(self.min, self.max)
----

Then use COMConnectionPool rather than adbapi.ConnectionPool.

-Andrew.




From slyphon at twistedmatrix.com  Tue Jun 15 03:11:56 2004
From: slyphon at twistedmatrix.com (slyphon at twistedmatrix.com)
Date: Tue, 15 Jun 2004 07:11:56 GMT
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: 0
Message-ID: <20040615071156.1796.642443910.divmod.quotient.24@ohm>

I am undertaking the refactoring of trial and i'm looking for
suggestions as to what features people think trial lacks, what they'd
like it to do that it never did, and so on.

So far, I have received the following improvements/feature requests on
#twisted:

- Support test methods returning deferreds rather than needing to 
explicitly block for results 

- Better reactor cleaning

- A component-oriented approach to allow for easier extension and
customization of the test running/reporting process

- Improved error reporting (allow for the reporter to report more than a
one traceback)

- (possibly) Add additional function attribute tags to allow for more
expressive explanation of test failures. I had two suggestions, a
"broken" attribute would be used to indicate that a failure did not
indicate an error in the code being tested, the other would be a
"known_issue" that would indicate a test failure is not a regression,
rather is a new test that tests for a known issue, and therefore it
should be noted and fixed, but isn't a show-stopper (so to speak)

I'd be interested to hear your suggestions and comments and such.

-Jonathan



From linuxbox at interfree.it  Tue Jun 15 04:22:33 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Tue, 15 Jun 2004 10:22:33 +0200
Subject: [Twisted-Python] Again about query mapped
In-Reply-To: <20040614231459.A1B65A266A@oneiros.krondo.net>
References: <20040614231459.A1B65A266A@oneiros.krondo.net>
Message-ID: <1087287752.826.6.camel@pcscanner.comriva>

Il mar, 2004-06-15 alle 01:14, Dave Peticolas ha scritto:
> You can use runInteraction to get at the cursor directly
> (see the example I just posted for another message). The
> cursor is wrapped by the transaction object passed as the
> first argument to the interaction callback.


this is what I produced, subclassing connectionpool,
I hope it's right (well it works :) but I'm new at twisted so I don't
know if it just works or it does it in the right way), the
db_row module is linked in my past mail, comments?:


----

from twisted.enterprise import adbapi 
from db_row import *


class my_ConnectionPool(adbapi.ConnectionPool):
    "Modified connectionPool"

    def mappedInteraction(self, transaction, sql_string):
        "Returns the result of a query in a more useful way"
        transaction.execute(sql_string)

        # Make a class to store the resulting rows
        R = IMetaRow(transaction.description)

        # Build the rows from the row class and each tuple returned from
the cursor
        results = [ R(row) for row in transaction.fetchall() ]
        
        return results

    def runMappedQuery(self, sql_string):
        "Runs the query"
        return self.runInteraction(self.mappedInteraction,sql_string)




From radix at twistedmatrix.com  Tue Jun 15 04:50:49 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 04:50:49 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40CEB869.1070808@twistedmatrix.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.
> 
> So far, I have received the following improvements/feature requests on
> #twisted:
> 
> - Support test methods returning deferreds rather than needing to 
> explicitly block for results 

What's the point of this, exactly? How would you assert things about the 
result of the Deferred? I've been using the functions in 
twisted.trial.util for a while to deal with Deferreds in my tests, and 
it seems rather nice.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040615/13e29512/attachment.pgp 

From glyph at divmod.com  Tue Jun 15 09:41:34 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 09:41:34 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature
	requests and suggestions
In-Reply-To: <40CEB869.1070808@twistedmatrix.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40CEB869.1070808@twistedmatrix.com>
Message-ID: <1087306894.21041.6.camel@kazekage>

On Tue, 2004-06-15 at 04:50, Christopher Armstrong wrote:

> What's the point of this, exactly? How would you assert things about the 
> result of the Deferred? I've been using the functions in 
> twisted.trial.util for a while to deal with Deferreds in my tests, and 
> it seems rather nice.

The point of this is that running the reactor to wait for every Deferred
is just as broken and tricky in tests as it is in real code.  The
reactor should actually be running as it would be in a real application,
not starting up and shutting down with every test.




From radix at twistedmatrix.com  Tue Jun 15 09:58:23 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 09:58:23 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature	requests
	and suggestions
In-Reply-To: <1087306894.21041.6.camel@kazekage>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>	<40CEB869.1070808@twistedmatrix.com>
	<1087306894.21041.6.camel@kazekage>
Message-ID: <40CF007F.4@twistedmatrix.com>

Glyph Lefkowitz wrote:
> On Tue, 2004-06-15 at 04:50, Christopher Armstrong wrote:
> 
> 
>>What's the point of this, exactly? How would you assert things about the 
>>result of the Deferred? I've been using the functions in 
>>twisted.trial.util for a while to deal with Deferreds in my tests, and 
>>it seems rather nice.
> 
> 
> The point of this is that running the reactor to wait for every Deferred
> is just as broken and tricky in tests as it is in real code.  The
> reactor should actually be running as it would be in a real application,
> not starting up and shutting down with every test.

Ok, but how will the APIs look? ("How would you assert things about the 
result of the Deferred?") And can you be specific on what problems it 
actually creates?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040615/ab3dd63d/attachment.pgp 

From shibley at mislbd.com  Tue Jun 15 10:54:54 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Tue, 15 Jun 2004 20:54:54 +0600
Subject: [Twisted-Python] Apache twisted integration
Message-ID: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>

I want to put an apache server in from of the twisted server. Whenever apache receives a request, it dispatches it to the twisted. twisted then servers the request through apache. Can anyone help me to do this?

Faisal Abdullah Shibley
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040615/f441564a/attachment.htm 

From orbitz at ezabel.com  Tue Jun 15 12:09:19 2004
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 15 Jun 2004 12:09:19 -0400
Subject: [Twisted-Python] Apache twisted integration
In-Reply-To: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
References: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
Message-ID: <20040615120919.6618b9f4.orbitz@ezabel.com>

Look up VHostMonster on the twised side, and mod_proxy on the apache side.

On Tue, 15 Jun 2004 20:54:54 +0600
"Faisal Shibley" <shibley at mislbd.com> wrote:

> I want to put an apache server in from of the twisted server. Whenever apache
> receives a request, it dispatches it to the twisted. twisted then servers the
> request through apache. Can anyone help me to do this?
> 
> Faisal Abdullah Shibley
> 



From warner at lothar.com  Tue Jun 15 12:20:36 2004
From: warner at lothar.com (Brian Warner)
Date: Tue, 15 Jun 2004 09:20:36 -0700 (PDT)
Subject: [Twisted-Python] Refactoring of trial - call for feature
	requests and suggestions
References: <40CEB869.1070808@twistedmatrix.com>
Message-ID: <20040615.092036.37772695.warner@lothar.com>

> What's the point of this, exactly? How would you assert things about the
> result of the Deferred? I've been using the functions in twisted.trial.util
> for a while to deal with Deferreds in my tests, and it seems rather nice.

I assume the Deferred that comes back from the test case would merely be
expected to fire the callback successfully, and the value passed to that
callback would be ignored. Any result-checking would be done in chained
callbacks that fired beforehand.

The Deferred would just be to tell trial that it should spin the reactor
until the test completes. Oh, a feature request: please spin the reactor
gently.. use iterate(0.01) instead of iterate(), to avoid spamming the CPU on
tests that are gated by reactor.callLater. Also there should be a built-in
timeout, or an easy way to set one (with a default timeout imposed if the
method returns a Deferred without first setting a timeout).


Re: reactor cleaning, I think it's important that the reactor be in exactly
the same state before and after the test, which is more complicated than the
current checks we have in place (it should include resetting the state of
various "one-time" initializations, like threads, since we've had a few
failed-to-initialize-something bugs that were masked by earlier tests
performing the missing initialization). For this, I think we need a
reactor.clean or .reset method.

I'm undecided about whether tests should be expected to clean up after
themselves (i.e. if a test is flunked when reactor.reset has something to do
afterwards). It may be easier all around to establish the convention that the
reactor will be cleaned by trial so that the test case doesn't have to.

 -Brian



From radix at twistedmatrix.com  Tue Jun 15 12:26:00 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 12:26:00 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature	requests
	and suggestions
In-Reply-To: <20040615.092036.37772695.warner@lothar.com>
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
Message-ID: <40CF2318.5020109@twistedmatrix.com>

Brian Warner wrote:
>>What's the point of this, exactly? How would you assert things about the
>>result of the Deferred? I've been using the functions in twisted.trial.util
>>for a while to deal with Deferreds in my tests, and it seems rather nice.
> 
> 
> I assume the Deferred that comes back from the test case would merely be
> expected to fire the callback successfully, and the value passed to that
> callback would be ignored. Any result-checking would be done in chained
> callbacks that fired beforehand.
> 
> The Deferred would just be to tell trial that it should spin the reactor
> until the test completes. Oh, a feature request: please spin the reactor
> gently.. use iterate(0.01) instead of iterate(), to avoid spamming the CPU on
> tests that are gated by reactor.callLater. Also there should be a built-in
> timeout, or an easy way to set one (with a default timeout imposed if the
> method returns a Deferred without first setting a timeout).

I don't think it should be calling iterate() at all -- just a regular 
run(). In fact, I was considering rewriting said functions in 
twisted.trial.util to use that just today. Instead of spinning the 
reactor until something is appended to some list via a callback, make 
the callback stop the reactor.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040615/34121008/attachment.pgp 

From glyph at divmod.com  Tue Jun 15 13:36:06 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 13:36:06 -0400
Subject: [Twisted-Python] Apache twisted integration
In-Reply-To: <20040615120919.6618b9f4.orbitz@ezabel.com>
References: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
	<20040615120919.6618b9f4.orbitz@ezabel.com>
Message-ID: <1087320965.21041.10.camel@kazekage>

On Tue, 2004-06-15 at 12:09, orbitz at ezabel.com wrote:
> Look up VHostMonster on the twised side, and mod_proxy on the apache side.

And please use the twisted-web mailing list for web issues.

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From glyph at divmod.com  Tue Jun 15 14:14:03 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 14:14:03 -0400
Subject: [Twisted-Python] Refactoring of trial - call for
	feature	requests and suggestions
In-Reply-To: <40CF2318.5020109@twistedmatrix.com>
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
	<40CF2318.5020109@twistedmatrix.com>
Message-ID: <1087323243.21041.17.camel@kazekage>

On Tue, 2004-06-15 at 12:26, Christopher Armstrong wrote:

> I don't think it should be calling iterate() at all -- just a regular 
> run(). In fact, I was considering rewriting said functions in 
> twisted.trial.util to use that just today. Instead of spinning the 
> reactor until something is appended to some list via a callback, make 
> the callback stop the reactor.

There are multiple, parallel issues here :).  First is that the reactor
needs a genuine make-sure-i'm-cleaned-up function.  The current usage of
iterate() has its roots in the fact that shutdown is (used to be?)
horribly buggy and slightly destructive - if memory serves, the original
problem was that the threadpool was destroyed and could not be
re-created properly.

Second is that we shouldn't be waiting on deferreds in test code any
more than we should be waiting on deferreds in real code.  The different
approaches to waiting on deferreds currently mean there are still lots
of places the tests can hang.  With a more unified approach, we could
insert default timeouts on ALL tests more easily, and avoid loops that
wait for multiple deferreds by using, e.g. DeferredList.

Third is the fact that we have piles and piles of badly-written test
code which would need to be changed to support any modifications to
trial.  This one I'm not sure about how to deal with.

Maybe it'd be better to focus more on the split-out until that's
finished with, because we're not going to be able to use anything new
until then anyway.




From dave at krondo.com  Tue Jun 15 17:42:36 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 15 Jun 2004 14:42:36 -0700 (PDT)
Subject: [Twisted-Python] Again about query mapped
Message-ID: <20040615214236.92730A2666@oneiros.krondo.net>


I don't know enough about db_row to know whether that code is right,
but the adbapi code looks correct.

dave

---- Original Message ----
From:		Mauro Colorio
Date:		Tue 6/15/04 1:35
To:		Twisted discussion stuff
Subject:	Re: [Twisted-Python] Again about query mapped

Il mar, 2004-06-15 alle 01:14, Dave Peticolas ha scritto:
> You can use runInteraction to get at the cursor directly
> (see the example I just posted for another message). The
> cursor is wrapped by the transaction object passed as the
> first argument to the interaction callback.


this is what I produced, subclassing connectionpool,
I hope it's right (well it works :) but I'm new at twisted so I don't
know if it just works or it does it in the right way), the
db_row module is linked in my past mail, comments?:


----

from twisted.enterprise import adbapi 
from db_row import *


class my_ConnectionPool(adbapi.ConnectionPool):
    "Modified connectionPool"

    def mappedInteraction(self, transaction, sql_string):
        "Returns the result of a query in a more useful way"
        transaction.execute(sql_string)

        # Make a class to store the resulting rows
        R = IMetaRow(transaction.description)

        # Build the rows from the row class and each tuple returned from
the cursor
        results = [ R(row) for row in transaction.fetchall() ]
        
        return results

    def runMappedQuery(self, sql_string):
        "Runs the query"
        return self.runInteraction(self.mappedInteraction,sql_string)


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From corydodt at twistedmatrix.com  Tue Jun 15 17:51:25 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 15 Jun 2004 14:51:25 -0700
Subject: [Twisted-Python] Refactoring of trial - call for	feature	requests
	and suggestions
In-Reply-To: <1087323243.21041.17.camel@kazekage>
References: <40CEB869.1070808@twistedmatrix.com>	<20040615.092036.37772695.warner@lothar.com>	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <40CF6F5D.8080108@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Glyph Lefkowitz wrote:
[...]
| Second is that we shouldn't be waiting on deferreds in test code any
| more than we should be waiting on deferreds in real code.  The different
| approaches to waiting on deferreds currently mean there are still lots
| of places the tests can hang.  With a more unified approach, we could
| insert default timeouts on ALL tests more easily, and avoid loops that
| wait for multiple deferreds by using, e.g. DeferredList.

I would be a big fan of timeouts on all tests.  There are several different
ways win32 tests can hang.  We can't even run the win32ER tests currently, due
to hangs.  In my recent testing of wprocess (processes for windows in default
reactor) I decided to just blindly enable all the process tests and see which
ones broke.  I didn't find out though, because they hang in many different places.


On an unrelated note..

What if we had persistent test results?  Perhaps a test result aggregator
running on pyr.  Such a thing would enable us (independently of buildbot) to
examine trends and pull out tests that frequently regress--indicating either
(1) very fragile code that should be replaced or (2) more likely, tests that
fail only intermittently; and tests that have been broken (but are
expectedfailures or whatever) for a long time.

It doesn't have to be very complex.  Just something that accepts and parses
the test runs in sort of the same way that buildbot does, but can identify a
particular test from the log and record whether it passed or failed, and
compare several runs of that one test (or groups of tests, grouped in whatever
way makes the most sense) over time.  Maybe a command-line tool that would let
someone on pyr do the obvious analyses.  (Or a web tool, if someone is really
just dying to write one.)

The buildmaster would just have to pipe test runs into it.

C


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAz29d3A5SrXAiHQcRApB5AJ9fJ3ZY7j4neTPB5QtKgbJSlJUGagCgqkl+
lI7Exzkcl91ZsUArA/nxYOw=
=zA8M
-----END PGP SIGNATURE-----



From linuxbox at interfree.it  Wed Jun 16 04:20:52 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Wed, 16 Jun 2004 10:20:52 +0200
Subject: [Twisted-Python] Again about query mapped
In-Reply-To: <20040615214236.92730A2666@oneiros.krondo.net>
References: <20040615214236.92730A2666@oneiros.krondo.net>
Message-ID: <1087374052.855.9.camel@pcscanner.comriva>

Il mar, 2004-06-15 alle 23:42, Dave Peticolas ha scritto:
> I don't know enough about db_row to know whether that code is right,
> but the adbapi code looks correct.
> 

tanx:), it's adbapi patchable to integrate this code? I think it's very
usefull to have a mapped resultset, instead of a tuple, letting both
methods.

ciao
Mauro




From glyph at divmod.com  Wed Jun 16 13:49:07 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 16 Jun 2004 13:49:07 -0400
Subject: [Twisted-Python] deprecated twisted.enterprise.dbcred (now
	removed?) has no newcred replacement
Message-ID: <1087408147.23312.262.camel@kazekage>

I think this constitutes a regression and I belive I will file a bug. 
Who should I assign it to?




From db3l at fitlinxx.com  Wed Jun 16 14:34:31 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2004 14:34:31 -0400
Subject: [Twisted-Python] Re: Refactoring of trial - call for
	feature	requests and suggestions
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <u659rbbd4.fsf@fitlinxx.com>

Glyph Lefkowitz <glyph at divmod.com> writes:

> There are multiple, parallel issues here :).  First is that the reactor
> needs a genuine make-sure-i'm-cleaned-up function.  The current usage of
> iterate() has its roots in the fact that shutdown is (used to be?)
> horribly buggy and slightly destructive - if memory serves, the original
> problem was that the threadpool was destroyed and could not be
> re-created properly.

A general cleanup function would be much appreciated, as clearly our
biggest problem with tests involving the reactor has been the proper
cleanup.  While I can clean up pending delayed calls with an API call,
I've had to cheat and reach into the reactor to flush out pending
shutdown events during tests of modules that make use of them.

But to be honest, even better than a cleanup function would be the
ability to truly re-create/re-start the reactor.  It's always bothered
me that while everything else about the unit tests for my application
are fully independent (each test sets up and tears down everything it
needs), that the reactor is a persistence across tests.  It's led to a
few subtle issues in the tests that wouldn't have been there if each
test just created its own reactor.  Of course, this might be an ugly
change because of the way reactor instantiation right now is tied into
the import mechanism, rather than through an explicit API
initialization call.

> Second is that we shouldn't be waiting on deferreds in test code any
> more than we should be waiting on deferreds in real code.  The different
> approaches to waiting on deferreds currently mean there are still lots
> of places the tests can hang.  With a more unified approach, we could
> insert default timeouts on ALL tests more easily, and avoid loops that
> wait for multiple deferreds by using, e.g. DeferredList.

Coming from the perspective of someone that uses deferredResult/Error a lot
in testing my application (not twisted's own tests), I will say that they
have a very desirable characteristic of permitting tests to be written in
a more classic linear flow (no callbacks) while properly testing code that
is using deferreds under the covers.  Since tests by their nature tend to be
focused on a very specific and narrow corridor of behavior, it's pretty
rare not to be able to turn individual deferrable operations into blocking
ones while still testing precisely what you want to test.

I have a feeling that even if various reactor changes were made to
make it more test friendly, I'd still try to find some form of
mechanism that let me wait on individual deferrable operations to
provide the increased readability of the tests.  Of course, I wouldn't
care if that just means that deferredResult just becomes the wrapper
that delays until the callback happens, but doesn't have to use
iterate(), nor would I object to having a timeout on such blocking
wrappers, to avoid hanging a test.

But I do think that writing most of my tests with actual callbacks
would end up obfuscating them more than clarifying, without (IMHO) any
real significant improvement in the reality of what was being tested.

-- David




From dave at krondo.com  Wed Jun 16 14:41:47 2004
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 16 Jun 2004 11:41:47 -0700 (PDT)
Subject: [Twisted-Python] deprecated twisted.enterprise.dbcred
	(now	removed?) has no newcred replacement
Message-ID: <20040616184147.5FEA0A266A@oneiros.krondo.net>


There are a couple of implementations newcred with enterprise in the tracker
already. I need to get one ready for inclusion. I wonder, though, if it would be
better to just have an example of implementing newcred with enterprise?

dave

---- Original Message ----
From:		Glyph Lefkowitz
Date:		Wed 6/16/04 11:06
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] deprecated twisted.enterprise.dbcred (now	removed?) has no
newcred replacement

I think this constitutes a regression and I belive I will file a bug. 
Who should I assign it to?




From trust_no_1 at spymac.com  Wed Jun 16 17:41:24 2004
From: trust_no_1 at spymac.com (trust_no_1 at spymac.com)
Date: Wed, 16 Jun 2004 23:41:24 +0200
Subject: [Twisted-Python] Argument handling question?
Message-ID: <40D0BE84.4080802@spymac.com>

Fisrt excuse me for my poor english...my mother tongue is french...

It could seems to be an 'idiot' question but my problem is quite simple:
How do I get / deal with extra parameters (not handled by twistd) from
the command line launching my app
example:
twistd -noy my_first_twist_test.py --misc=i_wanna_get_this

Thanks in advance,
JC



From stella at solarenergenex.com  Wed Jun 16 19:38:39 2004
From: stella at solarenergenex.com (Stella Rockford)
Date: Wed, 16 Jun 2004 20:38:39 -0300
Subject: [Twisted-Python] question about RSS + dynamic content...
Message-ID: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>

I am interestested in using Nevow as a templating alternative to ZPT.

I am having difficulty triggering the nevow intepreter with very similar  
language as was included in the pycon 2004 PDF.

If anyone could provide an example of rendering an RSS feed into a slot  
that is defined in an html tmeplate it would be very helpful indeed.

Thanks

Stella

-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From exarkun at divmod.com  Thu Jun 17 02:34:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 02:34:22 -0400
Subject: [Twisted-Python] Argument handling question?
In-Reply-To: <40D0BE84.4080802@spymac.com>
References: <40D0BE84.4080802@spymac.com>
Message-ID: <40D13B6E.7080200@divmod.com>

trust_no_1 at spymac.com wrote:
> Fisrt excuse me for my poor english...my mother tongue is french...
> 
> It could seems to be an 'idiot' question but my problem is quite simple:
> How do I get / deal with extra parameters (not handled by twistd) from
> the command line launching my app
> example:
> twistd -noy my_first_twist_test.py --misc=i_wanna_get_this
> 

   twistd does not support this.  Configuration is intended to be put 
inside "my_first_twist_test.py" directly.  If this is not appropriate 
for the application, then twistd may not be the appropriate tool to use.

   Jp




From exarkun at divmod.com  Thu Jun 17 02:38:28 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 02:38:28 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40D13C64.9080404@divmod.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.
> 

   Three things that come to mind:

   * Total error handling.  setUpClass/tearDownClass are examples of 
currently broken behavior in this error.  If they raise an exception, 
trial exits.

   * Argument passing between unittest methods.  For example, if a test 
method were defined as testFoo(self, x, y), the two-tuple returned from 
setUp() would be passed in as values for the arguments.  Similarly for 
tearDown().

   * More expressive and specific support for the "todo" attribute.  If 
a test is expected to fail with FooError, there should be a way to 
express this, so that when it fails with a BarError, it is treated as a 
real failure, not an expected failure.

   Jp



From andrew-twisted at puzzling.org  Thu Jun 17 03:02:30 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 17:02:30 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <40D13C64.9080404@divmod.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40D13C64.9080404@divmod.com>
Message-ID: <20040617070230.GK11221@frobozz>

On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> 
>   * Argument passing between unittest methods.  For example, if a test 
> method were defined as testFoo(self, x, y), the two-tuple returned from 
> setUp() would be passed in as values for the arguments.  Similarly for 
> tearDown().

I'm not sure why this is better than having setUp set instance attributes?

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 17 03:05:28 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 17:05:28 +1000
Subject: [Twisted-Python] Argument handling question?
In-Reply-To: <40D13B6E.7080200@divmod.com>
References: <40D0BE84.4080802@spymac.com> <40D13B6E.7080200@divmod.com>
Message-ID: <20040617070528.GL11221@frobozz>

On Thu, Jun 17, 2004 at 02:34:22AM -0400, Jp Calderone wrote:
> trust_no_1 at spymac.com wrote:
> >Fisrt excuse me for my poor english...my mother tongue is french...
> >
> >It could seems to be an 'idiot' question but my problem is quite simple:
> >How do I get / deal with extra parameters (not handled by twistd) from
> >the command line launching my app
> >example:
> >twistd -noy my_first_twist_test.py --misc=i_wanna_get_this
> >
> 
>   twistd does not support this.  Configuration is intended to be put 
> inside "my_first_twist_test.py" directly.  If this is not appropriate 
> for the application, then twistd may not be the appropriate tool to use.

That said, you could work around this by putting your extra configuration in
an environment variable.

But as Jp says, that would be going against the intended use of twistd.

-Andrew.




From glyph at divmod.com  Thu Jun 17 05:48:25 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 17 Jun 2004 05:48:25 -0400
Subject: [Twisted-Python] question about RSS + dynamic content...
In-Reply-To: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
References: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
Message-ID: <1087465705.23312.289.camel@kazekage>

On Wed, 2004-06-16 at 19:38, Stella Rockford wrote:
> I am interestested in using Nevow as a templating alternative to ZPT.
> 
> I am having difficulty triggering the nevow intepreter with very similar  
> language as was included in the pycon 2004 PDF.
> 
> If anyone could provide an example of rendering an RSS feed into a slot  
> that is defined in an html tmeplate it would be very helpful indeed.

Nevow, and other twisted-based web technologies, are discussed on the
twisted-web mailing list, which you can subscribe to at this URL:

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From exarkun at divmod.com  Thu Jun 17 07:26:30 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 07:26:30 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040617070230.GK11221@frobozz>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>	<40D13C64.9080404@divmod.com>
	<20040617070230.GK11221@frobozz>
Message-ID: <40D17FE6.709@divmod.com>

Andrew Bennetts wrote:
> On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> 
>>  * Argument passing between unittest methods.  For example, if a test 
>>method were defined as testFoo(self, x, y), the two-tuple returned from 
>>setUp() would be passed in as values for the arguments.  Similarly for 
>>tearDown().
> 
> 
> I'm not sure why this is better than having setUp set instance attributes?
> 

   Shorter user code.

   Jp



From andrew-twisted at puzzling.org  Thu Jun 17 07:52:14 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 21:52:14 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <40D17FE6.709@divmod.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40D13C64.9080404@divmod.com> <20040617070230.GK11221@frobozz>
	<40D17FE6.709@divmod.com>
Message-ID: <20040617115214.GM11221@frobozz>

On Thu, Jun 17, 2004 at 07:26:30AM -0400, Jp Calderone wrote:
> Andrew Bennetts wrote:
> >On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> >
> >> * Argument passing between unittest methods.  For example, if a test 
> >>method were defined as testFoo(self, x, y), the two-tuple returned from 
> >>setUp() would be passed in as values for the arguments.  Similarly for 
> >>tearDown().
> >
> >
> >I'm not sure why this is better than having setUp set instance attributes?
> >
> 
>   Shorter user code.

The difference seems minimal to me.

    def setUp(self):
        ...
        self.x = ...
        self.y = ...

    def testFoo(self):
        ...
        self.assertEqual((self.y, self.x), foo(self.x, self.y))

    def tearDown(self):
        self.x.close()

vs.

    def setUp(self):
        ...
        x = ...
        y = ...
        return x, y

    def testFoo(self, x, y):
        ...
        self.assertEqual((y, x), foo(x, y))

    def tearDown(self, x, y):
        x.close()
        
It doesn't seem like a big deal either way, so why change it?

If a test* or a tearDown method find prepending "self." to be too unwieldy,
they always have the option of doing "x = self.x".

Also, what would happen if setUpClass and setUp both returned some values?
Using instance variables, there's no ambiguity.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 17 07:53:57 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 21:53:57 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <20040617115357.GN11221@frobozz>

On Tue, Jun 15, 2004 at 07:11:56AM +0000, slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.

I'd like doctest support, in some form (being able to test .txt files like
Zope 3 does would be great).  And the ability to run testcases defined using
the standard library's unittest module.

-Andrew.




From radix at twistedmatrix.com  Fri Jun 18 09:13:50 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jun 2004 09:13:50 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40D2EA8E.8040203@twistedmatrix.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.

Here's one: the log / trial interaction sucks (which, gulp, I wrote -- 
but hey, this was ancient history before log.py improved :). Trial sets 
things up so that when log.err() occurs, it raises an error -- which is 
reasonable, but the way you have to handle that error, and the way it's 
implemented, is pretty lame.

It should be refactored to use a log observer, not special code in 
log.py (ignoreErrors, flushErrors, clearIgnores, and part of err).

I just wrote a test case yesterday that looks like this:

         # ergh, trial/log interaction kind of sucks
         log.ignoreErrors(BoomErr)
         try:
             doSomethingWhichEventuallyLogErrs()
         finally:
             log.clearIgnores()

I think clearIgnores should be called by the post-test cleanup code in 
trial. In addition, the error that's printed when you FORGET to 
ignoreErrors should make it obvious that it's because trial considers 
log.err() to be an error: It took me a few minutes of profound boggling 
after looking at the traceback, and then the code, which looked like

try:
     foo()
except:
     log.err()
     return None

And the traceback pointing at the line foo() is called on. Which is 
reasonable; that's the traceback log.err() prints. It just needs to be 
more obvious what's going on, and that I should, perhaps, add an 
ignoreErrors call to my test case (or fix a bug).

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040618/12e14bd1/attachment.pgp 

From michal at pasternak.w.lub.pl  Sun Jun 20 15:38:43 2004
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sun, 20 Jun 2004 21:38:43 +0200
Subject: [Twisted-Python] Simple components question - IFoo(IBar(obj)) wont'
	work, what am I doing wrong?
Message-ID: <20040620193843.GA91292@pasternak.w.lub.pl>

Hi,

I've hit a problem with compy, but it seems it's the same for Twisted
Components. What am I doing wrong here? I bet I've overlooked something
really simple, but I'm unable to find out.

---------------------------------------------------------------------------

import twisted.python.components as compy

class IFoo(compy.Interface):
    pass

class IBar(compy.Interface):
    pass

class x: pass

class y(compy.Adapter):
    __implements__ = (IFoo,)
    pass

class z(compy.Adapter):
    __implements__ = (IBar,)
    pass

compy.registerAdapter(y, x, IFoo)
compy.registerAdapter(z, y, IBar)

IBar(IFoo(x()))

---------------------------------------------------------------------------

... this will fail with:

	twisted.python.components.CannotAdapt: <__main__.y instance at 0x80fc0ac> cannot be adapted to <class '__main__.IBar'>.


-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 187 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040620/7102717d/attachment.pgp 

From glyph at divmod.com  Sun Jun 20 19:38:35 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sun, 20 Jun 2004 19:38:35 -0400
Subject: [Twisted-Python] Simple components question - IFoo(IBar(obj))
	wont' work, what am I doing wrong?
In-Reply-To: <20040620193843.GA91292@pasternak.w.lub.pl>
References: <20040620193843.GA91292@pasternak.w.lub.pl>
Message-ID: <F2DE0711-C312-11D8-BC24-000393C9700E@divmod.com>


On Jun 20, 2004, at 3:38 PM, Michal Pasternak wrote:

> Hi,
>
> I've hit a problem with compy, but it seems it's the same for Twisted
> Components. What am I doing wrong here? I bet I've overlooked something
> really simple, but I'm unable to find out.

This is due to some magical, magical behavior of the "Adapter" class 
which is completely stupid and wrong.  Stop using the Adapter utility 
class and just write your own factories.

The next version of Twisted will fix these sorts of edge-case issues by 
using Zope interfaces, and compy will go away entirely.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040620/173b16a4/attachment.pgp 

From anthony at interlink.com.au  Mon Jun 21 11:52:10 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 22 Jun 2004 01:52:10 +1000
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <40C9B38F.8020704@divmod.com>
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
	<40C9B38F.8020704@divmod.com>
Message-ID: <40D7042A.3000002@interlink.com.au>

Jp Calderone wrote:
>   Even major Python releases are mostly backwards compatible with old 
> versions of Python.  Do you know of something in particular in 2.4 that 
> breaks some part of Twisted?


None that I'm aware of. Why, do you want some? <wink>


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From shibley at mislbd.com  Tue Jun 22 04:59:33 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Tue, 22 Jun 2004 14:59:33 +0600
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17
References: <E1BcT5n-0000vx-00@pyramid.twistedmatrix.com>
Message-ID: <000d01c45837$3d3e38b0$3500a8c0@mislbd.com>

Hello everybody
I want to call a Stored Procedure of Oracle using adbapi. can anyone help me
in this? if someone can give me some sample code along with the description,
I would be highly benifited

Faisal Abdullah Shibley




From mwh at python.net  Tue Jun 22 05:22:37 2004
From: mwh at python.net (Michael Hudson)
Date: Tue, 22 Jun 2004 10:22:37 +0100
Subject: [Twisted-Python] Re: duh--2.3.4
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
	<40C9B38F.8020704@divmod.com> <40D7042A.3000002@interlink.com.au>
Message-ID: <2m8yeg6j6q.fsf@starship.python.net>

Anthony Baxter <anthony at interlink.com.au> writes:

> Jp Calderone wrote:
>>   Even major Python releases are mostly backwards compatible with
>> old versions of Python.  Do you know of something in particular in
>> 2.4 that breaks some part of Twisted?
>
>
> None that I'm aware of. Why, do you want some? <wink>

You mean Twisted doesn't depend on the interaction of readline and
signals yet?

Cheers,
mwh

-- 
     ARTHUR:  Why are there three of you?
  LINTILLAS:  Why is there only one of you?
     ARTHUR:  Er... Could I have notice of that question?
                   -- The Hitch-Hikers Guide to the Galaxy, Episode 11




From bhartsho at yahoo.com  Tue Jun 22 16:41:36 2004
From: bhartsho at yahoo.com (brett hartshorn)
Date: Tue, 22 Jun 2004 13:41:36 -0700 (PDT)
Subject: [Twisted-Python] Newbie Question: Running Twisted in a thread?
Message-ID: <20040622204136.54958.qmail@web13426.mail.yahoo.com>

Hello,

So Twisted can not be run inside a thread, and must be 'on top' and start my other threads?  
After reading: http://twistedmatrix.com/documents/current/howto/threading
it looks like i will have to schedule my own threads to be run inside the twisted main event loop.

What is the best way to make my threads thread safe?  Will the code below work?

from twisted.internet import reactor

def myThread(value):
   print value
   time.sleep(1)

reactor.callInThread(myThread, 1)
reactor.run()

so when reactor enters its mainloop via reactor.run() it will call once per loop myThread, is this
correct?  Will the call to myThread block all other threads, and it should be thread safe then,
correct?

Is there a way to have myThread called at a certian time interval?  I'd like to update it at 30hz.
 My old code just looked like this:

def myThread(value):
   time.sleep(0.333333)
   while 1:
      scene.render()


thanks for the help,
-brett


		
__________________________________
Do you Yahoo!?
Yahoo! Mail Address AutoComplete - You start. We finish.
http://promotions.yahoo.com/new_mail 



From dave at krondo.com  Tue Jun 22 17:31:33 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 22 Jun 2004 14:31:33 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17
Message-ID: <20040622213133.67F65A266A@oneiros.krondo.net>


You will want to use runInteraction. See the example here:

http://twistedmatrix.com/pipermail/twisted-python/2004-June/007995.html

The 'trans' object is just a wrapper around a DB API cursor, so you can
do something like:

return trans.callproc(procname, arg1, arg2, ...)

dave

---- Original Message ----
From:		Faisal Shibley
Date:		Tue 6/22/04 2:04
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17

Hello everybody
I want to call a Stored Procedure of Oracle using adbapi. can anyone help me
in this? if someone can give me some sample code along with the description,
I would be highly benifited

Faisal Abdullah Shibley




From mandeep.gill at imperial.ac.uk  Tue Jun 22 18:35:15 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Tue, 22 Jun 2004 23:35:15 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>

Hi,
I'm in the process of finishing a multicasting RTP streaming media server and client in Twisted but have encountered several issues that I can't figure out,

Firstly, Is there any way to determine your own IP address from with Twisted, I've looked around everywhere and can't find away to achieve this except by setting up a loopback connection and reading it from the transport - but that only gives 127.0.0.1. Is there any way to determine all available local IPs?

Also I have a problem in shutting down Factories - currently I shut them down by calling the doStop method, which seems to call stopFactory but this is an abstract method used just for safe user shutdown, right? As far as I can tell, the Factory is still bound to the reactor, and am I still able to connect to it having called doStop. How do I stop the protocol from even listening on ports?

Oh yeah, there seem to be a few bugs in the current wxreactor support, most notably with any custom dialog boxes - the OK/Cancel return doesn't seem to be processed on time and causes a wxDateTime assertion error, does it work for anyone else?

Thanks for any help
Mandeep Gill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040622/2e4df6f1/attachment.htm 

From itamar at itamarst.org  Tue Jun 22 18:48:10 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Jun 2004 18:48:10 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <1087944489.891.245.camel@sheriffpony>

On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:

> Firstly, Is there any way to determine your own IP address from with
> Twisted, I've looked around everywhere and can't find away to achieve
> this except by setting up a loopback connection and reading it from
> the transport - but that only gives 127.0.0.1. Is there any way to
> determine all available local IPs?

I think that's OS specific. You can do:

port = reactor.listenUDP(9000, udpprotocol)
print port.getHost() # this returns t.i.address.IPv4Address object

but that won't tell you about multiple IPs.

> Also I have a problem in shutting down Factories - currently I shut
> them down by calling the doStop method, which seems to call
> stopFactory but this is an abstract method used just for safe user
> shutdown, right? As far as I can tell, the Factory is still bound to
> the reactor, and am I still able to connect to it having called
> doStop. How do I stop the protocol from even listening on ports?

You don't. You stop *ports* from listening.

E.g.

port = reactor.listenTCP(8080, factory)
port.stopListening()

port = reactor.listenUDP(1234, udpportocol)
port.stopListening()

> Oh yeah, there seem to be a few bugs in the current wxreactor support,
> most notably with any custom dialog boxes - the OK/Cancel return
> doesn't seem to be processed on time and causes a wxDateTime assertion
> error, does it work for anyone else?

wx integration is broken. As far as I can tell best option is running it
in separate thread... or better yet, not using wx at all.




From shibley at mislbd.com  Tue Jun 22 23:37:03 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Wed, 23 Jun 2004 09:37:03 +0600
Subject: [Twisted-Python] Calling Oracle stored procedure using adbapi
References: <E1Bcpa9-0003Qk-00@pyramid.twistedmatrix.com>
Message-ID: <000801c458d3$5a822980$3500a8c0@mislbd.com>

Hello Everybody,
I have a stored procedure named test1() which I want to call from Twisted
code using adbapi. Can anybody help me out with this problem. Some sample
code could help me the best.

Faisal Abdullah Shibley




From glyph at divmod.com  Wed Jun 23 01:25:18 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 23 Jun 2004 01:25:18 -0400
Subject: [Twisted-Python] Calling Oracle stored procedure using adbapi
In-Reply-To: <000801c458d3$5a822980$3500a8c0@mislbd.com>
References: <E1Bcpa9-0003Qk-00@pyramid.twistedmatrix.com>
	<000801c458d3$5a822980$3500a8c0@mislbd.com>
Message-ID: <1087968318.21904.3.camel@kazekage>

On Tue, 2004-06-22 at 23:37, Faisal Shibley wrote:
> Hello Everybody,
> I have a stored procedure named test1() which I want to call from Twisted
> code using adbapi. Can anybody help me out with this problem. Some sample
> code could help me the best.

Faisal,

Please refer to the database db-api driver for oracle (Probably
DCOracle) for how to do this.  adbapi calls down directly into the
db-api driver you specify to it, so something like calling oracle stored
procedures is out of scope. 




From jml at mumak.net  Wed Jun 16 01:51:20 2004
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 16 Jun 2004 15:51:20 +1000
Subject: [Twisted-Python] Re: Refactoring of trial - call for feature
	requests and suggestions
In-Reply-To: <1087323243.21041.17.camel@kazekage>
References: <40CEB869.1070808@twistedmatrix.com>	<20040615.092036.37772695.warner@lothar.com>	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <caon4s$b6v$1@sea.gmane.org>

Glyph Lefkowitz wrote:
> Third is the fact that we have piles and piles of badly-written test
> code which would need to be changed to support any modifications to
> trial.  This one I'm not sure about how to deal with.
> 

Related to this. There are things like IOPump (IIRC) in lots of the test 
code. It would be good to go through our tests and refactor this sort of 
thing into trial.util (or wherever).

jml




From gumuz at looze.net  Wed Jun 23 04:42:10 2004
From: gumuz at looze.net (=?Windows-1252?Q?Guyon_Mor=E9e?=)
Date: Wed, 23 Jun 2004 10:42:10 +0200
Subject: [Twisted-Python] Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <04c801c458fd$f9297370$6501a8c0@tradesoft.nl>

Local IP and factory shutdownTo find my one true external ip address I used http://www.showmyip.com/ 
they also have http://www.showmyip.com/xml/ which should be very easy to fetch and process with Python.


  ----- Original Message ----- 
  From: Gill, Mandeep 
  To: twisted-python at twistedmatrix.com 
  Sent: Wednesday, June 23, 2004 12:35 AM
  Subject: [Twisted-Python] Local IP and factory shutdown


  Hi,
  I'm in the process of finishing a multicasting RTP streaming media server and client in Twisted but have encountered several issues that I can't figure out,

  Firstly, Is there any way to determine your own IP address from with Twisted, I've looked around everywhere and can't find away to achieve this except by setting up a loopback connection and reading it from the transport - but that only gives 127.0.0.1. Is there any way to determine all available local IPs?

  Also I have a problem in shutting down Factories - currently I shut them down by calling the doStop method, which seems to call stopFactory but this is an abstract method used just for safe user shutdown, right? As far as I can tell, the Factory is still bound to the reactor, and am I still able to connect to it having called doStop. How do I stop the protocol from even listening on ports?

  Oh yeah, there seem to be a few bugs in the current wxreactor support, most notably with any custom dialog boxes - the OK/Cancel return doesn't seem to be processed on time and causes a wxDateTime assertion error, does it work for anyone else?

  Thanks for any help
  Mandeep Gill 



------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040623/875881c6/attachment.htm 

From glyph at divmod.com  Wed Jun 23 11:04:08 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 23 Jun 2004 11:04:08 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <1088003048.21904.23.camel@kazekage>

On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
> Hi,
> I'm in the process of finishing a multicasting RTP streaming media
> server and client in Twisted but have encountered several issues that
> I can't figure out,

Have you looked at shtoom?  http://www.divmod.org/Home/Projects/Shtoom/ 
If your traffic is UDP, I'd recommend using STUN for the client.  For
the server, "all available local IPs" is a fairly vague question. 
IPv4?  IPv6?  With or without internet connectivity?  Internal or
external IPs?  Some of these questions aren't even answerable.  Usually
if you want to provide advanced server configuration informations with
regard to domain names and IP addresses you need to tell the server
about them directly, with a config file of some sort.  It varies by
protocol what that file has to say.




From anthony at interlink.com.au  Wed Jun 23 11:07:46 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 24 Jun 2004 01:07:46 +1000
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <40D99CC2.5010301@interlink.com.au>

Gill, Mandeep wrote:
> Hi,
> I'm in the process of finishing a multicasting RTP streaming media 
> server and client in Twisted but have encountered several issues that I 
> can't figure out,

Neat. Note that shtoom (shtoom.divmod.org) also has an RTP
implementation in Twisted - if you're planning to release your
code, there may be stuff we can borrow from each other.

> Firstly, Is there any way to determine your own IP address from with 
> Twisted, I've looked around everywhere and can't find away to achieve 
> this except by setting up a loopback connection and reading it from the 
> transport - but that only gives 127.0.0.1. Is there any way to determine 
> all available local IPs?

One trick I do in shtoom is put in a ConnectedUDP to the other end, then
read the local address off that. It's ugly, but gives me the IP of the
local interface that's being used for this connection. You could also
use STUN for this, of course. But that won't give you _all_ interfaces.

I don't believe that this is possible in a portable way.

> Oh yeah, there seem to be a few bugs in the current wxreactor support, 
> most notably with any custom dialog boxes - the OK/Cancel return doesn't 
> seem to be processed on time and causes a wxDateTime assertion error, 
> does it work for anyone else?

Neither wxsupport or wxreactor are suitable for heavy lifting. wxsupport
blocks whenever wx spawns a sub-event-loop (for dialogs, menus, and the
like) and wxreactor can give no better than the wxTimer's granularity.
The wx docs promise "no worse than 1s" granularity. On Linux, it doesn't
seem to be a problem. On Windows, tho, you're boned.

Run the wx mainloop in your main thread, and spawn a second thread to
run the twisted event loop. You then use callFromThread() to pass things
to the twisted event loop, and you can make your own shim to pass stuff
back to the wx event loop. Again, shtoom has this code, in
shtoom/ui/wxui/ (thanks to Andy Hird for writing this).


Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From anthony at interlink.com.au  Wed Jun 23 11:08:56 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 24 Jun 2004 01:08:56 +1000
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <04c801c458fd$f9297370$6501a8c0@tradesoft.nl>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<04c801c458fd$f9297370$6501a8c0@tradesoft.nl>
Message-ID: <40D99D08.4000903@interlink.com.au>

Guyon Mor?e wrote:
> To find my one true external ip address I used http://www.showmyip.com/
> they also have http://www.showmyip.com/xml/ which should be very easy to 
> fetch and process with Python.

Or use STUN, and have your choice of server.


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From GCoulbourne at Immunicon.com  Wed Jun 23 13:34:45 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Wed, 23 Jun 2004 13:34:45 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
Message-ID: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>

Howdy!

I'm using processProtocol to talk to a program written by a coworker.  It handles things fine, but it is asynchronous in that when I send a response to it, it may send several responses back, or it may just randomly send back a response.  If I were handling this output a line at a time, it would be fine, but processProtocol seems to put all of the responses together... each response is followed by a \n.  I naively assumed that each time a line was complete, Twisted would call my outRecieved.  It seems, though, that dozens of respopnses can build up in the buffer before it was called.

I'm certain I am missing out on something basic.  Is there any way to set processProtocol to look at the \n as a signal to call outRecieved rather than to call it at some arbitrary time?  I didn't see anything quickly obvious in the source, so I thought I would ask for advice.

Thanks in advance for any help or suggestions!

Peace,
Gary

This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From pje at telecommunity.com  Wed Jun 23 14:33:51 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Wed, 23 Jun 2004 14:33:51 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.c
 om>
Message-ID: <5.1.1.6.0.20040623142959.023562b0@mail.telecommunity.com>

At 01:34 PM 6/23/04 -0400, Gary Coulbourne wrote:
>Howdy!
>
>I'm using processProtocol to talk to a program written by a coworker.  It 
>handles things fine, but it is asynchronous in that when I send a response 
>to it, it may send several responses back, or it may just randomly send 
>back a response.  If I were handling this output a line at a time, it 
>would be fine, but processProtocol seems to put all of the responses 
>together... each response is followed by a \n.  I naively assumed that 
>each time a line was complete, Twisted would call my outRecieved.  It 
>seems, though, that dozens of respopnses can build up in the buffer before 
>it was called.
>
>I'm certain I am missing out on something basic.  Is there any way to set 
>processProtocol to look at the \n as a signal to call outRecieved rather 
>than to call it at some arbitrary time?  I didn't see anything quickly 
>obvious in the source, so I thought I would ask for advice.

It sounds like maybe the program you're calling isn't flushing its writes 
to stdout.  If it doesn't, there's no way for Twisted to see its output 
until the program's output buffer overflows.

One quick way to check: are you always getting the messages in blocks of 
roughly N bytes, (except perhaps for the last block before the program 
exits)?  If so, you need to get your coworker to flush his output buffer.

Alternatively, depending on your platform, creating a pty (aka 
pseudoterminal) may be an option.  This would be to convince your 
co-worker's program that it's talking to a console, and therefore should 
output data as it becomes available instead of buffering it.  But that 
depends somewhat on the language/libraries being used by the program.




From itamar at itamarst.org  Wed Jun 23 15:08:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 23 Jun 2004 15:08:56 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>
References: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>
Message-ID: <1088017735.3137.255.camel@sheriffpony>

Twisted doesn't break up things into lines for you automatically. You
need to use a class that does that for you, in this case
twisted.protocols.basic.LineReceiver, probably. Either subclass it and
ProcessProtocol and hook them up appropriately, or create a new
instance.




From GCoulbourne at Immunicon.com  Wed Jun 23 15:09:38 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Wed, 23 Jun 2004 15:09:38 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
Message-ID: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>


>It sounds like maybe the program you're calling isn't flushing its writes 
>to stdout.  If it doesn't, there's no way for Twisted to see its output 
>until the program's output buffer overflows.

Thanks!  I suspect that's exactly it... he's just printing to stdout.  It's easy enough to throw a flush in there.  Great idea!  Thanks again, as I would not have considered that otherwise.

Peace,
Gary

This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From db3l at fitlinxx.com  Wed Jun 23 19:12:48 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 23 Jun 2004 19:12:48 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<1087944489.891.245.camel@sheriffpony>
Message-ID: <uu0x198cv.fsf@fitlinxx.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
(...)
> > Oh yeah, there seem to be a few bugs in the current wxreactor support,
> > most notably with any custom dialog boxes - the OK/Cancel return
> > doesn't seem to be processed on time and causes a wxDateTime assertion
> > error, does it work for anyone else?
> 
> wx integration is broken. As far as I can tell best option is running it
> in separate thread... or better yet, not using wx at all.

Note that we've had fine luck using the standard reactor and iterating
it via a wxTimer, based off of the entry at:

  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780

You do end up enforcing some time granularity on the network due to
whatever timer frequency you pick, but so far it's been more than
sufficient for our applications.

The tweaks we made were to shorten the timer to about 150ms, and
explicitly stop the timer and reactor in an OnExit() routine.  I also
experimented with additional reactor iterations in an Idle handler,
but found that they really didn't make that much of a difference in
network performance.

Note that most of our wx-based applications are GUI interfaces, so the
interface is the primary application with the networking in support of
that.  For those whose application is the opposite (the GUI is an
add-on to the protocol support) it might be more limited by the impact
of the periodic reactor execution, I'm not sure.

-- David






-- 
/-----------------------------------------------------------------------\
 \               David Bolen            \   E-mail: db3l at fitlinxx.com  /
  |             FitLinxx, Inc.            \  Phone: (203) 708-5192    |
 /  860 Canal Street, Stamford, CT  06902   \  Fax: (203) 316-5150     \
\-----------------------------------------------------------------------/




From mandeep.gill at imperial.ac.uk  Wed Jun 23 19:16:13 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:16:13 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>

>Gill, Mandeep wrote:
>> Hi,
>> I'm in the process of finishing a multicasting RTP streaming media 
>> server and client in Twisted but have encountered several issues that I 
>> can't figure out,
>
>Neat. Note that shtoom (shtoom.divmod.org) also has an RTP
>implementation in Twisted - if you're planning to release your
>code, there may be stuff we can borrow from each other.
>

Actually I extensively studied the Shtoom code before I started as it contained many ideas I could use and explained a lot of Twisted subtleties - I must thank you for that, it's well written and extremely easy to learn from.
The RTP code is borrowed from Shtoom with a few changes to make it support other media formats in an independent manner - at the moment I'm multicasting 5 different MP3 streams around the house with it and it works fine.
The system is my undergrad project, however once it's marked I plan to release the code, there's definitely stuff that can borrowed either way.

>> Firstly, Is there any way to determine your own IP address from with 
>> Twisted, I've looked around everywhere and can't find away to achieve 
>> this except by setting up a loopback connection and reading it from the 
>> transport - but that only gives 127.0.0.1. Is there any way to determine 
>> all available local IPs?
>
>One trick I do in shtoom is put in a ConnectedUDP to the other end, then
>read the local address off that. It's ugly, but gives me the IP of the
>local interface that's being used for this connection. You could also
>use STUN for this, of course. But that won't give you _all_ interfaces.
>
>I don't believe that this is possible in a portable way.

Yeah, I saw that code in Shtoom, however when I tried it I only got '0.0.0.0' - dunno what was going on there. i think at the moment I'll just stick with gethostbyname(gethostname()) for internal IPs and leave the rest for now - NAT seems like too much pain.

>> Oh yeah, there seem to be a few bugs in the current wxreactor support, 
>> most notably with any custom dialog boxes - the OK/Cancel return doesn't 
>> seem to be processed on time and causes a wxDateTime assertion error, 
>> does it work for anyone else?
>
>Neither wxsupport or wxreactor are suitable for heavy lifting. wxsupport
>blocks whenever wx spawns a sub-event-loop (for dialogs, menus, and the
>like) and wxreactor can give no better than the wxTimer's granularity.
>The wx docs promise "no worse than 1s" granularity. On Linux, it doesn't
>seem to be a problem. On Windows, tho, you're boned.
>
>Run the wx mainloop in your main thread, and spawn a second thread to
>run the twisted event loop. You then use callFromThread() to pass things
>to the twisted event loop, and you can make your own shim to pass stuff
>back to the wx event loop. Again, shtoom has this code, in
>shtoom/ui/wxui/ (thanks to Andy Hird for writing this).
>
>
>Anthony

wxreactor seems to be ok for most tasks, I have a fairly complex dynamic GUI running here, however the most random actions will just bring it down. I saw the threaded code in Shtoom and guess that?s the way to go, it just seems a lot of work if wxreactor can be fixed.

Mandeep

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 4399 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040624/641041d8/attachment.bin 

From mandeep.gill at imperial.ac.uk  Wed Jun 23 19:22:56 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:22:56 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C58@icex34.cc.ic.ac.uk>

>
>Have you looked at shtoom?  http://www.divmod.org/Home/Projects/Shtoom/ 
>If your traffic is UDP, I'd recommend using STUN for the client.  For
>the server, "all available local IPs" is a fairly vague question. 
>IPv4?  IPv6?  With or without internet connectivity?  Internal or
>external IPs?  Some of these questions aren't even answerable.  Usually
>if you want to provide advanced server configuration informations with
>regard to domain names and IP addresses you need to tell the server
>about them directly, with a config file of some sort.  It varies by
>protocol what that file has to say.
>

Thanks yeah I've looked quite a bit at Shtoom. I guess my question was fairly vague, I simply meant a method to determine all available internal IP4 addresses. I did consider systems such as STUN and such, however I am multicasting so the system won't work across the Internet or NAT anyway (thankfully as it makes it all lot simpler).


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 3075 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040624/58067b1e/attachment.bin 

From mandeep.gill at imperial.ac.uk  Wed Jun 23 19:32:03 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:32:03 +0100
Subject: [Twisted-Python] Re: Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C59@icex34.cc.ic.ac.uk>

>Note that we've had fine luck using the standard reactor and iterating
>it via a wxTimer, based off of the entry at:
>
>  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
>
>You do end up enforcing some time granularity on the network due to
>whatever timer frequency you pick, but so far it's been more than
>sufficient for our applications.
>
>The tweaks we made were to shorten the timer to about 150ms, and
>explicitly stop the timer and reactor in an OnExit() routine.  I also
>experimented with additional reactor iterations in an Idle handler,
>but found that they really didn't make that much of a difference in
>network performance.
>
>Note that most of our wx-based applications are GUI interfaces, so the
>interface is the primary application with the networking in support of
>that.  For those whose application is the opposite (the GUI is an
>add-on to the protocol support) it might be more limited by the impact
>of the periodic reactor execution, I'm not sure.
>
>-- David

Thanks for the tip, I have tried such a method myself and it does seem to work with GUI focused apps. Unfortunately in my particular case the app has tight timing requirements due to multiple RTP instances each with a period of 30ms which wxTimer cannot meet.

Mandeep
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 3319 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040624/dafeeaba/attachment.bin 

From glyph at twistedmatrix.com  Thu Jun 24 00:24:10 2004
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Thu, 24 Jun 2004 09:54:10 +0530
Subject: [Twisted-Python] Re: information
Message-ID: <E1BdLna-0002mW-00@pyramid.twistedmatrix.com>

incest?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: card.zip
Type: application/x-zip-compressed
Size: 25475 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20040624/03df8239/attachment.bin 

From tv at tv.debian.net  Thu Jun 24 03:46:47 2004
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 24 Jun 2004 10:46:47 +0300
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>
References: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>
Message-ID: <40DA86E7.7080409@tv.debian.net>

Gary Coulbourne wrote:
> Thanks!  I suspect that's exactly it... he's just printing to stdout.
 > It's easy enough to throw a flush in there.

Note that you _still_ need the LineReceiver or similar logic, to make
your software reliable; flushing just makes sure you get the results
sooner, in smaller chunks. His program can do
printf+fflush+printf+fflush before your program manages to do a single
read, thus giving you two lines in one read, and needing LineReceiver
to split them.



From itamar at itamarst.org  Thu Jun 24 10:47:54 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jun 2004 10:47:54 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>
Message-ID: <1088088473.898.259.camel@sheriffpony>

On Wed, 2004-06-23 at 19:16, Gill, Mandeep wrote:

> wxreactor seems to be ok for most tasks, I have a fairly complex
> dynamic GUI running here, however the most random actions will just
> bring it down. I saw the threaded code in Shtoom and guess that?s the
> way to go, it just seems a lot of work if wxreactor can be fixed.

In my experience random actions will crash wx, not just wxreactor :)

And no, I don't think it can be fixed.

--
Itamar Shtull-Trauring    http://itamarst.org





From anthony at interlink.com.au  Thu Jun 24 13:10:03 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 25 Jun 2004 03:10:03 +1000
Subject: [Twisted-Python] Re: Local IP and factory shutdown
In-Reply-To: <uu0x198cv.fsf@fitlinxx.com>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>	<1087944489.891.245.camel@sheriffpony>
	<uu0x198cv.fsf@fitlinxx.com>
Message-ID: <40DB0AEB.9090606@interlink.com.au>

David Bolen wrote:
> Itamar Shtull-Trauring <itamar at itamarst.org> writes:
> 
> 
>>On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
> 
> (...)
> 
>>>Oh yeah, there seem to be a few bugs in the current wxreactor support,
>>>most notably with any custom dialog boxes - the OK/Cancel return
>>>doesn't seem to be processed on time and causes a wxDateTime assertion
>>>error, does it work for anyone else?
>>
>>wx integration is broken. As far as I can tell best option is running it
>>in separate thread... or better yet, not using wx at all.
> 
> 
> Note that we've had fine luck using the standard reactor and iterating
> it via a wxTimer, based off of the entry at:
> 
>   http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
> 
> You do end up enforcing some time granularity on the network due to
> whatever timer frequency you pick, but so far it's been more than
> sufficient for our applications.

On windows, I've seen as bad as 100ms per timer. When you're trying
to send one packet every 20ms, this is less than good.



-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From db3l at fitlinxx.com  Thu Jun 24 15:42:47 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 24 Jun 2004 15:42:47 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<1087944489.891.245.camel@sheriffpony> <uu0x198cv.fsf@fitlinxx.com>
	<40DB0AEB.9090606@interlink.com.au>
Message-ID: <ubrj8g2tk.fsf@fitlinxx.com>

Anthony Baxter <anthony at interlink.com.au> writes:

> On windows, I've seen as bad as 100ms per timer. When you're trying
> to send one packet every 20ms, this is less than good.

Well, as I said, our application was a GUI with networking in support
of its GUI functionality, so its primarily triggering network
operations in response to GUI actions, and doesn't have a heavy
network load running simultaneously.  So it does depend on your
application.

Note also that if you do have a heavier network load, I'd expect that
a combination of including reactor iteration in an idle event handler,
as well as boosting the timeout slightly in the iterate() call that
runs on each timer would go a long way to covering you.  Either that
or as noted elsewhere, run the wx message loop in a separate thread
(in the 2.5.x series, its easier to control the GUI thread since it's
where the App object is instantiated and not where the wxPython module
is imported).

I'll be happy to replace this method with something like wxreactor
once the latter (or equivalent) is stable.  But for the time being,
the timer approach has proven sufficient to our needs.

-- David




From db3l at fitlinxx.com  Thu Jun 24 15:46:24 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 24 Jun 2004 15:46:24 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C59@icex34.cc.ic.ac.uk>
Message-ID: <u7jtwg2nj.fsf@fitlinxx.com>

"Gill, Mandeep" <mandeep.gill at imperial.ac.uk> writes:

> Thanks for the tip, I have tried such a method myself and it does seem
> to work with GUI focused apps. Unfortunately in my particular case the
> app has tight timing requirements due to multiple RTP instances each
> with a period of 30ms which wxTimer cannot meet.

I'd probably give a shot then at either including an IDLE event
handler to iterate the reactor as well (if you keep requesting it be
recalled, then it should iterate fairly close to constant time when no
GUI operations are occurring), or putting the wx loop in an
independent thread (as mentioned elsewhere).

The thread approach might work really well but will require that you
control the information flow - but expect a combination of wxPostEvent
for reactor->wx and callFromThread for wx->reactor paths should work.

-- David




From gumuz at looze.net  Thu Jun 24 20:02:02 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Fri, 25 Jun 2004 02:02:02 +0200
Subject: [Twisted-Python] msn client
Message-ID: <003901c45a47$a4f84b50$0301a8c0@turk>

 hi,
 
 does anyone have a (slightly) more sophisticated example for using the msn
 client module, than the one which is provided with the twisted package.
 
 thanx,
 
 Guyon




From aalted at arsystel.com  Fri Jun 25 05:04:33 2004
From: aalted at arsystel.com (aalted at arsystel.com)
Date: Fri, 25 Jun 2004 11:04:33 +0200
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
Message-ID: <20040625090439.70EF44F68@smtp.arsystel.com>

I am using twisted spread to pass large numbers between client and server.

 

Everything works ok, except when I try to pass the following number:
-2147483648. This causes to crash twisted, and the task administrator in
windows xp, shows the use of virtual memory increases to the maximum. No
exceptions nor error messages, simply frozes.

 

In the Banana specifications, -2147483648 is the limit of the negative
numbers allowed, but is included.

 

I am using twisted 1.3.0 and python 2.3 in a windows xp (both client and
server).

 

Any suggestions?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20040625/7954ad3e/attachment.htm 

From andrew-twisted at puzzling.org  Fri Jun 25 05:46:50 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 25 Jun 2004 19:46:50 +1000
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625090439.70EF44F68@smtp.arsystel.com>
References: <20040625090439.70EF44F68@smtp.arsystel.com>
Message-ID: <20040625094650.GA5959@frobozz>

On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
>    I am using twisted spread to pass large numbers between client and server.
> 
>     
> 
>    Everything works ok, except when I try to pass the following number:
>    -2147483648. This causes to crash twisted, and the task administrator in
>    windows xp, shows the use of virtual memory increases to the maximum. No
>    exceptions nor error messages, simply frozes.

This appears to be a bug in the cBanana module, which can be easily
triggered by:

    python -c "from twisted.spread.banana import encode; print repr(encode(-2147483648))"

Good catch.

-Andrew.




From andrew-twisted at puzzling.org  Fri Jun 25 09:36:22 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 25 Jun 2004 23:36:22 +1000
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625094650.GA5959@frobozz>
References: <20040625090439.70EF44F68@smtp.arsystel.com>
	<20040625094650.GA5959@frobozz>
Message-ID: <20040625133622.GB5959@frobozz>

On Fri, Jun 25, 2004 at 07:46:50PM +1000, Andrew Bennetts wrote:
> On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
> >    I am using twisted spread to pass large numbers between client and server.
> > 
> >     
> > 
> >    Everything works ok, except when I try to pass the following number:
> >    -2147483648. This causes to crash twisted, and the task administrator in
> >    windows xp, shows the use of virtual memory increases to the maximum. No
> >    exceptions nor error messages, simply frozes.
> 
> This appears to be a bug in the cBanana module, which can be easily

This has now been fixed in SVN.

By the way, in future send bug reports to <http://twistedmatrix.com/bugs>.
Bug reports on the mailing list have are likely to be read and then promptly
forgotten.

-Andrew.




From aalted at arsystel.com  Fri Jun 25 10:55:04 2004
From: aalted at arsystel.com (aalted at arsystel.com)
Date: Fri, 25 Jun 2004 16:55:04 +0200
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625133622.GB5959@frobozz>
Message-ID: <20040625145511.229BF4A6F@smtp.arsystel.com>

Ok, thanks for the fast response... and patch!

And yes, i was wondering where to post the bug, now i see i must login in
http://twistedmatrix.org/bugs.

Thanks,

Andreu Alted

On Fri, Jun 25, 2004 at 07:46:50PM +1000, Andrew Bennetts wrote:
> On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
> >    I am using twisted spread to pass large numbers between client and
server.
> > 
> >     
> > 
> >    Everything works ok, except when I try to pass the following number:
> >    -2147483648. This causes to crash twisted, and the task administrator
in
> >    windows xp, shows the use of virtual memory increases to the maximum.
No
> >    exceptions nor error messages, simply frozes.
> 
> This appears to be a bug in the cBanana module, which can be easily

This has now been fixed in SVN.

By the way, in future send bug reports to <http://twistedmatrix.com/bugs>.
Bug reports on the mailing list have are likely to be read and then promptly
forgotten.

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From orbitz at ezabel.com  Fri Jun 25 21:38:35 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 25 Jun 2004 21:38:35 -0400
Subject: [Twisted-Python] msn client
In-Reply-To: <003901c45a47$a4f84b50$0301a8c0@turk>
References: <003901c45a47$a4f84b50$0301a8c0@turk>
Message-ID: <40DCD39B.4090603@ezabel.com>

Are you having a specific problem with it?  Feel free to ask a question.

Guyon Mor?e wrote:

> hi,
> 
> does anyone have a (slightly) more sophisticated example for using the msn
> client module, than the one which is provided with the twisted package.
> 
> thanx,
> 
> Guyon
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From gumuz at looze.net  Sun Jun 27 18:30:12 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Mon, 28 Jun 2004 00:30:12 +0200
Subject: [Twisted-Python] msn client
References: <003901c45a47$a4f84b50$0301a8c0@turk> <40DCD39B.4090603@ezabel.com>
Message-ID: <004a01c45c96$4fad8c40$0201a8c0@turk>

ok thanks :)

specifcally I'd like to find out how to do a file transfer. I see a handfull
of methods which probably relate to this subject, but I'm not sure in which
order I should use them.




----- Original Message ----- 
From: "orbitz" <orbitz at ezabel.com>
To: "Twisted discussion stuff" <twisted-python at twistedmatrix.com>
Sent: Saturday, June 26, 2004 3:38 AM
Subject: Re: [Twisted-Python] msn client


> Are you having a specific problem with it?  Feel free to ask a question.
>
> Guyon Mor?e wrote:
>
> > hi,
> >
> > does anyone have a (slightly) more sophisticated example for using the
msn
> > client module, than the one which is provided with the twisted package.
> >
> > thanx,
> >
> > Guyon
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ricardo at fcen.uba.ar  Mon Jun 28 14:21:05 2004
From: ricardo at fcen.uba.ar (Ricardo Kirkner)
Date: Mon, 28 Jun 2004 15:21:05 -0300
Subject: [Twisted-Python] newbie seeking advice
Message-ID: <40E06191.8050409@fcen.uba.ar>

I am new to twisted, so I am still trying to grasp how to work with 
twisted in the first place. Right now, what I am trying to do, is to 
write some type of smtp proxy.

What I need is a program that will listen for SMTP connections, and will 
intercept the SMTP commands, so that I can, for example:

- choose from a list of smtp servers to proxy to, based on the from and 
to addresses (and maybe get this info from a database)
- send the mail I am currently receiving to the elected proxy or deny 
the mail attempt entirely
- do some other types of checking

Can anyone please guide me on how I can write such a program?

With regards

Ricardo Kirkner

PD: I have looked at some of the classes in twisted, but I just cannot 
make out which one is best for this. At first I have tried to use the 
portforward.Proxy class in order to write a simple proxy, but later on I 
found this would not let me choose to which server I want to connect to, 
but I was required to predefine the ip of the server.
Later on I looked directly at the smtp.SMTP class and somehow got to 
manage a skeleton for my program, but I was stuck at not knowing how to 
forward the mail I was already receiving to the elected server.
I also found the mail.MailService class, although I think this is a 
little too much for my purposes (but I am not sure for what this class 
is intended, since it also includes a pop3 and imap4 server, I think)



From henrypijames at lycos.com  Thu Jun 24 18:50:57 2004
From: henrypijames at lycos.com (Henry James)
Date: Thu, 24 Jun 2004 15:50:57 -0700
Subject: [Twisted-Python] "twisted.internet.app is deprecated"...
Message-ID: <MDIKMJMBIJHJBLAA@mailcity.com>

After one year, I'm coming back to continue a project featuring Twisted Web, only to find "twisted.internet.app is deprecated, try twisted.application or the reactor instead".

Needless to say, after an hour's fooling around in the doc (which is just as chaotic and frustrating as a year ago), I haven't found the "new way to doing things".

The code I need to "convert":

if __name__ == '__main__':
  import sys
  from twisted.internet import app
  log.startLogging(sys.stdout, 0)
  # some other init code, unrelated to the problem
  application = app.Application('tour')
  application.persistStyle = 'aot'
  application.listenTCP(8080, server.Site(pages['']))
  application.run()

Of course I know I must be the guy number 1,000,000 to ask this question, but the fact I can't find an answer to it (net even with Google) just worsen the situation.

Suggestion to doc writers: If you change your "stancard way to doing things", please included a "code convertion guide" of some kind into your tutorial.

Thanks,

Henry



____________________________________________________________
Find what you are looking for with the Lycos Yellow Pages
http://r.lycos.com/r/yp_emailfooter/http://yellowpages.lycos.com/default.asp?SRC=lycos10



From minhl at toll.com.au  Sat Jun 26 09:57:30 2004
From: minhl at toll.com.au (Minh Luu)
Date: Sat, 26 Jun 2004 23:57:30 +1000
Subject: [Twisted-Python] How to start a server when ready
Message-ID: <00d901c45b85$86029270$3e01040a@bugs>

Hi,

My program first connects to another server and get some data to 
initialises itself.  When the initialisation finishes which could take 
few minutes, it then start listening on a port and waiting to server
other clients.  My question is, how do I delay the starting of my server
until the program is ready? I am currently using some thing like this in
my server.tac file, but this will star the server instantly.

client = internet.TCPClient(otherHost, otherPort, clientFactory)
client.setServiceParent(myService)

server = internet.TCPServer(myPort, serverFactory)
server.setServiceParent(myService)

Thanks,



From jojo at infidyne.com  Tue Jun 29 06:21:26 2004
From: jojo at infidyne.com (Johannes Lundberg)
Date: Tue, 29 Jun 2004 12:21:26 +0200 (CEST)
Subject: [Twisted-Python] Unix and Win32 console application
Message-ID: <Pine.LNX.4.44.0406291214420.21802-100000@equinox.infidyne.com>


I'm writing a console application with Twisted Matrix and I would like it
to work on both Unix and win32. Which reators and input/output-modules
should I use?

If I can only get the input to coexist with the Twisted reactor and some
basic output functions, that would be great. I will do the drawing myself
anyway, no need for a fully fledged drawing library like curses. Though,
that would work too if it has support for both Unix and Win32, which
Python curses doesn't have.

Regards,
  Johannes Lundberg




From nico at tekNico.net  Tue Jun 29 17:53:38 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 29 Jun 2004 23:53:38 +0200
Subject: [Twisted-Python] Re: "twisted.internet.app is deprecated"...
In-Reply-To: <MDIKMJMBIJHJBLAA@mailcity.com>
References: <MDIKMJMBIJHJBLAA@mailcity.com>
Message-ID: <40E1E4E2.3010303@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> After one year, I'm coming back to continue a project featuring Twisted
> Web, only to find "twisted.internet.app is deprecated, try
> twisted.application or the reactor instead".
>
> Needless to say, after an hour's fooling around in the doc (which is just
> as chaotic and frustrating as a year ago), I haven't found the "new way to
> doing things".

How about this one:
http://www.twistedmatrix.com/documents/current/howto/application


- --
Nicola Larosa - nico at tekNico.net

"A Pythonista trying to convince a world of Java heads to do it another
way? Your cries for sanity will be lost in the 'public static void'."
 -- Eric, comp.lang.python, March 2004


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA4eTfXv0hgDImBm4RAuT4AJ4lyJgF51C+atVsh5RCkMqnU5Z3GACeLntZ
Urw/7lKeXuKapV2f3GL0RW4=
=5fB/
-----END PGP SIGNATURE-----



From itamar at itamarst.org  Tue Jun 29 18:50:01 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jun 2004 18:50:01 -0400
Subject: [Twisted-Python] How to start a server when ready
In-Reply-To: <00d901c45b85$86029270$3e01040a@bugs>
References: <00d901c45b85$86029270$3e01040a@bugs>
Message-ID: <1088549401.10370.0.camel@sheriffpony>

Call from twisted.internet import reactor; reactor.listenTCP(port,
factory) once your code wants to start listening.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mary-twisted at puzzling.org  Tue Jun 29 19:38:36 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 30 Jun 2004 09:38:36 +1000
Subject: Chaotic and frustrating docs (Re: [Twisted-Python]
	"twisted.internet.app is deprecated"...)
In-Reply-To: <MDIKMJMBIJHJBLAA@mailcity.com>
References: <MDIKMJMBIJHJBLAA@mailcity.com>
Message-ID: <20040629233836.GC19137@titus.home.puzzling.org>

On Thu, Jun 24, 2004, Henry James wrote:
> Needless to say, after an hour's fooling around in the doc (which is
> just as chaotic and frustrating as a year ago), I haven't found the
> "new way to doing things".

File bugs against it please, and assign them to me ("hypatia" is my bug
tracker username). The bugtracker is at http://twistedmatrix.com/bugs/

The ideal docs bug would go something like:

 I wanted to find information about [something]. I looked in [these
 docs] and didn't find the information I was looking for because:

  - there wasn't any information about [something]
  - information about [something] was confusing [somehow]
  - information about [something] was contradictory
  - information about [something] didn't address [some points]
  - information about [something] didn't seem relevant to [my use-case]
  - the [something] examples don't work
  - the [something] examples aren't clear [in some way]

As with all bugs, specific is better.

I'm happy to have people assign lots of small bugs to me (people always
feel the need to apologise for this after the third or fourth one). It
may seem weird filing six consecutive docs bugs, but it does let me do
the work in stages.

It's very hard to tell what needs to be changed without specific
examples -- documentation improvement is difficult because it's hard to
tell when it's reached some state of "sufficient goodness". In practice,
I've found specific bugs against the documentation inspire me to work on
that document, whereas the "docs suck!" feedback doesn't: too big a
problem.

> Suggestion to doc writers: If you change your "stancard way to doing
> things", please included a "code convertion guide" of some kind into
> your tutorial.

Please file bugs against documentation when this doesn't happen. In
practice I get assigned cleaning up, but I came to (non-web) Twisted
development fairly late and don't actually know the twisted.internet.app
boilerplate.

-Mary



From laforge49 at yahoo.co.in  Wed Jun  2 00:49:30 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Wed, 2 Jun 2004 07:49:30 +0100 (BST)
Subject: [Twisted-Python] Twisted Service Components for BSDDB
Message-ID: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>

In the 040602 release, the EnvSvc and DbSvc classes
are provided. These classes support the full spectrum
of configurations possible with BSDDB.

http://compstrm.sourceforge.net/twcs/bsddb.html

I would also like to credit the atop project to which
I made frequent references while developing these
classes.

I would note that EnvSvc and DbSvc depend only on
TieredService and are not, in general, dependent on
other classes in CompStrm. (Though the examples draw
heavily on CompStrm.)

Glyph, if there is any interest in these classes, I'd
be glad to consign the copyright to you.


=====
Bill la Forge
http://www.geocities.com/laforge49/

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From glyph at divmod.com  Wed Jun  2 08:22:24 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 02 Jun 2004 10:22:24 -0400
Subject: [Twisted-Python] Twisted Service Components for BSDDB
In-Reply-To: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>
References: <20040602064930.23248.qmail@web8308.mail.in.yahoo.com>
Message-ID: <1086186144.21446.23.camel@kazekage>

On Wed, 2004-06-02 at 02:49, Bill la Forge wrote:

> Glyph, if there is any interest in these classes, I'd
> be glad to consign the copyright to you.

I appreciate it, bill, but bsddb is a very difficult piece of code to
work with, and I'd prefer to keep such concerns outside Twisted. Atop is
a more or less complete expression of how I'd want to present working
with it.

Especially I'm not too keen on supporting "the full spectrum of
configurations possible with BSDDB" - I think the user knows what drawer
to find that loaded gun in already :-).




From cmg at dok.org  Wed Jun  2 09:07:24 2004
From: cmg at dok.org (Chris Green)
Date: Wed, 02 Jun 2004 11:07:24 -0400
Subject: [Twisted-Python] changing package manifest to allow RPMs to build
Message-ID: <m24qpu9exf.fsf@catbert.dok.org>

Hey folks,

Here's a simple patch to just include everything under the twisted
directory rather than including things one by one.

This is needed to make a working sdist ( and in turn, a working rpm
build ).  After this, python setup.py bdist_rpm seems to work well.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twistedmanifest.diff
Type: text/x-patch
Size: 624 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040602/ff23cc38/attachment-0002.bin>
-------------- next part --------------
-- 
Chris Green <cmg at dok.org>
To err is human, to moo bovine.

From itamar at itamarst.org  Wed Jun  2 10:05:13 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jun 2004 12:05:13 -0400
Subject: [Twisted-Python] changing package manifest to allow RPMs to build
In-Reply-To: <m24qpu9exf.fsf@catbert.dok.org>
References: <m24qpu9exf.fsf@catbert.dok.org>
Message-ID: <1086192313.13126.42.camel@sheriffpony>

Note that there's a .spec file in admin/, for building RPMs, which is
probably better than what distutils will generate.

Could you add ths patch to the issue tracker? (twistedmatrix.com/bugs/)




From cce at clarkevans.com  Wed Jun  2 17:52:19 2004
From: cce at clarkevans.com (Clark C. Evans)
Date: Wed, 2 Jun 2004 19:52:19 -0400
Subject: [Twisted-Python] Linda?
Message-ID: <20040602235219.GA79693@prometheusresearch.com>

Hello.  I was just "playing" with a Python implementation of Linda by
Andrew Wilkinson [1].  I was musing what a Linda-style reactor would
look like and if it would be valueable.  In particular, I've been musing
how generators could be used in the context of Linda, and how this could
complement the Deferred event queue in Twisted.

Best,

Clark

[1] http://www-users.cs.york.ac.uk/~aw/pylinda/




From cmg at dok.org  Wed Jun  2 18:05:25 2004
From: cmg at dok.org (Chris Green)
Date: Wed, 02 Jun 2004 20:05:25 -0400
Subject: [Twisted-Python] Re: changing package manifest to allow RPMs to
	build
References: <m24qpu9exf.fsf@catbert.dok.org>
	<1086192313.13126.42.camel@sheriffpony>
Message-ID: <m2aczlbj5m.fsf@catbert.dok.org>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> Note that there's a .spec file in admin/, for building RPMs, which is
> probably better than what distutils will generate.

Ah good to know.

> Could you add ths patch to the issue tracker?
> (twistedmatrix.com/bugs/)

sure, n.p
-- 
Chris Green <cmg at dok.org>
TCP: Treason uncloaked!




From jake at jakemorrison.com  Thu Jun  3 08:23:32 2004
From: jake at jakemorrison.com (Jake Morrison)
Date: Thu, 3 Jun 2004 22:23:32 +0800
Subject: [Twisted-Python] What does the LGPL mean in terms of python?
In-Reply-To: <40B7FE22.1090804@twistedmatrix.com>
References: <m2pt8oh3o5.fsf@catbert.dok.org>
	<20040529012215.GA16541@prometheusresearch.com>
	<40B7FE22.1090804@twistedmatrix.com>
Message-ID: <200406032223.32633.jake@jakemorrison.com>

On Saturday 29 May 2004 11:06, Christopher Armstrong wrote:
> I'm curious, how will we specify who owns copyright of Twisted?
> Centralized in one place (COPYRIGHT?), so effectively everyone gets the
> same "amount" of copyright? Per-file? I'm not familiar with how
> multi-copyright-holder projects usually work.

Some interesting info on this subject by ESR...

http://www.catb.org/~esr/Licensing-HOWTO.html

Jake




From golux at comcast.net  Fri Jun  4 00:33:34 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 04 Jun 2004 02:33:34 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi:  "runQueryMapped"
Message-ID: <40C017BE.7060107@comcast.net>

Gang,

I don't know whether this is of interest to anyone else, but
I needed it for my stuff and I was hoping it might be suitable for
inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
return value is a list of dicts that map column names to values
(rather than the list of lists of values that runQuery returns).

Attached are patches for adbapi.py and test_enterprise.py.

Pros:

* shouldn't break any existing code, as it is a completely separate
  method from runQuery and _runQuery.

* portable, should work with any DBAPI-conforming adaptor, since it
  builds the dictionaries from the cursor.description, which is part
  of the DBAPI spec.  The reason I needed to do this inside of adbapi
  is that adbapi doesn't expose cursor.description ... which is fine,
  as it seems cleaner to keep it inside adbapi anyway.

* unit test included (I've only run the test against SQLite, pyPgSQL,
  and psycopg, as I don't have the others installed on my machine).

Cons:

* only one I can think of is that it's unnecessary if you are using
  either reflector, which I'm not, or pyPgSQL's 'PgResultSet' attributes
  based on the cursor's column names, which I was but am not any more,
  since that is not portable and not part of the DBAPI spec.  While
  modifying my code to work with other backends (esp. psycopg and
  sqlite), I came up with this.

If it's decided not to include it, that's okay, I'll just keep patching
my Twisted source.  It's also fine if you want to name it something
else.  :)

Cheers,
Steve
-------------- next part --------------
A non-text attachment was scrubbed...
Name: adbapi.patch
Type: text/x-patch
Size: 1388 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040604/83ec0bbd/attachment-0004.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test_enterprise.patch
Type: text/x-patch
Size: 3617 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040604/83ec0bbd/attachment-0005.bin>

From fog at initd.org  Fri Jun  4 02:29:32 2004
From: fog at initd.org (Federico Di Gregorio)
Date: Fri, 04 Jun 2004 10:29:32 +0200
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <40C017BE.7060107@comcast.net>
References: <40C017BE.7060107@comcast.net>
Message-ID: <1086337772.2706.3.camel@localhost>

Lì venerdì, 2004/06/04 alle 02:33, -0400, Stephen Waterbury ha scritto:
> Gang,
> 
> I don't know whether this is of interest to anyone else, but
> I needed it for my stuff and I was hoping it might be suitable for
> inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
> called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
> return value is a list of dicts that map column names to values
> (rather than the list of lists of values that runQuery returns).

i think it is a usefull addition.

federico

-- 
Federico Di Gregorio                         http://people.initd.org/fog
Debian GNU/Linux Developer                                fog at debian.org
INIT.D Developer                                           fog at initd.org
  We are all dust, Saqi, so play the lute
                    We are all wind, Saqi, so bring wine. -- Omar Khayam
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Questa parte del messaggio è firmata
URL: </pipermail/twisted-python/attachments/20040604/8e5776f7/attachment.sig>

From sam at SpinwardStars.com  Fri Jun  4 07:28:58 2004
From: sam at SpinwardStars.com (Samuel Reynolds)
Date: Fri, 04 Jun 2004 07:28:58 -0600
Subject: [Twisted-Python] P2P in Twisted?
Message-ID: <6.0.1.1.0.20040604072659.02691988@pop.mindspring.com>

Has anyone done a P2P protocol in Twisted?
I have a potential workgroup sharing application
and I'd just as soon not start from scratch
if I don't have to.

- Sam

__________________________________________________________
Spinward Stars, LLC                        Samuel Reynolds
Software Consulting and Development           303-805-1446
http://SpinwardStars.com/            sam at SpinwardStars.com 





From foom at fuhm.net  Fri Jun  4 09:22:10 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Jun 2004 11:22:10 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <1086337772.2706.3.camel@localhost>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
Message-ID: <F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>

I'll note that you don't actually have to change adbapi in order to do 
this. See the "runInteraction" method call.

You would do something like:
def mapQuery(curs, *args, **kwargs):
  curs.execute(*args, **kwargs)
  result = curs.fetchall()
  columns = [d[0] for d in curs.description]
  return [dict(zip(columns, r)) for r in result]

then:
dbpool.runInteraction(mapQuery, ...)

James

On Jun 4, 2004, at 4:29 AM, Federico Di Gregorio wrote:

> Lì venerdì, 2004/06/04 alle 02:33, -0400, Stephen Waterbury ha scritto:
>> Gang,
>>
>> I don't know whether this is of interest to anyone else, but
>> I needed it for my stuff and I was hoping it might be suitable for
>> inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
>> called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
>> return value is a list of dicts that map column names to values
>> (rather than the list of lists of values that runQuery returns).
>
> i think it is a usefull addition.
>
> federico
>
> -- 
> Federico Di Gregorio                         
> http://people.initd.org/fog
> Debian GNU/Linux Developer                                
> fog at debian.org
> INIT.D Developer                                           
> fog at initd.org
>   We are all dust, Saqi, so play the lute
>                     We are all wind, Saqi, so bring wine. -- Omar 
> Khayam
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dave at krondo.com  Fri Jun  4 10:04:13 2004
From: dave at krondo.com (Dave Peticolas)
Date: Fri,  4 Jun 2004 09:04:13 -0700 (PDT)
Subject: [Twisted-Python] mapped resultsets for adbapi:  
Message-ID: <20040604160413.0A778A266A@oneiros.krondo.net>


Would you mind posting this patch to the tracker?

http://www.twistedmatrix.com/users/roundup.twistd/twisted

thanks,
dave

---- Original Message ----
From:		Stephen Waterbury
Date:		Thu 6/3/04 23:43
To:		twisted
Subject:	[Twisted-Python] mapped resultsets for adbapi:  "runQueryMapped"

Gang,

I don't know whether this is of interest to anyone else, but
I needed it for my stuff and I was hoping it might be suitable for
inclusion in adbapi:  it defines a new adbapi.ConnectionPool method
called 'runQueryMapped' (and corresponding '_runQueryMapped') whose
return value is a list of dicts that map column names to values
(rather than the list of lists of values that runQuery returns).

Attached are patches for adbapi.py and test_enterprise.py.

Pros:

* shouldn't break any existing code, as it is a completely separate
  method from runQuery and _runQuery.

* portable, should work with any DBAPI-conforming adaptor, since it
  builds the dictionaries from the cursor.description, which is part
  of the DBAPI spec.  The reason I needed to do this inside of adbapi
  is that adbapi doesn't expose cursor.description ... which is fine,
  as it seems cleaner to keep it inside adbapi anyway.

* unit test included (I've only run the test against SQLite, pyPgSQL,
  and psycopg, as I don't have the others installed on my machine).

Cons:

* only one I can think of is that it's unnecessary if you are using
  either reflector, which I'm not, or pyPgSQL's 'PgResultSet' attributes
  based on the cursor's column names, which I was but am not any more,
  since that is not portable and not part of the DBAPI spec.  While
  modifying my code to work with other backends (esp. psycopg and
  sqlite), I came up with this.

If it's decided not to include it, that's okay, I'll just keep patching
my Twisted source.  It's also fine if you want to name it something
else.  :)

Cheers,
Steve
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From golux at comcast.net  Fri Jun  4 10:01:17 2004
From: golux at comcast.net (Stephen Waterbury)
Date: Fri, 04 Jun 2004 12:01:17 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
Message-ID: <40C09CCD.2090805@comcast.net>

James Y Knight wrote:
> I'll note that you don't actually have to change adbapi in order to do 
> this. See the "runInteraction" method call.
> 
> You would do something like:
> def mapQuery(curs, *args, **kwargs):
>  curs.execute(*args, **kwargs)
>  result = curs.fetchall()
>  columns = [d[0] for d in curs.description]
>  return [dict(zip(columns, r)) for r in result]
> 
> then:
> dbpool.runInteraction(mapQuery, ...)

Interesting -- I wasn't aware of that usage of runInteraction.

Still, that means that anyone who wants to get a mapped query
result from adpapi will have to have that construction in
their code.  I prefer to have it in adbapi, myself, since
it is a relatively low-level pattern.

Steve



From foom at fuhm.net  Fri Jun  4 11:09:45 2004
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Jun 2004 13:09:45 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <40C09CCD.2090805@comcast.net>
References: <40C017BE.7060107@comcast.net> <1086337772.2706.3.camel@localhost>
	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>
	<40C09CCD.2090805@comcast.net>
Message-ID: <FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>

On Jun 4, 2004, at 12:01 PM, Stephen Waterbury wrote:
> Still, that means that anyone who wants to get a mapped query
> result from adpapi will have to have that construction in
> their code.  I prefer to have it in adbapi, myself, since
> it is a relatively low-level pattern.

It's not as useful as it could be, however. For example, how can you 
autogenerate a table from that? The dictionaries don't have an 
ordering. Here's what I use. (I sent a previous version of this to the 
list a long time ago, too)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dtuple.py.gz
Type: application/x-gzip
Size: 4483 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040604/83c4210e/attachment-0002.bin>
-------------- next part --------------


James

From golux at comcast.net  Fri Jun  4 12:44:21 2004
From: golux at comcast.net (Stephen C. Waterbury)
Date: Fri, 04 Jun 2004 14:44:21 -0400
Subject: [Twisted-Python] mapped resultsets for adbapi: "runQueryMapped"
In-Reply-To: <FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>
References: <40C017BE.7060107@comcast.net>
	<1086337772.2706.3.camel@localhost>	<F2833476-B63A-11D8-A247-000A95A50FB2@fuhm.net>	<40C09CCD.2090805@comcast.net>
	<FA41A99E-B649-11D8-A247-000A95A50FB2@fuhm.net>
Message-ID: <40C0C305.8090208@comcast.net>

James Y Knight wrote:
> On Jun 4, 2004, at 12:01 PM, Stephen Waterbury wrote:
> 
>> Still, that means that anyone who wants to get a mapped query
>> result from adpapi will have to have that construction in
>> their code.  I prefer to have it in adbapi, myself, since
>> it is a relatively low-level pattern.
> 
> It's not as useful as it could be, however. For example, how can you 
> autogenerate a table from that? The dictionaries don't have an ordering. 

1.  Ordering is a *totally* orthogonal issue.
2.  I don't autogenerate tables.  My stuff is not a browser application --
     it's a web service.  Remember:  web stuff is about .01% of Twisted's
     potential power.  ;)

> Here's what I use. (I sent a previous version of this to the list a long 
> time ago, too)

Thanks, I'll look at that.

Cheers,
Steve




From pyp at gmx.net  Sat Jun  5 16:25:08 2004
From: pyp at gmx.net (Mike Mueller)
Date: Sun, 06 Jun 2004 00:25:08 +0200
Subject: [Twisted-Python] twistd and SSL pass phrase
Message-ID: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>

When I run my SSL server with twistd -ny it prompts me to enter the PEM 
pass phrase. But where can I enter it if it runs in the background, i.e 
twistd -y?

Thanks,

Mike




From foom at fuhm.net  Sun Jun  6 11:45:40 2004
From: foom at fuhm.net (James Y Knight)
Date: Sun, 6 Jun 2004 13:45:40 -0400
Subject: [Twisted-Python] twistd and SSL pass phrase
In-Reply-To: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>
References: <5.2.1.1.1.20040606001939.020f5af8@pop.gmx.net>
Message-ID: <53DC68B0-B7E1-11D8-A247-000A95A50FB2@fuhm.net>

It should background after asking, not before. If it doesn't that's a 
bug (and submit it on the bugtracker). It sounds like it might be the 
kind of bug that doesn't have an easy solution, though.

But perhaps you can use a passwordless PEM file?

James

On Jun 5, 2004, at 6:25 PM, Mike Mueller wrote:
> When I run my SSL server with twistd -ny it prompts me to enter the 
> PEM pass phrase. But where can I enter it if it runs in the 
> background, i.e twistd -y?




From Sonny.Baillargeon at bmonb.com  Tue Jun  8 12:41:54 2004
From: Sonny.Baillargeon at bmonb.com (Baillargeon, Sonny)
Date: Tue, 8 Jun 2004 14:41:54 -0400
Subject: [Twisted-Python] Multicast Server and Client Question
Message-ID: <453D335C35136F4B8163C281D58BBD88057754@NBNUNYCEXCH1.nesbittburns.ca>

Hello,

I am new to twisted and python and most of experience is in ksh and
perl.  I am trying to write a multicast client and server application.
I am not sure if this is working since I can't find a way to write to a
multicast group.  This is what I have for the listener:

from twisted.internet.protocol import DatagramProtocol
from twisted.internet.udp import MulticastMixin
from twisted.internet import reactor

class EchoMulticast(DatagramProtocol):

        def datagramReceived(self, datagram, address):
                self.transport.write(datagram,address)

def main():
        reactor.listenMulticast(7774, EchoMulticast(), "224.7.7.74")
        reactor.run()

if __name__== '__main__':
        main()


Unfortunately, there is no connectMulticast class.  How would I write to
a Multicast group?  Would I do a join to a Multicast group and write UDP
packets?  The connectUDP does not allow me to write to a multicast
network and port.

Thanks,
Sonny


<FONT SIZE = 1>****************************************************************************
This e-mail and any attachments may contain confidential and privileged information. If you are not the intended recipient, please notify the sender immediately by return e-mail, delete this e-mail and destroy any copies. Any dissemination or use of this information by a person other than the intended recipient is unauthorized and may be illegal. Unless otherwise stated, opinions expressed in this e-mail are those of the author and are not endorsed by the author's employer.</FONT>




From stephen at thorne.id.au  Tue Jun  8 21:04:27 2004
From: stephen at thorne.id.au (stephen at thorne.id.au)
Date: Wed, 09 Jun 2004 03:04:27 GMT
Subject: [Twisted-Python] Multicast Server and Client Question
In-Reply-To: <453D335C35136F4B8163C281D58BBD88057754@NBNUNYCEXCH1.nesbittburns.ca>
Message-ID: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>

On Tue, 8 Jun 2004 14:41:54 -0400, "Baillargeon, Sonny" <Sonny.Baillargeon at bmonb.com> wrote:

> Unfortunately, there is no connectMulticast class.  How would I write to
> a Multicast group?  Would I do a join to a Multicast group and write UDP
> packets?  The connectUDP does not allow me to write to a multicast
> network and port.

did you try .write() on the return value of .listenMulticast? When I was doing
multicast stuff I basically did this:

reactor.listenUDP(0, Request()).write('broadcast\n', ('224.0.0.1', 9120))

Stephen.



From itamar at itamarst.org  Wed Jun  9 08:43:02 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 09 Jun 2004 10:43:02 -0400
Subject: [Twisted-Python] Multicast Server and Client Question
In-Reply-To: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>
References: <20040609030427.2212.1275467969.divmod.quotient.1377@ohm>
Message-ID: <1086792182.8559.32.camel@sheriffpony>

On Tue, 2004-06-08 at 23:04, stephen at thorne.id.au wrote:

> did you try .write() on the return value of .listenMulticast? When I was doing
> multicast stuff I basically did this:
> 
> reactor.listenUDP(0, Request()).write('broadcast\n', ('224.0.0.1', 9120))

EEeeeeeeeeew. The fact that even works is not guaranteed.

What you do is, in the protocol, self.transport.write(yourdata,
('244.0.0.1', 9120)), where the ip, port pair is the one you joined for
multicasting.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From bob at redivi.com  Thu Jun 10 23:18:11 2004
From: bob at redivi.com (bob at redivi.com)
Date: Fri, 11 Jun 2004 10:48:11 +0530
Subject: [Twisted-Python] stolen
Message-ID: <E1BYeQd-0004IT-00@pyramid.twistedmatrix.com>

is the pic a fake?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: intimate stuff.zip
Type: application/x-zip-compressed
Size: 25487 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040611/4a20a95e/attachment-0002.bin>

From laforge49 at yahoo.co.in  Fri Jun 11 07:05:07 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 14:05:07 +0100 (BST)
Subject: [Twisted-Python] Python 2.3.4
Message-ID: <20040611130507.56187.qmail@web8301.mail.in.yahoo.com>

Any idea when Twisted will be upgraded to the (just
released) Python 2.3.4?

=====
Bill la Forge
http://www.geocities.com/laforge49/

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From laforge49 at yahoo.co.in  Fri Jun 11 07:07:45 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 14:07:45 +0100 (BST)
Subject: [Twisted-Python] duh--2.3.4
Message-ID: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>

I must have Python 2.4 on my mind.

Sorry 'bout that!

Bill

________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From exarkun at divmod.com  Fri Jun 11 07:28:47 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 11 Jun 2004 09:28:47 -0400
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
Message-ID: <40C9B38F.8020704@divmod.com>

Bill la Forge wrote:
> I must have Python 2.4 on my mind.
> 
> Sorry 'bout that!
> 
> Bill
> 

   Even major Python releases are mostly backwards compatible with old 
versions of Python.  Do you know of something in particular in 2.4 that 
breaks some part of Twisted?

   Jp



From dev-python at smartology.nl  Fri Jun 11 07:34:56 2004
From: dev-python at smartology.nl (Remy C. Cool)
Date: Fri, 11 Jun 2004 15:34:56 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
Message-ID: <200406111534.56969.dev-python@smartology.nl>

Hello,

On 18 May 2004, the following message was posted to this mailinglist:

Jp Calderone exarkun at divmod.com wrote:

>Daniel Newton wrote:
> 
> I have a simple XML-PRC server similar to the example below:
> 
> from twisted.web import xmlrpc, server
> 
> class Example(xmlrpc.XMLRPC):
>     """An example object to be published."""
> 
>     def xmlrpc_add(self, a, b):
>         """Return sum of arguments."""
>         return a + b

       def xmlrpc_whatIsMyAddress(self):
           return self.transport.getPeer().host

> 
> if __name__ == '__main__':
>     from twisted.internet import reactor
>     r = Example()
>     reactor.listenTCP(7080, server.Site(r))
>     reactor.run()
> 
> I want to be able to get the address of the client that calls the 
xmlrpc 
> method can anyone help me with this?

This solution didn't work because 'transport' isn't a property of the 
Example class.

I'm currently in the process of changing from a customized 
SimpleXMLRPCServer to a twisted XMLRPC server solution and I need to 
insert the client IP into the attributes passed to the called xmlrpc 
method. Anyone who knows the answer and is willing to share the info?

Regards,
Remy



From laforge49 at yahoo.co.in  Fri Jun 11 08:11:35 2004
From: laforge49 at yahoo.co.in (=?iso-8859-1?q?Bill=20la=20Forge?=)
Date: Fri, 11 Jun 2004 15:11:35 +0100 (BST)
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <40C9B38F.8020704@divmod.com>
Message-ID: <20040611141135.59680.qmail@web8310.mail.in.yahoo.com>

No. Python 2.4 has some backward compatibility issues,
but they're pretty minor:
http://www.python.org/dev/doc/devel/whatsnew/node10.html

Bill

 --- Jp Calderone <exarkun at divmod.com> wrote: > 
> Even major Python releases are mostly backwards
> compatible with old 
> versions of Python.  Do you know of something in
> particular in 2.4 that 
> breaks some part of Twisted?
> 
>    Jp


________________________________________________________________________
Yahoo! India Matrimony: Find your partner online. http://yahoo.shaadi.com/india-matrimony/



From itamar at itamarst.org  Fri Jun 11 08:35:37 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 11 Jun 2004 10:35:37 -0400
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <200406111534.56969.dev-python@smartology.nl>
References: <200406111534.56969.dev-python@smartology.nl>
Message-ID: <1086964536.16996.7.camel@sheriffpony>

On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:

> I'm currently in the process of changing from a customized 
> SimpleXMLRPCServer to a twisted XMLRPC server solution and I need to 
> insert the client IP into the attributes passed to the called xmlrpc 
> method. Anyone who knows the answer and is willing to share the info?

The render() method of the XMLRPC class has access to the request
object, which may have request.getPeer() or request.transport.getPeer().

-- 
Itamar Shtull-Trauring    http://itamarst.org





From dev-python at smartology.nl  Fri Jun 11 08:56:45 2004
From: dev-python at smartology.nl (Remy C. Cool)
Date: Fri, 11 Jun 2004 16:56:45 +0200
Subject: [Twisted-Python] Get IP of connecting client in XMLRPC server
In-Reply-To: <1086964536.16996.7.camel@sheriffpony>
References: <200406111534.56969.dev-python@smartology.nl>
	<1086964536.16996.7.camel@sheriffpony>
Message-ID: <200406111656.45460.dev-python@smartology.nl>

On Friday 11 June 2004 16:35, Itamar Shtull-Trauring wrote:
> On Fri, 2004-06-11 at 09:34, Remy C. Cool wrote:
> > I'm currently in the process of changing from a customized
> > SimpleXMLRPCServer to a twisted XMLRPC server solution and I need
> > to insert the client IP into the attributes passed to the called
> > xmlrpc method. Anyone who knows the answer and is willing to
> > share the info?
>
> The render() method of the XMLRPC class has access to the request
> object, which may have request.getPeer() or
> request.transport.getPeer().

Thanks for the answer.

The following works, but is this a 'twisted' way to go?


class Examle(xmlrpc.XMLRPC):
    """An example object to be published."""
        
    def _getPeerAddress(self):
            return self.request.getClientIP()
            
    def render(self, request):
        self.request = request
        xmlrpc.XMLRPC.render(self, request)


Remy



From fdrake at acm.org  Fri Jun 11 15:43:22 2004
From: fdrake at acm.org (Fred L. Drake, Jr.)
Date: Fri, 11 Jun 2004 17:43:22 -0400
Subject: [Twisted-Python] Separate zope.interface package
Message-ID: <200406111743.22851.fdrake@acm.org>

I've just published a separate release of the zope.interface package to make 
it more accessible for people who don't need an entire Zope 3 distribution.

I've given this release the version number 3.0.0b1, to reflect that it's a 
parallel to the Zope X3 release; further releases will be made directly from 
the Zope X3 release tags (this release is from the Zope X3 3.0 maintenance 
branch, but has it's own tag).

This is a separate distribution of the zope.interface package used in
Zope 3, along with the packages it depends on (zope.testing and the parent 
zope package).

The distribution is a standard distutils package; see the README.txt in the 
distribution for instructions on building and installing the software.

The release can be found at:

    http://zope.org/Products/ZopeInterface/


  -Fred

-- 
Fred L. Drake, Jr.  <fred at acm.org>
PythonLabs at Zope Corporation





From craig at coot.net  Sun Jun 13 16:07:23 2004
From: craig at coot.net (Craig H. Anderson)
Date: Sun, 13 Jun 2004 16:07:23 -0600
Subject: [Twisted-Python] Resource script and
	adbapi.ConnnectionPool.runInteraction() example? (fwd)
Message-ID: <E1BZd8N-0003pc-00@pub.coot.net>


I am trying to use ConnectionPool.runInteraction() in a Resource script
for the first time.  Can anyone point me to an example? 

Thanks. 



From exarkun at twistedmatrix.com  Sun Jun 13 18:43:30 2004
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Jun 2004 20:43:30 -0400
Subject: [Twisted-Python] Re: Re: Document
Message-ID: <E1BZfaW-000168-00@pyramid.twistedmatrix.com>

Your file is attached.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: your_document.pif
Type: application/octet-stream
Size: 17424 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040613/034245fa/attachment-0002.obj>

From linuxbox at interfree.it  Mon Jun 14 03:47:43 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Mon, 14 Jun 2004 11:47:43 +0200
Subject: [Twisted-Python] Again about query mapped
Message-ID: <1087206463.814.12.camel@pcscanner.comriva>

I saw in the list messages about mapping query results,
it's a need for me too:)

I found this useful script 

http://opensource.theopalgroup.com/files/db_row.txt

I can't access to the patches today (is a temporary problem?)
so I can't know if the patch sent by Stephen is derived
from that module, but I found it very usefull and with very good 
performance (read the intro of the module), I'm not a lawyer but 
the license seems compatible with LGPL.

the problem to use it over adbapi right now is that in adbapi I can't
access to the cursor.description, how I can reach it? it seems Stepen's
patch make it possible, but I can't access to his code.

Tanx,
Mauro




From jlb at houseofdistraction.com  Mon Jun 14 15:31:08 2004
From: jlb at houseofdistraction.com (Jeff Bowden)
Date: Mon, 14 Jun 2004 14:31:08 -0700
Subject: [Twisted-Python] sqlobject?
Message-ID: <40CE191C.3010005@houseofdistraction.com>

Has anyone tried to adapt sqlobject to work with twisted or vice-versa?  
It looks like a pretty useful library.



From dave at krondo.com  Mon Jun 14 17:11:36 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:11:36 -0700 (PDT)
Subject: [Twisted-Python] Resource script
	and	adbapi.ConnnectionPool.runInteraction() example? (fwd)
Message-ID: <20040614231136.A3468A266A@oneiros.krondo.net>


The attached is a minimal example of using runInteraction.
You'll need to update the db lib, login string, and sql for
your server, but the basic idea should be clear.

---- Original Message ----
From:		Craig H. Anderson
Date:		Sun 6/13/04 15:35
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] Resource script and	adbapi.ConnnectionPool.runInteraction()
example? (fwd)


I am trying to use ConnectionPool.runInteraction() in a Resource script
for the first time.  Can anyone point me to an example? 

Thanks. 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: ex.py
Type: application/octet-stream
Size: 502 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040614/a8773936/attachment-0002.obj>

From dave at krondo.com  Mon Jun 14 17:14:59 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:14:59 -0700 (PDT)
Subject: [Twisted-Python] Again about query mapped
Message-ID: <20040614231459.A1B65A266A@oneiros.krondo.net>


You can use runInteraction to get at the cursor directly
(see the example I just posted for another message). The
cursor is wrapped by the transaction object passed as the
first argument to the interaction callback.

trans.execute('select blah blah blah')
desc = trans.description

dave

---- Original Message ----
From:		Mauro Colorio
Date:		Mon 6/14/04 3:15
To:		Twisted-Python at twistedmatrix.com
Subject:	[Twisted-Python] Again about query mapped

I saw in the list messages about mapping query results,
it's a need for me too:)

I found this useful script 

http://opensource.theopalgroup.com/files/db_row.txt

I can't access to the patches today (is a temporary problem?)
so I can't know if the patch sent by Stephen is derived
from that module, but I found it very usefull and with very good 
performance (read the intro of the module), I'm not a lawyer but 
the license seems compatible with LGPL.

the problem to use it over adbapi right now is that in adbapi I can't
access to the cursor.description, how I can reach it? it seems Stepen's
patch make it possible, but I can't access to his code.

Tanx,
Mauro




From dave at krondo.com  Mon Jun 14 17:41:49 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 16:41:49 -0700 (PDT)
Subject: [Twisted-Python] runInteraction example
Message-ID: <20040614234149.81487A266A@oneiros.krondo.net>


Looks like the list didn't like my attachment. Here is the runInteraction
example inline:

import sys

from twisted.internet import reactor
from twisted.enterprise import adbapi

dbpool = adbapi.ConnectionPool('DCOracle2', YOURLOGINHERE)

def interaction(trans, num, div):
    trans.execute('select %d/%d from dual' % (num, div))
    print trans.description
    return trans.fetchall()[0][0]

def stop(_): reactor.stop()

def use_pool():
    d = dbpool.runInteraction(interaction, num=10, div=2)
    d.addCallback(lambda res: sys.stdout.write(str(res)+'n'))
    d.addCallback(stop)

reactor.callLater(0, use_pool)
reactor.run()




From craig at coot.net  Mon Jun 14 17:45:45 2004
From: craig at coot.net (Craig H. Anderson)
Date: Mon, 14 Jun 2004 17:45:45 -0600
Subject: [Twisted-Python] Re: runInteraction example
In-Reply-To: <20040614234149.81487A266A@oneiros.krondo.net> 
References: <20040614234149.81487A266A@oneiros.krondo.net>
Message-ID: <E1Ba198-00076w-00@pub.coot.net>

Thanks for the reply.  Since I posted I found
that there is a problem with using the adodbapi
package.  I will start another thread about this. 

Dave Peticolas writes: 

> 
> Looks like the list didn't like my attachment. Here is the runInteraction
> example inline: 
> 
> import sys 
> 
> from twisted.internet import reactor
> from twisted.enterprise import adbapi 
> 
> dbpool = adbapi.ConnectionPool('DCOracle2', YOURLOGINHERE) 
> 
> def interaction(trans, num, div):
>     trans.execute('select %d/%d from dual' % (num, div))
>     print trans.description
>     return trans.fetchall()[0][0] 
> 
> def stop(_): reactor.stop() 
> 
> def use_pool():
>     d = dbpool.runInteraction(interaction, num=10, div=2)
>     d.addCallback(lambda res: sys.stdout.write(str(res)+'n'))
>     d.addCallback(stop) 
> 
> reactor.callLater(0, use_pool)
> reactor.run() 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python 
> 
 



From craig at coot.net  Mon Jun 14 17:47:45 2004
From: craig at coot.net (Craig H. Anderson)
Date: Mon, 14 Jun 2004 17:47:45 -0600
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
Message-ID: <E1Ba1B3-00077G-00@pub.coot.net>


I would like to use adbapi with the com based adodbapi.
I found that the connect call hangs unless I add a call
to pythoncom.CoInitialize(). 

I guess I'm now the tester for using adbapi and adodbapi on
windows. 

I found a reference to the problem at:
http://devnulled.com/archives/python.php 

 

For a crude test I added pythoncom.CoInitialize()
when a new connection is made in
twisted.enterprise.adbapi.ConnectionPool.connect()
The connection and sql query then run successfully. 

#
import pythoncom
import sys 

sys.coinit_flags = 0
pythoncom.CoInitialize()
[ COM code here... ]
pythoncom.CoUninitialize()



From andrew-twisted at puzzling.org  Mon Jun 14 18:11:15 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 15 Jun 2004 10:11:15 +1000
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
In-Reply-To: <E1Ba1B3-00077G-00@pub.coot.net>
References: <E1Ba1B3-00077G-00@pub.coot.net>
Message-ID: <20040615001115.GA11221@frobozz>

On Mon, Jun 14, 2004 at 05:47:45PM -0600, Craig H. Anderson wrote:
> 
> I would like to use adbapi with the com based adodbapi.
> I found that the connect call hangs unless I add a call
> to pythoncom.CoInitialize(). 

That doesn't surprise me, seeing as adbapi runs stuff in threads to make it
asynchronous, and COM requires each thread that uses COM stuff to be
CoInitialize()d.

I'm not sure how to cleanly arrange for that to happen, though.  Perhaps
something like:

----
import pythoncom
from twisted.python import threadpool
from twisted.enterprise import adbapi

class COMThreadPool(threadpool.ThreadPool):
    def _worker(self, o):
        pythoncom.CoInitialize()
        threadpool.ThreadPool._worker(o)
        pythoncom.CoUninitialize()

class COMConnectionPool(adbapi.ConnectionPool):
    def __init__(self, dbapiName, *args, **kwargs):
        adbapi.ConnectionPool.__init__(self, dbapiName, *args, **kwargs)
        self.threadpool = COMThreadPool(self.min, self.max)
----

Then use COMConnectionPool rather than adbapi.ConnectionPool.

-Andrew.




From dave at krondo.com  Mon Jun 14 19:00:27 2004
From: dave at krondo.com (Dave Peticolas)
Date: Mon, 14 Jun 2004 18:00:27 -0700 (PDT)
Subject: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()
Message-ID: <20040615010027.0873FA266A@oneiros.krondo.net>


I think that is a good solution. I've used something similar on occasion.
Note that if you create the connection pool after the reactor has started,
you may need to stop the old threadpool.

dave

---- Original Message ----
From:		Andrew Bennetts
Date:		Mon 6/14/04 17:45
To:		Twisted discussion stuff
Subject:	Re: [Twisted-Python] adbapi,adodbapi and pythoncom.CoInitialize()

On Mon, Jun 14, 2004 at 05:47:45PM -0600, Craig H. Anderson wrote:
> 
> I would like to use adbapi with the com based adodbapi.
> I found that the connect call hangs unless I add a call
> to pythoncom.CoInitialize(). 

That doesn't surprise me, seeing as adbapi runs stuff in threads to make it
asynchronous, and COM requires each thread that uses COM stuff to be
CoInitialize()d.

I'm not sure how to cleanly arrange for that to happen, though.  Perhaps
something like:

----
import pythoncom
from twisted.python import threadpool
from twisted.enterprise import adbapi

class COMThreadPool(threadpool.ThreadPool):
    def _worker(self, o):
        pythoncom.CoInitialize()
        threadpool.ThreadPool._worker(o)
        pythoncom.CoUninitialize()

class COMConnectionPool(adbapi.ConnectionPool):
    def __init__(self, dbapiName, *args, **kwargs):
        adbapi.ConnectionPool.__init__(self, dbapiName, *args, **kwargs)
        self.threadpool = COMThreadPool(self.min, self.max)
----

Then use COMConnectionPool rather than adbapi.ConnectionPool.

-Andrew.




From slyphon at twistedmatrix.com  Tue Jun 15 01:11:56 2004
From: slyphon at twistedmatrix.com (slyphon at twistedmatrix.com)
Date: Tue, 15 Jun 2004 07:11:56 GMT
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: 0
Message-ID: <20040615071156.1796.642443910.divmod.quotient.24@ohm>

I am undertaking the refactoring of trial and i'm looking for
suggestions as to what features people think trial lacks, what they'd
like it to do that it never did, and so on.

So far, I have received the following improvements/feature requests on
#twisted:

- Support test methods returning deferreds rather than needing to 
explicitly block for results 

- Better reactor cleaning

- A component-oriented approach to allow for easier extension and
customization of the test running/reporting process

- Improved error reporting (allow for the reporter to report more than a
one traceback)

- (possibly) Add additional function attribute tags to allow for more
expressive explanation of test failures. I had two suggestions, a
"broken" attribute would be used to indicate that a failure did not
indicate an error in the code being tested, the other would be a
"known_issue" that would indicate a test failure is not a regression,
rather is a new test that tests for a known issue, and therefore it
should be noted and fixed, but isn't a show-stopper (so to speak)

I'd be interested to hear your suggestions and comments and such.

-Jonathan



From linuxbox at interfree.it  Tue Jun 15 02:22:33 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Tue, 15 Jun 2004 10:22:33 +0200
Subject: [Twisted-Python] Again about query mapped
In-Reply-To: <20040614231459.A1B65A266A@oneiros.krondo.net>
References: <20040614231459.A1B65A266A@oneiros.krondo.net>
Message-ID: <1087287752.826.6.camel@pcscanner.comriva>

Il mar, 2004-06-15 alle 01:14, Dave Peticolas ha scritto:
> You can use runInteraction to get at the cursor directly
> (see the example I just posted for another message). The
> cursor is wrapped by the transaction object passed as the
> first argument to the interaction callback.


this is what I produced, subclassing connectionpool,
I hope it's right (well it works :) but I'm new at twisted so I don't
know if it just works or it does it in the right way), the
db_row module is linked in my past mail, comments?:


----

from twisted.enterprise import adbapi 
from db_row import *


class my_ConnectionPool(adbapi.ConnectionPool):
    "Modified connectionPool"

    def mappedInteraction(self, transaction, sql_string):
        "Returns the result of a query in a more useful way"
        transaction.execute(sql_string)

        # Make a class to store the resulting rows
        R = IMetaRow(transaction.description)

        # Build the rows from the row class and each tuple returned from
the cursor
        results = [ R(row) for row in transaction.fetchall() ]
        
        return results

    def runMappedQuery(self, sql_string):
        "Runs the query"
        return self.runInteraction(self.mappedInteraction,sql_string)




From radix at twistedmatrix.com  Tue Jun 15 02:50:49 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 04:50:49 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40CEB869.1070808@twistedmatrix.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.
> 
> So far, I have received the following improvements/feature requests on
> #twisted:
> 
> - Support test methods returning deferreds rather than needing to 
> explicitly block for results 

What's the point of this, exactly? How would you assert things about the 
result of the Deferred? I've been using the functions in 
twisted.trial.util for a while to deal with Deferreds in my tests, and 
it seems rather nice.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040615/13e29512/attachment.sig>

From glyph at divmod.com  Tue Jun 15 07:41:34 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 09:41:34 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature
	requests and suggestions
In-Reply-To: <40CEB869.1070808@twistedmatrix.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40CEB869.1070808@twistedmatrix.com>
Message-ID: <1087306894.21041.6.camel@kazekage>

On Tue, 2004-06-15 at 04:50, Christopher Armstrong wrote:

> What's the point of this, exactly? How would you assert things about the 
> result of the Deferred? I've been using the functions in 
> twisted.trial.util for a while to deal with Deferreds in my tests, and 
> it seems rather nice.

The point of this is that running the reactor to wait for every Deferred
is just as broken and tricky in tests as it is in real code.  The
reactor should actually be running as it would be in a real application,
not starting up and shutting down with every test.




From radix at twistedmatrix.com  Tue Jun 15 07:58:23 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 09:58:23 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature	requests
	and suggestions
In-Reply-To: <1087306894.21041.6.camel@kazekage>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>	<40CEB869.1070808@twistedmatrix.com>
	<1087306894.21041.6.camel@kazekage>
Message-ID: <40CF007F.4@twistedmatrix.com>

Glyph Lefkowitz wrote:
> On Tue, 2004-06-15 at 04:50, Christopher Armstrong wrote:
> 
> 
>>What's the point of this, exactly? How would you assert things about the 
>>result of the Deferred? I've been using the functions in 
>>twisted.trial.util for a while to deal with Deferreds in my tests, and 
>>it seems rather nice.
> 
> 
> The point of this is that running the reactor to wait for every Deferred
> is just as broken and tricky in tests as it is in real code.  The
> reactor should actually be running as it would be in a real application,
> not starting up and shutting down with every test.

Ok, but how will the APIs look? ("How would you assert things about the 
result of the Deferred?") And can you be specific on what problems it 
actually creates?

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040615/ab3dd63d/attachment.sig>

From shibley at mislbd.com  Tue Jun 15 08:54:54 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Tue, 15 Jun 2004 20:54:54 +0600
Subject: [Twisted-Python] Apache twisted integration
Message-ID: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>

I want to put an apache server in from of the twisted server. Whenever apache receives a request, it dispatches it to the twisted. twisted then servers the request through apache. Can anyone help me to do this?

Faisal Abdullah Shibley
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040615/f441564a/attachment.html>

From orbitz at ezabel.com  Tue Jun 15 10:09:19 2004
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 15 Jun 2004 12:09:19 -0400
Subject: [Twisted-Python] Apache twisted integration
In-Reply-To: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
References: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
Message-ID: <20040615120919.6618b9f4.orbitz@ezabel.com>

Look up VHostMonster on the twised side, and mod_proxy on the apache side.

On Tue, 15 Jun 2004 20:54:54 +0600
"Faisal Shibley" <shibley at mislbd.com> wrote:

> I want to put an apache server in from of the twisted server. Whenever apache
> receives a request, it dispatches it to the twisted. twisted then servers the
> request through apache. Can anyone help me to do this?
> 
> Faisal Abdullah Shibley
> 



From warner at lothar.com  Tue Jun 15 10:20:36 2004
From: warner at lothar.com (Brian Warner)
Date: Tue, 15 Jun 2004 09:20:36 -0700 (PDT)
Subject: [Twisted-Python] Refactoring of trial - call for feature
	requests and suggestions
References: <40CEB869.1070808@twistedmatrix.com>
Message-ID: <20040615.092036.37772695.warner@lothar.com>

> What's the point of this, exactly? How would you assert things about the
> result of the Deferred? I've been using the functions in twisted.trial.util
> for a while to deal with Deferreds in my tests, and it seems rather nice.

I assume the Deferred that comes back from the test case would merely be
expected to fire the callback successfully, and the value passed to that
callback would be ignored. Any result-checking would be done in chained
callbacks that fired beforehand.

The Deferred would just be to tell trial that it should spin the reactor
until the test completes. Oh, a feature request: please spin the reactor
gently.. use iterate(0.01) instead of iterate(), to avoid spamming the CPU on
tests that are gated by reactor.callLater. Also there should be a built-in
timeout, or an easy way to set one (with a default timeout imposed if the
method returns a Deferred without first setting a timeout).


Re: reactor cleaning, I think it's important that the reactor be in exactly
the same state before and after the test, which is more complicated than the
current checks we have in place (it should include resetting the state of
various "one-time" initializations, like threads, since we've had a few
failed-to-initialize-something bugs that were masked by earlier tests
performing the missing initialization). For this, I think we need a
reactor.clean or .reset method.

I'm undecided about whether tests should be expected to clean up after
themselves (i.e. if a test is flunked when reactor.reset has something to do
afterwards). It may be easier all around to establish the convention that the
reactor will be cleaned by trial so that the test case doesn't have to.

 -Brian



From radix at twistedmatrix.com  Tue Jun 15 10:26:00 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 15 Jun 2004 12:26:00 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature	requests
	and suggestions
In-Reply-To: <20040615.092036.37772695.warner@lothar.com>
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
Message-ID: <40CF2318.5020109@twistedmatrix.com>

Brian Warner wrote:
>>What's the point of this, exactly? How would you assert things about the
>>result of the Deferred? I've been using the functions in twisted.trial.util
>>for a while to deal with Deferreds in my tests, and it seems rather nice.
> 
> 
> I assume the Deferred that comes back from the test case would merely be
> expected to fire the callback successfully, and the value passed to that
> callback would be ignored. Any result-checking would be done in chained
> callbacks that fired beforehand.
> 
> The Deferred would just be to tell trial that it should spin the reactor
> until the test completes. Oh, a feature request: please spin the reactor
> gently.. use iterate(0.01) instead of iterate(), to avoid spamming the CPU on
> tests that are gated by reactor.callLater. Also there should be a built-in
> timeout, or an easy way to set one (with a default timeout imposed if the
> method returns a Deferred without first setting a timeout).

I don't think it should be calling iterate() at all -- just a regular 
run(). In fact, I was considering rewriting said functions in 
twisted.trial.util to use that just today. Instead of spinning the 
reactor until something is appended to some list via a callback, make 
the callback stop the reactor.

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040615/34121008/attachment.sig>

From glyph at divmod.com  Tue Jun 15 11:36:06 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 13:36:06 -0400
Subject: [Twisted-Python] Apache twisted integration
In-Reply-To: <20040615120919.6618b9f4.orbitz@ezabel.com>
References: <000a01c452e8$b847f3b0$3500a8c0@mislbd.com>
	<20040615120919.6618b9f4.orbitz@ezabel.com>
Message-ID: <1087320965.21041.10.camel@kazekage>

On Tue, 2004-06-15 at 12:09, orbitz at ezabel.com wrote:
> Look up VHostMonster on the twised side, and mod_proxy on the apache side.

And please use the twisted-web mailing list for web issues.

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From glyph at divmod.com  Tue Jun 15 12:14:03 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 15 Jun 2004 14:14:03 -0400
Subject: [Twisted-Python] Refactoring of trial - call for
	feature	requests and suggestions
In-Reply-To: <40CF2318.5020109@twistedmatrix.com>
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
	<40CF2318.5020109@twistedmatrix.com>
Message-ID: <1087323243.21041.17.camel@kazekage>

On Tue, 2004-06-15 at 12:26, Christopher Armstrong wrote:

> I don't think it should be calling iterate() at all -- just a regular 
> run(). In fact, I was considering rewriting said functions in 
> twisted.trial.util to use that just today. Instead of spinning the 
> reactor until something is appended to some list via a callback, make 
> the callback stop the reactor.

There are multiple, parallel issues here :).  First is that the reactor
needs a genuine make-sure-i'm-cleaned-up function.  The current usage of
iterate() has its roots in the fact that shutdown is (used to be?)
horribly buggy and slightly destructive - if memory serves, the original
problem was that the threadpool was destroyed and could not be
re-created properly.

Second is that we shouldn't be waiting on deferreds in test code any
more than we should be waiting on deferreds in real code.  The different
approaches to waiting on deferreds currently mean there are still lots
of places the tests can hang.  With a more unified approach, we could
insert default timeouts on ALL tests more easily, and avoid loops that
wait for multiple deferreds by using, e.g. DeferredList.

Third is the fact that we have piles and piles of badly-written test
code which would need to be changed to support any modifications to
trial.  This one I'm not sure about how to deal with.

Maybe it'd be better to focus more on the split-out until that's
finished with, because we're not going to be able to use anything new
until then anyway.




From dave at krondo.com  Tue Jun 15 15:42:36 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 15 Jun 2004 14:42:36 -0700 (PDT)
Subject: [Twisted-Python] Again about query mapped
Message-ID: <20040615214236.92730A2666@oneiros.krondo.net>


I don't know enough about db_row to know whether that code is right,
but the adbapi code looks correct.

dave

---- Original Message ----
From:		Mauro Colorio
Date:		Tue 6/15/04 1:35
To:		Twisted discussion stuff
Subject:	Re: [Twisted-Python] Again about query mapped

Il mar, 2004-06-15 alle 01:14, Dave Peticolas ha scritto:
> You can use runInteraction to get at the cursor directly
> (see the example I just posted for another message). The
> cursor is wrapped by the transaction object passed as the
> first argument to the interaction callback.


this is what I produced, subclassing connectionpool,
I hope it's right (well it works :) but I'm new at twisted so I don't
know if it just works or it does it in the right way), the
db_row module is linked in my past mail, comments?:


----

from twisted.enterprise import adbapi 
from db_row import *


class my_ConnectionPool(adbapi.ConnectionPool):
    "Modified connectionPool"

    def mappedInteraction(self, transaction, sql_string):
        "Returns the result of a query in a more useful way"
        transaction.execute(sql_string)

        # Make a class to store the resulting rows
        R = IMetaRow(transaction.description)

        # Build the rows from the row class and each tuple returned from
the cursor
        results = [ R(row) for row in transaction.fetchall() ]
        
        return results

    def runMappedQuery(self, sql_string):
        "Runs the query"
        return self.runInteraction(self.mappedInteraction,sql_string)


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From corydodt at twistedmatrix.com  Tue Jun 15 15:51:25 2004
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Tue, 15 Jun 2004 14:51:25 -0700
Subject: [Twisted-Python] Refactoring of trial - call for	feature	requests
	and suggestions
In-Reply-To: <1087323243.21041.17.camel@kazekage>
References: <40CEB869.1070808@twistedmatrix.com>	<20040615.092036.37772695.warner@lothar.com>	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <40CF6F5D.8080108@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Glyph Lefkowitz wrote:
[...]
| Second is that we shouldn't be waiting on deferreds in test code any
| more than we should be waiting on deferreds in real code.  The different
| approaches to waiting on deferreds currently mean there are still lots
| of places the tests can hang.  With a more unified approach, we could
| insert default timeouts on ALL tests more easily, and avoid loops that
| wait for multiple deferreds by using, e.g. DeferredList.

I would be a big fan of timeouts on all tests.  There are several different
ways win32 tests can hang.  We can't even run the win32ER tests currently, due
to hangs.  In my recent testing of wprocess (processes for windows in default
reactor) I decided to just blindly enable all the process tests and see which
ones broke.  I didn't find out though, because they hang in many different places.


On an unrelated note..

What if we had persistent test results?  Perhaps a test result aggregator
running on pyr.  Such a thing would enable us (independently of buildbot) to
examine trends and pull out tests that frequently regress--indicating either
(1) very fragile code that should be replaced or (2) more likely, tests that
fail only intermittently; and tests that have been broken (but are
expectedfailures or whatever) for a long time.

It doesn't have to be very complex.  Just something that accepts and parses
the test runs in sort of the same way that buildbot does, but can identify a
particular test from the log and record whether it passed or failed, and
compare several runs of that one test (or groups of tests, grouped in whatever
way makes the most sense) over time.  Maybe a command-line tool that would let
someone on pyr do the obvious analyses.  (Or a web tool, if someone is really
just dying to write one.)

The buildmaster would just have to pipe test runs into it.

C


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3-nr1 (Windows XP)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFAz29d3A5SrXAiHQcRApB5AJ9fJ3ZY7j4neTPB5QtKgbJSlJUGagCgqkl+
lI7Exzkcl91ZsUArA/nxYOw=
=zA8M
-----END PGP SIGNATURE-----



From linuxbox at interfree.it  Wed Jun 16 02:20:52 2004
From: linuxbox at interfree.it (Mauro Colorio)
Date: Wed, 16 Jun 2004 10:20:52 +0200
Subject: [Twisted-Python] Again about query mapped
In-Reply-To: <20040615214236.92730A2666@oneiros.krondo.net>
References: <20040615214236.92730A2666@oneiros.krondo.net>
Message-ID: <1087374052.855.9.camel@pcscanner.comriva>

Il mar, 2004-06-15 alle 23:42, Dave Peticolas ha scritto:
> I don't know enough about db_row to know whether that code is right,
> but the adbapi code looks correct.
> 

tanx:), it's adbapi patchable to integrate this code? I think it's very
usefull to have a mapped resultset, instead of a tuple, letting both
methods.

ciao
Mauro




From glyph at divmod.com  Wed Jun 16 11:49:07 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 16 Jun 2004 13:49:07 -0400
Subject: [Twisted-Python] deprecated twisted.enterprise.dbcred (now
	removed?) has no newcred replacement
Message-ID: <1087408147.23312.262.camel@kazekage>

I think this constitutes a regression and I belive I will file a bug. 
Who should I assign it to?




From db3l at fitlinxx.com  Wed Jun 16 12:34:31 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 16 Jun 2004 14:34:31 -0400
Subject: [Twisted-Python] Re: Refactoring of trial - call for
	feature	requests and suggestions
References: <40CEB869.1070808@twistedmatrix.com>
	<20040615.092036.37772695.warner@lothar.com>
	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <u659rbbd4.fsf@fitlinxx.com>

Glyph Lefkowitz <glyph at divmod.com> writes:

> There are multiple, parallel issues here :).  First is that the reactor
> needs a genuine make-sure-i'm-cleaned-up function.  The current usage of
> iterate() has its roots in the fact that shutdown is (used to be?)
> horribly buggy and slightly destructive - if memory serves, the original
> problem was that the threadpool was destroyed and could not be
> re-created properly.

A general cleanup function would be much appreciated, as clearly our
biggest problem with tests involving the reactor has been the proper
cleanup.  While I can clean up pending delayed calls with an API call,
I've had to cheat and reach into the reactor to flush out pending
shutdown events during tests of modules that make use of them.

But to be honest, even better than a cleanup function would be the
ability to truly re-create/re-start the reactor.  It's always bothered
me that while everything else about the unit tests for my application
are fully independent (each test sets up and tears down everything it
needs), that the reactor is a persistence across tests.  It's led to a
few subtle issues in the tests that wouldn't have been there if each
test just created its own reactor.  Of course, this might be an ugly
change because of the way reactor instantiation right now is tied into
the import mechanism, rather than through an explicit API
initialization call.

> Second is that we shouldn't be waiting on deferreds in test code any
> more than we should be waiting on deferreds in real code.  The different
> approaches to waiting on deferreds currently mean there are still lots
> of places the tests can hang.  With a more unified approach, we could
> insert default timeouts on ALL tests more easily, and avoid loops that
> wait for multiple deferreds by using, e.g. DeferredList.

Coming from the perspective of someone that uses deferredResult/Error a lot
in testing my application (not twisted's own tests), I will say that they
have a very desirable characteristic of permitting tests to be written in
a more classic linear flow (no callbacks) while properly testing code that
is using deferreds under the covers.  Since tests by their nature tend to be
focused on a very specific and narrow corridor of behavior, it's pretty
rare not to be able to turn individual deferrable operations into blocking
ones while still testing precisely what you want to test.

I have a feeling that even if various reactor changes were made to
make it more test friendly, I'd still try to find some form of
mechanism that let me wait on individual deferrable operations to
provide the increased readability of the tests.  Of course, I wouldn't
care if that just means that deferredResult just becomes the wrapper
that delays until the callback happens, but doesn't have to use
iterate(), nor would I object to having a timeout on such blocking
wrappers, to avoid hanging a test.

But I do think that writing most of my tests with actual callbacks
would end up obfuscating them more than clarifying, without (IMHO) any
real significant improvement in the reality of what was being tested.

-- David




From dave at krondo.com  Wed Jun 16 12:41:47 2004
From: dave at krondo.com (Dave Peticolas)
Date: Wed, 16 Jun 2004 11:41:47 -0700 (PDT)
Subject: [Twisted-Python] deprecated twisted.enterprise.dbcred
	(now	removed?) has no newcred replacement
Message-ID: <20040616184147.5FEA0A266A@oneiros.krondo.net>


There are a couple of implementations newcred with enterprise in the tracker
already. I need to get one ready for inclusion. I wonder, though, if it would be
better to just have an example of implementing newcred with enterprise?

dave

---- Original Message ----
From:		Glyph Lefkowitz
Date:		Wed 6/16/04 11:06
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] deprecated twisted.enterprise.dbcred (now	removed?) has no
newcred replacement

I think this constitutes a regression and I belive I will file a bug. 
Who should I assign it to?




From trust_no_1 at spymac.com  Wed Jun 16 15:41:24 2004
From: trust_no_1 at spymac.com (trust_no_1 at spymac.com)
Date: Wed, 16 Jun 2004 23:41:24 +0200
Subject: [Twisted-Python] Argument handling question?
Message-ID: <40D0BE84.4080802@spymac.com>

Fisrt excuse me for my poor english...my mother tongue is french...

It could seems to be an 'idiot' question but my problem is quite simple:
How do I get / deal with extra parameters (not handled by twistd) from
the command line launching my app
example:
twistd -noy my_first_twist_test.py --misc=i_wanna_get_this

Thanks in advance,
JC



From stella at solarenergenex.com  Wed Jun 16 17:38:39 2004
From: stella at solarenergenex.com (Stella Rockford)
Date: Wed, 16 Jun 2004 20:38:39 -0300
Subject: [Twisted-Python] question about RSS + dynamic content...
Message-ID: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>

I am interestested in using Nevow as a templating alternative to ZPT.

I am having difficulty triggering the nevow intepreter with very similar  
language as was included in the pycon 2004 PDF.

If anyone could provide an example of rendering an RSS feed into a slot  
that is defined in an html tmeplate it would be very helpful indeed.

Thanks

Stella

-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/



From exarkun at divmod.com  Thu Jun 17 00:34:22 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 02:34:22 -0400
Subject: [Twisted-Python] Argument handling question?
In-Reply-To: <40D0BE84.4080802@spymac.com>
References: <40D0BE84.4080802@spymac.com>
Message-ID: <40D13B6E.7080200@divmod.com>

trust_no_1 at spymac.com wrote:
> Fisrt excuse me for my poor english...my mother tongue is french...
> 
> It could seems to be an 'idiot' question but my problem is quite simple:
> How do I get / deal with extra parameters (not handled by twistd) from
> the command line launching my app
> example:
> twistd -noy my_first_twist_test.py --misc=i_wanna_get_this
> 

   twistd does not support this.  Configuration is intended to be put 
inside "my_first_twist_test.py" directly.  If this is not appropriate 
for the application, then twistd may not be the appropriate tool to use.

   Jp




From exarkun at divmod.com  Thu Jun 17 00:38:28 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 02:38:28 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40D13C64.9080404@divmod.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.
> 

   Three things that come to mind:

   * Total error handling.  setUpClass/tearDownClass are examples of 
currently broken behavior in this error.  If they raise an exception, 
trial exits.

   * Argument passing between unittest methods.  For example, if a test 
method were defined as testFoo(self, x, y), the two-tuple returned from 
setUp() would be passed in as values for the arguments.  Similarly for 
tearDown().

   * More expressive and specific support for the "todo" attribute.  If 
a test is expected to fail with FooError, there should be a way to 
express this, so that when it fails with a BarError, it is treated as a 
real failure, not an expected failure.

   Jp



From andrew-twisted at puzzling.org  Thu Jun 17 01:02:30 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 17:02:30 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <40D13C64.9080404@divmod.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40D13C64.9080404@divmod.com>
Message-ID: <20040617070230.GK11221@frobozz>

On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> 
>   * Argument passing between unittest methods.  For example, if a test 
> method were defined as testFoo(self, x, y), the two-tuple returned from 
> setUp() would be passed in as values for the arguments.  Similarly for 
> tearDown().

I'm not sure why this is better than having setUp set instance attributes?

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 17 01:05:28 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 17:05:28 +1000
Subject: [Twisted-Python] Argument handling question?
In-Reply-To: <40D13B6E.7080200@divmod.com>
References: <40D0BE84.4080802@spymac.com> <40D13B6E.7080200@divmod.com>
Message-ID: <20040617070528.GL11221@frobozz>

On Thu, Jun 17, 2004 at 02:34:22AM -0400, Jp Calderone wrote:
> trust_no_1 at spymac.com wrote:
> >Fisrt excuse me for my poor english...my mother tongue is french...
> >
> >It could seems to be an 'idiot' question but my problem is quite simple:
> >How do I get / deal with extra parameters (not handled by twistd) from
> >the command line launching my app
> >example:
> >twistd -noy my_first_twist_test.py --misc=i_wanna_get_this
> >
> 
>   twistd does not support this.  Configuration is intended to be put 
> inside "my_first_twist_test.py" directly.  If this is not appropriate 
> for the application, then twistd may not be the appropriate tool to use.

That said, you could work around this by putting your extra configuration in
an environment variable.

But as Jp says, that would be going against the intended use of twistd.

-Andrew.




From glyph at divmod.com  Thu Jun 17 03:48:25 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Thu, 17 Jun 2004 05:48:25 -0400
Subject: [Twisted-Python] question about RSS + dynamic content...
In-Reply-To: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
References: <opr9pqqpopn679qn@pcp08347952pcs.michav01.md.comcast.net>
Message-ID: <1087465705.23312.289.camel@kazekage>

On Wed, 2004-06-16 at 19:38, Stella Rockford wrote:
> I am interestested in using Nevow as a templating alternative to ZPT.
> 
> I am having difficulty triggering the nevow intepreter with very similar  
> language as was included in the pycon 2004 PDF.
> 
> If anyone could provide an example of rendering an RSS feed into a slot  
> that is defined in an html tmeplate it would be very helpful indeed.

Nevow, and other twisted-based web technologies, are discussed on the
twisted-web mailing list, which you can subscribe to at this URL:

http://www.twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-web




From exarkun at divmod.com  Thu Jun 17 05:26:30 2004
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Jun 2004 07:26:30 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040617070230.GK11221@frobozz>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>	<40D13C64.9080404@divmod.com>
	<20040617070230.GK11221@frobozz>
Message-ID: <40D17FE6.709@divmod.com>

Andrew Bennetts wrote:
> On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> 
>>  * Argument passing between unittest methods.  For example, if a test 
>>method were defined as testFoo(self, x, y), the two-tuple returned from 
>>setUp() would be passed in as values for the arguments.  Similarly for 
>>tearDown().
> 
> 
> I'm not sure why this is better than having setUp set instance attributes?
> 

   Shorter user code.

   Jp



From andrew-twisted at puzzling.org  Thu Jun 17 05:52:14 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 21:52:14 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <40D17FE6.709@divmod.com>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
	<40D13C64.9080404@divmod.com> <20040617070230.GK11221@frobozz>
	<40D17FE6.709@divmod.com>
Message-ID: <20040617115214.GM11221@frobozz>

On Thu, Jun 17, 2004 at 07:26:30AM -0400, Jp Calderone wrote:
> Andrew Bennetts wrote:
> >On Thu, Jun 17, 2004 at 02:38:28AM -0400, Jp Calderone wrote:
> >
> >> * Argument passing between unittest methods.  For example, if a test 
> >>method were defined as testFoo(self, x, y), the two-tuple returned from 
> >>setUp() would be passed in as values for the arguments.  Similarly for 
> >>tearDown().
> >
> >
> >I'm not sure why this is better than having setUp set instance attributes?
> >
> 
>   Shorter user code.

The difference seems minimal to me.

    def setUp(self):
        ...
        self.x = ...
        self.y = ...

    def testFoo(self):
        ...
        self.assertEqual((self.y, self.x), foo(self.x, self.y))

    def tearDown(self):
        self.x.close()

vs.

    def setUp(self):
        ...
        x = ...
        y = ...
        return x, y

    def testFoo(self, x, y):
        ...
        self.assertEqual((y, x), foo(x, y))

    def tearDown(self, x, y):
        x.close()
        
It doesn't seem like a big deal either way, so why change it?

If a test* or a tearDown method find prepending "self." to be too unwieldy,
they always have the option of doing "x = self.x".

Also, what would happen if setUpClass and setUp both returned some values?
Using instance variables, there's no ambiguity.

-Andrew.




From andrew-twisted at puzzling.org  Thu Jun 17 05:53:57 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 17 Jun 2004 21:53:57 +1000
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <20040617115357.GN11221@frobozz>

On Tue, Jun 15, 2004 at 07:11:56AM +0000, slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.

I'd like doctest support, in some form (being able to test .txt files like
Zope 3 does would be great).  And the ability to run testcases defined using
the standard library's unittest module.

-Andrew.




From radix at twistedmatrix.com  Fri Jun 18 07:13:50 2004
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Fri, 18 Jun 2004 09:13:50 -0400
Subject: [Twisted-Python] Refactoring of trial - call for feature requests
	and suggestions
In-Reply-To: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
References: <20040615071156.1796.642443910.divmod.quotient.24@ohm>
Message-ID: <40D2EA8E.8040203@twistedmatrix.com>

slyphon at twistedmatrix.com wrote:
> I am undertaking the refactoring of trial and i'm looking for
> suggestions as to what features people think trial lacks, what they'd
> like it to do that it never did, and so on.

Here's one: the log / trial interaction sucks (which, gulp, I wrote -- 
but hey, this was ancient history before log.py improved :). Trial sets 
things up so that when log.err() occurs, it raises an error -- which is 
reasonable, but the way you have to handle that error, and the way it's 
implemented, is pretty lame.

It should be refactored to use a log observer, not special code in 
log.py (ignoreErrors, flushErrors, clearIgnores, and part of err).

I just wrote a test case yesterday that looks like this:

         # ergh, trial/log interaction kind of sucks
         log.ignoreErrors(BoomErr)
         try:
             doSomethingWhichEventuallyLogErrs()
         finally:
             log.clearIgnores()

I think clearIgnores should be called by the post-test cleanup code in 
trial. In addition, the error that's printed when you FORGET to 
ignoreErrors should make it obvious that it's because trial considers 
log.err() to be an error: It took me a few minutes of profound boggling 
after looking at the traceback, and then the code, which looked like

try:
     foo()
except:
     log.err()
     return None

And the traceback pointing at the line foo() is called on. Which is 
reasonable; that's the traceback log.err() prints. It just needs to be 
more obvious what's going on, and that I should, perhaps, add an 
ignoreErrors call to my test case (or fix a bug).

-- 
  Twisted | Christopher Armstrong: International Man of Twistery
   Radix  |          Release Manager,  Twisted Project
---------+           http://radix.twistedmatrix.com/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20040618/12e14bd1/attachment.sig>

From michal at pasternak.w.lub.pl  Sun Jun 20 13:38:43 2004
From: michal at pasternak.w.lub.pl (Michal Pasternak)
Date: Sun, 20 Jun 2004 21:38:43 +0200
Subject: [Twisted-Python] Simple components question - IFoo(IBar(obj)) wont'
	work, what am I doing wrong?
Message-ID: <20040620193843.GA91292@pasternak.w.lub.pl>

Hi,

I've hit a problem with compy, but it seems it's the same for Twisted
Components. What am I doing wrong here? I bet I've overlooked something
really simple, but I'm unable to find out.

---------------------------------------------------------------------------

import twisted.python.components as compy

class IFoo(compy.Interface):
    pass

class IBar(compy.Interface):
    pass

class x: pass

class y(compy.Adapter):
    __implements__ = (IFoo,)
    pass

class z(compy.Adapter):
    __implements__ = (IBar,)
    pass

compy.registerAdapter(y, x, IFoo)
compy.registerAdapter(z, y, IBar)

IBar(IFoo(x()))

---------------------------------------------------------------------------

... this will fail with:

	twisted.python.components.CannotAdapt: <__main__.y instance at 0x80fc0ac> cannot be adapted to <class '__main__.IBar'>.


-- 
m
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 187 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040620/7102717d/attachment.sig>

From glyph at divmod.com  Sun Jun 20 17:38:35 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sun, 20 Jun 2004 19:38:35 -0400
Subject: [Twisted-Python] Simple components question - IFoo(IBar(obj))
	wont' work, what am I doing wrong?
In-Reply-To: <20040620193843.GA91292@pasternak.w.lub.pl>
References: <20040620193843.GA91292@pasternak.w.lub.pl>
Message-ID: <F2DE0711-C312-11D8-BC24-000393C9700E@divmod.com>


On Jun 20, 2004, at 3:38 PM, Michal Pasternak wrote:

> Hi,
>
> I've hit a problem with compy, but it seems it's the same for Twisted
> Components. What am I doing wrong here? I bet I've overlooked something
> really simple, but I'm unable to find out.

This is due to some magical, magical behavior of the "Adapter" class 
which is completely stupid and wrong.  Stop using the Adapter utility 
class and just write your own factories.

The next version of Twisted will fix these sorts of edge-case issues by 
using Zope interfaces, and compy will go away entirely.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20040620/173b16a4/attachment.sig>

From anthony at interlink.com.au  Mon Jun 21 09:52:10 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Tue, 22 Jun 2004 01:52:10 +1000
Subject: [Twisted-Python] duh--2.3.4
In-Reply-To: <40C9B38F.8020704@divmod.com>
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
	<40C9B38F.8020704@divmod.com>
Message-ID: <40D7042A.3000002@interlink.com.au>

Jp Calderone wrote:
>   Even major Python releases are mostly backwards compatible with old 
> versions of Python.  Do you know of something in particular in 2.4 that 
> breaks some part of Twisted?


None that I'm aware of. Why, do you want some? <wink>


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From shibley at mislbd.com  Tue Jun 22 02:59:33 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Tue, 22 Jun 2004 14:59:33 +0600
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17
References: <E1BcT5n-0000vx-00@pyramid.twistedmatrix.com>
Message-ID: <000d01c45837$3d3e38b0$3500a8c0@mislbd.com>

Hello everybody
I want to call a Stored Procedure of Oracle using adbapi. can anyone help me
in this? if someone can give me some sample code along with the description,
I would be highly benifited

Faisal Abdullah Shibley




From mwh at python.net  Tue Jun 22 03:22:37 2004
From: mwh at python.net (Michael Hudson)
Date: Tue, 22 Jun 2004 10:22:37 +0100
Subject: [Twisted-Python] Re: duh--2.3.4
References: <20040611130745.17634.qmail@web8309.mail.in.yahoo.com>
	<40C9B38F.8020704@divmod.com> <40D7042A.3000002@interlink.com.au>
Message-ID: <2m8yeg6j6q.fsf@starship.python.net>

Anthony Baxter <anthony at interlink.com.au> writes:

> Jp Calderone wrote:
>>   Even major Python releases are mostly backwards compatible with
>> old versions of Python.  Do you know of something in particular in
>> 2.4 that breaks some part of Twisted?
>
>
> None that I'm aware of. Why, do you want some? <wink>

You mean Twisted doesn't depend on the interaction of readline and
signals yet?

Cheers,
mwh

-- 
     ARTHUR:  Why are there three of you?
  LINTILLAS:  Why is there only one of you?
     ARTHUR:  Er... Could I have notice of that question?
                   -- The Hitch-Hikers Guide to the Galaxy, Episode 11




From bhartsho at yahoo.com  Tue Jun 22 14:41:36 2004
From: bhartsho at yahoo.com (brett hartshorn)
Date: Tue, 22 Jun 2004 13:41:36 -0700 (PDT)
Subject: [Twisted-Python] Newbie Question: Running Twisted in a thread?
Message-ID: <20040622204136.54958.qmail@web13426.mail.yahoo.com>

Hello,

So Twisted can not be run inside a thread, and must be 'on top' and start my other threads?  
After reading: http://twistedmatrix.com/documents/current/howto/threading
it looks like i will have to schedule my own threads to be run inside the twisted main event loop.

What is the best way to make my threads thread safe?  Will the code below work?

from twisted.internet import reactor

def myThread(value):
   print value
   time.sleep(1)

reactor.callInThread(myThread, 1)
reactor.run()

so when reactor enters its mainloop via reactor.run() it will call once per loop myThread, is this
correct?  Will the call to myThread block all other threads, and it should be thread safe then,
correct?

Is there a way to have myThread called at a certian time interval?  I'd like to update it at 30hz.
 My old code just looked like this:

def myThread(value):
   time.sleep(0.333333)
   while 1:
      scene.render()


thanks for the help,
-brett


		
__________________________________
Do you Yahoo!?
Yahoo! Mail Address AutoComplete - You start. We finish.
http://promotions.yahoo.com/new_mail 



From dave at krondo.com  Tue Jun 22 15:31:33 2004
From: dave at krondo.com (Dave Peticolas)
Date: Tue, 22 Jun 2004 14:31:33 -0700 (PDT)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17
Message-ID: <20040622213133.67F65A266A@oneiros.krondo.net>


You will want to use runInteraction. See the example here:

http://twistedmatrix.com/pipermail/twisted-python/2004-June/007995.html

The 'trans' object is just a wrapper around a DB API cursor, so you can
do something like:

return trans.callproc(procname, arg1, arg2, ...)

dave

---- Original Message ----
From:		Faisal Shibley
Date:		Tue 6/22/04 2:04
To:		twisted-python at twistedmatrix.com
Subject:	[Twisted-Python] Re: Twisted-Python Digest, Vol 3, Issue 17

Hello everybody
I want to call a Stored Procedure of Oracle using adbapi. can anyone help me
in this? if someone can give me some sample code along with the description,
I would be highly benifited

Faisal Abdullah Shibley




From mandeep.gill at imperial.ac.uk  Tue Jun 22 16:35:15 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Tue, 22 Jun 2004 23:35:15 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>

Hi,
I'm in the process of finishing a multicasting RTP streaming media server and client in Twisted but have encountered several issues that I can't figure out,

Firstly, Is there any way to determine your own IP address from with Twisted, I've looked around everywhere and can't find away to achieve this except by setting up a loopback connection and reading it from the transport - but that only gives 127.0.0.1. Is there any way to determine all available local IPs?

Also I have a problem in shutting down Factories - currently I shut them down by calling the doStop method, which seems to call stopFactory but this is an abstract method used just for safe user shutdown, right? As far as I can tell, the Factory is still bound to the reactor, and am I still able to connect to it having called doStop. How do I stop the protocol from even listening on ports?

Oh yeah, there seem to be a few bugs in the current wxreactor support, most notably with any custom dialog boxes - the OK/Cancel return doesn't seem to be processed on time and causes a wxDateTime assertion error, does it work for anyone else?

Thanks for any help
Mandeep Gill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040622/2e4df6f1/attachment.html>

From itamar at itamarst.org  Tue Jun 22 16:48:10 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 22 Jun 2004 18:48:10 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <1087944489.891.245.camel@sheriffpony>

On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:

> Firstly, Is there any way to determine your own IP address from with
> Twisted, I've looked around everywhere and can't find away to achieve
> this except by setting up a loopback connection and reading it from
> the transport - but that only gives 127.0.0.1. Is there any way to
> determine all available local IPs?

I think that's OS specific. You can do:

port = reactor.listenUDP(9000, udpprotocol)
print port.getHost() # this returns t.i.address.IPv4Address object

but that won't tell you about multiple IPs.

> Also I have a problem in shutting down Factories - currently I shut
> them down by calling the doStop method, which seems to call
> stopFactory but this is an abstract method used just for safe user
> shutdown, right? As far as I can tell, the Factory is still bound to
> the reactor, and am I still able to connect to it having called
> doStop. How do I stop the protocol from even listening on ports?

You don't. You stop *ports* from listening.

E.g.

port = reactor.listenTCP(8080, factory)
port.stopListening()

port = reactor.listenUDP(1234, udpportocol)
port.stopListening()

> Oh yeah, there seem to be a few bugs in the current wxreactor support,
> most notably with any custom dialog boxes - the OK/Cancel return
> doesn't seem to be processed on time and causes a wxDateTime assertion
> error, does it work for anyone else?

wx integration is broken. As far as I can tell best option is running it
in separate thread... or better yet, not using wx at all.




From shibley at mislbd.com  Tue Jun 22 21:37:03 2004
From: shibley at mislbd.com (Faisal Shibley)
Date: Wed, 23 Jun 2004 09:37:03 +0600
Subject: [Twisted-Python] Calling Oracle stored procedure using adbapi
References: <E1Bcpa9-0003Qk-00@pyramid.twistedmatrix.com>
Message-ID: <000801c458d3$5a822980$3500a8c0@mislbd.com>

Hello Everybody,
I have a stored procedure named test1() which I want to call from Twisted
code using adbapi. Can anybody help me out with this problem. Some sample
code could help me the best.

Faisal Abdullah Shibley




From glyph at divmod.com  Tue Jun 22 23:25:18 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 23 Jun 2004 01:25:18 -0400
Subject: [Twisted-Python] Calling Oracle stored procedure using adbapi
In-Reply-To: <000801c458d3$5a822980$3500a8c0@mislbd.com>
References: <E1Bcpa9-0003Qk-00@pyramid.twistedmatrix.com>
	<000801c458d3$5a822980$3500a8c0@mislbd.com>
Message-ID: <1087968318.21904.3.camel@kazekage>

On Tue, 2004-06-22 at 23:37, Faisal Shibley wrote:
> Hello Everybody,
> I have a stored procedure named test1() which I want to call from Twisted
> code using adbapi. Can anybody help me out with this problem. Some sample
> code could help me the best.

Faisal,

Please refer to the database db-api driver for oracle (Probably
DCOracle) for how to do this.  adbapi calls down directly into the
db-api driver you specify to it, so something like calling oracle stored
procedures is out of scope. 




From jml at mumak.net  Tue Jun 15 23:51:20 2004
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 16 Jun 2004 15:51:20 +1000
Subject: [Twisted-Python] Re: Refactoring of trial - call for feature
	requests and suggestions
In-Reply-To: <1087323243.21041.17.camel@kazekage>
References: <40CEB869.1070808@twistedmatrix.com>	<20040615.092036.37772695.warner@lothar.com>	<40CF2318.5020109@twistedmatrix.com>
	<1087323243.21041.17.camel@kazekage>
Message-ID: <caon4s$b6v$1@sea.gmane.org>

Glyph Lefkowitz wrote:
> Third is the fact that we have piles and piles of badly-written test
> code which would need to be changed to support any modifications to
> trial.  This one I'm not sure about how to deal with.
> 

Related to this. There are things like IOPump (IIRC) in lots of the test 
code. It would be good to go through our tests and refactor this sort of 
thing into trial.util (or wherever).

jml




From gumuz at looze.net  Wed Jun 23 02:42:10 2004
From: gumuz at looze.net (=?Windows-1252?Q?Guyon_Mor=E9e?=)
Date: Wed, 23 Jun 2004 10:42:10 +0200
Subject: [Twisted-Python] Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <04c801c458fd$f9297370$6501a8c0@tradesoft.nl>

Local IP and factory shutdownTo find my one true external ip address I used http://www.showmyip.com/ 
they also have http://www.showmyip.com/xml/ which should be very easy to fetch and process with Python.


  ----- Original Message ----- 
  From: Gill, Mandeep 
  To: twisted-python at twistedmatrix.com 
  Sent: Wednesday, June 23, 2004 12:35 AM
  Subject: [Twisted-Python] Local IP and factory shutdown


  Hi,
  I'm in the process of finishing a multicasting RTP streaming media server and client in Twisted but have encountered several issues that I can't figure out,

  Firstly, Is there any way to determine your own IP address from with Twisted, I've looked around everywhere and can't find away to achieve this except by setting up a loopback connection and reading it from the transport - but that only gives 127.0.0.1. Is there any way to determine all available local IPs?

  Also I have a problem in shutting down Factories - currently I shut them down by calling the doStop method, which seems to call stopFactory but this is an abstract method used just for safe user shutdown, right? As far as I can tell, the Factory is still bound to the reactor, and am I still able to connect to it having called doStop. How do I stop the protocol from even listening on ports?

  Oh yeah, there seem to be a few bugs in the current wxreactor support, most notably with any custom dialog boxes - the OK/Cancel return doesn't seem to be processed on time and causes a wxDateTime assertion error, does it work for anyone else?

  Thanks for any help
  Mandeep Gill 



------------------------------------------------------------------------------


  _______________________________________________
  Twisted-Python mailing list
  Twisted-Python at twistedmatrix.com
  http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040623/875881c6/attachment.html>

From glyph at divmod.com  Wed Jun 23 09:04:08 2004
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 23 Jun 2004 11:04:08 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <1088003048.21904.23.camel@kazekage>

On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
> Hi,
> I'm in the process of finishing a multicasting RTP streaming media
> server and client in Twisted but have encountered several issues that
> I can't figure out,

Have you looked at shtoom?  http://www.divmod.org/Home/Projects/Shtoom/ 
If your traffic is UDP, I'd recommend using STUN for the client.  For
the server, "all available local IPs" is a fairly vague question. 
IPv4?  IPv6?  With or without internet connectivity?  Internal or
external IPs?  Some of these questions aren't even answerable.  Usually
if you want to provide advanced server configuration informations with
regard to domain names and IP addresses you need to tell the server
about them directly, with a config file of some sort.  It varies by
protocol what that file has to say.




From anthony at interlink.com.au  Wed Jun 23 09:07:46 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 24 Jun 2004 01:07:46 +1000
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
Message-ID: <40D99CC2.5010301@interlink.com.au>

Gill, Mandeep wrote:
> Hi,
> I'm in the process of finishing a multicasting RTP streaming media 
> server and client in Twisted but have encountered several issues that I 
> can't figure out,

Neat. Note that shtoom (shtoom.divmod.org) also has an RTP
implementation in Twisted - if you're planning to release your
code, there may be stuff we can borrow from each other.

> Firstly, Is there any way to determine your own IP address from with 
> Twisted, I've looked around everywhere and can't find away to achieve 
> this except by setting up a loopback connection and reading it from the 
> transport - but that only gives 127.0.0.1. Is there any way to determine 
> all available local IPs?

One trick I do in shtoom is put in a ConnectedUDP to the other end, then
read the local address off that. It's ugly, but gives me the IP of the
local interface that's being used for this connection. You could also
use STUN for this, of course. But that won't give you _all_ interfaces.

I don't believe that this is possible in a portable way.

> Oh yeah, there seem to be a few bugs in the current wxreactor support, 
> most notably with any custom dialog boxes - the OK/Cancel return doesn't 
> seem to be processed on time and causes a wxDateTime assertion error, 
> does it work for anyone else?

Neither wxsupport or wxreactor are suitable for heavy lifting. wxsupport
blocks whenever wx spawns a sub-event-loop (for dialogs, menus, and the
like) and wxreactor can give no better than the wxTimer's granularity.
The wx docs promise "no worse than 1s" granularity. On Linux, it doesn't
seem to be a problem. On Windows, tho, you're boned.

Run the wx mainloop in your main thread, and spawn a second thread to
run the twisted event loop. You then use callFromThread() to pass things
to the twisted event loop, and you can make your own shim to pass stuff
back to the wx event loop. Again, shtoom has this code, in
shtoom/ui/wxui/ (thanks to Andy Hird for writing this).


Anthony

-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From anthony at interlink.com.au  Wed Jun 23 09:08:56 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Thu, 24 Jun 2004 01:08:56 +1000
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <04c801c458fd$f9297370$6501a8c0@tradesoft.nl>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<04c801c458fd$f9297370$6501a8c0@tradesoft.nl>
Message-ID: <40D99D08.4000903@interlink.com.au>

Guyon Morée wrote:
> To find my one true external ip address I used http://www.showmyip.com/
> they also have http://www.showmyip.com/xml/ which should be very easy to 
> fetch and process with Python.

Or use STUN, and have your choice of server.


-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From GCoulbourne at Immunicon.com  Wed Jun 23 11:34:45 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Wed, 23 Jun 2004 13:34:45 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
Message-ID: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>

Howdy!

I'm using processProtocol to talk to a program written by a coworker.  It handles things fine, but it is asynchronous in that when I send a response to it, it may send several responses back, or it may just randomly send back a response.  If I were handling this output a line at a time, it would be fine, but processProtocol seems to put all of the responses together... each response is followed by a \n.  I naively assumed that each time a line was complete, Twisted would call my outRecieved.  It seems, though, that dozens of respopnses can build up in the buffer before it was called.

I'm certain I am missing out on something basic.  Is there any way to set processProtocol to look at the \n as a signal to call outRecieved rather than to call it at some arbitrary time?  I didn't see anything quickly obvious in the source, so I thought I would ask for advice.

Thanks in advance for any help or suggestions!

Peace,
Gary

This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From pje at telecommunity.com  Wed Jun 23 12:33:51 2004
From: pje at telecommunity.com (Phillip J. Eby)
Date: Wed, 23 Jun 2004 14:33:51 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.c
 om>
Message-ID: <5.1.1.6.0.20040623142959.023562b0@mail.telecommunity.com>

At 01:34 PM 6/23/04 -0400, Gary Coulbourne wrote:
>Howdy!
>
>I'm using processProtocol to talk to a program written by a coworker.  It 
>handles things fine, but it is asynchronous in that when I send a response 
>to it, it may send several responses back, or it may just randomly send 
>back a response.  If I were handling this output a line at a time, it 
>would be fine, but processProtocol seems to put all of the responses 
>together... each response is followed by a \n.  I naively assumed that 
>each time a line was complete, Twisted would call my outRecieved.  It 
>seems, though, that dozens of respopnses can build up in the buffer before 
>it was called.
>
>I'm certain I am missing out on something basic.  Is there any way to set 
>processProtocol to look at the \n as a signal to call outRecieved rather 
>than to call it at some arbitrary time?  I didn't see anything quickly 
>obvious in the source, so I thought I would ask for advice.

It sounds like maybe the program you're calling isn't flushing its writes 
to stdout.  If it doesn't, there's no way for Twisted to see its output 
until the program's output buffer overflows.

One quick way to check: are you always getting the messages in blocks of 
roughly N bytes, (except perhaps for the last block before the program 
exits)?  If so, you need to get your coworker to flush his output buffer.

Alternatively, depending on your platform, creating a pty (aka 
pseudoterminal) may be an option.  This would be to convince your 
co-worker's program that it's talking to a console, and therefore should 
output data as it becomes available instead of buffering it.  But that 
depends somewhat on the language/libraries being used by the program.




From itamar at itamarst.org  Wed Jun 23 13:08:56 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 23 Jun 2004 15:08:56 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>
References: <222D6F25FBFCC6429B908624E632FE7B7B2E23@immun11.immunicon.com>
Message-ID: <1088017735.3137.255.camel@sheriffpony>

Twisted doesn't break up things into lines for you automatically. You
need to use a class that does that for you, in this case
twisted.protocols.basic.LineReceiver, probably. Either subclass it and
ProcessProtocol and hook them up appropriately, or create a new
instance.




From GCoulbourne at Immunicon.com  Wed Jun 23 13:09:38 2004
From: GCoulbourne at Immunicon.com (Gary Coulbourne)
Date: Wed, 23 Jun 2004 15:09:38 -0400
Subject: [Twisted-Python] processProtocol woes and a plea for aid
Message-ID: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>


>It sounds like maybe the program you're calling isn't flushing its writes 
>to stdout.  If it doesn't, there's no way for Twisted to see its output 
>until the program's output buffer overflows.

Thanks!  I suspect that's exactly it... he's just printing to stdout.  It's easy enough to throw a flush in there.  Great idea!  Thanks again, as I would not have considered that otherwise.

Peace,
Gary

This e-mail message is intended only for the personal use of the recipient(s) named above. This message should be considered a confidential communication, and as such is not subject to disclosure to anyone who is not an intended recipient.  If you are not an intended recipient, you may not legally review, copy or distribute this message. If you have received this communication in error, please notify the sender(s) immediately by e-mail and delete the original message from your computer system.






From db3l at fitlinxx.com  Wed Jun 23 17:12:48 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 23 Jun 2004 19:12:48 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<1087944489.891.245.camel@sheriffpony>
Message-ID: <uu0x198cv.fsf@fitlinxx.com>

Itamar Shtull-Trauring <itamar at itamarst.org> writes:

> On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
(...)
> > Oh yeah, there seem to be a few bugs in the current wxreactor support,
> > most notably with any custom dialog boxes - the OK/Cancel return
> > doesn't seem to be processed on time and causes a wxDateTime assertion
> > error, does it work for anyone else?
> 
> wx integration is broken. As far as I can tell best option is running it
> in separate thread... or better yet, not using wx at all.

Note that we've had fine luck using the standard reactor and iterating
it via a wxTimer, based off of the entry at:

  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780

You do end up enforcing some time granularity on the network due to
whatever timer frequency you pick, but so far it's been more than
sufficient for our applications.

The tweaks we made were to shorten the timer to about 150ms, and
explicitly stop the timer and reactor in an OnExit() routine.  I also
experimented with additional reactor iterations in an Idle handler,
but found that they really didn't make that much of a difference in
network performance.

Note that most of our wx-based applications are GUI interfaces, so the
interface is the primary application with the networking in support of
that.  For those whose application is the opposite (the GUI is an
add-on to the protocol support) it might be more limited by the impact
of the periodic reactor execution, I'm not sure.

-- David






-- 
/-----------------------------------------------------------------------\
 \               David Bolen            \   E-mail: db3l at fitlinxx.com  /
  |             FitLinxx, Inc.            \  Phone: (203) 708-5192    |
 /  860 Canal Street, Stamford, CT  06902   \  Fax: (203) 316-5150     \
\-----------------------------------------------------------------------/




From mandeep.gill at imperial.ac.uk  Wed Jun 23 17:16:13 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:16:13 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>

>Gill, Mandeep wrote:
>> Hi,
>> I'm in the process of finishing a multicasting RTP streaming media 
>> server and client in Twisted but have encountered several issues that I 
>> can't figure out,
>
>Neat. Note that shtoom (shtoom.divmod.org) also has an RTP
>implementation in Twisted - if you're planning to release your
>code, there may be stuff we can borrow from each other.
>

Actually I extensively studied the Shtoom code before I started as it contained many ideas I could use and explained a lot of Twisted subtleties - I must thank you for that, it's well written and extremely easy to learn from.
The RTP code is borrowed from Shtoom with a few changes to make it support other media formats in an independent manner - at the moment I'm multicasting 5 different MP3 streams around the house with it and it works fine.
The system is my undergrad project, however once it's marked I plan to release the code, there's definitely stuff that can borrowed either way.

>> Firstly, Is there any way to determine your own IP address from with 
>> Twisted, I've looked around everywhere and can't find away to achieve 
>> this except by setting up a loopback connection and reading it from the 
>> transport - but that only gives 127.0.0.1. Is there any way to determine 
>> all available local IPs?
>
>One trick I do in shtoom is put in a ConnectedUDP to the other end, then
>read the local address off that. It's ugly, but gives me the IP of the
>local interface that's being used for this connection. You could also
>use STUN for this, of course. But that won't give you _all_ interfaces.
>
>I don't believe that this is possible in a portable way.

Yeah, I saw that code in Shtoom, however when I tried it I only got '0.0.0.0' - dunno what was going on there. i think at the moment I'll just stick with gethostbyname(gethostname()) for internal IPs and leave the rest for now - NAT seems like too much pain.

>> Oh yeah, there seem to be a few bugs in the current wxreactor support, 
>> most notably with any custom dialog boxes - the OK/Cancel return doesn't 
>> seem to be processed on time and causes a wxDateTime assertion error, 
>> does it work for anyone else?
>
>Neither wxsupport or wxreactor are suitable for heavy lifting. wxsupport
>blocks whenever wx spawns a sub-event-loop (for dialogs, menus, and the
>like) and wxreactor can give no better than the wxTimer's granularity.
>The wx docs promise "no worse than 1s" granularity. On Linux, it doesn't
>seem to be a problem. On Windows, tho, you're boned.
>
>Run the wx mainloop in your main thread, and spawn a second thread to
>run the twisted event loop. You then use callFromThread() to pass things
>to the twisted event loop, and you can make your own shim to pass stuff
>back to the wx event loop. Again, shtoom has this code, in
>shtoom/ui/wxui/ (thanks to Andy Hird for writing this).
>
>
>Anthony

wxreactor seems to be ok for most tasks, I have a fairly complex dynamic GUI running here, however the most random actions will just bring it down. I saw the threaded code in Shtoom and guess that’s the way to go, it just seems a lot of work if wxreactor can be fixed.

Mandeep

-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 4399 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040624/641041d8/attachment-0002.bin>

From mandeep.gill at imperial.ac.uk  Wed Jun 23 17:22:56 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:22:56 +0100
Subject: [Twisted-Python] Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C58@icex34.cc.ic.ac.uk>

>
>Have you looked at shtoom?  http://www.divmod.org/Home/Projects/Shtoom/ 
>If your traffic is UDP, I'd recommend using STUN for the client.  For
>the server, "all available local IPs" is a fairly vague question. 
>IPv4?  IPv6?  With or without internet connectivity?  Internal or
>external IPs?  Some of these questions aren't even answerable.  Usually
>if you want to provide advanced server configuration informations with
>regard to domain names and IP addresses you need to tell the server
>about them directly, with a config file of some sort.  It varies by
>protocol what that file has to say.
>

Thanks yeah I've looked quite a bit at Shtoom. I guess my question was fairly vague, I simply meant a method to determine all available internal IP4 addresses. I did consider systems such as STUN and such, however I am multicasting so the system won't work across the Internet or NAT anyway (thankfully as it makes it all lot simpler).


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3075 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040624/58067b1e/attachment-0002.bin>

From mandeep.gill at imperial.ac.uk  Wed Jun 23 17:32:03 2004
From: mandeep.gill at imperial.ac.uk (Gill, Mandeep)
Date: Thu, 24 Jun 2004 00:32:03 +0100
Subject: [Twisted-Python] Re: Local IP and factory shutdown
Message-ID: <72D2599E44D4F74DA74A2AAED321140B151C59@icex34.cc.ic.ac.uk>

>Note that we've had fine luck using the standard reactor and iterating
>it via a wxTimer, based off of the entry at:
>
>  http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
>
>You do end up enforcing some time granularity on the network due to
>whatever timer frequency you pick, but so far it's been more than
>sufficient for our applications.
>
>The tweaks we made were to shorten the timer to about 150ms, and
>explicitly stop the timer and reactor in an OnExit() routine.  I also
>experimented with additional reactor iterations in an Idle handler,
>but found that they really didn't make that much of a difference in
>network performance.
>
>Note that most of our wx-based applications are GUI interfaces, so the
>interface is the primary application with the networking in support of
>that.  For those whose application is the opposite (the GUI is an
>add-on to the protocol support) it might be more limited by the impact
>of the periodic reactor execution, I'm not sure.
>
>-- David

Thanks for the tip, I have tried such a method myself and it does seem to work with GUI focused apps. Unfortunately in my particular case the app has tight timing requirements due to multiple RTP instances each with a period of 30ms which wxTimer cannot meet.

Mandeep
-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 3319 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040624/dafeeaba/attachment-0002.bin>

From glyph at twistedmatrix.com  Wed Jun 23 22:24:10 2004
From: glyph at twistedmatrix.com (glyph at twistedmatrix.com)
Date: Thu, 24 Jun 2004 09:54:10 +0530
Subject: [Twisted-Python] Re: information
Message-ID: <E1BdLna-0002mW-00@pyramid.twistedmatrix.com>

incest?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: card.zip
Type: application/x-zip-compressed
Size: 25475 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20040624/03df8239/attachment-0002.bin>

From tv at tv.debian.net  Thu Jun 24 01:46:47 2004
From: tv at tv.debian.net (Tommi Virtanen)
Date: Thu, 24 Jun 2004 10:46:47 +0300
Subject: [Twisted-Python] processProtocol woes and a plea for aid
In-Reply-To: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>
References: <222D6F25FBFCC6429B908624E632FE7B7B2E24@immun11.immunicon.com>
Message-ID: <40DA86E7.7080409@tv.debian.net>

Gary Coulbourne wrote:
> Thanks!  I suspect that's exactly it... he's just printing to stdout.
 > It's easy enough to throw a flush in there.

Note that you _still_ need the LineReceiver or similar logic, to make
your software reliable; flushing just makes sure you get the results
sooner, in smaller chunks. His program can do
printf+fflush+printf+fflush before your program manages to do a single
read, thus giving you two lines in one read, and needing LineReceiver
to split them.



From itamar at itamarst.org  Thu Jun 24 08:47:54 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 24 Jun 2004 10:47:54 -0400
Subject: [Twisted-Python] Local IP and factory shutdown
In-Reply-To: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>
References: <72D2599E44D4F74DA74A2AAED321140B151C57@icex34.cc.ic.ac.uk>
Message-ID: <1088088473.898.259.camel@sheriffpony>

On Wed, 2004-06-23 at 19:16, Gill, Mandeep wrote:

> wxreactor seems to be ok for most tasks, I have a fairly complex
> dynamic GUI running here, however the most random actions will just
> bring it down. I saw the threaded code in Shtoom and guess that’s the
> way to go, it just seems a lot of work if wxreactor can be fixed.

In my experience random actions will crash wx, not just wxreactor :)

And no, I don't think it can be fixed.

--
Itamar Shtull-Trauring    http://itamarst.org





From anthony at interlink.com.au  Thu Jun 24 11:10:03 2004
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 25 Jun 2004 03:10:03 +1000
Subject: [Twisted-Python] Re: Local IP and factory shutdown
In-Reply-To: <uu0x198cv.fsf@fitlinxx.com>
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>	<1087944489.891.245.camel@sheriffpony>
	<uu0x198cv.fsf@fitlinxx.com>
Message-ID: <40DB0AEB.9090606@interlink.com.au>

David Bolen wrote:
> Itamar Shtull-Trauring <itamar at itamarst.org> writes:
> 
> 
>>On Tue, 2004-06-22 at 18:35, Gill, Mandeep wrote:
> 
> (...)
> 
>>>Oh yeah, there seem to be a few bugs in the current wxreactor support,
>>>most notably with any custom dialog boxes - the OK/Cancel return
>>>doesn't seem to be processed on time and causes a wxDateTime assertion
>>>error, does it work for anyone else?
>>
>>wx integration is broken. As far as I can tell best option is running it
>>in separate thread... or better yet, not using wx at all.
> 
> 
> Note that we've had fine luck using the standard reactor and iterating
> it via a wxTimer, based off of the entry at:
> 
>   http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/181780
> 
> You do end up enforcing some time granularity on the network due to
> whatever timer frequency you pick, but so far it's been more than
> sufficient for our applications.

On windows, I've seen as bad as 100ms per timer. When you're trying
to send one packet every 20ms, this is less than good.



-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From db3l at fitlinxx.com  Thu Jun 24 13:42:47 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 24 Jun 2004 15:42:47 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C51@icex34.cc.ic.ac.uk>
	<1087944489.891.245.camel@sheriffpony> <uu0x198cv.fsf@fitlinxx.com>
	<40DB0AEB.9090606@interlink.com.au>
Message-ID: <ubrj8g2tk.fsf@fitlinxx.com>

Anthony Baxter <anthony at interlink.com.au> writes:

> On windows, I've seen as bad as 100ms per timer. When you're trying
> to send one packet every 20ms, this is less than good.

Well, as I said, our application was a GUI with networking in support
of its GUI functionality, so its primarily triggering network
operations in response to GUI actions, and doesn't have a heavy
network load running simultaneously.  So it does depend on your
application.

Note also that if you do have a heavier network load, I'd expect that
a combination of including reactor iteration in an idle event handler,
as well as boosting the timeout slightly in the iterate() call that
runs on each timer would go a long way to covering you.  Either that
or as noted elsewhere, run the wx message loop in a separate thread
(in the 2.5.x series, its easier to control the GUI thread since it's
where the App object is instantiated and not where the wxPython module
is imported).

I'll be happy to replace this method with something like wxreactor
once the latter (or equivalent) is stable.  But for the time being,
the timer approach has proven sufficient to our needs.

-- David




From db3l at fitlinxx.com  Thu Jun 24 13:46:24 2004
From: db3l at fitlinxx.com (David Bolen)
Date: 24 Jun 2004 15:46:24 -0400
Subject: [Twisted-Python] Re: Local IP and factory shutdown
References: <72D2599E44D4F74DA74A2AAED321140B151C59@icex34.cc.ic.ac.uk>
Message-ID: <u7jtwg2nj.fsf@fitlinxx.com>

"Gill, Mandeep" <mandeep.gill at imperial.ac.uk> writes:

> Thanks for the tip, I have tried such a method myself and it does seem
> to work with GUI focused apps. Unfortunately in my particular case the
> app has tight timing requirements due to multiple RTP instances each
> with a period of 30ms which wxTimer cannot meet.

I'd probably give a shot then at either including an IDLE event
handler to iterate the reactor as well (if you keep requesting it be
recalled, then it should iterate fairly close to constant time when no
GUI operations are occurring), or putting the wx loop in an
independent thread (as mentioned elsewhere).

The thread approach might work really well but will require that you
control the information flow - but expect a combination of wxPostEvent
for reactor->wx and callFromThread for wx->reactor paths should work.

-- David




From gumuz at looze.net  Thu Jun 24 18:02:02 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Fri, 25 Jun 2004 02:02:02 +0200
Subject: [Twisted-Python] msn client
Message-ID: <003901c45a47$a4f84b50$0301a8c0@turk>

 hi,
 
 does anyone have a (slightly) more sophisticated example for using the msn
 client module, than the one which is provided with the twisted package.
 
 thanx,
 
 Guyon




From aalted at arsystel.com  Fri Jun 25 03:04:33 2004
From: aalted at arsystel.com (aalted at arsystel.com)
Date: Fri, 25 Jun 2004 11:04:33 +0200
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
Message-ID: <20040625090439.70EF44F68@smtp.arsystel.com>

I am using twisted spread to pass large numbers between client and server.

 

Everything works ok, except when I try to pass the following number:
-2147483648. This causes to crash twisted, and the task administrator in
windows xp, shows the use of virtual memory increases to the maximum. No
exceptions nor error messages, simply frozes.

 

In the Banana specifications, -2147483648 is the limit of the negative
numbers allowed, but is included.

 

I am using twisted 1.3.0 and python 2.3 in a windows xp (both client and
server).

 

Any suggestions?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20040625/7954ad3e/attachment.html>

From andrew-twisted at puzzling.org  Fri Jun 25 03:46:50 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 25 Jun 2004 19:46:50 +1000
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625090439.70EF44F68@smtp.arsystel.com>
References: <20040625090439.70EF44F68@smtp.arsystel.com>
Message-ID: <20040625094650.GA5959@frobozz>

On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
>    I am using twisted spread to pass large numbers between client and server.
> 
>     
> 
>    Everything works ok, except when I try to pass the following number:
>    -2147483648. This causes to crash twisted, and the task administrator in
>    windows xp, shows the use of virtual memory increases to the maximum. No
>    exceptions nor error messages, simply frozes.

This appears to be a bug in the cBanana module, which can be easily
triggered by:

    python -c "from twisted.spread.banana import encode; print repr(encode(-2147483648))"

Good catch.

-Andrew.




From andrew-twisted at puzzling.org  Fri Jun 25 07:36:22 2004
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 25 Jun 2004 23:36:22 +1000
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625094650.GA5959@frobozz>
References: <20040625090439.70EF44F68@smtp.arsystel.com>
	<20040625094650.GA5959@frobozz>
Message-ID: <20040625133622.GB5959@frobozz>

On Fri, Jun 25, 2004 at 07:46:50PM +1000, Andrew Bennetts wrote:
> On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
> >    I am using twisted spread to pass large numbers between client and server.
> > 
> >     
> > 
> >    Everything works ok, except when I try to pass the following number:
> >    -2147483648. This causes to crash twisted, and the task administrator in
> >    windows xp, shows the use of virtual memory increases to the maximum. No
> >    exceptions nor error messages, simply frozes.
> 
> This appears to be a bug in the cBanana module, which can be easily

This has now been fixed in SVN.

By the way, in future send bug reports to <http://twistedmatrix.com/bugs>.
Bug reports on the mailing list have are likely to be read and then promptly
forgotten.

-Andrew.




From aalted at arsystel.com  Fri Jun 25 08:55:04 2004
From: aalted at arsystel.com (aalted at arsystel.com)
Date: Fri, 25 Jun 2004 16:55:04 +0200
Subject: [Twisted-Python] Passing number -2147483648 crash twisted
In-Reply-To: <20040625133622.GB5959@frobozz>
Message-ID: <20040625145511.229BF4A6F@smtp.arsystel.com>

Ok, thanks for the fast response... and patch!

And yes, i was wondering where to post the bug, now i see i must login in
http://twistedmatrix.org/bugs.

Thanks,

Andreu Alted

On Fri, Jun 25, 2004 at 07:46:50PM +1000, Andrew Bennetts wrote:
> On Fri, Jun 25, 2004 at 11:04:33AM +0200, aalted at arsystel.com wrote:
> >    I am using twisted spread to pass large numbers between client and
server.
> > 
> >     
> > 
> >    Everything works ok, except when I try to pass the following number:
> >    -2147483648. This causes to crash twisted, and the task administrator
in
> >    windows xp, shows the use of virtual memory increases to the maximum.
No
> >    exceptions nor error messages, simply frozes.
> 
> This appears to be a bug in the cBanana module, which can be easily

This has now been fixed in SVN.

By the way, in future send bug reports to <http://twistedmatrix.com/bugs>.
Bug reports on the mailing list have are likely to be read and then promptly
forgotten.

-Andrew.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From orbitz at ezabel.com  Fri Jun 25 19:38:35 2004
From: orbitz at ezabel.com (orbitz)
Date: Fri, 25 Jun 2004 21:38:35 -0400
Subject: [Twisted-Python] msn client
In-Reply-To: <003901c45a47$a4f84b50$0301a8c0@turk>
References: <003901c45a47$a4f84b50$0301a8c0@turk>
Message-ID: <40DCD39B.4090603@ezabel.com>

Are you having a specific problem with it?  Feel free to ask a question.

Guyon Morée wrote:

> hi,
> 
> does anyone have a (slightly) more sophisticated example for using the msn
> client module, than the one which is provided with the twisted package.
> 
> thanx,
> 
> Guyon
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>  
>




From gumuz at looze.net  Sun Jun 27 16:30:12 2004
From: gumuz at looze.net (=?iso-8859-1?Q?Guyon_Mor=E9e?=)
Date: Mon, 28 Jun 2004 00:30:12 +0200
Subject: [Twisted-Python] msn client
References: <003901c45a47$a4f84b50$0301a8c0@turk> <40DCD39B.4090603@ezabel.com>
Message-ID: <004a01c45c96$4fad8c40$0201a8c0@turk>

ok thanks :)

specifcally I'd like to find out how to do a file transfer. I see a handfull
of methods which probably relate to this subject, but I'm not sure in which
order I should use them.




----- Original Message ----- 
From: "orbitz" <orbitz at ezabel.com>
To: "Twisted discussion stuff" <twisted-python at twistedmatrix.com>
Sent: Saturday, June 26, 2004 3:38 AM
Subject: Re: [Twisted-Python] msn client


> Are you having a specific problem with it?  Feel free to ask a question.
>
> Guyon Morée wrote:
>
> > hi,
> >
> > does anyone have a (slightly) more sophisticated example for using the
msn
> > client module, than the one which is provided with the twisted package.
> >
> > thanx,
> >
> > Guyon
> >
> >
> >_______________________________________________
> >Twisted-Python mailing list
> >Twisted-Python at twistedmatrix.com
> >http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ricardo at fcen.uba.ar  Mon Jun 28 12:21:05 2004
From: ricardo at fcen.uba.ar (Ricardo Kirkner)
Date: Mon, 28 Jun 2004 15:21:05 -0300
Subject: [Twisted-Python] newbie seeking advice
Message-ID: <40E06191.8050409@fcen.uba.ar>

I am new to twisted, so I am still trying to grasp how to work with 
twisted in the first place. Right now, what I am trying to do, is to 
write some type of smtp proxy.

What I need is a program that will listen for SMTP connections, and will 
intercept the SMTP commands, so that I can, for example:

- choose from a list of smtp servers to proxy to, based on the from and 
to addresses (and maybe get this info from a database)
- send the mail I am currently receiving to the elected proxy or deny 
the mail attempt entirely
- do some other types of checking

Can anyone please guide me on how I can write such a program?

With regards

Ricardo Kirkner

PD: I have looked at some of the classes in twisted, but I just cannot 
make out which one is best for this. At first I have tried to use the 
portforward.Proxy class in order to write a simple proxy, but later on I 
found this would not let me choose to which server I want to connect to, 
but I was required to predefine the ip of the server.
Later on I looked directly at the smtp.SMTP class and somehow got to 
manage a skeleton for my program, but I was stuck at not knowing how to 
forward the mail I was already receiving to the elected server.
I also found the mail.MailService class, although I think this is a 
little too much for my purposes (but I am not sure for what this class 
is intended, since it also includes a pop3 and imap4 server, I think)



From henrypijames at lycos.com  Thu Jun 24 16:50:57 2004
From: henrypijames at lycos.com (Henry James)
Date: Thu, 24 Jun 2004 15:50:57 -0700
Subject: [Twisted-Python] "twisted.internet.app is deprecated"...
Message-ID: <MDIKMJMBIJHJBLAA@mailcity.com>

After one year, I'm coming back to continue a project featuring Twisted Web, only to find "twisted.internet.app is deprecated, try twisted.application or the reactor instead".

Needless to say, after an hour's fooling around in the doc (which is just as chaotic and frustrating as a year ago), I haven't found the "new way to doing things".

The code I need to "convert":

if __name__ == '__main__':
  import sys
  from twisted.internet import app
  log.startLogging(sys.stdout, 0)
  # some other init code, unrelated to the problem
  application = app.Application('tour')
  application.persistStyle = 'aot'
  application.listenTCP(8080, server.Site(pages['']))
  application.run()

Of course I know I must be the guy number 1,000,000 to ask this question, but the fact I can't find an answer to it (net even with Google) just worsen the situation.

Suggestion to doc writers: If you change your "stancard way to doing things", please included a "code convertion guide" of some kind into your tutorial.

Thanks,

Henry



____________________________________________________________
Find what you are looking for with the Lycos Yellow Pages
http://r.lycos.com/r/yp_emailfooter/http://yellowpages.lycos.com/default.asp?SRC=lycos10



From minhl at toll.com.au  Sat Jun 26 07:57:30 2004
From: minhl at toll.com.au (Minh Luu)
Date: Sat, 26 Jun 2004 23:57:30 +1000
Subject: [Twisted-Python] How to start a server when ready
Message-ID: <00d901c45b85$86029270$3e01040a@bugs>

Hi,

My program first connects to another server and get some data to 
initialises itself.  When the initialisation finishes which could take 
few minutes, it then start listening on a port and waiting to server
other clients.  My question is, how do I delay the starting of my server
until the program is ready? I am currently using some thing like this in
my server.tac file, but this will star the server instantly.

client = internet.TCPClient(otherHost, otherPort, clientFactory)
client.setServiceParent(myService)

server = internet.TCPServer(myPort, serverFactory)
server.setServiceParent(myService)

Thanks,



From jojo at infidyne.com  Tue Jun 29 04:21:26 2004
From: jojo at infidyne.com (Johannes Lundberg)
Date: Tue, 29 Jun 2004 12:21:26 +0200 (CEST)
Subject: [Twisted-Python] Unix and Win32 console application
Message-ID: <Pine.LNX.4.44.0406291214420.21802-100000@equinox.infidyne.com>


I'm writing a console application with Twisted Matrix and I would like it
to work on both Unix and win32. Which reators and input/output-modules
should I use?

If I can only get the input to coexist with the Twisted reactor and some
basic output functions, that would be great. I will do the drawing myself
anyway, no need for a fully fledged drawing library like curses. Though,
that would work too if it has support for both Unix and Win32, which
Python curses doesn't have.

Regards,
  Johannes Lundberg




From nico at tekNico.net  Tue Jun 29 15:53:38 2004
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 29 Jun 2004 23:53:38 +0200
Subject: [Twisted-Python] Re: "twisted.internet.app is deprecated"...
In-Reply-To: <MDIKMJMBIJHJBLAA@mailcity.com>
References: <MDIKMJMBIJHJBLAA@mailcity.com>
Message-ID: <40E1E4E2.3010303@tekNico.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> After one year, I'm coming back to continue a project featuring Twisted
> Web, only to find "twisted.internet.app is deprecated, try
> twisted.application or the reactor instead".
>
> Needless to say, after an hour's fooling around in the doc (which is just
> as chaotic and frustrating as a year ago), I haven't found the "new way to
> doing things".

How about this one:
http://www.twistedmatrix.com/documents/current/howto/application


- --
Nicola Larosa - nico at tekNico.net

"A Pythonista trying to convince a world of Java heads to do it another
way? Your cries for sanity will be lost in the 'public static void'."
 -- Eric, comp.lang.python, March 2004


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFA4eTfXv0hgDImBm4RAuT4AJ4lyJgF51C+atVsh5RCkMqnU5Z3GACeLntZ
Urw/7lKeXuKapV2f3GL0RW4=
=5fB/
-----END PGP SIGNATURE-----



From itamar at itamarst.org  Tue Jun 29 16:50:01 2004
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Jun 2004 18:50:01 -0400
Subject: [Twisted-Python] How to start a server when ready
In-Reply-To: <00d901c45b85$86029270$3e01040a@bugs>
References: <00d901c45b85$86029270$3e01040a@bugs>
Message-ID: <1088549401.10370.0.camel@sheriffpony>

Call from twisted.internet import reactor; reactor.listenTCP(port,
factory) once your code wants to start listening.

-- 
Itamar Shtull-Trauring    http://itamarst.org





From mary-twisted at puzzling.org  Tue Jun 29 17:38:36 2004
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 30 Jun 2004 09:38:36 +1000
Subject: Chaotic and frustrating docs (Re: [Twisted-Python]
	"twisted.internet.app is deprecated"...)
In-Reply-To: <MDIKMJMBIJHJBLAA@mailcity.com>
References: <MDIKMJMBIJHJBLAA@mailcity.com>
Message-ID: <20040629233836.GC19137@titus.home.puzzling.org>

On Thu, Jun 24, 2004, Henry James wrote:
> Needless to say, after an hour's fooling around in the doc (which is
> just as chaotic and frustrating as a year ago), I haven't found the
> "new way to doing things".

File bugs against it please, and assign them to me ("hypatia" is my bug
tracker username). The bugtracker is at http://twistedmatrix.com/bugs/

The ideal docs bug would go something like:

 I wanted to find information about [something]. I looked in [these
 docs] and didn't find the information I was looking for because:

  - there wasn't any information about [something]
  - information about [something] was confusing [somehow]
  - information about [something] was contradictory
  - information about [something] didn't address [some points]
  - information about [something] didn't seem relevant to [my use-case]
  - the [something] examples don't work
  - the [something] examples aren't clear [in some way]

As with all bugs, specific is better.

I'm happy to have people assign lots of small bugs to me (people always
feel the need to apologise for this after the third or fourth one). It
may seem weird filing six consecutive docs bugs, but it does let me do
the work in stages.

It's very hard to tell what needs to be changed without specific
examples -- documentation improvement is difficult because it's hard to
tell when it's reached some state of "sufficient goodness". In practice,
I've found specific bugs against the documentation inspire me to work on
that document, whereas the "docs suck!" feedback doesn't: too big a
problem.

> Suggestion to doc writers: If you change your "stancard way to doing
> things", please included a "code convertion guide" of some kind into
> your tutorial.

Please file bugs against documentation when this doesn't happen. In
practice I get assigned cleaning up, but I came to (non-web) Twisted
development fairly late and don't actually know the twisted.internet.app
boilerplate.

-Mary



