From trac at twistedmatrix.com  Sun Jun  1 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Jun 2014 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1401602717.98.7760288266461544368@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140601/e1efcfef/attachment.html>

From liangguowei at bfsu.edu.cn  Sun Jun  1 00:08:12 2014
From: liangguowei at bfsu.edu.cn (=?GBK?B?wbq5+s6w?=)
Date: Sun, 01 Jun 2014 14:08:12 +0800
Subject: [Twisted-Python] Auto-Re:  Weekly Bug Summary
Message-ID: <1406011408127dc30dc6f3d09093682e85da47379b58@bfsu.edu.cn>

??????????

----
????????????? ???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140601/5ca3a051/attachment.html>

From itamar at itamarst.org  Mon Jun  2 05:54:23 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 02 Jun 2014 07:54:23 -0400
Subject: [Twisted-Python] ANN: Crochet 1.3.0 - Use Twisted Anywhere!
In-Reply-To: <538A36AD.30304@itamarst.org>
References: <538A36AD.30304@itamarst.org>
Message-ID: <538C65EF.2010707@itamarst.org>

On 05/31/2014 04:08 PM, Itamar Turner-Trauring wrote:
> This is a bugfix release, recommended for all users of Crochet.

More specifically, if you've been getting spurious RuntimeErrors 
complaining about waiting during imports you want this release.

-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140602/e1ff8b0f/attachment.html>

From franz at electromail.org  Tue Jun  3 07:31:14 2014
From: franz at electromail.org (Franz Schwartau)
Date: Tue, 3 Jun 2014 15:31:14 +0200
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
Message-ID: <20140603133114.GA97309@electromail.org>

Hi!

I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit. ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of twisted is installed.

I wrote a separate module called LookupSessionDB:

http://pastebin.com/u4TMNhpd

It looks up some values from a database table. It does some efforts to handle reconnect properly.

If called a second time and more the SELECT statement returns no rows (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()" is called after obtaining a database connection "rows = cursor.fetchall()" (line 138) returns the expected results.

The module inserting the records calls "conn.commit()" after INSERT. If I execute the same SELECT statement in a separate mysql client the results are displayed.

This is quite confusing. Any idea what's going on?

	Best regards
		Dirk



From glyph at twistedmatrix.com  Tue Jun  3 12:57:45 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jun 2014 11:57:45 -0700
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <20140603133114.GA97309@electromail.org>
References: <20140603133114.GA97309@electromail.org>
Message-ID: <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>


On Jun 3, 2014, at 6:31 AM, Franz Schwartau <franz at electromail.org> wrote:

> Hi!
> 
> I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit. ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of twisted is installed.

I should note that Twisted 8.2.0 is 6 years old at this point, so if you can't upgrade Twisted there might not be much we can do for you :).

> I wrote a separate module called LookupSessionDB:
> 
> http://pastebin.com/u4TMNhpd
> 
> It looks up some values from a database table. It does some efforts to handle reconnect properly.
> 
> If called a second time and more the SELECT statement returns no rows (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()" is called after obtaining a database connection "rows = cursor.fetchall()" (line 138) returns the expected results.
> 
> The module inserting the records calls "conn.commit()" after INSERT. If I execute the same SELECT statement in a separate mysql client the results are displayed.
> 
> This is quite confusing. Any idea what's going on?

Can you simplify this question somewhat?  There's a lot of SQL in here, it's missing a required dependency ("Base") and I suspect that this is really a MySQL question and not a Twisted question.  It would be helpful if you could provide a complete schema so we could run your code, in the style of http://sscce.org/.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140603/f95b4928/attachment.html>

From franz at electromail.org  Wed Jun  4 03:03:18 2014
From: franz at electromail.org (Franz Schwartau)
Date: Wed, 4 Jun 2014 11:03:18 +0200
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
Message-ID: <20140604090318.GA40696@electromail.org>

Hi Glyph!

On Tue, Jun 03, 2014 at 11:57:45AM -0700, Glyph Lefkowitz wrote:
>    On Jun 3, 2014, at 6:31 AM, Franz Schwartau <franz at electromail.org> wrote:
> 
>      Hi!
> 
>      I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit.
>      ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of
>      twisted is installed.
> 
>    I should note that Twisted 8.2.0 is 6 years old at this point, so if you
>    can't upgrade Twisted there might not be much we can do for you :).
> 
>      I wrote a separate module called LookupSessionDB:
> 
>      http://pastebin.com/u4TMNhpd
> 
>      It looks up some values from a database table. It does some efforts to
>      handle reconnect properly.
> 
>      If called a second time and more the SELECT statement returns no rows
>      (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()"
>      is called after obtaining a database connection "rows =
>      cursor.fetchall()" (line 138) returns the expected results.
> 
>      The module inserting the records calls "conn.commit()" after INSERT. If
>      I execute the same SELECT statement in a separate mysql client the
>      results are displayed.
> 
>      This is quite confusing. Any idea what's going on?
> 
>    Can you simplify this question somewhat?  There's a lot of SQL in here,
>    it's missing a required dependency ("Base") and I suspect that this is
>    really a MySQL question and not a Twisted question.  It would be helpful
>    if you could provide a complete schema so we could run your code, in the
>    style of http://sscce.org/.
>    -glyph

Thanks for your answer.

I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.

I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.

IMHO it's related to twisted. If I replace adbapi.ConnectionPool() with another connection method it works. I used mysql.connector.connect(pool_name = "ppolicy", pool_size = 5, ...) and MySQLdb.connect().

	Best regards
		Franz


From glyph at twistedmatrix.com  Wed Jun  4 13:20:45 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jun 2014 12:20:45 -0700
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <20140604090318.GA40696@electromail.org>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
 <20140604090318.GA40696@electromail.org>
Message-ID: <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>


On Jun 4, 2014, at 2:03 AM, Franz Schwartau <franz at electromail.org> wrote:

> I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.

Yeah, RHEL is kind of a bummer.

> I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.

If you need more than MySQL + Twisted alone to reproduce the bug, then I would suggest that perhaps you haven't tracked it down far enough to do useful investigations within Twisted... I appreciate that you're willing to set up a VM, but the interesting thing is to extract the problem into a simple example, not to get the whole ball of mud running :).

-glyph

From dustin at v.igoro.us  Wed Jun  4 14:08:25 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 4 Jun 2014 16:08:25 -0400
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
 <20140604090318.GA40696@electromail.org>
 <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>
Message-ID: <CAJtE5vSPppoMmAALccTMOzu48+RLFeR4g0fygaAVQ=+PZvf6FA@mail.gmail.com>

Also, might I suggest that, at least for purposes of debugging, you
use a virtualenv (or a throwaway VM if you prefer) and install a copy
of Twisted from this decade.  Twisted is very stable, and fixes lots
of bugs in every release.  So you're fairly unlikely to uncover *new*
problems, but very likely to fix the problem you're seeing, by doing
so.

Dustin

On Wed, Jun 4, 2014 at 3:20 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jun 4, 2014, at 2:03 AM, Franz Schwartau <franz at electromail.org> wrote:
>
>> I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.
>
> Yeah, RHEL is kind of a bummer.
>
>> I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.
>
> If you need more than MySQL + Twisted alone to reproduce the bug, then I would suggest that perhaps you haven't tracked it down far enough to do useful investigations within Twisted... I appreciate that you're willing to set up a VM, but the interesting thing is to extract the problem into a simple example, not to get the whole ball of mud running :).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From tobias.oberstein at tavendo.de  Wed Jun  4 16:21:18 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 4 Jun 2014 15:21:18 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
Message-ID: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>

Hi,

this is an early announcement of Crossbar.io, a new application server based on Twisted and Autobahn.

Crossbar.io is an open-source application router that allows to build distributed systems out of
application components which are loosely coupled and communicate in (soft) real-time.

README: https://github.com/crossbario/crossbar#crossbario

At it's core, an application router provides generic routing of both calls (for remote procedure
calls) and events (for publish & subscribe) which is realized via WAMP, an open WebSocket
based communication protocol.

Why WAMP?: http://wamp.ws/why/

Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

We've got some early encouraging feedback from developers who think Crossbar.io might
get the next Django, MeteorJS or Vert.x:

A developer guest post: http://tavendo.com/blog/post/is-crossbar-the-future-of-python-web-apps/

Crossbar.io is an open-source project, and still in the very beginning. Rough edges, stuff breaks,
moving fast.

If you want to give it a try: https://github.com/crossbario/crossbar/wiki#quick-start

We are looking for feedback, help and contributors. It's a big shot project, and to make it
take off, we need core hackers and grow a developer community. I know, sounds bold.
Sure, and it is. In any case, I'd love to see the Python community get even more ambitious.
We can't let the J's of this world take over;)

Cheers,
/Tobias


From glyph at twistedmatrix.com  Wed Jun  4 21:39:33 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jun 2014 20:39:33 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:

> Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
> which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.


Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140604/19528028/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jun  5 05:00:45 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 5 Jun 2014 04:00:45 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>

Hi Glyph,

The process support in Twisted is just awesome! It is well designed and robust across platforms. Both are _big_ things we really depend on.

And yes, the process management and monitoring in Crossbar is really dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub events fire on process lifecycle, and processes can be managed via WAMP calls:

https://github.com/crossbario/crossbar/wiki/Management-API

Want to debug an app component running a Worker? Start Manhole within the process while it's running via a single WAMP call.

https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1

Manhole. Another goodie of Twisted;) Love it.

In fact, I would go as far as saying: without Twisted (and Python), it would have been simply impossible for us to get so far - with limited dev resources.

Cheers,
/Tobias


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph
Gesendet: Donnerstag, 5. Juni 2014 05:40
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:


Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140605/f6961a11/attachment.html>

From trac at twistedmatrix.com  Sun Jun  8 00:05:20 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Jun 2014 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1402207520.16.5784794713634681919@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140608/7413633b/attachment.html>

From twisted-python at 2xlp.com  Tue Jun 10 12:24:24 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 10 Jun 2014 14:24:24 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to postgresql
Message-ID: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>


I had to restart postgresql , and that triggered some endless errors in my logs.

i don't have anything that can handle a suddenly dropped / resumed connection.

does anyone have a recommendation for trying to reconnect or handle this in general

from what I can tell from my logs...

When I catch an error, my cleanup code tries to 

		self._connection.rollback()

	which raises

		psycopg2.InterfaceError: connection already closed

My immediate thoughts are:

1. catching the correct disconnect error 
2. telling the connection/pool to reconnect

From p.mayers at imperial.ac.uk  Tue Jun 10 13:02:23 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 10 Jun 2014 20:02:23 +0100
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
Message-ID: <5397563F.20706@imperial.ac.uk>

On 10/06/2014 19:24, Jonathan Vanasco wrote:
>
> I had to restart postgresql , and that triggered some endless errors in my logs.
>
> i don't have anything that can handle a suddenly dropped / resumed connection.
>
> does anyone have a recommendation for trying to reconnect or handle this in general
>
> from what I can tell from my logs...
>
> When I catch an error, my cleanup code tries to
>
> 		self._connection.rollback()
>
> 	which raises
>
> 		psycopg2.InterfaceError: connection already closed

Yes, this is irritating.

Related tickets see:

http://twistedmatrix.com/trac/ticket/4404
http://twistedmatrix.com/trac/ticket/4964

You absolutely want to be setting cp_reconnect=1 on ConnectionPool. 
Anything else is asking for major trouble, and I really think this 
should be the default.

cp_reconnect will not avoid all problems - for a thread pool of size N, 
the next N transactions will have to fail to throw away all the dead 
connections - but it might stop them happing forever.

In some other, non-Twisted contexts, people have had problem even with 
reconnecting, because some versions of some DBAPI drivers emit a 
connection from .close() if it's already closed, which interrupts the 
reconnection logic :o(

It seems your version of psycopg is doing this - how old is it? I 
thought that was fixed these days?

You might also look at something like pgbouncer, which you can configure 
to try a "good" SQL query on the outbound connections before handing to 
an inbound client; this probes the connections. It adds latency, but 
personally I would far rather pay the small number of milliseconds on 
"select 1" than bomb out to the upper layers.

An annoying problem.


From dustin at v.igoro.us  Tue Jun 10 19:02:32 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 10 Jun 2014 21:02:32 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <5397563F.20706@imperial.ac.uk>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
Message-ID: <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>

SQLAlchemy makes this kind of pessimistic reconnection pretty easy; we
do it for MySQL in
  https://github.com/buildbot/buildbot/blob/master/master/buildbot/db/enginestrategy.py
I'm not sure why we don't do it for Postgres, but we've never heard a
complaint from a postgres user, so perhaps other layers are handling
it.

In general, I consider this a requirement for a production-ready
database layer, along with correctly setting SO_KEEPALIVE.

Dustin

On Tue, Jun 10, 2014 at 3:02 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/06/2014 19:24, Jonathan Vanasco wrote:
>>
>>
>> I had to restart postgresql , and that triggered some endless errors in my
>> logs.
>>
>> i don't have anything that can handle a suddenly dropped / resumed
>> connection.
>>
>> does anyone have a recommendation for trying to reconnect or handle this
>> in general
>>
>> from what I can tell from my logs...
>>
>> When I catch an error, my cleanup code tries to
>>
>>                 self._connection.rollback()
>>
>>         which raises
>>
>>                 psycopg2.InterfaceError: connection already closed
>
>
> Yes, this is irritating.
>
> Related tickets see:
>
> http://twistedmatrix.com/trac/ticket/4404
> http://twistedmatrix.com/trac/ticket/4964
>
> You absolutely want to be setting cp_reconnect=1 on ConnectionPool. Anything
> else is asking for major trouble, and I really think this should be the
> default.
>
> cp_reconnect will not avoid all problems - for a thread pool of size N, the
> next N transactions will have to fail to throw away all the dead connections
> - but it might stop them happing forever.
>
> In some other, non-Twisted contexts, people have had problem even with
> reconnecting, because some versions of some DBAPI drivers emit a connection
> from .close() if it's already closed, which interrupts the reconnection
> logic :o(
>
> It seems your version of psycopg is doing this - how old is it? I thought
> that was fixed these days?
>
> You might also look at something like pgbouncer, which you can configure to
> try a "good" SQL query on the outbound connections before handing to an
> inbound client; this probes the connections. It adds latency, but personally
> I would far rather pay the small number of milliseconds on "select 1" than
> bomb out to the upper layers.
>
> An annoying problem.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Tue Jun 10 23:23:56 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 10 Jun 2014 22:23:56 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
Message-ID: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>

You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.

-glyph

On Jun 10, 2014, at 6:02 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> SQLAlchemy makes this kind of pessimistic reconnection pretty easy; we
> do it for MySQL in
>  https://github.com/buildbot/buildbot/blob/master/master/buildbot/db/enginestrategy.py
> I'm not sure why we don't do it for Postgres, but we've never heard a
> complaint from a postgres user, so perhaps other layers are handling
> it.
> 
> In general, I consider this a requirement for a production-ready
> database layer, along with correctly setting SO_KEEPALIVE.
> 
> Dustin
> 
> On Tue, Jun 10, 2014 at 3:02 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> On 10/06/2014 19:24, Jonathan Vanasco wrote:
>>> 
>>> 
>>> I had to restart postgresql , and that triggered some endless errors in my
>>> logs.
>>> 
>>> i don't have anything that can handle a suddenly dropped / resumed
>>> connection.
>>> 
>>> does anyone have a recommendation for trying to reconnect or handle this
>>> in general
>>> 
>>> from what I can tell from my logs...
>>> 
>>> When I catch an error, my cleanup code tries to
>>> 
>>>                self._connection.rollback()
>>> 
>>>        which raises
>>> 
>>>                psycopg2.InterfaceError: connection already closed
>> 
>> 
>> Yes, this is irritating.
>> 
>> Related tickets see:
>> 
>> http://twistedmatrix.com/trac/ticket/4404
>> http://twistedmatrix.com/trac/ticket/4964
>> 
>> You absolutely want to be setting cp_reconnect=1 on ConnectionPool. Anything
>> else is asking for major trouble, and I really think this should be the
>> default.
>> 
>> cp_reconnect will not avoid all problems - for a thread pool of size N, the
>> next N transactions will have to fail to throw away all the dead connections
>> - but it might stop them happing forever.
>> 
>> In some other, non-Twisted contexts, people have had problem even with
>> reconnecting, because some versions of some DBAPI drivers emit a connection
>> from .close() if it's already closed, which interrupts the reconnection
>> logic :o(
>> 
>> It seems your version of psycopg is doing this - how old is it? I thought
>> that was fixed these days?
>> 
>> You might also look at something like pgbouncer, which you can configure to
>> try a "good" SQL query on the outbound connections before handing to an
>> inbound client; this probes the connections. It adds latency, but personally
>> I would far rather pay the small number of milliseconds on "select 1" than
>> bomb out to the upper layers.
>> 
>> An annoying problem.
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140610/3ed474dd/attachment.html>

From wulczer at wulczer.org  Wed Jun 11 02:01:47 2014
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Wed, 11 Jun 2014 10:01:47 +0200
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
Message-ID: <53980CEB.8010703@wulczer.org>

On 11/06/14 07:23, Glyph wrote:
> You might want to just try using SQLAlchemy via
> <https://pypi.python.org/pypi/alchimia> if you don't want to do your own
> thread-pool management as buildbot appears to be.

Or you can go threadless and use txpostgres, which now has automatic 
reconnection handling (dislaimer: I'm the author):

http://txpostgres.readthedocs.org/en/latest/usage.html#automatic-reconnection

Jan


From max at riehl.io  Wed Jun 11 09:05:10 2014
From: max at riehl.io (Maximilien Riehl)
Date: Wed, 11 Jun 2014 17:05:10 +0200
Subject: [Twisted-Python] Known bug with twistd log rotation
Message-ID: <53987026.1000106@riehl.io>

Hi!

I'm finding it difficult to get log rotation working cleanly with twistd 
(if dropping privileges through twistd, which we require).
I went through all the docs and also found [1] very helpful, but the 
problem boils down to the fact that


>     Implications for Logfile Rotation
>
> Using the configuration described here, the LOGFILE will be created as 
> user "root" and group "root", but rotated as user UID and group GID.  
> If you want rotation to work as advertised it is necessary to put the 
> LOGFILE in a directory in which UID/GID has permissions to rename files.
>

and

>     def rotate(self):
>         """
>         Rotate the file and create a new one.
>
>         If it's not possible to open new logfile, this will fail silently,
>         and continue logging to old logfile.
>         """
>         if not (os.access(self.directory, os.W_OK) and 
> os.access(self.path, os.W_OK)):
>             return
(twisted 14.0.0)

will never work together. Even if the user twistd runs as is technically 
able to rename the log file (due to having write permissions on the 
directory), it will never try to since it can't write to the file.
There is a workaround on a comment in [1] but that's a really 
unnecessary and hacky solution, IMHO.

Is this a known bug?
I remember running into this issue a year ago or so and IIRC I just gave up.


Thanks for any pointers,
max

[1]
http://www.tsheffler.com/blog/?p=526
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140611/486447a9/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Jun 11 09:52:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 15:52:16 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <53987026.1000106@riehl.io>
References: <53987026.1000106@riehl.io>
Message-ID: <20140611155216.7208.1046483696.divmod.xquotient.0@top>

On 03:05 pm, max at riehl.io wrote:
>Hi!
>
>I'm finding it difficult to get log rotation working cleanly with 
>twistd (if dropping privileges through twistd, which we require).
>I went through all the docs and also found [1] very helpful, but the 
>problem boils down to the fact that
>>     Implications for Logfile Rotation
>>
>>Using the configuration described here, the LOGFILE will be created as 
>>user "root" and group "root", but rotated as user UID and group GID. 
>>If you want rotation to work as advertised it is necessary to put the 
>>LOGFILE in a directory in which UID/GID has permissions to rename 
>>files.
>
>and
>>     def rotate(self):
>>         """
>>         Rotate the file and create a new one.
>>
>>         If it's not possible to open new logfile, this will fail 
>>silently,
>>         and continue logging to old logfile.
>>         """
>>         if not (os.access(self.directory, os.W_OK) and 
>>os.access(self.path, os.W_OK)):
>>             return
>(twisted 14.0.0)
>
>will never work together. Even if the user twistd runs as is 
>technically able to rename the log file (due to having write 
>permissions on the directory), it will never try to since it can't 
>write to the file.
>There is a workaround on a comment in [1] but that's a really 
>unnecessary and hacky solution, IMHO.
>
>Is this a known bug?

Sounds like https://twistedmatrix.com/trac/ticket/5723

Jean-Paul


From max at riehl.io  Wed Jun 11 10:22:27 2014
From: max at riehl.io (wp11226852-max)
Date: Wed, 11 Jun 2014 18:22:27 +0200 (CEST)
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <20140611155216.7208.1046483696.divmod.xquotient.0@top>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
Message-ID: <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>

Thanks Jean-Paul. I have no idea how I managed to miss both tickets (there is a
duplicate) and would like to apologize.

The required change is really small, despite the age of the ticket. Is there
anything I can do to help fix it (e.G. contribute)?

Thanks a lot for your work on Twisted.

Regards,
max

> exarkun at twistedmatrix.com hat am 11. Juni 2014 um 17:52 geschrieben:
>
>
> On 03:05 pm, max at riehl.io wrote:
> >Hi!
> >
> >I'm finding it difficult to get log rotation working cleanly with
> >twistd (if dropping privileges through twistd, which we require).
> >I went through all the docs and also found [1] very helpful, but the
> >problem boils down to the fact that
> >> Implications for Logfile Rotation
> >>
> >>Using the configuration described here, the LOGFILE will be created as
> >>user "root" and group "root", but rotated as user UID and group GID.
> >>If you want rotation to work as advertised it is necessary to put the
> >>LOGFILE in a directory in which UID/GID has permissions to rename
> >>files.
> >
> >and
> >> def rotate(self):
> >> """
> >> Rotate the file and create a new one.
> >>
> >> If it's not possible to open new logfile, this will fail
> >>silently,
> >> and continue logging to old logfile.
> >> """
> >> if not (os.access(self.directory, os.W_OK) and
> >>os.access(self.path, os.W_OK)):
> >> return
> >(twisted 14.0.0)
> >
> >will never work together. Even if the user twistd runs as is
> >technically able to rename the log file (due to having write
> >permissions on the directory), it will never try to since it can't
> >write to the file.
> >There is a workaround on a comment in [1] but that's a really
> >unnecessary and hacky solution, IMHO.
> >
> >Is this a known bug?
>
> Sounds like https://twistedmatrix.com/trac/ticket/5723
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140611/ac784e41/attachment.html>

From Nahraf34 at janisary.us  Wed Jun 11 11:19:49 2014
From: Nahraf34 at janisary.us (Nahraf34)
Date: Wed, 11 Jun 2014 17:19:49 +0000
Subject: [Twisted-Python] Trouble with Record_TXT
Message-ID: <20140611171949.GA14007@janisary.us>

Hi all,

I am attempting to write a small DNS server that returns custom TXT record
when I do:

dig -t TXT -p 10053 @127.0.0.1 testdomain.com

The code is as follows:

----------

#!/usr/bin/python

from twisted.internet import reactor
from twisted.names import client, dns, server

class DynamicResolver(object):
   def query(self, query, timeout=None):
      name = query.name.name

#     answer = dns.RRHeader(
#        name = name,
#        payload = dns.Record_A(address=b'1.2.3.4'))

      answer = dns.RRHeader(
         name = name,
         payload = dns.Record_TXT(data='FirstSecond', ttl=3333))

      answers = [answer]
      authority = []
      additional = []

      return answers, authority, additional

def main():
   factory = server.DNSServerFactory(
      clients = [DynamicResolver()]
   )

   protocol = dns.DNSDatagramProtocol(controller=factory)

   reactor.listenUDP(10053, protocol)
   reactor.listenTCP(10053, factory)

   reactor.run()

if __name__ == '__main__':
   main()

----------

You will notice three lines of code are commented out. They are sample code for
an A record that work just fine. But the attempt at Record_TXT fails.

I receive the following error when I attempt to perform the dig command:

-----------

$ python servlet.py
Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", line 2326, in datagramReceived
    self.controller.messageReceived(m, self, addr)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", line 192, in messageReceived
    self.handleQuery(message, proto, address)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", line 136, in handleQuery
    return self.resolver.query(query).addCallback(
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", line 73, in query
    return defer.maybeDeferred(method, query.name.name, timeout)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py", line 139, in maybeDeferred
    result = f(*args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", line 81, in lookupAddress
    return self._lookup(name, dns.IN, dns.A, timeout)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/resolve.py", line 79, in _lookup
    d = self.resolvers[0].query(q, timeout)
  File "servlet.py", line 16, in query
    payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", line 867, in __init__
    assert (payload is None) or isinstance(payload, UnknownRecord) or (payload.TYPE == type)
exceptions.AssertionError: 

-----------

I'm a little confused, because I followed the documentation as referenced here:
http://twistedmatrix.com/documents/current/api/twisted.names.dns.Record_TXT.html

Any ideas what this error means and why it is happening?

Thank you,
Nahraf


From twisted-python at 2xlp.com  Wed Jun 11 11:21:25 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 11 Jun 2014 13:21:25 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
Message-ID: <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>


On Jun 11, 2014, at 1:23 AM, Glyph wrote:

> You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.

thanks.

i think we might need to go the buildbot route.

we mainly use SqlAlchemy ; our twisted apps are under 5% of our code.

alchimia looks to be headed in the direction of what we always wanted ( to get sqlalchemy in twisted ), but not quite there yet.  i think it would be too confusing right now to have 2 separate sqlalchemy packages in-house.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140611/f4d43237/attachment.html>

From m-lists at the-moon.net  Wed Jun 11 11:35:45 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Wed, 11 Jun 2014 18:35:45 +0100
Subject: [Twisted-Python] Trouble with Record_TXT
In-Reply-To: <20140611171949.GA14007@janisary.us>
References: <20140611171949.GA14007@janisary.us>
Message-ID: <CABefbUpqaR4J6VyuVsrj_p=+wNV6MqZuTqqv8ai97_0svJP_jw@mail.gmail.com>

On 11 June 2014 18:19, Nahraf34 <Nahraf34 at janisary.us> wrote:
> I receive the following error when I attempt to perform the dig command:
>     assert (payload is None) or isinstance(payload, UnknownRecord) or (payload.TYPE == type)
> exceptions.AssertionError:

Hi,

I tried to catch you on #twisted earlier, but you'd gone. I think the
problem is that you need to pass a `type` argument to `RRHeader` which
matches the payload you supply. eg
 * https://gist.github.com/wallrj/84c3815a0be52831e077

It happens to just work with A records because that's the default type.

It would be nice if RRHeader would just examine the payload and
automatically set it's type. Perhaps we can add a new constructor
class method eg `RRHeader.fromPayload` which does this.

Hope that helps.

-RichardW,


From exarkun at twistedmatrix.com  Wed Jun 11 11:43:36 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 17:43:36 -0000
Subject: [Twisted-Python] Trouble with Record_TXT
In-Reply-To: <20140611171949.GA14007@janisary.us>
References: <20140611171949.GA14007@janisary.us>
Message-ID: <20140611174336.7208.774572395.divmod.xquotient.4@top>

On 05:19 pm, nahraf34 at janisary.us wrote:
>Hi all,
>
>I am attempting to write a small DNS server that returns custom TXT 
>record
>when I do:
>
>dig -t TXT -p 10053 @127.0.0.1 testdomain.com
>
>The code is as follows:
>
>----------
>
>#!/usr/bin/python
>
>from twisted.internet import reactor
>from twisted.names import client, dns, server
>
>class DynamicResolver(object):
>   def query(self, query, timeout=None):
>      name = query.name.name
>
>#     answer = dns.RRHeader(
>#        name = name,
>#        payload = dns.Record_A(address=b'1.2.3.4'))
>
>      answer = dns.RRHeader(
>         name = name,
>         payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
>
>      answers = [answer]
>      authority = []
>      additional = []
>
>      return answers, authority, additional
>
>def main():
>   factory = server.DNSServerFactory(
>      clients = [DynamicResolver()]
>   )
>
>   protocol = dns.DNSDatagramProtocol(controller=factory)
>
>   reactor.listenUDP(10053, protocol)
>   reactor.listenTCP(10053, factory)
>
>   reactor.run()
>
>if __name__ == '__main__':
>   main()
>
>----------
>
>You will notice three lines of code are commented out. They are sample 
>code for
>an A record that work just fine. But the attempt at Record_TXT fails.
>
>I receive the following error when I attempt to perform the dig 
>command:
>
>-----------
>
>$ python servlet.py
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", 
>line 2326, in datagramReceived
>    self.controller.messageReceived(m, self, addr)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", 
>line 192, in messageReceived
>    self.handleQuery(message, proto, address)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", 
>line 136, in handleQuery
>    return self.resolver.query(query).addCallback(
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", 
>line 73, in query
>    return defer.maybeDeferred(method, query.name.name, timeout)
>--- <exception caught here> ---
>  File "/usr/local/lib/python2.7/dist- 
>packages/twisted/internet/defer.py", line 139, in maybeDeferred
>    result = f(*args, **kw)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", 
>line 81, in lookupAddress
>    return self._lookup(name, dns.IN, dns.A, timeout)
>  File "/usr/local/lib/python2.7/dist- 
>packages/twisted/names/resolve.py", line 79, in _lookup
>    d = self.resolvers[0].query(q, timeout)
>  File "servlet.py", line 16, in query
>    payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", 
>line 867, in __init__
>    assert (payload is None) or isinstance(payload, UnknownRecord) or 
>(payload.TYPE == type)
>exceptions.AssertionError:
>
>-----------
>
>I'm a little confused, because I followed the documentation as 
>referenced here:
>http://twistedmatrix.com/documents/current/api/twisted.names.dns.Record_TXT.html
>
>Any ideas what this error means and why it is happening?

The problem here is how you're using the `RRHeader` initializer.  It 
(somewhat unhelpfully) accepts a separate `type` argument.  The value of 
the `type` argument and the type of the payload must match.  The default 
type is `A` (as in `Record_A`).

If you change your code to do something like 
`RRHeader(type=payload.type, payload=payload)` then I think you'll get 
the behavior you're after.

Jean-Paul


From exarkun at twistedmatrix.com  Wed Jun 11 11:50:14 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 17:50:14 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
 <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
Message-ID: <20140611175014.7208.1715013030.divmod.xquotient.16@top>

On 04:22 pm, max at riehl.io wrote:
>Thanks Jean-Paul. I have no idea how I managed to miss both tickets 
>(there is a
>duplicate) and would like to apologize.

No worries!  I'm glad you asked here instead of filing another 
duplicate. ;)  And a lot of people have trouble finding tickets in our 
tracker - there are a lot to sort through and trac's search 
functionality isn't very good.

For what it's worth, I search the tracker using Google and including 
this term:

    inurl:twistedmatrix.com/trac/ticket

It produces much better results than trac itself in almost all cases.
>The required change is really small, despite the age of the ticket. Is 
>there
>anything I can do to help fix it (e.G. contribute)?

Contribution would be most welcome!  It looks like no one has started 
work on the ticket at all, so it's yours for the taking. :)

Grab a checkout of Twisted (from subversion or git, as you prefer), 
write a failing unit test, then make it pass by changing the 
implementation. :)  Attach a patch to the ticket and add the "review" 
keyword.

Read more about the contribution process on the wiki:

    https://twistedmatrix.com/trac/wiki/ReviewProcess

Thanks!

Jean-Paul


From glyph at twistedmatrix.com  Wed Jun 11 23:13:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 11 Jun 2014 22:13:14 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
Message-ID: <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>


On Jun 11, 2014, at 10:21 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> 
> On Jun 11, 2014, at 1:23 AM, Glyph wrote:
> 
>> You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.
> 
> thanks.
> 
> i think we might need to go the buildbot route.
> 
> we mainly use SqlAlchemy ; our twisted apps are under 5% of our code.
> 
> alchimia looks to be headed in the direction of what we always wanted ( to get sqlalchemy in twisted ), but not quite there yet.  i think it would be too confusing right now to have 2 separate sqlalchemy packages in-house.

alchimia is not a re-implementation or a separate sqlalchemy package.  It *is* sqlalchemy; it's just a slight extension for integration sqlalchemy operations with the Twisted main loop.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140611/7f9dced5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 630 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140611/7f9dced5/attachment.pgp>

From tom.cocagne at gmail.com  Thu Jun 12 08:51:49 2014
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Thu, 12 Jun 2014 09:51:49 -0500
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>

Tobias,

May I suggest that you incorporate most of Sam's guest post at the top of
Crossbar's README file? I spent about ten minutes looking through the docs
on GitHub trying to answer the question "what is it and why should I
care?". I'd just about given up thinking it was marginally cool but
probably irrelevant to me when I took a chance on the blog post. The system
Sam describes is awesome, it can solve some of my major pain-points right
now, and it's something I can't wait to get started with. I'd have
completely missed out on Crossbar if it weren't for his post and I think
you'll have better luck recruiting users and developers if you include that
content right up front on your project's main page.

Tom


On Thu, Jun 5, 2014 at 6:00 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Hi Glyph,
>
>
>
> The process support in Twisted is just awesome! It is well designed and
> robust across platforms. Both are _big_ things we really depend on.
>
>
>
> And yes, the process management and monitoring in Crossbar is really
> dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub
> events fire on process lifecycle, and processes can be managed via WAMP
> calls:
>
>
>
> https://github.com/crossbario/crossbar/wiki/Management-API
>
>
>
> Want to debug an app component running a Worker? Start Manhole within the
> process while it's running via a single WAMP call.
>
>
>
> https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1
>
>
>
> Manhole. Another goodie of Twisted;) Love it.
>
>
>
> In fact, I would go as far as saying: without Twisted (and Python), it
> would have been simply impossible for us to get so far - with limited dev
> resources.
>
>
>
> Cheers,
>
> /Tobias
>
>
>
>
>
> *Von:* twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] *Im Auftrag von *Glyph
> *Gesendet:* Donnerstag, 5. Juni 2014 05:40
> *An:* Twisted general discussion
> *Betreff:* Re: [Twisted-Python] Announcing Crossbar.io
>
>
>
> Congrats on launching this, Tobias!
>
>
>
> On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de>
> wrote:
>
>
>
> Technically, Crossbar.io has a multi-process architecture with controller
> and worker processes,
> which lets use scale up on multi-core. We also prepared things to add
> scale-out on multi-node.
>
>
>
> Awesome, more people making use of the power of spawnProcess and
> event-driven process management is long overdue :-D.
>
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140612/13964b0f/attachment.html>

From tobias.oberstein at tavendo.de  Thu Jun 12 10:24:38 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jun 2014 09:24:38 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
 <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44478C3B62C@EXVMBX020-12.exch020.serverdata.net>

Hi Tom,

thanks alot for feedback! The intro and docs lack - incorporating the expl. from the post .. good idea (https://github.com/crossbario/crossbar/issues/70)

In the meantime, here is a different attempt at "explaining things" (the "why should I care" ..)

http://wamp.ws/why/

It's still more abstract than Sam's post .. but it provides a nice intro to WAMP.

And the Wiki is also improving (https://github.com/crossbario/crossbar/wiki#quick-start). Well. Docs are hard.

Cheers,
/Tobias



Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom Cocagne
Gesendet: Donnerstag, 12. Juni 2014 16:52
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Tobias,
May I suggest that you incorporate most of Sam's guest post at the top of Crossbar's README file? I spent about ten minutes looking through the docs on GitHub trying to answer the question "what is it and why should I care?". I'd just about given up thinking it was marginally cool but probably irrelevant to me when I took a chance on the blog post. The system Sam describes is awesome, it can solve some of my major pain-points right now, and it's something I can't wait to get started with. I'd have completely missed out on Crossbar if it weren't for his post and I think you'll have better luck recruiting users and developers if you include that content right up front on your project's main page.
Tom

On Thu, Jun 5, 2014 at 6:00 AM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:
Hi Glyph,

The process support in Twisted is just awesome! It is well designed and robust across platforms. Both are _big_ things we really depend on.

And yes, the process management and monitoring in Crossbar is really dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub events fire on process lifecycle, and processes can be managed via WAMP calls:

https://github.com/crossbario/crossbar/wiki/Management-API

Want to debug an app component running a Worker? Start Manhole within the process while it's running via a single WAMP call.

https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1

Manhole. Another goodie of Twisted;) Love it.

In fact, I would go as far as saying: without Twisted (and Python), it would have been simply impossible for us to get so far - with limited dev resources.

Cheers,
/Tobias


Von: twisted-python-bounces at twistedmatrix.com<mailto:twisted-python-bounces at twistedmatrix.com> [mailto:twisted-python-bounces at twistedmatrix.com<mailto:twisted-python-bounces at twistedmatrix.com>] Im Auftrag von Glyph
Gesendet: Donnerstag, 5. Juni 2014 05:40
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:

Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140612/f06a383e/attachment-0001.html>

From twisted-python at 2xlp.com  Thu Jun 12 12:35:11 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 12 Jun 2014 14:35:11 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
 <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
Message-ID: <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>


On Jun 12, 2014, at 1:13 AM, Glyph wrote:

> alchimia is not a re-implementation or a separate sqlalchemy package.  It *is* sqlalchemy; it's just a slight extension for integration sqlalchemy operations with the Twisted main loop.

Yeah, I get that.  I'm really excited for it.

I use the declarative method (orm) for setting up the structure -- even when not using the ORM / Session.  It's just easier to write classes and maintain a single package for ORM & non-orm usage by using the ORM to set up the metadata.

there's an unaddressed ticket about that in the alchemia package.  

i also noticed the line "Some methods simply haven't been implemented yet. If you file a bug, we'll implement them! "

looking through the source and docs, there seemed to be no savepoint/begin_nested support yet.  

this looks like the package I want in the future -- i'm just uneasy about what might/might not be supported, on top of the migration work.    

the buildbot option looks like a better alternative for now -- we don't incur much more technical debt, and free up more time for a proper solution later.

From glyph at twistedmatrix.com  Fri Jun 13 01:27:23 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Jun 2014 00:27:23 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
 <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
 <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>
Message-ID: <D0CF10DF-BEAC-4BEE-B297-A18E832535D0@twistedmatrix.com>


On Jun 12, 2014, at 11:35 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> this looks like the package I want in the future -- i'm just uneasy about what might/might not be supported, on top of the migration work.    

This is understandable; alchimia is definitely a bit raw.  I'd just encourage you to actually file those bugs and participate in its community.  Unless some interested parties like you actually start doing that, it will just languish in this state forever :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140613/7ddb3805/attachment.html>

From pratik.prajapati12 at gmail.com  Sat Jun 14 06:48:36 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sat, 14 Jun 2014 18:18:36 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a machine
Message-ID: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>

Hi,

I am implementing a code through which i have to get devices connected to
all network interfaces on my machine and list them .

For this, i am first getting the ip of all network interfaces and then
sending m-search command on them.

After 2.5 seconds port is stopped to listen.

But it is giving me some assertion error. (I am connected to 2 interfaces
-ethernet and wifi)

`Code:`

    class Base(DatagramProtocol):
        """ Class to send M-SEARCH message to devices in network and
receive datagram
            packets from them
        """
        SSDP_ADDR = "239.255.255.250"
        SSDP_PORT = 1900
        MS = "M-SEARCH * HTTP/1.1\r\nHOST: {}:{}\r\nMAN:
'ssdp:discover'\r\nMX: 2\r\nST: ssdp:all\r\n\r\n".format(SSDP_ADDR,
SSDP_PORT)

    def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        ports = []
        for address in self.addresses:
            ports.append(reactor.listenUDP(0, self, interface=address))

        for port in ports:
            for num in range(4):
                port.write(Base.MS, (Base.SSDP_ADDR,Base.SSDP_PORT))
            reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait
margin


    def stopMsearch(self, port):
        """ Stop listening on port
        """
        port.stopListening()


`Error:`
    Traceback (most recent call last):
  File "work\find_devices.py", line 56, in sendMsearch
 ports.append(reactor.listenUDP(0, self, interface=address))
  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", line
374, in listenUDP
 p.startListening()
  File "C:\Python27\lib\site-packages\twisted\internet\udp.py", line 172,
in startListening
 self._connectToProtocol()
  File "C:\Python27\lib\site-packages\twisted\internet\udp.py", line 210,
in _connectToProtocol
 self.protocol.makeConnection(self)
  File "C:\Python27\lib\site-packages\twisted\internet\protocol.py", line
709, in makeConnection
 assert self.transport == None
AssertionError



This code worked:

def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        address = socket.gethostbyname(socket.gethostbyname())
        port = reactor.listenUDP(0, self, interface=address)
        for num in range(4):
                port.write(Base.MS, (Base.SSDP_ADDR,Base.SSDP_PORT))
        reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait margin




Please tell what's wrong in code mentioned in the start of this mail and
how to correct this.

I have also posted this code on stackoverflow , but didn't get any response
http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140614/9f337317/attachment.html>

From exarkun at twistedmatrix.com  Sat Jun 14 08:27:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Jun 2014 14:27:11 -0000
Subject: [Twisted-Python] send-msearch on all network interfaces of a
 machine
In-Reply-To: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
Message-ID: <20140614142711.6847.1772808746.divmod.xquotient.2@top>

On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>
>[snip]
>
>Please tell what's wrong in code mentioned in the start of this mail 
>and
>how to correct this.
>
>I have also posted this code on stackoverflow , but didn't get any 
>response
>http://stackoverflow.com/questions/24178580/send-m-search-packets-on- 
>all-network-interfaces-using-twisted-module-in-python

I posted an answer on stackoverflow.  I previously hadn't seen the 
question because it didn't have the `twisted` tag (I edited the question 
as well to replace the `twisted.internet` tag with the `twisted` tag). 
I suggest you use `twisted` for stackoverflow questions about Twisted in 
the future. :)

Jean-Paul


From pratik.prajapati12 at gmail.com  Sat Jun 14 12:23:37 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sat, 14 Jun 2014 23:53:37 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <20140614142711.6847.1772808746.divmod.xquotient.2@top>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
Message-ID: <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>

Thanks for the answer


On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:

> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>
>>
>> [snip]
>>
>>
>> Please tell what's wrong in code mentioned in the start of this mail and
>> how to correct this.
>>
>> I have also posted this code on stackoverflow , but didn't get any
>> response
>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>> all-network-interfaces-using-twisted-module-in-python
>>
>
> I posted an answer on stackoverflow.  I previously hadn't seen the
> question because it didn't have the `twisted` tag (I edited the question as
> well to replace the `twisted.internet` tag with the `twisted` tag). I
> suggest you use `twisted` for stackoverflow questions about Twisted in the
> future. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140614/633e1746/attachment.html>

From pratik.prajapati12 at gmail.com  Sat Jun 14 22:00:56 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sun, 15 Jun 2014 09:30:56 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
Message-ID: <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>

Hi Jean-Paul,

I have added a comment on your answer on stackoverflow, please respond
there.


On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Thanks for the answer
>
>
> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>
>>>
>>> [snip]
>>>
>>>
>>> Please tell what's wrong in code mentioned in the start of this mail and
>>> how to correct this.
>>>
>>> I have also posted this code on stackoverflow , but didn't get any
>>> response
>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>> all-network-interfaces-using-twisted-module-in-python
>>>
>>
>> I posted an answer on stackoverflow.  I previously hadn't seen the
>> question because it didn't have the `twisted` tag (I edited the question as
>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>> future. :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140615/192101f6/attachment.html>

From trac at twistedmatrix.com  Sun Jun 15 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Jun 2014 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1402812315.6.6081696545311941343@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140615/b5ced615/attachment.html>

From jim at rainville.net  Sun Jun 15 09:23:26 2014
From: jim at rainville.net (Jim Rainville)
Date: Sun, 15 Jun 2014 08:23:26 -0700
Subject: [Twisted-Python] twistd caching method calls?
Message-ID: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>

Hi - 

I have a very simple twisted service that reads a temperature sensor. A client can ask for the current temperature via JSON and as a result the service will read the temperature sensor and respond with the current temp. This works great if I run it as a python module from the command line but if I run it as a service with twistd it seems to read the temp on startup then the temp seems to be cached as it never changes. I have print calls in the getTemp method right before it calls into the hardware library, they are getting called in both cases - but the return from the call never changes in the twistd case. Any ideas?

Also, I have another service (not twisted) that runs in the background that periodically reads the temp and responds to temperature changes. This is working fine so I?m pretty sure the problem is isolated to twistd.

Thanks. 
Jim



From exarkun at twistedmatrix.com  Sun Jun 15 10:14:45 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jun 2014 16:14:45 -0000
Subject: [Twisted-Python] twistd caching method calls?
In-Reply-To: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>
References: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>
Message-ID: <20140615161445.6847.77016916.divmod.xquotient.6@top>

On 03:23 pm, jim at rainville.net wrote:
>Hi -
>
>I have a very simple twisted service that reads a temperature sensor. A 
>client can ask for the current temperature via JSON and as a result the 
>service will read the temperature sensor and respond with the current 
>temp. This works great if I run it as a python module from the command 
>line but if I run it as a service with twistd it seems to read the temp 
>on startup then the temp seems to be cached as it never changes. I have 
>print calls in the getTemp method right before it calls into the 
>hardware library, they are getting called in both cases - but the 
>return from the call never changes in the twistd case. Any ideas?
>
>Also, I have another service (not twisted) that runs in the background 
>that periodically reads the temp and responds to temperature changes. 
>This is working fine so I?m pretty sure the problem is isolated to 
>twistd.

There's no intentional caching of this sort added automatically by 
`twistd` or by any other part of Twisted.  Can you share your code? 
Someone might spot what's going on.

As an aside, sounds like a good project - it sounds similar to something 
I've been working on.  Can you share your code? ;)

Jean-Paul


From meejah at meejah.ca  Sun Jun 15 10:19:14 2014
From: meejah at meejah.ca (meejah)
Date: Sun, 15 Jun 2014 20:19:14 +0400
Subject: [Twisted-Python] ANN: txtorcon 0.10.0
Message-ID: <86fvj6ywl9.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm excited to announce txtorcon 0.10.0 which adds support for
Twisted's endpoint strings.

This means that ANY Twisted program that uses endpoints can accept
"onion:" strings to bring up a hidden services easily (by launching a
new Tor instance). Typically, no code changes to the application
should be needed (just "pip install txtorcon").

"twistd" supports endpoints, so for example to serve some Web content
from ~/public_html as a hidden-serivce, we can do this (with txtorcon
installed):

   twistd web --port onion:80 --path ~/public_html

Some examples of other valid "onion:" endpoint strings:

   onion:80:hiddenServiceDir=/dev/shm/hidsrv
   onion:80:controlPort=9050:hiddenServiceDir=/srv/hidden

The first allows specifying existing hidden service keys and the
second says to connect to an already-running Tor instance.

Thanks to David Stainton (dawuud) for the initial pull-request (and
continued collaboration) that made this happen. There is a complete
demonstration of the power of this Fully Operational endpoint-station
here:

   https://txtorcon.readthedocs.org/en/latest/howtos.html#endpoints-enable-tor-with-any-twisted-service

You can download the release from PyPI or GitHub (or of course use
"pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.10.0
   https://github.com/meejah/txtorcon/releases/tag/v0.10.0

sha256sum reports:

   910ff3216035de0a779cfc167c0545266ff1f26687b163fc4655f298aca52d74  txtorcon-0.10.0-py2-none-any.whl
   c93f3d0f21d53c6b4c1521fc8d9dc2c9aff4a9f60497becea207d1738fa78279  txtorcon-0.10.0.tar.gz

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQEcBAEBAgAGBQJTnTM5AAoJEMJgKAMSgGmnB5EIAIJACHhd7PEWYfCZmB8lL1pr
J4rrhUuXD1iI7zJJL/rmS/SZLL+34JoKke6iQsBRGYzU0GRK2JQkFAeMq++AMdMu
QvoTg745OhnMSbZyCyS6buN/NhAVcmD3GYI9h8TK60jfUPEFn7+sDstMG4OePdgq
X0QQHBuJq9XtDwEmRWFHq2Aht//7J2DUliPPjtwT3C4FhPT5pXxasvfQA4jOYxsO
jTja6UE4/4TnonV5gB/chijp60cKvVxFQi86mKuNnVaKTZu+QCZFJtXkr/DbRSxv
CJ+z7jJ9s8xhfQ5Nkv9pkVAreH6w9bemc/iijKlZmQGYvLBTsvISPATyWGtn1f4=
=wIVZ
-----END PGP SIGNATURE-----


From exarkun at twistedmatrix.com  Sun Jun 15 19:00:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Jun 2014 01:00:11 -0000
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
Message-ID: <20140616010011.6847.947966980.divmod.xquotient.21@top>

On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>Hello,
>
>I was just wondering what the current status of the effort to upgrade 
>trac on twistedmatrix.com is.

Hello again,

Lacking any updates on this, I make some adjustments today. 
Authenticated users no longer automatically have permission to create or 
modify tickets.  I imagine the next step in this direction would be to 
communicate this information to users automatically and give them 
instructions about how to be granted these permissions.  If anyone has 
any suggestions about how this could be done, they would be quite 
welcome.

And if anyone wants to continue the upgrade effort then of course that 
would be appreciated as well.

Thanks,
Jean-Paul


From adi at roiban.ro  Mon Jun 16 14:34:30 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Jun 2014 23:34:30 +0300
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140616010011.6847.947966980.divmod.xquotient.21@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <20140616010011.6847.947966980.divmod.xquotient.21@top>
Message-ID: <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>

On 16 June 2014 04:00,  <exarkun at twistedmatrix.com> wrote:
> On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>>
>> Hello,
>>
>>
>> I was just wondering what the current status of the effort to upgrade trac
>> on twistedmatrix.com is.
>
>
> Hello again,
>
> Lacking any updates on this, I make some adjustments today. Authenticated
> users no longer automatically have permission to create or modify tickets.
> I imagine the next step in this direction would be to communicate this
> information to users automatically and give them instructions about how to
> be granted these permissions.  If anyone has any suggestions about how this
> could be done, they would be quite welcome.
>
> And if anyone wants to continue the upgrade effort then of course that would
> be appreciated as well.
>
> Thanks,
> Jean-Paul
>
Does the Trac migration has any coordinator?
What needs to be done?
I added Misu to CC. He is the sysadmin of the project on which I work
and he is willing to help.

-- 
Adi Roiban


From glyph at twistedmatrix.com  Tue Jun 17 16:25:57 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2014 15:25:57 -0700
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <20140616010011.6847.947966980.divmod.xquotient.21@top>
 <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>
Message-ID: <12CDDBC4-C6C0-4A4A-ADFA-BE5C5F2FAE8A@twistedmatrix.com>


On Jun 16, 2014, at 1:34 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 16 June 2014 04:00,  <exarkun at twistedmatrix.com> wrote:
>> On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>>> 
>>> Hello,
>>> 
>>> 
>>> I was just wondering what the current status of the effort to upgrade trac
>>> on twistedmatrix.com is.
>> 
>> 
>> Hello again,
>> 
>> Lacking any updates on this, I make some adjustments today. Authenticated
>> users no longer automatically have permission to create or modify tickets.
>> I imagine the next step in this direction would be to communicate this
>> information to users automatically and give them instructions about how to
>> be granted these permissions.  If anyone has any suggestions about how this
>> could be done, they would be quite welcome.
>> 
>> And if anyone wants to continue the upgrade effort then of course that would
>> be appreciated as well.
>> 
>> Thanks,
>> Jean-Paul
>> 
> Does the Trac migration has any coordinator?
> What needs to be done?
> I added Misu to CC. He is the sysadmin of the project on which I work
> and he is willing to help.

Hi Adi, Mi?u,

Nobody's really in charge of this per se, but David Reid did some work on it earlier.

He and I will be trying to do some work on it this Thursday to move it forward and particularly to put more information on the relevant PR <https://github.com/twisted-infra/trac-config/pull/10> to try to make it possible for folks like yourself to contribute.

If you'd like to be around in #twisted-admin on Freenode when we're doing that (starting approximately 10AM PST) we'll try to be there.

Thanks for your interest,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140617/31fbe20b/attachment.html>

From twisted-python at 2xlp.com  Wed Jun 18 16:59:29 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 18 Jun 2014 18:59:29 -0400
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
Message-ID: <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>


On May 29, 2014, at 9:13 AM, Hynek Schlawack wrote:

> So what *is* the status?  The current state is really hardly bearable; the spam is taking completely over. :(  Wasn?t there a successful dry run at the PyCon sprints?

I recently had a similar problem.  I didn't realize a "one click install" on my shared provider for a private SVN repo created a public trac instance.  there were nearly 1MM spam tickets in a 700MB sqlite database

I ended up killing all tickets; but was able to use a raw sqlite3 connection on the db file to get in there and analyze the tickets ( and delete them )

Trac 1.0 has a spam filter -- http://trac.edgewall.org/wiki/SpamFilter

Once upon a time, there was a mod_security plugin called ScallyWhack that was dedicated to Trac spam.  It was officially supported by mod_security and still has a reserved rules range. unfortunately, it's disappeared off the net.

I had to take my trac instance offline while working.  my install was "known" to a few dozen botnets, and they kept hitting it.  everything would lock up.  if you can find any mod_security integration, I would strongly suggest using it -- because you can have the rules trigger an integration with fail_2_ban and just keep ip addresses/ranges from ever touching trac.






From exarkun at twistedmatrix.com  Wed Jun 18 18:43:45 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 00:43:45 -0000
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
Message-ID: <20140619004345.6847.655180343.divmod.xquotient.29@top>

On 18 Jun, 10:59 pm, twisted-python at 2xlp.com wrote:
>
>On May 29, 2014, at 9:13 AM, Hynek Schlawack wrote:
>>So what *is* the status?  The current state is really hardly bearable; 
>>the spam is taking completely over. :(  Wasn?t there a successful dry 
>>run at the PyCon sprints?
>
>I recently had a similar problem.  I didn't realize a "one click 
>install" on my shared provider for a private SVN repo created a public 
>trac instance.  there were nearly 1MM spam tickets in a 700MB sqlite 
>database
>
>I ended up killing all tickets; but was able to use a raw sqlite3 
>connection on the db file to get in there and analyze the tickets ( and 
>delete them )
>
>Trac 1.0 has a spam filter -- http://trac.edgewall.org/wiki/SpamFilter
>
>Once upon a time, there was a mod_security plugin called ScallyWhack 
>that was dedicated to Trac spam.  It was officially supported by 
>mod_security and still has a reserved rules range. unfortunately, it's 
>disappeared off the net.
>
>I had to take my trac instance offline while working.  my install was 
>"known" to a few dozen botnets, and they kept hitting it.  everything 
>would lock up.  if you can find any mod_security integration, I would 
>strongly suggest using it -- because you can have the rules trigger an 
>integration with fail_2_ban and just keep ip addresses/ranges from ever 
>touching trac.

This is a nice thought but I think it's entirely misguided.

Overcoming simplistic, automated obstacles is what spammers have been 
learning how to do extremely well for several decades now.  If you 
choose to participate in this arms race with them, you can win by put in 
slightly more effort than them - from now until forever.

Considering the Twisted project apparently lacks even the ability to put 
a slight bit of effort even once (at least, not without gathering its 
strength to do so for two or three months first), this doesn't strike me 
as likely to happen.

Also, Apache isn't used anywhere on twistedmatrix.com so it would be 
rather difficult to deploy anything based on mod_security anyway.

Jean-Paul


From exarkun at twistedmatrix.com  Thu Jun 19 05:38:09 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 11:38:09 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <53A0652F.1030804@riehl.io>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
 <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
 <20140611175014.7208.1715013030.divmod.xquotient.16@top>
 <53A0652F.1030804@riehl.io>
Message-ID: <20140619113809.6847.263270969.divmod.xquotient.31@top>

On 17 Jun, 03:56 pm, max at riehl.io wrote:
>Hi,
>
>I finally found the time to do some work on the ticket but have been 
>unable to find out how to attach a patch so far.
>I caught some discussion about a trac change that requires new users to 
>do "something" before they are able to make changes to tickets.
>
>Maybe you can brief me about the required steps? I'm also willing to 
>wait if some documentation is on the way.
>
>
>I also noted a few problems while trying to contribute (wrong 
>instructions, hanging tests, etc) and would be happy to help make this 
>better, but I'm unsure where to start.

Hi Max,

Please keep discussion on the mailing list.  I didn't even see your 
email until this morning.

The required steps are simple: contact a trac admin (mail the list or 
join #twisted-dev on freenode), convince them you aren't a spammer, and 
tell them your trac username.

I think you only need to complete the third step at this point.

I'm waiting for someone to volunteer to update some trac pages to 
include this information.  I looked at some templates and decided I 
didn't have enough time to figure out how they work.

Jean-Paul


From glyph at twistedmatrix.com  Thu Jun 19 11:38:05 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2014 10:38:05 -0700
Subject: [Twisted-Python] Trac downtime
Message-ID: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>

Hello Twisted users,

David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.

While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).

-glyph



From twisted-python at 2xlp.com  Thu Jun 19 13:08:35 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 19 Jun 2014 15:08:35 -0400
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140619004345.6847.655180343.divmod.xquotient.29@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
 <20140619004345.6847.655180343.divmod.xquotient.29@top>
Message-ID: <A8D62A83-D06F-4BDD-A92F-B8FECE7C3ECA@2xlp.com>


On Jun 18, 2014, at 8:43 PM, exarkun at twistedmatrix.com wrote:

> This is a nice thought but I think it's entirely misguided.
> 
> Overcoming simplistic, automated obstacles is what spammers have been learning how to do extremely well for several decades now.  If you choose to participate in this arms race with them, you can win by put in slightly more effort than them - from now until forever.

I generally agree.  Spam will always get through.  But if you put a tiny amount of effort in, you can effectively block 99% of spam; and make working with that 1% much easier.  There are a lot of smart spammers; there are more stupid and lazy ones.

Spammers are generally smart at innovating over long periods of time, but their short-term attacks are pretty bad.  If something gets noticed as a possible spam target by a network of compromised machines, the attacks are relentless.  One particular IP block hits a particular trac install of mine  every 5 seconds to make new tickets and check old ones -- even weeks after I configured their entire network to 403.    If you keep some rules updated, and can integrate fail_2_ban, that entire process is automated. 

> Also, Apache isn't used anywhere on twistedmatrix.com so it would be rather difficult to deploy anything based on mod_security anyway.

I don't use Apache either.  I use nginx as a frontend gateway to pass back to Twisted / Pyramid / etc.  There's been mod_security support for nginx ( java and iis too ) for a few years.

But trac is going through TwistedWeb/11.1.0, so that point is moot.

But if you ever run a project that uses nginx on the front, you can use mod_security on it.  The install is a bit weird, but it works.  

... 

In any event, turning off trac and using raw sql queries was the best route to managing the trac database.

If you pay attention to your server logs to see which ip addresses hit the "create" and "view" tickets a lot, you'll probably note a few IP blocks that have seem to have a "pair" of spiders working together on different machines.  one creates spam, the other harvests tickets for email addresses.  

there were a handful of servers in the 96.47.2xx.x space responsible for most of my spam.  i'd say probably 80%.  

The specific ips all ranked high on the Honeypot blacklist with hundreds of thousands of reports -- http://www.projecthoneypot.org/list_of_ips.php










-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140619/5d0d258e/attachment.html>

From exarkun at twistedmatrix.com  Thu Jun 19 17:31:21 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 23:31:21 -0000
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <20140619233121.6847.905913139.divmod.xquotient.42@top>

On 05:38 pm, glyph at twistedmatrix.com wrote:
>Hello Twisted users,
>
>David Reid and I are attempting to upgrade our production Trac instance 
>to version 1.0.1 today, in order to address the spam and many other 
>issues.
>
>While we will attempt to minimize the downtime, knowing Trac, you 
>should expect at least 6 hours of downtime beginning as soon as 20 
>minutes (18:00 UTC).

Looks like some cool stuff happened.  Thanks!

I'm not sure if you're done or not.  In case not, here are some things I 
noticed:

The front page says "wiki:WikiStart" at the top of the wiki content.
Other pages similarly have their own name at the top as well.

The tabs on "Code Examples" on the front page don't work (clicking them 
doesn't switch to a different example)

The "Owner" dropdown list on the ticket page is quite short.  This is 
rather nice, but it is maybe slightly too short. :)

The IDs for entries in the various RSS feeds have changed (so the last N 
entries appear as duplicates).

Again, thanks!

Jean-Paul


From lists at collab.nl  Thu Jun 19 18:04:34 2014
From: lists at collab.nl (Thijs Triemstra)
Date: Fri, 20 Jun 2014 02:04:34 +0200
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <53A37A92.20607@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Can you install pytz on the trac instance as well, it improves the
options on the https://twistedmatrix.com/trac/prefs/datetime page.

Cheers,

Thijs

On 19-06-14 19:38, Glyph Lefkowitz wrote:
> Hello Twisted users,
> 
> David Reid and I are attempting to upgrade our production Trac
> instance to version 1.0.1 today, in order to address the spam and
> many other issues.
> 
> While we will attempt to minimize the downtime, knowing Trac, you
> should expect at least 6 hours of downtime beginning as soon as 20
> minutes (18:00 UTC).
> 
> -glyph
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)

iEYEARECAAYFAlOjeo0ACgkQBRbMGagbo3n0AACfYqoD+BRkbCEVVw0XJ/iUtMdK
AeQAn2f0XyM8EV4RAXmr7SKMqVm94IZr
=4Np4
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Thu Jun 19 20:02:41 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 19:02:41 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <20140619233121.6847.905913139.divmod.xquotient.42@top>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <20140619233121.6847.905913139.divmod.xquotient.42@top>
Message-ID: <08176CC9-F9B0-4766-89C8-6F061B20081F@twistedmatrix.com>

On Jun 19, 2014, at 4:31 PM, exarkun at twistedmatrix.com wrote:

> On 05:38 pm, glyph at twistedmatrix.com wrote:
>> Hello Twisted users,
>> 
>> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
>> 
>> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> Looks like some cool stuff happened.  Thanks!

You're welcome.  This was really like 99% David, I just helped push things towards a conclusion ;).

> I'm not sure if you're done or not.  In case not, here are some things I noticed:

Sorry I didn't send out an announcement when we were finished.  It was all pretty exhausting :-).

> The front page says "wiki:WikiStart" at the top of the wiki content.
> Other pages similarly have their own name at the top as well.

This is a new feature of Trac 1.0, a breadcrumbs bar, which we don't have nice styling for yet.  We should probably add some CSS for it.  (Notice "wiki" is a link to WikiStart from all pages.)

> The tabs on "Code Examples" on the front page don't work (clicking them doesn't switch to a different example)

I imagine you have an adblocker or a tracking-blocker or something like that.  The tabs actually work fine, unless you block google analytics, which causes a JavaScript which I believe halts further script execution on the page.  We should add a try/catch around the thing that loads the analytics thing so it doesn't disrupt further script execution.

> The "Owner" dropdown list on the ticket page is quite short.  This is rather nice, but it is maybe slightly too short. :)

Augh.  That definitely looks too short.  I have no idea why it looks that way.  I don't think it looked that way when I examined dreid's test instance.  Any ideas?

> The IDs for entries in the various RSS feeds have changed (so the last N entries appear as duplicates).

I don't think there's anything we can do about that.

> Again, thanks!

Thanks for looking into it.  Now that we're over this huge hurdle, hopefully we can address issues like these more quickly now.

One thing you didn't notice is the weird description on the styling in the "Description" box in the ticket-edit area, we should fix that as well.

-glyph



From glyph at twistedmatrix.com  Thu Jun 19 21:34:52 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 20:34:52 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <53A37A92.20607@collab.nl>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <53A37A92.20607@collab.nl>
Message-ID: <5AE2BDC8-02B6-4716-B330-8CED75603624@twistedmatrix.com>

On Jun 19, 2014, at 5:04 PM, Thijs Triemstra <lists at collab.nl> wrote:

> Can you install pytz on the trac instance as well, it improves the
> options on the https://twistedmatrix.com/trac/prefs/datetime page.

Would you mind submitting this as a pull request to <https://github.com/twisted-infra/trac-config>?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140619/0c567025/attachment.html>

From glyph at twistedmatrix.com  Thu Jun 19 21:37:13 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 20:37:13 -0700
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140530162857.GA35270@darkbeer.org>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <20140529135529.GA23375@danio.home>
 <CAJtE5vRmskDrkx1pYVWj7+9mkuy_bZO6mjR0_fz4Dv9y4Te7dA@mail.gmail.com>
 <1A31C170-43AD-4A3F-B1BF-9AC4E882093B@twistedmatrix.com>
 <20140530162857.GA35270@darkbeer.org>
Message-ID: <56151815-0473-4D8C-AF04-FE1BA3034EE8@twistedmatrix.com>


On May 30, 2014, at 9:28 AM, Amar Takhar <verm at darkbeer.org> wrote:

> On 2014-05-29 09:56 -0700, Glyph wrote:
>> 
>> Thanks for this input, Dustin.  It is actually _super_ useful, for me at least,
>> to learn that there is in fact a light at the end of this tunnel :).
> 
> I'm happy to give any help that's required if you need a hand upgrading trac and 
> migrating to git.  I've done it quite a few times.
> 
> Our spam problem is now completely under control thankfully.  We have some 
> custom plugins to help with this.

Hi Amar,

We've upgraded Trac, finally, and now that that blocker is resolved, I think it might be time to start talking about migrating to Git.

Would you mind joining us in #twisted-admin on Freenode to discuss this?  The relevant folks tend to be around there during the intersection between EST and PST work hours :).

-glyph



From hawkowl at atleastfornow.net  Fri Jun 20 03:40:45 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 20 Jun 2014 17:40:45 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>

Hi,

The web server version string says Twisted 11.1 ? maybe we should upgrade that too? :)

-hawkowl

On 20 Jun 2014, at 1:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Hello Twisted users,
> 
> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
> 
> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140620/8cdd8952/attachment-0001.pgp>

From mark at catseye.org  Fri Jun 20 16:22:57 2014
From: mark at catseye.org (Mark Montague)
Date: Fri, 20 Jun 2014 18:22:57 -0400
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
Message-ID: <53A4B441.1040201@catseye.org>

We're writing a Twisted 14.0.0 application (on Python 2.7.7, Mac OS 
10.9.3) that uses Conch as an SSH client; this is working fine. However, 
we have the requirement that in an advanced mode of operation for power 
users that the application take advantage of OpenSSH connection 
multiplexing over an already-established-by-the-user OpenSSH 
ControlMaster session (via an OpenSSH ControlPath socket) instead of 
using Conch.

OpenSSH requires its new session command and forwarded file descriptors 
to be sent over the socket in a very particular way: the command must be 
sent first, followed by message with a '\0' byte with each forwarded 
file descriptor.  OpenSSH ignores the '\0' for each file descriptor, 
extracting the file descriptors themselves from the message's ancillary 
data.

The following will not work because none of the calls to write() send 
their data until control is returned to the reactor, while 
sendFileDescriptor() queues up the descriptors such that they get sent 
them with the very next data that is sent -- which wind up being the 
first three bytes of the command rather than the three '\0' bytes.

class OpenSSHMuxProtocol( protocol.Protocol ):
     # built via reactor.connectUNIX()
     def sendCommand( self, command ):
         # Does not work:
         self.transport.write( command )
         self.transport.sendFileDescriptor( sys.stdin.fileno() )
         self.transport.write( '\0' ) # payload for the stdin file descriptor
         self.transport.sendFileDescriptor( sys.stdout.fileno() )
         self.transport.write( '\0' ) # payload for the stdout file descriptor
         self.transport.sendFileDescriptor( sys.stdout.fileno() )
         self.transport.write( '\0' ) # payload for the stderr file descriptor
         # ^^^ Does not work


But this next solution /does/ work:

from socket import SOL_SOCKET
from twisted.python.sendmsg import SCM_RIGHTS, send1msg

class OpenSSHMuxProtocol( protocol.Protocol ):
     # built via reactor.connectUNIX()
     def sendCommand( self, command ):
         self.transport.writeSomeData( command ) # data is sent over the socket immediately
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdin.fileno() ) ) ] )
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdout.fileno() ) ) ] )
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stderr.fileno() ) ) ] )


My questions are:

Is it bad to bypass the reactor and send data directly/immediately this 
way using writeSomeData() and send1msg()?  Note that sendCommand() 
actually gets called in response to a OpenSSHMuxProtocol.dataReceived() 
event.  If bypassing the reactor this way is bad, how bad is it and what 
are the consequences or effects?

Is there a better way to get a working solution?  I think I'd need some 
way to guarantee that the write of the command was actually sent to the 
OpenSSH server before the file descriptors are forwarded -- for example, 
if a Deferred was used whose first callback wrote the command and whose 
second callback forwarded the descriptors, would a call to the reactor 
to actually sent the command be guaranteed between the two callbacks?

Any information and/or advice is appreciated!

-- 
   Mark Montague
   mark at catseye.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140620/e653aea3/attachment.html>

From glyph at twistedmatrix.com  Fri Jun 20 18:43:22 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Jun 2014 17:43:22 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
Message-ID: <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>

On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi,
> 
> The web server version string says Twisted 11.1 ? maybe we should upgrade that too? :)


Sounds like somebody should send a PR to Braid? :-)

-glyph

From hawkowl at atleastfornow.net  Fri Jun 20 23:10:21 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 21 Jun 2014 13:10:21 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
Message-ID: <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>

I was going to do that, but I do not understand where it is in braid :(

- hawkowl

On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:

> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> Hi,
>> 
>> The web server version string says Twisted 11.1 ? maybe we should upgrade that too? :)
> 
> 
> Sounds like somebody should send a PR to Braid? :-)
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140621/7dd15033/attachment.pgp>

From dstainton415 at gmail.com  Sat Jun 21 08:12:17 2014
From: dstainton415 at gmail.com (David Stainton)
Date: Sat, 21 Jun 2014 14:12:17 +0000
Subject: [Twisted-Python] twistedcat - twisted endpoint concatenator
Message-ID: <20140621141217.GA697@googlemail.com>



Greetings,

I was inspired by the "socat" CLI utility to write something similar called twistedcat.

https://github.com/david415/twistedcat
https://github.com/david415/twistedcat/blob/master/twistedcat/twistedcat.py

Obviously it should have the "cat" word in the name... so what do you suggest?
What do people think of this?
Do you have ascii art drawings of cats can use or suggestions for me to improve the code quality?
Right now I'm cleaning the code out of main() and creating an EndpointCombiner class
to encapsulate the endpoint pipe logic (c2c, s2s, c2s).

The reason I am very interested in improving the code to assist in pipe-lining endpoints is because it can be used by more than just this commandline tool. Any Twisted app wishing to create custom protocols can do so by pipe-lining endpoints. I think the API for this could be very easy to use.

socat has an enormous feature set that I am not sufficiently motivated to duplicate here.

http://www.dest-unreach.org/socat/doc/socat.html#ADDRESS_TYPES

It was really interesting for me to read about these socat address types... there are many of them.
Twisted has some of the same types... and in some cases they are even spelled the same.
I am interested in implementing some of these socat address types in Twisted, including a TUN endpoint and endpoint parser plugin.
I've played around with the new twisted pair TUN stuff... but I was using producers and consumers to make a VPN...
and as it turns out this task should be greatly simplified by using pipelined Twisted endpoints.

I've also been toying with the idea of writing an obfsproxy Twisted endpoint which would work similar to the txtorcon endpoint in that it would launch an external command... and then perform a tcp connect. obfsproxy can be launched in external mode and has several obfuscation protocols to choose from... some of which are very sophisticated. If someone actually had a good use case for obfuscating pipelined endpoint protocols then I would love to hear about it (besides the obvious VPN use-case)!

https://www.torproject.org/projects/obfsproxy

Twisted endpoint descriptor strings are just like socat address specifications... except that in socat the client and server endpoint types are in the same name space. Therefore twistedcat needs to know if the endpoint string is a server or client endpoint. It defaults to client unless -s or --server specifies it as a server endpoint string. Or do you dare suggest that it would be better to try clientFromString and then if that fails try serverFromString?

We've already created a Tor client endpoint/parser plugin (https://github.com/david415/txsocksx)
and a Tor Hidden Service endpoint/parser plugin (https://github.com/meejah/txtorcon)...
Obviously twistedcat doesn't know anything about Tor... because it's completely endpoint agnostic.

Here's my silly twistedcat Tor experimentations:

$ ./twistedcat.py -s stdio: -s onion:80:hiddenServiceDir=/home/human/hs

After running this one liner... I checked the contents of /home/human/hs/
and found my new onion address in the "hostname" file.
I used my Tor browser to send a request... and here we see twistedcat printed it to stdout via the stdio endpoint:

GET / HTTP/1.1
Host: ibce3yvjdb3mzcrq.onion
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive


And then there is this:

$ ./twistedcat.py tor:timaq4ygg2iegci7.onion:80 -s onion:80:hiddenServiceDir=/home/human/hs

Which of course proxies requests from my new onion to timaq4ygg2iegci7.onion... the onion address of the txtordoc documentation website.
But this is crazy... um how many hops is that exactly? 14? 15?


Cheers,

David


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Digital signature
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140621/374673a3/attachment.pgp>

From exarkun at twistedmatrix.com  Sat Jun 21 08:24:15 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Jun 2014 14:24:15 -0000
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A4B441.1040201@catseye.org>
References: <53A4B441.1040201@catseye.org>
Message-ID: <20140621142415.6847.915570379.divmod.xquotient.58@top>

On 20 Jun, 10:22 pm, mark at catseye.org wrote:
>We're writing a Twisted 14.0.0 application (on Python 2.7.7, Mac OS 
>10.9.3) that uses Conch as an SSH client; this is working fine. 
>However, we have the requirement that in an advanced mode of operation 
>for power users that the application take advantage of OpenSSH 
>connection multiplexing over an already-established-by-the-user OpenSSH 
>ControlMaster session (via an OpenSSH ControlPath socket) instead of 
>using Conch.
>
>OpenSSH requires its new session command and forwarded file descriptors 
>to be sent over the socket in a very particular way: the command must 
>be sent first, followed by message with a '\0' byte with each forwarded 
>file descriptor.  OpenSSH ignores the '\0' for each file descriptor, 
>extracting the file descriptors themselves from the message's ancillary 
>data.
>
>The following will not work because none of the calls to write() send 
>their data until control is returned to the reactor, while 
>sendFileDescriptor() queues up the descriptors such that they get sent 
>them with the very next data that is sent -- which wind up being the 
>first three bytes of the command rather than the three '\0' bytes.
>
>class OpenSSHMuxProtocol( protocol.Protocol ):
>     # built via reactor.connectUNIX()
>     def sendCommand( self, command ):
>         # Does not work:
>         self.transport.write( command )
>         self.transport.sendFileDescriptor( sys.stdin.fileno() )
>         self.transport.write( '\0' ) # payload for the stdin file 
>descriptor
>         self.transport.sendFileDescriptor( sys.stdout.fileno() )
>         self.transport.write( '\0' ) # payload for the stdout file 
>descriptor
>         self.transport.sendFileDescriptor( sys.stdout.fileno() )
>         self.transport.write( '\0' ) # payload for the stderr file 
>descriptor
>         # ^^^ Does not work
>
>
>But this next solution /does/ work:
>
>from socket import SOL_SOCKET
>from twisted.python.sendmsg import SCM_RIGHTS, send1msg
>
>class OpenSSHMuxProtocol( protocol.Protocol ):
>     # built via reactor.connectUNIX()
>     def sendCommand( self, command ):
>         self.transport.writeSomeData( command ) # data is sent over the 
>socket immediately
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdin.fileno() ) 
>) ] )
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdout.fileno() 
>) ) ] )
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stderr.fileno() 
>) ) ] )
>
>
>My questions are:
>
>Is it bad to bypass the reactor and send data directly/immediately this 
>way using writeSomeData() and send1msg()?  Note that sendCommand() 
>actually gets

Yes.  `writeSomeData` is not a method on any transport interface.  It is 
an implementation detail of particular transports.
>called in response to a OpenSSHMuxProtocol.dataReceived() event.  If 
>bypassing the reactor this way is bad, how bad is it and what are the 
>consequences or effects?

This use is untested.  There's no reason to expect it will continue to 
work with future Twisted releases (or, really, that it fully works now; 
since `writeSomeData` bypasses the transport's buffering layer, it seems 
like you're risking an out-of-order or partial send; probably these will 
only arise under load so you may not have observed them in your 
testing).
>Is there a better way to get a working solution?  I think I'd need some 
>way to guarantee that the write of the command was actually sent to the 
>OpenSSH server before the file descriptors are forwarded -- for 
>example, if a Deferred was used whose first callback wrote the command 
>and whose second callback forwarded the descriptors, would a call to 
>the reactor to actually sent the command be guaranteed between the two 
>callbacks?

The proper way to do this would be for OpenSSH to acknowledge the 
operation.  At this point you would know it's safe to proceed to the 
next operation.  Since you didn't mention anything about 
acknowledgements, I'm guessing there are none.

Since you're already relying on `self.transport.socket.fileno()` and 
`send1msg` (basically, bypassing the transport abstraction and just 
doing socket operations yourself) one improvement you could make would 
be just to rely on that for the whole thing.  Don't use `writeSomeData`. 
Use `socket.send(command)`.  At least this way you're only relying on 
being able to treat a transport like a UNIX socket - not on the 
particulars of the transport's buffering implementation.

A different approach you could take would be to implement this 
connection sharing feature for Conch.  I can pretty much guarantee it's 
possible to implement since an older version of Conch actually did 
implement it. :)  The implementation was removed because it was fragile, 
complicated, and poorly tested.  It would be great to re-introduce the 
functionality with a higher quality implementation.

Jean-Paul


From exarkun at twistedmatrix.com  Sat Jun 21 08:46:34 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Jun 2014 14:46:34 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
Message-ID: <20140621144634.6847.1918080626.divmod.xquotient.78@top>

Hello,

I'm pleased to announce the release of Nevow 0.11.1.

Nevow is a web application construction kit written in Python and based 
on Twisted. It is designed to allow the programmer to express as much of 
the view logic as desired in Python, and includes a pure Python XML 
expression syntax named stan to facilitate this. However it also 
provides rich support for designer-edited templates, using a very small 
XML attribute language to provide bi-directional template manipulation 
capability.

This release includes a number of minor new features and bug fixes.  It 
also includes changes to modernize Nevow's packaging - installation of 
Nevow using `pip` is now supported.  This release also marks the move of 
Nevow development to Github.

You can read about all of the changes in this release in the NEWS file:

    https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt

You can find Nevow on PyPI:

    https://pypi.python.org/pypi/Nevow

Or on Github:

    https://github.com/twisted/nevow

Enjoy!

Jean-Paul
http://as.ynchrono.us/


From glyph at twistedmatrix.com  Sat Jun 21 21:54:26 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 20:54:26 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
Message-ID: <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>


On Jun 20, 2014, at 10:10 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:
>> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>>> The web server version string says Twisted 11.1 ? maybe we should upgrade that too? :)
>> 
>> Sounds like somebody should send a PR to Braid? :-)
> 
> I was going to do that, but I do not understand where it is in braid :(

(Note: On this mailing list, please don't top-post, we prefer a trimmed and interleaved reply; it's easier to follow discussions if you show up in the middle.)
 
It looks like the relevant place is in braid.twisted.service.Service.bootstrap... although really, we ought to be using virtualenvs for this stuff, so I don't know how deep you want to go into refactoring :-).

Or perhaps you could just make <https://github.com/twisted-infra/braid/blob/master/braid/pip.py> always do a pip install --upgrade, if we're always going for a recent version, or add support for pinning versions of things.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140621/37c4044e/attachment.html>

From glyph at twistedmatrix.com  Sat Jun 21 22:02:57 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 21:02:57 -0700
Subject: [Twisted-Python] twistedcat - twisted endpoint concatenator
In-Reply-To: <20140621141217.GA697@googlemail.com>
References: <20140621141217.GA697@googlemail.com>
Message-ID: <94DBA4C4-072C-4068-B969-15E98554E85D@twistedmatrix.com>


On Jun 21, 2014, at 7:12 AM, David Stainton <dstainton415 at gmail.com> wrote:

> Greetings,
> 
> I was inspired by the "socat" CLI utility to write something similar called twistedcat.
> 
> https://github.com/david415/twistedcat
> https://github.com/david415/twistedcat/blob/master/twistedcat/twistedcat.py
> 
> Obviously it should have the "cat" word in the name... so what do you suggest?

How about "nocat" (network oriented cat), in honor of <http://quoteinvestigator.com/2012/02/24/telegraph-cat/>?

> What do people think of this?
> Do you have ascii art drawings of cats can use or suggestions for me to improve the code quality?

Are you saying that you have internet access, but cannot find pictures of cats? :-)

> Right now I'm cleaning the code out of main() and creating an EndpointCombiner class
> to encapsulate the endpoint pipe logic (c2c, s2s, c2s).
> 
> The reason I am very interested in improving the code to assist in pipe-lining endpoints is because it can be used by more than just this commandline tool. Any Twisted app wishing to create custom protocols can do so by pipe-lining endpoints. I think the API for this could be very easy to use.

We do have some work going in to making a generic wrapper-endpoint facility so it's easier to add wrapping to endpoints.  The branch for <https://twistedmatrix.com/trac/ticket/5642#comment:28> has such features.

> socat has an enormous feature set that I am not sufficiently motivated to duplicate here.

Yes, I think it would be better to focus on the alternate/awesome features that Twisted already gives you, rather than aiming for parity.

> http://www.dest-unreach.org/socat/doc/socat.html#ADDRESS_TYPES
> 
> It was really interesting for me to read about these socat address types... there are many of them.
> Twisted has some of the same types... and in some cases they are even spelled the same.
> I am interested in implementing some of these socat address types in Twisted, including a TUN endpoint and endpoint parser plugin.
> I've played around with the new twisted pair TUN stuff... but I was using producers and consumers to make a VPN...
> and as it turns out this task should be greatly simplified by using pipelined Twisted endpoints.

Well, this all sounds amazing to me.  Please keep us posted!

> I've also been toying with the idea of writing an obfsproxy Twisted endpoint which would work similar to the txtorcon endpoint in that it would launch an external command... and then perform a tcp connect. obfsproxy can be launched in external mode and has several obfuscation protocols to choose from... some of which are very sophisticated. If someone actually had a good use case for obfuscating pipelined endpoint protocols then I would love to hear about it (besides the obvious VPN use-case)!
> 
> https://www.torproject.org/projects/obfsproxy
> 
> Twisted endpoint descriptor strings are just like socat address specifications... except that in socat the client and server endpoint types are in the same name space. Therefore twistedcat needs to know if the endpoint string is a server or client endpoint. It defaults to client unless -s or --server specifies it as a server endpoint string. Or do you dare suggest that it would be better to try clientFromString and then if that fails try serverFromString?

Personally I think having a -s option (or -l to follow the tradition set forth by nc?) to be explicit is better.

Have you considered making wrappers in both directions though: a string-parsing plugin that turns a server endpoint into a client endpoint by making .listen() call connect, and one that turns a client endpoint into a server endpoint by having .connect() listen and wait for the first inbound connection?

> We've already created a Tor client endpoint/parser plugin (https://github.com/david415/txsocksx)
> and a Tor Hidden Service endpoint/parser plugin (https://github.com/meejah/txtorcon)...
> Obviously twistedcat doesn't know anything about Tor... because it's completely endpoint agnostic.
> 
> Here's my silly twistedcat Tor experimentations:
> 
> $ ./twistedcat.py -s stdio: -s onion:80:hiddenServiceDir=/home/human/hs
> 
> After running this one liner... I checked the contents of /home/human/hs/
> and found my new onion address in the "hostname" file.
> I used my Tor browser to send a request... and here we see twistedcat printed it to stdout via the stdio endpoint:
> 
> GET / HTTP/1.1
> Host: ibce3yvjdb3mzcrq.onion
> User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0
> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
> Accept-Language: en-us,en;q=0.5
> Accept-Encoding: gzip, deflate
> Connection: keep-alive
> 
> 
> And then there is this:
> 
> $ ./twistedcat.py tor:timaq4ygg2iegci7.onion:80 -s onion:80:hiddenServiceDir=/home/human/hs
> 
> Which of course proxies requests from my new onion to timaq4ygg2iegci7.onion... the onion address of the txtordoc documentation website.
> But this is crazy... um how many hops is that exactly? 14? 15?

Sounds like fun to me :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140621/73d72e11/attachment.html>

From hawkowl at atleastfornow.net  Sat Jun 21 22:08:22 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 22 Jun 2014 12:08:22 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
Message-ID: <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>


On 22 Jun 2014, at 11:54, Glyph <glyph at twistedmatrix.com> wrote:

> 
> On Jun 20, 2014, at 10:10 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:
>>> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>>> 
>>>> The web server version string says Twisted 11.1 ? maybe we should upgrade that too? :)
>>> 
>>> Sounds like somebody should send a PR to Braid? :-)
>> 
>> I was going to do that, but I do not understand where it is in braid :(
> 
> (Note: On this mailing list, please don't top-post, we prefer a trimmed and interleaved reply; it's easier to follow discussions if you show up in the middle.)

Right. I was just hitting reply and typing words in mail.app :D

>  
> It looks like the relevant place is in braid.twisted.service.Service.bootstrap... although really, we ought to be using virtualenvs for this stuff, so I don't know how deep you want to go into refactoring :-).
> 
> Or perhaps you could just make <https://github.com/twisted-infra/braid/blob/master/braid/pip.py> always do a pip install --upgrade, if we're always going for a recent version, or add support for pinning versions of things.

When I get a moment, I?ll have a look at all this. Moving parts :(

> 
> -glyph

-hawkowl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140622/817b033e/attachment.pgp>

From glyph at twistedmatrix.com  Sat Jun 21 23:48:04 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 22:48:04 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>


On Jun 21, 2014, at 7:46 AM, exarkun at twistedmatrix.com wrote:

> This release includes a number of minor new features and bug fixes.  It also includes changes to modernize Nevow's packaging - installation of Nevow using `pip` is now supported.  This release also marks the move of Nevow development to Github.

This is _so_ exciting.  Thanks for doing this, it is really nice to be able to just 'pip install' things which depend on Nevow without a bunch of caveats.

-glyph

From glyph at twistedmatrix.com  Sat Jun 21 23:48:40 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 22:48:40 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
Message-ID: <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>


On Jun 21, 2014, at 9:08 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> When I get a moment, I?ll have a look at all this. Moving parts :(

Yeah, I know what you mean.

Nevertheless, the more maintenance it gets, the easier it becomes to maintain :-)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140621/4b6414df/attachment-0001.html>

From donald at stufft.io  Sun Jun 22 00:00:06 2014
From: donald at stufft.io (Donald Stufft)
Date: Sun, 22 Jun 2014 02:00:06 -0400
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
Message-ID: <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>


On Jun 22, 2014, at 1:48 AM, Glyph <glyph at twistedmatrix.com> wrote:

> 
> On Jun 21, 2014, at 7:46 AM, exarkun at twistedmatrix.com wrote:
> 
>> This release includes a number of minor new features and bug fixes.  It also includes changes to modernize Nevow's packaging - installation of Nevow using `pip` is now supported.  This release also marks the move of Nevow development to Github.
> 
> This is _so_ exciting.  Thanks for doing this, it is really nice to be able to just 'pip install' things which depend on Nevow without a bunch of caveats.

Oh wow, that is great :) I?m sure Tahoe-lafs will be happy.

-----------------
Donald Stufft
PGP: 0x6E3CBCE93372DCFA // 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140622/a4ea898c/attachment.pgp>

From glyph at twistedmatrix.com  Sun Jun 22 18:51:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Jun 2014 17:51:38 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
Message-ID: <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>


On Jun 21, 2014, at 11:00 PM, Donald Stufft <donald at stufft.io> wrote:

> Oh wow, that is great :) I?m sure Tahoe-lafs will be happy.

I am surprised they haven't said anything yet, I'm assuming they haven't noticed ;-)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140622/31686cc9/attachment.html>

From werner at thieprojects.ch  Sun Jun 22 23:40:47 2014
From: werner at thieprojects.ch (Werner Thie)
Date: Sun, 22 Jun 2014 19:40:47 -1000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <53A7BDDF.5050306@thieprojects.ch>

Aloha all

great, I used nevow/athena/livepages through all the years in between, 
nevow getting a new life is really exciting news.

Cheers, Werner

On 6/21/14 4:46 AM, exarkun at twistedmatrix.com wrote:
> Hello,
>
> I'm pleased to announce the release of Nevow 0.11.1.
>
> Nevow is a web application construction kit written in Python and based
> on Twisted. It is designed to allow the programmer to express as much of
> the view logic as desired in Python, and includes a pure Python XML
> expression syntax named stan to facilitate this. However it also
> provides rich support for designer-edited templates, using a very small
> XML attribute language to provide bi-directional template manipulation
> capability.
>
> This release includes a number of minor new features and bug fixes.  It
> also includes changes to modernize Nevow's packaging - installation of
> Nevow using `pip` is now supported.  This release also marks the move of
> Nevow development to Github.
>
> You can read about all of the changes in this release in the NEWS file:
>
>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
>
> You can find Nevow on PyPI:
>
>     https://pypi.python.org/pypi/Nevow
>
> Or on Github:
>
>     https://github.com/twisted/nevow
>
> Enjoy!
>
> Jean-Paul
> http://as.ynchrono.us/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From itamar at itamarst.org  Mon Jun 23 04:49:11 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 23 Jun 2014 06:49:11 -0400
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
 <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
Message-ID: <53A80627.7090608@itamarst.org>

Can we re-enable general commenting now? Or is the spam setup still in 
progress?


From m-lists at the-moon.net  Mon Jun 23 04:59:53 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 23 Jun 2014 11:59:53 +0100
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>

On 19 June 2014 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> Hello Twisted users,
> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).

Thanks David and Glyph.

A few bugs I noticed since the trac upgrade:
 * I don't think I'm receiving ticket modification updates (for
tickets where I've participated). For example I didn't receive an
email about this comment from JP
https://twistedmatrix.com/trac/ticket/7527#comment:1
 * There's an extra "delete" link alongside the ticket delete button
when I view existing tickets
 * The new ticket description textarea floats to the right of the text
"You may use WikiFormatting here." instead of above it.

-RichardW.


From warner at lothar.com  Mon Jun 23 13:43:55 2014
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2014 12:43:55 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
Message-ID: <53A8837B.7030709@lothar.com>

On 6/22/14 5:51 PM, Glyph wrote:

>> Oh wow, that is great :) I?m sure Tahoe-lafs will be happy.
> 
> I am surprised they haven't said anything yet, I'm assuming they
> haven't noticed ;-)

I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
Thank you!

BTW, the NEWS URL in the Nevow release email is 404ing. I think the
correct one is:

 https://github.com/twisted/nevow/blob/nevow-0.11.1/NEWS.txt

thanks a bunch,
 -Brian

[1]: https://tahoe-lafs.org/trac/tahoe-lafs/ticket/2032#comment:18



From glyph at twistedmatrix.com  Mon Jun 23 16:48:49 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:48:49 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <53A80627.7090608@itamarst.org>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
 <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
 <53A80627.7090608@itamarst.org>
Message-ID: <408BF826-F033-4580-9D87-2DA443EDD91A@twistedmatrix.com>


On Jun 23, 2014, at 3:49 AM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> Can we re-enable general commenting now? Or is the spam setup still in progress?

Currently no spam setup is in progress.

In a sense, the Trac upgrade is orthogonal to the spam problem.  Upgrading Trac didn't change anything about the spam.

However, the Trac upgrade provides access to a lot more Trac plugins, including more recent authentication and registration and signup and spam filtering plugins, so there are many more options now available.  If someone wanted to tackle this problem we now have a path forward for them to do so, without having to deal with the mess of a Trac schema upgrade :).

-glyph



From glyph at twistedmatrix.com  Mon Jun 23 16:50:48 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:50:48 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>
Message-ID: <3103B431-1DB0-4C57-8BEA-C33E860E6F01@twistedmatrix.com>


On Jun 23, 2014, at 3:59 AM, Richard Wall <m-lists at the-moon.net> wrote:

> On 19 June 2014 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Hello Twisted users,
>> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
>> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> Thanks David and Glyph.
> 
> A few bugs I noticed since the trac upgrade:

Hi Richard,

Thanks for noting these, but I think they're likely to disappear into the ether :-).  Would you mind filing these as issues against Braid?

-glyph

From glyph at twistedmatrix.com  Mon Jun 23 16:55:08 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:55:08 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <53A8837B.7030709@lothar.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
Message-ID: <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>


On Jun 23, 2014, at 12:43 PM, Brian Warner <warner at lothar.com> wrote:

> I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
> Thank you!

WOOHOO!  I didn't realize this was the last blocker, this is fantastic news!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140623/e0feeadc/attachment.html>

From orestis at orestis.gr  Tue Jun 24 05:06:22 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 24 Jun 2014 14:06:22 +0300
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
 <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
Message-ID: <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>

Hello,

Great news! Are there any docs online?  

Thanks,
Orestis


24 ???? 2014, 1:55, ?/? Glyph Lefkowitz <glyph at twistedmatrix.com> ??????:

> 
>> On Jun 23, 2014, at 12:43 PM, Brian Warner <warner at lothar.com> wrote:
>> 
>> I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
>> Thank you!
> 
> WOOHOO!  I didn't realize this was the last blocker, this is fantastic news!
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140624/b72fb534/attachment.html>

From peter.westlake at pobox.com  Tue Jun 24 05:41:04 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 24 Jun 2014 12:41:04 +0100
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>

Good to see Nevow is still being maintained!

What are the chances of 0.11.2 including the fix for
https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
complete with a test case and a patch?

Peter.

On Sat, Jun 21, 2014, at 15:46, exarkun at twistedmatrix.com wrote:
> Hello,
> 
> I'm pleased to announce the release of Nevow 0.11.1.
> 
> Nevow is a web application construction kit written in Python and based 
> on Twisted. It is designed to allow the programmer to express as much of 
> the view logic as desired in Python, and includes a pure Python XML 
> expression syntax named stan to facilitate this. However it also 
> provides rich support for designer-edited templates, using a very small 
> XML attribute language to provide bi-directional template manipulation 
> capability.
> 
> This release includes a number of minor new features and bug fixes.  It 
> also includes changes to modernize Nevow's packaging - installation of 
> Nevow using `pip` is now supported.  This release also marks the move of 
> Nevow development to Github.
> 
> You can read about all of the changes in this release in the NEWS file:
> 
>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
> 
> You can find Nevow on PyPI:
> 
>     https://pypi.python.org/pypi/Nevow
> 
> Or on Github:
> 
>     https://github.com/twisted/nevow
> 
> Enjoy!
> 
> Jean-Paul
> http://as.ynchrono.us/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From exarkun at twistedmatrix.com  Tue Jun 24 06:01:07 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jun 2014 12:01:07 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
 <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
 <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>
Message-ID: <20140624120107.6847.79834529.divmod.xquotient.128@top>

On 11:06 am, orestis at orestis.gr wrote:
>Hello,
>
>Great news! Are there any docs online?

Not yet.  See https://github.com/twisted/nevow/issues/20 and 
https://github.com/twisted/nevow/issues/21


From exarkun at twistedmatrix.com  Tue Jun 24 06:10:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jun 2014 12:10:10 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
Message-ID: <20140624121010.6847.1673121294.divmod.xquotient.136@top>

On 11:41 am, peter.westlake at pobox.com wrote:
>Good to see Nevow is still being maintained!
>
>What are the chances of 0.11.2 including the fix for
>https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
>complete with a test case and a patch?

Issues were migrated to Github as well, fwiw:

    https://github.com/twisted/nevow/issues/11

Keeping track of where there is code up for review is something I 
haven't really figured out how to do well on Github (and never figured 
out how to do on Launchpad).  It's one thing if you maintain a project 
as part of your job - then you probably look at the issue tracker every 
day and things progress.  It's another thing if you follow 15 open 
source, volunteer driven projects each with their own issue tracker. 
I'll probably go months between looking at the issue trackers for some 
of them (particularly the lower activity projects where it might really 
*be* months between interesting activity).

Anyone have any tips or tools for keeping tabs on outstanding work on 
Github?  I've been trying out a "review" keyword that marks PRs that 
need to be looked at.  This at least makes work-to-do unambiguous and 
easy to find but I still have to poll github to find it.

Meanwhile, Peter, if you turn that patch into a PR then I'll try to 
remember to review it soon. :)

Jean-Paul
>Peter.
>
>On Sat, Jun 21, 2014, at 15:46, exarkun at twistedmatrix.com wrote:
>>Hello,
>>
>>I'm pleased to announce the release of Nevow 0.11.1.
>>
>>Nevow is a web application construction kit written in Python and 
>>based
>>on Twisted. It is designed to allow the programmer to express as much 
>>of
>>the view logic as desired in Python, and includes a pure Python XML
>>expression syntax named stan to facilitate this. However it also
>>provides rich support for designer-edited templates, using a very 
>>small
>>XML attribute language to provide bi-directional template manipulation
>>capability.
>>
>>This release includes a number of minor new features and bug fixes. 
>>It
>>also includes changes to modernize Nevow's packaging - installation of
>>Nevow using `pip` is now supported.  This release also marks the move 
>>of
>>Nevow development to Github.
>>
>>You can read about all of the changes in this release in the NEWS 
>>file:
>>
>>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
>>
>>You can find Nevow on PyPI:
>>
>>     https://pypi.python.org/pypi/Nevow
>>
>>Or on Github:
>>
>>     https://github.com/twisted/nevow
>>
>>Enjoy!
>>
>>Jean-Paul
>>http://as.ynchrono.us/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From mark at catseye.org  Tue Jun 24 11:01:43 2014
From: mark at catseye.org (Mark Montague)
Date: Tue, 24 Jun 2014 13:01:43 -0400
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <20140621142415.6847.915570379.divmod.xquotient.58@top>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
Message-ID: <53A9AEF7.80202@catseye.org>

On 2014-06-21, 10:24, exarkun at twistedmatrix.com wrote:
> > If bypassing the reactor this way is bad, how bad is it and what are 
> the consequences or effects?
>
> This use is untested.  There's no reason to expect it will continue to 
> work with future Twisted releases (or, really, that it fully works 
> now; since `writeSomeData` bypasses the transport's buffering layer, 
> it seems like you're risking an out-of-order or partial send; probably 
> these will only arise under load so you may not have observed them in 
> your testing).

Thanks for the very helpful reply!  This is exactly the sort of thing I 
was hoping to find out.

>> Is there a better way to get a working solution?
>
> The proper way to do this would be for OpenSSH to acknowledge the 
> operation.  At this point you would know it's safe to proceed to the 
> next operation.  Since you didn't mention anything about 
> acknowledgements, I'm guessing there are none.

Correct, the order of events is:

0. client opens OpenSSH socket, sends hello, receives reply
1. user calls the protocol function to create a new OpenSSH session over 
the existing socket
2. client sends MUX_C_ALIVE_CHECK to OpenSSH
3. OpenSSH replies with MUX_S_ALIVE
4. client sends MUX_C_NEW_SESSION to OpenSSH, then immediately forwards 
the file descriptors
5. OpenSSH replies with either MUX_S_SESSION_OPENED, 
MUX_S_PERMISSION_DENIED, or MUX_S_FAILURE.
6. ...session is now created...
7. OpenSSH sends MUX_S_EXIT_MESSAGE when the session has finished
8. client can now close the OpenSSH socket

It would make sense for OpenSSH to acknowledge the MUX_C_NEW_SESSION in 
step 4 before the file descriptors get sent, but I've read the source 
code and OpenSSH does not do this -- it expects the file descriptors to 
be sent as soon as the new session message is sent.


> Since you're already relying on `self.transport.socket.fileno()` and 
> `send1msg` (basically, bypassing the transport abstraction and just 
> doing socket operations yourself) one improvement you could make would 
> be just to rely on that for the whole thing.  Don't use 
> `writeSomeData`. Use `socket.send(command)`.  At least this way you're 
> only relying on being able to treat a transport like a UNIX socket - 
> not on the particulars of the transport's buffering implementation.
>
> A different approach you could take would be to implement this 
> connection sharing feature for Conch.  I can pretty much guarantee 
> it's possible to implement since an older version of Conch actually 
> did implement it. :)  The implementation was removed because it was 
> fragile, complicated, and poorly tested.  It would be great to 
> re-introduce the functionality with a higher quality implementation.

I'll look into what it might take to implement this in a robust way with 
tests for Conch.  I think that's definitely a preferred solution, since 
it sounds like such a feature might be accepted (I wasn't considering 
this initially since Conch is a generic SSH transport, and piggybacking 
on top of an existing OpenSSH socket is a highly-specific thing.)  If I 
can come up with a good way to do this, I'll submit a patch, otherwise 
I'll keep the functionality as it is now, in a standalone class that 
doesn't use Conch at all.


-- 
   Mark Montague
   mark at catseye.org



From glyph at twistedmatrix.com  Tue Jun 24 12:27:28 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2014 11:27:28 -0700
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A9AEF7.80202@catseye.org>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
 <53A9AEF7.80202@catseye.org>
Message-ID: <344451E5-1089-4087-B363-3FAE20F9A66C@twistedmatrix.com>


On Jun 24, 2014, at 10:01 AM, Mark Montague <mark at catseye.org> wrote:

> (I wasn't considering this initially since Conch is a generic SSH transport, and piggybacking on top of an existing OpenSSH socket is a highly-specific thing.)

Not only was this feature previously in Conch (although I'm not sure if it actually spoke OpenSSH's ControlMaster protocol or something custom?), but there's existing precedent for integrating with OpenSSH-based client-side tooling: Conch can talk to OpenSSH's agent via the agent protocol.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140624/70f694e1/attachment.html>

From exarkun at twistedmatrix.com  Tue Jun 24 18:07:33 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 25 Jun 2014 00:07:33 -0000
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A9AEF7.80202@catseye.org>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
 <53A9AEF7.80202@catseye.org>
Message-ID: <20140625000733.8005.658943787.divmod.xquotient.1@top>

On 24 Jun, 05:01 pm, mark at catseye.org wrote:
>On 2014-06-21, 10:24, exarkun at twistedmatrix.com wrote:
>>
>>A different approach you could take would be to implement this 
>>connection sharing feature for Conch.  I can pretty much guarantee 
>>it's possible to implement since an older version of Conch actually 
>>did implement it. :) The implementation was removed because it was 
>>fragile, complicated, and poorly tested.  It would be great to re- 
>>introduce the functionality with a higher quality implementation.
>
>I'll look into what it might take to implement this in a robust way 
>with tests for Conch.  I think that's definitely a preferred solution, 
>since it sounds like such a feature might be accepted (I wasn't 
>considering this initially since Conch is a generic SSH transport, and 
>piggybacking on top of an existing OpenSSH socket is a highly-specific 
>thing.)

To clarify slightly, what was implemented in Conch before was the entire 
connection sharing feature.  Conch could act as a master and share 
connections with other Conch clients.  It could not talk to an OpenSSH 
master and to share a connection.

Jean-Paul


From pratik.prajapati12 at gmail.com  Wed Jun 25 04:20:30 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Wed, 25 Jun 2014 15:50:30 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
 <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
Message-ID: <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>

Hi Jean-Paul,

you have seen my code on
http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python

code with your suggested changes

this is working fine for windows machine, but on linux machine if no device
is found on network then it doesn't go to stopMsearch()

Please help. How to debug this ?


On Sun, Jun 15, 2014 at 9:30 AM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Hi Jean-Paul,
>
> I have added a comment on your answer on stackoverflow, please respond
> there.
>
>
> On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
> pratik.prajapati12 at gmail.com> wrote:
>
>> Thanks for the answer
>>
>>
>> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>>
>>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>>
>>>>
>>>> [snip]
>>>>
>>>>
>>>> Please tell what's wrong in code mentioned in the start of this mail and
>>>> how to correct this.
>>>>
>>>> I have also posted this code on stackoverflow , but didn't get any
>>>> response
>>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>>> all-network-interfaces-using-twisted-module-in-python
>>>>
>>>
>>> I posted an answer on stackoverflow.  I previously hadn't seen the
>>> question because it didn't have the `twisted` tag (I edited the question as
>>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>>> future. :)
>>>
>>> Jean-Paul
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>>
>> --
>> *Thanks and Regards,*
>>
>> *Pratik Prajapati*
>> *Graduate Software Engineer*
>> *Imagination Technologies India Pvt Ltd.*
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140625/f355e558/attachment.html>

From pratik.prajapati12 at gmail.com  Wed Jun 25 04:29:08 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Wed, 25 Jun 2014 15:59:08 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
 <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
 <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>
Message-ID: <CAHNg1SqPjkieaKD86PMii_xt-+v1E1wFJQ98ZNrOmsnGEo2_eA@mail.gmail.com>

Modified code (with changes suggested by you on stackoverflow):

class Base(DatagramProtocol):
        """ Class to send M-SEARCH message to devices in network and
receive datagram
            packets from them
        """
        SSDP_ADDR = "239.255.255.250"
        SSDP_PORT = 1900
        MS = "M-SEARCH * HTTP/1.1\r\nHOST: {}:{}\r\nMAN:
'ssdp:discover'\r\nMX: 2\r\nST: ssdp:all\r\n\r\n".format(SSDP_ADDR,
SSDP_PORT)

    def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        timeInSeconds = [0.2,0.4,0.6,0.8]
        try:
            port = reactor.listenUDP(0, self, interface=self.address)
            for num, delay in zip(range(4), timeInSeconds):
                reactor.callLater(delay, port.write, Scanner.MS,
(Scanner.SSDP_ADDR, Scanner.SSDP_PORT))
        except error.CannotListenError:
            pass
        reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait margin

    def stopMsearch(self, port):
        """ Stop listening on port
        """
        port.stopListening()

def findDevices():
    addresses = []
    for interface in interfaces():
        try:
            for link in ifaddresses(interface)[AF_INET]:
                addresses.append(link['addr'])
        except KeyError:
            pass

    #loopback address
    if "127.0.0.1" in addresses:
        addresses.remove("127.0.0.1")

    for address in addresses:
        network = Base(address)
        network.sendMsearch()


On Wed, Jun 25, 2014 at 3:50 PM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Hi Jean-Paul,
>
> you have seen my code on
> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python
>
> code with your suggested changes
>
> this is working fine for windows machine, but on linux machine if no
> device is found on network then it doesn't go to stopMsearch()
>
> Please help. How to debug this ?
>
>
> On Sun, Jun 15, 2014 at 9:30 AM, Pratik Prajapati <
> pratik.prajapati12 at gmail.com> wrote:
>
>> Hi Jean-Paul,
>>
>> I have added a comment on your answer on stackoverflow, please respond
>> there.
>>
>>
>> On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
>> pratik.prajapati12 at gmail.com> wrote:
>>
>>> Thanks for the answer
>>>
>>>
>>> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>>>
>>>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>>>
>>>>>
>>>>> [snip]
>>>>>
>>>>>
>>>>> Please tell what's wrong in code mentioned in the start of this mail
>>>>> and
>>>>> how to correct this.
>>>>>
>>>>> I have also posted this code on stackoverflow , but didn't get any
>>>>> response
>>>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>>>> all-network-interfaces-using-twisted-module-in-python
>>>>>
>>>>
>>>> I posted an answer on stackoverflow.  I previously hadn't seen the
>>>> question because it didn't have the `twisted` tag (I edited the question as
>>>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>>>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>>>> future. :)
>>>>
>>>> Jean-Paul
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>
>>>
>>>
>>> --
>>> *Thanks and Regards,*
>>>
>>> *Pratik Prajapati*
>>> *Graduate Software Engineer*
>>> *Imagination Technologies India Pvt Ltd.*
>>>
>>
>>
>>
>> --
>> *Thanks and Regards,*
>>
>> *Pratik Prajapati*
>> *Graduate Software Engineer*
>> *Imagination Technologies India Pvt Ltd.*
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140625/e4fea604/attachment-0001.html>

From peter.westlake at pobox.com  Wed Jun 25 10:21:30 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 25 Jun 2014 17:21:30 +0100
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140624121010.6847.1673121294.divmod.xquotient.136@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
 <20140624121010.6847.1673121294.divmod.xquotient.136@top>
Message-ID: <1403713290.14789.133497917.186E25C0@webmail.messagingengine.com>

On Tue, Jun 24, 2014, at 13:10, exarkun at twistedmatrix.com wrote:
> On 11:41 am, peter.westlake at pobox.com wrote:
> >Good to see Nevow is still being maintained!
> >
> >What are the chances of 0.11.2 including the fix for
> >https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
> >complete with a test case and a patch?
> 
> Issues were migrated to Github as well, fwiw:
> 
>     https://github.com/twisted/nevow/issues/11
...
> Meanwhile, Peter, if you turn that patch into a PR then I'll try to 
> remember to review it soon. :)

Here it is: https://github.com/twisted/nevow/pull/42

As an added benefit, I now know how to do a pull request on GitHub, so
thank you for that!
It's very much easier than Launchpad, where I still haven't any hint on
how to do it.

Peter.


From jasonjwwilliams at gmail.com  Wed Jun 25 16:31:48 2014
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 25 Jun 2014 16:31:48 -0600
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
Message-ID: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>

Since upgrading to OSX 10.9 I seem to have this issue when running trial
(tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):

Unexpected error while writing cache file
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 472, in postOptions
    _BasicOptions.postOptions(self)
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 382, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 369, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line
209, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line
181, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))

The only zip on the path is the pseudo python27.zip.

Any ideas?

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140625/3fcdf3dc/attachment.html>

From glyph at twistedmatrix.com  Wed Jun 25 18:46:53 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Jun 2014 17:46:53 -0700
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
In-Reply-To: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
References: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
Message-ID: <E90049E8-7A47-4EA6-A776-73FC9AE1B88E@twistedmatrix.com>


On Jun 25, 2014, at 3:31 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:

> Since upgrading to OSX 10.9 I seem to have this issue when running trial (tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):
> 
> Unexpected error while writing cache file
> Traceback (most recent call last):
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 472, in postOptions

It looks like you've installed Twisted in /usr/local/lib, which is not where a Twisted install should ever go on OS X.  Either install into a virtualenv or use the system install at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python.

I can't speculate as to how you've mis-installed this particular version of Twisted though :-).

-glyph



From hawkowl at atleastfornow.net  Wed Jun 25 18:47:16 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 26 Jun 2014 08:47:16 +0800
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
In-Reply-To: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
References: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
Message-ID: <75E6F4E7-0D86-4218-A1C6-F1F8096743A6@atleastfornow.net>

On 26 Jun 2014, at 6:31, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:

> Since upgrading to OSX 10.9 I seem to have this issue when running trial (tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):
> 
> Unexpected error while writing cache file
> Traceback (most recent call last):
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 472, in postOptions
>     _BasicOptions.postOptions(self)
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 382, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 369, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line 209, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line 181, in getCache
>     dropinPath.setContent(pickle.dumps(dropinDotCache))
> 
> The only zip on the path is the pseudo python27.zip.
> 
> Any ideas?
> 
> -J

Have you tried running it in a virtualenv?

It looks like it?s trying to write the dropin.cache file ? but I don?t think you can do that if you?re not admin?

-hawkowl

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140626/daf93bda/attachment.pgp>

From glyph at twistedmatrix.com  Fri Jun 27 16:27:11 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 27 Jun 2014 15:27:11 -0700
Subject: [Twisted-Python] bringing LDAP back
Message-ID: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>

Hello fellow Twistrons,

A long time ago, for reasons we need not discuss here, the pure-python LDAP implementation within Twisted was pulled out into a separate package under a different license.

Recently however, the authors of this LDAP code have generously re-licensed the code under a Twisted-compatible MIT license, both the original code at <https://github.com/tv42/ldaptor/commit/7e249b1586789a5c588f662ce74ee9f4338666e0> and the more recent fork (which I believe has more users) at <https://github.com/antong/ldaptor/issues/10>.  It seems as though there's even a solution for the problematic MD4 implementation here <https://github.com/tv42/ldaptor/pull/2>.

Since there's no active, central hub for ldaptor development, I think we should pull it into the Twisted org on Github, and some of the folks on the Cc: line have volunteered to help with that.

Does that sound good to everybody?  (Are you excited!!!?)

It's also a possibility that we could distribute a for-real SSO back-end with Cred using this, which I'm pretty excited about.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20140627/f823b558/attachment.html>

From hs at ox.cx  Sat Jun 28 04:36:43 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 28 Jun 2014 12:36:43 +0200
Subject: [Twisted-Python] bringing LDAP back
In-Reply-To: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>
References: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>
Message-ID: <03894BB2-EE77-43C8-90B3-B859E0093E3B@ox.cx>

On 28 Jun 2014, at 0:27, Glyph wrote:

> Recently however, the authors of this LDAP code have generously 
> re-licensed the code under a Twisted-compatible MIT license, both the 
> original code at 
> <https://github.com/tv42/ldaptor/commit/7e249b1586789a5c588f662ce74ee9f4338666e0> 
> and the more recent fork (which I believe has more users) at 
> <https://github.com/antong/ldaptor/issues/10>.  It seems as though 
> there's even a solution for the problematic MD4 implementation here 
> <https://github.com/tv42/ldaptor/pull/2>.
>
> Since there's no active, central hub for ldaptor development, I think 
> we should pull it into the Twisted org on Github, and some of the 
> folks on the Cc: line have volunteered to help with that.
>
> Does that sound good to everybody?  (Are you excited!!!?)

YES.

I?m glad I didn?t come around to do it by myself until now. ;)

> It's also a possibility that we could distribute a for-real SSO 
> back-end with Cred using this, which I'm pretty excited about.

LDAPUsernamePasswordDatabaseDoUse? ;)


From adi at roiban.ro  Sat Jun 28 12:16:31 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 28 Jun 2014 21:16:31 +0300
Subject: [Twisted-Python] Ticket comment permissions on Trac
Message-ID: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>

Hi,

I would like to receive ticket comment permissions on Trac.
My trac username is: adiroiban

Thanks!

-- 
Adi Roiban


From exarkun at twistedmatrix.com  Sat Jun 28 12:31:39 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Jun 2014 18:31:39 -0000
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
Message-ID: <20140628183139.6956.2015609847.divmod.xquotient.4@top>

On 06:16 pm, adi at roiban.ro wrote:
>Hi,
>
>I would like to receive ticket comment permissions on Trac.
>My trac username is: adiroiban
>
>Thanks!

Done.

Jean-Paul


From dustin at v.igoro.us  Sat Jun 28 16:36:54 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 28 Jun 2014 18:36:54 -0400
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
Message-ID: <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>

This could be interesting given thatn @twistedmatrix.com can't receive
email from gmail, although it appears to work via the mailing list.

Dustin

On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
> Hi,
>
> I would like to receive ticket comment permissions on Trac.
> My trac username is: adiroiban
>
> Thanks!
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Sat Jun 28 20:43:12 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 28 Jun 2014 19:43:12 -0700
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
Message-ID: <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>

On Jun 28, 2014, at 3:36 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
> On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
>> I would like to receive ticket comment permissions on Trac.
>> My trac username is: adiroiban
> 
> This could be interesting given thatn @twistedmatrix.com can't receive
> email from gmail, although it appears to work via the mailing list.

I'm confused.  All of my email passes through twistedmatrix.com and much (most?) of it comes from gmail.

What do you mean?

-glyph



From dustin at v.igoro.us  Sun Jun 29 07:39:13 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 29 Jun 2014 09:39:13 -0400
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
 <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
Message-ID: <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>

I sent an email to exarkun at twistedmatrix.com five days ago and
received daily graylist-failure emails for four days until it was
finally rejected.  From talking to JP on irc, the issue is that the
twistedmatrix MTA greylists per IP, but gmail retries from a different
IP for each attempt, so the second attempt is never linked with the
first.

Dustin

On Sat, Jun 28, 2014 at 10:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Jun 28, 2014, at 3:36 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
>> On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
>>> I would like to receive ticket comment permissions on Trac.
>>> My trac username is: adiroiban
>>
>> This could be interesting given thatn @twistedmatrix.com can't receive
>> email from gmail, although it appears to work via the mailing list.
>
> I'm confused.  All of my email passes through twistedmatrix.com and much (most?) of it comes from gmail.
>
> What do you mean?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Mon Jun 30 13:36:47 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 30 Jun 2014 12:36:47 -0700
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
 <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
 <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>
Message-ID: <950B12D4-69B2-43E4-A5DC-8E8668AE6DA7@twistedmatrix.com>


On Jun 29, 2014, at 6:39 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> I sent an email to exarkun at twistedmatrix.com five days ago and
> received daily graylist-failure emails for four days until it was
> finally rejected.  From talking to JP on irc, the issue is that the
> twistedmatrix MTA greylists per IP, but gmail retries from a different
> IP for each attempt, so the second attempt is never linked with the
> first.

Oh, hm.  I suppose I might have disabled greylisting for my account or something.  Can you send me email directly?  We should probably move this off-list :).

-glyph

From trac at twistedmatrix.com  Sun Jun  1 00:05:17 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 01 Jun 2014 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1401602717.98.7760288266461544368@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140601/e1efcfef/attachment-0002.html>

From liangguowei at bfsu.edu.cn  Sun Jun  1 00:08:12 2014
From: liangguowei at bfsu.edu.cn (=?GBK?B?wbq5+s6w?=)
Date: Sun, 01 Jun 2014 14:08:12 +0800
Subject: [Twisted-Python] Auto-Re:  Weekly Bug Summary
Message-ID: <1406011408127dc30dc6f3d09093682e85da47379b58@bfsu.edu.cn>

已收到，感谢您的来信

----
北京外国语大学留学生办公室 梁国伟
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140601/5ca3a051/attachment-0002.html>

From itamar at itamarst.org  Mon Jun  2 05:54:23 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 02 Jun 2014 07:54:23 -0400
Subject: [Twisted-Python] ANN: Crochet 1.3.0 - Use Twisted Anywhere!
In-Reply-To: <538A36AD.30304@itamarst.org>
References: <538A36AD.30304@itamarst.org>
Message-ID: <538C65EF.2010707@itamarst.org>

On 05/31/2014 04:08 PM, Itamar Turner-Trauring wrote:
> This is a bugfix release, recommended for all users of Crochet.

More specifically, if you've been getting spurious RuntimeErrors 
complaining about waiting during imports you want this release.

-Itamar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140602/e1ff8b0f/attachment-0002.html>

From franz at electromail.org  Tue Jun  3 07:31:14 2014
From: franz at electromail.org (Franz Schwartau)
Date: Tue, 3 Jun 2014 15:31:14 +0200
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
Message-ID: <20140603133114.GA97309@electromail.org>

Hi!

I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit. ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of twisted is installed.

I wrote a separate module called LookupSessionDB:

http://pastebin.com/u4TMNhpd

It looks up some values from a database table. It does some efforts to handle reconnect properly.

If called a second time and more the SELECT statement returns no rows (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()" is called after obtaining a database connection "rows = cursor.fetchall()" (line 138) returns the expected results.

The module inserting the records calls "conn.commit()" after INSERT. If I execute the same SELECT statement in a separate mysql client the results are displayed.

This is quite confusing. Any idea what's going on?

	Best regards
		Dirk




From glyph at twistedmatrix.com  Tue Jun  3 12:57:45 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 3 Jun 2014 11:57:45 -0700
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <20140603133114.GA97309@electromail.org>
References: <20140603133114.GA97309@electromail.org>
Message-ID: <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>


On Jun 3, 2014, at 6:31 AM, Franz Schwartau <franz at electromail.org> wrote:

> Hi!
> 
> I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit. ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of twisted is installed.

I should note that Twisted 8.2.0 is 6 years old at this point, so if you can't upgrade Twisted there might not be much we can do for you :).

> I wrote a separate module called LookupSessionDB:
> 
> http://pastebin.com/u4TMNhpd
> 
> It looks up some values from a database table. It does some efforts to handle reconnect properly.
> 
> If called a second time and more the SELECT statement returns no rows (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()" is called after obtaining a database connection "rows = cursor.fetchall()" (line 138) returns the expected results.
> 
> The module inserting the records calls "conn.commit()" after INSERT. If I execute the same SELECT statement in a separate mysql client the results are displayed.
> 
> This is quite confusing. Any idea what's going on?

Can you simplify this question somewhat?  There's a lot of SQL in here, it's missing a required dependency ("Base") and I suspect that this is really a MySQL question and not a Twisted question.  It would be helpful if you could provide a complete schema so we could run your code, in the style of http://sscce.org/.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140603/f95b4928/attachment-0002.html>

From franz at electromail.org  Wed Jun  4 03:03:18 2014
From: franz at electromail.org (Franz Schwartau)
Date: Wed, 4 Jun 2014 11:03:18 +0200
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
Message-ID: <20140604090318.GA40696@electromail.org>

Hi Glyph!

On Tue, Jun 03, 2014 at 11:57:45AM -0700, Glyph Lefkowitz wrote:
>    On Jun 3, 2014, at 6:31 AM, Franz Schwartau <franz at electromail.org> wrote:
> 
>      Hi!
> 
>      I'm trying to extend ppolicy (http://bimbo.fjfi.cvut.cz/ppolicy) a bit.
>      ppolicy uses the twisted framework. On CentOS 6.5 version 8.2.0 of
>      twisted is installed.
> 
>    I should note that Twisted 8.2.0 is 6 years old at this point, so if you
>    can't upgrade Twisted there might not be much we can do for you :).
> 
>      I wrote a separate module called LookupSessionDB:
> 
>      http://pastebin.com/u4TMNhpd
> 
>      It looks up some values from a database table. It does some efforts to
>      handle reconnect properly.
> 
>      If called a second time and more the SELECT statement returns no rows
>      (line 138) if "conn.commit()" is missing in line 125. If "conn.commit()"
>      is called after obtaining a database connection "rows =
>      cursor.fetchall()" (line 138) returns the expected results.
> 
>      The module inserting the records calls "conn.commit()" after INSERT. If
>      I execute the same SELECT statement in a separate mysql client the
>      results are displayed.
> 
>      This is quite confusing. Any idea what's going on?
> 
>    Can you simplify this question somewhat?  There's a lot of SQL in here,
>    it's missing a required dependency ("Base") and I suspect that this is
>    really a MySQL question and not a Twisted question.  It would be helpful
>    if you could provide a complete schema so we could run your code, in the
>    style of http://sscce.org/.
>    -glyph

Thanks for your answer.

I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.

I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.

IMHO it's related to twisted. If I replace adbapi.ConnectionPool() with another connection method it works. I used mysql.connector.connect(pool_name = "ppolicy", pool_size = 5, ...) and MySQLdb.connect().

	Best regards
		Franz



From glyph at twistedmatrix.com  Wed Jun  4 13:20:45 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 4 Jun 2014 12:20:45 -0700
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <20140604090318.GA40696@electromail.org>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
 <20140604090318.GA40696@electromail.org>
Message-ID: <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>


On Jun 4, 2014, at 2:03 AM, Franz Schwartau <franz at electromail.org> wrote:

> I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.

Yeah, RHEL is kind of a bummer.

> I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.

If you need more than MySQL + Twisted alone to reproduce the bug, then I would suggest that perhaps you haven't tracked it down far enough to do useful investigations within Twisted... I appreciate that you're willing to set up a VM, but the interesting thing is to extract the problem into a simple example, not to get the whole ball of mud running :).

-glyph


From dustin at v.igoro.us  Wed Jun  4 14:08:25 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Wed, 4 Jun 2014 16:08:25 -0400
Subject: [Twisted-Python] SELECT returns no results without conn.commit()
In-Reply-To: <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>
References: <20140603133114.GA97309@electromail.org>
 <ECF4E409-BF24-4202-B652-872F3D755A5F@twistedmatrix.com>
 <20140604090318.GA40696@electromail.org>
 <3ECE2D43-47C2-4788-AF7B-B81A952AD93C@twistedmatrix.com>
Message-ID: <CAJtE5vSPppoMmAALccTMOzu48+RLFeR4g0fygaAVQ=+PZvf6FA@mail.gmail.com>

Also, might I suggest that, at least for purposes of debugging, you
use a virtualenv (or a throwaway VM if you prefer) and install a copy
of Twisted from this decade.  Twisted is very stable, and fixes lots
of bugs in every release.  So you're fairly unlikely to uncover *new*
problems, but very likely to fix the problem you're seeing, by doing
so.

Dustin

On Wed, Jun 4, 2014 at 3:20 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> On Jun 4, 2014, at 2:03 AM, Franz Schwartau <franz at electromail.org> wrote:
>
>> I know twisted 8.2.0 is quite old. Unfortunatly there are no newer RPM in RHEL/CentOS or even EPEL.
>
> Yeah, RHEL is kind of a bummer.
>
>> I could provide the complete code. But it would be laborious to set up everything. You'd need postfix, ppolicy, mysql, etc. It would be easier (for you) if I'd set up a VM.
>
> If you need more than MySQL + Twisted alone to reproduce the bug, then I would suggest that perhaps you haven't tracked it down far enough to do useful investigations within Twisted... I appreciate that you're willing to set up a VM, but the interesting thing is to extract the problem into a simple example, not to get the whole ball of mud running :).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From tobias.oberstein at tavendo.de  Wed Jun  4 16:21:18 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Wed, 4 Jun 2014 15:21:18 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
Message-ID: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>

Hi,

this is an early announcement of Crossbar.io, a new application server based on Twisted and Autobahn.

Crossbar.io is an open-source application router that allows to build distributed systems out of
application components which are loosely coupled and communicate in (soft) real-time.

README: https://github.com/crossbario/crossbar#crossbario

At it's core, an application router provides generic routing of both calls (for remote procedure
calls) and events (for publish & subscribe) which is realized via WAMP, an open WebSocket
based communication protocol.

Why WAMP?: http://wamp.ws/why/

Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

We've got some early encouraging feedback from developers who think Crossbar.io might
get the next Django, MeteorJS or Vert.x:

A developer guest post: http://tavendo.com/blog/post/is-crossbar-the-future-of-python-web-apps/

Crossbar.io is an open-source project, and still in the very beginning. Rough edges, stuff breaks,
moving fast.

If you want to give it a try: https://github.com/crossbario/crossbar/wiki#quick-start

We are looking for feedback, help and contributors. It's a big shot project, and to make it
take off, we need core hackers and grow a developer community. I know, sounds bold.
Sure, and it is. In any case, I'd love to see the Python community get even more ambitious.
We can't let the J's of this world take over;)

Cheers,
/Tobias



From glyph at twistedmatrix.com  Wed Jun  4 21:39:33 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 4 Jun 2014 20:39:33 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de> wrote:

> Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
> which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.


Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140604/19528028/attachment-0002.html>

From tobias.oberstein at tavendo.de  Thu Jun  5 05:00:45 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 5 Jun 2014 04:00:45 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>

Hi Glyph,

The process support in Twisted is just awesome! It is well designed and robust across platforms. Both are _big_ things we really depend on.

And yes, the process management and monitoring in Crossbar is really dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub events fire on process lifecycle, and processes can be managed via WAMP calls:

https://github.com/crossbario/crossbar/wiki/Management-API

Want to debug an app component running a Worker? Start Manhole within the process while it's running via a single WAMP call.

https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1

Manhole. Another goodie of Twisted;) Love it.

In fact, I would go as far as saying: without Twisted (and Python), it would have been simply impossible for us to get so far - with limited dev resources.

Cheers,
/Tobias


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Glyph
Gesendet: Donnerstag, 5. Juni 2014 05:40
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:


Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140605/f6961a11/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jun  8 00:05:20 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 08 Jun 2014 06:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1402207520.16.5784794713634681919@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140608/7413633b/attachment-0002.html>

From twisted-python at 2xlp.com  Tue Jun 10 12:24:24 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 10 Jun 2014 14:24:24 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to postgresql
Message-ID: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>


I had to restart postgresql , and that triggered some endless errors in my logs.

i don't have anything that can handle a suddenly dropped / resumed connection.

does anyone have a recommendation for trying to reconnect or handle this in general

from what I can tell from my logs...

When I catch an error, my cleanup code tries to 

		self._connection.rollback()

	which raises

		psycopg2.InterfaceError: connection already closed

My immediate thoughts are:

1. catching the correct disconnect error 
2. telling the connection/pool to reconnect


From p.mayers at imperial.ac.uk  Tue Jun 10 13:02:23 2014
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 10 Jun 2014 20:02:23 +0100
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
Message-ID: <5397563F.20706@imperial.ac.uk>

On 10/06/2014 19:24, Jonathan Vanasco wrote:
>
> I had to restart postgresql , and that triggered some endless errors in my logs.
>
> i don't have anything that can handle a suddenly dropped / resumed connection.
>
> does anyone have a recommendation for trying to reconnect or handle this in general
>
> from what I can tell from my logs...
>
> When I catch an error, my cleanup code tries to
>
> 		self._connection.rollback()
>
> 	which raises
>
> 		psycopg2.InterfaceError: connection already closed

Yes, this is irritating.

Related tickets see:

http://twistedmatrix.com/trac/ticket/4404
http://twistedmatrix.com/trac/ticket/4964

You absolutely want to be setting cp_reconnect=1 on ConnectionPool. 
Anything else is asking for major trouble, and I really think this 
should be the default.

cp_reconnect will not avoid all problems - for a thread pool of size N, 
the next N transactions will have to fail to throw away all the dead 
connections - but it might stop them happing forever.

In some other, non-Twisted contexts, people have had problem even with 
reconnecting, because some versions of some DBAPI drivers emit a 
connection from .close() if it's already closed, which interrupts the 
reconnection logic :o(

It seems your version of psycopg is doing this - how old is it? I 
thought that was fixed these days?

You might also look at something like pgbouncer, which you can configure 
to try a "good" SQL query on the outbound connections before handing to 
an inbound client; this probes the connections. It adds latency, but 
personally I would far rather pay the small number of milliseconds on 
"select 1" than bomb out to the upper layers.

An annoying problem.



From dustin at v.igoro.us  Tue Jun 10 19:02:32 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Tue, 10 Jun 2014 21:02:32 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <5397563F.20706@imperial.ac.uk>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
Message-ID: <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>

SQLAlchemy makes this kind of pessimistic reconnection pretty easy; we
do it for MySQL in
  https://github.com/buildbot/buildbot/blob/master/master/buildbot/db/enginestrategy.py
I'm not sure why we don't do it for Postgres, but we've never heard a
complaint from a postgres user, so perhaps other layers are handling
it.

In general, I consider this a requirement for a production-ready
database layer, along with correctly setting SO_KEEPALIVE.

Dustin

On Tue, Jun 10, 2014 at 3:02 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> On 10/06/2014 19:24, Jonathan Vanasco wrote:
>>
>>
>> I had to restart postgresql , and that triggered some endless errors in my
>> logs.
>>
>> i don't have anything that can handle a suddenly dropped / resumed
>> connection.
>>
>> does anyone have a recommendation for trying to reconnect or handle this
>> in general
>>
>> from what I can tell from my logs...
>>
>> When I catch an error, my cleanup code tries to
>>
>>                 self._connection.rollback()
>>
>>         which raises
>>
>>                 psycopg2.InterfaceError: connection already closed
>
>
> Yes, this is irritating.
>
> Related tickets see:
>
> http://twistedmatrix.com/trac/ticket/4404
> http://twistedmatrix.com/trac/ticket/4964
>
> You absolutely want to be setting cp_reconnect=1 on ConnectionPool. Anything
> else is asking for major trouble, and I really think this should be the
> default.
>
> cp_reconnect will not avoid all problems - for a thread pool of size N, the
> next N transactions will have to fail to throw away all the dead connections
> - but it might stop them happing forever.
>
> In some other, non-Twisted contexts, people have had problem even with
> reconnecting, because some versions of some DBAPI drivers emit a connection
> from .close() if it's already closed, which interrupts the reconnection
> logic :o(
>
> It seems your version of psycopg is doing this - how old is it? I thought
> that was fixed these days?
>
> You might also look at something like pgbouncer, which you can configure to
> try a "good" SQL query on the outbound connections before handing to an
> inbound client; this probes the connections. It adds latency, but personally
> I would far rather pay the small number of milliseconds on "select 1" than
> bomb out to the upper layers.
>
> An annoying problem.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Tue Jun 10 23:23:56 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 10 Jun 2014 22:23:56 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
Message-ID: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>

You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.

-glyph

On Jun 10, 2014, at 6:02 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> SQLAlchemy makes this kind of pessimistic reconnection pretty easy; we
> do it for MySQL in
>  https://github.com/buildbot/buildbot/blob/master/master/buildbot/db/enginestrategy.py
> I'm not sure why we don't do it for Postgres, but we've never heard a
> complaint from a postgres user, so perhaps other layers are handling
> it.
> 
> In general, I consider this a requirement for a production-ready
> database layer, along with correctly setting SO_KEEPALIVE.
> 
> Dustin
> 
> On Tue, Jun 10, 2014 at 3:02 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>> On 10/06/2014 19:24, Jonathan Vanasco wrote:
>>> 
>>> 
>>> I had to restart postgresql , and that triggered some endless errors in my
>>> logs.
>>> 
>>> i don't have anything that can handle a suddenly dropped / resumed
>>> connection.
>>> 
>>> does anyone have a recommendation for trying to reconnect or handle this
>>> in general
>>> 
>>> from what I can tell from my logs...
>>> 
>>> When I catch an error, my cleanup code tries to
>>> 
>>>                self._connection.rollback()
>>> 
>>>        which raises
>>> 
>>>                psycopg2.InterfaceError: connection already closed
>> 
>> 
>> Yes, this is irritating.
>> 
>> Related tickets see:
>> 
>> http://twistedmatrix.com/trac/ticket/4404
>> http://twistedmatrix.com/trac/ticket/4964
>> 
>> You absolutely want to be setting cp_reconnect=1 on ConnectionPool. Anything
>> else is asking for major trouble, and I really think this should be the
>> default.
>> 
>> cp_reconnect will not avoid all problems - for a thread pool of size N, the
>> next N transactions will have to fail to throw away all the dead connections
>> - but it might stop them happing forever.
>> 
>> In some other, non-Twisted contexts, people have had problem even with
>> reconnecting, because some versions of some DBAPI drivers emit a connection
>> from .close() if it's already closed, which interrupts the reconnection
>> logic :o(
>> 
>> It seems your version of psycopg is doing this - how old is it? I thought
>> that was fixed these days?
>> 
>> You might also look at something like pgbouncer, which you can configure to
>> try a "good" SQL query on the outbound connections before handing to an
>> inbound client; this probes the connections. It adds latency, but personally
>> I would far rather pay the small number of milliseconds on "select 1" than
>> bomb out to the upper layers.
>> 
>> An annoying problem.
>> 
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140610/3ed474dd/attachment-0002.html>

From wulczer at wulczer.org  Wed Jun 11 02:01:47 2014
From: wulczer at wulczer.org (=?UTF-8?B?SmFuIFVyYmHFhHNraQ==?=)
Date: Wed, 11 Jun 2014 10:01:47 +0200
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
Message-ID: <53980CEB.8010703@wulczer.org>

On 11/06/14 07:23, Glyph wrote:
> You might want to just try using SQLAlchemy via
> <https://pypi.python.org/pypi/alchimia> if you don't want to do your own
> thread-pool management as buildbot appears to be.

Or you can go threadless and use txpostgres, which now has automatic 
reconnection handling (dislaimer: I'm the author):

http://txpostgres.readthedocs.org/en/latest/usage.html#automatic-reconnection

Jan



From max at riehl.io  Wed Jun 11 09:05:10 2014
From: max at riehl.io (Maximilien Riehl)
Date: Wed, 11 Jun 2014 17:05:10 +0200
Subject: [Twisted-Python] Known bug with twistd log rotation
Message-ID: <53987026.1000106@riehl.io>

Hi!

I'm finding it difficult to get log rotation working cleanly with twistd 
(if dropping privileges through twistd, which we require).
I went through all the docs and also found [1] very helpful, but the 
problem boils down to the fact that


>     Implications for Logfile Rotation
>
> Using the configuration described here, the LOGFILE will be created as 
> user "root" and group "root", but rotated as user UID and group GID.  
> If you want rotation to work as advertised it is necessary to put the 
> LOGFILE in a directory in which UID/GID has permissions to rename files.
>

and

>     def rotate(self):
>         """
>         Rotate the file and create a new one.
>
>         If it's not possible to open new logfile, this will fail silently,
>         and continue logging to old logfile.
>         """
>         if not (os.access(self.directory, os.W_OK) and 
> os.access(self.path, os.W_OK)):
>             return
(twisted 14.0.0)

will never work together. Even if the user twistd runs as is technically 
able to rename the log file (due to having write permissions on the 
directory), it will never try to since it can't write to the file.
There is a workaround on a comment in [1] but that's a really 
unnecessary and hacky solution, IMHO.

Is this a known bug?
I remember running into this issue a year ago or so and IIRC I just gave up.


Thanks for any pointers,
max

[1]
http://www.tsheffler.com/blog/?p=526
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140611/486447a9/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Jun 11 09:52:16 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 15:52:16 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <53987026.1000106@riehl.io>
References: <53987026.1000106@riehl.io>
Message-ID: <20140611155216.7208.1046483696.divmod.xquotient.0@top>

On 03:05 pm, max at riehl.io wrote:
>Hi!
>
>I'm finding it difficult to get log rotation working cleanly with 
>twistd (if dropping privileges through twistd, which we require).
>I went through all the docs and also found [1] very helpful, but the 
>problem boils down to the fact that
>>     Implications for Logfile Rotation
>>
>>Using the configuration described here, the LOGFILE will be created as 
>>user "root" and group "root", but rotated as user UID and group GID. 
>>If you want rotation to work as advertised it is necessary to put the 
>>LOGFILE in a directory in which UID/GID has permissions to rename 
>>files.
>
>and
>>     def rotate(self):
>>         """
>>         Rotate the file and create a new one.
>>
>>         If it's not possible to open new logfile, this will fail 
>>silently,
>>         and continue logging to old logfile.
>>         """
>>         if not (os.access(self.directory, os.W_OK) and 
>>os.access(self.path, os.W_OK)):
>>             return
>(twisted 14.0.0)
>
>will never work together. Even if the user twistd runs as is 
>technically able to rename the log file (due to having write 
>permissions on the directory), it will never try to since it can't 
>write to the file.
>There is a workaround on a comment in [1] but that's a really 
>unnecessary and hacky solution, IMHO.
>
>Is this a known bug?

Sounds like https://twistedmatrix.com/trac/ticket/5723

Jean-Paul



From max at riehl.io  Wed Jun 11 10:22:27 2014
From: max at riehl.io (wp11226852-max)
Date: Wed, 11 Jun 2014 18:22:27 +0200 (CEST)
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <20140611155216.7208.1046483696.divmod.xquotient.0@top>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
Message-ID: <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>

Thanks Jean-Paul. I have no idea how I managed to miss both tickets (there is a
duplicate) and would like to apologize.

The required change is really small, despite the age of the ticket. Is there
anything I can do to help fix it (e.G. contribute)?

Thanks a lot for your work on Twisted.

Regards,
max

> exarkun at twistedmatrix.com hat am 11. Juni 2014 um 17:52 geschrieben:
>
>
> On 03:05 pm, max at riehl.io wrote:
> >Hi!
> >
> >I'm finding it difficult to get log rotation working cleanly with
> >twistd (if dropping privileges through twistd, which we require).
> >I went through all the docs and also found [1] very helpful, but the
> >problem boils down to the fact that
> >> Implications for Logfile Rotation
> >>
> >>Using the configuration described here, the LOGFILE will be created as
> >>user "root" and group "root", but rotated as user UID and group GID.
> >>If you want rotation to work as advertised it is necessary to put the
> >>LOGFILE in a directory in which UID/GID has permissions to rename
> >>files.
> >
> >and
> >> def rotate(self):
> >> """
> >> Rotate the file and create a new one.
> >>
> >> If it's not possible to open new logfile, this will fail
> >>silently,
> >> and continue logging to old logfile.
> >> """
> >> if not (os.access(self.directory, os.W_OK) and
> >>os.access(self.path, os.W_OK)):
> >> return
> >(twisted 14.0.0)
> >
> >will never work together. Even if the user twistd runs as is
> >technically able to rename the log file (due to having write
> >permissions on the directory), it will never try to since it can't
> >write to the file.
> >There is a workaround on a comment in [1] but that's a really
> >unnecessary and hacky solution, IMHO.
> >
> >Is this a known bug?
>
> Sounds like https://twistedmatrix.com/trac/ticket/5723
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140611/ac784e41/attachment-0002.html>

From Nahraf34 at janisary.us  Wed Jun 11 11:19:49 2014
From: Nahraf34 at janisary.us (Nahraf34)
Date: Wed, 11 Jun 2014 17:19:49 +0000
Subject: [Twisted-Python] Trouble with Record_TXT
Message-ID: <20140611171949.GA14007@janisary.us>

Hi all,

I am attempting to write a small DNS server that returns custom TXT record
when I do:

dig -t TXT -p 10053 @127.0.0.1 testdomain.com

The code is as follows:

----------

#!/usr/bin/python

from twisted.internet import reactor
from twisted.names import client, dns, server

class DynamicResolver(object):
   def query(self, query, timeout=None):
      name = query.name.name

#     answer = dns.RRHeader(
#        name = name,
#        payload = dns.Record_A(address=b'1.2.3.4'))

      answer = dns.RRHeader(
         name = name,
         payload = dns.Record_TXT(data='FirstSecond', ttl=3333))

      answers = [answer]
      authority = []
      additional = []

      return answers, authority, additional

def main():
   factory = server.DNSServerFactory(
      clients = [DynamicResolver()]
   )

   protocol = dns.DNSDatagramProtocol(controller=factory)

   reactor.listenUDP(10053, protocol)
   reactor.listenTCP(10053, factory)

   reactor.run()

if __name__ == '__main__':
   main()

----------

You will notice three lines of code are commented out. They are sample code for
an A record that work just fine. But the attempt at Record_TXT fails.

I receive the following error when I attempt to perform the dig command:

-----------

$ python servlet.py
Unhandled Error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", line 2326, in datagramReceived
    self.controller.messageReceived(m, self, addr)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", line 192, in messageReceived
    self.handleQuery(message, proto, address)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", line 136, in handleQuery
    return self.resolver.query(query).addCallback(
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", line 73, in query
    return defer.maybeDeferred(method, query.name.name, timeout)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py", line 139, in maybeDeferred
    result = f(*args, **kw)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", line 81, in lookupAddress
    return self._lookup(name, dns.IN, dns.A, timeout)
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/resolve.py", line 79, in _lookup
    d = self.resolvers[0].query(q, timeout)
  File "servlet.py", line 16, in query
    payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", line 867, in __init__
    assert (payload is None) or isinstance(payload, UnknownRecord) or (payload.TYPE == type)
exceptions.AssertionError: 

-----------

I'm a little confused, because I followed the documentation as referenced here:
http://twistedmatrix.com/documents/current/api/twisted.names.dns.Record_TXT.html

Any ideas what this error means and why it is happening?

Thank you,
Nahraf



From twisted-python at 2xlp.com  Wed Jun 11 11:21:25 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 11 Jun 2014 13:21:25 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
Message-ID: <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>


On Jun 11, 2014, at 1:23 AM, Glyph wrote:

> You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.

thanks.

i think we might need to go the buildbot route.

we mainly use SqlAlchemy ; our twisted apps are under 5% of our code.

alchimia looks to be headed in the direction of what we always wanted ( to get sqlalchemy in twisted ), but not quite there yet.  i think it would be too confusing right now to have 2 separate sqlalchemy packages in-house.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140611/f4d43237/attachment-0002.html>

From m-lists at the-moon.net  Wed Jun 11 11:35:45 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Wed, 11 Jun 2014 18:35:45 +0100
Subject: [Twisted-Python] Trouble with Record_TXT
In-Reply-To: <20140611171949.GA14007@janisary.us>
References: <20140611171949.GA14007@janisary.us>
Message-ID: <CABefbUpqaR4J6VyuVsrj_p=+wNV6MqZuTqqv8ai97_0svJP_jw@mail.gmail.com>

On 11 June 2014 18:19, Nahraf34 <Nahraf34 at janisary.us> wrote:
> I receive the following error when I attempt to perform the dig command:
>     assert (payload is None) or isinstance(payload, UnknownRecord) or (payload.TYPE == type)
> exceptions.AssertionError:

Hi,

I tried to catch you on #twisted earlier, but you'd gone. I think the
problem is that you need to pass a `type` argument to `RRHeader` which
matches the payload you supply. eg
 * https://gist.github.com/wallrj/84c3815a0be52831e077

It happens to just work with A records because that's the default type.

It would be nice if RRHeader would just examine the payload and
automatically set it's type. Perhaps we can add a new constructor
class method eg `RRHeader.fromPayload` which does this.

Hope that helps.

-RichardW,



From exarkun at twistedmatrix.com  Wed Jun 11 11:43:36 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 17:43:36 -0000
Subject: [Twisted-Python] Trouble with Record_TXT
In-Reply-To: <20140611171949.GA14007@janisary.us>
References: <20140611171949.GA14007@janisary.us>
Message-ID: <20140611174336.7208.774572395.divmod.xquotient.4@top>

On 05:19 pm, nahraf34 at janisary.us wrote:
>Hi all,
>
>I am attempting to write a small DNS server that returns custom TXT 
>record
>when I do:
>
>dig -t TXT -p 10053 @127.0.0.1 testdomain.com
>
>The code is as follows:
>
>----------
>
>#!/usr/bin/python
>
>from twisted.internet import reactor
>from twisted.names import client, dns, server
>
>class DynamicResolver(object):
>   def query(self, query, timeout=None):
>      name = query.name.name
>
>#     answer = dns.RRHeader(
>#        name = name,
>#        payload = dns.Record_A(address=b'1.2.3.4'))
>
>      answer = dns.RRHeader(
>         name = name,
>         payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
>
>      answers = [answer]
>      authority = []
>      additional = []
>
>      return answers, authority, additional
>
>def main():
>   factory = server.DNSServerFactory(
>      clients = [DynamicResolver()]
>   )
>
>   protocol = dns.DNSDatagramProtocol(controller=factory)
>
>   reactor.listenUDP(10053, protocol)
>   reactor.listenTCP(10053, factory)
>
>   reactor.run()
>
>if __name__ == '__main__':
>   main()
>
>----------
>
>You will notice three lines of code are commented out. They are sample 
>code for
>an A record that work just fine. But the attempt at Record_TXT fails.
>
>I receive the following error when I attempt to perform the dig 
>command:
>
>-----------
>
>$ python servlet.py
>Unhandled Error
>Traceback (most recent call last):
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", 
>line 2326, in datagramReceived
>    self.controller.messageReceived(m, self, addr)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", 
>line 192, in messageReceived
>    self.handleQuery(message, proto, address)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/server.py", 
>line 136, in handleQuery
>    return self.resolver.query(query).addCallback(
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", 
>line 73, in query
>    return defer.maybeDeferred(method, query.name.name, timeout)
>--- <exception caught here> ---
>  File "/usr/local/lib/python2.7/dist- 
>packages/twisted/internet/defer.py", line 139, in maybeDeferred
>    result = f(*args, **kw)
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/common.py", 
>line 81, in lookupAddress
>    return self._lookup(name, dns.IN, dns.A, timeout)
>  File "/usr/local/lib/python2.7/dist- 
>packages/twisted/names/resolve.py", line 79, in _lookup
>    d = self.resolvers[0].query(q, timeout)
>  File "servlet.py", line 16, in query
>    payload = dns.Record_TXT(data='FirstSecond', ttl=3333))
>  File "/usr/local/lib/python2.7/dist-packages/twisted/names/dns.py", 
>line 867, in __init__
>    assert (payload is None) or isinstance(payload, UnknownRecord) or 
>(payload.TYPE == type)
>exceptions.AssertionError:
>
>-----------
>
>I'm a little confused, because I followed the documentation as 
>referenced here:
>http://twistedmatrix.com/documents/current/api/twisted.names.dns.Record_TXT.html
>
>Any ideas what this error means and why it is happening?

The problem here is how you're using the `RRHeader` initializer.  It 
(somewhat unhelpfully) accepts a separate `type` argument.  The value of 
the `type` argument and the type of the payload must match.  The default 
type is `A` (as in `Record_A`).

If you change your code to do something like 
`RRHeader(type=payload.type, payload=payload)` then I think you'll get 
the behavior you're after.

Jean-Paul



From exarkun at twistedmatrix.com  Wed Jun 11 11:50:14 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 11 Jun 2014 17:50:14 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
 <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
Message-ID: <20140611175014.7208.1715013030.divmod.xquotient.16@top>

On 04:22 pm, max at riehl.io wrote:
>Thanks Jean-Paul. I have no idea how I managed to miss both tickets 
>(there is a
>duplicate) and would like to apologize.

No worries!  I'm glad you asked here instead of filing another 
duplicate. ;)  And a lot of people have trouble finding tickets in our 
tracker - there are a lot to sort through and trac's search 
functionality isn't very good.

For what it's worth, I search the tracker using Google and including 
this term:

    inurl:twistedmatrix.com/trac/ticket

It produces much better results than trac itself in almost all cases.
>The required change is really small, despite the age of the ticket. Is 
>there
>anything I can do to help fix it (e.G. contribute)?

Contribution would be most welcome!  It looks like no one has started 
work on the ticket at all, so it's yours for the taking. :)

Grab a checkout of Twisted (from subversion or git, as you prefer), 
write a failing unit test, then make it pass by changing the 
implementation. :)  Attach a patch to the ticket and add the "review" 
keyword.

Read more about the contribution process on the wiki:

    https://twistedmatrix.com/trac/wiki/ReviewProcess

Thanks!

Jean-Paul



From glyph at twistedmatrix.com  Wed Jun 11 23:13:14 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 11 Jun 2014 22:13:14 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
Message-ID: <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>


On Jun 11, 2014, at 10:21 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> 
> On Jun 11, 2014, at 1:23 AM, Glyph wrote:
> 
>> You might want to just try using SQLAlchemy via <https://pypi.python.org/pypi/alchimia> if you don't want to do your own thread-pool management as buildbot appears to be.
> 
> thanks.
> 
> i think we might need to go the buildbot route.
> 
> we mainly use SqlAlchemy ; our twisted apps are under 5% of our code.
> 
> alchimia looks to be headed in the direction of what we always wanted ( to get sqlalchemy in twisted ), but not quite there yet.  i think it would be too confusing right now to have 2 separate sqlalchemy packages in-house.

alchimia is not a re-implementation or a separate sqlalchemy package.  It *is* sqlalchemy; it's just a slight extension for integration sqlalchemy operations with the Twisted main loop.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140611/7f9dced5/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 630 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140611/7f9dced5/attachment.sig>

From tom.cocagne at gmail.com  Thu Jun 12 08:51:49 2014
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Thu, 12 Jun 2014 09:51:49 -0500
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>

Tobias,

May I suggest that you incorporate most of Sam's guest post at the top of
Crossbar's README file? I spent about ten minutes looking through the docs
on GitHub trying to answer the question "what is it and why should I
care?". I'd just about given up thinking it was marginally cool but
probably irrelevant to me when I took a chance on the blog post. The system
Sam describes is awesome, it can solve some of my major pain-points right
now, and it's something I can't wait to get started with. I'd have
completely missed out on Crossbar if it weren't for his post and I think
you'll have better luck recruiting users and developers if you include that
content right up front on your project's main page.

Tom


On Thu, Jun 5, 2014 at 6:00 AM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:

> Hi Glyph,
>
>
>
> The process support in Twisted is just awesome! It is well designed and
> robust across platforms. Both are _big_ things we really depend on.
>
>
>
> And yes, the process management and monitoring in Crossbar is really
> dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub
> events fire on process lifecycle, and processes can be managed via WAMP
> calls:
>
>
>
> https://github.com/crossbario/crossbar/wiki/Management-API
>
>
>
> Want to debug an app component running a Worker? Start Manhole within the
> process while it's running via a single WAMP call.
>
>
>
> https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1
>
>
>
> Manhole. Another goodie of Twisted;) Love it.
>
>
>
> In fact, I would go as far as saying: without Twisted (and Python), it
> would have been simply impossible for us to get so far - with limited dev
> resources.
>
>
>
> Cheers,
>
> /Tobias
>
>
>
>
>
> *Von:* twisted-python-bounces at twistedmatrix.com [mailto:
> twisted-python-bounces at twistedmatrix.com] *Im Auftrag von *Glyph
> *Gesendet:* Donnerstag, 5. Juni 2014 05:40
> *An:* Twisted general discussion
> *Betreff:* Re: [Twisted-Python] Announcing Crossbar.io
>
>
>
> Congrats on launching this, Tobias!
>
>
>
> On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de>
> wrote:
>
>
>
> Technically, Crossbar.io has a multi-process architecture with controller
> and worker processes,
> which lets use scale up on multi-core. We also prepared things to add
> scale-out on multi-node.
>
>
>
> Awesome, more people making use of the power of spawnProcess and
> event-driven process management is long overdue :-D.
>
>
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140612/13964b0f/attachment-0002.html>

From tobias.oberstein at tavendo.de  Thu Jun 12 10:24:38 2014
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Thu, 12 Jun 2014 09:24:38 -0700
Subject: [Twisted-Python] Announcing Crossbar.io
In-Reply-To: <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>
References: <634914A010D0B943A035D226786325D44478B2CD6B@EXVMBX020-12.exch020.serverdata.net>
 <3D8B93D6-5D60-4089-A8A2-C6FB20C6C098@twistedmatrix.com>
 <634914A010D0B943A035D226786325D44478B2CD96@EXVMBX020-12.exch020.serverdata.net>
 <CAFKh6jB=2o45g-Yf5uXWYbORSS7zQusHR783=x3LLrX7sGArmA@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D44478C3B62C@EXVMBX020-12.exch020.serverdata.net>

Hi Tom,

thanks alot for feedback! The intro and docs lack - incorporating the expl. from the post .. good idea (https://github.com/crossbario/crossbar/issues/70)

In the meantime, here is a different attempt at "explaining things" (the "why should I care" ..)

http://wamp.ws/why/

It's still more abstract than Sam's post .. but it provides a nice intro to WAMP.

And the Wiki is also improving (https://github.com/crossbario/crossbar/wiki#quick-start). Well. Docs are hard.

Cheers,
/Tobias



Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Tom Cocagne
Gesendet: Donnerstag, 12. Juni 2014 16:52
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Tobias,
May I suggest that you incorporate most of Sam's guest post at the top of Crossbar's README file? I spent about ten minutes looking through the docs on GitHub trying to answer the question "what is it and why should I care?". I'd just about given up thinking it was marginally cool but probably irrelevant to me when I took a chance on the blog post. The system Sam describes is awesome, it can solve some of my major pain-points right now, and it's something I can't wait to get started with. I'd have completely missed out on Crossbar if it weren't for his post and I think you'll have better luck recruiting users and developers if you include that content right up front on your project's main page.
Tom

On Thu, Jun 5, 2014 at 6:00 AM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:
Hi Glyph,

The process support in Twisted is just awesome! It is well designed and robust across platforms. Both are _big_ things we really depend on.

And yes, the process management and monitoring in Crossbar is really dynamic: means, it is exposed via WAMP/API _itself_. E.g. WAMP PubSub events fire on process lifecycle, and processes can be managed via WAMP calls:

https://github.com/crossbario/crossbar/wiki/Management-API

Want to debug an app component running a Worker? Start Manhole within the process while it's running via a single WAMP call.

https://github.com/crossbario/crossbar/wiki/Management-API#manhole-1

Manhole. Another goodie of Twisted;) Love it.

In fact, I would go as far as saying: without Twisted (and Python), it would have been simply impossible for us to get so far - with limited dev resources.

Cheers,
/Tobias


Von: twisted-python-bounces at twistedmatrix.com<mailto:twisted-python-bounces at twistedmatrix.com> [mailto:twisted-python-bounces at twistedmatrix.com<mailto:twisted-python-bounces at twistedmatrix.com>] Im Auftrag von Glyph
Gesendet: Donnerstag, 5. Juni 2014 05:40
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Announcing Crossbar.io

Congrats on launching this, Tobias!

On Jun 4, 2014, at 3:21 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:

Technically, Crossbar.io has a multi-process architecture with controller and worker processes,
which lets use scale up on multi-core. We also prepared things to add scale-out on multi-node.

Awesome, more people making use of the power of spawnProcess and event-driven process management is long overdue :-D.

-glyph

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com<mailto:Twisted-Python at twistedmatrix.com>
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140612/f06a383e/attachment-0002.html>

From twisted-python at 2xlp.com  Thu Jun 12 12:35:11 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 12 Jun 2014 14:35:11 -0400
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
 <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
Message-ID: <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>


On Jun 12, 2014, at 1:13 AM, Glyph wrote:

> alchimia is not a re-implementation or a separate sqlalchemy package.  It *is* sqlalchemy; it's just a slight extension for integration sqlalchemy operations with the Twisted main loop.

Yeah, I get that.  I'm really excited for it.

I use the declarative method (orm) for setting up the structure -- even when not using the ORM / Session.  It's just easier to write classes and maintain a single package for ORM & non-orm usage by using the ORM to set up the metadata.

there's an unaddressed ticket about that in the alchemia package.  

i also noticed the line "Some methods simply haven't been implemented yet. If you file a bug, we'll implement them! "

looking through the source and docs, there seemed to be no savepoint/begin_nested support yet.  

this looks like the package I want in the future -- i'm just uneasy about what might/might not be supported, on top of the migration work.    

the buildbot option looks like a better alternative for now -- we don't incur much more technical debt, and free up more time for a proper solution later.


From glyph at twistedmatrix.com  Fri Jun 13 01:27:23 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 13 Jun 2014 00:27:23 -0700
Subject: [Twisted-Python] adbapi.ConnectionPool - reconnecting to
	postgresql
In-Reply-To: <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>
References: <E058767D-FDB8-4CD4-A8E9-D5E3672F460D@2xlp.com>
 <5397563F.20706@imperial.ac.uk>
 <CAJtE5vTD7HrHwsUphSA88jBbOb=QR6UcDVTgZvA8cOfxQneg7w@mail.gmail.com>
 <D449EC29-425B-4A61-B0D2-20DDB64A37C9@twistedmatrix.com>
 <BBE229BD-2BA6-40B9-83C4-978B73360337@2xlp.com>
 <2620BC35-295B-4D99-A03D-30516D280997@twistedmatrix.com>
 <3DCAA4E8-CB2B-4A35-9C58-71617E884988@2xlp.com>
Message-ID: <D0CF10DF-BEAC-4BEE-B297-A18E832535D0@twistedmatrix.com>


On Jun 12, 2014, at 11:35 AM, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:

> this looks like the package I want in the future -- i'm just uneasy about what might/might not be supported, on top of the migration work.    

This is understandable; alchimia is definitely a bit raw.  I'd just encourage you to actually file those bugs and participate in its community.  Unless some interested parties like you actually start doing that, it will just languish in this state forever :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140613/7ddb3805/attachment-0002.html>

From pratik.prajapati12 at gmail.com  Sat Jun 14 06:48:36 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sat, 14 Jun 2014 18:18:36 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a machine
Message-ID: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>

Hi,

I am implementing a code through which i have to get devices connected to
all network interfaces on my machine and list them .

For this, i am first getting the ip of all network interfaces and then
sending m-search command on them.

After 2.5 seconds port is stopped to listen.

But it is giving me some assertion error. (I am connected to 2 interfaces
-ethernet and wifi)

`Code:`

    class Base(DatagramProtocol):
        """ Class to send M-SEARCH message to devices in network and
receive datagram
            packets from them
        """
        SSDP_ADDR = "239.255.255.250"
        SSDP_PORT = 1900
        MS = "M-SEARCH * HTTP/1.1\r\nHOST: {}:{}\r\nMAN:
'ssdp:discover'\r\nMX: 2\r\nST: ssdp:all\r\n\r\n".format(SSDP_ADDR,
SSDP_PORT)

    def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        ports = []
        for address in self.addresses:
            ports.append(reactor.listenUDP(0, self, interface=address))

        for port in ports:
            for num in range(4):
                port.write(Base.MS, (Base.SSDP_ADDR,Base.SSDP_PORT))
            reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait
margin


    def stopMsearch(self, port):
        """ Stop listening on port
        """
        port.stopListening()


`Error:`
    Traceback (most recent call last):
  File "work\find_devices.py", line 56, in sendMsearch
 ports.append(reactor.listenUDP(0, self, interface=address))
  File "C:\Python27\lib\site-packages\twisted\internet\posixbase.py", line
374, in listenUDP
 p.startListening()
  File "C:\Python27\lib\site-packages\twisted\internet\udp.py", line 172,
in startListening
 self._connectToProtocol()
  File "C:\Python27\lib\site-packages\twisted\internet\udp.py", line 210,
in _connectToProtocol
 self.protocol.makeConnection(self)
  File "C:\Python27\lib\site-packages\twisted\internet\protocol.py", line
709, in makeConnection
 assert self.transport == None
AssertionError



This code worked:

def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        address = socket.gethostbyname(socket.gethostbyname())
        port = reactor.listenUDP(0, self, interface=address)
        for num in range(4):
                port.write(Base.MS, (Base.SSDP_ADDR,Base.SSDP_PORT))
        reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait margin




Please tell what's wrong in code mentioned in the start of this mail and
how to correct this.

I have also posted this code on stackoverflow , but didn't get any response
http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140614/9f337317/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Jun 14 08:27:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 14 Jun 2014 14:27:11 -0000
Subject: [Twisted-Python] send-msearch on all network interfaces of a
 machine
In-Reply-To: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
Message-ID: <20140614142711.6847.1772808746.divmod.xquotient.2@top>

On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>
>[snip]
>
>Please tell what's wrong in code mentioned in the start of this mail 
>and
>how to correct this.
>
>I have also posted this code on stackoverflow , but didn't get any 
>response
>http://stackoverflow.com/questions/24178580/send-m-search-packets-on- 
>all-network-interfaces-using-twisted-module-in-python

I posted an answer on stackoverflow.  I previously hadn't seen the 
question because it didn't have the `twisted` tag (I edited the question 
as well to replace the `twisted.internet` tag with the `twisted` tag). 
I suggest you use `twisted` for stackoverflow questions about Twisted in 
the future. :)

Jean-Paul



From pratik.prajapati12 at gmail.com  Sat Jun 14 12:23:37 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sat, 14 Jun 2014 23:53:37 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <20140614142711.6847.1772808746.divmod.xquotient.2@top>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
Message-ID: <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>

Thanks for the answer


On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:

> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>
>>
>> [snip]
>>
>>
>> Please tell what's wrong in code mentioned in the start of this mail and
>> how to correct this.
>>
>> I have also posted this code on stackoverflow , but didn't get any
>> response
>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>> all-network-interfaces-using-twisted-module-in-python
>>
>
> I posted an answer on stackoverflow.  I previously hadn't seen the
> question because it didn't have the `twisted` tag (I edited the question as
> well to replace the `twisted.internet` tag with the `twisted` tag). I
> suggest you use `twisted` for stackoverflow questions about Twisted in the
> future. :)
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140614/633e1746/attachment-0002.html>

From pratik.prajapati12 at gmail.com  Sat Jun 14 22:00:56 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Sun, 15 Jun 2014 09:30:56 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
Message-ID: <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>

Hi Jean-Paul,

I have added a comment on your answer on stackoverflow, please respond
there.


On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Thanks for the answer
>
>
> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>
>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>
>>>
>>> [snip]
>>>
>>>
>>> Please tell what's wrong in code mentioned in the start of this mail and
>>> how to correct this.
>>>
>>> I have also posted this code on stackoverflow , but didn't get any
>>> response
>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>> all-network-interfaces-using-twisted-module-in-python
>>>
>>
>> I posted an answer on stackoverflow.  I previously hadn't seen the
>> question because it didn't have the `twisted` tag (I edited the question as
>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>> future. :)
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140615/192101f6/attachment-0002.html>

From trac at twistedmatrix.com  Sun Jun 15 00:05:15 2014
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 15 Jun 2014 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1402812315.6.6081696545311941343@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140615/b5ced615/attachment-0002.html>

From jim at rainville.net  Sun Jun 15 09:23:26 2014
From: jim at rainville.net (Jim Rainville)
Date: Sun, 15 Jun 2014 08:23:26 -0700
Subject: [Twisted-Python] twistd caching method calls?
Message-ID: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>

Hi - 

I have a very simple twisted service that reads a temperature sensor. A client can ask for the current temperature via JSON and as a result the service will read the temperature sensor and respond with the current temp. This works great if I run it as a python module from the command line but if I run it as a service with twistd it seems to read the temp on startup then the temp seems to be cached as it never changes. I have print calls in the getTemp method right before it calls into the hardware library, they are getting called in both cases - but the return from the call never changes in the twistd case. Any ideas?

Also, I have another service (not twisted) that runs in the background that periodically reads the temp and responds to temperature changes. This is working fine so I’m pretty sure the problem is isolated to twistd.

Thanks. 
Jim




From exarkun at twistedmatrix.com  Sun Jun 15 10:14:45 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 15 Jun 2014 16:14:45 -0000
Subject: [Twisted-Python] twistd caching method calls?
In-Reply-To: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>
References: <2C4AE8DD-6EB3-4433-9270-73DF4B61089F@rainville.net>
Message-ID: <20140615161445.6847.77016916.divmod.xquotient.6@top>

On 03:23 pm, jim at rainville.net wrote:
>Hi -
>
>I have a very simple twisted service that reads a temperature sensor. A 
>client can ask for the current temperature via JSON and as a result the 
>service will read the temperature sensor and respond with the current 
>temp. This works great if I run it as a python module from the command 
>line but if I run it as a service with twistd it seems to read the temp 
>on startup then the temp seems to be cached as it never changes. I have 
>print calls in the getTemp method right before it calls into the 
>hardware library, they are getting called in both cases - but the 
>return from the call never changes in the twistd case. Any ideas?
>
>Also, I have another service (not twisted) that runs in the background 
>that periodically reads the temp and responds to temperature changes. 
>This is working fine so I’m pretty sure the problem is isolated to 
>twistd.

There's no intentional caching of this sort added automatically by 
`twistd` or by any other part of Twisted.  Can you share your code? 
Someone might spot what's going on.

As an aside, sounds like a good project - it sounds similar to something 
I've been working on.  Can you share your code? ;)

Jean-Paul



From meejah at meejah.ca  Sun Jun 15 10:19:14 2014
From: meejah at meejah.ca (meejah)
Date: Sun, 15 Jun 2014 20:19:14 +0400
Subject: [Twisted-Python] ANN: txtorcon 0.10.0
Message-ID: <86fvj6ywl9.fsf@atlantis.meejah.ca>


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm excited to announce txtorcon 0.10.0 which adds support for
Twisted's endpoint strings.

This means that ANY Twisted program that uses endpoints can accept
"onion:" strings to bring up a hidden services easily (by launching a
new Tor instance). Typically, no code changes to the application
should be needed (just "pip install txtorcon").

"twistd" supports endpoints, so for example to serve some Web content
from ~/public_html as a hidden-serivce, we can do this (with txtorcon
installed):

   twistd web --port onion:80 --path ~/public_html

Some examples of other valid "onion:" endpoint strings:

   onion:80:hiddenServiceDir=/dev/shm/hidsrv
   onion:80:controlPort=9050:hiddenServiceDir=/srv/hidden

The first allows specifying existing hidden service keys and the
second says to connect to an already-running Tor instance.

Thanks to David Stainton (dawuud) for the initial pull-request (and
continued collaboration) that made this happen. There is a complete
demonstration of the power of this Fully Operational endpoint-station
here:

   https://txtorcon.readthedocs.org/en/latest/howtos.html#endpoints-enable-tor-with-any-twisted-service

You can download the release from PyPI or GitHub (or of course use
"pip install txtorcon"):

   https://pypi.python.org/pypi/txtorcon/0.10.0
   https://github.com/meejah/txtorcon/releases/tag/v0.10.0

sha256sum reports:

   910ff3216035de0a779cfc167c0545266ff1f26687b163fc4655f298aca52d74  txtorcon-0.10.0-py2-none-any.whl
   c93f3d0f21d53c6b4c1521fc8d9dc2c9aff4a9f60497becea207d1738fa78279  txtorcon-0.10.0.tar.gz

thanks,
meejah
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQEcBAEBAgAGBQJTnTM5AAoJEMJgKAMSgGmnB5EIAIJACHhd7PEWYfCZmB8lL1pr
J4rrhUuXD1iI7zJJL/rmS/SZLL+34JoKke6iQsBRGYzU0GRK2JQkFAeMq++AMdMu
QvoTg745OhnMSbZyCyS6buN/NhAVcmD3GYI9h8TK60jfUPEFn7+sDstMG4OePdgq
X0QQHBuJq9XtDwEmRWFHq2Aht//7J2DUliPPjtwT3C4FhPT5pXxasvfQA4jOYxsO
jTja6UE4/4TnonV5gB/chijp60cKvVxFQi86mKuNnVaKTZu+QCZFJtXkr/DbRSxv
CJ+z7jJ9s8xhfQ5Nkv9pkVAreH6w9bemc/iijKlZmQGYvLBTsvISPATyWGtn1f4=
=wIVZ
-----END PGP SIGNATURE-----



From exarkun at twistedmatrix.com  Sun Jun 15 19:00:11 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 16 Jun 2014 01:00:11 -0000
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
Message-ID: <20140616010011.6847.947966980.divmod.xquotient.21@top>

On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>Hello,
>
>I was just wondering what the current status of the effort to upgrade 
>trac on twistedmatrix.com is.

Hello again,

Lacking any updates on this, I make some adjustments today. 
Authenticated users no longer automatically have permission to create or 
modify tickets.  I imagine the next step in this direction would be to 
communicate this information to users automatically and give them 
instructions about how to be granted these permissions.  If anyone has 
any suggestions about how this could be done, they would be quite 
welcome.

And if anyone wants to continue the upgrade effort then of course that 
would be appreciated as well.

Thanks,
Jean-Paul



From adi at roiban.ro  Mon Jun 16 14:34:30 2014
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 16 Jun 2014 23:34:30 +0300
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140616010011.6847.947966980.divmod.xquotient.21@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <20140616010011.6847.947966980.divmod.xquotient.21@top>
Message-ID: <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>

On 16 June 2014 04:00,  <exarkun at twistedmatrix.com> wrote:
> On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>>
>> Hello,
>>
>>
>> I was just wondering what the current status of the effort to upgrade trac
>> on twistedmatrix.com is.
>
>
> Hello again,
>
> Lacking any updates on this, I make some adjustments today. Authenticated
> users no longer automatically have permission to create or modify tickets.
> I imagine the next step in this direction would be to communicate this
> information to users automatically and give them instructions about how to
> be granted these permissions.  If anyone has any suggestions about how this
> could be done, they would be quite welcome.
>
> And if anyone wants to continue the upgrade effort then of course that would
> be appreciated as well.
>
> Thanks,
> Jean-Paul
>
Does the Trac migration has any coordinator?
What needs to be done?
I added Misu to CC. He is the sysadmin of the project on which I work
and he is willing to help.

-- 
Adi Roiban



From glyph at twistedmatrix.com  Tue Jun 17 16:25:57 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 17 Jun 2014 15:25:57 -0700
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <20140616010011.6847.947966980.divmod.xquotient.21@top>
 <CAFycZ9ejz5yCT-1-kXUavhFh2yNSthHGRL6rwW=26r=DU1pjoQ@mail.gmail.com>
Message-ID: <12CDDBC4-C6C0-4A4A-ADFA-BE5C5F2FAE8A@twistedmatrix.com>


On Jun 16, 2014, at 1:34 PM, Adi Roiban <adi at roiban.ro> wrote:

> On 16 June 2014 04:00,  <exarkun at twistedmatrix.com> wrote:
>> On 23 May, 01:11 pm, exarkun at twistedmatrix.com wrote:
>>> 
>>> Hello,
>>> 
>>> 
>>> I was just wondering what the current status of the effort to upgrade trac
>>> on twistedmatrix.com is.
>> 
>> 
>> Hello again,
>> 
>> Lacking any updates on this, I make some adjustments today. Authenticated
>> users no longer automatically have permission to create or modify tickets.
>> I imagine the next step in this direction would be to communicate this
>> information to users automatically and give them instructions about how to
>> be granted these permissions.  If anyone has any suggestions about how this
>> could be done, they would be quite welcome.
>> 
>> And if anyone wants to continue the upgrade effort then of course that would
>> be appreciated as well.
>> 
>> Thanks,
>> Jean-Paul
>> 
> Does the Trac migration has any coordinator?
> What needs to be done?
> I added Misu to CC. He is the sysadmin of the project on which I work
> and he is willing to help.

Hi Adi, Mișu,

Nobody's really in charge of this per se, but David Reid did some work on it earlier.

He and I will be trying to do some work on it this Thursday to move it forward and particularly to put more information on the relevant PR <https://github.com/twisted-infra/trac-config/pull/10> to try to make it possible for folks like yourself to contribute.

If you'd like to be around in #twisted-admin on Freenode when we're doing that (starting approximately 10AM PST) we'll try to be there.

Thanks for your interest,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140617/31fbe20b/attachment-0002.html>

From twisted-python at 2xlp.com  Wed Jun 18 16:59:29 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 18 Jun 2014 18:59:29 -0400
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
Message-ID: <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>


On May 29, 2014, at 9:13 AM, Hynek Schlawack wrote:

> So what *is* the status?  The current state is really hardly bearable; the spam is taking completely over. :(  Wasn’t there a successful dry run at the PyCon sprints?

I recently had a similar problem.  I didn't realize a "one click install" on my shared provider for a private SVN repo created a public trac instance.  there were nearly 1MM spam tickets in a 700MB sqlite database

I ended up killing all tickets; but was able to use a raw sqlite3 connection on the db file to get in there and analyze the tickets ( and delete them )

Trac 1.0 has a spam filter -- http://trac.edgewall.org/wiki/SpamFilter

Once upon a time, there was a mod_security plugin called ScallyWhack that was dedicated to Trac spam.  It was officially supported by mod_security and still has a reserved rules range. unfortunately, it's disappeared off the net.

I had to take my trac instance offline while working.  my install was "known" to a few dozen botnets, and they kept hitting it.  everything would lock up.  if you can find any mod_security integration, I would strongly suggest using it -- because you can have the rules trigger an integration with fail_2_ban and just keep ip addresses/ranges from ever touching trac.







From exarkun at twistedmatrix.com  Wed Jun 18 18:43:45 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 00:43:45 -0000
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
Message-ID: <20140619004345.6847.655180343.divmod.xquotient.29@top>

On 18 Jun, 10:59 pm, twisted-python at 2xlp.com wrote:
>
>On May 29, 2014, at 9:13 AM, Hynek Schlawack wrote:
>>So what *is* the status?  The current state is really hardly bearable; 
>>the spam is taking completely over. :(  Wasn’t there a successful dry 
>>run at the PyCon sprints?
>
>I recently had a similar problem.  I didn't realize a "one click 
>install" on my shared provider for a private SVN repo created a public 
>trac instance.  there were nearly 1MM spam tickets in a 700MB sqlite 
>database
>
>I ended up killing all tickets; but was able to use a raw sqlite3 
>connection on the db file to get in there and analyze the tickets ( and 
>delete them )
>
>Trac 1.0 has a spam filter -- http://trac.edgewall.org/wiki/SpamFilter
>
>Once upon a time, there was a mod_security plugin called ScallyWhack 
>that was dedicated to Trac spam.  It was officially supported by 
>mod_security and still has a reserved rules range. unfortunately, it's 
>disappeared off the net.
>
>I had to take my trac instance offline while working.  my install was 
>"known" to a few dozen botnets, and they kept hitting it.  everything 
>would lock up.  if you can find any mod_security integration, I would 
>strongly suggest using it -- because you can have the rules trigger an 
>integration with fail_2_ban and just keep ip addresses/ranges from ever 
>touching trac.

This is a nice thought but I think it's entirely misguided.

Overcoming simplistic, automated obstacles is what spammers have been 
learning how to do extremely well for several decades now.  If you 
choose to participate in this arms race with them, you can win by put in 
slightly more effort than them - from now until forever.

Considering the Twisted project apparently lacks even the ability to put 
a slight bit of effort even once (at least, not without gathering its 
strength to do so for two or three months first), this doesn't strike me 
as likely to happen.

Also, Apache isn't used anywhere on twistedmatrix.com so it would be 
rather difficult to deploy anything based on mod_security anyway.

Jean-Paul



From exarkun at twistedmatrix.com  Thu Jun 19 05:38:09 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 11:38:09 -0000
Subject: [Twisted-Python] Known bug with twistd log rotation
In-Reply-To: <53A0652F.1030804@riehl.io>
References: <53987026.1000106@riehl.io>
 <20140611155216.7208.1046483696.divmod.xquotient.0@top>
 <256296806.161301.1402503747127.open-xchange@app03.ox.hosteurope.de>
 <20140611175014.7208.1715013030.divmod.xquotient.16@top>
 <53A0652F.1030804@riehl.io>
Message-ID: <20140619113809.6847.263270969.divmod.xquotient.31@top>

On 17 Jun, 03:56 pm, max at riehl.io wrote:
>Hi,
>
>I finally found the time to do some work on the ticket but have been 
>unable to find out how to attach a patch so far.
>I caught some discussion about a trac change that requires new users to 
>do "something" before they are able to make changes to tickets.
>
>Maybe you can brief me about the required steps? I'm also willing to 
>wait if some documentation is on the way.
>
>
>I also noted a few problems while trying to contribute (wrong 
>instructions, hanging tests, etc) and would be happy to help make this 
>better, but I'm unsure where to start.

Hi Max,

Please keep discussion on the mailing list.  I didn't even see your 
email until this morning.

The required steps are simple: contact a trac admin (mail the list or 
join #twisted-dev on freenode), convince them you aren't a spammer, and 
tell them your trac username.

I think you only need to complete the third step at this point.

I'm waiting for someone to volunteer to update some trac pages to 
include this information.  I looked at some templates and decided I 
didn't have enough time to figure out how they work.

Jean-Paul



From glyph at twistedmatrix.com  Thu Jun 19 11:38:05 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 19 Jun 2014 10:38:05 -0700
Subject: [Twisted-Python] Trac downtime
Message-ID: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>

Hello Twisted users,

David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.

While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).

-glyph




From twisted-python at 2xlp.com  Thu Jun 19 13:08:35 2014
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Thu, 19 Jun 2014 15:08:35 -0400
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140619004345.6847.655180343.divmod.xquotient.29@top>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <C079A90C-4F26-4AE7-AF2A-2FD68D808B0A@2xlp.com>
 <20140619004345.6847.655180343.divmod.xquotient.29@top>
Message-ID: <A8D62A83-D06F-4BDD-A92F-B8FECE7C3ECA@2xlp.com>


On Jun 18, 2014, at 8:43 PM, exarkun at twistedmatrix.com wrote:

> This is a nice thought but I think it's entirely misguided.
> 
> Overcoming simplistic, automated obstacles is what spammers have been learning how to do extremely well for several decades now.  If you choose to participate in this arms race with them, you can win by put in slightly more effort than them - from now until forever.

I generally agree.  Spam will always get through.  But if you put a tiny amount of effort in, you can effectively block 99% of spam; and make working with that 1% much easier.  There are a lot of smart spammers; there are more stupid and lazy ones.

Spammers are generally smart at innovating over long periods of time, but their short-term attacks are pretty bad.  If something gets noticed as a possible spam target by a network of compromised machines, the attacks are relentless.  One particular IP block hits a particular trac install of mine  every 5 seconds to make new tickets and check old ones -- even weeks after I configured their entire network to 403.    If you keep some rules updated, and can integrate fail_2_ban, that entire process is automated. 

> Also, Apache isn't used anywhere on twistedmatrix.com so it would be rather difficult to deploy anything based on mod_security anyway.

I don't use Apache either.  I use nginx as a frontend gateway to pass back to Twisted / Pyramid / etc.  There's been mod_security support for nginx ( java and iis too ) for a few years.

But trac is going through TwistedWeb/11.1.0, so that point is moot.

But if you ever run a project that uses nginx on the front, you can use mod_security on it.  The install is a bit weird, but it works.  

... 

In any event, turning off trac and using raw sql queries was the best route to managing the trac database.

If you pay attention to your server logs to see which ip addresses hit the "create" and "view" tickets a lot, you'll probably note a few IP blocks that have seem to have a "pair" of spiders working together on different machines.  one creates spam, the other harvests tickets for email addresses.  

there were a handful of servers in the 96.47.2xx.x space responsible for most of my spam.  i'd say probably 80%.  

The specific ips all ranked high on the Honeypot blacklist with hundreds of thousands of reports -- http://www.projecthoneypot.org/list_of_ips.php










-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140619/5d0d258e/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Jun 19 17:31:21 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Thu, 19 Jun 2014 23:31:21 -0000
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <20140619233121.6847.905913139.divmod.xquotient.42@top>

On 05:38 pm, glyph at twistedmatrix.com wrote:
>Hello Twisted users,
>
>David Reid and I are attempting to upgrade our production Trac instance 
>to version 1.0.1 today, in order to address the spam and many other 
>issues.
>
>While we will attempt to minimize the downtime, knowing Trac, you 
>should expect at least 6 hours of downtime beginning as soon as 20 
>minutes (18:00 UTC).

Looks like some cool stuff happened.  Thanks!

I'm not sure if you're done or not.  In case not, here are some things I 
noticed:

The front page says "wiki:WikiStart" at the top of the wiki content.
Other pages similarly have their own name at the top as well.

The tabs on "Code Examples" on the front page don't work (clicking them 
doesn't switch to a different example)

The "Owner" dropdown list on the ticket page is quite short.  This is 
rather nice, but it is maybe slightly too short. :)

The IDs for entries in the various RSS feeds have changed (so the last N 
entries appear as duplicates).

Again, thanks!

Jean-Paul



From lists at collab.nl  Thu Jun 19 18:04:34 2014
From: lists at collab.nl (Thijs Triemstra)
Date: Fri, 20 Jun 2014 02:04:34 +0200
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <53A37A92.20607@collab.nl>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Can you install pytz on the trac instance as well, it improves the
options on the https://twistedmatrix.com/trac/prefs/datetime page.

Cheers,

Thijs

On 19-06-14 19:38, Glyph Lefkowitz wrote:
> Hello Twisted users,
> 
> David Reid and I are attempting to upgrade our production Trac
> instance to version 1.0.1 today, in order to address the spam and
> many other issues.
> 
> While we will attempt to minimize the downtime, knowing Trac, you
> should expect at least 6 hours of downtime beginning as soon as 20
> minutes (18:00 UTC).
> 
> -glyph
> 
> 
> _______________________________________________ Twisted-Python
> mailing list Twisted-Python at twistedmatrix.com 
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)

iEYEARECAAYFAlOjeo0ACgkQBRbMGagbo3n0AACfYqoD+BRkbCEVVw0XJ/iUtMdK
AeQAn2f0XyM8EV4RAXmr7SKMqVm94IZr
=4Np4
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Thu Jun 19 20:02:41 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 19:02:41 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <20140619233121.6847.905913139.divmod.xquotient.42@top>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <20140619233121.6847.905913139.divmod.xquotient.42@top>
Message-ID: <08176CC9-F9B0-4766-89C8-6F061B20081F@twistedmatrix.com>

On Jun 19, 2014, at 4:31 PM, exarkun at twistedmatrix.com wrote:

> On 05:38 pm, glyph at twistedmatrix.com wrote:
>> Hello Twisted users,
>> 
>> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
>> 
>> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> Looks like some cool stuff happened.  Thanks!

You're welcome.  This was really like 99% David, I just helped push things towards a conclusion ;).

> I'm not sure if you're done or not.  In case not, here are some things I noticed:

Sorry I didn't send out an announcement when we were finished.  It was all pretty exhausting :-).

> The front page says "wiki:WikiStart" at the top of the wiki content.
> Other pages similarly have their own name at the top as well.

This is a new feature of Trac 1.0, a breadcrumbs bar, which we don't have nice styling for yet.  We should probably add some CSS for it.  (Notice "wiki" is a link to WikiStart from all pages.)

> The tabs on "Code Examples" on the front page don't work (clicking them doesn't switch to a different example)

I imagine you have an adblocker or a tracking-blocker or something like that.  The tabs actually work fine, unless you block google analytics, which causes a JavaScript which I believe halts further script execution on the page.  We should add a try/catch around the thing that loads the analytics thing so it doesn't disrupt further script execution.

> The "Owner" dropdown list on the ticket page is quite short.  This is rather nice, but it is maybe slightly too short. :)

Augh.  That definitely looks too short.  I have no idea why it looks that way.  I don't think it looked that way when I examined dreid's test instance.  Any ideas?

> The IDs for entries in the various RSS feeds have changed (so the last N entries appear as duplicates).

I don't think there's anything we can do about that.

> Again, thanks!

Thanks for looking into it.  Now that we're over this huge hurdle, hopefully we can address issues like these more quickly now.

One thing you didn't notice is the weird description on the styling in the "Description" box in the ticket-edit area, we should fix that as well.

-glyph




From glyph at twistedmatrix.com  Thu Jun 19 21:34:52 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 20:34:52 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <53A37A92.20607@collab.nl>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <53A37A92.20607@collab.nl>
Message-ID: <5AE2BDC8-02B6-4716-B330-8CED75603624@twistedmatrix.com>

On Jun 19, 2014, at 5:04 PM, Thijs Triemstra <lists at collab.nl> wrote:

> Can you install pytz on the trac instance as well, it improves the
> options on the https://twistedmatrix.com/trac/prefs/datetime page.

Would you mind submitting this as a pull request to <https://github.com/twisted-infra/trac-config>?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140619/0c567025/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Jun 19 21:37:13 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 19 Jun 2014 20:37:13 -0700
Subject: [Twisted-Python] Status of trac upgrade
In-Reply-To: <20140530162857.GA35270@darkbeer.org>
References: <20140523131135.5287.1046664963.divmod.xquotient.53@top>
 <439D634B-3C9F-4256-8BEB-7770073AFCEB@ox.cx>
 <20140529135529.GA23375@danio.home>
 <CAJtE5vRmskDrkx1pYVWj7+9mkuy_bZO6mjR0_fz4Dv9y4Te7dA@mail.gmail.com>
 <1A31C170-43AD-4A3F-B1BF-9AC4E882093B@twistedmatrix.com>
 <20140530162857.GA35270@darkbeer.org>
Message-ID: <56151815-0473-4D8C-AF04-FE1BA3034EE8@twistedmatrix.com>


On May 30, 2014, at 9:28 AM, Amar Takhar <verm at darkbeer.org> wrote:

> On 2014-05-29 09:56 -0700, Glyph wrote:
>> 
>> Thanks for this input, Dustin.  It is actually _super_ useful, for me at least,
>> to learn that there is in fact a light at the end of this tunnel :).
> 
> I'm happy to give any help that's required if you need a hand upgrading trac and 
> migrating to git.  I've done it quite a few times.
> 
> Our spam problem is now completely under control thankfully.  We have some 
> custom plugins to help with this.

Hi Amar,

We've upgraded Trac, finally, and now that that blocker is resolved, I think it might be time to start talking about migrating to Git.

Would you mind joining us in #twisted-admin on Freenode to discuss this?  The relevant folks tend to be around there during the intersection between EST and PST work hours :).

-glyph




From hawkowl at atleastfornow.net  Fri Jun 20 03:40:45 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Fri, 20 Jun 2014 17:40:45 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>

Hi,

The web server version string says Twisted 11.1 — maybe we should upgrade that too? :)

-hawkowl

On 20 Jun 2014, at 1:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:

> Hello Twisted users,
> 
> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
> 
> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> -glyph
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140620/8cdd8952/attachment.sig>

From mark at catseye.org  Fri Jun 20 16:22:57 2014
From: mark at catseye.org (Mark Montague)
Date: Fri, 20 Jun 2014 18:22:57 -0400
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
Message-ID: <53A4B441.1040201@catseye.org>

We're writing a Twisted 14.0.0 application (on Python 2.7.7, Mac OS 
10.9.3) that uses Conch as an SSH client; this is working fine. However, 
we have the requirement that in an advanced mode of operation for power 
users that the application take advantage of OpenSSH connection 
multiplexing over an already-established-by-the-user OpenSSH 
ControlMaster session (via an OpenSSH ControlPath socket) instead of 
using Conch.

OpenSSH requires its new session command and forwarded file descriptors 
to be sent over the socket in a very particular way: the command must be 
sent first, followed by message with a '\0' byte with each forwarded 
file descriptor.  OpenSSH ignores the '\0' for each file descriptor, 
extracting the file descriptors themselves from the message's ancillary 
data.

The following will not work because none of the calls to write() send 
their data until control is returned to the reactor, while 
sendFileDescriptor() queues up the descriptors such that they get sent 
them with the very next data that is sent -- which wind up being the 
first three bytes of the command rather than the three '\0' bytes.

class OpenSSHMuxProtocol( protocol.Protocol ):
     # built via reactor.connectUNIX()
     def sendCommand( self, command ):
         # Does not work:
         self.transport.write( command )
         self.transport.sendFileDescriptor( sys.stdin.fileno() )
         self.transport.write( '\0' ) # payload for the stdin file descriptor
         self.transport.sendFileDescriptor( sys.stdout.fileno() )
         self.transport.write( '\0' ) # payload for the stdout file descriptor
         self.transport.sendFileDescriptor( sys.stdout.fileno() )
         self.transport.write( '\0' ) # payload for the stderr file descriptor
         # ^^^ Does not work


But this next solution /does/ work:

from socket import SOL_SOCKET
from twisted.python.sendmsg import SCM_RIGHTS, send1msg

class OpenSSHMuxProtocol( protocol.Protocol ):
     # built via reactor.connectUNIX()
     def sendCommand( self, command ):
         self.transport.writeSomeData( command ) # data is sent over the socket immediately
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdin.fileno() ) ) ] )
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdout.fileno() ) ) ] )
         send1msg( self.transport.socket.fileno(), "\0", 0,
             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stderr.fileno() ) ) ] )


My questions are:

Is it bad to bypass the reactor and send data directly/immediately this 
way using writeSomeData() and send1msg()?  Note that sendCommand() 
actually gets called in response to a OpenSSHMuxProtocol.dataReceived() 
event.  If bypassing the reactor this way is bad, how bad is it and what 
are the consequences or effects?

Is there a better way to get a working solution?  I think I'd need some 
way to guarantee that the write of the command was actually sent to the 
OpenSSH server before the file descriptors are forwarded -- for example, 
if a Deferred was used whose first callback wrote the command and whose 
second callback forwarded the descriptors, would a call to the reactor 
to actually sent the command be guaranteed between the two callbacks?

Any information and/or advice is appreciated!

-- 
   Mark Montague
   mark at catseye.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140620/e653aea3/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Jun 20 18:43:22 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 20 Jun 2014 17:43:22 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
Message-ID: <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>

On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> Hi,
> 
> The web server version string says Twisted 11.1 — maybe we should upgrade that too? :)


Sounds like somebody should send a PR to Braid? :-)

-glyph


From hawkowl at atleastfornow.net  Fri Jun 20 23:10:21 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sat, 21 Jun 2014 13:10:21 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
Message-ID: <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>

I was going to do that, but I do not understand where it is in braid :(

- hawkowl

On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:

> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> 
>> Hi,
>> 
>> The web server version string says Twisted 11.1 — maybe we should upgrade that too? :)
> 
> 
> Sounds like somebody should send a PR to Braid? :-)
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140621/7dd15033/attachment.sig>

From dstainton415 at gmail.com  Sat Jun 21 08:12:17 2014
From: dstainton415 at gmail.com (David Stainton)
Date: Sat, 21 Jun 2014 14:12:17 +0000
Subject: [Twisted-Python] twistedcat - twisted endpoint concatenator
Message-ID: <20140621141217.GA697@googlemail.com>



Greetings,

I was inspired by the "socat" CLI utility to write something similar called twistedcat.

https://github.com/david415/twistedcat
https://github.com/david415/twistedcat/blob/master/twistedcat/twistedcat.py

Obviously it should have the "cat" word in the name... so what do you suggest?
What do people think of this?
Do you have ascii art drawings of cats can use or suggestions for me to improve the code quality?
Right now I'm cleaning the code out of main() and creating an EndpointCombiner class
to encapsulate the endpoint pipe logic (c2c, s2s, c2s).

The reason I am very interested in improving the code to assist in pipe-lining endpoints is because it can be used by more than just this commandline tool. Any Twisted app wishing to create custom protocols can do so by pipe-lining endpoints. I think the API for this could be very easy to use.

socat has an enormous feature set that I am not sufficiently motivated to duplicate here.

http://www.dest-unreach.org/socat/doc/socat.html#ADDRESS_TYPES

It was really interesting for me to read about these socat address types... there are many of them.
Twisted has some of the same types... and in some cases they are even spelled the same.
I am interested in implementing some of these socat address types in Twisted, including a TUN endpoint and endpoint parser plugin.
I've played around with the new twisted pair TUN stuff... but I was using producers and consumers to make a VPN...
and as it turns out this task should be greatly simplified by using pipelined Twisted endpoints.

I've also been toying with the idea of writing an obfsproxy Twisted endpoint which would work similar to the txtorcon endpoint in that it would launch an external command... and then perform a tcp connect. obfsproxy can be launched in external mode and has several obfuscation protocols to choose from... some of which are very sophisticated. If someone actually had a good use case for obfuscating pipelined endpoint protocols then I would love to hear about it (besides the obvious VPN use-case)!

https://www.torproject.org/projects/obfsproxy

Twisted endpoint descriptor strings are just like socat address specifications... except that in socat the client and server endpoint types are in the same name space. Therefore twistedcat needs to know if the endpoint string is a server or client endpoint. It defaults to client unless -s or --server specifies it as a server endpoint string. Or do you dare suggest that it would be better to try clientFromString and then if that fails try serverFromString?

We've already created a Tor client endpoint/parser plugin (https://github.com/david415/txsocksx)
and a Tor Hidden Service endpoint/parser plugin (https://github.com/meejah/txtorcon)...
Obviously twistedcat doesn't know anything about Tor... because it's completely endpoint agnostic.

Here's my silly twistedcat Tor experimentations:

$ ./twistedcat.py -s stdio: -s onion:80:hiddenServiceDir=/home/human/hs

After running this one liner... I checked the contents of /home/human/hs/
and found my new onion address in the "hostname" file.
I used my Tor browser to send a request... and here we see twistedcat printed it to stdout via the stdio endpoint:

GET / HTTP/1.1
Host: ibce3yvjdb3mzcrq.onion
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive


And then there is this:

$ ./twistedcat.py tor:timaq4ygg2iegci7.onion:80 -s onion:80:hiddenServiceDir=/home/human/hs

Which of course proxies requests from my new onion to timaq4ygg2iegci7.onion... the onion address of the txtordoc documentation website.
But this is crazy... um how many hops is that exactly? 14? 15?


Cheers,

David


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20140621/374673a3/attachment.sig>

From exarkun at twistedmatrix.com  Sat Jun 21 08:24:15 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Jun 2014 14:24:15 -0000
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A4B441.1040201@catseye.org>
References: <53A4B441.1040201@catseye.org>
Message-ID: <20140621142415.6847.915570379.divmod.xquotient.58@top>

On 20 Jun, 10:22 pm, mark at catseye.org wrote:
>We're writing a Twisted 14.0.0 application (on Python 2.7.7, Mac OS 
>10.9.3) that uses Conch as an SSH client; this is working fine. 
>However, we have the requirement that in an advanced mode of operation 
>for power users that the application take advantage of OpenSSH 
>connection multiplexing over an already-established-by-the-user OpenSSH 
>ControlMaster session (via an OpenSSH ControlPath socket) instead of 
>using Conch.
>
>OpenSSH requires its new session command and forwarded file descriptors 
>to be sent over the socket in a very particular way: the command must 
>be sent first, followed by message with a '\0' byte with each forwarded 
>file descriptor.  OpenSSH ignores the '\0' for each file descriptor, 
>extracting the file descriptors themselves from the message's ancillary 
>data.
>
>The following will not work because none of the calls to write() send 
>their data until control is returned to the reactor, while 
>sendFileDescriptor() queues up the descriptors such that they get sent 
>them with the very next data that is sent -- which wind up being the 
>first three bytes of the command rather than the three '\0' bytes.
>
>class OpenSSHMuxProtocol( protocol.Protocol ):
>     # built via reactor.connectUNIX()
>     def sendCommand( self, command ):
>         # Does not work:
>         self.transport.write( command )
>         self.transport.sendFileDescriptor( sys.stdin.fileno() )
>         self.transport.write( '\0' ) # payload for the stdin file 
>descriptor
>         self.transport.sendFileDescriptor( sys.stdout.fileno() )
>         self.transport.write( '\0' ) # payload for the stdout file 
>descriptor
>         self.transport.sendFileDescriptor( sys.stdout.fileno() )
>         self.transport.write( '\0' ) # payload for the stderr file 
>descriptor
>         # ^^^ Does not work
>
>
>But this next solution /does/ work:
>
>from socket import SOL_SOCKET
>from twisted.python.sendmsg import SCM_RIGHTS, send1msg
>
>class OpenSSHMuxProtocol( protocol.Protocol ):
>     # built via reactor.connectUNIX()
>     def sendCommand( self, command ):
>         self.transport.writeSomeData( command ) # data is sent over the 
>socket immediately
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdin.fileno() ) 
>) ] )
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stdout.fileno() 
>) ) ] )
>         send1msg( self.transport.socket.fileno(), "\0", 0,
>             [ ( SOL_SOCKET, SCM_RIGHTS, pack( 'i', sys.stderr.fileno() 
>) ) ] )
>
>
>My questions are:
>
>Is it bad to bypass the reactor and send data directly/immediately this 
>way using writeSomeData() and send1msg()?  Note that sendCommand() 
>actually gets

Yes.  `writeSomeData` is not a method on any transport interface.  It is 
an implementation detail of particular transports.
>called in response to a OpenSSHMuxProtocol.dataReceived() event.  If 
>bypassing the reactor this way is bad, how bad is it and what are the 
>consequences or effects?

This use is untested.  There's no reason to expect it will continue to 
work with future Twisted releases (or, really, that it fully works now; 
since `writeSomeData` bypasses the transport's buffering layer, it seems 
like you're risking an out-of-order or partial send; probably these will 
only arise under load so you may not have observed them in your 
testing).
>Is there a better way to get a working solution?  I think I'd need some 
>way to guarantee that the write of the command was actually sent to the 
>OpenSSH server before the file descriptors are forwarded -- for 
>example, if a Deferred was used whose first callback wrote the command 
>and whose second callback forwarded the descriptors, would a call to 
>the reactor to actually sent the command be guaranteed between the two 
>callbacks?

The proper way to do this would be for OpenSSH to acknowledge the 
operation.  At this point you would know it's safe to proceed to the 
next operation.  Since you didn't mention anything about 
acknowledgements, I'm guessing there are none.

Since you're already relying on `self.transport.socket.fileno()` and 
`send1msg` (basically, bypassing the transport abstraction and just 
doing socket operations yourself) one improvement you could make would 
be just to rely on that for the whole thing.  Don't use `writeSomeData`. 
Use `socket.send(command)`.  At least this way you're only relying on 
being able to treat a transport like a UNIX socket - not on the 
particulars of the transport's buffering implementation.

A different approach you could take would be to implement this 
connection sharing feature for Conch.  I can pretty much guarantee it's 
possible to implement since an older version of Conch actually did 
implement it. :)  The implementation was removed because it was fragile, 
complicated, and poorly tested.  It would be great to re-introduce the 
functionality with a higher quality implementation.

Jean-Paul



From exarkun at twistedmatrix.com  Sat Jun 21 08:46:34 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 21 Jun 2014 14:46:34 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
Message-ID: <20140621144634.6847.1918080626.divmod.xquotient.78@top>

Hello,

I'm pleased to announce the release of Nevow 0.11.1.

Nevow is a web application construction kit written in Python and based 
on Twisted. It is designed to allow the programmer to express as much of 
the view logic as desired in Python, and includes a pure Python XML 
expression syntax named stan to facilitate this. However it also 
provides rich support for designer-edited templates, using a very small 
XML attribute language to provide bi-directional template manipulation 
capability.

This release includes a number of minor new features and bug fixes.  It 
also includes changes to modernize Nevow's packaging - installation of 
Nevow using `pip` is now supported.  This release also marks the move of 
Nevow development to Github.

You can read about all of the changes in this release in the NEWS file:

    https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt

You can find Nevow on PyPI:

    https://pypi.python.org/pypi/Nevow

Or on Github:

    https://github.com/twisted/nevow

Enjoy!

Jean-Paul
http://as.ynchrono.us/



From glyph at twistedmatrix.com  Sat Jun 21 21:54:26 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 20:54:26 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
Message-ID: <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>


On Jun 20, 2014, at 10:10 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
> On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:
>> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> 
>>> The web server version string says Twisted 11.1 — maybe we should upgrade that too? :)
>> 
>> Sounds like somebody should send a PR to Braid? :-)
> 
> I was going to do that, but I do not understand where it is in braid :(

(Note: On this mailing list, please don't top-post, we prefer a trimmed and interleaved reply; it's easier to follow discussions if you show up in the middle.)
 
It looks like the relevant place is in braid.twisted.service.Service.bootstrap... although really, we ought to be using virtualenvs for this stuff, so I don't know how deep you want to go into refactoring :-).

Or perhaps you could just make <https://github.com/twisted-infra/braid/blob/master/braid/pip.py> always do a pip install --upgrade, if we're always going for a recent version, or add support for pinning versions of things.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140621/37c4044e/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Jun 21 22:02:57 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 21:02:57 -0700
Subject: [Twisted-Python] twistedcat - twisted endpoint concatenator
In-Reply-To: <20140621141217.GA697@googlemail.com>
References: <20140621141217.GA697@googlemail.com>
Message-ID: <94DBA4C4-072C-4068-B969-15E98554E85D@twistedmatrix.com>


On Jun 21, 2014, at 7:12 AM, David Stainton <dstainton415 at gmail.com> wrote:

> Greetings,
> 
> I was inspired by the "socat" CLI utility to write something similar called twistedcat.
> 
> https://github.com/david415/twistedcat
> https://github.com/david415/twistedcat/blob/master/twistedcat/twistedcat.py
> 
> Obviously it should have the "cat" word in the name... so what do you suggest?

How about "nocat" (network oriented cat), in honor of <http://quoteinvestigator.com/2012/02/24/telegraph-cat/>?

> What do people think of this?
> Do you have ascii art drawings of cats can use or suggestions for me to improve the code quality?

Are you saying that you have internet access, but cannot find pictures of cats? :-)

> Right now I'm cleaning the code out of main() and creating an EndpointCombiner class
> to encapsulate the endpoint pipe logic (c2c, s2s, c2s).
> 
> The reason I am very interested in improving the code to assist in pipe-lining endpoints is because it can be used by more than just this commandline tool. Any Twisted app wishing to create custom protocols can do so by pipe-lining endpoints. I think the API for this could be very easy to use.

We do have some work going in to making a generic wrapper-endpoint facility so it's easier to add wrapping to endpoints.  The branch for <https://twistedmatrix.com/trac/ticket/5642#comment:28> has such features.

> socat has an enormous feature set that I am not sufficiently motivated to duplicate here.

Yes, I think it would be better to focus on the alternate/awesome features that Twisted already gives you, rather than aiming for parity.

> http://www.dest-unreach.org/socat/doc/socat.html#ADDRESS_TYPES
> 
> It was really interesting for me to read about these socat address types... there are many of them.
> Twisted has some of the same types... and in some cases they are even spelled the same.
> I am interested in implementing some of these socat address types in Twisted, including a TUN endpoint and endpoint parser plugin.
> I've played around with the new twisted pair TUN stuff... but I was using producers and consumers to make a VPN...
> and as it turns out this task should be greatly simplified by using pipelined Twisted endpoints.

Well, this all sounds amazing to me.  Please keep us posted!

> I've also been toying with the idea of writing an obfsproxy Twisted endpoint which would work similar to the txtorcon endpoint in that it would launch an external command... and then perform a tcp connect. obfsproxy can be launched in external mode and has several obfuscation protocols to choose from... some of which are very sophisticated. If someone actually had a good use case for obfuscating pipelined endpoint protocols then I would love to hear about it (besides the obvious VPN use-case)!
> 
> https://www.torproject.org/projects/obfsproxy
> 
> Twisted endpoint descriptor strings are just like socat address specifications... except that in socat the client and server endpoint types are in the same name space. Therefore twistedcat needs to know if the endpoint string is a server or client endpoint. It defaults to client unless -s or --server specifies it as a server endpoint string. Or do you dare suggest that it would be better to try clientFromString and then if that fails try serverFromString?

Personally I think having a -s option (or -l to follow the tradition set forth by nc?) to be explicit is better.

Have you considered making wrappers in both directions though: a string-parsing plugin that turns a server endpoint into a client endpoint by making .listen() call connect, and one that turns a client endpoint into a server endpoint by having .connect() listen and wait for the first inbound connection?

> We've already created a Tor client endpoint/parser plugin (https://github.com/david415/txsocksx)
> and a Tor Hidden Service endpoint/parser plugin (https://github.com/meejah/txtorcon)...
> Obviously twistedcat doesn't know anything about Tor... because it's completely endpoint agnostic.
> 
> Here's my silly twistedcat Tor experimentations:
> 
> $ ./twistedcat.py -s stdio: -s onion:80:hiddenServiceDir=/home/human/hs
> 
> After running this one liner... I checked the contents of /home/human/hs/
> and found my new onion address in the "hostname" file.
> I used my Tor browser to send a request... and here we see twistedcat printed it to stdout via the stdio endpoint:
> 
> GET / HTTP/1.1
> Host: ibce3yvjdb3mzcrq.onion
> User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0
> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
> Accept-Language: en-us,en;q=0.5
> Accept-Encoding: gzip, deflate
> Connection: keep-alive
> 
> 
> And then there is this:
> 
> $ ./twistedcat.py tor:timaq4ygg2iegci7.onion:80 -s onion:80:hiddenServiceDir=/home/human/hs
> 
> Which of course proxies requests from my new onion to timaq4ygg2iegci7.onion... the onion address of the txtordoc documentation website.
> But this is crazy... um how many hops is that exactly? 14? 15?

Sounds like fun to me :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140621/73d72e11/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Jun 21 22:08:22 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Sun, 22 Jun 2014 12:08:22 +0800
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
Message-ID: <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>


On 22 Jun 2014, at 11:54, Glyph <glyph at twistedmatrix.com> wrote:

> 
> On Jun 20, 2014, at 10:10 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>> On 21 Jun 2014, at 8:43, Glyph <glyph at twistedmatrix.com> wrote:
>>> On Jun 20, 2014, at 2:40 AM, HawkOwl <hawkowl at atleastfornow.net> wrote:
>>> 
>>>> The web server version string says Twisted 11.1 — maybe we should upgrade that too? :)
>>> 
>>> Sounds like somebody should send a PR to Braid? :-)
>> 
>> I was going to do that, but I do not understand where it is in braid :(
> 
> (Note: On this mailing list, please don't top-post, we prefer a trimmed and interleaved reply; it's easier to follow discussions if you show up in the middle.)

Right. I was just hitting reply and typing words in mail.app :D

>  
> It looks like the relevant place is in braid.twisted.service.Service.bootstrap... although really, we ought to be using virtualenvs for this stuff, so I don't know how deep you want to go into refactoring :-).
> 
> Or perhaps you could just make <https://github.com/twisted-infra/braid/blob/master/braid/pip.py> always do a pip install --upgrade, if we're always going for a recent version, or add support for pinning versions of things.

When I get a moment, I’ll have a look at all this. Moving parts :(

> 
> -glyph

-hawkowl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140622/817b033e/attachment.sig>

From glyph at twistedmatrix.com  Sat Jun 21 23:48:04 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 22:48:04 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>


On Jun 21, 2014, at 7:46 AM, exarkun at twistedmatrix.com wrote:

> This release includes a number of minor new features and bug fixes.  It also includes changes to modernize Nevow's packaging - installation of Nevow using `pip` is now supported.  This release also marks the move of Nevow development to Github.

This is _so_ exciting.  Thanks for doing this, it is really nice to be able to just 'pip install' things which depend on Nevow without a bunch of caveats.

-glyph


From glyph at twistedmatrix.com  Sat Jun 21 23:48:40 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 21 Jun 2014 22:48:40 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
Message-ID: <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>


On Jun 21, 2014, at 9:08 PM, HawkOwl <hawkowl at atleastfornow.net> wrote:

> When I get a moment, I’ll have a look at all this. Moving parts :(

Yeah, I know what you mean.

Nevertheless, the more maintenance it gets, the easier it becomes to maintain :-)

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140621/4b6414df/attachment-0002.html>

From donald at stufft.io  Sun Jun 22 00:00:06 2014
From: donald at stufft.io (Donald Stufft)
Date: Sun, 22 Jun 2014 02:00:06 -0400
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
Message-ID: <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>


On Jun 22, 2014, at 1:48 AM, Glyph <glyph at twistedmatrix.com> wrote:

> 
> On Jun 21, 2014, at 7:46 AM, exarkun at twistedmatrix.com wrote:
> 
>> This release includes a number of minor new features and bug fixes.  It also includes changes to modernize Nevow's packaging - installation of Nevow using `pip` is now supported.  This release also marks the move of Nevow development to Github.
> 
> This is _so_ exciting.  Thanks for doing this, it is really nice to be able to just 'pip install' things which depend on Nevow without a bunch of caveats.

Oh wow, that is great :) I’m sure Tahoe-lafs will be happy.

-----------------
Donald Stufft
PGP: 0x6E3CBCE93372DCFA // 7C6B 7C5D 5E2B 6356 A926 F04F 6E3C BCE9 3372 DCFA

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140622/a4ea898c/attachment.sig>

From glyph at twistedmatrix.com  Sun Jun 22 18:51:38 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 22 Jun 2014 17:51:38 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
Message-ID: <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>


On Jun 21, 2014, at 11:00 PM, Donald Stufft <donald at stufft.io> wrote:

> Oh wow, that is great :) I’m sure Tahoe-lafs will be happy.

I am surprised they haven't said anything yet, I'm assuming they haven't noticed ;-)

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140622/31686cc9/attachment-0002.html>

From werner at thieprojects.ch  Sun Jun 22 23:40:47 2014
From: werner at thieprojects.ch (Werner Thie)
Date: Sun, 22 Jun 2014 19:40:47 -1000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <53A7BDDF.5050306@thieprojects.ch>

Aloha all

great, I used nevow/athena/livepages through all the years in between, 
nevow getting a new life is really exciting news.

Cheers, Werner

On 6/21/14 4:46 AM, exarkun at twistedmatrix.com wrote:
> Hello,
>
> I'm pleased to announce the release of Nevow 0.11.1.
>
> Nevow is a web application construction kit written in Python and based
> on Twisted. It is designed to allow the programmer to express as much of
> the view logic as desired in Python, and includes a pure Python XML
> expression syntax named stan to facilitate this. However it also
> provides rich support for designer-edited templates, using a very small
> XML attribute language to provide bi-directional template manipulation
> capability.
>
> This release includes a number of minor new features and bug fixes.  It
> also includes changes to modernize Nevow's packaging - installation of
> Nevow using `pip` is now supported.  This release also marks the move of
> Nevow development to Github.
>
> You can read about all of the changes in this release in the NEWS file:
>
>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
>
> You can find Nevow on PyPI:
>
>     https://pypi.python.org/pypi/Nevow
>
> Or on Github:
>
>     https://github.com/twisted/nevow
>
> Enjoy!
>
> Jean-Paul
> http://as.ynchrono.us/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From itamar at itamarst.org  Mon Jun 23 04:49:11 2014
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Mon, 23 Jun 2014 06:49:11 -0400
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
 <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
Message-ID: <53A80627.7090608@itamarst.org>

Can we re-enable general commenting now? Or is the spam setup still in 
progress?



From m-lists at the-moon.net  Mon Jun 23 04:59:53 2014
From: m-lists at the-moon.net (Richard Wall)
Date: Mon, 23 Jun 2014 11:59:53 +0100
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
Message-ID: <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>

On 19 June 2014 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> Hello Twisted users,
> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).

Thanks David and Glyph.

A few bugs I noticed since the trac upgrade:
 * I don't think I'm receiving ticket modification updates (for
tickets where I've participated). For example I didn't receive an
email about this comment from JP
https://twistedmatrix.com/trac/ticket/7527#comment:1
 * There's an extra "delete" link alongside the ticket delete button
when I view existing tickets
 * The new ticket description textarea floats to the right of the text
"You may use WikiFormatting here." instead of above it.

-RichardW.



From warner at lothar.com  Mon Jun 23 13:43:55 2014
From: warner at lothar.com (Brian Warner)
Date: Mon, 23 Jun 2014 12:43:55 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
Message-ID: <53A8837B.7030709@lothar.com>

On 6/22/14 5:51 PM, Glyph wrote:

>> Oh wow, that is great :) I’m sure Tahoe-lafs will be happy.
> 
> I am surprised they haven't said anything yet, I'm assuming they
> haven't noticed ;-)

I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
Thank you!

BTW, the NEWS URL in the Nevow release email is 404ing. I think the
correct one is:

 https://github.com/twisted/nevow/blob/nevow-0.11.1/NEWS.txt

thanks a bunch,
 -Brian

[1]: https://tahoe-lafs.org/trac/tahoe-lafs/ticket/2032#comment:18




From glyph at twistedmatrix.com  Mon Jun 23 16:48:49 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:48:49 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <53A80627.7090608@itamarst.org>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <EDAB7148-7842-4A09-B2CF-3A8739D8C9E4@atleastfornow.net>
 <9C93315A-F16A-40CE-AC2B-369494021E23@twistedmatrix.com>
 <74022402-467E-4C5B-BA06-43285F493F31@atleastfornow.net>
 <B5D68633-514D-4C6C-BEC2-EC630B0FE589@twistedmatrix.com>
 <A6F2D2C3-B736-450D-9065-2A8B05699DED@atleastfornow.net>
 <7E167860-D520-4290-9628-E62DC634A262@twistedmatrix.com>
 <53A80627.7090608@itamarst.org>
Message-ID: <408BF826-F033-4580-9D87-2DA443EDD91A@twistedmatrix.com>


On Jun 23, 2014, at 3:49 AM, Itamar Turner-Trauring <itamar at itamarst.org> wrote:

> Can we re-enable general commenting now? Or is the spam setup still in progress?

Currently no spam setup is in progress.

In a sense, the Trac upgrade is orthogonal to the spam problem.  Upgrading Trac didn't change anything about the spam.

However, the Trac upgrade provides access to a lot more Trac plugins, including more recent authentication and registration and signup and spam filtering plugins, so there are many more options now available.  If someone wanted to tackle this problem we now have a path forward for them to do so, without having to deal with the mess of a Trac schema upgrade :).

-glyph




From glyph at twistedmatrix.com  Mon Jun 23 16:50:48 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:50:48 -0700
Subject: [Twisted-Python] Trac downtime
In-Reply-To: <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>
References: <08901461-ED9A-466A-B8AA-A09C2B2FACD4@twistedmatrix.com>
 <CABefbUpuHzwt9napVPwVHTdpCu5Dzp0s6OOcHdwULMyHXXwCGg@mail.gmail.com>
Message-ID: <3103B431-1DB0-4C57-8BEA-C33E860E6F01@twistedmatrix.com>


On Jun 23, 2014, at 3:59 AM, Richard Wall <m-lists at the-moon.net> wrote:

> On 19 June 2014 18:38, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>> Hello Twisted users,
>> David Reid and I are attempting to upgrade our production Trac instance to version 1.0.1 today, in order to address the spam and many other issues.
>> While we will attempt to minimize the downtime, knowing Trac, you should expect at least 6 hours of downtime beginning as soon as 20 minutes (18:00 UTC).
> 
> Thanks David and Glyph.
> 
> A few bugs I noticed since the trac upgrade:

Hi Richard,

Thanks for noting these, but I think they're likely to disappear into the ether :-).  Would you mind filing these as issues against Braid?

-glyph


From glyph at twistedmatrix.com  Mon Jun 23 16:55:08 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 23 Jun 2014 15:55:08 -0700
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <53A8837B.7030709@lothar.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
Message-ID: <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>


On Jun 23, 2014, at 12:43 PM, Brian Warner <warner at lothar.com> wrote:

> I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
> Thank you!

WOOHOO!  I didn't realize this was the last blocker, this is fantastic news!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140623/e0feeadc/attachment-0002.html>

From orestis at orestis.gr  Tue Jun 24 05:06:22 2014
From: orestis at orestis.gr (Orestis Markou)
Date: Tue, 24 Jun 2014 14:06:22 +0300
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
 <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
Message-ID: <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>

Hello,

Great news! Are there any docs online?  

Thanks,
Orestis


24 Ιουν 2014, 1:55, ο/η Glyph Lefkowitz <glyph at twistedmatrix.com> έγραψε:

> 
>> On Jun 23, 2014, at 12:43 PM, Brian Warner <warner at lothar.com> wrote:
>> 
>> I just closed our ticket[1].. "pip install allmydata-tahoe" now works!
>> Thank you!
> 
> WOOHOO!  I didn't realize this was the last blocker, this is fantastic news!
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140624/b72fb534/attachment-0002.html>

From peter.westlake at pobox.com  Tue Jun 24 05:41:04 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Tue, 24 Jun 2014 12:41:04 +0100
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
Message-ID: <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>

Good to see Nevow is still being maintained!

What are the chances of 0.11.2 including the fix for
https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
complete with a test case and a patch?

Peter.

On Sat, Jun 21, 2014, at 15:46, exarkun at twistedmatrix.com wrote:
> Hello,
> 
> I'm pleased to announce the release of Nevow 0.11.1.
> 
> Nevow is a web application construction kit written in Python and based 
> on Twisted. It is designed to allow the programmer to express as much of 
> the view logic as desired in Python, and includes a pure Python XML 
> expression syntax named stan to facilitate this. However it also 
> provides rich support for designer-edited templates, using a very small 
> XML attribute language to provide bi-directional template manipulation 
> capability.
> 
> This release includes a number of minor new features and bug fixes.  It 
> also includes changes to modernize Nevow's packaging - installation of 
> Nevow using `pip` is now supported.  This release also marks the move of 
> Nevow development to Github.
> 
> You can read about all of the changes in this release in the NEWS file:
> 
>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
> 
> You can find Nevow on PyPI:
> 
>     https://pypi.python.org/pypi/Nevow
> 
> Or on Github:
> 
>     https://github.com/twisted/nevow
> 
> Enjoy!
> 
> Jean-Paul
> http://as.ynchrono.us/
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Tue Jun 24 06:01:07 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jun 2014 12:01:07 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <8AB2927B-EE1C-483D-8FDB-3B1E3BE54F07@twistedmatrix.com>
 <8ED5AD18-6E8B-4A89-BEA2-156E2AE3AF00@stufft.io>
 <46E87F0E-248E-48B9-99B0-AD5D0D09EF4D@twistedmatrix.com>
 <53A8837B.7030709@lothar.com>
 <60C5BE8D-2615-4DCF-BDD1-A2EB7C289C55@twistedmatrix.com>
 <C1ED1FA2-1CB7-45FB-847A-0A6A163CC4FB@orestis.gr>
Message-ID: <20140624120107.6847.79834529.divmod.xquotient.128@top>

On 11:06 am, orestis at orestis.gr wrote:
>Hello,
>
>Great news! Are there any docs online?

Not yet.  See https://github.com/twisted/nevow/issues/20 and 
https://github.com/twisted/nevow/issues/21



From exarkun at twistedmatrix.com  Tue Jun 24 06:10:10 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 24 Jun 2014 12:10:10 -0000
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
Message-ID: <20140624121010.6847.1673121294.divmod.xquotient.136@top>

On 11:41 am, peter.westlake at pobox.com wrote:
>Good to see Nevow is still being maintained!
>
>What are the chances of 0.11.2 including the fix for
>https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
>complete with a test case and a patch?

Issues were migrated to Github as well, fwiw:

    https://github.com/twisted/nevow/issues/11

Keeping track of where there is code up for review is something I 
haven't really figured out how to do well on Github (and never figured 
out how to do on Launchpad).  It's one thing if you maintain a project 
as part of your job - then you probably look at the issue tracker every 
day and things progress.  It's another thing if you follow 15 open 
source, volunteer driven projects each with their own issue tracker. 
I'll probably go months between looking at the issue trackers for some 
of them (particularly the lower activity projects where it might really 
*be* months between interesting activity).

Anyone have any tips or tools for keeping tabs on outstanding work on 
Github?  I've been trying out a "review" keyword that marks PRs that 
need to be looked at.  This at least makes work-to-do unambiguous and 
easy to find but I still have to poll github to find it.

Meanwhile, Peter, if you turn that patch into a PR then I'll try to 
remember to review it soon. :)

Jean-Paul
>Peter.
>
>On Sat, Jun 21, 2014, at 15:46, exarkun at twistedmatrix.com wrote:
>>Hello,
>>
>>I'm pleased to announce the release of Nevow 0.11.1.
>>
>>Nevow is a web application construction kit written in Python and 
>>based
>>on Twisted. It is designed to allow the programmer to express as much 
>>of
>>the view logic as desired in Python, and includes a pure Python XML
>>expression syntax named stan to facilitate this. However it also
>>provides rich support for designer-edited templates, using a very 
>>small
>>XML attribute language to provide bi-directional template manipulation
>>capability.
>>
>>This release includes a number of minor new features and bug fixes. 
>>It
>>also includes changes to modernize Nevow's packaging - installation of
>>Nevow using `pip` is now supported.  This release also marks the move 
>>of
>>Nevow development to Github.
>>
>>You can read about all of the changes in this release in the NEWS 
>>file:
>>
>>     https://github.com/twisted/nevow/blob/release-0.11.1/NEWS.txt
>>
>>You can find Nevow on PyPI:
>>
>>     https://pypi.python.org/pypi/Nevow
>>
>>Or on Github:
>>
>>     https://github.com/twisted/nevow
>>
>>Enjoy!
>>
>>Jean-Paul
>>http://as.ynchrono.us/
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From mark at catseye.org  Tue Jun 24 11:01:43 2014
From: mark at catseye.org (Mark Montague)
Date: Tue, 24 Jun 2014 13:01:43 -0400
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <20140621142415.6847.915570379.divmod.xquotient.58@top>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
Message-ID: <53A9AEF7.80202@catseye.org>

On 2014-06-21, 10:24, exarkun at twistedmatrix.com wrote:
> > If bypassing the reactor this way is bad, how bad is it and what are 
> the consequences or effects?
>
> This use is untested.  There's no reason to expect it will continue to 
> work with future Twisted releases (or, really, that it fully works 
> now; since `writeSomeData` bypasses the transport's buffering layer, 
> it seems like you're risking an out-of-order or partial send; probably 
> these will only arise under load so you may not have observed them in 
> your testing).

Thanks for the very helpful reply!  This is exactly the sort of thing I 
was hoping to find out.

>> Is there a better way to get a working solution?
>
> The proper way to do this would be for OpenSSH to acknowledge the 
> operation.  At this point you would know it's safe to proceed to the 
> next operation.  Since you didn't mention anything about 
> acknowledgements, I'm guessing there are none.

Correct, the order of events is:

0. client opens OpenSSH socket, sends hello, receives reply
1. user calls the protocol function to create a new OpenSSH session over 
the existing socket
2. client sends MUX_C_ALIVE_CHECK to OpenSSH
3. OpenSSH replies with MUX_S_ALIVE
4. client sends MUX_C_NEW_SESSION to OpenSSH, then immediately forwards 
the file descriptors
5. OpenSSH replies with either MUX_S_SESSION_OPENED, 
MUX_S_PERMISSION_DENIED, or MUX_S_FAILURE.
6. ...session is now created...
7. OpenSSH sends MUX_S_EXIT_MESSAGE when the session has finished
8. client can now close the OpenSSH socket

It would make sense for OpenSSH to acknowledge the MUX_C_NEW_SESSION in 
step 4 before the file descriptors get sent, but I've read the source 
code and OpenSSH does not do this -- it expects the file descriptors to 
be sent as soon as the new session message is sent.


> Since you're already relying on `self.transport.socket.fileno()` and 
> `send1msg` (basically, bypassing the transport abstraction and just 
> doing socket operations yourself) one improvement you could make would 
> be just to rely on that for the whole thing.  Don't use 
> `writeSomeData`. Use `socket.send(command)`.  At least this way you're 
> only relying on being able to treat a transport like a UNIX socket - 
> not on the particulars of the transport's buffering implementation.
>
> A different approach you could take would be to implement this 
> connection sharing feature for Conch.  I can pretty much guarantee 
> it's possible to implement since an older version of Conch actually 
> did implement it. :)  The implementation was removed because it was 
> fragile, complicated, and poorly tested.  It would be great to 
> re-introduce the functionality with a higher quality implementation.

I'll look into what it might take to implement this in a robust way with 
tests for Conch.  I think that's definitely a preferred solution, since 
it sounds like such a feature might be accepted (I wasn't considering 
this initially since Conch is a generic SSH transport, and piggybacking 
on top of an existing OpenSSH socket is a highly-specific thing.)  If I 
can come up with a good way to do this, I'll submit a patch, otherwise 
I'll keep the functionality as it is now, in a standalone class that 
doesn't use Conch at all.


-- 
   Mark Montague
   mark at catseye.org




From glyph at twistedmatrix.com  Tue Jun 24 12:27:28 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 24 Jun 2014 11:27:28 -0700
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A9AEF7.80202@catseye.org>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
 <53A9AEF7.80202@catseye.org>
Message-ID: <344451E5-1089-4087-B363-3FAE20F9A66C@twistedmatrix.com>


On Jun 24, 2014, at 10:01 AM, Mark Montague <mark at catseye.org> wrote:

> (I wasn't considering this initially since Conch is a generic SSH transport, and piggybacking on top of an existing OpenSSH socket is a highly-specific thing.)

Not only was this feature previously in Conch (although I'm not sure if it actually spoke OpenSSH's ControlMaster protocol or something custom?), but there's existing precedent for integrating with OpenSSH-based client-side tooling: Conch can talk to OpenSSH's agent via the agent protocol.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140624/70f694e1/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Jun 24 18:07:33 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 25 Jun 2014 00:07:33 -0000
Subject: [Twisted-Python] Effects of calling transport.writeSomeData() ?
In-Reply-To: <53A9AEF7.80202@catseye.org>
References: <53A4B441.1040201@catseye.org>
 <20140621142415.6847.915570379.divmod.xquotient.58@top>
 <53A9AEF7.80202@catseye.org>
Message-ID: <20140625000733.8005.658943787.divmod.xquotient.1@top>

On 24 Jun, 05:01 pm, mark at catseye.org wrote:
>On 2014-06-21, 10:24, exarkun at twistedmatrix.com wrote:
>>
>>A different approach you could take would be to implement this 
>>connection sharing feature for Conch.  I can pretty much guarantee 
>>it's possible to implement since an older version of Conch actually 
>>did implement it. :) The implementation was removed because it was 
>>fragile, complicated, and poorly tested.  It would be great to re- 
>>introduce the functionality with a higher quality implementation.
>
>I'll look into what it might take to implement this in a robust way 
>with tests for Conch.  I think that's definitely a preferred solution, 
>since it sounds like such a feature might be accepted (I wasn't 
>considering this initially since Conch is a generic SSH transport, and 
>piggybacking on top of an existing OpenSSH socket is a highly-specific 
>thing.)

To clarify slightly, what was implemented in Conch before was the entire 
connection sharing feature.  Conch could act as a master and share 
connections with other Conch clients.  It could not talk to an OpenSSH 
master and to share a connection.

Jean-Paul



From pratik.prajapati12 at gmail.com  Wed Jun 25 04:20:30 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Wed, 25 Jun 2014 15:50:30 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
 <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
Message-ID: <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>

Hi Jean-Paul,

you have seen my code on
http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python

code with your suggested changes

this is working fine for windows machine, but on linux machine if no device
is found on network then it doesn't go to stopMsearch()

Please help. How to debug this ?


On Sun, Jun 15, 2014 at 9:30 AM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Hi Jean-Paul,
>
> I have added a comment on your answer on stackoverflow, please respond
> there.
>
>
> On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
> pratik.prajapati12 at gmail.com> wrote:
>
>> Thanks for the answer
>>
>>
>> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>>
>>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>>
>>>>
>>>> [snip]
>>>>
>>>>
>>>> Please tell what's wrong in code mentioned in the start of this mail and
>>>> how to correct this.
>>>>
>>>> I have also posted this code on stackoverflow , but didn't get any
>>>> response
>>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>>> all-network-interfaces-using-twisted-module-in-python
>>>>
>>>
>>> I posted an answer on stackoverflow.  I previously hadn't seen the
>>> question because it didn't have the `twisted` tag (I edited the question as
>>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>>> future. :)
>>>
>>> Jean-Paul
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>>
>>
>> --
>> *Thanks and Regards,*
>>
>> *Pratik Prajapati*
>> *Graduate Software Engineer*
>> *Imagination Technologies India Pvt Ltd.*
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140625/f355e558/attachment-0002.html>

From pratik.prajapati12 at gmail.com  Wed Jun 25 04:29:08 2014
From: pratik.prajapati12 at gmail.com (Pratik Prajapati)
Date: Wed, 25 Jun 2014 15:59:08 +0530
Subject: [Twisted-Python] send-msearch on all network interfaces of a
	machine
In-Reply-To: <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>
References: <CAHNg1So+Nr30HPhtn5yCF5CQHn5b4x7Z+ffMG-8ZQ+oqKqJnJw@mail.gmail.com>
 <20140614142711.6847.1772808746.divmod.xquotient.2@top>
 <CAHNg1SrkYSn7VduWg93e6XvATkk-WV6OMnZ-ScyCZC7hCRQhHA@mail.gmail.com>
 <CAHNg1SrVh=A0DPjMapVuo5N5hX73KFoymacpSc7_kwOCTwszLw@mail.gmail.com>
 <CAHNg1Spi8_A3NNSxC1+ty+K2LSuTGOOnCxToVcevuGCBLykP9g@mail.gmail.com>
Message-ID: <CAHNg1SqPjkieaKD86PMii_xt-+v1E1wFJQ98ZNrOmsnGEo2_eA@mail.gmail.com>

Modified code (with changes suggested by you on stackoverflow):

class Base(DatagramProtocol):
        """ Class to send M-SEARCH message to devices in network and
receive datagram
            packets from them
        """
        SSDP_ADDR = "239.255.255.250"
        SSDP_PORT = 1900
        MS = "M-SEARCH * HTTP/1.1\r\nHOST: {}:{}\r\nMAN:
'ssdp:discover'\r\nMX: 2\r\nST: ssdp:all\r\n\r\n".format(SSDP_ADDR,
SSDP_PORT)

    def sendMsearch(self):
        """ Sending M-SEARCH message
        """
        timeInSeconds = [0.2,0.4,0.6,0.8]
        try:
            port = reactor.listenUDP(0, self, interface=self.address)
            for num, delay in zip(range(4), timeInSeconds):
                reactor.callLater(delay, port.write, Scanner.MS,
(Scanner.SSDP_ADDR, Scanner.SSDP_PORT))
        except error.CannotListenError:
            pass
        reactor.callLater(2.5, self.stopMsearch, port) # MX + a wait margin

    def stopMsearch(self, port):
        """ Stop listening on port
        """
        port.stopListening()

def findDevices():
    addresses = []
    for interface in interfaces():
        try:
            for link in ifaddresses(interface)[AF_INET]:
                addresses.append(link['addr'])
        except KeyError:
            pass

    #loopback address
    if "127.0.0.1" in addresses:
        addresses.remove("127.0.0.1")

    for address in addresses:
        network = Base(address)
        network.sendMsearch()


On Wed, Jun 25, 2014 at 3:50 PM, Pratik Prajapati <
pratik.prajapati12 at gmail.com> wrote:

> Hi Jean-Paul,
>
> you have seen my code on
> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-all-network-interfaces-using-twisted-module-in-python
>
> code with your suggested changes
>
> this is working fine for windows machine, but on linux machine if no
> device is found on network then it doesn't go to stopMsearch()
>
> Please help. How to debug this ?
>
>
> On Sun, Jun 15, 2014 at 9:30 AM, Pratik Prajapati <
> pratik.prajapati12 at gmail.com> wrote:
>
>> Hi Jean-Paul,
>>
>> I have added a comment on your answer on stackoverflow, please respond
>> there.
>>
>>
>> On Sat, Jun 14, 2014 at 11:53 PM, Pratik Prajapati <
>> pratik.prajapati12 at gmail.com> wrote:
>>
>>> Thanks for the answer
>>>
>>>
>>> On Sat, Jun 14, 2014 at 7:57 PM, <exarkun at twistedmatrix.com> wrote:
>>>
>>>> On 12:48 pm, pratik.prajapati12 at gmail.com wrote:
>>>>
>>>>>
>>>>> [snip]
>>>>>
>>>>>
>>>>> Please tell what's wrong in code mentioned in the start of this mail
>>>>> and
>>>>> how to correct this.
>>>>>
>>>>> I have also posted this code on stackoverflow , but didn't get any
>>>>> response
>>>>> http://stackoverflow.com/questions/24178580/send-m-search-packets-on-
>>>>> all-network-interfaces-using-twisted-module-in-python
>>>>>
>>>>
>>>> I posted an answer on stackoverflow.  I previously hadn't seen the
>>>> question because it didn't have the `twisted` tag (I edited the question as
>>>> well to replace the `twisted.internet` tag with the `twisted` tag). I
>>>> suggest you use `twisted` for stackoverflow questions about Twisted in the
>>>> future. :)
>>>>
>>>> Jean-Paul
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>
>>>
>>>
>>> --
>>> *Thanks and Regards,*
>>>
>>> *Pratik Prajapati*
>>> *Graduate Software Engineer*
>>> *Imagination Technologies India Pvt Ltd.*
>>>
>>
>>
>>
>> --
>> *Thanks and Regards,*
>>
>> *Pratik Prajapati*
>> *Graduate Software Engineer*
>> *Imagination Technologies India Pvt Ltd.*
>>
>
>
>
> --
> *Thanks and Regards,*
>
> *Pratik Prajapati*
> *Graduate Software Engineer*
> *Imagination Technologies India Pvt Ltd.*
>



-- 
*Thanks and Regards,*

*Pratik Prajapati*
*Graduate Software Engineer*
*Imagination Technologies India Pvt Ltd.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140625/e4fea604/attachment-0002.html>

From peter.westlake at pobox.com  Wed Jun 25 10:21:30 2014
From: peter.westlake at pobox.com (Peter Westlake)
Date: Wed, 25 Jun 2014 17:21:30 +0100
Subject: [Twisted-Python] [RELEASE] Nevow 0.11.1
In-Reply-To: <20140624121010.6847.1673121294.divmod.xquotient.136@top>
References: <20140621144634.6847.1918080626.divmod.xquotient.78@top>
 <1403610064.26407.132953001.009FC057@webmail.messagingengine.com>
 <20140624121010.6847.1673121294.divmod.xquotient.136@top>
Message-ID: <1403713290.14789.133497917.186E25C0@webmail.messagingengine.com>

On Tue, Jun 24, 2014, at 13:10, exarkun at twistedmatrix.com wrote:
> On 11:41 am, peter.westlake at pobox.com wrote:
> >Good to see Nevow is still being maintained!
> >
> >What are the chances of 0.11.2 including the fix for
> >https://bugs.launchpad.net/nevow/+bug/892794, filed in November 2011
> >complete with a test case and a patch?
> 
> Issues were migrated to Github as well, fwiw:
> 
>     https://github.com/twisted/nevow/issues/11
...
> Meanwhile, Peter, if you turn that patch into a PR then I'll try to 
> remember to review it soon. :)

Here it is: https://github.com/twisted/nevow/pull/42

As an added benefit, I now know how to do a pull request on GitHub, so
thank you for that!
It's very much easier than Launchpad, where I still haven't any hint on
how to do it.

Peter.



From jasonjwwilliams at gmail.com  Wed Jun 25 16:31:48 2014
From: jasonjwwilliams at gmail.com (Jason J. W. Williams)
Date: Wed, 25 Jun 2014 16:31:48 -0600
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
Message-ID: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>

Since upgrading to OSX 10.9 I seem to have this issue when running trial
(tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):

Unexpected error while writing cache file
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 472, in postOptions
    _BasicOptions.postOptions(self)
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 382, in postOptions
    self['reporter'] = self._loadReporterByName(self['reporter'])
  File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py",
line 369, in _loadReporterByName
    for p in plugin.getPlugins(itrial.IReporter):
  File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line
209, in getPlugins
    allDropins = getCache(package)
--- <exception caught here> ---
  File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line
181, in getCache
    dropinPath.setContent(pickle.dumps(dropinDotCache))

The only zip on the path is the pseudo python27.zip.

Any ideas?

-J
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140625/3fcdf3dc/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Jun 25 18:46:53 2014
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 25 Jun 2014 17:46:53 -0700
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
In-Reply-To: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
References: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
Message-ID: <E90049E8-7A47-4EA6-A776-73FC9AE1B88E@twistedmatrix.com>


On Jun 25, 2014, at 3:31 PM, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:

> Since upgrading to OSX 10.9 I seem to have this issue when running trial (tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):
> 
> Unexpected error while writing cache file
> Traceback (most recent call last):
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 472, in postOptions

It looks like you've installed Twisted in /usr/local/lib, which is not where a Twisted install should ever go on OS X.  Either install into a virtualenv or use the system install at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python.

I can't speculate as to how you've mis-installed this particular version of Twisted though :-).

-glyph




From hawkowl at atleastfornow.net  Wed Jun 25 18:47:16 2014
From: hawkowl at atleastfornow.net (HawkOwl)
Date: Thu, 26 Jun 2014 08:47:16 +0800
Subject: [Twisted-Python] OSX 10.9 Trial ZipPath issue
In-Reply-To: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
References: <CAHZAEpf7FA3n7qjKsgi=3rr8B7EA6bUjmhrCU1HMDZcKttskgQ@mail.gmail.com>
Message-ID: <75E6F4E7-0D86-4218-A1C6-F1F8096743A6@atleastfornow.net>

On 26 Jun 2014, at 6:31, Jason J. W. Williams <jasonjwwilliams at gmail.com> wrote:

> Since upgrading to OSX 10.9 I seem to have this issue when running trial (tried it with Twisted 13.0.0, 13.2.0 and 14.0.0):
> 
> Unexpected error while writing cache file
> Traceback (most recent call last):
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 472, in postOptions
>     _BasicOptions.postOptions(self)
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 382, in postOptions
>     self['reporter'] = self._loadReporterByName(self['reporter'])
>   File "/usr/local/lib/python2.7/site-packages/twisted/scripts/trial.py", line 369, in _loadReporterByName
>     for p in plugin.getPlugins(itrial.IReporter):
>   File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line 209, in getPlugins
>     allDropins = getCache(package)
> --- <exception caught here> ---
>   File "/usr/local/lib/python2.7/site-packages/twisted/plugin.py", line 181, in getCache
>     dropinPath.setContent(pickle.dumps(dropinDotCache))
> 
> The only zip on the path is the pseudo python27.zip.
> 
> Any ideas?
> 
> -J

Have you tried running it in a virtualenv?

It looks like it’s trying to write the dropin.cache file — but I don’t think you can do that if you’re not admin?

-hawkowl

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20140626/daf93bda/attachment.sig>

From glyph at twistedmatrix.com  Fri Jun 27 16:27:11 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Fri, 27 Jun 2014 15:27:11 -0700
Subject: [Twisted-Python] bringing LDAP back
Message-ID: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>

Hello fellow Twistrons,

A long time ago, for reasons we need not discuss here, the pure-python LDAP implementation within Twisted was pulled out into a separate package under a different license.

Recently however, the authors of this LDAP code have generously re-licensed the code under a Twisted-compatible MIT license, both the original code at <https://github.com/tv42/ldaptor/commit/7e249b1586789a5c588f662ce74ee9f4338666e0> and the more recent fork (which I believe has more users) at <https://github.com/antong/ldaptor/issues/10>.  It seems as though there's even a solution for the problematic MD4 implementation here <https://github.com/tv42/ldaptor/pull/2>.

Since there's no active, central hub for ldaptor development, I think we should pull it into the Twisted org on Github, and some of the folks on the Cc: line have volunteered to help with that.

Does that sound good to everybody?  (Are you excited!!!?)

It's also a possibility that we could distribute a for-real SSO back-end with Cred using this, which I'm pretty excited about.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20140627/f823b558/attachment-0002.html>

From hs at ox.cx  Sat Jun 28 04:36:43 2014
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 28 Jun 2014 12:36:43 +0200
Subject: [Twisted-Python] bringing LDAP back
In-Reply-To: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>
References: <4334D648-53A6-4198-BE25-09E79CB8041E@twistedmatrix.com>
Message-ID: <03894BB2-EE77-43C8-90B3-B859E0093E3B@ox.cx>

On 28 Jun 2014, at 0:27, Glyph wrote:

> Recently however, the authors of this LDAP code have generously 
> re-licensed the code under a Twisted-compatible MIT license, both the 
> original code at 
> <https://github.com/tv42/ldaptor/commit/7e249b1586789a5c588f662ce74ee9f4338666e0> 
> and the more recent fork (which I believe has more users) at 
> <https://github.com/antong/ldaptor/issues/10>.  It seems as though 
> there's even a solution for the problematic MD4 implementation here 
> <https://github.com/tv42/ldaptor/pull/2>.
>
> Since there's no active, central hub for ldaptor development, I think 
> we should pull it into the Twisted org on Github, and some of the 
> folks on the Cc: line have volunteered to help with that.
>
> Does that sound good to everybody?  (Are you excited!!!?)

YES.

I’m glad I didn’t come around to do it by myself until now. ;)

> It's also a possibility that we could distribute a for-real SSO 
> back-end with Cred using this, which I'm pretty excited about.

LDAPUsernamePasswordDatabaseDoUse? ;)



From adi at roiban.ro  Sat Jun 28 12:16:31 2014
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 28 Jun 2014 21:16:31 +0300
Subject: [Twisted-Python] Ticket comment permissions on Trac
Message-ID: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>

Hi,

I would like to receive ticket comment permissions on Trac.
My trac username is: adiroiban

Thanks!

-- 
Adi Roiban



From exarkun at twistedmatrix.com  Sat Jun 28 12:31:39 2014
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sat, 28 Jun 2014 18:31:39 -0000
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
Message-ID: <20140628183139.6956.2015609847.divmod.xquotient.4@top>

On 06:16 pm, adi at roiban.ro wrote:
>Hi,
>
>I would like to receive ticket comment permissions on Trac.
>My trac username is: adiroiban
>
>Thanks!

Done.

Jean-Paul



From dustin at v.igoro.us  Sat Jun 28 16:36:54 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sat, 28 Jun 2014 18:36:54 -0400
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
Message-ID: <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>

This could be interesting given thatn @twistedmatrix.com can't receive
email from gmail, although it appears to work via the mailing list.

Dustin

On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
> Hi,
>
> I would like to receive ticket comment permissions on Trac.
> My trac username is: adiroiban
>
> Thanks!
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Sat Jun 28 20:43:12 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 28 Jun 2014 19:43:12 -0700
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
Message-ID: <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>

On Jun 28, 2014, at 3:36 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
> On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
>> I would like to receive ticket comment permissions on Trac.
>> My trac username is: adiroiban
> 
> This could be interesting given thatn @twistedmatrix.com can't receive
> email from gmail, although it appears to work via the mailing list.

I'm confused.  All of my email passes through twistedmatrix.com and much (most?) of it comes from gmail.

What do you mean?

-glyph




From dustin at v.igoro.us  Sun Jun 29 07:39:13 2014
From: dustin at v.igoro.us (Dustin J. Mitchell)
Date: Sun, 29 Jun 2014 09:39:13 -0400
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
 <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
Message-ID: <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>

I sent an email to exarkun at twistedmatrix.com five days ago and
received daily graylist-failure emails for four days until it was
finally rejected.  From talking to JP on irc, the issue is that the
twistedmatrix MTA greylists per IP, but gmail retries from a different
IP for each attempt, so the second attempt is never linked with the
first.

Dustin

On Sat, Jun 28, 2014 at 10:43 PM, Glyph <glyph at twistedmatrix.com> wrote:
> On Jun 28, 2014, at 3:36 PM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:
>> On Sat, Jun 28, 2014 at 2:16 PM, Adi Roiban <adi at roiban.ro> wrote:
>>> I would like to receive ticket comment permissions on Trac.
>>> My trac username is: adiroiban
>>
>> This could be interesting given thatn @twistedmatrix.com can't receive
>> email from gmail, although it appears to work via the mailing list.
>
> I'm confused.  All of my email passes through twistedmatrix.com and much (most?) of it comes from gmail.
>
> What do you mean?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Mon Jun 30 13:36:47 2014
From: glyph at twistedmatrix.com (Glyph)
Date: Mon, 30 Jun 2014 12:36:47 -0700
Subject: [Twisted-Python] Ticket comment permissions on Trac
In-Reply-To: <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>
References: <CAFycZ9dP8Wv=7ks_=2bfTRWSEMxZprZ0J7tJR5acWpaqXZ1FMg@mail.gmail.com>
 <CAJtE5vQUmyLnfPfgFkDEq0C86H3N1zUTW4i4HQzQ8a1+xdB3LQ@mail.gmail.com>
 <C5FC425E-399E-4745-ACDD-43E0E6E709B8@twistedmatrix.com>
 <CAJtE5vSm7fcJDSxBd4Pi3hPsjxcFRjcSovLDWEaPVG_4a1P5HQ@mail.gmail.com>
Message-ID: <950B12D4-69B2-43E4-A5DC-8E8668AE6DA7@twistedmatrix.com>


On Jun 29, 2014, at 6:39 AM, Dustin J. Mitchell <dustin at v.igoro.us> wrote:

> I sent an email to exarkun at twistedmatrix.com five days ago and
> received daily graylist-failure emails for four days until it was
> finally rejected.  From talking to JP on irc, the issue is that the
> twistedmatrix MTA greylists per IP, but gmail retries from a different
> IP for each attempt, so the second attempt is never linked with the
> first.

Oh, hm.  I suppose I might have disabled greylisting for my account or something.  Can you send me email directly?  We should probably move this off-list :).

-glyph


