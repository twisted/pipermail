From iacovou at gmail.com  Thu Mar  1 10:12:27 2007
From: iacovou at gmail.com (kgi)
Date: Thu, 1 Mar 2007 17:12:27 +0200
Subject: [Twisted-Python] Foolscap: CopyableSlicer has no streamable
	attribute?
Message-ID: <200703011712.27251.iacovou@gmail.com>


Hi all.

I'm using Foolscap in a project with many disparate types and am gradually 
learning all the ins and outs of sending these all over the place.

I've got an exception occurring that is stumping me. I think it may be a bug 
in Foolscap, but I don't know enough about the inner workings to be sure.

The error is:

  'CopyableSlicer' object has no attribute 'streamable'

Which occurs here (I'm using SVN Foolscap, BTW):

> /usr/lib/python2.4/site-packages/foolscap/banana.py(312)pushSlicer()
(Pdb) l
312  ->         itr = slicer.slice(topSlicer.streamable, self)
313             next = iter(itr).next
(Pdb) whatis topSlicer
<class 'foolscap.copyable.CopyableSlicer'>
(Pdb) dir(topSlicer)
['__class__', '__delattr__', '__dict__', '__doc__', '__getattribute__', '__hash__',
'__implemented__', '__init__', '__module__', '__new__', '__providedBy__',
'__provides__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__',
'__str__', '__weakref__', 'childAborted', 'describe', 'obj', 'opentype',
'parent', 'registerReference', 'sendOpen', 'slice', 'sliceBody',
'slicerForObject', 'slices', 'trackReferences']

So the error happened when trying to access topSlicer.streamable, and indeed, 
dir() shows there is no such attribute on the object, which is of type 
CopyableSlicer. Now, CopyableSlicer is defined like this:

class CopyableSlicer(slicer.BaseSlicer):
    """I handle ICopyable objects (things which are copied by value)."""
    def slice(self, streamable, banana):
        yield 'copyable'
        copytype = self.obj.getTypeToCopy()
        assert isinstance(copytype, str)
        yield copytype
        state = self.obj.getStateToCopy()
        for k,v in state.iteritems():
            yield k
            yield v
    def describe(self):
        return "<%s>" % self.obj.getTypeToCopy()
registerAdapter(CopyableSlicer, ICopyable, tokens.ISlicer)

So it overrides slicer.BaseSlicer.slice(). Now, in slicer.BaseSlicer, we see:

class BaseSlicer:
    __metaclass__ = SlicerClass
    implements(tokens.ISlicer)
    ....
    def slice(self, streamable, banana):
        # this is what makes us ISlicer
        self.streamable = streamable
        assert self.opentype
        for o in self.opentype:
            yield o
        for t in self.sliceBody(streamable, banana):
            yield t

Note the line following the comment, "# this is what makes us ISlicer" sets 
a 'streamable' attribute on the object in the base class, but the subclass 
doesn't preserve this behaviour.

Is this a bug, or is my exception being caused by something else?

Regards,

Ricky




From johnpote at jptechnical.co.uk  Thu Mar  1 10:37:41 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 01 Mar 2007 15:37:41 +0000
Subject: [Twisted-Python] factory class has no __class__ attribute!
Message-ID: <45E6F345.8070903@jptechnical.co.uk>

Hi everyone,
Justed started out to get a twisted http server going. typed in example 
4.2 from Fettig's book but when I run it this strange error is reported:

twisted ver:2.5.0
python ver:2.4.4 (#71, Oct 18 2006, 08:34:43) [MSC v.1310 32 bit (Intel)]
Traceback (most recent call last):
  File "dataServe.py", line 31, in ?
    reactor.listenTCP(8000, myhttpFactory)
  File 
"c:\apps\python\244\lib\site-packages\twisted\internet\posixbase.py", 
line 467, in listenTCP
    p.startListening()
  File "c:\apps\python\244\lib\site-packages\twisted\internet\tcp.py", 
line 739, in startListening
    log.msg("%s starting on %s" % (self.factory.__class__, 
self._realPortNumber))
AttributeError: class myhttpFactory has no attribute '__class__'

anyone shed any light on this?

Also, for your information, I tried Fettig's example 2.6 
'dataforward.py'. This works fine on my Linux box but just hangs on my 
win XP box.

using Py 2.4.4 and Twisted 2.5.0 on winXP and Centos4.4 Linux.

Regards,
John Pote

source code
import sys
from twisted.web import http

class httpRequests(http.Request):
    pages = {
        '/':    '<h1>Home</h1>Home page',
        '/test':'<h1>Test</h1>Test page',
        }
    def process(s):
        if s.pages.has_key(s.path):
            s.write(s.pages[s.path])
        else:
            s.setResponseCode(http.NOT_FOUND)
            s.write("<h1>Not Found!</h1>Sorry, no such page.")
        s.finish()


class httpProtocol(http.HTTPChannel):
    requestFactory = httpRequests

class myhttpFactory(http.HTTPFactory):
    protocol = httpProtocol


if __name__ == "__main__":
    from twisted.internet import reactor
    from twisted._version import version
    print "twisted ver:"+version.short()
    print "python ver:"+sys.version

    reactor.listenTCP(8000, myhttpFactory)
    reactor.run()




From exarkun at divmod.com  Thu Mar  1 10:47:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 10:47:23 -0500
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <45E6F345.8070903@jptechnical.co.uk>
Message-ID: <20070301154723.17852.664834624.divmod.quotient.1409@ohm>

On Thu, 01 Mar 2007 15:37:41 +0000, John Pote <johnpote at jptechnical.co.uk> wrote:
>Hi everyone,
>Justed started out to get a twisted http server going. typed in example 4.2 
>from Fettig's book but when I run it this strange error is reported:
>
> [snip]
>AttributeError: class myhttpFactory has no attribute '__class__'
>
>anyone shed any light on this?
>
> [snip]
>
>class myhttpFactory(http.HTTPFactory):
>    protocol = httpProtocol
>

Here you defined a protocol factory class.

>
>if __name__ == "__main__":
>    from twisted.internet import reactor
>    from twisted._version import version
>    print "twisted ver:"+version.short()
>    print "python ver:"+sys.version
>
>    reactor.listenTCP(8000, myhttpFactory)

Here you passed it to listenTCP, when you should have pass an instance of
it to listenTCP:

    reactor.listenTCP(8000, myhttpFactory())

>    reactor.run()
>

Jean-Paul



From ldanielburr at mac.com  Thu Mar  1 10:53:20 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 01 Mar 2007 09:53:20 -0600
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <45E6F345.8070903@jptechnical.co.uk>
References: <45E6F345.8070903@jptechnical.co.uk>
Message-ID: <op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi John,

On Thu, 01 Mar 2007 09:37:41 -0600, John Pote <johnpote at jptechnical.co.uk>  
wrote:

[SNIP]

> source code
> import sys
> from twisted.web import http
>
> class httpRequests(http.Request):
>     pages = {
>         '/':    '<h1>Home</h1>Home page',
>         '/test':'<h1>Test</h1>Test page',
>         }
>     def process(s):
>         if s.pages.has_key(s.path):
>             s.write(s.pages[s.path])
>         else:
>             s.setResponseCode(http.NOT_FOUND)
>             s.write("<h1>Not Found!</h1>Sorry, no such page.")
>         s.finish()
>
>
> class httpProtocol(http.HTTPChannel):
>     requestFactory = httpRequests
>
> class myhttpFactory(http.HTTPFactory):
>     protocol = httpProtocol
>
>
> if __name__ == "__main__":
>     from twisted.internet import reactor
>     from twisted._version import version
>     print "twisted ver:"+version.short()
>     print "python ver:"+sys.version
>
>     reactor.listenTCP(8000, myhttpFactory)
                               ^^^^^^^^^^^^^
You have to pass an *instance* of myhttpFactory,
not the class itself.

Hope this helps,

L. Daniel Burr



From johnpote at jptechnical.co.uk  Thu Mar  1 12:21:32 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 01 Mar 2007 17:21:32 +0000
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45E6F345.8070903@jptechnical.co.uk>
	<op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45E70B9C.1040309@jptechnical.co.uk>

Thanks Jean-Paul and Daniel. Had to be a trivial problem. My excuse is I 
typed it in at the tail end of a migraine and I'm struggleing with my 
vari-focals anyway. Just didn't see the () to make an instance of the 
factory. Thanks boys.

John

L. Daniel Burr wrote:

>                               ^^^^^^^^^^^^^
> You have to pass an *instance* of myhttpFactory,
> not the class itself.
>
> Hope this helps,
>
> L. Daniel Burr
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From brown at esteem.com  Thu Mar  1 12:21:50 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 09:21:50 -0800
Subject: [Twisted-Python] using a reactor in a loop
Message-ID: <200703010921.51323.brown@esteem.com>

Hello,

I am trying to use a reactor in a loop. The application will go through the 
loop twice then hang when trying to stop the protocol. Here's my loop:

def main():
  factory = Factory()
  factory.numProtocols = 0
  factory.protocol = AqapProtocol
  while True:
    print 'running server'
    # do other work ...
    reactor.listenTCP(48555, factory)
    reactor.run() # stopped by protocol

Here's how the protocol stops the reactor:

  def connectionLost(self, reason):
    self.factory.numProtocols -= 1
    if not self.factory.numProtocols:
      print 'stopping reactor'
      reactor.stop()
      print 'reactor stopped'

I see the 'reactor stopped' get printed out twice through the loop but I don't 
see 'running server' get printed out a third time. So, reactor.run() is not 
returning. I must be missing something or going at this completely wrong. Any 
suggestions?

Thanks,
Tom



From exarkun at divmod.com  Thu Mar  1 12:32:51 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 12:32:51 -0500
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703010921.51323.brown@esteem.com>
Message-ID: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>

On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
>Hello,
>
>I am trying to use a reactor in a loop. The application will go through the
>loop twice then hang when trying to stop the protocol. Here's my loop:
>
> [snip]
>
>I see the 'reactor stopped' get printed out twice through the loop but I don't
>see 'running server' get printed out a third time. So, reactor.run() is not
>returning. I must be missing something or going at this completely wrong. Any
>suggestions?

The simple thing you're missing is that reactors can't be restarted. :)  One
way you can restructure your program to avoid needing to do this is to put
the body of your loop (minus reactor.run()) into a function which returns a
Deferred and to replace the call to reactor.stop() with code which fires that
Deferred.  You can set up callbacks on this Deferred to execute the whole
thing again if necessary.

Jean-Paul



From ldanielburr at mac.com  Thu Mar  1 12:42:18 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 01 Mar 2007 11:42:18 -0600
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703010921.51323.brown@esteem.com>
References: <200703010921.51323.brown@esteem.com>
Message-ID: <op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Tom,


On Thu, 01 Mar 2007 11:21:50 -0600, Tom Brown <brown at esteem.com> wrote:

> Hello,
>
> I am trying to use a reactor in a loop. The application will go through  
> the
> loop twice then hang when trying to stop the protocol. Here's my loop:
>

The reactor provides an event loop already, so I am confused as to why
you are trying to run it inside another loop.  Based on the code you
have posted here, I can't ascertain what your goal is.

Generally speaking, you'd be better served by using the reactor's
loop instead of your own, and stopping/starting your listeners,
rather than the reactor itself.

Also, stopping the reactor from within a protocol is probably
not ideal.  That's sort of like telling your OS to shut down
when you're done saving a file ;)

Hope this helps,

L. Daniel Burr



From brown at esteem.com  Thu Mar  1 13:46:10 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 10:46:10 -0800
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <200703010921.51323.brown@esteem.com>
	<op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <200703011046.10873.brown@esteem.com>

On Thursday 01 March 2007 09:42, L. Daniel Burr wrote:
> Hi Tom,
>
> On Thu, 01 Mar 2007 11:21:50 -0600, Tom Brown <brown at esteem.com> wrote:
> > Hello,
> >
> > I am trying to use a reactor in a loop. The application will go through
> > the
> > loop twice then hang when trying to stop the protocol. Here's my loop:
>
> The reactor provides an event loop already, so I am confused as to why
> you are trying to run it inside another loop.  Based on the code you
> have posted here, I can't ascertain what your goal is.
>
> Generally speaking, you'd be better served by using the reactor's
> loop instead of your own, and stopping/starting your listeners,
> rather than the reactor itself.
>
> Also, stopping the reactor from within a protocol is probably
> not ideal.  That's sort of like telling your OS to shut down
> when you're done saving a file ;)

Thanks for your reply.

My goal is this:
1) do specific tasks
2) run the server and wait for a connection
3) when a connection is made, do tasks as instructed by the client in the 
AqapProtocol code.
4) when connection is lost, close server and go back to 1)

Shutting down the server is not necessary if I could get past the 
reactor.run(). A previous post suggested I use deferreds. So, that is 
probably what I need to. I just need to learn how to use them.

Thanks,
Tom



From brown at esteem.com  Thu Mar  1 16:28:04 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 13:28:04 -0800
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>
References: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>
Message-ID: <200703011328.05383.brown@esteem.com>

On Thursday 01 March 2007 09:32, Jean-Paul Calderone wrote:
> On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
> >Hello,
> >
> >I am trying to use a reactor in a loop. The application will go through
> > the loop twice then hang when trying to stop the protocol. Here's my
> > loop:
> >
> > [snip]
> >
> >I see the 'reactor stopped' get printed out twice through the loop but I
> > don't see 'running server' get printed out a third time. So,
> > reactor.run() is not returning. I must be missing something or going at
> > this completely wrong. Any suggestions?
>
> The simple thing you're missing is that reactors can't be restarted. :) 
> One way you can restructure your program to avoid needing to do this is to
> put the body of your loop (minus reactor.run()) into a function which
> returns a Deferred and to replace the call to reactor.stop() with code
> which fires that Deferred.  You can set up callbacks on this Deferred to
> execute the whole thing again if necessary.

I read through the deferreds documentation and I'm thoroughly confused on how 
to set this up. I tried to simplify the problem with a simple function:

In [60]: def foo():
   ....:     print 'foo'
   ....:     return Deferred()
   ....:

In [61]: d = foo()
foo

In [62]: d.addCallback(foo)
Out[62]: <Deferred at 0xb786792cL>

So, now I'm lost as to what to do from here. Any suggestions would be 
appreciated.

Thanks,
Tom



From exarkun at divmod.com  Thu Mar  1 16:48:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 16:48:41 -0500
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703011328.05383.brown@esteem.com>
Message-ID: <20070301214841.17852.1621212838.divmod.quotient.1522@ohm>

On Thu, 1 Mar 2007 13:28:04 -0800, Tom Brown <brown at esteem.com> wrote:
>On Thursday 01 March 2007 09:32, Jean-Paul Calderone wrote:
>> On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
>> >Hello,
>> >
>> >I am trying to use a reactor in a loop. The application will go through
>> > the loop twice then hang when trying to stop the protocol. Here's my
>> > loop:
>> >
>> > [snip]
>> >
>> >I see the 'reactor stopped' get printed out twice through the loop but I
>> > don't see 'running server' get printed out a third time. So,
>> > reactor.run() is not returning. I must be missing something or going at
>> > this completely wrong. Any suggestions?
>>
>> The simple thing you're missing is that reactors can't be restarted. :)
>> One way you can restructure your program to avoid needing to do this is to
>> put the body of your loop (minus reactor.run()) into a function which
>> returns a Deferred and to replace the call to reactor.stop() with code
>> which fires that Deferred.  You can set up callbacks on this Deferred to
>> execute the whole thing again if necessary.
>
>I read through the deferreds documentation and I'm thoroughly confused on how
>to set this up. I tried to simplify the problem with a simple function:
>
>In [60]: def foo():
>   ....:     print 'foo'
>   ....:     return Deferred()
>   ....:
>
>In [61]: d = foo()
>foo
>
>In [62]: d.addCallback(foo)
>Out[62]: <Deferred at 0xb786792cL>
>
>So, now I'm lost as to what to do from here. Any suggestions would be
>appreciated.

Something needs to call that Deferred back for anything further to happen
(though what will happen next is a TypeError, since the callback, `foo',
doesn't accept any arguments, and all Deferred callbacks need to accept at
least one argument. ;)

For example:

   >>> def foo(result):
   ...     print 'Got a result:', result
   ...
   >>> d = Deferred()
   >>> d.addCallback(foo)
   <Deferred at 0xB7D26F4CL>
   >>> d.callback("Hello, world")
   Got a result: Hello, world
   >>>                                                       

Or to set up a (terrible, infinite, actually-infinitely-recursive) loop:

   >>> def bar(lastResult=None):
   ...     print 'Previous result was:', lastResult
   ...     d = Deferred()
   ...     d.addCallback(bar)
   ...     d.callback(str(lastResult) + "bar")
   ...
   >>>

(Slightly) More realistically, you might have something like this:

   >>> class NoOp(Protocol):
   ...     def __init__(self, onConnect):
   ...             self.onConnect = onConnect
   ...     def connectionMade(self):
   ...             self.transport.loseConnection()
   ...             self.onConnect.callback(None)
   ...
   >>> def baz(ignored=None):
   ...     d = Deferred()
   ...     p = NoOp(d)
   ...     f = ClientFactory()
   ...     f.protocol = lambda: p
   ...     reactor.connectTCP(host, port, f)
   ...     d.addCallback(baz)

Which is similar to the previous example, in that it sets up a loop with
a Deferred for an asynchronous operation (connecting to a remote host),
but won't lead to infinite recursion, and might actually resemble what you
want to do. :)

Jean-Paul



From johann.borck at densedata.com  Thu Mar  1 17:05:55 2007
From: johann.borck at densedata.com (Johann Borck)
Date: Thu, 01 Mar 2007 23:05:55 +0100
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703011046.10873.brown@esteem.com>
References: <200703010921.51323.brown@esteem.com>	<op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<200703011046.10873.brown@esteem.com>
Message-ID: <45E74E43.1070005@densedata.com>

Tom Brown wrote:
>
> My goal is this:
> 1) do specific tasks
> 2) run the server and wait for a connection
> 3) when a connection is made, do tasks as instructed by the client in the 
> AqapProtocol code.
> 4) when connection is lost, close server and go back to 1)
>
> Shutting down the server is not necessary if I could get past the 
> reactor.run(). A previous post suggested I use deferreds. So, that is 
> probably what I need to. I just need to learn how to use them.
>
>   

There's really good documentation about twisted and its event-driven 
programming model, there you'll find what you're looking for. in twisted 
you never "get past" the reactor.run() (until you quit the application), 
everything is done inside its loop. so when using twisted you should 
rather consider this:

1) run the event-loop
2) do specific tasks (if you need to complete long running tasks, you could use deferToThread or a pool of threads, to keep your event-loop responsive ) 
3) setup listener for connections (now you have your server)
4) when a connection is made, do tasks as instructed by the client in the 
AqapProtocol code.
5) if really necessary, stop listening for/refuse connections without stopping the eventloop, but maybe it's better to return a "service suspended, come back later" kind of message
6) goto 2) 

AFAIK twisted doesn't support restarting the reactor, there're some issues with cleaning up the state. But when you get used to it, you'll never feel the need to do that anyway, which might be the main reason why it's neither supported nor really discussed. You can do anything you want while the reactor is running. 

Johann


> Thanks,
> Tom
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From mlum at redhat.com  Sat Mar  3 20:19:49 2007
From: mlum at redhat.com (Margaret Lum)
Date: Sat, 03 Mar 2007 17:19:49 -0800
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
Message-ID: <45EA1EB5.9090509@redhat.com>

Hi folks,

I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system with 
the following packages installed:

mod_python-3.2.8-3.1
postgresql-python-8.1.4-1.1
python-2.4.3-18.fc6
python-2.4.3-19.el5
python-elementtree-1.2.6-5
python-krbV-1.0.13-4.el5
python-ldap-2.2.0-2.1
python-numeric-23.7-2.2.2
python-sqlite-1.1.7-1.2.1
python-urlgrabber-3.1.0-1
python-urlgrabber-3.1.0-2

This is the error I get when attempting to install both TwistedCore-2.5.0:
python setup.py install
Traceback (most recent call last):
  File "setup.py", line 20, in ?
    from twisted import copyright
  File "./twisted/__init__.py", line 22, in ?
    raise ImportError("you need zope.interface installed "
ImportError: you need zope.interface installed 
(http://zope.org/Products/ZopeInterface/)

And subsequently ../zope.interface-3.3.0:
running install
running build
running build_py
running build_ext
building '_zope_interface_coptimizations' extension
gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector 
--param=ssp-buffer-size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fPIC 
-I/usr/include/python2.4 -c 
src/zope/interface/_zope_interface_coptimizations.c -o 
build/temp.linux-x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
src/zope/interface/_zope_interface_coptimizations.c:15:20: error: 
Python.h: No such file or directory
src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
structmember.h: No such file or directory

Any quick tips would be appreciated.  Thanks for your time.

-- 
-Margaret

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3229 bytes
Desc: S/MIME Cryptographic Signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070303/48e1dbd0/attachment.bin 

From exarkun at divmod.com  Sat Mar  3 20:30:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 Mar 2007 20:30:41 -0500
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
In-Reply-To: <45EA1EB5.9090509@redhat.com>
Message-ID: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>

On Sat, 03 Mar 2007 17:19:49 -0800, Margaret Lum <mlum at redhat.com> wrote:
>Hi folks,
>
>I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system with the 
>following packages installed:
>
>mod_python-3.2.8-3.1
>postgresql-python-8.1.4-1.1
>python-2.4.3-18.fc6
>python-2.4.3-19.el5
>python-elementtree-1.2.6-5
>python-krbV-1.0.13-4.el5
>python-ldap-2.2.0-2.1
>python-numeric-23.7-2.2.2
>python-sqlite-1.1.7-1.2.1
>python-urlgrabber-3.1.0-1
>python-urlgrabber-3.1.0-2
>
>This is the error I get when attempting to install both TwistedCore-2.5.0:
>python setup.py install
>Traceback (most recent call last):
>  File "setup.py", line 20, in ?
>    from twisted import copyright
>  File "./twisted/__init__.py", line 22, in ?
>    raise ImportError("you need zope.interface installed "
>ImportError: you need zope.interface installed 
>(http://zope.org/Products/ZopeInterface/)
>
>And subsequently ../zope.interface-3.3.0:
>running install
>running build
>running build_py
>running build_ext
>building '_zope_interface_coptimizations' extension
>gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
>-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer- 
>size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fPIC 
>-I/usr/include/python2.4 -c 
>src/zope/interface/_zope_interface_coptimizations.c -o build/temp.linux- 
>x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
>src/zope/interface/_zope_interface_coptimizations.c:15:20: error: Python.h: 
>No such file or directory
>src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
>structmember.h: No such file or directory
>
>Any quick tips would be appreciated.  Thanks for your time.
>

I'm not terribly familiar with RHEL, but it looks like the Python packager
has done the typical thing and split out the files which he/she decided are
only useful for development purposes into a separate package (often named
python-dev or some such).  If this is the case, installing that package
should give you the necessary header files to build Python extension modules.

Jean-Paul




From mlum at redhat.com  Sat Mar  3 20:49:43 2007
From: mlum at redhat.com (Margaret Lum)
Date: Sat, 03 Mar 2007 17:49:43 -0800
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
In-Reply-To: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>
References: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>
Message-ID: <45EA25B7.8040509@redhat.com>

Yes, folks on #twisted told me that, as well.  I've built the Python 2.5 
source and will experiment with it from there, instead.
Thanks a lot!

Jean-Paul Calderone wrote:
> On Sat, 03 Mar 2007 17:19:49 -0800, Margaret Lum <mlum at redhat.com> wrote:
>> Hi folks,
>>
>> I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system 
>> with the following packages installed:
>>
>> mod_python-3.2.8-3.1
>> postgresql-python-8.1.4-1.1
>> python-2.4.3-18.fc6
>> python-2.4.3-19.el5
>> python-elementtree-1.2.6-5
>> python-krbV-1.0.13-4.el5
>> python-ldap-2.2.0-2.1
>> python-numeric-23.7-2.2.2
>> python-sqlite-1.1.7-1.2.1
>> python-urlgrabber-3.1.0-1
>> python-urlgrabber-3.1.0-2
>>
>> This is the error I get when attempting to install both 
>> TwistedCore-2.5.0:
>> python setup.py install
>> Traceback (most recent call last):
>>  File "setup.py", line 20, in ?
>>    from twisted import copyright
>>  File "./twisted/__init__.py", line 22, in ?
>>    raise ImportError("you need zope.interface installed "
>> ImportError: you need zope.interface installed 
>> (http://zope.org/Products/ZopeInterface/)
>>
>> And subsequently ../zope.interface-3.3.0:
>> running install
>> running build
>> running build_py
>> running build_ext
>> building '_zope_interface_coptimizations' extension
>> gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
>> -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector 
>> --param=ssp-buffer- size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC 
>> -fPIC -I/usr/include/python2.4 -c 
>> src/zope/interface/_zope_interface_coptimizations.c -o 
>> build/temp.linux- 
>> x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
>> src/zope/interface/_zope_interface_coptimizations.c:15:20: error: 
>> Python.h: No such file or directory
>> src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
>> structmember.h: No such file or directory
>>
>> Any quick tips would be appreciated.  Thanks for your time.
>>
>
> I'm not terribly familiar with RHEL, but it looks like the Python 
> packager
> has done the typical thing and split out the files which he/she 
> decided are
> only useful for development purposes into a separate package (often named
> python-dev or some such).  If this is the case, installing that package
> should give you the necessary header files to build Python extension 
> modules.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-Margaret

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3229 bytes
Desc: S/MIME Cryptographic Signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070303/f6b437b9/attachment.bin 

From exarkun at twistedmatrix.com  Sun Mar  4 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1172984702.03.1420964604@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-25 through 2007-03-04
Bugs opened: 25    Bugs closed: 1  Total open bugs: 877 (+24)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:      +16  |Highest:  +2          |Core:  +12             
|Enhancement:  +6  |High:     +4          |Names:  +2             
|Task:         +3  |Normal:  +19          |Trial:  +4             
                                          |Web2:   +1             
                                          |Words:  +6             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2495] Trial never passes a traceback to pyunit-API TestResult objects (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2495

[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

                    ===== High =====
[#2486] Change coding standard to require all new classes to be new style (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2486

[#2490] xpath.queryForString fails on unicode XML (opened by akrherz)
    defect          words      http://twistedmatrix.com/trac/ticket/2490

[#2496] Failure constructor API doesn't specify valid values of exc_tb (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2496

[#2497] FastCGI: infinite loop for packets bigger than 65k (opened by j2a)
    defect          web2       http://twistedmatrix.com/trac/ticket/2497

                    ===== Normal =====
[#2480] twisted.test.test_application.TestInternet2.testConnectionGettingRefused is racey (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2480

[#2481] Several trial tests fail when run multiple times in a single process (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2481

[#2482] TrialRunners need separate workingDirectory under Windows (opened by therve)
    defect          trial      http://twistedmatrix.com/trac/ticket/2482

[#2483] Undesirable garbage collector/spawnProcess interaction (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2483

[#2484] Support 2.6 and 3.0 with same code base (opened by itamarst)
    task            core       http://twistedmatrix.com/trac/ticket/2484

[#2485] 2to3 cross-compilation tools (opened by itamarst)
    task            core       http://twistedmatrix.com/trac/ticket/2485

[#2487] Switch all classes in Twisted to be new style (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2487

[#2488] more efficient adbapi (opened by jack)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2488

[#2489] trial.py script fails on Windows with Python 2.5 (opened by arkanes)
    defect          trial      http://twistedmatrix.com/trac/ticket/2489

[#2491] Deprecate and remove special case behavior for non-None IProtocol.dataRecived return value handling (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2491

[#2492] Unhandled socket error when making DNS query (opened by p1mrx)
    defect          names      http://twistedmatrix.com/trac/ticket/2492

[#2493] Incomplete documentation for exceptions which can be raised by IUDPTransport.write (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2493

[#2494] twisted.words.protocols.msn lineReceived bug (opened by qyb)
    defect          words      http://twistedmatrix.com/trac/ticket/2494

[#2498] trial hangs with threadpool (opened by jack)
    defect          trial      http://twistedmatrix.com/trac/ticket/2498

[#2499] Support DNS UPDATE messages (client and server) in Twisted Names (opened by exarkun)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2499

[#2500] Add @since to the coding standard (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2500

[#2501] defer.inlineCallbacks can't decorate an empty function (opened by jack)
    defect          core       http://twistedmatrix.com/trac/ticket/2501

[#2502] 'and' and 'or' operator suport for xpath (opened by jack)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2502

[#2503] Random garbage/debug prints in t-im irc support signon codepath (opened by exarkun)
    defect          words      http://twistedmatrix.com/trac/ticket/2503



Closed Bugs
______________________
                    ===== Highest =====
[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1901





From BRADLEY.S.GASPARD at saic.com  Mon Mar  5 12:58:50 2007
From: BRADLEY.S.GASPARD at saic.com (Gaspard, Bradley S)
Date: Mon, 5 Mar 2007 12:58:50 -0500
Subject: [Twisted-Python] TCP client that can connect to a server at
	periodic intervals
Message-ID: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>


I am trying to write a TCP client that at regular intervals connects to a server makes a request and then closes the connection. Below is the code I've been playing with. I've seen an example of LoopingCall used for periodically sending UPD packets but am not sure how it would apply here because it would seem I need to periodically create new Protocol instances in the ClientFactory class. I've looked for examples and through the documentation but have come up empty. Any pointers would be greatly appreceiated.

class AnnouncementFetcher(protocol.Protocol):

    def connectionMade(self):
        print "connectionMade called"
        self.transport.write(MSG_INFO_IPC)

    def dataReceived(self, data):
        print "Received: ", repr(data)
        # self.factory.share.saveData(data)
        self.transport.loseConnection()
        

class AnnouncementFetcherFactory(protocol.ClientFactory):
    protocol = AnnouncementFetcher

    def __init__(self, share):
        self.share = share

    def buildProtocol(self, addr):
        print 'Connected.'
        p = AnnouncementFetcher()
        p.factory = self
        return p

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection,  Reason:', reason
        reactor.callLater(5, self.buildProtocol, 'localhost')

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070305/f6c63222/attachment.htm 

From jarrod at vertigrated.com  Mon Mar  5 16:23:57 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Mon, 5 Mar 2007 16:23:57 -0500
Subject: [Twisted-Python] Any examples of SNMP enabling a Twisted Server?
Message-ID: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>

I was just wondering if there were any twisted server ( NOT CLIENT code )
that are SNMP enabled.
I found lots of SNMP client code via google. But nothing on SNMP interface
for a custom service?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070305/6b9f0731/attachment.htm 

From glyph at divmod.com  Mon Mar  5 16:55:43 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 05 Mar 2007 21:55:43 -0000
Subject: [Twisted-Python] TCP client that can connect to a server at
	periodic intervals
In-Reply-To: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
Message-ID: <20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>


On 05:58 pm, bradley.s.gaspard at saic.com wrote:
>
>I am trying to write a TCP client that at regular intervals connects to 
>a server makes a request and then closes the connection.

Your code has a fatal problem.  Nowhere are you actually creating a 
client connection, you're just creating protocol objects and not hooking 
them up to anything!  I've whipped up a quick periodic ping/pong 
client/server pair for you here, which should provide a useful starting 
point for you.

The key thing is the call to the ClientCreator's 'connectTCP' method, 
which actually hooks up an instantiated PingSender to a socket.

-------- cut

from twisted.internet.protocol import Protocol, ClientCreator, Factory
from twisted.internet.task import LoopingCall
from twisted.internet import reactor

class PingResponder(Protocol):
    buf = ''
    def dataReceived(self, data):
        self.buf += data
        if self.buf == 'PING':
            print 'PONGED!'
            self.transport.write('PONG')
            self.transport.loseConnection()

class PingSender(Protocol):
    buf = ''
    def connectionMade(self):
        self.transport.write("PING")
    def dataReceived(self, data):
        self.buf += data
    def connectionLost(self, reason):
        print "PONGED WITH: " +self.buf

def client():
    cc = ClientCreator(reactor, PingSender)
    def dontDelay():
        cc.connectTCP('localhost', 4321)
    lc = LoopingCall(dontDelay)
    lc.start(0.5)


def server():
    pf = Factory()
    pf.protocol = PingResponder
    svr = reactor.listenTCP(4321, pf)

import sys
if sys.argv[1] == 'client':
    client()
else:
    server()

reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070305/7bda4d9f/attachment.htm 

From daedalus at eigenmagic.com  Tue Mar  6 02:20:09 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 06 Mar 2007 18:20:09 +1100
Subject: [Twisted-Python] Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <1173165609.7343.79.camel@localhost>

On Mon, 2007-03-05 at 16:23 -0500, Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT
> code ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?

What do you want to do? Respond to SNMP Get, GetNext, Set type requests
from within a Service?

There's two bits to this, really: One part is the encoding and decoding
of the SNMP packets, and one is having the server decide what to do
about SNMP packets it receives.

You'd have a Protocol that would listenUDP() on a port for incoming
packets, and implement datagramReceived() to decode the SNMP packets,
and then take some action based on the type and contents of the packet.
I have code for the first part, but the second part is all about how
your Service/server behaves.

Which bit did you want example code for?

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Tue Mar  6 02:44:02 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 06 Mar 2007 18:44:02 +1100
Subject: [Twisted-Python] seafelt uses twisted
Message-ID: <1173167042.7343.97.camel@localhost>

Hey folks,

This is sort of related to the SNMP replies I've made recently. It says
in the wiki that you're interested in projects that use twisted, so I
thought I'd let you know that seafelt (http://www.seafelt.com) now uses
twisted at the core of the backend programs, for SNMP, ICMP and TCP
discovery and polling, as well as asynchronous database access to
PostgreSQL.

seafelt is a network performance monitoring and reporting tool that I've
been working on with Jim Crumpler for the past several years in our free
time. We started it because we thought MRTG was too limited and the
enterprise tools too unwieldy and expensive. We hope to do something
commercial with it at some point, but it's free for personal and
non-commercial use.

The SNMP library is released under the MIT license, and I'd be happy to
have the library components integrated into twisted, particularly bits
like the ICMP code, since the twisted-pair stuff appears to have
stalled? Incidentally, I wrote libsnmp quite a few years back because
PySNMP had some performance issues at large scale, so I don't know if
that's improved now that PySNMP is integrated with twisted.

I recently ported all our old threaded code across to twisted and it's
now even faster and more efficient, not to mention easier to debug. I
think I now finally grok Deferreds, though I still struggle with Errback
chains and Unhandled Deferred errors from time to time.

So yeah, check it out if you're interested in this kind of thing.

Big thumbs up to the twisted guys for providing us with such a great
framework. You guys rock, but you knew that already. ;)

-- 
Justin Warren <daedalus at eigenmagic.com>



From andrew-twisted at puzzling.org  Tue Mar  6 03:15:12 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 6 Mar 2007 19:15:12 +1100
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
References: <1173167042.7343.97.camel@localhost>
Message-ID: <20070306081512.GG14306@steerpike.home.puzzling.org>

Justin Warren wrote:
[...]
> 
> I recently ported all our old threaded code across to twisted and it's
> now even faster and more efficient, not to mention easier to debug. I
> think I now finally grok Deferreds, though I still struggle with Errback
> chains and Unhandled Deferred errors from time to time.

In case you're not aware of it, twisted.internet.defer.setDebugging(True) can be
helpful with understanding unhandled deferred errors.

-Andrew.




From manlio_perillo at libero.it  Tue Mar  6 05:48:01 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 06 Mar 2007 11:48:01 +0100
Subject: [Twisted-Python] memcached client for Twisted
Message-ID: <45ED46E1.20101@libero.it>

Hi.

I'm searching for a memcached client for Twisted.
I have searched with Google, but without success.


Thanks   Manlio Perillo



From therve at free.fr  Tue Mar  6 06:14:27 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Tue, 06 Mar 2007 12:14:27 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <45ED46E1.20101@libero.it>
References: <45ED46E1.20101@libero.it>
Message-ID: <20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>

Quoting Manlio Perillo <manlio_perillo at libero.it>:

> Hi.
>
> I'm searching for a memcached client for Twisted.
> I have searched with Google, but without success.

I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind me.

-- 
Thomas





From manlio_perillo at libero.it  Tue Mar  6 06:33:52 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 06 Mar 2007 12:33:52 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
References: <45ED46E1.20101@libero.it>
	<20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
Message-ID: <45ED51A0.3070609@libero.it>

Thomas Herv? ha scritto:
> Quoting Manlio Perillo <manlio_perillo at libero.it>:
> 
>> Hi.
>>
>> I'm searching for a memcached client for Twisted.
>> I have searched with Google, but without success.
> 
> I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind 
> me.
> 

Thanks.
I'll wait for it.



Manlio Perillo





From therve at free.fr  Tue Mar  6 08:24:41 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Tue, 06 Mar 2007 14:24:41 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <45ED51A0.3070609@libero.it>
References: <45ED46E1.20101@libero.it>
	<20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
	<45ED51A0.3070609@libero.it>
Message-ID: <20070306142441.ms04zgass9c84gok@wasabox.wasabout.net>

Quoting Manlio Perillo <manlio_perillo at libero.it>:

>> I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind me.
>>
>
> Thanks.
> I'll wait for it.

Here it is: http://twistedmatrix.com/trac/ticket/2506

-- 
Thomas





From wrobyn at cox.net  Tue Mar  6 09:44:49 2007
From: wrobyn at cox.net (wrobyn at cox.net)
Date: Tue, 6 Mar 2007 9:44:49 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
Message-ID: <14508398.1173192289905.JavaMail.root@eastrmwml03.mgt.cox.net>

Hello,
I am attempting to write an xmpp load testing thingy in python. I am hitting big walls with regard to creating concurrent connections above 250.. I need really 1-n concurrent connections, the upper limit would be around 500,000 but I would be happy at this point breaching the 250 ceiling.
Would twisted be able to handle this? Can someone post a simple loop or routine to log in 1-n "people" (i am using the increment in a counter as username) into a jabber server?
Thanks for the help
renee



From exarkun at divmod.com  Tue Mar  6 10:01:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Mar 2007 10:01:22 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <14508398.1173192289905.JavaMail.root@eastrmwml03.mgt.cox.net>
Message-ID: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>

On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>Hello,
>I am attempting to write an xmpp load testing thingy in python. I am hitting big walls with regard to creating concurrent connections above 250.. I need really 1-n concurrent connections, the upper limit would be around 500,000 but I would be happy at this point breaching the 250 ceiling.
>Would twisted be able to handle this? Can someone post a simple loop or routine to log in 1-n "people" (i am using the increment in a counter as username) into a jabber server?

>From the ~250 limit, I would guess you're on OS X and running into the
default per-process open file limit.  You can raise this using the `ulimit'
command. If you're on some other platform, then it'd be helpful if you gave
more details about the exact failure you're running into.

Overall, if you use the select reactor, you're limited to FD_SETSIZE, which
varies, but is usually within an order of magnitude of 1000.  If you use the
poll reactor, then you're limited to the number of TCP connections you can
have, which is going to be at most 65000 per IP address (and possibly as low
as 32000).  You might find performance lacking with large numbers of clients
even with the poll reactor, but the epoll reactor should do somewhat better.

I don't know if you'll be able to do 500k with a single process, but I think
you should at least be able to get to the point where the limit you hit is
the CPU, not something related to file descriptors.

Jean-Paul



From exarkun at divmod.com  Tue Mar  6 10:09:08 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Mar 2007 10:09:08 -0500
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
Message-ID: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>

On Tue, 06 Mar 2007 18:44:02 +1100, Justin Warren <daedalus at eigenmagic.com> wrote:
>Hey folks,
>
>This is sort of related to the SNMP replies I've made recently. It says
>in the wiki that you're interested in projects that use twisted, so I
>thought I'd let you know that seafelt (http://www.seafelt.com) now uses
>twisted at the core of the backend programs, for SNMP, ICMP and TCP
>discovery and polling, as well as asynchronous database access to
>PostgreSQL.
>
>seafelt is a network performance monitoring and reporting tool that I've
>been working on with Jim Crumpler for the past several years in our free
>time. We started it because we thought MRTG was too limited and the
>enterprise tools too unwieldy and expensive. We hope to do something
>commercial with it at some point, but it's free for personal and
>non-commercial use.
>
>The SNMP library is released under the MIT license, and I'd be happy to
>have the library components integrated into twisted, particularly bits
>like the ICMP code, since the twisted-pair stuff appears to have
>stalled? Incidentally, I wrote libsnmp quite a few years back because
>PySNMP had some performance issues at large scale, so I don't know if
>that's improved now that PySNMP is integrated with twisted.
>
>I recently ported all our old threaded code across to twisted and it's
>now even faster and more efficient, not to mention easier to debug. I
>think I now finally grok Deferreds, though I still struggle with Errback
>chains and Unhandled Deferred errors from time to time.
>
>So yeah, check it out if you're interested in this kind of thing.
>
>Big thumbs up to the twisted guys for providing us with such a great
>framework. You guys rock, but you knew that already. ;)
>

Hey, cool. :)  I'm doing some stuff in this area at the moment, so I may try
to do some of the work to get some of this stuff back into Twisted.  Pair
definitely hasn't had much attention for quite a while (I don't think the
latest pair release even works with the latest Twisted release), but maybe
this would be a good excuse to bring it up to date.

Jean-Paul

>--
>Justin Warren <daedalus at eigenmagic.com>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From Benjamin.Rutt at gs.com  Tue Mar  6 12:03:53 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Tue, 6 Mar 2007 12:03:53 -0500
Subject: [Twisted-Python] Learning about IPushProducer
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>

When running the following code (my 2nd twisted program!), it works as I
had hoped - it doesn't starve any clients that want to receive data
back, even with a simultaneously active really long streaming
server-to-client communication (i.e. one piggy client asking for
millions of bytes).  i.e. another client can get in and ask for just a
few bytes while a large payload is being delivered to a different
client.  Which is great!

Here's a sample interaction from the client side:

$ telnet localhost 8007
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
1
x
2
xx
3
xxx
10
xxxxxxxxxx
99999
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
[...lots of x's...]
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
bye
Connection closed by foreign host.
$ 

So I have 2 questions on my code:

1) am I doing anything wrong in setting up the plumbing?
2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

Here is the code, and output from the server is at the end.  Thanks --
Benjamin

#!/usr/bin/env python
import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime
import socket, string, random, time, traceback, shutil, popen2

from zope.interface import implements
from twisted.internet import protocol, defer, interfaces, error, reactor
from twisted.internet.protocol import Protocol, Factory
from twisted.protocols.basic import LineReceiver

class NonStarvingXGiver:
    implements(interfaces.IPushProducer)
    def __init__(self, howmany, consumer):
        self.howmany = howmany
        self.sent_already = 0
        self.paused = False
        self.consumer = consumer
    def beginSendingXs(self):
        self.deferred = deferred = defer.Deferred()
        self.consumer.registerProducer(self, False)
        return deferred
    def pauseProducing(self):
        print 'pauseProducing: invoked'
        self.paused = True
    def resumeProducing(self):
        print 'resumeProducing: invoked'
        self.paused = False
        maxchunksz = 1024
        while not self.paused and self.howmany > self.sent_already:
            chunksz = min(maxchunksz, self.howmany - self.sent_already)
            self.consumer.write('x' * chunksz)
            self.sent_already += chunksz
        if self.howmany == self.sent_already:
            self.consumer.write('\n')
            self.consumer.unregisterProducer()
            print 'resumeProducing: exiting for the last time'
    def stopProducing(self):
        print 'stopProducing: invoked'
        self.consumer.unregisterProducer()
        
class xgiver(LineReceiver):
    def lineReceived(self, howmany):
        print 'got line [%s] from client [%s]' % (howmany,
 
self.transport.getPeer())
        if howmany == 'bye':
            print 'goodbye to', self.transport.getPeer()
            self.transport.loseConnection()
            return
        try:
            howmany = int(howmany)
            s = NonStarvingXGiver(howmany, self.transport)
            s.beginSendingXs()
        except Exception, ex:
            self.transport.write("invalid input " + howmany + "\n")

# Next lines are magic:
factory = Factory()
factory.protocol = xgiver

# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(8007, factory)
reactor.run()


-------------------------------------------------------------------
Server output:

$ ./xgiver.py 
got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [99999] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
pauseProducing: invoked
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [bye] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
goodbye to IPv4Address(TCP, '127.0.0.1', 51007)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070306/f2bde4cb/attachment.htm 

From ellisonbg.net at gmail.com  Tue Mar  6 12:44:35 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 6 Mar 2007 10:44:35 -0700
Subject: [Twisted-Python] Twisted and setuptools
Message-ID: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>

There was some talk at PyCon 2007 of making twisted egg friendly
during the sprints.  Was any progress made on that front?

It was great to meet everyone at PyCon!

Cheers,

Brian



From radix at twistedmatrix.com  Tue Mar  6 14:10:29 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Mar 2007 14:10:29 -0500
Subject: [Twisted-Python] Twisted and setuptools
In-Reply-To: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>
References: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>
Message-ID: <60ed19d40703061110r610c09der45f2d4a21ddc4f7a@mail.gmail.com>

On 3/6/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> There was some talk at PyCon 2007 of making twisted egg friendly
> during the sprints.  Was any progress made on that front?
>
> It was great to meet everyone at PyCon!


Hi Brian,

The issues around easy_install support are summarized in the thread on
distutils-sig starting with this message:
http://mail.python.org/pipermail/distutils-sig/2007-March/007371.html

I'll try to do something about it soon.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From eprparadocs at gmail.com  Tue Mar  6 15:31:45 2007
From: eprparadocs at gmail.com (Chaz)
Date: Tue, 06 Mar 2007 15:31:45 -0500
Subject: [Twisted-Python] Re: Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <45EDCFB1.4040402@gmail.com>


Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT code
> ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I have found TwistedSNMP will work if you need a server side part. You
will need to do a little work to figure out what OIDs you will support,
but it will work.

Chuck Wegrzyn





From eprparadocs at gmail.com  Tue Mar  6 15:31:45 2007
From: eprparadocs at gmail.com (Chaz)
Date: Tue, 06 Mar 2007 15:31:45 -0500
Subject: [Twisted-Python] Re: Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <45EDCFB1.4040402@gmail.com>


Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT code
> ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I have found TwistedSNMP will work if you need a server side part. You
will need to do a little work to figure out what OIDs you will support,
but it will work.

Chuck Wegrzyn





From daedalus at eigenmagic.com  Tue Mar  6 15:52:49 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 07 Mar 2007 07:52:49 +1100
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>
References: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>
Message-ID: <1173214369.13827.15.camel@fnord.melbourne.eigenmagic.net>

On Tue, 2007-03-06 at 10:09 -0500, Jean-Paul Calderone wrote:

> Hey, cool. :)  I'm doing some stuff in this area at the moment, so I may try
> to do some of the work to get some of this stuff back into Twisted.  Pair
> definitely hasn't had much attention for quite a while (I don't think the
> latest pair release even works with the latest Twisted release), but maybe
> this would be a good excuse to bring it up to date.

Feel free to steal icmp.py from the seafelt-backend code. It was
inspired by twisted-pair and implements a raw IP packet encode/decode
thing, as well as a bare bones ICMP packet, and it works with twisted
2.2.

-- 
Justin Warren <daedalus at eigenmagic.com>



From yangjun_yulin at 126.com  Tue Mar  6 22:06:01 2007
From: yangjun_yulin at 126.com (yangjun_yulin at 126.com)
Date: Wed, 7 Mar 2007 11:06:01 +0800 (CST)
Subject: [Twisted-Python] is IOCP reactor on win2k mature enough fo
 r production use?
Message-ID: <45EE2C19.0000D8.06845@bj126app58.126.com>

i want to replace some old programs which run on win2k, the program is simple but have to deal with a lot of 
TCP connections, 1K on average and up to 5K+ on max. the program is mainly used to collect data,every connection send data in sevaral seconds(from 3 sec to 30 sec),every time the data is less than 100 Bytes.
    thanks for any suggestion! 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070307/d812b849/attachment.htm 

From johnpote at jptechnical.co.uk  Thu Mar  8 10:12:27 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 08 Mar 2007 15:12:27 +0000
Subject: [Twisted-Python] mktap and twistd
Message-ID: <45F027DB.70706@jptechnical.co.uk>

Hello all,

I'm just putting together a twisted app that will have an http server 
for a control UI and a TCP server running my own protocol. I've read the 
'Configuring and using the Twisted.Web Server' but am a bit confused as 
to the relation between rolling my own as described at the beginning of 
the howto and the use of mktap and twistd. Do I take it correctly that 
mktap makes a simple application that is not particularly adaptable? 
Assuming I roll my own as shown at the beginning of the howto how does 
twistd fit in? I seem to remember reading somewhere that twistd was the 
preferred means of starting a twisted app.

I've tried making a simple web server with mktap and twistd which works 
fine except on my winXP box does not run in the background. This is a 
winXP limitation I presume.

Any help appreciated,
John Pote




From exarkun at divmod.com  Thu Mar  8 11:30:16 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Mar 2007 11:30:16 -0500
Subject: [Twisted-Python] mktap and twistd
In-Reply-To: <45F027DB.70706@jptechnical.co.uk>
Message-ID: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>

On Thu, 08 Mar 2007 15:12:27 +0000, John Pote <johnpote at jptechnical.co.uk> wrote:
>Hello all,
>
>I'm just putting together a twisted app that will have an http server for a 
>control UI and a TCP server running my own protocol. I've read the 
>'Configuring and using the Twisted.Web Server' but am a bit confused as to 
>the relation between rolling my own as described at the beginning of the 
>howto and the use of mktap and twistd. Do I take it correctly that mktap 
>makes a simple application that is not particularly adaptable? Assuming I 
>roll my own as shown at the beginning of the howto how does twistd fit in? I 
>seem to remember reading somewhere that twistd was the preferred means of 
>starting a twisted app.

You have the right idea about "mktap web", I think.  It lets you configure
a web server which has some features like serving static files from the file
system and exposing per-user folders and other similar things, but it gives
you no way to add new functionality or customize the behavior beyond what can
be done via the command line arguments it offers.

You can hook your own thing into twistd easily enough, though.  You do this
by making a mktap/twistd plugin, as described here:

  http://twistedmatrix.com/projects/core/documentation/howto/tap.html

This will let you create a tap file using "mktap <your app>" and start
it with "twistd -f <your app>.tap".  Also, starting with Twisted 2.5,
you can skip the mktap step (for your plugin and for all the existing
mktap plugins) and just do "twistd <your app>", which will do the same
thing as the two commands above.

There are also tac files and arbitrary non-IServiceMaker plugins, but
IServiceMaker is probably a good place to start and should take care of
most or all of your needs for now.

>
>I've tried making a simple web server with mktap and twistd which works fine 
>except on my winXP box does not run in the background. This is a winXP 
>limitation I presume.

Yea, no daemonization support in twistd on Windows.  There's some code lying
around someplace to make a service, which is kind of like daemonization I
guess, but it hasn't been integrated with twistd as far as I know.

Jean-Paul



From johnpote at jptechnical.co.uk  Thu Mar  8 11:49:33 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 08 Mar 2007 16:49:33 +0000
Subject: [Twisted-Python] mktap and twistd
In-Reply-To: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>
References: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>
Message-ID: <45F03E9D.9070800@jptechnical.co.uk>

Thanks for the quick reply.
John

Jean-Paul Calderone wrote:

> On Thu, 08 Mar 2007 15:12:27 +0000, John Pote 
> <johnpote at jptechnical.co.uk> wrote:
>
>> Hello all,
>>
>> I'm just putting together a twisted app that will have an http server 
>> for a control UI and a TCP server running my own protocol. I've read 
>> the 'Configuring and using the Twisted.Web Server' but am a bit 
>> confused as to the relation between rolling my own as described at 
>> the beginning of the howto and the use of mktap and twistd. Do I take 
>> it correctly that mktap makes a simple application that is not 
>> particularly adaptable? Assuming I roll my own as shown at the 
>> beginning of the howto how does twistd fit in? I seem to remember 
>> reading somewhere that twistd was the preferred means of starting a 
>> twisted app.
>
>
> You have the right idea about "mktap web", I think.  It lets you 
> configure
> a web server which has some features like serving static files from 
> the file
> system and exposing per-user folders and other similar things, but it 
> gives
> you no way to add new functionality or customize the behavior beyond 
> what can
> be done via the command line arguments it offers.
>
> You can hook your own thing into twistd easily enough, though.  You do 
> this
> by making a mktap/twistd plugin, as described here:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> This will let you create a tap file using "mktap <your app>" and start
> it with "twistd -f <your app>.tap".  Also, starting with Twisted 2.5,
> you can skip the mktap step (for your plugin and for all the existing
> mktap plugins) and just do "twistd <your app>", which will do the same
> thing as the two commands above.
>
> There are also tac files and arbitrary non-IServiceMaker plugins, but
> IServiceMaker is probably a good place to start and should take care of
> most or all of your needs for now.
>
>>
>> I've tried making a simple web server with mktap and twistd which 
>> works fine except on my winXP box does not run in the background. 
>> This is a winXP limitation I presume.
>
>
> Yea, no daemonization support in twistd on Windows.  There's some code 
> lying
> around someplace to make a service, which is kind of like daemonization I
> guess, but it hasn't been integrated with twistd as far as I know.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From list-ener at strank.info  Thu Mar  8 13:39:21 2007
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 08 Mar 2007 19:39:21 +0100
Subject: [Twisted-Python] how to get the result of a callLater-scheduled
	func?
Message-ID: <45F05859.6010600@strank.info>

Hi,

I am scheduling a function with `callLater`.
The function happens to return a Deferred (but it might return anything),
and I was searching for an easy way to add a callback in order to
get the result.
I know a workaround by creating a Deferred first, adding the call as 
callback and another callback to get the result, but this seems overly 
complicated (see below).
Am I missing something?

So I set up some function to be scheduled (happens to be an 
inlineCallbacks-generator for testing, but I think this should not be 
relevant here)::

     >>> from twisted.internet import defer, reactor
     >>> @defer.inlineCallbacks
     ... def test(name):
     ...     print name, 'start'
     ...     yield # yielding a non-Deferred does nothing
     ...     print name, 'end'
     ...     yield defer.returnValue('uiuiui')

I know this works::

     >>> deftest = defer.Deferred().addCallback(test)
     >>> jamesdelcall = reactor.callLater(0, deftest.callback, 'James')
     >>> def stopverbose(whatever):
     ...     print 'stopping, result:', whatever
     ...     reactor.stop()
     >>> deftest.addCallback(stopverbose)
     >>> reactor.run()
     James start
     James end
     stopping, result: uiuiui

What I expected to be able to do::

     >>> jamesdelcall = reactor.callLater(0, test, 'James')
     >>> def stopverbose(whatever):
     ...     print 'stopping, result:', whatever
     ...     reactor.stop()
     >>> jamesdelcal.gethisdeferred.addCallback(stopverbose) # <- MAGIC
     >>> reactor.run()
     James start
     James end
     stopping, result: uiuiui

I looked at the code of `ReactorBase.callLater` and 
`ReactorBase.runUntilCurrent`:
Would it be possible to add a `Deferred` to `DelayedCall` (possibly 
created lazily, or maybe even make DelayedCall a subclass of Deferred),
so that such code is possible, or would this somehow destroy the 
mainloop logic?

cheers,
stefan




From exarkun at divmod.com  Thu Mar  8 14:37:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Mar 2007 14:37:37 -0500
Subject: [Twisted-Python] how to get the result of a callLater-scheduled
	func?
In-Reply-To: <45F05859.6010600@strank.info>
Message-ID: <20070308193737.17852.893732227.divmod.quotient.5159@ohm>

On Thu, 08 Mar 2007 19:39:21 +0100, Stefan Rank <list-ener at strank.info> wrote:
>Hi,
>
>I am scheduling a function with `callLater`.
>The function happens to return a Deferred (but it might return anything),
>and I was searching for an easy way to add a callback in order to
>get the result.
>I know a workaround by creating a Deferred first, adding the call as 
>callback and another callback to get the result, but this seems overly 
>complicated (see below).
>Am I missing something?
>
>So I set up some function to be scheduled (happens to be an inlineCallbacks- 
>generator for testing, but I think this should not be relevant here)::
>
>     >>> from twisted.internet import defer, reactor
>     >>> @defer.inlineCallbacks
>     ... def test(name):
>     ...     print name, 'start'
>     ...     yield # yielding a non-Deferred does nothing
>     ...     print name, 'end'
>     ...     yield defer.returnValue('uiuiui')
>
>I know this works::
>
>     >>> deftest = defer.Deferred().addCallback(test)
>     >>> jamesdelcall = reactor.callLater(0, deftest.callback, 'James')
>     >>> def stopverbose(whatever):
>     ...     print 'stopping, result:', whatever
>     ...     reactor.stop()
>     >>> deftest.addCallback(stopverbose)
>     >>> reactor.run()
>     James start
>     James end
>     stopping, result: uiuiui
>
>What I expected to be able to do::
>
>     >>> jamesdelcall = reactor.callLater(0, test, 'James')
>     >>> def stopverbose(whatever):
>     ...     print 'stopping, result:', whatever
>     ...     reactor.stop()
>     >>> jamesdelcal.gethisdeferred.addCallback(stopverbose) # <- MAGIC
>     >>> reactor.run()
>     James start
>     James end
>     stopping, result: uiuiui
>
>I looked at the code of `ReactorBase.callLater` and 
>`ReactorBase.runUntilCurrent`:
>Would it be possible to add a `Deferred` to `DelayedCall` (possibly created 
>lazily, or maybe even make DelayedCall a subclass of Deferred),
>so that such code is possible, or would this somehow destroy the mainloop 
>logic?

It's probably possible, but I'm not sure it's ideal.  It sounds like you
have a use-case for the `deferLater' function which has been proposed for
inclusion:

  http://twistedmatrix.com/trac/ticket/1875

With it, your example would look like either:

   d = deferLater(0)
   d.addCallback(lambda ignored: test('James'))
   d.addCallback(stopVerbose)

Or:

  d = deferLater(0, test, 'James')
  d.addCallback(stopVerbose)

Would that save enough typing to satisfy your use case?

Jean-Paul



From list-ener at strank.info  Thu Mar  8 17:40:21 2007
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 08 Mar 2007 23:40:21 +0100
Subject: [Twisted-Python] Re: how to get the result of a callLater-scheduled
	func?
In-Reply-To: <20070308193737.17852.893732227.divmod.quotient.5159@ohm>
References: <45F05859.6010600@strank.info>
	<20070308193737.17852.893732227.divmod.quotient.5159@ohm>
Message-ID: <45F090D5.2090007@strank.info>

on 08.03.2007 20:37 Jean-Paul Calderone said the following:
> On Thu, 08 Mar 2007 19:39:21 +0100, Stefan Rank <list-ener at strank.info> 
> wrote:
>> Hi,
>>
>> I am scheduling a function with `callLater`.
>> The function happens to return a Deferred (but it might return anything),
>> and I was searching for an easy way to add a callback in order to
>> get the result.
<snip>
> 
> It's probably possible, but I'm not sure it's ideal.  It sounds like you
> have a use-case for the `deferLater' function which has been proposed for
> inclusion:
> 
>  http://twistedmatrix.com/trac/ticket/1875
> 
> With it, your example would look like either:
> 
>   d = deferLater(0)
>   d.addCallback(lambda ignored: test('James'))
>   d.addCallback(stopVerbose)
> 
> Or:
> 
>  d = deferLater(0, test, 'James')
>  d.addCallback(stopVerbose)
> 
> Would that save enough typing to satisfy your use case?
> 
> Jean-Paul

Thanks, that's almost what I was looking for. :)

What is lost is the access to the DelayedCall, i.e. you cannot cancel or 
reschedule anymore.

The discussion at the ticket page revolves around which of the two 
variants above is preferable.
I very much prefer the second one,
but if the callable argument would default to None, then a simple::

    if callable_ is not None:
        ... # only now use addCallback inside deferLater

would allow both versions without any overhead.
If the DelayedCall functionality could be integrated somehow than I 
think this could simply replace reactor.callLater.

I'll post at the ticket page.

thanks again,
stefan




From wrobyn at cox.net  Fri Mar  9 07:04:27 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Fri, 9 Mar 2007 07:04:27 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
References: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
Message-ID: <D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>

Hi,
Yes I am on os X. Could you show me how to convert my code below to  
use poll? Thanks!
[mport sys
import socket
import time
import resource
from threading import Thread
from twisted.words.protocols.jabber import client, jid
from twisted.words.xish import domish
from twisted.internet import reactor

resource.setrlimit(8,[65000,65000])
class testit():

     def authd(xmlstream):
         print "authenticated"

         presence = domish.Element(('jabber:client','presence'))
         xmlstream.send(presence)
     #xmlstream.addObserver('/message',  debug)
     #xmlstream.addObserver('/presence', debug)
     #xmlstream.addObserver('/iq',       debug)

     def debug(elem):
         print elem.toXml().encode('utf-8')
         print "="*20
     for i in range(981,2000):
         print i
         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
         factory = client.basicClientFactory(myJid, 'test')
         factory.addBootstrap('//event/stream/authd',authd)
         reactor.connectTCP('jbrsrvrname',5222,factory)

     reactor.run()

current = testit()
current.start()

On Mar 6, 2007, at 10:01 AM, Jean-Paul Calderone wrote:

> On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>> Hello,
>> I am attempting to write an xmpp load testing thingy in python. I  
>> am hitting big walls with regard to creating concurrent  
>> connections above 250.. I need really 1-n concurrent connections,  
>> the upper limit would be around 500,000 but I would be happy at  
>> this point breaching the 250 ceiling.
>> Would twisted be able to handle this? Can someone post a simple  
>> loop or routine to log in 1-n "people" (i am using the increment  
>> in a counter as username) into a jabber server?
>
>> From the ~250 limit, I would guess you're on OS X and running into  
>> the
> default per-process open file limit.  You can raise this using the  
> `ulimit'
> command. If you're on some other platform, then it'd be helpful if  
> you gave
> more details about the exact failure you're running into.
>
> Overall, if you use the select reactor, you're limited to  
> FD_SETSIZE, which
> varies, but is usually within an order of magnitude of 1000.  If  
> you use the
> poll reactor, then you're limited to the number of TCP connections  
> you can
> have, which is going to be at most 65000 per IP address (and  
> possibly as low
> as 32000).  You might find performance lacking with large numbers  
> of clients
> even with the poll reactor, but the epoll reactor should do  
> somewhat better.
>
> I don't know if you'll be able to do 500k with a single process,  
> but I think
> you should at least be able to get to the point where the limit you  
> hit is
> the CPU, not something related to file descriptors.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sflist at ihonk.com  Fri Mar  9 07:37:44 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 Mar 2007 04:37:44 -0800
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
References: <1173167042.7343.97.camel@localhost>
Message-ID: <1173443864.19805.1.camel@lothar>

On Tue, 2007-03-06 at 18:44 +1100, Justin Warren wrote:
> I think I now finally grok Deferreds, though I still struggle with Errback
> chains and Unhandled Deferred errors from time to time.

Couldn't have said it better myself. Glad to know someone else is in the
same place I am! :-)

Steve




From wrobyn at cox.net  Fri Mar  9 16:34:47 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Fri, 9 Mar 2007 16:34:47 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>
References: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
	<D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>
Message-ID: <63EAC33B-9D6C-4C8E-84A6-D595AAD62061@cox.net>

and for some reason from twisted.words.protocols.jabber.jid
imports reactor but doesnt use it as far as I can tell, that caused  
the below code to fail if you imported pollreactor.
Still would love to see an example of the below code converted to use  
pollreactor

On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:

> Hi,
> Yes I am on os X. Could you show me how to convert my code below to  
> use poll? Thanks!
> [mport sys
> import socket
> import time
> import resource
> from threading import Thread
> from twisted.words.protocols.jabber import client, jid
> from twisted.words.xish import domish
> from twisted.internet import reactor
>
> resource.setrlimit(8,[65000,65000])
> class testit():
>
>     def authd(xmlstream):
>         print "authenticated"
>
>         presence = domish.Element(('jabber:client','presence'))
>         xmlstream.send(presence)
>     #xmlstream.addObserver('/message',  debug)
>     #xmlstream.addObserver('/presence', debug)
>     #xmlstream.addObserver('/iq',       debug)
>
>     def debug(elem):
>         print elem.toXml().encode('utf-8')
>         print "="*20
>     for i in range(981,2000):
>         print i
>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>         factory = client.basicClientFactory(myJid, 'test')
>         factory.addBootstrap('//event/stream/authd',authd)
>         reactor.connectTCP('jbrsrvrname',5222,factory)
>
>     reactor.run()
>
> current = testit()
> current.start()
>
> On Mar 6, 2007, at 10:01 AM, Jean-Paul Calderone wrote:
>
>> On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>>> Hello,
>>> I am attempting to write an xmpp load testing thingy in python. I  
>>> am hitting big walls with regard to creating concurrent  
>>> connections above 250.. I need really 1-n concurrent connections,  
>>> the upper limit would be around 500,000 but I would be happy at  
>>> this point breaching the 250 ceiling.
>>> Would twisted be able to handle this? Can someone post a simple  
>>> loop or routine to log in 1-n "people" (i am using the increment  
>>> in a counter as username) into a jabber server?
>>
>>> From the ~250 limit, I would guess you're on OS X and running  
>>> into the
>> default per-process open file limit.  You can raise this using the  
>> `ulimit'
>> command. If you're on some other platform, then it'd be helpful if  
>> you gave
>> more details about the exact failure you're running into.
>>
>> Overall, if you use the select reactor, you're limited to  
>> FD_SETSIZE, which
>> varies, but is usually within an order of magnitude of 1000.  If  
>> you use the
>> poll reactor, then you're limited to the number of TCP connections  
>> you can
>> have, which is going to be at most 65000 per IP address (and  
>> possibly as low
>> as 32000).  You might find performance lacking with large numbers  
>> of clients
>> even with the poll reactor, but the epoll reactor should do  
>> somewhat better.
>>
>> I don't know if you'll be able to do 500k with a single process,  
>> but I think
>> you should at least be able to get to the point where the limit  
>> you hit is
>> the CPU, not something related to file descriptors.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Fri Mar  9 16:52:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Mar 2007 16:52:20 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <63EAC33B-9D6C-4C8E-84A6-D595AAD62061@cox.net>
Message-ID: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>

On Fri, 9 Mar 2007 16:34:47 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>and for some reason from twisted.words.protocols.jabber.jid
>imports reactor but doesnt use it as far as I can tell, that caused  the 
>below code to fail if you imported pollreactor.
>Still would love to see an example of the below code converted to use 
>pollreactor

Easy, just import pollreactor first.

>
>On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:
>>Hi,
>>Yes I am on os X. Could you show me how to convert my code below to  use 
>>poll? Thanks!

from twisted.internet import pollreactor
pollreactor.install()

>>[mport sys
>>import socket
>>import time
>>import resource
>>from threading import Thread
>>from twisted.words.protocols.jabber import client, jid
>>from twisted.words.xish import domish
>>from twisted.internet import reactor
>>
>>[snip]

Jean-Paul



From brian.costlow at gmail.com  Fri Mar  9 18:34:17 2007
From: brian.costlow at gmail.com (Brian Costlow)
Date: Fri, 9 Mar 2007 18:34:17 -0500
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
Message-ID: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>

I'm trying to rewrite an existing 'back end' server application. The old app
worked something like this. Client boxes, using multiple methods (ftp, copy
over nfs mount, even rsh sessions) create a file on disk on the server,
which was either XML or a simple proprietary data format. The server was
done in python. It loops over a direcory, looking for new files, and
processes them into a MySQL database.

I patched the client (not python, but proprietary vendor apps, which are
glued together via TCL,) to just write the data to a TCP socket. Using
Twisted, I now have a test TCP server running, which uses LineReceiver, with
each line recieved added to a list, and a connection close callback that
writes the data to a file. This last part isn't part of the final app, and
it does block, i know. It's just for me to see the data we're gettiing. So
we have a working system now that transmits the files via a unified method,
to a server that can handle simultaneous connections. Cool. Now I have to do
real work with the data.

I have some architectural questions on how to proceed. Take the case of the
XML data. In the old version, it reads the XML into an ElementTree, uses
business logic to iterate through all or part of the tree, building a key,
value dict, that dict is passed to another object whose methods construct
sql inserts from the dict data and makes db calls. (That's simplified, the
current db layer is a huge rube goldberg).

So the easy way out, it seems to me, would be to make the LineRecever
callback build the ElementTree as I get it. Then wrap minimally modfied
versions of the code that processes the ElementTree to the dict, and the
dict to the database, in a callInThread or deferToThread call. Which is a
lot of use of the thread pool, which seems to violate the idea of a
low-overhead asynchronous event loop.

So is there a better way? For example, if I have a callback chain, when the
first one fires, do they all fire in sequence as the prior callback returns,
or does the chain yield to other events. If it does, I could potentially
break the code into smaller chunks, say so each one processed enough tree
data to generate 1 dict entry, and add the chunks as a callback chain on the
connectionLost?

Note: None of this code is tested, I'm just trying to get the basic logic
worked out.

Something like this?

def connectionLost(self):
    d = defer.Deferrred()
    d.addCallback(chunkOne)
    d.addCallback(chunkTwo)
    d.addCallback(chunkThree)
    d.addCallback(chunkN...)
    d.addCallback(finish)
    d.callback(self.myElementTree)

If I have a bunch of connections that close as simultaneously as the
implementation allows, does that sequence all fire first for one closing
connection, then the next, and so on? Or do they intermix?

Or do I need to set up a chain of deferreds with explicit scheduling?

Something like:

def connectionLost(self):
   self.myDict = {}
   finish()

def finish(self)
   d = defer.Deferred
   def realFinish(d):
         do stuff to clean up
   d.addCallback(ChunkThree)
   d.addCallback(realFinish)
   reactor.callLater(0, d.callback, None)

def chunkThree()
    d = defer.Deferred
    def realChunkThree(self.MyElementTree, self.myDict):
         do stuff to process one dict key
    d.addCallback(ChunkTwo)
    d.addCallback(realChunkThree)
    reactor.callLater(0, d.callback, None)
    return d

etc,

The above doesn't really seem much different than the first, it's just that
we schedule the calls explicitly, and pass data around in multiple
deferreds.

The  last thing I though about doing was something like this:

def connectionLost(self):
    myDict = {}
    d.defer.Deferred()
    d.addCallback(finish)
    myIterObj = self.myElementTree.getIterator()
    def processChunk():
        try:
            foo = myIterObj.next()
            do stuff with foo to process element to dict entry
        except StopIteration:
            d.callback(None)
        except:
            error handling stuff
        else
            reactor.callLater(0, processChunk)
    return d

Except I found some really similar code in an old thread, where Bob Ippolito
says, 'just use flow instead'
http://twistedmatrix.com/pipermail/twisted-python/2003-July/005013.html

But the current flow doc says: Don't use flow, write asynchronous code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070309/1925c925/attachment.htm 

From mithrandi-twisted-python at mithrandi.za.net  Fri Mar  9 19:16:33 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 10 Mar 2007 02:16:33 +0200
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
Message-ID: <20070310001633.GA31905@mithrandi.za.net>

* Brian Costlow <brian.costlow at gmail.com> [2007-03-09 18:34:17 -0500]:

> 
> def connectionLost(self):
>    myDict = {}
>    d.defer.Deferred()
>    d.addCallback(finish)
>    myIterObj = self.myElementTree.getIterator()
>    def processChunk():
>        try:
>            foo = myIterObj.next()
>            do stuff with foo to process element to dict entry
>        except StopIteration:
>            d.callback(None)
>        except:
>            error handling stuff
>        else
>            reactor.callLater(0, processChunk)
>    return d

This is very similar to what twisted.internet.task.coiterate() does. See
the following:

    http://jcalderone.livejournal.com/24285.html
    http://twistedmatrix.com/documents/current/api/twisted.internet.task.html

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070310/2954f0e9/attachment.pgp 

From andrew-twisted at puzzling.org  Fri Mar  9 20:02:30 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 10 Mar 2007 12:02:30 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
Message-ID: <20070310010230.GX14306@steerpike.home.puzzling.org>

Brian Costlow wrote:
[...]
> 
> So the easy way out, it seems to me, would be to make the LineRecever callback
> build the ElementTree as I get it. Then wrap minimally modfied versions of the
> code that processes the ElementTree to the dict, and the dict to the database,
> in a callInThread or deferToThread call. Which is a lot of use of the thread
> pool, which seems to violate the idea of a low-overhead asynchronous event
> loop.

Most databases don't really give you any choice but to use threads.
twisted.enterprise.adbapi helps a little.  Compared to the time it takes for the
database to do its stuff, I doubt you'll notice the thread overhead.

> So is there a better way? For example, if I have a callback chain, when the
> first one fires, do they all fire in sequence as the prior callback returns, or
> does the chain yield to other events. If it does, I could potentially break the
> code into smaller chunks, say so each one processed enough tree data to
> generate 1 dict entry, and add the chunks as a callback chain on the
> connectionLost?

Deferreds are completely independent of the reactor (i.e. event loop).  They
don't any magical yielding to the event loop or anything like that.  Deferreds
simply manage the chain of callbacks, and arrange for them to be called as soon
as the the data they're waiting on is there.

> Note: None of this code is tested, I'm just trying to get the basic logic
> worked out.
> 
> Something like this?
> 
> def connectionLost(self):
>     d = defer.Deferrred()
>     d.addCallback(chunkOne)
>     d.addCallback(chunkTwo)
>     d.addCallback(chunkThree)
>     d.addCallback(chunkN...)
>     d.addCallback(finish)
>     d.callback(self.myElementTree)
> 
> If I have a bunch of connections that close as simultaneously as the
> implementation allows, does that sequence all fire first for one closing
> connection, then the next, and so on? Or do they intermix?

They will all fire immediately.  It's just like doing:

    result = chunkOne(self.myElementTree)
    result = chunkTwo(result)
    result = chunkTwo(result)
    result = chunkThree(result)
    result = chunkN(result)
    ...
    finish(result)

i.e. synchronous.

> Or do I need to set up a chain of deferreds with explicit scheduling?
> 
> Something like:
> 
> def connectionLost(self):
>    self.myDict = {}
>    finish()
> 
> def finish(self)
>    d = defer.Deferred
>    def realFinish(d):
>          do stuff to clean up
>    d.addCallback(ChunkThree)
>    d.addCallback(realFinish)
>    reactor.callLater(0, d.callback, None)
> 
> def chunkThree()
>     d = defer.Deferred
>     def realChunkThree(self.MyElementTree, self.myDict):
>          do stuff to process one dict key
>     d.addCallback(ChunkTwo)
>     d.addCallback(realChunkThree)
>     reactor.callLater(0, d.callback, None)
>     return d

This is an awkward way to arrange it, but this would let the reactor do work
between the chunks, yes.

> The above doesn't really seem much different than the first, it's just that we
> schedule the calls explicitly, and pass data around in multiple deferreds. 
> 
> The  last thing I though about doing was something like this:
> 
> def connectionLost(self):
>     myDict = {}
>     d.defer.Deferred()
>     d.addCallback(finish)
>     myIterObj = self.myElementTree.getIterator()
>     def processChunk():
>         try:
>             foo = myIterObj.next()
>             do stuff with foo to process element to dict entry
>         except StopIteration:
>             d.callback(None)
>         except:
>             error handling stuff
>         else
>             reactor.callLater(0, processChunk)
>     return d

This approach can work a little better, yeah.

Note that returning a Deferred from connectionLost doesn't do anything.  What do
you want to wait on the deferred (i.e. what in your code is waiting on this
result)?  As far as I can tell, nothing.  If so, you probably don't want a
Deferred at all.

http://twistedmatrix.com/projects/core/documentation/examples/longex.py and
http://twistedmatrix.com/projects/core/documentation/examples/longex2.py

Have some basic examples of this sort of stuff.

There's also the "cooperator" module in
http://divmod.org/trac/wiki/DivmodEpsilon, but it's totally lacking in
documentation.  So who knows if it's really appropriate for this, or if you'll
be able to figure out how to use it.

> Except I found some really similar code in an old thread, where Bob Ippolito
> says, 'just use flow instead'
> http://twistedmatrix.com/pipermail/twisted-python/2003-July/005013.html
> 
> But the current flow doc says: Don't use flow, write asynchronous code.

In this case, twisted.internet.defer.inlineCallbacks could probably be used
instead of flow:

     @inlineCallbacks
     def doChunks():
         for chunk in chunks:
             # do the next chunk
             chunk()
             # yield to the event loop
             d = Deferred()
             reactor.callLater(0, d.callback, None)
             yield d

(The deferLater function in http://twistedmatrix.com/trac/ticket/1875 would make
this even shorter.)

Finally, are you sure you really need to chunk this processing at all?
ElementTree is pretty fast; it's entirely possible that breaking it into chunks
and going in-and-out of the event loop repeatedly will hurt your performance
more than just doing it all at once.  It might be a good idea to check if you
actually have a real performance problem (rather than just a theoretical one)
before you worry about solving it.

Similarly, consider just putting the computationally expensive stuff in a
deferToThread call and letting your OS worry about scheduling it.  If the
processing doesn't need to interact much with the event-driven code, then this
can be a good option.

-Andrew.




From mithrandi-twisted-python at mithrandi.za.net  Fri Mar  9 20:30:50 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 10 Mar 2007 03:30:50 +0200
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <20070310013050.GB31905@mithrandi.za.net>

* Andrew Bennetts <andrew-twisted at puzzling.org> [2007-03-10 12:02:30 +1100]:

> There's also the "cooperator" module in
> http://divmod.org/trac/wiki/DivmodEpsilon, but it's totally lacking in
> documentation.  So who knows if it's really appropriate for this, or if you'll
> be able to figure out how to use it.

cooperator is now in twisted.internet.task, see my other mail.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070310/46076f5f/attachment.pgp 

From daedalus at eigenmagic.com  Sat Mar 10 00:48:45 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sat, 10 Mar 2007 16:48:45 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous
	code for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <1173505725.26267.32.camel@fnord.melbourne.eigenmagic.net>

On Sat, 2007-03-10 at 12:02 +1100, Andrew Bennetts wrote:

> Finally, are you sure you really need to chunk this processing at all?
> ElementTree is pretty fast; it's entirely possible that breaking it into chunks
> and going in-and-out of the event loop repeatedly will hurt your performance
> more than just doing it all at once.  It might be a good idea to check if you
> actually have a real performance problem (rather than just a theoretical one)
> before you worry about solving it.

I agree. Premature optimisation is the root of all evil. I've done some
really dumb things trying to optimise too early, though I thought I was
being really clever at the time. If you're not sure how you're going to
do things, write a prototype first, then rewrite from scratch using
everything you learn from the prototype. You end up with better code in
the end, and it's faster and easier than trying to gradually migrate
old, poorly written code, in my experience.

-- 
Justin Warren <daedalus at eigenmagic.com>



From manlio_perillo at libero.it  Sat Mar 10 05:32:18 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Mar 2007 11:32:18 +0100
Subject: [Twisted-Python] Need some pointers for writing asynchronous
	code	for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <45F28932.8090508@libero.it>

Andrew Bennetts ha scritto:
> Brian Costlow wrote:
> [...]
>> So the easy way out, it seems to me, would be to make the LineRecever callback
>> build the ElementTree as I get it. Then wrap minimally modfied versions of the
>> code that processes the ElementTree to the dict, and the dict to the database,
>> in a callInThread or deferToThread call. Which is a lot of use of the thread
>> pool, which seems to violate the idea of a low-overhead asynchronous event
>> loop.
> 
> Most databases don't really give you any choice but to use threads.
> twisted.enterprise.adbapi helps a little.  Compared to the time it takes for the
> database to do its stuff, I doubt you'll notice the thread overhead.
> 

A pure asyncronous database API (written in Twisted), for PostgreSQL 
only, is pgasync
http://jamwt.com/pgasync/
and pglib
http://developer.berlios.de/projects/pglib/


Regards  Manlio Perillo



From wrobyn at cox.net  Sat Mar 10 09:24:49 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Sat, 10 Mar 2007 09:24:49 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>
References: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>
Message-ID: <D13B7408-C731-4F00-AD71-5442CBCC0DB0@cox.net>

That throws an error if I import pollreactor in my code, then jid  
tries to import reactor, days there is already an instance or something

On Mar 9, 2007, at 4:52 PM, Jean-Paul Calderone wrote:

> On Fri, 9 Mar 2007 16:34:47 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>> and for some reason from twisted.words.protocols.jabber.jid
>> imports reactor but doesnt use it as far as I can tell, that  
>> caused  the below code to fail if you imported pollreactor.
>> Still would love to see an example of the below code converted to  
>> use pollreactor
>
> Easy, just import pollreactor first.
>
>>
>> On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:
>>> Hi,
>>> Yes I am on os X. Could you show me how to convert my code below  
>>> to  use poll? Thanks!
>
> from twisted.internet import pollreactor
> pollreactor.install()
>
>>> [mport sys
>>> import socket
>>> import time
>>> import resource
>>> from threading import Thread
>>> from twisted.words.protocols.jabber import client, jid
>>> from twisted.words.xish import domish
>>> from twisted.internet import reactor
>>>
>>> [snip]
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sat Mar 10 10:54:42 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Mar 2007 10:54:42 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <D13B7408-C731-4F00-AD71-5442CBCC0DB0@cox.net>
Message-ID: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>

On Sat, 10 Mar 2007 09:24:49 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>That throws an error if I import pollreactor in my code, then jid  tries to 
>import reactor, days there is already an instance or something

You'll have to provide more information than this.  The behavior you describe
isn't what should happen given the program snippet below, nor what happens
when I simplify it to just this:

  exarkun at boson:~$ python
  Python 2.4.3 (#2, Oct  6 2006, 07:52:30)
  [GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
  Type "help", "copyright", "credits" or "license" for more information.
  >>> from twisted.internet import pollreactor
  >>> pollreactor.install()
  >>> from twisted.words.protocols.jabber import jid
  >>> # No error

Generally when you encounter a problem you need help with, the best thing to do
is to create the simplest possible example which demonstrates the problem and
include it with your question.  Without this, responders have to guess at what
you're doing, which leads to incorrect, irrelevant, or ambiguous answers.

Jean-Paul



From brian.costlow at gmail.com  Sat Mar 10 13:55:30 2007
From: brian.costlow at gmail.com (Brian Costlow)
Date: Sat, 10 Mar 2007 13:55:30 -0500
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <45F28932.8090508@libero.it>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
	<45F28932.8090508@libero.it>
Message-ID: <89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>

Thanks everyone for your comments, you were all a lot of help.

Andrew, I was aware that the deferred didn't go anywhere, I oversimplified
things in the example, in the original design in my head, the code that
actually does the db calls was waiting on the deferred. Actually, the way
it's written, it never even runs, I left out the first call to
processChunk() necessary to start the iteration. But your comments helped a
lot.

My concern wasn't ElementTrees built in stuff, but 300+ line spaghetti
procedure that massages the element tree data into a dictionary. That needs
to be rewritten anyway.

I messed around this morning, and here's what I have done. I compiled
cElementTree onto the test box. The LineReceiver uses
cElementTree.XMLTreeBuilder.feed() and builds the tree on the fly.

At connectionClose it calls a method that runs the business logic routine in
a thread, using threads.deferToThread, and adding a callback; said callback
executes the db code. That still blocks for now.

So, my current plan is to refactor the tree-->dict code, but call that in a
separate thread. Rewite the dict --> db layer. The only question I have, is
since it's a long series of insert/update calls in which I don't need
results other than, 'it worked' , is, after reading the comments, it seems
like I might just best be served by writing a series of straight dbi calls;
and wrapping that all in one call to thread.callInThread.

The db is MySQL, and feeds a PHP-based reporting app, so I can't use
pgasync.

Thanks again all.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070310/cd040366/attachment.htm 

From andrew-twisted at puzzling.org  Sat Mar 10 20:35:24 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 11 Mar 2007 12:35:24 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
	<45F28932.8090508@libero.it>
	<89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>
Message-ID: <20070311013524.GB14306@steerpike.home.puzzling.org>

Brian Costlow wrote:
[...]
> So, my current plan is to refactor the tree-->dict code, but call that in a
> separate thread. Rewite the dict --> db layer. The only question I have, is
> since it's a long series of insert/update calls in which I don't need results
> other than, 'it worked' , is, after reading the comments, it seems like I might
> just best be served by writing a series of straight dbi calls; and wrapping
> that all in one call to thread.callInThread.
> 
> The db is MySQL, and feeds a PHP-based reporting app, so I can't use pgasync.

You can use twisted.enterprise.adbapi, though.  You'd want to use
ConnectionPool.runInteraction.  It might be slightly easier than doing it
yourself with callInThread.

-Andrew.




From exarkun at twistedmatrix.com  Sun Mar 11 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Mar 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1173589502.04.1827094710@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-04 through 2007-03-11
Bugs opened: 14    Bugs closed: 13  Total open bugs: 878 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  -5          |Core:                +3  
|Enhancement:  +0  |High:     +1          |Lore:                +1  
                   |Normal:   +4          |Pydoctor:            +0  
                   |Low:      +2          |Release Management:  +0  
                                          |Trial:               +0  
                                          |Web:                 +1  
                                          |Web2:                -3  
                                          |Words:               +0  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2509] removing event triggers while in an event trigger callback does bad things (opened by jack)
    defect          core       http://twistedmatrix.com/trac/ticket/2509

                    ===== High =====
[#2507] missing 'plugins' directory breaks trial (opened by mlum at redhat.com)
    defect          trial      http://twistedmatrix.com/trac/ticket/2507

                    ===== Normal =====
[#2504] Parameterize reactor in ircsupport to simplify testing (opened by exarkun)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2504

[#2505] twisted.xmlrpc.XMLRPC.render need more error handling (opened by yasusii)
    defect          web        http://twistedmatrix.com/trac/ticket/2505

[#2508] TypeError: <lambda>() got multiple values for keyword argument 'asc' (opened by tsal) (CLOSED, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/2508

[#2510] add a howto explaining how to communicate between two protocol instances (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2510

[#2511] AttributeError when generating docs with pydoctor (opened by kumar303) (CLOSED, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2511

[#2513] Infinite recursion in udp write() function (opened by p1mrx)
    defect          core       http://twistedmatrix.com/trac/ticket/2513

[#2514] Documentation bug in the list of possible <span/> classes (opened by edwards)
    defect          lore       http://twistedmatrix.com/trac/ticket/2514

[#2515] "python setup.py build" fails for Twisted (opened by edwards)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#2516] wxreactor and wx.FileDialog stops twisted reactor loop (opened by line72)
    defect          core       http://twistedmatrix.com/trac/ticket/2516

[#2515] "python setup.py build" fails for Twisted (opened by edwards)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

                    ===== Low =====
[#2506] Memcached client (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2506

[#2512] simple typo in twisted/internet/error.py (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2512



Closed Bugs
______________________
                    ===== Highest =====
[#2104] HTTP digest authentication forced for each page refresh (opened by Cyrus Daboo, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2104

[#2460] HTTPAuthResource doesn't provide any way to support anonymous access. (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2460

[#2172] kqueue connection failure results in bad fd message (opened by ghazel, closed by alus, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2172

[#2495] Trial never passes a traceback to pyunit-API TestResult objects (opened by jml, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2495

[#2461] words.protocols.jabber.sasl uses base64.b64encode, which breaks compatibility with Python 2.3.x (opened by murphy_slaw, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2461

[#460 ] [PATCH] example cred checker for pypgsql/adbapi. (opened by matiu, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/460

                    ===== Normal =====
[#2280] DigestCredential needs a new interface that supports verifying credentials when given a prehashed user:realm:password (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2280

[#2508] TypeError: <lambda>() got multiple values for keyword argument 'asc' (opened by tsal, closed by exarkun, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/2508

[#2511] AttributeError when generating docs with pydoctor (opened by kumar303, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2511

[#2247] Wrong signature for addCallbacks in the Deferred Reference (opened by zseil, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2247

[#1603] Typo in client howto (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1603

[#2515] "python setup.py build" fails for Twisted (opened by edwards, closed by exarkun, )
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#1932] Make twisted installable with easy_install / setuptools (opened by philn, closed by radix, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1932





From john at johnnypops.demon.co.uk  Sun Mar 11 11:51:18 2007
From: john at johnnypops.demon.co.uk (John Popplewell)
Date: Sun, 11 Mar 2007 15:51:18 +0000
Subject: [Twisted-Python] Couple of conch bug-fixes
Message-ID: <20070311155118.GA17463@rosa.blake>

Hi,

I've been using the Twisted SSH server and client code and found a
couple of bugs in the SFTP code:

In 'twisted/conch/ssh/filetransfer.py':

  FILEXFER_ATTR_ACMODTIME     0x00000009

should be replaced by this:

  FILEXFER_ATTR_ACMODTIME     0x00000008

According to this document anyway:
http://tools.ietf.org/html/draft-ietf-secsh-filexfer-02#section-5

This makes the 'preserve timestamp' option in WinSCP3 work.


In 'twisted/conch/scripts/cftp.py':

  d = self.client.openFile(remote, filetransfer.FXF_WRITE|filetransfer.FXF_CREAT, {})

should be replaced, in *both* places, by something like this:

  flags = filetransfer.FXF_WRITE|filetransfer.FXF_CREAT|filetransfer.FXF_TRUNC
  d = self.client.openFile(remote, flags, {})

This makes file tranfer work when an *existing* file is being
over-written by a *smaller* file. It took me a while to find this one :-)

Hope this is a suitable place for these minor fixes,

regards,
John.




From wrobyn at cox.net  Sun Mar 11 19:43:15 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Sun, 11 Mar 2007 19:43:15 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>
References: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>
Message-ID: <5A9F82CC-6B5D-4DFB-A7AF-F7D9364E4F04@cox.net>

Thanks for all your help thus far. Here is my code which does run  
with normal select reactor. How to switch it to use poll reactor?  
that is really the crux of my problem.

import sys
import socket
import time
import resource
from threading import Thread
from twisted.words.protocols.jabber import client, jid
from twisted.words.xish import domish
from twisted.internet import reactor

resource.setrlimit(8,[65000,65000])
class testit():

     def authd(xmlstream):
         print "authenticated"

         presence = domish.Element(('jabber:client','presence'))
         xmlstream.send(presence)
     #xmlstream.addObserver('/message',  debug)
     #xmlstream.addObserver('/presence', debug)
     #xmlstream.addObserver('/iq',       debug)

     def debug(elem):
         print elem.toXml().encode('utf-8')
         print "="*20
     for i in range(1,2000):
         print i
         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
         factory = client.basicClientFactory(myJid, 'test')
         factory.addBootstrap('//event/stream/authd',authd)
         reactor.connectTCP('jbrsrvrname',5222,factory)

     reactor.run()

current = testit()
current.start()

On Mar 10, 2007, at 10:54 AM, Jean-Paul Calderone wrote:

> On Sat, 10 Mar 2007 09:24:49 -0500, Wrene Robyn <wrobyn at cox.net>  
> wrote:
>> That throws an error if I import pollreactor in my code, then jid   
>> tries to import reactor, days there is already an instance or  
>> something
>
> You'll have to provide more information than this.  The behavior  
> you describe
> isn't what should happen given the program snippet below, nor what  
> happens
> when I simplify it to just this:
>
>  exarkun at boson:~$ python
>  Python 2.4.3 (#2, Oct  6 2006, 07:52:30)
>  [GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
>  Type "help", "copyright", "credits" or "license" for more  
> information.
>  >>> from twisted.internet import pollreactor
>  >>> pollreactor.install()
>  >>> from twisted.words.protocols.jabber import jid
>  >>> # No error
>
> Generally when you encounter a problem you need help with, the best  
> thing to do
> is to create the simplest possible example which demonstrates the  
> problem and
> include it with your question.  Without this, responders have to  
> guess at what
> you're doing, which leads to incorrect, irrelevant, or ambiguous  
> answers.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Mar 11 21:02:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Mar 2007 20:02:31 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <5A9F82CC-6B5D-4DFB-A7AF-F7D9364E4F04@cox.net>
Message-ID: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>

On Sun, 11 Mar 2007 19:43:15 -0400, Wrene Robyn <wrobyn at cox.net> wrote:
>Thanks for all your help thus far. Here is my code which does run  with 
>normal select reactor. How to switch it to use poll reactor?  that is really 
>the crux of my problem.

As in my previous post, you switch it to the poll reactor by importing and installing the poll reactor before the default reactor is imported and installed.  You can do this by adding these two lines:

    from twisted.internet import pollreactor
    pollreactor.install()

to the program anywhere before the default reactor is imported.  For example, you could add them before the "import sys" line.

>
>import sys
>import socket
>import time
>import resource
>from threading import Thread
>from twisted.words.protocols.jabber import client, jid
>from twisted.words.xish import domish
>from twisted.internet import reactor
>
>resource.setrlimit(8,[65000,65000])
>class testit():
>
>     def authd(xmlstream):
>         print "authenticated"
>
>         presence = domish.Element(('jabber:client','presence'))
>         xmlstream.send(presence)
>     #xmlstream.addObserver('/message',  debug)
>     #xmlstream.addObserver('/presence', debug)
>     #xmlstream.addObserver('/iq',       debug)
>
>     def debug(elem):
>         print elem.toXml().encode('utf-8')
>         print "="*20

Note that this code:

>     for i in range(1,2000):
>         print i
>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>         factory = client.basicClientFactory(myJid, 'test')
>         factory.addBootstrap('//event/stream/authd',authd)
>         reactor.connectTCP('jbrsrvrname',5222,factory)
>
>     reactor.run()

is all at the class definition level, so it is executed when the class
is defined.  This means you are starting the reactor before the class
definition has even completed.  You probably don't want to do this.  All
the code after this point doesn't even get a chance to run until the
reactor stops.

>
>current = testit()
>current.start()
>

Jean-Paul



From itamar at itamarst.org  Sun Mar 11 22:34:28 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Mar 2007 22:34:28 -0400
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <20070311155118.GA17463@rosa.blake>
References: <20070311155118.GA17463@rosa.blake>
Message-ID: <1173666869.10799.4.camel@localhost.localdomain>

On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
> Hi,
> 
> I've been using the Twisted SSH server and client code and found a
> couple of bugs in the SFTP code:

Could you please add them to our issue tracker
(http://twistedmatrix.com) so they don't get lost? Thanks!




From jarek.zgoda at sensisoft.com  Mon Mar 12 10:41:04 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Mon, 12 Mar 2007 15:41:04 +0100
Subject: [Twisted-Python] Strange twistd behaviour
Message-ID: <45F56680.8090103@sensisoft.com>

I have an application ran as a twistd plugin. It spawns a "worker 
thread" that gets objects from Queue.Queue and runs in a "while 1: " 
loop. The problem I got is that when I run the application without 
daemonizing it (using -n switch for twistd) everything works fine, but 
as soon as it is run as daemon, the thread does not perform the 
"looping". I am bit stuck, as I don't know even where to look for 
possible causes... Can anybody put some light here?

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From exarkun at divmod.com  Mon Mar 12 10:56:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 09:56:04 -0500
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F56680.8090103@sensisoft.com>
Message-ID: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>

On Mon, 12 Mar 2007 15:41:04 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>I have an application ran as a twistd plugin. It spawns a "worker thread" 
>that gets objects from Queue.Queue and runs in a "while 1: " loop. The 
>problem I got is that when I run the application without daemonizing it 
>(using -n switch for twistd) everything works fine, but as soon as it is run 
>as daemon, the thread does not perform the "looping". I am bit stuck, as I 
>don't know even where to look for possible causes... Can anybody put some 
>light here?
>

If you are starting the thread before the process daemonizes, you might want
to try starting it after daemonization instead and see if that helps.

You can do this by starting the thread in the startService method of a Service.

Combining forking and threading usually leads to suffering.

Jean-Paul



From andrew-twisted at puzzling.org  Mon Mar 12 11:16:56 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 13 Mar 2007 02:16:56 +1100
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F56680.8090103@sensisoft.com>
References: <45F56680.8090103@sensisoft.com>
Message-ID: <20070312151656.GH14306@steerpike.home.puzzling.org>

Jarek Zgoda wrote:
> I have an application ran as a twistd plugin. It spawns a "worker 
> thread" that gets objects from Queue.Queue and runs in a "while 1: " 
> loop. The problem I got is that when I run the application without 
> daemonizing it (using -n switch for twistd) everything works fine, but 
> as soon as it is run as daemon, the thread does not perform the 
> "looping". I am bit stuck, as I don't know even where to look for 
> possible causes... Can anybody put some light here?

You probably spawn the thread in the wrong process.

You should make sure the thread is spawned by the reactor, e.g. by doing it
from a startService method or using reactor.callWhenRunning.

-Andrew.




From jarek.zgoda at sensisoft.com  Mon Mar 12 11:24:26 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Mon, 12 Mar 2007 16:24:26 +0100
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
References: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
Message-ID: <45F570AA.7040503@sensisoft.com>

Jean-Paul Calderone napisa?(a):

> If you are starting the thread before the process daemonizes, you might 
> want
> to try starting it after daemonization instead and see if that helps.
> 
> You can do this by starting the thread in the startService method of a 
> Service.

I see, I added the code for creating the thread in "after startup" event 
trigger and now it forks fine, thank you.

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From glyph at divmod.com  Mon Mar 12 12:28:32 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Mar 2007 16:28:32 -0000
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F570AA.7040503@sensisoft.com>
References: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
	<45F570AA.7040503@sensisoft.com>
Message-ID: <20070312162832.7769.1305634573.divmod.xquotient.708@joule.divmod.com>


On 03:24 pm, jarek.zgoda at sensisoft.com wrote:
>Jean-Paul Calderone napisa2(a):
>>If you are starting the thread before the process daemonizes, you 
>>might want
>>to try starting it after daemonization instead and see if that helps.
>>
>>You can do this by starting the thread in the startService method of a 
>>Service.
>
>I see, I added the code for creating the thread in "after startup" 
>event trigger and now it forks fine, thank you.

You might also consider using the reactor's built-in thread support, 
reactor.callInThread, rather than starting your own worker thread.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070312/4d47d92c/attachment.htm 

From john at johnnypops.demon.co.uk  Mon Mar 12 13:35:28 2007
From: john at johnnypops.demon.co.uk (John Popplewell)
Date: Mon, 12 Mar 2007 17:35:28 +0000
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <1173666869.10799.4.camel@localhost.localdomain>
References: <20070311155118.GA17463@rosa.blake>
	<1173666869.10799.4.camel@localhost.localdomain>
Message-ID: <20070312173528.GB17463@rosa.blake>

On Sun, Mar 11, 2007 at 10:34:28PM -0400, Itamar Shtull-Trauring wrote:
> On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
> > Hi,
> > 
> > I've been using the Twisted SSH server and client code and found a
> > couple of bugs in the SFTP code:
> 
> Could you please add them to our issue tracker
> (http://twistedmatrix.com) so they don't get lost? Thanks!
> 
Done:
http://twistedmatrix.com/trac/ticket/2519




From exarkun at divmod.com  Mon Mar 12 14:36:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 13:36:28 -0500
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <20070312173528.GB17463@rosa.blake>
Message-ID: <20070312183628.18920.451892512.divmod.quotient.1409@ohm>

On Mon, 12 Mar 2007 17:35:28 +0000, John Popplewell <john at johnnypops.demon.co.uk> wrote:
>On Sun, Mar 11, 2007 at 10:34:28PM -0400, Itamar Shtull-Trauring wrote:
>> On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
>> > Hi,
>> >
>> > I've been using the Twisted SSH server and client code and found a
>> > couple of bugs in the SFTP code:
>>
>> Could you please add them to our issue tracker
>> (http://twistedmatrix.com) so they don't get lost? Thanks!
>>
>Done:
>http://twistedmatrix.com/trac/ticket/2519
>

Thanks!

Jean-Paul



From srock258 at gmail.com  Mon Mar 12 15:22:38 2007
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 12 Mar 2007 14:22:38 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
Message-ID: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>

I would love to migrate my asyncore based applications to Twisted but the
learning curve seems quite steep. Anybody have a good tutorial? Migrating
asyncore.dispatcher objects to twisted protocols examples would be awesome.

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070312/ea2a3589/attachment.htm 

From Benjamin.Rutt at gs.com  Mon Mar 12 15:44:41 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Mon, 12 Mar 2007 15:44:41 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>

Hi.
 
Anyone have any pointers as to how I can get some of my questions
answered below?  I had hoped to get some response.  Did I not use the
proper etiquitte?  Or there is some expert on the IPushProducer
mechanism or the author of page 
 
http://twistedmatrix.com/projects/core/documentation/howto/producers.htm
l
 
that I can be referred to that perhaps isn't reading this list?

Thanks,
Benjamin Rutt

________________________________

	From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rutt,
Benjamin
	Sent: Tuesday, March 06, 2007 12:04 PM
	To: twisted-python at twistedmatrix.com
	Subject: [Twisted-Python] Learning about IPushProducer
	
	

	When running the following code (my 2nd twisted program!), it
works as I had hoped - it doesn't starve any clients that want to
receive data back, even with a simultaneously active really long
streaming server-to-client communication (i.e. one piggy client asking
for millions of bytes).  i.e. another client can get in and ask for just
a few bytes while a large payload is being delivered to a different
client.  Which is great!

	Here's a sample interaction from the client side: 

	$ telnet localhost 8007 
	Trying 127.0.0.1... 
	Connected to localhost. 
	Escape character is '^]'. 
	1 
	x 
	2 
	xx 
	3 
	xxx 
	10 
	xxxxxxxxxx 
	99999 
	
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	[...lots of x's...] 
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
	bye 
	Connection closed by foreign host. 
	$ 

	So I have 2 questions on my code: 

	1) am I doing anything wrong in setting up the plumbing? 
	2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

	Here is the code, and output from the server is at the end.
Thanks -- Benjamin 

	#!/usr/bin/env python 
	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime 
	import socket, string, random, time, traceback, shutil, popen2 

	from zope.interface import implements 
	from twisted.internet import protocol, defer, interfaces, error,
reactor 
	from twisted.internet.protocol import Protocol, Factory 
	from twisted.protocols.basic import LineReceiver 

	class NonStarvingXGiver: 
	    implements(interfaces.IPushProducer) 
	    def __init__(self, howmany, consumer): 
	        self.howmany = howmany 
	        self.sent_already = 0 
	        self.paused = False 
	        self.consumer = consumer 
	    def beginSendingXs(self): 
	        self.deferred = deferred = defer.Deferred() 
	        self.consumer.registerProducer(self, False) 
	        return deferred 
	    def pauseProducing(self): 
	        print 'pauseProducing: invoked' 
	        self.paused = True 
	    def resumeProducing(self): 
	        print 'resumeProducing: invoked' 
	        self.paused = False 
	        maxchunksz = 1024 
	        while not self.paused and self.howmany >
self.sent_already: 
	            chunksz = min(maxchunksz, self.howmany -
self.sent_already) 
	            self.consumer.write('x' * chunksz) 
	            self.sent_already += chunksz 
	        if self.howmany == self.sent_already: 
	            self.consumer.write('\n') 
	            self.consumer.unregisterProducer() 
	            print 'resumeProducing: exiting for the last time' 
	    def stopProducing(self): 
	        print 'stopProducing: invoked' 
	        self.consumer.unregisterProducer() 
	        
	class xgiver(LineReceiver): 
	    def lineReceived(self, howmany): 
	        print 'got line [%s] from client [%s]' % (howmany, 
	
self.transport.getPeer()) 
	        if howmany == 'bye': 
	            print 'goodbye to', self.transport.getPeer() 
	            self.transport.loseConnection() 
	            return 
	        try: 
	            howmany = int(howmany) 
	            s = NonStarvingXGiver(howmany, self.transport) 
	            s.beginSendingXs() 
	        except Exception, ex: 
	            self.transport.write("invalid input " + howmany +
"\n") 

	# Next lines are magic: 
	factory = Factory() 
	factory.protocol = xgiver 

	# 8007 is the port you want to run under. Choose something >1024

	reactor.listenTCP(8007, factory) 
	reactor.run() 


	
------------------------------------------------------------------- 
	Server output: 

	$ ./xgiver.py 
	got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]

	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [99999] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	resumeProducing: invoked 
	pauseProducing: invoked 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [bye] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	goodbye to IPv4Address(TCP, '127.0.0.1', 51007) 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070312/81569638/attachment.htm 

From leszczynscy at yahoo.com  Mon Mar 12 12:49:12 2007
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Mon, 12 Mar 2007 09:49:12 -0700 (PDT)
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
Message-ID: <20070312164912.30866.qmail@web50605.mail.re2.yahoo.com>

Hi,


I need to launch the twisted based FTP server as a part of my application. I could spawn/control a separate process with subprocess/popen2/etc. However for other reasons I would rather prefer to have it as a separate thread of my app. The question is how to convert mktap generated file into a piece of python code.

Thx, Andy





From exarkun at divmod.com  Mon Mar 12 16:51:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 15:51:50 -0500
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
In-Reply-To: <20070312164912.30866.qmail@web50605.mail.re2.yahoo.com>
Message-ID: <20070312205151.18920.430414936.divmod.quotient.1465@ohm>

On Mon, 12 Mar 2007 09:49:12 -0700 (PDT), Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Hi,
>
>I need to launch the twisted based FTP server as a part of my application. I could spawn/control a separate process with subprocess/popen2/etc. However for other reasons I would rather prefer to have it as a separate thread of my app. The question is how to convert mktap generated file into a piece of python code.

You can't run just an FTP server in a thread, but you can run the whole
reactor in a thread.  If the rest of your application doesn't use Twisted,
this might make sense.  Of course, if the rest of your application does
use Twisted, you don't need to get threads involved.

The threaded approach looks something vaguely like this (untested):

  from threading import Thread

  from twisted.tap.ftp import makeService
  from twisted.internet import reactor

  svc = makeService({configuration options})
  reactor.callWhenRunning(svc.startService)
  Thread(target=reactor.run, args=(False,)).start()

  ...
  



From exarkun at divmod.com  Mon Mar 12 17:09:56 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 16:09:56 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070312210956.18920.1418770739.divmod.quotient.1476@ohm>

On Mon, 12 Mar 2007 15:44:41 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>Hi.
>
>Anyone have any pointers as to how I can get some of my questions
>answered below?  I had hoped to get some response.  Did I not use the
>proper etiquitte?  Or there is some expert on the IPushProducer
>mechanism or the author of page

Sorry, your question was big and challenging to approach.

> [snip]
>
>	When running the following code (my 2nd twisted program!), it
>works as I had hoped - it doesn't starve any clients that want to
>receive data back, even with a simultaneously active really long
>streaming server-to-client communication (i.e. one piggy client asking
>for millions of bytes).  i.e. another client can get in and ask for just
>a few bytes while a large payload is being delivered to a different
>client.  Which is great!
>
>	Here's a sample interaction from the client side:
>
>	$ telnet localhost 8007
>	Trying 127.0.0.1...
>	Connected to localhost.
>	Escape character is '^]'.
>	1
>	x
>	2
>	xx
>	3
>	xxx
>	10
>	xxxxxxxxxx
>	99999
>
>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>
>	[...lots of x's...]
>	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>	bye
>	Connection closed by foreign host.
>	$
>
>	So I have 2 questions on my code:
>
>	1) am I doing anything wrong in setting up the plumbing?
>	2) does pauseProducing() get called by another thread whilst
>resumeProducing() is running?  (I believe it must, otherwise my
>resumeProducing() would only be entered once).  If so I should have an
>appropriate mutex around the read/write of self.pause, no?
>
>	Here is the code, and output from the server is at the end.
>Thanks -- Benjamin
>
>	#!/usr/bin/env python
>	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
>datetime
>	import socket, string, random, time, traceback, shutil, popen2
>
>	from zope.interface import implements
>	from twisted.internet import protocol, defer, interfaces, error,
>reactor
>	from twisted.internet.protocol import Protocol, Factory
>	from twisted.protocols.basic import LineReceiver
>
>	class NonStarvingXGiver:
>	    implements(interfaces.IPushProducer)
>	    def __init__(self, howmany, consumer):
>	        self.howmany = howmany
>	        self.sent_already = 0
>	        self.paused = False
>	        self.consumer = consumer
>	    def beginSendingXs(self):
>	        self.deferred = deferred = defer.Deferred()
>	        self.consumer.registerProducer(self, False)
>	        return deferred
>	    def pauseProducing(self):
>	        print 'pauseProducing: invoked'
>	        self.paused = True
>	    def resumeProducing(self):
>	        print 'resumeProducing: invoked'
>	        self.paused = False
>	        maxchunksz = 1024

This loop:

>	        while not self.paused and self.howmany >
>self.sent_already:
>	            chunksz = min(maxchunksz, self.howmany -
>self.sent_already)
>	            self.consumer.write('x' * chunksz)
>	            self.sent_already += chunksz

is a bit atypical, I think.  The reason it is eventually stopping
is that your code is being invoked re-entrantly by the consumer as
soon as it decides its buffer is full.  I'm not sure the loop is
/wrong/, but it is a bit surprising.  You don't need a mutex here,
since it's single threaded, but you do need to be aware that your
code can be re-entered within a single thread.

Does that answer your questions?

> [snip]

Jean-Paul



From duncan.mcgreggor at gmail.com  Mon Mar 12 17:39:31 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 12 Mar 2007 15:39:31 -0600
Subject: [Twisted-Python] Vote: The Engine of Your Internet
Message-ID: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>

Vote now!

In the spirit of all contests that are thinly disguised high school
popularity contests, there is a poll up on jyte.com, and we need your
help!

 http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet

Because, if we loose... well... the Jocks will get to claim the
sandpit for their debauched parties, and where will we host our
late-night chess and math club parties?

d



From Benjamin.Rutt at gs.com  Mon Mar 12 17:46:54 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Mon, 12 Mar 2007 17:46:54 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <20070312210956.18920.1418770739.divmod.quotient.1476@ohm>
References: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>
	<20070312210956.18920.1418770739.divmod.quotient.1476@ohm>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64F9@gsmbnmp04es.firmwide.corp.gs.com>

    Sorry, your question was big and challenging to approach.

Understood, thanks.  I should have pared it down.

    This loop:
    
    >	        while not self.paused and self.howmany >
    >self.sent_already:
    >	            chunksz = min(maxchunksz, self.howmany -
    >self.sent_already)
    >	            self.consumer.write('x' * chunksz)
    >	            self.sent_already += chunksz
    
    is a bit atypical, I think.  The reason it is eventually stopping
    is that your code is being invoked re-entrantly by the consumer as
    soon as it decides its buffer is full.  I'm not sure the loop is
    /wrong/, but it is a bit surprising.  You don't need a mutex here,
    since it's single threaded, but you do need to be aware that your
    code can be re-entered within a single thread.
    
    Does that answer your questions?

Yes, thank you, it answers some of them but it raises more :).  I see,
it's self.consumer.write(...) that ends up calling the pause method.  So
that's how it's reentrant.  I knew twisted wasn't multithreaded in this
case.  Makes sense.

I have since made my resumeProducing() code loop for up to 100 (or 500,
or 1000 etc.) iterations and then return.  Thus I'm treating
resumeProducing as if it should "produce a chunk larger than 1 byte but
smaller that the whole dataset" then return.  How is this approach, does
it better match the intention of the producer/consumer system vs. the
"loop forever until paused" scheme I had earlier?

A final question -- is it safe for my code to ever call pauseProducing,
stopProducing, resumeProducing directly?  Or that will mess up the
balance of the twisted universe?  (I'm thinking that the calls to these
3 methods should only originate "from within twisted" in case the whole
producer/consumer system is tracking how many times it calls each one
etc.)  I don't plan on calling them directly, but want to critically
review in an informed way my colleague's code which does this.

Thank you so much for the response!

Benjamin Rutt



From leszczynscy at yahoo.com  Mon Mar 12 17:51:41 2007
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Mon, 12 Mar 2007 14:51:41 -0700 (PDT)
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
Message-ID: <20070312215141.27106.qmail@web50606.mail.re2.yahoo.com>

>You can't run just an FTP server in a thread, but you can run the whole
>reactor in a thread.

This is what I meant - I have a hybrid app so threads are only solution (for now).


>The threaded approach looks something vaguely like this (untested):
[...]

thx a lot - work like a charm.







From exarkun at divmod.com  Mon Mar 12 18:18:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 17:18:43 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64F9@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070312221843.18920.1567056401.divmod.quotient.1497@ohm>

On Mon, 12 Mar 2007 17:46:54 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>    Sorry, your question was big and challenging to approach.
>
>Understood, thanks.  I should have pared it down.
>
>    This loop:
>
>    >	        while not self.paused and self.howmany >
>    >self.sent_already:
>    >	            chunksz = min(maxchunksz, self.howmany -
>    >self.sent_already)
>    >	            self.consumer.write('x' * chunksz)
>    >	            self.sent_already += chunksz
>
>    is a bit atypical, I think.  The reason it is eventually stopping
>    is that your code is being invoked re-entrantly by the consumer as
>    soon as it decides its buffer is full.  I'm not sure the loop is
>    /wrong/, but it is a bit surprising.  You don't need a mutex here,
>    since it's single threaded, but you do need to be aware that your
>    code can be re-entered within a single thread.
>
>    Does that answer your questions?
>
>Yes, thank you, it answers some of them but it raises more :).  I see,
>it's self.consumer.write(...) that ends up calling the pause method.  So
>that's how it's reentrant.  I knew twisted wasn't multithreaded in this
>case.  Makes sense.
>
>I have since made my resumeProducing() code loop for up to 100 (or 500,
>or 1000 etc.) iterations and then return.  Thus I'm treating
>resumeProducing as if it should "produce a chunk larger than 1 byte but
>smaller that the whole dataset" then return.  How is this approach, does
>it better match the intention of the producer/consumer system vs. the
>"loop forever until paused" scheme I had earlier?

That's more like what I expect to see in a resumeProducing, yea.  Of course,
paused might still get set before your loop decides to exit, if you are no
longer checking paused.  This isn't disasterous, but it means some
information about what a good amount of stuff to keep in memory is.

I think the most common thing for a resumeProducing implementation to do is
build up a chunk of data and then call write on the consumer just once.  So
it doesn't end up mattering if you get paused or not, since you're done any
way by the time that happens.

I think you have the basic idea of how producers should work, though, and
now I'm just blabbing. :)

>
>A final question -- is it safe for my code to ever call pauseProducing,
>stopProducing, resumeProducing directly?  Or that will mess up the
>balance of the twisted universe?  (I'm thinking that the calls to these
>3 methods should only originate "from within twisted" in case the whole
>producer/consumer system is tracking how many times it calls each one
>etc.)  I don't plan on calling them directly, but want to critically
>review in an informed way my colleague's code which does this.

The consumer you register the producer with basically gets control of those
methods for as long as the producer remains registered.  They're there for
it to communicate its needs with the producer, so having any other code call
them is probably bad in general, although it might work in specific cases.

>
>Thank you so much for the response!
>

No problem. :)

Jean-Paul




From jkakar at kakar.ca  Mon Mar 12 18:35:35 2007
From: jkakar at kakar.ca (Jamu Kakar)
Date: Mon, 12 Mar 2007 15:35:35 -0700
Subject: [Twisted-Python] Streaming in AMP
Message-ID: <45F5D5B7.4030803@kakar.ca>

Hi,

Glyph has been kind enough to share some of his ideas about adding
streaming support to AMP via private mail.  He suggested that the
discussion should really be on the list.  Here's the relevant technical
details we've discussed so far:

(I made the comments in quotes; Glyph's response follows)

>When you get a chance to get to the AMP streaming spec please let me
>know.  I'm interested in learning more about AMP and possibly helping
>out with it.

Since there is basically about a 5% probability that I will actually
manage to write something that looks like a spec, let me take this
random email response as an opportunity to get started.

The protocol limitation in AMP of 64k per value is intentional, and in
fact, should regarded as a very high end for a per-packet payload.  The
idea of AMP is that the connection should be a multiplexable resource
which can do lots of things at the same time; if you start plugging it
up with megabyte-at-a-time payloads, then when you send a packet over
it, it's not going to get there in a reasonable time frame.

So the idea behind AMP streaming is that there should be a parameter
type which presents an API that allows you to deal with a "large" value
that might be a multi-gigabyte stream, chunked up into smaller fragments
so that you can have one connection downloading multiple things.

I haven't completely decided on the API yet, but just to give you an
idea of where I'm going:

    class Put(amp.Command):
        arguments = [('upload', amp.Upload()),
                     ('filename', amp.Unicode())]

    # ...
    def put(upload, filename):
        def saveResult(result):
            f = file(filename, 'wb')
            f.write(result)
            f.close()
        upload.fullResultAsString().addCallback(saveResult)
        return {}
    Put.responder(put)

This is a straw-man API because the *suggested* API for doing something
like this would be to incrementally write the results to a file as
they're available, but a hacky convenience API like this might be useful
in some applications (and as an example it's less code to write).
Another, possibly better convenience API might be
'fullResultAsTemporaryFile'.

The implementation technique here would be to make the AMP protocol
object a multiplexable consumer, and establish a convention (perhaps
some built-in commands?) for sending chunks of a previously-identified
file object.  You can find the notifications involved in this process
documented here:

http://twistedmatrix.com/projects/core/documentation/howto/producers.html

Is this helpful as the beginnings of a specification?  Let me know if
you need more information.




From duncan.mcgreggor at gmail.com  Mon Mar 12 19:20:40 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 12 Mar 2007 17:20:40 -0600
Subject: [Twisted-Python] Re: Vote: The Engine of Your Internet
In-Reply-To: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
Message-ID: <4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>

On 3/12/07, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> Vote now!
>
> In the spirit of all contests that are thinly disguised high school
> popularity contests, there is a poll up on jyte.com, and we need your
> help!
>
>  http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
>
> Because, if we loose... well... the Jocks will get to claim the
> sandpit for their debauched parties, and where will we host our
> late-night chess and math club parties?

The sandpit is almost ours! We've gone from 10 against 31 to 21
against 31. Still down by ten,, but climbing steadily...

d



From glyph at divmod.com  Mon Mar 12 19:59:06 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Mar 2007 23:59:06 -0000
Subject: [Twisted-Python] Streaming in AMP
In-Reply-To: <45F5D5B7.4030803@kakar.ca>
References: <45F5D5B7.4030803@kakar.ca>
Message-ID: <20070312235906.7769.9980781.divmod.xquotient.720@joule.divmod.com>


On 10:35 pm, jkakar at kakar.ca wrote:
>Hi,
>
>Glyph has been kind enough to share some of his ideas about adding
>streaming support to AMP via private mail.  He suggested that the
>discussion should really be on the list.  Here's the relevant technical
>details we've discussed so far:

*snip*

As a finger-exercise today I banged out a tedious, untested and highly 
buggy proof-of-concept of the API proposed there.  It seems to work OK; 
the main open question is how the command-responders for "you got a 
chunk of data on this channel", "please throttle this channel", and 
"this channel is done" should be associated with the protocol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070312/dced6e8d/attachment.htm 

From hellojianwu at gmail.com  Tue Mar 13 05:08:26 2007
From: hellojianwu at gmail.com (jian wu)
Date: Tue, 13 Mar 2007 02:08:26 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
Message-ID: <d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>

Hi Sean,

I had some experience to write a simple python test simulator for my
java network
application using Apache Mina for a text line based protocol

At first I used asyncore.async_chat, then I moved to
twisted.protocols.basic.LineReceiver
since I need async multi-thread behavior. For me, it is
straight-forward regarding handling the protocol when moving from
async_chat to LineReceiver.

And, asyncore.disptacher is just replaced with Twisted reactor and
Factory or TCPServer
if you want to write a Twisted Application.

If you have a very complicated protocol, it might be totally different
from my experience.

Best regards,

Jian


On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> I would love to migrate my asyncore based applications to Twisted but the
> learning curve seems quite steep. Anybody have a good tutorial? Migrating
> asyncore.dispatcher objects to twisted protocols examples would be awesome.
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From mking at humana.com  Tue Mar 13 09:26:03 2007
From: mking at humana.com (Michael King)
Date: Tue, 13 Mar 2007 13:26:03 +0000 (UTC)
Subject: [Twisted-Python] Re: Producers / Consumers and more
	examples	tutorials?
References: <2389d4730608141014pcea8797v60d4044217d9db11@mail.gmail.com>
	<20060814173120.1717.315578462.divmod.quotient.22830@ohm>
Message-ID: <loom.20070313T141556-673@post.gmane.org>



Jean-Paul Calderone <exarkun <at> divmod.com> writes:


> Just name a specific example you'd like to see and I'll try to write
> something up.  I don't want to pick something, write it up, and then
> discover that it doesn't cover what you wanted to learn. :)
> 
> Jean-Paul
> 


Jean-Paul,

I never saw anyone ask for a specific example, and now I actually have one:

I am building a simple chat-like server, but instead of clients producing the
data sent over the channel, I am tailing a log file, turning it into an xml
node, and spitting it out to all connected clients.   At least, that's what
I'm trying to do.

My guess is that I would have the Consumer sub-class that I'd make use the
write() method to call the server's broadcast method.  Not a complaint, but
there's very little documentation on how things glue together, and the
fileserver example doesn't help.

So, I guess the example I'm looking for is something that:

* Has a producer that reads from a file, checking for changes periodically (I
think I have this done, I'll paste a link to the code at the end of this post)
* Has a consumer that then takes the data from the producer, and then
broadcasts it out to all clients on a simple server.

I don't need to see how to implement the server, that part I think I've
got down. :)

Producer source:  http://pastie.caboo.se/46607

I know it's not complete, but I think it's a start from what I understand about
Producers/Consumers.

Thanks,

Michael




From srock258 at gmail.com  Tue Mar 13 11:03:19 2007
From: srock258 at gmail.com (Sean Roark)
Date: Tue, 13 Mar 2007 10:03:19 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
	<d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
Message-ID: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>

Thanks Jian. I am actually not sure if it is my protocol that is complicated
or if the way in which I want to pass the data that is complicated. This is
what I'm doing.

I have two devices that both send and recieve binary strings. Each device
formats the binary messages in a completely different manner, but
abstractly, they basicly contain the same information just in different
formats. I need to recieve the data, parse it, translate it, then repack it
into this different raw format and send it to another destination. All this
works just fine using asyncore dispatchers but I have created my own way of
passing the messages between the different modules. Each module I have
(parse, translate, pack, recieve, send) is wrapped by two Queue's, one
taking input and the other taking output. I connect the modules by replacing
one instance's output Queue with another's input Queue. This way each module
is a thread that simply blocks on the input Queue. When the Parse instance
finishes parsing data it puts it on the output Queue which is actually the
Translate modules input Queue. Since everything needs to happen in a nice
linear manner this works great.

But, this means I am not using callbacks or anything. Instead I would need
to wrap the Twisted protocol in my Queue protocol. This seems straight
forward enough, but I don't have much time to make this conversion (charge
number is running out!) which is why I would love to see an example of the
asyncore dispatcher to twisted protocol conversion. It would go along way to
helping me quickly map my existing code to twisted style code.

My reason's for switching to Twisted are for the future. This may need a web
interface for configuration and monitoring in the near future. Also,
asyncore has a myriad of issues on Win32 but we want the program to work on
both *nix and windows, I'm hoping Twisted helps. Furthermore, the Twisted
libraries for making my system an application look very appealing as a means
to ease deployment.

Thanks,

Sean

On 3/13/07, jian wu <hellojianwu at gmail.com> wrote:
>
> Hi Sean,
>
> I had some experience to write a simple python test simulator for my
> java network
> application using Apache Mina for a text line based protocol
>
> At first I used asyncore.async_chat, then I moved to
> twisted.protocols.basic.LineReceiver
> since I need async multi-thread behavior. For me, it is
> straight-forward regarding handling the protocol when moving from
> async_chat to LineReceiver.
>
> And, asyncore.disptacher is just replaced with Twisted reactor and
> Factory or TCPServer
> if you want to write a Twisted Application.
>
> If you have a very complicated protocol, it might be totally different
> from my experience.
>
> Best regards,
>
> Jian
>
>
> On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> > I would love to migrate my asyncore based applications to Twisted but
> the
> > learning curve seems quite steep. Anybody have a good tutorial?
> Migrating
> > asyncore.dispatcher objects to twisted protocols examples would be
> awesome.
> >
> > --
> >
> > Sean Roark
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070313/316b67de/attachment.htm 

From exarkun at divmod.com  Tue Mar 13 11:33:12 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Mar 2007 10:33:12 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
Message-ID: <20070313153312.18920.934004231.divmod.quotient.1881@ohm>

On Tue, 13 Mar 2007 10:03:19 -0500, Sean Roark <srock258 at gmail.com> wrote:
>Thanks Jian. I am actually not sure if it is my protocol that is complicated
>or if the way in which I want to pass the data that is complicated. This is
>what I'm doing.

It might be too simple to be of use, but there is an asyncore/Twisted echo
example here:

http://twistedmatrix.com/products/echo_server

(It should probably be moved somewhere else, since that part of the website
is no longer maintained and will probably disappear eventually).

Jean-Paul



From wrobyn at cox.net  Tue Mar 13 21:47:46 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Tue, 13 Mar 2007 21:47:46 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
Message-ID: <1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>

OH! I get it,
I was  under the impression that there was a different syntax for  
reactor.run() if you were using a poll reactor like pollreactor.run()  
or something. The code no longer throws up using import poll reactor.  
I am still capping off at around 984 connections but I believe this  
to be on os issue

On Mar 11, 2007, at 9:02 PM, Jean-Paul Calderone wrote:

> On Sun, 11 Mar 2007 19:43:15 -0400, Wrene Robyn <wrobyn at cox.net>  
> wrote:
>> Thanks for all your help thus far. Here is my code which does run   
>> with normal select reactor. How to switch it to use poll reactor?   
>> that is really the crux of my problem.
>
> As in my previous post, you switch it to the poll reactor by  
> importing and installing the poll reactor before the default  
> reactor is imported and installed.  You can do this by adding these  
> two lines:
>
>    from twisted.internet import pollreactor
>    pollreactor.install()
>
> to the program anywhere before the default reactor is imported.   
> For example, you could add them before the "import sys" line.
>
>>
>> import sys
>> import socket
>> import time
>> import resource
>> from threading import Thread
>> from twisted.words.protocols.jabber import client, jid
>> from twisted.words.xish import domish
>> from twisted.internet import reactor
>>
>> resource.setrlimit(8,[65000,65000])
>> class testit():
>>
>>     def authd(xmlstream):
>>         print "authenticated"
>>
>>         presence = domish.Element(('jabber:client','presence'))
>>         xmlstream.send(presence)
>>     #xmlstream.addObserver('/message',  debug)
>>     #xmlstream.addObserver('/presence', debug)
>>     #xmlstream.addObserver('/iq',       debug)
>>
>>     def debug(elem):
>>         print elem.toXml().encode('utf-8')
>>         print "="*20
>
> Note that this code:
>
>>     for i in range(1,2000):
>>         print i
>>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>>         factory = client.basicClientFactory(myJid, 'test')
>>         factory.addBootstrap('//event/stream/authd',authd)
>>         reactor.connectTCP('jbrsrvrname',5222,factory)
>>
>>     reactor.run()
>
> is all at the class definition level, so it is executed when the class
> is defined.  This means you are starting the reactor before the class
> definition has even completed.  You probably don't want to do  
> this.  All
> the code after this point doesn't even get a chance to run until the
> reactor stops.
>
>>
>> current = testit()
>> current.start()
>>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matusis at matusis.com  Tue Mar 13 21:51:30 2007
From: matusis at matusis.com (Alec Matusis)
Date: Tue, 13 Mar 2007 18:51:30 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
Message-ID: <007f01c765db$49ee36a0$ddcaa3e0$@com>

Hello
 
I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
"top" currently shows 80-90% CPU utilization for this twistd process.
We have not switched to epoll Twisted 2.5 yet, although we are planning to.

We are going to add boxes to run these servers. We have a choice of getting
either Opteron 2216 with 1MB L2 cache and faster RAM access, or Intel
Woodcrest 5140 with 4MB L2 and slower FB-DIMM RAM access. 
The current RSS size of the twisted process is about 60MB. 
The main load comes from poll() and from modifying long dictionaries of the
protocol class instances (searching/modifying dictionaries of client
sessions).

Where should we expect a better performance: on Woodcrest 5140 with bigger
L2 or on Opteron 2216 with faster RAM access? We need to order the new box
tomorrow afternoon, so if someone could reply today, it'd be great for us!

Thanks

Alec.




From hellojianwu at gmail.com  Wed Mar 14 03:26:23 2007
From: hellojianwu at gmail.com (jian wu)
Date: Wed, 14 Mar 2007 00:26:23 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
	<d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
	<a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
Message-ID: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>

Hi Sean,

> I am actually not sure if it is my protocol that is complicated
> or if the way in which I want to pass the data that is complicated.

I should claim that I'm not very well experienced with either Twisted
or asyncore, My guess is that is not protocol but the way to pass
data.

Assuming that your python program is connected to your two
devices with two independent TCP connections, your python
program actually is doing message based routing among two
async bi-directional tcp channels.

My guess is that you can keep two Queues since it will help
keeping the order of the async messages received and processed.
And, since twisted has a thread pool, it might be doable that
you could create four threads, two for each TCP Connections,
one thread for read and another for write per TCP connection,
the read thread will handle the received message, process it
and put it into the Queue, the write thread will take the message
from the Queue and write it out to the targeted TCP connection.

Hope this info might be helpful and Good Luck!

Jian


On 3/13/07, Sean Roark <srock258 at gmail.com> wrote:
> Thanks Jian. I am actually not sure if it is my protocol that is complicated
> or if the way in which I want to pass the data that is complicated. This is
> what I'm doing.
>
> I have two devices that both send and recieve binary strings. Each device
> formats the binary messages in a completely different manner, but
> abstractly, they basicly contain the same information just in different
> formats. I need to recieve the data, parse it, translate it, then repack it
> into this different raw format and send it to another destination. All this
> works just fine using asyncore dispatchers but I have created my own way of
> passing the messages between the different modules. Each module I have
> (parse, translate, pack, recieve, send) is wrapped by two Queue's, one
> taking input and the other taking output. I connect the modules by replacing
> one instance's output Queue with another's input Queue. This way each module
> is a thread that simply blocks on the input Queue. When the Parse instance
> finishes parsing data it puts it on the output Queue which is actually the
> Translate modules input Queue. Since everything needs to happen in a nice
> linear manner this works great.
>
> But, this means I am not using callbacks or anything. Instead I would need
> to wrap the Twisted protocol in my Queue protocol. This seems straight
> forward enough, but I don't have much time to make this conversion (charge
> number is running out!) which is why I would love to see an example of the
> asyncore dispatcher to twisted protocol conversion. It would go along way to
> helping me quickly map my existing code to twisted style code.
>
> My reason's for switching to Twisted are for the future. This may need a web
> interface for configuration and monitoring in the near future. Also,
> asyncore has a myriad of issues on Win32 but we want the program to work on
> both *nix and windows, I'm hoping Twisted helps. Furthermore, the Twisted
> libraries for making my system an application look very appealing as a means
> to ease deployment.
>
> Thanks,
>
> Sean
>
>
> On 3/13/07, jian wu <hellojianwu at gmail.com> wrote:
> > Hi Sean,
> >
> > I had some experience to write a simple python test simulator for my
> > java network
> > application using Apache Mina for a text line based protocol
> >
> > At first I used asyncore.async_chat, then I moved to
> > twisted.protocols.basic.LineReceiver
> > since I need async multi-thread behavior. For me, it is
> > straight-forward regarding handling the protocol when moving from
> > async_chat to LineReceiver.
> >
> > And, asyncore.disptacher is just replaced with Twisted reactor and
> > Factory or TCPServer
> > if you want to write a Twisted Application.
> >
> > If you have a very complicated protocol, it might be totally different
> > from my experience.
> >
> > Best regards,
> >
> > Jian
> >
> >
> > On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> > > I would love to migrate my asyncore based applications to Twisted but
> the
> > > learning curve seems quite steep. Anybody have a good tutorial?
> Migrating
> > > asyncore.dispatcher objects to twisted protocols examples would be
> awesome.
> > >
> > > --
> > >
> > > Sean Roark
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> > >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From glyph at divmod.com  Wed Mar 14 04:22:57 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 14 Mar 2007 08:22:57 -0000
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <20070314082257.7769.1889864074.divmod.xquotient.748@joule.divmod.com>

On 01:51 am, matusis at matusis.com wrote:
>I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
>"top" currently shows 80-90% CPU utilization for this twistd process.
>We have not switched to epoll Twisted 2.5 yet, although we are planning 
>to.

Hi, Alec!  Nice to hear that you're using Twisted in such a demanding 
situation.
>Where should we expect a better performance: on Woodcrest 5140 with 
>bigger
>L2 or on Opteron 2216 with faster RAM access? We need to order the new 
>box
>tomorrow afternoon, so if someone could reply today, it'd be great for 
>us!

I'm only replying to this message because of your extremely short 
timeframe.  I have _no_ reliable data that I would feel comfortable 
making a decision based on, but then, either of these systems will 
likely be adequate to your purposes.  So, take all this with a grain of 
salt, and I hope you get something better.

My new MacBook - a core 2 duo with 4MB of cache - slightly (10% time 
difference) outstrips my desktop work machine - an opteron64 with 1MB of 
cache - when running the Twisted unit tests.  The Opteron is almost 8 
months old now, but the MacBook is a laptop.  I am being intentionally 
vague about the rest of the specs here to stress the anecdotal and 
unscientific nature of this knowledge :-).

However, this result doesn't surprise me, and I guess it may generalize 
to the current generation of hardware, which is to say, Intel wins.  RAM 
is important, as is raw CPU speed, but L2 cache is _the_ major 
determinant of Python's performance in all of the cross-machine 
profiling I've done.  That is to say, this experiment, and this one 
other time I think I ran some stuff on a PowerPC or a MIPS or something 
(those are different, right?).

Good luck on making the right choice here with such tight constraints!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070314/61fc99ac/attachment.htm 

From itamar at itamarst.org  Wed Mar 14 08:25:48 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Mar 2007 08:25:48 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
	<1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
Message-ID: <1173875148.9197.3.camel@localhost.localdomain>

On Tue, 2007-03-13 at 21:47 -0400, Wrene Robyn wrote:
> OH! I get it,
> I was  under the impression that there was a different syntax for  
> reactor.run() if you were using a poll reactor like pollreactor.run()  
> or something. The code no longer throws up using import poll reactor.  
> I am still capping off at around 984 connections but I believe this  
> to be on os issue

In addition to reactor limitations there are also rlimits on how many
descriptors a user can use; you should be able to change those as root.




From exarkun at divmod.com  Wed Mar 14 09:14:03 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Mar 2007 08:14:03 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
Message-ID: <20070314131403.18920.1331457688.divmod.quotient.2289@ohm>

On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
>Hi Sean,
>>I am actually not sure if it is my protocol that is complicated
>>or if the way in which I want to pass the data that is complicated.
>
>I should claim that I'm not very well experienced with either Twisted
>or asyncore, My guess is that is not protocol but the way to pass
>data.
>
>Assuming that your python program is connected to your two
>devices with two independent TCP connections, your python
>program actually is doing message based routing among two
>async bi-directional tcp channels.
>
>My guess is that you can keep two Queues since it will help
>keeping the order of the async messages received and processed.
>And, since twisted has a thread pool, it might be doable that
>you could create four threads, two for each TCP Connections,
>one thread for read and another for write per TCP connection,
>the read thread will handle the received message, process it
>and put it into the Queue, the write thread will take the message
>from the Queue and write it out to the targeted TCP connection.
>

Four extra threads is four more than there's any reason to have here.  Two
threads per socket is the kind of thing Twisted exists to let you avoid.

Jean-Paul



From itamar at itamarst.org  Wed Mar 14 09:38:17 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Mar 2007 09:38:17 -0400
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <1173879497.9197.11.camel@localhost.localdomain>

On Tue, 2007-03-13 at 18:51 -0700, Alec Matusis wrote:

> The main load comes from poll() and from modifying long dictionaries of the
> protocol class instances (searching/modifying dictionaries of client
> sessions).

Simply switching to epoll should give significant improvement (it
supports up to 8-10K clients without complaining at least in the one
test we did, IIRC. poll starts using major CPU around 2 or 3K.)




From srock258 at gmail.com  Wed Mar 14 11:32:09 2007
From: srock258 at gmail.com (Sean Roark)
Date: Wed, 14 Mar 2007 11:32:09 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
Message-ID: <a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>

>Assuming that your python program is connected to your two
>devices with two independent TCP connections, your python
>program actually is doing message based routing among two
>async bi-directional tcp channels.

This is a very good way to describe it, thank you.

>Four extra threads is four more than there's any reason to have here.  Two
>threads per socket is the kind of thing Twisted exists to let you avoid.

Even with asyncore I don't need two threads per connection. The asyncore
loop handles the send and receive just fine. My Queue interface between my
application and the comms layer is what I need a protocol for. Abstractly,
it isn't complicated, I just don't have time to go down that road without
any guidance because if it takes more then a day or two I'm toast.

I'm more interested in a mapping from asyncore dispatcher to twisted
protocol. This is on my to do list to figure out but for my current project
i don't have time. Something filling in these blanks would be perfect:

Asyncore.dispatcher ----->Twisted Protocol
handle_connect ------------> ?
handle_read      ------------> read, getline, readraw, etc...
handle_write     ------------> sendline, send, etc...
handle_expt     ------------> ?
?                    -------------> buildFactory
asyncore.loop  ------------> reactor.run

Obviously need more then just that.

I have found the online examples and documentation to be quite terse when
describing how things fit together. When I eventually get the chance to make
this migration I plan to write a tutorial. In my opinion the less legacy
code directly using asyncore in this world, the better, so may as well make
it easy to migrate.

Sean

On 3/14/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
> >Hi Sean,
> >>I am actually not sure if it is my protocol that is complicated
> >>or if the way in which I want to pass the data that is complicated.
> >
> >I should claim that I'm not very well experienced with either Twisted
> >or asyncore, My guess is that is not protocol but the way to pass
> >data.
> >
> >Assuming that your python program is connected to your two
> >devices with two independent TCP connections, your python
> >program actually is doing message based routing among two
> >async bi-directional tcp channels.
> >
> >My guess is that you can keep two Queues since it will help
> >keeping the order of the async messages received and processed.
> >And, since twisted has a thread pool, it might be doable that
> >you could create four threads, two for each TCP Connections,
> >one thread for read and another for write per TCP connection,
> >the read thread will handle the received message, process it
> >and put it into the Queue, the write thread will take the message
> >from the Queue and write it out to the targeted TCP connection.
> >
>
> Four extra threads is four more than there's any reason to have here.  Two
> threads per socket is the kind of thing Twisted exists to let you avoid.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070314/2977ed12/attachment.htm 

From andy at thecablelounge.com  Wed Mar 14 21:45:32 2007
From: andy at thecablelounge.com (Andy Gayton)
Date: Wed, 14 Mar 2007 18:45:32 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <45F8A53C.1070202@thecablelounge.com>

Alec Matusis wrote:
> I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
> "top" currently shows 80-90% CPU utilization for this twistd process.
> We have not switched to epoll Twisted 2.5 yet, although we are planning to.

Being async, a twisted server can only make use of a single processor. 
With dual core chips, it can only use one of the cores.

No matter what hardware you throw at it, you'll eventually max out that 
core.

If you're planning to scale out a lot more, you'll want to structure 
things so you can load balance several (1 process per core) twisted 
processes running the service.

cheers,
Andy.




From jonathansamuel at yahoo.com  Wed Mar 14 22:14:57 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Wed, 14 Mar 2007 19:14:57 -0700 (PDT)
Subject: [Twisted-Python] What is the most recent compatible combination of
	Twisted and Twisted.web2?
In-Reply-To: <E1HRVSa-0008Fn-02@pyramid.twistedmatrix.com>
Message-ID: <601051.53014.qm@web32508.mail.mud.yahoo.com>

My Redhat 7.3/Python 2.5 box had TwistedWeb2-0.2.0 and
Twisted 2.5 . However, they are not compatible. 

What is the most recent combination of Twisted and
Twisted.Web2 that I could use together?

Where can I get the most recent version of
Twisted.Web2? TwistedMatrix doesn't seem to have a
link to it.



 
____________________________________________________________________________________
Never miss an email again!
Yahoo! Toolbar alerts you the instant new Mail arrives.
http://tools.search.yahoo.com/toolbar/features/mail/



From glyph at divmod.com  Wed Mar 14 23:19:30 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Mar 2007 03:19:30 -0000
Subject: [Twisted-Python] What is the most recent compatible combination of
	Twisted and Twisted.web2?
In-Reply-To: <601051.53014.qm@web32508.mail.mud.yahoo.com>
References: <E1HRVSa-0008Fn-02@pyramid.twistedmatrix.com>
	<601051.53014.qm@web32508.mail.mud.yahoo.com>
Message-ID: <20070315031930.7769.63739133.divmod.xquotient.764@joule.divmod.com>

On 02:14 am, jonathansamuel at yahoo.com wrote:
>My Redhat 7.3/Python 2.5 box had TwistedWeb2-0.2.0 and
>Twisted 2.5 . However, they are not compatible.
>
>What is the most recent combination of Twisted and
>Twisted.Web2 that I could use together?

Since no "blessed" production-ready release of web2 is yet available, 
you are probably better off checking it out from Twisted trunk, or 
checking out the entire Twisted trunk together.

If you're interested in rectifying this situation, the path to a web2 
release is pretty well plotted in the Twisted tracker already, and you 
could submit patches to the tickets in there.

Start here:

http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=Web2 
-Gold-Master

Also, since this question is more appropriate to the twisted-web list I 
am cross-posting the response there.  Please follow up without cross- 
posting to twisted-python.

Good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070315/b3eb4ed2/attachment.htm 

From hellojianwu at gmail.com  Thu Mar 15 02:38:20 2007
From: hellojianwu at gmail.com (jian wu)
Date: Wed, 14 Mar 2007 23:38:20 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
Message-ID: <d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>

Hi Sean,

> Even with asyncore I don't need two threads per connection. The
> asyncore loop handles the send and receive just fine.

I think that I had better correcting my term as "4 types of threads" or
"4 types of threading tasks" since Twisted has a thread pool, so you
don't need start thread by your python code, you just submit your
task to Twisted Thread Pool, it'll schedule and run for you.

> I'm more interested in a mapping from asyncore dispatcher to
> twisted protocol. This is on my to do list to figure out but for
> my current project i don't have time.

Again, I might not be the right person to define the mapping.
Also, I think that you don't have to restrict yourself in an
one-to-one-map-porting mode since Twisted has more rich
features and functionalities than "asyncore", such as thread
pool and that should be other alternative way to implement
async message routing like using Deferred along with Callback
Chain.

This is just my 2 cents.

Best regards,

Jian


On 3/14/07, Sean Roark <srock258 at gmail.com> wrote:
> >Assuming that your python program is connected to your two
> >devices with two independent TCP connections, your python
> >program actually is doing message based routing among two
> >async bi-directional tcp channels.
>
> This is a very good way to describe it, thank you.
>
> >Four extra threads is four more than there's any reason to have here.  Two
> >threads per socket is the kind of thing Twisted exists to let you avoid.
>
> Even with asyncore I don't need two threads per connection. The asyncore
> loop handles the send and receive just fine. My Queue interface between my
> application and the comms layer is what I need a protocol for. Abstractly,
> it isn't complicated, I just don't have time to go down that road without
> any guidance because if it takes more then a day or two I'm toast.
>
> I'm more interested in a mapping from asyncore dispatcher to twisted
> protocol. This is on my to do list to figure out but for my current project
> i don't have time. Something filling in these blanks would be perfect:
>
> Asyncore.dispatcher ----->Twisted Protocol
> handle_connect ------------> ?
> handle_read      ------------> read, getline, readraw, etc...
> handle_write     ------------> sendline, send, etc...
>  handle_expt     ------------> ?
> ?                    -------------> buildFactory
> asyncore.loop  ------------> reactor.run
>
> Obviously need more then just that.
>
> I have found the online examples and documentation to be quite terse when
> describing how things fit together. When I eventually get the chance to make
> this migration I plan to write a tutorial. In my opinion the less legacy
> code directly using asyncore in this world, the better, so may as well make
> it easy to migrate.
>
> Sean
>
>
> On 3/14/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
> > >Hi Sean,
> > >>I am actually not sure if it is my protocol that is complicated
> > >>or if the way in which I want to pass the data that is complicated.
> > >
> > >I should claim that I'm not very well experienced with either Twisted
> > >or asyncore, My guess is that is not protocol but the way to pass
> > >data.
> > >
> > >Assuming that your python program is connected to your two
> > >devices with two independent TCP connections, your python
> > >program actually is doing message based routing among two
> > >async bi-directional tcp channels.
> > >
> > >My guess is that you can keep two Queues since it will help
> > >keeping the order of the async messages received and processed.
> > >And, since twisted has a thread pool, it might be doable that
> > >you could create four threads, two for each TCP Connections,
> > >one thread for read and another for write per TCP connection,
> > >the read thread will handle the received message, process it
> > >and put it into the Queue, the write thread will take the message
> > >from the Queue and write it out to the targeted TCP connection.
> > >
> >
> > Four extra threads is four more than there's any reason to have here.  Two
> > threads per socket is the kind of thing Twisted exists to let you avoid.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From itamar at itamarst.org  Thu Mar 15 08:00:20 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Mar 2007 08:00:20 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
Message-ID: <1173960020.9197.16.camel@localhost.localdomain>

On Wed, 2007-03-14 at 23:38 -0700, jian wu wrote:
> Hi Sean,
> 
> > Even with asyncore I don't need two threads per connection. The
> > asyncore loop handles the send and receive just fine.
> 
> I think that I had better correcting my term as "4 types of threads" or
> "4 types of threading tasks" since Twisted has a thread pool, so you
> don't need start thread by your python code, you just submit your
> task to Twisted Thread Pool, it'll schedule and run for you.

Twisted doesn't need threads for this at all. Nor does asyncore.




From karlb at gmx.net  Thu Mar 15 09:10:02 2007
From: karlb at gmx.net (Karl Bartel)
Date: Thu, 15 Mar 2007 14:10:02 +0100
Subject: [Twisted-Python] Game using twisted: Castle-Combat
Message-ID: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>

Hi!

I've written a game which could be added to http://twistedmatrix.com/ 
trac/wiki/ProjectsUsingTwisted, if it qualifies as successful.

Name: Castle-Combat
URL: http://linux-games.com/castle-combat
Desc: a multiplayer game designed after the arcade game "Rampart"

Thanks,
Karl



From psanchez at nortel.com  Thu Mar 15 10:57:49 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 10:57:49 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
	<20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
Message-ID: <1173970669.22312.45.camel@pcard0ze>

Hello,

I will likely get to work on a gateway between SOAP-based Web Services
and SIP-based services. I would like to explore the possibility of
implementing it using the Twisted framework and I'd appreciate if you
can give me suggestions on:

1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
these days.

2. Which SIP stack to use.

I will eventually fire questions about the overall architecture the
gateway software should have. Any hints here are welcome.

Thank you,

-- 
Pedro





From psanchez at nortel.com  Thu Mar 15 11:20:37 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 11:20:37 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
Message-ID: <1173972037.22312.47.camel@pcard0ze>

(resent: Previous message went under a different thread)

Hello,

I will likely get to work on a gateway between SOAP-based Web Services
and SIP-based services. I would like to explore the possibility of
implementing it using the Twisted framework and I'd appreciate if you
can give me suggestions on:

1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
these days.

2. Which SIP stack to use.

I will eventually fire questions about the overall architecture the
gateway software should have. Any hints here are welcome.

Thank you,

-- 
Pedro





From thostrup at gmail.com  Thu Mar 15 12:34:59 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 15 Mar 2007 17:34:59 +0100
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <1173970669.22312.45.camel@pcard0ze>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
	<20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
	<1173970669.22312.45.camel@pcard0ze>
Message-ID: <f33a4da20703150934g61aadc50u1042eca5cc736827@mail.gmail.com>

Hi Pedro

On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
>
> Hello,
>
> I will likely get to work on a gateway between SOAP-based Web Services
> and SIP-based services.


This sounds slightly strange in my ears, but thats probably just me.

I would like to explore the possibility of
> implementing it using the Twisted framework and I'd appreciate if you
> can give me suggestions on:
>
> 1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
> these days.


You probably want ZSI:  http://pywebsvcs.sourceforge.net/

I know it has some twisted web resource that might be usefull.

I don't think there is any actual software called ZopeLib. SOAP and Zope has
similar phonetic sounds, so there might a misunderstanding here.

2. Which SIP stack to use.


There is twisted/protocols/sip.py. There is Shtoom (
http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.


> I will eventually fire questions about the overall architecture the
> gateway software should have. Any hints here are welcome.


Start by understanding each of the above things before combining them :-)

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070315/c0f38dbc/attachment.htm 

From matusis at matusis.com  Thu Mar 15 13:05:20 2007
From: matusis at matusis.com (matusis at matusis.com)
Date: Thu, 15 Mar 2007 10:05:20 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <45F8A53C.1070202@thecablelounge.com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
	<45F8A53C.1070202@thecablelounge.com>
Message-ID: <!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>

Yes, we are getting 2x dual core, to run 4 instances of the server per box
(they are load-balanced). 
Incidentally, does Twisted API have anything for load-balancing? We have
implemented it ourselves.

I will switch to epoll and report the load difference with poll here.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Andy Gayton
> Sent: Wednesday, March 14, 2007 6:46 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] CPU choice for big twisted server.
> 
> Alec Matusis wrote:
> > I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
> > "top" currently shows 80-90% CPU utilization for this twistd process.
> > We have not switched to epoll Twisted 2.5 yet, although we are
> planning to.
> 
> Being async, a twisted server can only make use of a single processor.
> With dual core chips, it can only use one of the cores.
> 
> No matter what hardware you throw at it, you'll eventually max out that
> core.
> 
> If you're planning to scale out a lot more, you'll want to structure
> things so you can load balance several (1 process per core) twisted
> processes running the service.
> 
> cheers,
> Andy.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Thu Mar 15 13:26:59 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Mar 2007 18:26:59 +0100
Subject: [Twisted-Python] Re: CPU choice for big twisted server.
In-Reply-To: <!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>	<45F8A53C.1070202@thecablelounge.com>
	<!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>
Message-ID: <etbvl3$ij2$1@sea.gmane.org>

matusis at matusis.com wrote:
> Incidentally, does Twisted API have anything for load-balancing? We have
> implemented it ourselves.

PythonDirector is based on Twisted:

http://pythondirector.sourceforge.net/

You may also use nginx:

http://wiki.codemongers.com/NginxLoadBalanceExample


-- 
Nicola Larosa - http://www.tekNico.net/

There's no gentle way to break somebody's heart
To say, it's over, it's time for us to part
 -- Prefab Sprout, Love Will Find Someone for You,
    The Gunman and Other Stories, 2001




From exarkun at divmod.com  Thu Mar 15 13:29:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Mar 2007 12:29:49 -0500
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <f33a4da20703150934g61aadc50u1042eca5cc736827@mail.gmail.com>
Message-ID: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>

On Thu, 15 Mar 2007 17:34:59 +0100, Henrik Thostrup Jensen <thostrup at gmail.com> wrote:
>Hi Pedro
>
>On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
>>
>>Hello,
>>
>>I will likely get to work on a gateway between SOAP-based Web Services
>>and SIP-based services.
>
>
>This sounds slightly strange in my ears, but thats probably just me.
>
>I would like to explore the possibility of
>>implementing it using the Twisted framework and I'd appreciate if you
>>can give me suggestions on:
>>
>>1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
>>these days.
>
>
>You probably want ZSI:  http://pywebsvcs.sourceforge.net/
>
>I know it has some twisted web resource that might be usefull.
>
>I don't think there is any actual software called ZopeLib. SOAP and Zope has
>similar phonetic sounds, so there might a misunderstanding here.
>
>2. Which SIP stack to use.
>
>
>There is twisted/protocols/sip.py. There is Shtoom (
>http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.

Slight correction.  Rather than twisted/protocols/sip.py, you probably want
to use the protocol code from Divmod Sine.  There is some effort to backport
improvements and fixes to Twisted, but this is still in progress, so you'll
be missing out on a ton of stuff if you use what's in any existing Twisted
release.

>>I will eventually fire questions about the overall architecture the
>>gateway software should have. Any hints here are welcome.
>
>
>Start by understanding each of the above things before combining them :-)

Jean-Paul



From johnpote at jptechnical.co.uk  Thu Mar 15 15:08:10 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 15 Mar 2007 19:08:10 +0000
Subject: [Twisted-Python] web.resource.Resource.putChild() problem
Message-ID: <45F9999A.7040305@jptechnical.co.uk>

Hi, can someone help.

I've used the code snippet below to create a http control site for a web 
app. But I want to re-render the html pages from a sub dir, 
'controlSit/pp', so I figured putChild() would help.

def makeControlSite():
    site = static.File('controlSite')
    site.putChild('pp', ProcessPage())
    return site

So I set the app going with twistd and the site files, control/*.* and 
control/pp/*.* get returned to the browser as is. My ProcessPage() 
resource seems to be ignored.

Does static.File look for child resources or can I not mix static.File 
with putChild() as I've attempted to do?

Help appreciated,
John






From psanchez at nortel.com  Thu Mar 15 15:27:49 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 15:27:49 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>
References: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>
Message-ID: <1173986869.22312.52.camel@pcard0ze>

On Thu, 2007-03-15 at 12:29 -0500, Jean-Paul Calderone wrote:
> On Thu, 15 Mar 2007 17:34:59 +0100, Henrik Thostrup Jensen <thostrup at gmail.com> wrote:
> >Hi Pedro
> >
> >On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
> >>
> >>Hello,
> >>
> >>I will likely get to work on a gateway between SOAP-based Web Services
> >>and SIP-based services.
> >
> >
> >This sounds slightly strange in my ears, but thats probably just me.
> >
> >I would like to explore the possibility of
> >>implementing it using the Twisted framework and I'd appreciate if you
> >>can give me suggestions on:
> >>
> >>1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
> >>these days.
> >
> >
> >You probably want ZSI:  http://pywebsvcs.sourceforge.net/
> >
> >I know it has some twisted web resource that might be usefull.
> >
> >I don't think there is any actual software called ZopeLib. SOAP and Zope has
> >similar phonetic sounds, so there might a misunderstanding here.
> >

OK, the recommendation I'm getting from a colleague is SOAPlib (sorry
for the confusion) from http://trac.optio.webfactional.com/

Any experience with this one?

> >2. Which SIP stack to use.
> >
> >
> >There is twisted/protocols/sip.py. There is Shtoom (
> >http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.
> 
> Slight correction.  Rather than twisted/protocols/sip.py, you probably want
> to use the protocol code from Divmod Sine.  There is some effort to backport
> improvements and fixes to Twisted, but this is still in progress, so you'll
> be missing out on a ton of stuff if you use what's in any existing Twisted
> release.
> 

Thanks, I'll take a look at Sine.

> >>I will eventually fire questions about the overall architecture the
> >>gateway software should have. Any hints here are welcome.
> >
> >
> >Start by understanding each of the above things before combining them :-)
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Pedro I. Sanchez
Rapid Prototyping Lab
CTO, Nortel
ESN 393-6084
External 613-763-6084




From hellojianwu at gmail.com  Thu Mar 15 15:36:02 2007
From: hellojianwu at gmail.com (jian wu)
Date: Thu, 15 Mar 2007 12:36:02 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <1173960020.9197.16.camel@localhost.localdomain>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
Message-ID: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>

Hi,

> Twisted doesn't need threads for this at all. Nor does asyncore.

>From what I understand, it is better using threads to offload any
blocking operation out of Twisted main event loop unless all your
message processing is non-blocking or "light-weight and fast"
( Sometimes message processing plus state management could
 be heavy operations ).

Best regards,

Jian


On 3/15/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Wed, 2007-03-14 at 23:38 -0700, jian wu wrote:
> > Hi Sean,
> >
> > > Even with asyncore I don't need two threads per connection. The
> > > asyncore loop handles the send and receive just fine.
> >
> > I think that I had better correcting my term as "4 types of threads" or
> > "4 types of threading tasks" since Twisted has a thread pool, so you
> > don't need start thread by your python code, you just submit your
> > task to Twisted Thread Pool, it'll schedule and run for you.
>
> Twisted doesn't need threads for this at all. Nor does asyncore.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radix at twistedmatrix.com  Thu Mar 15 16:01:11 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 15 Mar 2007 16:01:11 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
	<d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
Message-ID: <60ed19d40703151301h4fbd34dbwa90090dee172da50@mail.gmail.com>

On 3/15/07, jian wu <hellojianwu at gmail.com> wrote:
> Hi,
>
> > Twisted doesn't need threads for this at all. Nor does asyncore.
>
> >From what I understand, it is better using threads to offload any
> blocking operation out of Twisted main event loop unless all your
> message processing is non-blocking or "light-weight and fast"
> ( Sometimes message processing plus state management could
>  be heavy operations ).

Ideally, you're not really offloading *processing* but just stuff like
disk or database I/O, and only when necessary. It's often worthwhile
finding the minimal amount of code to throw into a thread.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Thu Mar 15 16:07:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Mar 2007 20:07:18 -0000
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
	<d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
Message-ID: <20070315200718.7769.366752569.divmod.xquotient.991@joule.divmod.com>

On 07:36 pm, hellojianwu at gmail.com wrote:
>Hi,
>>Twisted doesn't need threads for this at all. Nor does asyncore.
>
>> From what I understand, it is better using threads to offload any
>blocking operation out of Twisted main event loop unless all your
>message processing is non-blocking or "light-weight and fast"
>( Sometimes message processing plus state management could
>be heavy operations ).

No, it is *best* not to perform blocking operations :).

If you do need to perform "blocking" operations which are slow due to 
CPU utilization, you want to put them into a subprocess, not a thread. 
Threads are more bug-prone, and they don't perform as well, as 
processes.

Certain kinds of blocking operations are unfortunately inconvenient to 
do in subprocesses, such as SQL access; those typically go into a thread 
as a mechanism for integrating with an inherently blocking type of 
library, not as a way to avoid slow operations.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070315/ce9defe1/attachment.htm 

From wrobyn at cox.net  Thu Mar 15 19:03:37 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Thu, 15 Mar 2007 19:03:37 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <1173875148.9197.3.camel@localhost.localdomain>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
	<1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
	<1173875148.9197.3.camel@localhost.localdomain>
Message-ID: <E917DC64-A5A9-4E88-BF98-5AAFFA24B6B9@cox.net>

I changed those as well to a high value but am still getting capped  
at 983-984 connections even with pollreactor. Can someone else verify  
my code? ANY help would be appreciated. Or conversely, give me a  
function to log in 10k users to jabber :)

On Mar 14, 2007, at 8:25 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2007-03-13 at 21:47 -0400, Wrene Robyn wrote:
>> OH! I get it,
>> I was  under the impression that there was a different syntax for
>> reactor.run() if you were using a poll reactor like pollreactor.run()
>> or something. The code no longer throws up using import poll reactor.
>> I am still capping off at around 984 connections but I believe this
>> to be on os issue
>
> In addition to reactor limitations there are also rlimits on how many
> descriptors a user can use; you should be able to change those as  
> root.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dakoner at gmail.com  Fri Mar 16 00:58:56 2007
From: dakoner at gmail.com (David Konerding)
Date: Thu, 15 Mar 2007 21:58:56 -0700
Subject: [Twisted-Python] running a TurboGears from Twisted
Message-ID: <4f0f0cb0703152158y7edf57fbw5cc4c674726c488f@mail.gmail.com>

Hi,

I want to run a turbogears site from inside Twisted via WSGI.  This isn't
documented, and I'm struggling to get it to work.  This is what I have so
far:

from twisted.web2 import wsgi
from twisted.application import service, strports
from twisted.web2 import server, channel
from twisted.python import util
from turbogears import update_config, start_server
from twisted.web2.wsgi import WSGIResource as WSGI
from cherrypy._cpwsgi import wsgiApp
import cherrypy
cherrypy.lowercase_api = True


# This part gets run when you run this file via: "twistd -noy demo.py"
if __name__ == '__builtin__':

    update_config(configfile="dev.cfg",modulename="quickie.config")
    test = WSGI(wsgiApp)

    # Create the site and application objects
    site = server.Site(test)
    application = service.Application("demo")

    # Serve it via standard HTTP on port 8080
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)

I'm not having much luck with this, and I thought I'd check on the list if
anybody already had a recipe for this.

Thanks,
Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070315/99992fa9/attachment.htm 

From o.fournier at perigord.com  Fri Mar 16 11:31:45 2007
From: o.fournier at perigord.com (Olivier Fournier)
Date: Fri, 16 Mar 2007 16:31:45 +0100
Subject: [Twisted-Python] components.Interface call
In-Reply-To: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
Message-ID: <45FAB861.70207@perigord.com>

Hi,

I'm Newbee in Twisted and I tried to run Web2 examples.

I obtain an error when I run 
http://twistedmatrix.com/projects/web2/documentation/examples/intro/simple.py

AttributeError: 'module' object has no attribute 'Interface'

Traceback (innermost last):

File "/opt/twisted/simple.py", line 1, in ?
  from twisted.web2 import server, http, resource, channel
File "/opt/twisted/simple.py", line 1, in ?
  from twisted.web2 import server, http, resource, channel
File "/usr/lib/python2.4/site-packages/twisted/web2/server.py", line 25, 
in ?
  from twisted.web2 import http, iweb, fileupload, responsecode
File "/usr/lib/python2.4/site-packages/twisted/web2/http.py", line 27, in ?
  from twisted.web2 import iweb
File "/usr/lib/python2.4/site-packages/twisted/web2/iweb.py", line 58, in ?
  class IOldNevowResource(components.Interface):

It seem's components.Interface is deprecated and replaced by 
zope.interface.Interface

If I replace components.Interface by Interface in 
/usr/lib/python2.4/site-packages/twisted/web2/iweb.py
It's run!

by



From Benjamin.Rutt at gs.com  Fri Mar 16 11:48:53 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 16 Mar 2007 11:48:53 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>

BTW, how was it that my pauseProducing ever got invoked below?  after
all I registered my producer (erroneously, no doubt since it implements
IPushProducer) as a pull producer by using the 2nd argument of 'False'
below:
 
self.consumer.registerProducer(self, False) 
 
If indeed it's registered as a pull producer I wouldn't think its pause
should ever be called. Does twisted actually use the type of the class
to see what to call?  Or getattr(class,'pauseProducing') or somesuch?
If so, what's the purpose of 'True' or 'False' during registration?
 
from the docs:

	

	registerProducer(producer, streaming)


	So that a consumer can invoke methods on a producer, the
consumer needs to be told about the producer. This is done with the
registerProducer method. The first argument is either a IPullProducer or
IPushProducer provider; the second argument indicates which of these
interfaces is provided: True for push producers, False for pull
producers.

Thanks!

________________________________

	From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rutt,
Benjamin
	Sent: Tuesday, March 06, 2007 12:04 PM
	To: twisted-python at twistedmatrix.com
	Subject: [Twisted-Python] Learning about IPushProducer
	
	

	When running the following code (my 2nd twisted program!), it
works as I had hoped - it doesn't starve any clients that want to
receive data back, even with a simultaneously active really long
streaming server-to-client communication (i.e. one piggy client asking
for millions of bytes).  i.e. another client can get in and ask for just
a few bytes while a large payload is being delivered to a different
client.  Which is great!

	Here's a sample interaction from the client side: 

	$ telnet localhost 8007 
	Trying 127.0.0.1... 
	Connected to localhost. 
	Escape character is '^]'. 
	1 
	x 
	2 
	xx 
	3 
	xxx 
	10 
	xxxxxxxxxx 
	99999 
	
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	[...lots of x's...] 
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
	bye 
	Connection closed by foreign host. 
	$ 

	So I have 2 questions on my code: 

	1) am I doing anything wrong in setting up the plumbing? 
	2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

	Here is the code, and output from the server is at the end.
Thanks -- Benjamin 

	#!/usr/bin/env python 
	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime 
	import socket, string, random, time, traceback, shutil, popen2 

	from zope.interface import implements 
	from twisted.internet import protocol, defer, interfaces, error,
reactor 
	from twisted.internet.protocol import Protocol, Factory 
	from twisted.protocols.basic import LineReceiver 

	class NonStarvingXGiver: 
	    implements(interfaces.IPushProducer) 
	    def __init__(self, howmany, consumer): 
	        self.howmany = howmany 
	        self.sent_already = 0 
	        self.paused = False 
	        self.consumer = consumer 
	    def beginSendingXs(self): 
	        self.deferred = deferred = defer.Deferred() 
	        self.consumer.registerProducer(self, False) 
	        return deferred 
	    def pauseProducing(self): 
	        print 'pauseProducing: invoked' 
	        self.paused = True 
	    def resumeProducing(self): 
	        print 'resumeProducing: invoked' 
	        self.paused = False 
	        maxchunksz = 1024 
	        while not self.paused and self.howmany >
self.sent_already: 
	            chunksz = min(maxchunksz, self.howmany -
self.sent_already) 
	            self.consumer.write('x' * chunksz) 
	            self.sent_already += chunksz 
	        if self.howmany == self.sent_already: 
	            self.consumer.write('\n') 
	            self.consumer.unregisterProducer() 
	            print 'resumeProducing: exiting for the last time' 
	    def stopProducing(self): 
	        print 'stopProducing: invoked' 
	        self.consumer.unregisterProducer() 
	        
	class xgiver(LineReceiver): 
	    def lineReceived(self, howmany): 
	        print 'got line [%s] from client [%s]' % (howmany, 
	
self.transport.getPeer()) 
	        if howmany == 'bye': 
	            print 'goodbye to', self.transport.getPeer() 
	            self.transport.loseConnection() 
	            return 
	        try: 
	            howmany = int(howmany) 
	            s = NonStarvingXGiver(howmany, self.transport) 
	            s.beginSendingXs() 
	        except Exception, ex: 
	            self.transport.write("invalid input " + howmany +
"\n") 

	# Next lines are magic: 
	factory = Factory() 
	factory.protocol = xgiver 

	# 8007 is the port you want to run under. Choose something >1024

	reactor.listenTCP(8007, factory) 
	reactor.run() 


	
------------------------------------------------------------------- 
	Server output: 

	$ ./xgiver.py 
	got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]

	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [99999] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	resumeProducing: invoked 
	pauseProducing: invoked 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [bye] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	goodbye to IPv4Address(TCP, '127.0.0.1', 51007) 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070316/44ed0574/attachment.htm 

From exarkun at divmod.com  Fri Mar 16 13:29:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 Mar 2007 12:29:45 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070316172945.18920.1813365261.divmod.quotient.3173@ohm>

On Fri, 16 Mar 2007 11:48:53 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>BTW, how was it that my pauseProducing ever got invoked below?  after
>all I registered my producer (erroneously, no doubt since it implements
>IPushProducer) as a pull producer by using the 2nd argument of 'False'
>below:
>
>self.consumer.registerProducer(self, False)
>
>If indeed it's registered as a pull producer I wouldn't think its pause
>should ever be called. Does twisted actually use the type of the class
>to see what to call?  Or getattr(class,'pauseProducing') or somesuch?
>If so, what's the purpose of 'True' or 'False' during registration?
>
>from the docs:
>
>
>
>	registerProducer(producer, streaming)
>
>
>	So that a consumer can invoke methods on a producer, the
>consumer needs to be told about the producer. This is done with the
>registerProducer method. The first argument is either a IPullProducer or
>IPushProducer provider; the second argument indicates which of these
>interfaces is provided: True for push producers, False for pull
>producers.

This was a bug in one of the consumer implementations in Twisted (#2286).
It's been fixed since Twisted 2.5, so this won't happen in Twisted 2.6.

Jean-Paul



From Benjamin.Rutt at gs.com  Fri Mar 16 16:16:51 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 16 Mar 2007 16:16:51 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <20070316172945.18920.1813365261.divmod.quotient.3173@ohm>
References: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>
	<20070316172945.18920.1813365261.divmod.quotient.3173@ohm>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6582@gsmbnmp04es.firmwide.corp.gs.com>

Thanks.  One more question.  Any ideas why my server doesn't return any
data at all with the 2nd argument to registration being True?  It just
seems to sit there, but if I flip it to False it works as desired.
(This must be why I set it to False earlier, to get it to run).

I'm using python 2.4 and twisted 2.0.0.

Trivially modified server code, server output and client output are
below, separated by ======================.  Thanks.

#!/usr/bin/env python
import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime
import socket, string, random, time, traceback, shutil, popen2

from zope.interface import implements
from twisted.internet import protocol, defer, interfaces, error, reactor
from twisted.internet.protocol import Protocol, Factory
from twisted.protocols.basic import LineReceiver

class NonStarvingXGiver:
    implements(interfaces.IPushProducer)
    def __init__(self, howmany, consumer):
        self.howmany = howmany
        self.sent_already = 0
        self.paused = False
        self.consumer = consumer
        self.act_as_pull = 0
        self.payload1024 = 'x'*1024
    def beginSendingXs(self):
        self.deferred = deferred = defer.Deferred()
        self.consumer.registerProducer(self, True)
        return deferred
    def pauseProducing(self):
        print 'pauseProducing: invoked at %d bytes' %
(self.sent_already)
        self.paused = True
    def resumeProducing(self):
        if not self.act_as_pull:
            print 'resumeProducing: invoked'
        self.paused = False
        maxchunksz = 1024
        while not self.paused and self.howmany > self.sent_already:
            chunksz = min(maxchunksz, self.howmany - self.sent_already)
            if chunksz == 1024:
                self.consumer.write(self.payload1024)
            else:
                self.consumer.write('x' * chunksz)
            self.sent_already += chunksz
            if self.act_as_pull:
                break
        if self.howmany == self.sent_already:
            self.consumer.write('\n')
            self.consumer.unregisterProducer()
            print 'resumeProducing: exiting for the last time'
    def stopProducing(self):
        print 'stopProducing: invoked'
        self.consumer.unregisterProducer()
        
class xgiver(LineReceiver):
    def lineReceived(self, howmany):
        print 'got line [%s] from client [%s]' % (howmany,
 
self.transport.getPeer())
        if howmany == 'bye':
            print 'goodbye to', self.transport.getPeer()
            self.transport.loseConnection()
            return
        try:
            howmany = int(howmany)
            s = NonStarvingXGiver(howmany, self.transport)
            s.beginSendingXs()
        except Exception, ex:
            traceback.print_exc()
            self.transport.write("invalid input " + `howmany` + "\n")

# Next lines are magic:
factory = Factory()
factory.protocol = xgiver

# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(8007, factory)
reactor.run()

======================
got line [5] from client [IPv4Address(TCP, '127.0.0.1', 34840)]
got line [4] from client [IPv4Address(TCP, '127.0.0.1', 34840)]
Traceback (most recent call last):
  File "./xgiver.py", line 77, in lineReceived
    s.beginSendingXs()
  File "./xgiver.py", line 39, in beginSendingXs
    self.consumer.registerProducer(self, True)
  File
"/sw/external/python-2.4/lib/python2.4/site-packages/twisted/internet/ab
stract.py", line 266, in registerProducer
    raise RuntimeError("Cannot register producer %s, because producer %s
was never unregistered." % (producer, self.producer))
RuntimeError: Cannot register producer <__main__.NonStarvingXGiver
instance at 0x3a5120>, because producer <__main__.NonStarvingXGiver
instance at 0x3a5198> was never unregistered.
stopProducing: invoked
======================
$ telnet localhost 8007
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
5
4
invalid input 4



From warner at lothar.com  Fri Mar 16 19:43:55 2007
From: warner at lothar.com (Brian Warner)
Date: Fri, 16 Mar 2007 16:43:55 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.1.0 released
Message-ID: <20070316.164355.112604497.warner@lothar.com>


I made a new release of Foolscap last night, available in the usual place at
http://twistedmatrix.com/trac/wiki/FoolsCap . This release makes a few
usability improvements for Foolscap-based servers, and fixes a bug that made
it impossible to use a Tub right after creating it for the first time (if
that system's clock was faster than the system being connected to).

The Foolscap-0.1.0 release tarball is signed by my GPG public key
(0x1514A7BD) and available from:

 http://twistedmatrix.com/~warner/Foolscap/foolscap-0.1.0.tar.gz
 http://twistedmatrix.com/~warner/Foolscap/foolscap-0.1.0.tar.gz.sig

There are no protocol changes between 0.1.0 and the previous 0.0.7 release,
just bugfixes and API additions. There are still protocol changes in the
works, though. Why call this version 0.1.0? Because this release is actually
kind of useful for something.

What is Foolscap? From the README:

   This is a ground-up rewrite of Perspective Broker, which itself is
   Twisted's native RPC/RMI protocol (Remote Procedure Call / Remote Method
   Invocation). If you have control of both ends of the wire, and are thus
   not constrained to use some other protocol like HTTP/XMLRPC/CORBA/etc, you
   might consider using Foolscap.

   Fundamentally, Foolscap allows you to make a python object in one process
   available to code in other processes, which means you can invoke its
   methods remotely. This includes a data serialization layer to convey the
   object graphs for the arguments and the eventual response, and an object
   reference system to keep track of which objects you are connecting to. It
   uses a capability-based security model, such that once you create a
   non-public object, it is only accessible to clients to whom you've given
   the (unguessable) PB-URL. You can of course publish world-visible objects
   that have well-known PB-URLs.

The complete release notes for 0.1.0 are attached below.

share and enjoy,
 -Brian


* Release 0.1.0 (15 Mar 2007)

** usability improvements

*** Tubs now have a certFile= argument

A certFile= argument has been added to the Tub constructor to allow the Tub
to manage its own certificates. This argument provides a filename where the
Tub should read or write its certificate. If the file exists, the Tub will
read the certificate data from there. If not, the Tub will generate a new
certificate and write it to the file.

The idea is that you can point certFile= at a persistent location on disk,
perhaps in the application's configuration or preferences subdirectory, and
then not need to distinguish between the first time the Tub has been created
and later invocations. This allows the Tub's identity (derived from the
certificate) to remain stable from one invocation to the next. The related
problem of how to make (unguessable) object names persistent from one program
run to the next is still outstanding, but I expect to implement something
similar in the future (some sort of file to which object names are written
and read later).

certFile= is meant to be used somewhat like this:

 where = os.path.expanduser("~/.myapp.cert")
 t = Tub(certFile=where)
 t.registerReference(obj) # ...

*** All eventual-sends are retired on each reactor tick, not just one.

Applications which make extensive use of the eventual-send operations (in
foolscap.eventual) will probably run more smoothly now. In previous releases,
the _SimpleCallQueue class would only execute a single eventual-send call per
tick, then take care of all pending IO (and any pending timers) before
servicing the next eventual-send. This could probably lead to starvation, as
those eventual-sends might generate more work (and cause more network IO),
which could cause the event queue to grow without bound. The new approach
finishes as much eventual-send work as possible before accepting any IO. Any
new eventual-sends which are queued during the current tick will be put off
until the next tick, but everything which was queued before the current tick
will be retired in the current tick.

** bug fixes

*** Tub certificates can now be used the moment they are created

In previous releases, Tubs were only willing to accept SSL certificates that
created before the moment of checking. If two systems A and B had
unsynchronized clocks, and a Foolscap-using application on A was run for the
first time to connect to B (thus creating a new SSL certificate), system B
might reject the certificate because it looks like it comes from the future.

This problem is endemic in systems which attempt to use the passage of time
as a form of revocation. For now at least, to resolve the practical problem
of certificates generated on demand and used by systems with unsynchronized
clocks, Foolscap does not use certificate lifetimes, and will ignore
timestamps on the certificates it examines.



From radix at twistedmatrix.com  Sat Mar 17 12:16:37 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 17 Mar 2007 12:16:37 -0400
Subject: [Twisted-Python] Game using twisted: Castle-Combat
In-Reply-To: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>
References: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>
Message-ID: <60ed19d40703170916t569ff93chba683a05ca7035d1@mail.gmail.com>

On 3/15/07, Karl Bartel <karlb at gmx.net> wrote:
> Hi!
>
> I've written a game which could be added to http://twistedmatrix.com/
> trac/wiki/ProjectsUsingTwisted, if it qualifies as successful.

I've added it. Thanks a lot, Karl!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sun Mar 18 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1174190702.2.1171066819@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-11 through 2007-03-18
Bugs opened: 12    Bugs closed: 11  Total open bugs: 879 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -4          |Conch:  +1             
|Enhancement:  +2  |High:     +3          |Core:   -4             
                   |Normal:   +2          |Lore:   +3             
                   |Lowest:   +1          |Mail:   +1             
                                          |Trial:  +0             
                                          |Web:    +1             
                                          |Web2:   +1             
                                          |Words:  -1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2521] SMTP authentication tracebacks when receiving an empty line (opened by washort)
    defect          mail       http://twistedmatrix.com/trac/ticket/2521

[#2523] portal can't check for inherited interfaces (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2523

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi) (CLOSED, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

                    ===== High =====
[#2525] Improve Lore's automated test coverage to UQDS standards (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2525

[#2526] Integrate Lore patches which do index generation for ThinkCSPy (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2526

[#2527] Lore Index output for LaTeX (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2527

                    ===== Normal =====
[#2517] Xish XPath event observers not tested (opened by exarkun)
    defect          words      http://twistedmatrix.com/trac/ticket/2517

[#2518] t.w.xmlrpc.QueryProtocol does not close the connection after handling the request (opened by karlb)
    defect          web        http://twistedmatrix.com/trac/ticket/2518

[#2519] Couple of conch bug-fixes (opened by johnnypops)
    defect          conch      http://twistedmatrix.com/trac/ticket/2519

[#2520] twisted.mail.pop3client.POP3Client does not allow plain text login (opened by yasusii) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2520

[#2522] HTTPAuthResource: 'ValueError: too many values to unpack' when IRealm.requestAvatarId returns a logout callable (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2522

                    ===== Lowest =====
[#2524] Support for triggering trial's waiting for Deferreds from within doctests (opened by strank)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2524



Closed Bugs
______________________
                    ===== Highest =====
[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

[#2476] local variable 'cbl' referenced before assignment (opened by jack, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2476

[#2419] t.i.fdesc improvements (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2419

[#2005] trial twisted/mail/ traces back, omitting trailing / does not. (opened by jerub, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2005

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2523] portal can't check for inherited interfaces (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2523

[#2463] add tests for logging of unhandled deferred errors (opened by antoine, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2463

                    ===== Normal =====
[#2515] "python setup.py build" fails for Twisted (opened by edwards, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#2520] twisted.mail.pop3client.POP3Client does not allow plain text login (opened by yasusii, closed by yasusii, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2520

[#1739] (patch) Removing system event triggers while firing does the wrong thing. (opened by antony, closed by glyph, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1739





From listbox at evernex.com  Mon Mar 19 22:16:23 2007
From: listbox at evernex.com (Neurophyre)
Date: Mon, 19 Mar 2007 19:16:23 -0700
Subject: [Twisted-Python] using stdio with Twisted
Message-ID: <DFB61B0A-D487-447C-97EF-FCAFCD2A09FB@evernex.com>

Hello,

I'm building an old-school BBS client using Twisted.  It needs to  
take user input, parse it, send messages over the wire and get  
messages back and display them.. the usual.  I'm just now getting to  
writing the UI and have run into a couple problems.

First, whether using protocol.Protocol or  
protocols.basic.LineReceiver (in raw mode) with  
internet.stdio.StandardIO, I have the same problem: the dataReceived  
(or rawDataReceived in the case of LineReceiver in raw mode)  
functions are only called after one types some text and hits return.   
I need to process input on a keystroke level, since there will be  
prompts at which a single keystroke will do things.

Second, I was looking at  
twisted.conch.insults.insults.TerminalProtocol after some Googling --  
does anyone know if I can just drop this in in place of  
protocols.basic.LineReceiver (or whatever) and have it work properly,  
or does it require some special invocation and/or grab stdio by itself?

Thanks!




From exarkun at divmod.com  Tue Mar 20 07:13:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 06:13:55 -0500
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <DFB61B0A-D487-447C-97EF-FCAFCD2A09FB@evernex.com>
Message-ID: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>

On Mon, 19 Mar 2007 19:16:23 -0700, Neurophyre <listbox at evernex.com> wrote:
>Hello,
>
>I'm building an old-school BBS client using Twisted.  It needs to  take user 
>input, parse it, send messages over the wire and get  messages back and 
>display them.. the usual.  I'm just now getting to  writing the UI and have 
>run into a couple problems.
>
>First, whether using protocol.Protocol or  protocols.basic.LineReceiver (in 
>raw mode) with  internet.stdio.StandardIO, I have the same problem: the 
>dataReceived  (or rawDataReceived in the case of LineReceiver in raw mode) 
>functions are only called after one types some text and hits return.   I 
>need to process input on a keystroke level, since there will be  prompts at 
>which a single keystroke will do things.
>
>Second, I was looking at  twisted.conch.insults.insults.TerminalProtocol 
>after some Googling --  does anyone know if I can just drop this in in place 
>of  protocols.basic.LineReceiver (or whatever) and have it work properly, 
>or does it require some special invocation and/or grab stdio by itself?

Take a look at what twisted.conch.stdio.runWithProtocol does to the terminal.
That's more or less what's necessary to kick it out of line buffered mode and
give you each keystroke as it arrives.

TerminalProtocol is meant to be used with ServerProtocol from the same module.
ServerProtocol will interpret various terminal control sequences and translate
them into calls onto whatever ITerminalProtocol you supply to it.  It probably
won't be much use to use LineReceiver, since keystrokeReceived will be called
with things like backspace and home and other things LineReceiver has no idea
what to do with.  There are a couple other things you might be interested in
though, like twisted.conch.recvline.RecvLine or a class in a project I've been
working on a bit on and off, invective.widgets.LineInputWidget, which uses
insults' widget system to implement a more re-usable line input class (you can
find invective in my Twisted sandbox,

  http://twistedmatrix.com/trac/browser/sandbox/exarkun/invective/

), which will hopefully move back into Twisted at some point.

Jean-Paul



From sebastien.lelong at dexia-securities.fr  Tue Mar 20 09:05:40 2007
From: sebastien.lelong at dexia-securities.fr (=?iso-8859-1?q?S=E9bastien_LELONG?=)
Date: Tue, 20 Mar 2007 14:05:40 +0100
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
Message-ID: <200703201405.41090.sebastien.lelong@dexia-securities.fr>

Hi,

I've been using Twisted for several months, and have frequently encountered 
the following problem. 

In my Twisted apps, I declare services (t.a.service.Service), which then I 
need to subclass. The problem is I can't call super() on such subclass, since 
the class Service in twisted does not inherit the built-in 'object' type 
("TypeError: super() argument 1 must be type, not classobj"). For now, I can 
use other form of superclass calling, but that can be error prone.

Is there any particular reason why class Service isn't a subclass of object ? 
It's kind of surprising since Service is designed to be subclassed.

Thanks in advance for your help/replies.

Cheers,

Seb
-- 
S?bastien LELONG
sebastien.lelong[at]sirloon.net
http://www.sirloon.net



From exarkun at divmod.com  Tue Mar 20 10:13:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 09:13:22 -0500
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
In-Reply-To: <200703201405.41090.sebastien.lelong@dexia-securities.fr>
Message-ID: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>

On Tue, 20 Mar 2007 14:05:40 +0100, S?bastien LELONG <sebastien.lelong at dexia-securities.fr> wrote:
>Hi,
>
>I've been using Twisted for several months, and have frequently encountered
>the following problem.
>
>In my Twisted apps, I declare services (t.a.service.Service), which then I
>need to subclass. The problem is I can't call super() on such subclass, since
>the class Service in twisted does not inherit the built-in 'object' type
>("TypeError: super() argument 1 must be type, not classobj"). For now, I can
>use other form of superclass calling, but that can be error prone.
>
>Is there any particular reason why class Service isn't a subclass of object ?
>It's kind of surprising since Service is designed to be subclassed.
>
>Thanks in advance for your help/replies.
>
>Cheers,
>

The major reason is backwards compatibility.  Changing a class to inherit
from object can break subclasses which didn't expect this.

The idea that's been discussed so far to address this is something along the
lines of adding an optional keyword argument to allow each user of the class
to specify whether it wants classic or new-style.  The default would be stay
classic for a while, then that would be deprecated, and finally it would be
an error not to ask for new-style (or maybe it would just become new-style
by default, but I don't like that so much).  Nothing's even nearly decided
yet though.  Suggestions are, of course, welcome. :)

You might find the information given here:

  http://fuhm.net/super-harmful/

interesting as well, though (completely separate from whether Service is
new-style or not).

Jean-Paul



From jarek.zgoda at sensisoft.com  Tue Mar 20 10:34:24 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Tue, 20 Mar 2007 15:34:24 +0100
Subject: [Twisted-Python] Twistd memory usage
Message-ID: <45FFF0F0.6060907@sensisoft.com>

I have an application, ran as twistd plugin. If I run it as daemon,
twistd consumes all available memory (of 4GB available), then after few
seconds of swapping twistd is killed by kernel's OOM killer. I cann't
reproduce this when I run this application in no-daemon mode (twistd
-n), the memory footprint is constant and does not exceed 150MB. Is this
normal behaviour?

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From sebastien.lelong at dexia-securities.fr  Tue Mar 20 11:16:58 2007
From: sebastien.lelong at dexia-securities.fr (=?utf-8?q?S=C3=A9bastien_LELONG?=)
Date: Tue, 20 Mar 2007 16:16:58 +0100
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
In-Reply-To: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>
References: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>
Message-ID: <200703201616.58878.sebastien.lelong@dexia-securities.fr>

Thanks for your reply !

> The major reason is backwards compatibility.  Changing a class to inherit
> from object can break subclasses which didn't expect this.
> [...] You might find the information given here [link] interesting as well

OK, I understand that. And thanks for your interresting link. I guess I might 
need to reconsider my "super" approach :). For now, I'll use the oldstyle 
superclass calling with twisted's Service.


Cheers,

Seb
-- 
S?bastien LELONG
sebastien.lelong[at]sirloon.net
http://www.sirloon.net



From listbox at evernex.com  Tue Mar 20 15:02:36 2007
From: listbox at evernex.com (Neurophyre)
Date: Tue, 20 Mar 2007 12:02:36 -0700
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>
References: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>
Message-ID: <F3016DCB-D50E-4984-ABF6-2BEF06F88D49@evernex.com>

On Mar 20, 2007, at 4:13 AM, Jean-Paul Calderone wrote:

> Take a look at what twisted.conch.stdio.runWithProtocol does to the  
> terminal.
> That's more or less what's necessary to kick it out of line  
> buffered mode and
> give you each keystroke as it arrives.

Thanks for this pointer.  I'm going to try rewriting my terminal I/O  
code, what little of it there is, to use that this morning.

> TerminalProtocol is meant to be used with ServerProtocol from the  
> same module.
> ServerProtocol will interpret various terminal control sequences  
> and translate
> them into calls onto whatever ITerminalProtocol you supply to it.   
> It probably

After looking at your invective code a second time (somebody in  
#twisted pointed me to it last night) I'm still not entirely sure how  
ServerProtocol integrates.  It seems like you're mainly just using it  
as a sort of container of constants to interpret special keystrokes  
(like alt-whatever, or backspace or similar) and in the test cases to  
produce such sequences.  Is that its main use?

> what to do with.  There are a couple other things you might be  
> interested in
> though, like twisted.conch.recvline.RecvLine or a class in a  
> project I've been
> working on a bit on and off, invective.widgets.LineInputWidget,  
> which uses
> insults' widget system to implement a more re-usable line input  
> class (you can
> find invective in my Twisted sandbox,

Yep, I think twisted.conch.recvline.RecvLine may be what I'm looking  
for.  My program needs to respond to keystrokes in some cases, and  
allow line editing in others -- message entry, for example.

Thanks again for your help and I'll probably be back here with more  
questions at some point.

--Neuro




From exarkun at divmod.com  Tue Mar 20 15:43:26 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 14:43:26 -0500
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <F3016DCB-D50E-4984-ABF6-2BEF06F88D49@evernex.com>
Message-ID: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>

On Tue, 20 Mar 2007 12:02:36 -0700, Neurophyre <listbox at evernex.com> wrote:
> [snip]
>
>After looking at your invective code a second time (somebody in  #twisted 
>pointed me to it last night) I'm still not entirely sure how  ServerProtocol 
>integrates.  It seems like you're mainly just using it  as a sort of 
>container of constants to interpret special keystrokes  (like alt-whatever, 
>or backspace or similar) and in the test cases to  produce such sequences. 
>Is that its main use?

Well, it is also a protocol implementation for something like VT102.  A lot
of the tests bypass the byte-level stuff because that's not what's interesting
for what they're testing.  In your actual code, ServerProtocol is what is
responsible for calling keystrokeReceived with all of those interesting
values.

Jean-Paul



From listbox at evernex.com  Tue Mar 20 16:31:19 2007
From: listbox at evernex.com (Neurophyre)
Date: Tue, 20 Mar 2007 13:31:19 -0700
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>
References: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>
Message-ID: <000E1D16-E278-4F75-906F-9D477D428101@evernex.com>

On Mar 20, 2007, at 12:43 PM, Jean-Paul Calderone wrote:

>
> Well, it is also a protocol implementation for something like  
> VT102.  A lot
> of the tests bypass the byte-level stuff because that's not what's  
> interesting
> for what they're testing.  In your actual code, ServerProtocol is  
> what is
> responsible for calling keystrokeReceived with all of those  
> interesting
> values.

Sorry, but I don't understand how to make it do that.  I have my own  
user interface 'protocol' which at this point is getting  
keystrokeReceived events and echoing them to the screen, but it's  
only getting a keyID and the modifier field is always None.  Also, if  
I enter a control-key, the control character is echoed (for example  
ctrl-J produces a line feed) but the modifier is not set.

I've grepped your code and found only one place, in widgets.py, where  
it's used that isn't a test case -- and that's just doing a  
comparison on a received keystroke, I think.

Here's my relevant code, for reference:


class DOCUIProtocol(recvline.RecvLine):
     """
     A 'protocol' which handles the user interface.
     """

     def connectionMade(self):
         """runWithProtocol() in main"""
         # process individual keystrokes, hopefully

         # http://svn.twistedmatrix.com/cvs/sandbox/exarkun/invective/ 
trunk/invective/tui.py?rev=19759&view=auto
         super(DOCUIProtocol, self).connectionMade()
         self.terminal.resetPrivateModes([privateModes.CURSOR_MODE])

         # set up quasi-singleton state variables
         self.__buff = ClientUITidbits.KeystrokeBuffer()
         self.__clientUIState = ClientUITidbits.UIState()
         self.__clientUIState.setState(Constants.UISTATE_DISCONNECTED)

         # make a quasi-singleton instance of ourself so others can  
use write() and writeLine()
         dummy = ClientUITidbits.StdIO()
         dummy.stdioInstance = self;

         d = self.write(u'done.\n')
         self.connectBBS()

     def keystrokeReceived(self, keyID, modifier):
         # see http://twistedmatrix.com/documents/current/api/ 
twisted.conch.insults.insults.TerminalProtocol.html
         # TODO fix for control keys
         self.writeLine("Got key: " + keyID + " " + str(modifier))

         # ?
         if keyID == ServerProtocol.RIGHT_ARROW:
             self.writeLine("killed")
             reactor.stop()

         #self.__buff.append(keyID)
         #ClientParseInput.KeystrokeDispatcher.parse()

     # TODO delete if we continue using insults
     def dataReceived(self, data):
         self.__buff.append(data)
         ClientParseInput.KeystrokeDispatcher.parse()

     def write(self, data):
         """write data to stdout, encoded in an output charset"""
         # TODO delete for conch
         # self.transport.write(data.encode(Constants.CHARSET_OUTPUT))
         self.terminal.write(data.encode(Constants.CHARSET_OUTPUT))

     def writeLine(self, data):
         """write data plus a newline, encoded in an output charset"""
         # TODO find out why this isn't working right
         # TODO delete for conch
         # self.transport.write(data.encode(Constants.CHARSET_OUTPUT  
+ '\n'))
         self.terminal.write(data.encode(Constants.CHARSET_OUTPUT) +  
'\n')

     def connectBBS(self):
         """initiate the TCP connection to the BBS server and start  
the reactor."""
         # the factory writes diagnostic messages to the stdio  
instance for us
         reactor.connectTCP('vapor.evernex.net', 9023,  
ClientProtocol.BBSClientProtocolFactory())
         # reactor.run()


class CommandLineUserInterface(DOCUIProtocol):
     """
     See http://svn.twistedmatrix.com/cvs/sandbox/exarkun/invective/ 
trunk/invective/tui.py?rev=19759&view=auto
     """

     def connectionMade(self):
         signal(SIGWINCH, self.windowChanged)
         winSize = self.getWindowSize()
         self.width = winSize[0]
         self.height = winSize[1]
         super(CommandLineUserInterface, self).connectionMade()

     def connectionLost(self, reason):
         reactor.stop()

     # XXX Should be part of runWithProtocol
     def getWindowSize(self):
         winsz = ioctl(0, TIOCGWINSZ, '12345678')
         winSize = unpack('4H', winsz)
         newSize = winSize[1], winSize[0], winSize[3], winSize[2]
         return newSize

     def windowChanged(self, signum, frame):
         winSize = self.getWindowSize()
         self.terminalSize(winSize[0], winSize[1])


if __name__ == "__main__":
     splashLine = Constants.VERSION_CLIENT_LINE + u' - ' +  
Constants.VERSION_COPYRIGHT
     print splashLine.encode(Constants.CHARSET_OUTPUT)
     print 'Connecting user interface: ',
     runWithProtocol(CommandLineUserInterface)




From kickdaddy at gmail.com  Tue Mar 20 17:27:26 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 14:27:26 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and additional
	sections
Message-ID: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>

Hey all,

I have a client I have written using twisted.names that will send a
DNS request.  Here is the gist of the relevant code:

    (tfp, tfile) = tempfile.mkstemp()
    os.write(tfp, 'nameserver %s' % ip)
    os.close(tfp)
    resolver = client.createResolver(resolvconf=tfile)
    deferred = resolver.lookupAddress(somevalue)
    deferred.addCallback(resultHandler)

hacky way to set the IP, but I am having issues with passing in the
"servers" list I don't want to troubleshoot until I figure out this
problem.

Anyways, as you can see, this code calls the lookupAddress method for
the name I want.  The problem I am having is it is only returning the
answer section of the response.  I need the additional and authority
sections as well (and I know for sure those sections exist in the
response).  I have looked at the docs and the code, and I don't know
what I am missing.  I am sure it's something silly, but I am missing
it right now.

So long question short, what do I need to change in my code so I can
get the additional sections and authority sections in the response so
I can get to those values?

Thanks,
Sean



From exarkun at divmod.com  Tue Mar 20 18:30:11 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 17:30:11 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>
Message-ID: <20070320223011.18920.1524114690.divmod.quotient.4325@ohm>

On Tue, 20 Mar 2007 14:27:26 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Hey all,
>
>I have a client I have written using twisted.names that will send a
>DNS request.  Here is the gist of the relevant code:
>
>    (tfp, tfile) = tempfile.mkstemp()
>    os.write(tfp, 'nameserver %s' % ip)
>    os.close(tfp)
>    resolver = client.createResolver(resolvconf=tfile)
>    deferred = resolver.lookupAddress(somevalue)
>    deferred.addCallback(resultHandler)
>
>hacky way to set the IP, but I am having issues with passing in the
>"servers" list I don't want to troubleshoot until I figure out this
>problem.
>
>Anyways, as you can see, this code calls the lookupAddress method for
>the name I want.  The problem I am having is it is only returning the
>answer section of the response.  I need the additional and authority
>sections as well (and I know for sure those sections exist in the
>response).  I have looked at the docs and the code, and I don't know
>what I am missing.  I am sure it's something silly, but I am missing
>it right now.
>
>So long question short, what do I need to change in my code so I can
>get the additional sections and authority sections in the response so
>I can get to those values?

One approach would be to use queryUDP directly instead of lookupAddress:

    resolver.queryUDP([dns.Query(name, dns.A, dns.IN)])

Which will give you a full message object back, including lists of answers,
additional, and authority sections.

Jean-Paul



From kickdaddy at gmail.com  Tue Mar 20 19:13:14 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 16:13:14 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070320223011.18920.1524114690.divmod.quotient.4325@ohm>
References: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>
	<20070320223011.18920.1524114690.divmod.quotient.4325@ohm>
Message-ID: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>

Thanks Jean-Paul,

I tried changing to queryUDP, and it just sits there, never sends out
a query (watching with tcpdump).  If I change it to _lookup, which it
looks like queryUDP calls, it sends the query, but like lookupAddress,
I don't get the additional and auth sections still...

What is weird, when I do this

deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])

and I try and debug why it's hanging, I put a print in the
ResolverBase.queryUDP function right at the top, and it never prints.

Regards,
Sean


On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 20 Mar 2007 14:27:26 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> >Hey all,
> >
> >I have a client I have written using twisted.names that will send a
> >DNS request.  Here is the gist of the relevant code:
> >
> >    (tfp, tfile) = tempfile.mkstemp()
> >    os.write(tfp, 'nameserver %s' % ip)
> >    os.close(tfp)
> >    resolver = client.createResolver(resolvconf=tfile)
> >    deferred = resolver.lookupAddress(somevalue)
> >    deferred.addCallback(resultHandler)
> >
> >hacky way to set the IP, but I am having issues with passing in the
> >"servers" list I don't want to troubleshoot until I figure out this
> >problem.
> >
> >Anyways, as you can see, this code calls the lookupAddress method for
> >the name I want.  The problem I am having is it is only returning the
> >answer section of the response.  I need the additional and authority
> >sections as well (and I know for sure those sections exist in the
> >response).  I have looked at the docs and the code, and I don't know
> >what I am missing.  I am sure it's something silly, but I am missing
> >it right now.
> >
> >So long question short, what do I need to change in my code so I can
> >get the additional sections and authority sections in the response so
> >I can get to those values?
>
> One approach would be to use queryUDP directly instead of lookupAddress:
>
>     resolver.queryUDP([dns.Query(name, dns.A, dns.IN)])
>
> Which will give you a full message object back, including lists of answers,
> additional, and authority sections.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From wgwigw at gmail.com  Tue Mar 20 22:01:11 2007
From: wgwigw at gmail.com (wang wei)
Date: Wed, 21 Mar 2007 10:01:11 +0800
Subject: [Twisted-Python] question about thread and threadpool
Message-ID: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>

the document said:
# run method in thread
reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
but after above code, Is that Thread dead? and how can I re-use this thread?
and if I create a thread using python thread module, can I use reactor to
re-use it?
there is a threadpool in twisted, is there any example of how to use it?
thanks for any advices.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070321/dcae0753/attachment.htm 

From exarkun at divmod.com  Tue Mar 20 22:41:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 21:41:52 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
Message-ID: <20070321024152.18920.1241379717.divmod.quotient.4396@ohm>

On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Thanks Jean-Paul,
>
>I tried changing to queryUDP, and it just sits there, never sends out
>a query (watching with tcpdump).  If I change it to _lookup, which it
>looks like queryUDP calls, it sends the query, but like lookupAddress,
>I don't get the additional and auth sections still...
>
>What is weird, when I do this
>
>deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
>
>and I try and debug why it's hanging, I put a print in the
>ResolverBase.queryUDP function right at the top, and it never prints.
>

The factoring here is a little weird.  Try creating a t.names.client.Resolver
explicitly (just instantiate it with a servers list or a resolv.conf filename)
and calling queryUDP on it (unless you were doing this already).  The
createResolver function does some other stuff which might be getting in the
way here, either of functioning or debugging.

Here's an example (using t/conch/stdio.py):

  >>> from twisted.names import dns, client
  >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
  >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
  >>> d
  <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
  >>> d.result
  <twisted.names.dns.Message instance at 0xb79b6aec>
  >>> d.result.authority
  [<snip - a bunch of records>]
  >>> d.result.additional
  [<snip - a bunch of records>]
  >>> d.result.answers
  []
  >>>

Hope this helps things,

Jean-Paul



From exarkun at divmod.com  Tue Mar 20 22:44:25 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 21:44:25 -0500
Subject: [Twisted-Python] question about thread and threadpool
In-Reply-To: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>
Message-ID: <20070321024425.18920.361163719.divmod.quotient.4398@ohm>

On Wed, 21 Mar 2007 10:01:11 +0800, wang wei <wgwigw at gmail.com> wrote:
>the document said:
># run method in thread
>reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
>but after above code, Is that Thread dead? and how can I re-use this thread?
>and if I create a thread using python thread module, can I use reactor to
>re-use it?
>there is a threadpool in twisted, is there any example of how to use it?
>thanks for any advices.
>

callInThread uses a threadpool.  If you use it again after the first function
finishes, it is quite likely that the same thread will be used to service the
second request.

If you want, you can also create your own twisted.python.threadpool.ThreadPool
instance and dispatch calls to it.

Jean-Paul



From kickdaddy at gmail.com  Tue Mar 20 23:16:59 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 20:16:59 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
Message-ID: <45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>

Sweet!  That was it.  Explicitly creating the Resolver worked like a
charm (don't ask me why :)   ).  Thanks!

On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> >Thanks Jean-Paul,
> >
> >I tried changing to queryUDP, and it just sits there, never sends out
> >a query (watching with tcpdump).  If I change it to _lookup, which it
> >looks like queryUDP calls, it sends the query, but like lookupAddress,
> >I don't get the additional and auth sections still...
> >
> >What is weird, when I do this
> >
> >deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
> >
> >and I try and debug why it's hanging, I put a print in the
> >ResolverBase.queryUDP function right at the top, and it never prints.
> >
>
> The factoring here is a little weird.  Try creating a t.names.client.Resolver
> explicitly (just instantiate it with a servers list or a resolv.conf filename)
> and calling queryUDP on it (unless you were doing this already).  The
> createResolver function does some other stuff which might be getting in the
> way here, either of functioning or debugging.
>
> Here's an example (using t/conch/stdio.py):
>
>   >>> from twisted.names import dns, client
>   >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
>   >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
>   >>> d
>   <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
>   >>> d.result
>   <twisted.names.dns.Message instance at 0xb79b6aec>
>   >>> d.result.authority
>   [<snip - a bunch of records>]
>   >>> d.result.additional
>   [<snip - a bunch of records>]
>   >>> d.result.answers
>   []
>   >>>
>
> Hope this helps things,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From wgwigw at gmail.com  Tue Mar 20 23:40:21 2007
From: wgwigw at gmail.com (wang wei)
Date: Wed, 21 Mar 2007 11:40:21 +0800
Subject: [Twisted-Python] question about thread and threadpool
In-Reply-To: <20070321024425.18920.361163719.divmod.quotient.4398@ohm>
References: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>
	<20070321024425.18920.361163719.divmod.quotient.4398@ohm>
Message-ID: <dbeb95830703202040t72058a2ia0a5dfe82a243fde@mail.gmail.com>

2007/3/21, Jean-Paul Calderone <exarkun at divmod.com>:
>
> On Wed, 21 Mar 2007 10:01:11 +0800, wang wei <wgwigw at gmail.com> wrote:
> >the document said:
> ># run method in thread
> >reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
> >but after above code, Is that Thread dead? and how can I re-use this
> thread?
> >and if I create a thread using python thread module, can I use reactor to
> >re-use it?
> >there is a threadpool in twisted, is there any example of how to use it?
> >thanks for any advices.
> >
>
> callInThread uses a threadpool.  If you use it again after the first
> function
> finishes, it is quite likely that the same thread will be used to service
> the
> second request.
>
> If you want, you can also create your own
> twisted.python.threadpool.ThreadPool
> instance and dispatch calls to it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
thanks, I get the idea. Is there any examples on how to use it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070321/8fb009b0/attachment.htm 

From kickdaddy at gmail.com  Tue Mar 20 23:42:25 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 20:42:25 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
Message-ID: <45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>

Ok...ignore my last post, jumped the gun, the additional and authority
still don't exist in the result object.  In addition, I tried your
example to make sure I wasn't crazy, and it doesn't return any result
data.  I know it's not a network issue or anything silly as I can
query a.root fine with dig and get the results.  Here is the session:

$ cat test.py
#!/usr/bin/python2.4
import time
from twisted.names import dns, client, _version
print _version.version
def errorHandler(error):
    print str(error)
r = client.Resolver(servers=[('198.41.0.4', 53)])
d = r.queryUDP([dns.Query('google.com', dns.IN,
dns.A)]).addErrback(errorHandler)
time.sleep(5)  ## give it a time for shitz and giggles
print d
print d.result

$ ./test.py
[twisted.names, version 0.4.0]
<Deferred at 0xB7BBBFECL>
Traceback (most recent call last):
  File "./test.py", line 10, in ?
    print d.result
AttributeError: Deferred instance has no attribute 'result'






On 3/20/07, Sean Leach <kickdaddy at gmail.com> wrote:
> Sweet!  That was it.  Explicitly creating the Resolver worked like a
> charm (don't ask me why :)   ).  Thanks!
>
> On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> > >Thanks Jean-Paul,
> > >
> > >I tried changing to queryUDP, and it just sits there, never sends out
> > >a query (watching with tcpdump).  If I change it to _lookup, which it
> > >looks like queryUDP calls, it sends the query, but like lookupAddress,
> > >I don't get the additional and auth sections still...
> > >
> > >What is weird, when I do this
> > >
> > >deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
> > >
> > >and I try and debug why it's hanging, I put a print in the
> > >ResolverBase.queryUDP function right at the top, and it never prints.
> > >
> >
> > The factoring here is a little weird.  Try creating a t.names.client.Resolver
> > explicitly (just instantiate it with a servers list or a resolv.conf filename)
> > and calling queryUDP on it (unless you were doing this already).  The
> > createResolver function does some other stuff which might be getting in the
> > way here, either of functioning or debugging.
> >
> > Here's an example (using t/conch/stdio.py):
> >
> >   >>> from twisted.names import dns, client
> >   >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
> >   >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
> >   >>> d
> >   <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
> >   >>> d.result
> >   <twisted.names.dns.Message instance at 0xb79b6aec>
> >   >>> d.result.authority
> >   [<snip - a bunch of records>]
> >   >>> d.result.additional
> >   [<snip - a bunch of records>]
> >   >>> d.result.answers
> >   []
> >   >>>
> >
> > Hope this helps things,
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From therve at free.fr  Wed Mar 21 05:11:51 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 21 Mar 2007 10:11:51 +0100
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
Message-ID: <20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>

Quoting Sean Leach <kickdaddy at gmail.com>:

> Ok...ignore my last post, jumped the gun, the additional and authority
> still don't exist in the result object.  In addition, I tried your
> example to make sure I wasn't crazy, and it doesn't return any result
> data.  I know it's not a network issue or anything silly as I can
> query a.root fine with dig and get the results.  Here is the session:
>
> $ cat test.py
> #!/usr/bin/python2.4
> import time
> from twisted.names import dns, client, _version
> print _version.version
> def errorHandler(error):
>    print str(error)
> r = client.Resolver(servers=[('198.41.0.4', 53)])
> d = r.queryUDP([dns.Query('google.com', dns.IN,
> dns.A)]).addErrback(errorHandler)
> time.sleep(5)  ## give it a time for shitz and giggles
> print d
> print d.result

I *think* you're missing something about Twisted. You should start the reactor
to have something, and *never* use time.sleep inside a Twisted program.

You could start with reading the documentation here:
http://twistedmatrix.com/projects/core/documentation/howto/async.html.

-- 
Thomas






From kickdaddy at gmail.com  Wed Mar 21 08:31:08 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Wed, 21 Mar 2007 05:31:08 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
	<20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
Message-ID: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>

Yes - I know, this was a small example program to show the problem I
was seeing.  And I have read over all of the documentation, including
the Twisted.names source.

On 3/21/07, Thomas Herv? <therve at free.fr> wrote:
> Quoting Sean Leach <kickdaddy at gmail.com>:
>
> > Ok...ignore my last post, jumped the gun, the additional and authority
> > still don't exist in the result object.  In addition, I tried your
> > example to make sure I wasn't crazy, and it doesn't return any result
> > data.  I know it's not a network issue or anything silly as I can
> > query a.root fine with dig and get the results.  Here is the session:
> >
> > $ cat test.py
> > #!/usr/bin/python2.4
> > import time
> > from twisted.names import dns, client, _version
> > print _version.version
> > def errorHandler(error):
> >    print str(error)
> > r = client.Resolver(servers=[('198.41.0.4', 53)])
> > d = r.queryUDP([dns.Query('google.com', dns.IN,
> > dns.A)]).addErrback(errorHandler)
> > time.sleep(5)  ## give it a time for shitz and giggles
> > print d
> > print d.result
>
> I *think* you're missing something about Twisted. You should start the reactor
> to have something, and *never* use time.sleep inside a Twisted program.
>
> You could start with reading the documentation here:
> http://twistedmatrix.com/projects/core/documentation/howto/async.html.
>
> --
> Thomas
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Mar 21 08:58:07 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Mar 2007 08:58:07 -0400
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
	<20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
	<45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
Message-ID: <1174481887.29452.12.camel@localhost.localdomain>

On Wed, 2007-03-21 at 05:31 -0700, Sean Leach wrote:
> Yes - I know, this was a small example program to show the problem I
> was seeing.  And I have read over all of the documentation, including
> the Twisted.names source.

That example program is always going to fail without reactor.run(),
though, so it doesn't really serve its purpose if you've found a real
bug.




From exarkun at divmod.com  Wed Mar 21 09:36:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Mar 2007 08:36:41 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
Message-ID: <20070321133641.18920.2121663165.divmod.quotient.4525@ohm>

On Wed, 21 Mar 2007 05:31:08 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Yes - I know, this was a small example program to show the problem I
>was seeing.  And I have read over all of the documentation, including
>the Twisted.names source.
>

The example I gave might have been a bit confusing.  I was using a shell
that has the reactor running already, so I didn't need to start it.  The
equivalent as a normal Twisted program would be something like:

  #!/usr/bin/python2.4
  import time
  from twisted.names import dns, client, _version
  from twisted.internet import reactor
  def errorHandler(error):
      print str(error)
  def gotMessage(message):
      print message.answers
      print message.additional
      print message.authority
  r = client.Resolver(servers=[('198.41.0.4', 53)])
  d = r.queryUDP([
      dns.Query('google.com', dns.IN, dns.A)])
  d.addErrback(errorHandler)
  d.addCallback(gotMessage)
  reactor.run()

Jean-Paul



From twisted-python at 2xlp.com  Wed Mar 21 11:32:53 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 11:32:53 -0400
Subject: [Twisted-Python] suggestion for tracking down cause of 2 bugs
	sought: possibly threads / defer.DeferredSemaphore ?
Message-ID: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>


I've got 2 bugs in a twisted app that I'm trying to narrow in on.

Overview of the app:
	A twisted service connects to a db and requests about 500 web pages  
to download and analyze.
	The service than uses defer.DeferredSemaphore service to handle  
dispatching each request to a thread via deferToThread .
		defer.DeferredSemaphore( tokens= MAX_DOWNLOADERS )
		reactor.suggestThreadPoolSize( MAX_DOWNLOADERS + 1 )
	Each thread runs a python script that is not written in Twisted and  
has a lot of blocking.

And to pre-empt many comments that will inevitably pop up: It would  
be great to convert all the code to twisted , but 90% of the code +  
underlying modules are used by command line maintenance routines that  
were already in place.  I just don't have the time or resources to  
rewrite it all in twisted.  One day I'd love to have the funding to  
hire someone to manage them, but I just don't have that time myself.


Overview of the bugs:
	1)
		The query for figuring out which pages to download can take quite  
some time , so I run the getNextDownloads routine in a new thread ,  
so the pool always remains full.
		It works perfect, except when the number of items queued up to  
defer.DeferredSemaphore reaches ~ 1000.
		After ~1000, I seem to only be running with 1-2 semaphores in place  
not 15

		Question:
			Can anyone suggest a way to test this to see where the error is?
			Off the top of my head, the following seem plausible:
				a- hitting 1000 just breaks something in  
defer.DeferredSemaphore  .  the module is listed as unstable, so I'm  
guessing this could be the cause.
				b- the defer.DeferredSemaphore connection is just coincidental --  
its really an issue with threads locking up
				c- something entirely different
			Unfortunately, I'm at a loss on trying to figure out whats going on.

	2)
		I'm experiencing an obscene amount of process growth.  I'm fairly  
certain that its from constant errors in urllib2 , which has been  
nothing of a nightmare with countless known bugs and patches  
( downloading takes place via Mechanize , which is wrapped via  
urllib2 ), and makes me consider just wrapping wget or curl.   but  
this could very well be threading related.
		
		Question:
			Is there any way to profile memory usage by twisted in a granular  
fashion ?  I'd like to figure out where this memory usage is ( it  
grows steadily to ~1.7gb after 8 hours ).

Thanks,

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
| SyndiClick.com
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      FindMeOn.com - The cure for Multiple Web Personality Disorder
|      Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      RoadSound.com - Tools For Bands, Stuff For Fans
|      Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -





From itamar at itamarst.org  Wed Mar 21 11:59:56 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Mar 2007 11:59:56 -0400
Subject: [Twisted-Python] Twistd memory usage
In-Reply-To: <45FFF0F0.6060907@sensisoft.com>
References: <45FFF0F0.6060907@sensisoft.com>
Message-ID: <1174492796.29452.21.camel@localhost.localdomain>

On Tue, 2007-03-20 at 15:34 +0100, Jarek Zgoda wrote:
> I have an application, ran as twistd plugin. If I run it as daemon,
> twistd consumes all available memory (of 4GB available), then after few
> seconds of swapping twistd is killed by kernel's OOM killer. I cann't
> reproduce this when I run this application in no-daemon mode (twistd
> -n), the memory footprint is constant and does not exceed 150MB. Is this
> normal behaviour?

That is not normal behavior. Maybe you could expand a bit on what the
program does, what the logs say, etc.?




From twisted-python at 2xlp.com  Wed Mar 21 15:34:02 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 15:34:02 -0400
Subject: [Twisted-Python] suggestion for tracking down cause of 2 bugs
	sought: possibly threads / defer.DeferredSemaphore ?
In-Reply-To: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
References: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
Message-ID: <D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>


On Mar 21, 2007, at 11:32 AM, Jonathan Vanasco wrote:


> 	2)
> 		I'm experiencing an obscene amount of process growth.  I'm fairly  
> certain that its from constant errors in urllib2 , which has been  
> nothing of a nightmare with countless known bugs and patches  
> ( downloading takes place via Mechanize , which is wrapped via  
> urllib2 ), and makes me consider just wrapping wget or curl.   but  
> this could very well be threading related.
> 		
> 		Question:
> 			Is there any way to profile memory usage by twisted in a  
> granular fashion ?  I'd like to figure out where this memory usage  
> is ( it grows steadily to ~1.7gb after 8 hours ).
>

I just came across this:
	From: 	  mwl at point45.com
	Subject: 	Re: [Twisted-Python] questions about large db queries and  
memory leak
	Date: 	February 8, 2007 8:28:59 AM EST
	...
	If you're not running Python >= 2.5.0 this might be relevant:
	http://evanjones.ca/python-memory.html


i was on 2.4, upping to 2.5 solved that issue.  incremental growth  
of .2mb / thread instance ( which ate 1.7gb of ram in an hour or  
so ) , has been replaced by a steady 18-25mb daemon

my machine is responsive again.

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
| SyndiClick.com
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      FindMeOn.com - The cure for Multiple Web Personality Disorder
|      Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      RoadSound.com - Tools For Bands, Stuff For Fans
|      Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -





From matusis at matusis.com  Wed Mar 21 17:01:27 2007
From: matusis at matusis.com (Alec Matusis)
Date: Wed, 21 Mar 2007 14:01:27 -0700
Subject: [Twisted-Python] suggestion for tracking down cause of 2
	bugs	sought: possibly threads / defer.DeferredSemaphore ?
In-Reply-To: <D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>
References: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
	<D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>
Message-ID: <00e201c76bfc$188ddf30$49a99d90$@com>

> > Is there any way to profile memory usage by twisted
> in a
> > granular fashion ?  I'd like to figure out where this memory usage
> > is ( it grows steadily to ~1.7gb after 8 hours ).

We found twisted manhole very useful for this. Inspect all your objects via
manhole on the production server.
Also, in one instance, we had to force python garbage collector to collect
every 10 min: for some reason: without this, the RSS size just grew and
grew...

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jonathan Vanasco
> Sent: Wednesday, March 21, 2007 12:34 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] suggestion for tracking down cause of 2
> bugs sought: possibly threads / defer.DeferredSemaphore ?
> 
> 
> On Mar 21, 2007, at 11:32 AM, Jonathan Vanasco wrote:
> 
> 
> > 	2)
> > 		I'm experiencing an obscene amount of process growth.  I'm
> fairly
> > certain that its from constant errors in urllib2 , which has been
> > nothing of a nightmare with countless known bugs and patches
> > ( downloading takes place via Mechanize , which is wrapped via
> > urllib2 ), and makes me consider just wrapping wget or curl.   but
> > this could very well be threading related.
> >
> > 		Question:
> > 			Is there any way to profile memory usage by twisted
> in a
> > granular fashion ?  I'd like to figure out where this memory usage
> > is ( it grows steadily to ~1.7gb after 8 hours ).
> >
> 
> I just came across this:
> 	From: 	  mwl at point45.com
> 	Subject: 	Re: [Twisted-Python] questions about large db
queries
> and
> memory leak
> 	Date: 	February 8, 2007 8:28:59 AM EST
> 	...
> 	If you're not running Python >= 2.5.0 this might be relevant:
> 	http://evanjones.ca/python-memory.html
> 
> 
> i was on 2.4, upping to 2.5 solved that issue.  incremental growth
> of .2mb / thread instance ( which ate 1.7gb of ram in an hour or
> so ) , has been replaced by a steady 18-25mb daemon
> 
> my machine is responsive again.
> 
> // Jonathan Vanasco
> 
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> | SyndiClick.com
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> |      FindMeOn.com - The cure for Multiple Web Personality Disorder
> |      Web Identity Management and 3D Social Networking
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> |      RoadSound.com - Tools For Bands, Stuff For Fans
> |      Collaborative Online Management And Syndication Tools
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted-python at 2xlp.com  Wed Mar 21 19:02:11 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 19:02:11 -0400
Subject: [Twisted-Python] hardcoded max in threadpool or connection pool ?
Message-ID: <C9354EC0-90B3-4C59-AA1B-8B20940944B1@2xlp.com>


forgive my ignorance this week - i'm rusty on twisted.

I seem to be hitting a limit on threads / db connection ( not sure  
which one , as db could block connection ) at 11

The only code i have influencing the sizes are as follows:

=======
class MY_dbConnectionPool( adbapi.ConnectionPool ):
	def __init__( self ,):
		adbapi.ConnectionPool.__init__( self, 'psycopg2' ,
			host="localhost",
			database="xxxxx",
			user="xxxxx",
			password="xxxxx",
			cp_min= 16,
			cp_max= 16
		)
=======
reactor.suggestThreadPoolSize( 17 )
reactor.run()
=======

i never see more than 11 connections - in fact, i always see 11  
connections -- 10 for the db the thread pool, and 1 for the db in the  
main

i'm fairly sure if there's any error here it's going to be my fault  
-- can someone point me in the right direction ?



From vince6 at offshore.ai  Thu Mar 22 03:17:38 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Thu, 22 Mar 2007 03:17:38 -0400
Subject: [Twisted-Python] Twisted friendly hosting services?
Message-ID: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>


I am working on an application that runs using twisted.web.  I want to
host it on a machine with plenty of bandwidth as cheaply as possible.  

Is there a hosting service that uses Twisted.web so that I can just add
my resource to the namespace?

Or will I have to get a "virtual dedicated server" or a real "dedicated
server"?  If so, does anyone know a virtual one that uses Ubuntu?

Thanks,

   -- Vince





From nico at tekNico.net  Thu Mar 22 04:33:51 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 22 Mar 2007 09:33:51 +0100
Subject: [Twisted-Python] Re: Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <ettf17$lm8$1@sea.gmane.org>

Vincent Cate wrote:
> I am working on an application that runs using twisted.web.  I want to
> host it on a machine with plenty of bandwidth as cheaply as possible.  
> 
> Is there a hosting service that uses Twisted.web so that I can just add
> my resource to the namespace?

Don't know of any.


> Or will I have to get a "virtual dedicated server" or a real "dedicated
> server"?  If so, does anyone know a virtual one that uses Ubuntu?

I'd use either Slicehost or Linode virtual servers (add .com to both).


-- 
Nicola Larosa - http://www.tekNico.net/

Statistically, if you want to avoid failure, it would seem like the most
important thing is to quit your day job. Most founders of failed startups
don't quit their day jobs, and most founders of successful ones do.
If startup failure were a disease, the CDC would be issuing bulletins
warning people to avoid day jobs. -- Paul Graham, October 2006




From jarek.zgoda at sensisoft.com  Thu Mar 22 04:37:57 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 22 Mar 2007 09:37:57 +0100
Subject: [Twisted-Python] Twistd memory usage
In-Reply-To: <1174492796.29452.21.camel@localhost.localdomain>
References: <45FFF0F0.6060907@sensisoft.com>
	<1174492796.29452.21.camel@localhost.localdomain>
Message-ID: <46024065.5090404@sensisoft.com>

Itamar Shtull-Trauring napisa?(a):

>> I have an application, ran as twistd plugin. If I run it as daemon,
>> twistd consumes all available memory (of 4GB available), then after few
>> seconds of swapping twistd is killed by kernel's OOM killer. I cann't
>> reproduce this when I run this application in no-daemon mode (twistd
>> -n), the memory footprint is constant and does not exceed 150MB. Is this
>> normal behaviour?
> 
> That is not normal behavior. Maybe you could expand a bit on what the
> program does, what the logs say, etc.?

The application is search/indexing server using PyLucene. It is done as
twisted web resource (rpy). Due to PyLucene limitation, the application
must use "special" thread class (PyLucene.PythonThread) to access index
content. This thread is started in reactor's after startup event
trigger. There is one really large datastructure in the application (the
Queue.Queue object holding dictionaries of documents to be indexed).

As the memory consumption grows in the time of adding documents to
queue, I suspect some problem with garbage collector and the fact that I
observe this behaviour only in daemonized application adds only more
confusion.

There's nothing special in logs, neither twistd or system. Of course,
OOM killer activation is reflected in /var/log/messages, but with no
apparent clues for possible causes. Twistd did not log anything (even
its death).

For now, twistd is run in nodaemon mode (-ny), but I know it's suboptimal...

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From Marcin.Kasperski at softax.com.pl  Thu Mar 22 10:58:08 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 22 Mar 2007 15:58:08 +0100
Subject: [Twisted-Python] Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <1174575488.29223.17.camel@pitagoras>

> Or will I have to get a "virtual dedicated server" or a real dedicated
> server"?  If so, does anyone know a virtual one that uses Ubuntu?

I am using VPS on xenplanet.com for similar purpose
(comparing to linode it is a bit cheaper, and grants *far* more disk
space, and is significantly less polished - less support, emails to
admin in case of trouble etc). So far (about a year) I am happy.







From pico at trispen.com  Thu Mar 22 14:08:50 2007
From: pico at trispen.com (pico)
Date: Thu, 22 Mar 2007 20:08:50 +0200
Subject: [Twisted-Python] Using twisted.conch
Message-ID: <4602C632.9030904@trispen.com>

Hi all.

I'm struggling a bit with twisted.conch.
I've read the howto at 
http://twistedmatrix.com/projects/conch/documentation/howto/conch_client.html.
I can understand this example fine.
For a simple application, it works fine to subclass SSHChannel and 
implement all the code in that classes methods.
However I would like to be able to implement something as follows:

class SSHWrapper:
    def connect(self,hostname,username,password):
       #Create SshTransport object
    def runCommand(self,command)
       #Use SshChannel object to run command, return a deferred
    def disconnect(self):
       #Cleanup

The problem is that, due to the ClientFactory creating instances of the 
relevant objects for you (SSHClientTransport,SSHUserAuthClient,etc), you 
are left without a reference to the SSHChannel object,required to run 
the command.

Is there any way to get the SSHChannel object from the 
SSHClientTransport instance.
Any advice with this matter would be appreciated.

Thanks
Pico



From Benjamin.Rutt at gs.com  Thu Mar 22 14:48:59 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 14:48:59 -0400
Subject: [Twisted-Python] thread pool question
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>

From
http://twistedmatrix.com/projects/core/documentation/howto/threading.htm
l:

I copied the code below and ran it as:

	$ cat twisted-threadpool.py 
	#!/usr/bin/env python

	from twisted.internet import reactor

	def aSillyBlockingMethod(x):
	    import time
	    time.sleep(2)
	    print x

	# run method in thread
	reactor.callInThread(aSillyBlockingMethod, "2 seconds have
passed")

	$ ./twisted-threadpool.py 
	2 seconds have passed

But I note that the program never stops.  I infer that least one thread
is getting set as a non-daemon thread, according to python's thread
rules on program termination:

  `thread.setDaemon(daemonic)'
     Set the thread's daemon flag to the Boolean value DAEMONIC.  This
     must be called before `start()' is called.

     The initial value is inherited from the creating thread.

     The entire Python program exits when no active non-daemon threads
     are left.

Is there a way to set this program up such that the program will exit
when all of the threads registered via callInThread, and the main
thread, have exited?

Thanks,
-- 
Benjamin Rutt


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070322/8defeae6/attachment.htm 

From manlio_perillo at libero.it  Thu Mar 22 15:09:07 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Mar 2007 20:09:07 +0100
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <4602D453.7020300@libero.it>

Rutt, Benjamin ha scritto:
>  From 
> _http://twistedmatrix.com/projects/core/documentation/howto/threading.html_: 
> 
> 
> I copied the code below and ran it as:
> 
>       $ cat twisted-threadpool.py
>       #!/usr/bin/env python
> 
>       from twisted.internet import reactor
> 
>       def aSillyBlockingMethod(x):
>           import time
>           time.sleep(2)
>           print x
> 
>       # run method in thread
>       reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
> 
>       $ ./twisted-threadpool.py
>       2 seconds have passed
> 
> But I note that the program never stops. 

You should use deferToThread.

from twisted.internet import threads

d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(reactor.stop)



Regards  Manlio Perillo



From Benjamin.Rutt at gs.com  Thu Mar 22 15:35:19 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 15:35:19 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <4602D453.7020300@libero.it>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602D453.7020300@libero.it>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>

Thanks but that runs forever for me too (twisted 2.0.0).

Does this stop for you?

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet import threads

def aSillyBlockingMethod(x):
    import time
    time.sleep(2)
    print x

d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(reactor.stop)



From manlio_perillo at libero.it  Thu Mar 22 16:40:37 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Mar 2007 21:40:37 +0100
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>	<4602D453.7020300@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <4602E9C5.1060406@libero.it>

Rutt, Benjamin ha scritto:
> Thanks but that runs forever for me too (twisted 2.0.0).
> 
> Does this stop for you?
> 
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> 
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> 
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(reactor.stop)
> 

Sorry.
It should be
d.addBoth(lambda _: reactor.stop())


Regards   Manlio Perillo



From listbox at evernex.com  Thu Mar 22 17:05:17 2007
From: listbox at evernex.com (listbox at evernex.com)
Date: Thu, 22 Mar 2007 14:05:17 -0700
Subject: [Twisted-Python] Using twisted.conch
In-Reply-To: <4602C632.9030904@trispen.com>
References: <4602C632.9030904@trispen.com>
Message-ID: <4602EF8D.7010805@evernex.com>

pico wrote:
> The problem is that, due to the ClientFactory creating instances of 
> the relevant objects for you 
> (SSHClientTransport,SSHUserAuthClient,etc), you are left without a 
> reference to the SSHChannel object,required to run the command.
>
> Is there any way to get the SSHChannel object from the 
> SSHClientTransport instance.
> Any advice with this matter would be appreciated.

I confess to not fully understanding your question, but perhaps a (sort 
of) singleton object might do it?  In the ClientFactory (or whereever 
the SSHChannel is created), instantiate the singleton object and then 
assign the SSHChannel to a variable tacked onto it.  You can assign 
'self' to such a variable too. Then every time you instantiate that 
singleton object again, it has the reference already in it.

I use the 'Borg' class to do this and I've used it to store references 
to a netstringReceiver in my own Twisted code.

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66531




From Benjamin.Rutt at gs.com  Thu Mar 22 18:03:29 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 18:03:29 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <4602E9C5.1060406@libero.it>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>	<4602D453.7020300@libero.it><C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>

Still isn't working for me:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet import threads
def aSillyBlockingMethod(x):
    import time
    time.sleep(2)
    print x
d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(lambda _: reactor.stop())

Does this work for you? 



From mithrandi-twisted-python at mithrandi.za.net  Thu Mar 22 18:42:46 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 23 Mar 2007 00:42:46 +0200
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070322224246.GA27024@mithrandi.za.net>

* Rutt, Benjamin <Benjamin.Rutt at gs.com> [2007-03-22 18:03:29 -0400]:

> Still isn't working for me:
> 
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(lambda _: reactor.stop())

reactor.run()

With the above line of code added to the end, this code behaves as
expected for me:

mithrandi at elvardein:~> time python foo.py
2 seconds have passed
python foo.py  0.27s user 0.06s system 14% cpu 2.385 total

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070323/9f372434/attachment.pgp 

From ldanielburr at mac.com  Thu Mar 22 18:47:33 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 22 Mar 2007 17:47:33 -0500
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602D453.7020300@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>

On Thu, 22 Mar 2007 17:03:29 -0500, Rutt, Benjamin <Benjamin.Rutt at gs.com>  
wrote:

> Still isn't working for me:
>
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(lambda _: reactor.stop())
>
> Does this work for you?
>

You have to run the reactor, or nothing will ever start.

Try adding reactor.run()

Hope this helps,

L. Daniel Burr



From dave at krondo.com  Thu Mar 22 21:42:08 2007
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 22 Mar 2007 18:42:08 -0700
Subject: [Twisted-Python] Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <46033070.2060006@krondo.com>

Vincent Cate wrote:
> I am working on an application that runs using twisted.web.  I want to
> host it on a machine with plenty of bandwidth as cheaply as possible.  
>
> Is there a hosting service that uses Twisted.web so that I can just add
> my resource to the namespace?
>   
You might check out webfaction.com. They do have a twisted.web
option, though I haven't used it. They also let you just set up your
own twisted server however you like.

dave




From Benjamin.Rutt at gs.com  Fri Mar 23 09:33:09 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 23 Mar 2007 09:33:09 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com><4602D453.7020300@libero.it><C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com><4602E9C5.1060406@libero.it><C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
	<op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6643@gsmbnmp04es.firmwide.corp.gs.com>

Thanks Tristan and Daniel, it works for me too now.



From exarkun at twistedmatrix.com  Sun Mar 25 00:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Mar 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1174795502.05.519595432@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-18 through 2007-03-25
Bugs opened: 11    Bugs closed: 9  Total open bugs: 881 (+2)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -1          |Conch:               +0  
|Enhancement:  +3  |High:     -3          |Core:                +2  
|Task:         +2  |Normal:   +4          |Mail:                -1  
                   |Low:      +2          |Pydoctor:            +1  
                                          |Release Management:  +0  
                                          |Web:                 -1  
                                          |Web2:                +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2528] t.conch.ssh.userauth.ssh_USERAUTH_REQUEST creates a Deferred and doesn't return it (opened by jml) (CLOSED, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2528

[#2530] Remove some of the warnings of process-docs (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2530

                    ===== Normal =====
[#2529] AMP streaming protocol extension (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2529

[#2531] twisted.conch.stdio.runWithProtocol fails in Eclipse/pyDev console (opened by neurophyre) (CLOSED, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2531

[#2532] How is a source listing generated (opened by duncanwebb) (CLOSED, fixed)
    task            pydoctor   http://twistedmatrix.com/trac/ticket/2532

[#2533] Pydoctor SVN and TortoiseSVN don't work (opened by duncanwebb)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2533

[#2535] Allow Twisted to work without SIGCHLD on posix (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2535

[#2536] Deprecated TimeoutQueue so we can remove it (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2536

[#2538] twisted.web2.client.http has no unittests for pipelining support (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2538

                    ===== Low =====
[#2534] investigate event dispatch optimization (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2534

[#2537] doc/current/api source links point to SVN HEAD (opened by mwh)
    defect          release management http://twistedmatrix.com/trac/ticket/2537



Closed Bugs
______________________
                    ===== Highest =====
[#2528] t.conch.ssh.userauth.ssh_USERAUTH_REQUEST creates a Deferred and doesn't return it (opened by jml, closed by jml, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2528

[#2530] Remove some of the warnings of process-docs (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2530

[#2521] SMTP authentication tracebacks when receiving an empty line (opened by washort, closed by washort, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2521

                    ===== High =====
[#1272] selectreactor's addReader unexpectedly assumes a logPrefix attr (opened by marienz, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1272

[#1366] TwistedQuotes documentation references external source files (opened by exarkun, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1366

[#927 ] Add description of Twisted Web to its project site (opened by hypatia, closed by oubiwann, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/927

                    ===== Normal =====
[#1126] Package Twisted using Eggs/EasyInstall (opened by glyph, closed by therve, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1126

[#2531] twisted.conch.stdio.runWithProtocol fails in Eclipse/pyDev console (opened by neurophyre, closed by glyph, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2531

[#2532] How is a source listing generated (opened by duncanwebb, closed by duncanwebb, fixed)
    task            pydoctor   http://twistedmatrix.com/trac/ticket/2532





From forsberg at cendio.se  Mon Mar 26 04:29:23 2007
From: forsberg at cendio.se (Erik Forsberg)
Date: Mon, 26 Mar 2007 10:29:23 +0200
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
Message-ID: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>

Hi!

In TwistedCore/setup.py, I find that python 2.3 is required for
Twisted. I'd like to use Twisted for a project that currently requires
only Python 2.2, which raises the question - which parts of Twisted
requires 2.3, and how much of it can I run on Python 2.2?

On the same matter - are there any plans on when to stop supporting
Python 2.3, Python 2.4, etc? 

Thanks,
\EF
-- 
Erik Forsberg                OpenSource-based Thin Client Technology
Systems Analyst/Developer    Phone: +46-13-21 46 00    
Cendio AB    	             Web: http://www.cendio.com
		             





From radix at twistedmatrix.com  Mon Mar 26 08:07:10 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 26 Mar 2007 08:07:10 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
Message-ID: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>

On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
> In TwistedCore/setup.py, I find that python 2.3 is required for
> Twisted. I'd like to use Twisted for a project that currently requires
> only Python 2.2, which raises the question - which parts of Twisted
> requires 2.3, and how much of it can I run on Python 2.2?

Dunno. However, are you sure the library you're using won't run on
anything above Python 2.2? If so, is it a proprietary thing that you
can't change?

> On the same matter - are there any plans on when to stop supporting
> Python 2.3, Python 2.4, etc?

I think we've generally maintained a 5-year support for Python releases.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From itamar at itamarst.org  Mon Mar 26 09:03:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Mar 2007 09:03:34 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <1174914214.1920.11.camel@localhost.localdomain>

On Mon, 2007-03-26 at 08:07 -0400, Christopher Armstrong wrote:

> I think we've generally maintained a 5-year support for Python releases.

Slightly less than that; Python 2.2 was supported for approximately 4.25
years.




From forsberg at cendio.se  Mon Mar 26 10:18:28 2007
From: forsberg at cendio.se (Erik Forsberg)
Date: Mon, 26 Mar 2007 16:18:28 +0200
Subject: [Twisted-Python] Re: Can I still run (most of) Twisted on Python
	2.2?
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <uoslbs2imj.fsf@impertigo.lkpg.cendio.se>

"Christopher Armstrong" writes:

> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>> In TwistedCore/setup.py, I find that python 2.3 is required for
>> Twisted. I'd like to use Twisted for a project that currently requires
>> only Python 2.2, which raises the question - which parts of Twisted
>> requires 2.3, and how much of it can I run on Python 2.2?
>
> Dunno. However, are you sure the library you're using won't run on
> anything above Python 2.2? If so, is it a proprietary thing that you
> can't change?

The project I'm talking about is ThinLinc which is the main product of
the company I work for, and so far, we've been able to say that "it
runs on any Linux that is equal to or newer than RedHat Linux 7.3",
which is something of a strength. 

We're now considering using twisted for parts of the product, and if
possible, we'd like to stay on the old requirements.

OTOH, requiring Python 2.3 is probably not a major problem. It's not
like we have any customers doing new installations on RHL7.3 :-).

I made a small investigation of the python version available on some
more or less aged Linux distributions. If someone's interested, here
the list:

Suse Linux Enterprise Linux 9 (SLES9): Python 2.3.3
Suse Linux Enterprise Desktop 10 (SLED10): Python 2.4.2
CentOS4 (should be the same as RHEL4): Python 2.3.4
Ubuntu 4.10 (Warty, oldest Ubuntu available on http://packages.ubuntu.com): 2.3.4 available.
Debian stable/sarge: 2.3.5 and 2.4.1 available.
Red Hat Linux 9: Python 2.2.2

So, in practice, there's very few distributions that are relevant for
use with ThinLinc (it's a terminal server solution for Linux, so a
modern desktop is required) that don't have Python 2.3.

Still, it would be interesting to know what parts of twisted requires
2.3. I guess that if there's nobody that knows, I'll just have to live
with the 2.3 requirement, and testrun on Python 2.2 when I'm done
:-). 

>> On the same matter - are there any plans on when to stop supporting
>> Python 2.3, Python 2.4, etc?
>
> I think we've generally maintained a 5-year support for Python
> releases.

Sounds good. 

Thanks,
\EF
-- 
Erik Forsberg                OpenSource-based Thin Client Technology
Systems Analyst/Developer    Phone: +46-13-21 46 00    
Cendio AB    	             Web: http://www.cendio.com
		             




From itamar at itamarst.org  Mon Mar 26 11:18:26 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Mar 2007 11:18:26 -0400
Subject: [Twisted-Python] Re: Can I still run (most of) Twisted on
	Python 2.2?
In-Reply-To: <uoslbs2imj.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
	<uoslbs2imj.fsf@impertigo.lkpg.cendio.se>
Message-ID: <1174922307.1920.17.camel@localhost.localdomain>

On Mon, 2007-03-26 at 16:18 +0200, Erik Forsberg wrote:

> The project I'm talking about is ThinLinc which is the main product of
> the company I work for, and so far, we've been able to say that "it
> runs on any Linux that is equal to or newer than RedHat Linux 7.3",
> which is something of a strength. 

At work (where we still have some machines with Redhat 7.3) we solve
this by installing our own version of Python in a non-clashing
namespace. It's very easy to do, and you could make it completely
transparent to your users (a few more files in the RPM).

Alternatively, you could probably with a little work either add relevant
bugfixes to older version of Twisted, or make the parts of Twisted you
use work with Python 2.2.




From palacenataku at yahoo.com  Mon Mar 26 14:50:45 2007
From: palacenataku at yahoo.com (Rob Smith)
Date: Mon, 26 Mar 2007 11:50:45 -0700 (PDT)
Subject: [Twisted-Python] problem with a tutorial
Message-ID: <4061.97365.qm@web58408.mail.re3.yahoo.com>

I'm hoping this is just a simple configuration problem
I have.

I followed the tutorial for Using the Twisted
Application Framework and created the .tac file shown
below:

from twisted.application import internet, service
from qotdfactory import QOTDFactory

port = 7001
factory = QOTDFactory()

application = service.Application("qotd")
echoService = internet.TCPServer(port, factory)
echoService.setServiceParent(application)

As soon as I run it with twistd on my winXP laptop it
fails with an Import error "no module named
qotdfactory". qotdfactory.py exists in the same
directory as the .tac file.

If I take the code in the .py file and put it directly
in the .tac file, the program runs without trouble.
I've tried adding the directory both files are in to
the windows path variable, and tried adding a
__init__.py file to the directory. Neither made a
difference.

Any thoughts on what I'm missing?

Thanks,
Rob Smith


 
____________________________________________________________________________________
Sucker-punch spam with award-winning protection. 
Try the free Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/features_spam.html



From ppergame at gmail.com  Mon Mar 26 18:06:29 2007
From: ppergame at gmail.com (Pavel Pergamenshchik)
Date: Mon, 26 Mar 2007 15:06:29 -0700
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
Message-ID: <4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>

On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>
> Hi!
>
> In TwistedCore/setup.py, I find that python 2.3 is required for
> Twisted. I'd like to use Twisted for a project that currently requires
> only Python 2.2, which raises the question - which parts of Twisted
> requires 2.3, and how much of it can I run on Python 2.2?


Twisted has a test suite. Run that with Python 2.2 and see which tests fail.

(something like "python22 bin/trial twisted", from the directory where
Twisted was unpacked)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070326/d1cee12a/attachment.htm 

From foom at fuhm.net  Tue Mar 27 00:54:18 2007
From: foom at fuhm.net (James Y Knight)
Date: Tue, 27 Mar 2007 00:54:18 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>
Message-ID: <37867445-20DE-4B0F-86BE-B266DA7B485E@fuhm.net>


On Mar 26, 2007, at 6:06 PM, Pavel Pergamenshchik wrote:

> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>> Hi!
>>
>> In TwistedCore/setup.py, I find that python 2.3 is required for
>> Twisted. I'd like to use Twisted for a project that currently  
>> requires
>> only Python 2.2, which raises the question - which parts of Twisted
>> requires 2.3, and how much of it can I run on Python 2.2?
>
> Twisted has a test suite. Run that with Python 2.2 and see which  
> tests fail.
>
> (something like "python22 bin/trial twisted", from the directory  
> where Twisted was unpacked)

It's not going to work at all. I suspect it won't even come close to  
importing. Check the commit logs for the removal of python 2.2  
support -- there was a lot of compatibility cruft, including  
backports of a few python modules. You're better off just using the  
last version of Twisted with Python 2.2 support than trying to re-add  
it to current Twisted.

James





From jml at mumak.net  Tue Mar 27 01:06:45 2007
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 27 Mar 2007 15:06:45 +1000
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <d06a5cd30703262206h3b5d34bqe2156a07dde2cbdf@mail.gmail.com>

On 3/26/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
> > On the same matter - are there any plans on when to stop supporting
> > Python 2.3, Python 2.4, etc?
>
> I think we've generally maintained a 5-year support for Python releases.
>

I was under the impression that we supported the Python in debian
stable, and anything newer.

Whatever the answer, it would be good to have it written down as a
policy. I've filed a bug for this:
http://twistedmatrix.com/trac/ticket/2541

cheers,
jml



From twisted-python at 2xlp.com  Tue Mar 27 12:03:44 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 27 Mar 2007 12:03:44 -0400
Subject: [Twisted-Python] 2 threads questions
Message-ID: <50D5469E-138A-4E00-A084-B7C1D8370137@2xlp.com>

i have a threaded daemon which occasionally hangs because of some  
stalling in the threadpool

a-	whats the best way to shut it down ?
	attempts to ctl-c / kill it seem to be interpreted by a random  
thread.  the only way to kill it is a kill -9
	the python threading docs said that was the expected behavior, and  
that it could be avoided by using signal.
	I figured twisted might have something in it already to handle  
shutting down a reactor with active threads.  the threads docs for  
twisted are a little light.

b-	i'm trying to figure out the cause of the stalling in the threadpool
	from the status messages i'm printing, I'm seeing the main python  
code firing fine, but the threadpool is just stuck - nothing  
dispatched to it seems to clean up
	i wonder if it might be related to a few tickets i've seen
		http://twistedmatrix.com/trac/ticket/2448
		http://trac.edgewall.org/ticket/3923

	i'm trying to figure out a way to reliably test this.  i've got a  
ssh manhole running via conch ( and instructions from the twisted book )
	can anyone suggest a good way to test and try to debug what is going  
on?  i'm extremely uninformed when it comes to python threads.




From exarkun at divmod.com  Tue Mar 27 12:30:30 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Mar 2007 11:30:30 -0500
Subject: [Twisted-Python] 2 threads questions
In-Reply-To: <50D5469E-138A-4E00-A084-B7C1D8370137@2xlp.com>
Message-ID: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>

On Tue, 27 Mar 2007 12:03:44 -0400, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
>i have a threaded daemon which occasionally hangs because of some  stalling 
>in the threadpool
>
>a-      whats the best way to shut it down ?
>         attempts to ctl-c / kill it seem to be interpreted by a random 
>thread.  the only way to kill it is a kill -9
>         the python threading docs said that was the expected behavior, and 
>that it could be avoided by using signal.
>         I figured twisted might have something in it already to handle 
>shutting down a reactor with active threads.  the threads docs for  twisted 
>are a little light.
>
>b-      i'm trying to figure out the cause of the stalling in the threadpool
>         from the status messages i'm printing, I'm seeing the main python 
>code firing fine, but the threadpool is just stuck - nothing  dispatched to 
>it seems to clean up
>         i wonder if it might be related to a few tickets i've seen
>                 http://twistedmatrix.com/trac/ticket/2448
>                 http://trac.edgewall.org/ticket/3923
>
>         i'm trying to figure out a way to reliably test this.  i've got a 
>ssh manhole running via conch ( and instructions from the twisted book )
>         can anyone suggest a good way to test and try to debug what is going 
>on?  i'm extremely uninformed when it comes to python threads.
>

Python 2.5 includes sys._current_frames() which returns a mapping from thread
identifiers to the frame objects which you might be able to use to learn what
is going on.  You can call this from your manhole prompt when you notice the
system to have hung.

Jean-Paul



From luc.stepniewski at adelux.fr  Wed Mar 28 09:20:38 2007
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Wed, 28 Mar 2007 15:20:38 +0200
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <4061.97365.qm@web58408.mail.re3.yahoo.com>
References: <4061.97365.qm@web58408.mail.re3.yahoo.com>
Message-ID: <200703281520.38226.luc.stepniewski@adelux.fr>

On Monday 26 March 2007 20:50, Rob Smith wrote:
> I'm hoping this is just a simple configuration problem
> I have.
> I followed the tutorial for Using the Twisted
> Application Framework and created the .tac file shown
> below:
>
> from twisted.application import internet, service
> from qotdfactory import QOTDFactory

I didn't find in the docs where this tutorial resides, but that means that you 
need a file named qotdfactory.py in your PYTHONPATH (or in the current 
directory). Isn't there any reference to this file in that tutorial?


-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A




From palacenataku at yahoo.com  Wed Mar 28 10:33:10 2007
From: palacenataku at yahoo.com (Rob Smith)
Date: Wed, 28 Mar 2007 07:33:10 -0700 (PDT)
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <200703281520.38226.luc.stepniewski@adelux.fr>
Message-ID: <411122.86895.qm@web58405.mail.re3.yahoo.com>


> 
> I didn't find in the docs where this tutorial
> resides, but that means that you 
> need a file named qotdfactory.py in your PYTHONPATH
> (or in the current 
> directory). Isn't there any reference to this file
> in that tutorial?
> 

It's in the current directory, but I don't think I've
touched the PYTHONPATH. There isn't anything
mentioning that in the tutorial I was looking at
(which was Using the Twisted Application Framework).

However, it is mentioned in a few other places. It
seems I was just being too selective of what sections
to read, and thus didn't understand the directory
structure these files required.

Thanks, for the reply! This should fix my problem.



 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 



From arkanes at gmail.com  Wed Mar 28 12:06:21 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Wed, 28 Mar 2007 11:06:21 -0500
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <411122.86895.qm@web58405.mail.re3.yahoo.com>
References: <200703281520.38226.luc.stepniewski@adelux.fr>
	<411122.86895.qm@web58405.mail.re3.yahoo.com>
Message-ID: <4866bea60703280906u590d9cbdt59e4afafac84884d@mail.gmail.com>

On 3/28/07, Rob Smith <palacenataku at yahoo.com> wrote:
>
> >
> > I didn't find in the docs where this tutorial
> > resides, but that means that you
> > need a file named qotdfactory.py in your PYTHONPATH
> > (or in the current
> > directory). Isn't there any reference to this file
> > in that tutorial?
> >
>
> It's in the current directory, but I don't think I've
> touched the PYTHONPATH. There isn't anything
> mentioning that in the tutorial I was looking at
> (which was Using the Twisted Application Framework).
>
> However, it is mentioned in a few other places. It
> seems I was just being too selective of what sections
> to read, and thus didn't understand the directory
> structure these files required.
>
> Thanks, for the reply! This should fix my problem.
>
>

If you're using Python 2.5 then this is probably because of a default
path change from 2.4, which breaks scripts like twistd and trial. See
ticket 2489 on the twisted trac for some details. The fix you'll want
to make is to modify your twistd.py (and any other twisted scripts) so
that the current directory is added to sys.path.

sys.path.insert(0, os.curdir)

is all it takes.

is all it takes.



From twisted-python at 2xlp.com  Wed Mar 28 12:44:23 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 28 Mar 2007 12:44:23 -0400
Subject: [Twisted-Python] 2 threads questions
In-Reply-To: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>
References: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>
Message-ID: <4F76F869-2FEA-4F45-80BD-1E76793CF989@2xlp.com>


On Mar 27, 2007, at 12:30 PM, Jean-Paul Calderone wrote:

>
> Python 2.5 includes sys._current_frames() which returns a mapping  
> from thread
> identifiers to the frame objects which you might be able to use to  
> learn what
> is going on.  You can call this from your manhole prompt when you  
> notice the
> system to have hung.


Great!  Thanks.

Still working on debugging this, but for other people who need to  
jump into a manhole for something like this in the future  -- the  
following works well.



=======

import sys
import traceback

def formatTraceback ( frameId , frameObj ):
	traceback_lines= traceback.format_stack( frameObj )
	if not len(traceback_lines):
		return
	print ""
	print  
"----------------------------------------------------------------------- 
-----------"
	print ">> --- %s | %s ===================================" %  
( frameId , frameObj )
	print "".join(traceback_lines)
	print "<< --- %s | %s ===================================" %  
( frameId , frameObj )
	print ""

def printCurrentStack():
	frames= sys._current_frames()
	for frameId in frames:
		frameObj= frames[frameId]
		formatTraceback( frameId , frameObj )

printCurrentStack()








// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| FindMeOn.com - The cure for Multiple Web Personality Disorder
| Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| RoadSound.com - Tools For Bands, Stuff For Fans
| Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -





From justinjohnson at gmail.com  Wed Mar 28 13:01:12 2007
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 28 Mar 2007 12:01:12 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
Message-ID: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>

Hi,

I'm running Python 2.5 and Twisted 2.5.0 on Windows 2003 Server.

I have a web site (Twisted/Nevow) where users login with a username
and password.  I save the username and password once they login
because the same username and password are used to connect to various
Perspective Broker servers, and I don't want to make users
reauthenticate for every server that is connected to behind the
scenes.  Since the password cannot be hashed when passed to PB I store
it in plaintext.

Up to this point I have been using a realm and file password db as
listed at the end of this email.  When I recently upgraded from
Twisted 2.4.0 to 2.5.0 and from Python 2.4 to 2.5 I get the following
error.

2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Peer will receive
following PB traceback:
2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Unhandled Error
	Traceback (most recent call last):
	  File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
847, in _recvMessage
	    netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
	  File "D:\Python25\lib\site-packages\twisted\spread\flavors.py",
line 119, in remoteMessageReceived
	    state = method(*args, **kw)
	  File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
1217, in remote_respond
	    d = self.portalWrapper.portal.login(self, mind, IPerspective)
	  File "D:\Python25\lib\site-packages\twisted\cred\portal.py", line
109, in login
	    return maybeDeferred(c.requestAvatarId, credentials
	--- <exception caught here> ---
	  File "D:\Python25\lib\site-packages\twisted\internet\defer.py",
line 107, in maybeDeferred
	    result = f(*args, **kw)
	  File "d:\python25\lib\site-packages\ratcontrol\login.py", line 195,
in requestAvatarId
	    up = credentials.IUsernamePassword(c)
	exceptions.TypeError: ('Could not adapt',
<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,

<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
	
2007/03/28 10:23 -0500 [Broker,client] Unhandled error in Deferred:
2007/03/28 10:23 -0500 [Broker,client] Unhandled Error
	Traceback from remote host -- Traceback unavailable

I looked at the Subversion log for twisted.spread.pb.py and am not
sure what change is causing this failure.  The contents of
ratcontrol\login.py are below.

Does anyone have any pointers on what I should be looking for here?
Is there any way I can accomplish my goal in a more maintainable way?

Thanks,
Justin

----------------
from twisted.cred import portal, checkers, credentials, error
from twisted.web import resource
from twisted.spread import pb
from twisted.python import log, components
from twisted.internet.defer import maybeDeferred
from twisted.internet import defer
from twisted.python import failure, reflect, components

from zope.interface import implements

from nevow import inevow


from ratcontrol.web import pages
from ratcontrol import perspectives
from ratcontrol import services

def noLogout():
    return None

class RatControlRealm:
    """A simple implementor of cred's IRealm.
       For web, this gives us the LoggedIn page.
       For PB, this gives us a reference to the perspective.
    """
    implements(portal.IRealm)

    def __init__(self):
        self.clients = []
        self.serviceTypes = []

    def addServiceType(self, serviceType):
        self.serviceTypes.append(serviceType)

    def requestAvatar(self, avatarIdAndPassword, mind, *interfaces):
        ## If the login is anonymous, only one item will be passed.
        ## If it is an authorized login, both the id and password
        ## will be passed.
        if len(avatarIdAndPassword) == 2:
            avatarId, avatarPassword = avatarIdAndPassword
        else:
            avatarId = avatarIdAndPassword

        for iface in interfaces:
            if iface is inevow.IResource:
                if avatarId is checkers.ANONYMOUS:
                    resc = pages.NotLoggedIn()
                    return (resource.IResource, resc, noLogout)
                else:
                    resc = pages.LoggedIn(avatarId, avatarPassword, self)
                    return resource.IResource, resc, noLogout
            elif iface is pb.IPerspective:
                if avatarId is checkers.ANONYMOUS:
                    return (pb.IPerspective, None, None)
                else:
                    log.msg("User %s logged in" % avatarId)
                    #s = services.RatControlService()
                    s = services.getServiceForTypes(self.serviceTypes)
                    self.p = perspectives.IPerspectiveRatControl(s)
                    self.p.loggedIn = 1
                    return (pb.IPerspective, self.p, self.p.logout)

        raise NotImplementedError("Can't support that interface.")


class FilePasswordDB:
    """A file-based, text-based username/password database.

    Records in the datafile for this class are delimited by a particular
    string.  The username appears in a fixed field of the columns delimited
    by this string, as does the password.  Both fields are specifiable.  If
    the passwords are not stored plaintext, a hash function must be supplied
    to convert plaintext passwords to the form stored on disk and this
    CredentialsChecker will only be able to check IUsernamePassword
    credentials.  If the passwords are stored plaintext,
    IUsernameHashedPassword credentials will be checkable as well.
    """

    implements(checkers.ICredentialsChecker)

    def __init__(self, filename, delim=':', usernameField=0, passwordField=1,
                 caseSensitive=True, hash=None):
        """
        @type filename: C{str}
        @param filename: The name of the file from which to read username and
        password information.

        @type delim: C{str}
        @param delim: The field delimiter used in the file.

        @type usernameField: C{int}
        @param usernameField: The index of the username after splitting a
        line on the delimiter.

        @type caseSensitive: C{bool}
        @param caseSensitive: If true, consider the case of the username when
        performing a lookup.  Ignore it otherwise.

        @type passwordField: C{int}
        @param passwordField: The index of the password after splitting a
        line on the delimiter.

        @type hash: Three-argument callable.
        @param hash: A function used to transform the plaintext password
        received over the network to a format suitable for comparison against
        the version stored on disk.  The arguments to the callable are the
        username, the network-supplied password, and the in-file version of
        the password.
        """
        self.filename = filename
        self.delim = delim
        self.ufield = usernameField
        self.pfield = passwordField
        self.caseSensitive = caseSensitive
        self.hash = hash

        if self.hash is None:
            # The passwords are stored plaintext.  We can support both
            # plaintext and hashed passwords received over the network.
            self.credentialInterfaces = (
                credentials.IUsernamePassword,
                credentials.IUsernameHashedPassword
            )
        else:
            # The passwords are hashed on disk.  We can support only
            # plaintext passwords received over the network.
            self.credentialInterfaces = (
                credentials.IUsernamePassword,
            )


    def _cbPasswordMatch(self, matched, usernameAndPassword):
        ## Return both the username and password so we can save the password
        ## for connecting to other services once we are authenticated on one.
        if matched:
            return usernameAndPassword
        else:
            return failure.Failure(error.UnauthorizedLogin())

    def getUser(self, username):
        try:
            f = file(self.filename)
        except:
            log.err()
            raise error.UnauthorizedLogin()
        else:
            if not self.caseSensitive:
                username = username.lower()
            for line in f:
                line = line.rstrip()
                parts = line.split(self.delim)

                if self.ufield >= len(parts) or self.pfield >= len(parts):
                    continue
                if self.caseSensitive:
                    if parts[self.ufield] != username:
                        continue
                elif parts[self.ufield].lower() != username:
                    continue

                return parts[self.ufield], parts[self.pfield]
            raise KeyError(username)


    def requestAvatarId(self, c):
        try:
            u, p = self.getUser(c.username)
        except KeyError:
            return failure.Failure(error.UnauthorizedLogin())
        else:
            up = credentials.IUsernamePassword(c)
            if self.hash:
                if up is not None:
                    h = self.hash(up.username, up.password, p)
                    if h == p:
                        return (u, p)
                return failure.Failure(error.UnauthorizedLogin())
            else:
                ## Note that we pass both the username and the password
                return defer.maybeDeferred(c.checkPassword, p
                    ).addCallback(self._cbPasswordMatch, (u,p))



From Brendan at BrendanSimon.com  Wed Mar 28 22:40:34 2007
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Thu, 29 Mar 2007 12:40:34 +1000
Subject: [Twisted-Python] twisted pysnmp status
Message-ID: <460B2722.7020900@BrendanSimon.com>

Hi,

I just wanted to know what the latest status is with twisted and pysnmp.
Is pysnmp 4.x supported?
Is full SNMPv3 supported?
What is the roadmap and/or plans for twisted and pysnmp ???

I want to write and SNMPv3 GUI manager in python :)
I'm not sure if the complexity and dependency of twisted is worth the 
effort?  Then again on the other hand it may provide lots of things I 
would probably need to write anyway ?  Given I would also like SSH and 
maybe even WBEM and/or WS-Management protocols too, then maybe twisted 
provides a better framework ???

Cheers,
Brendan.




From wgwigw at gmail.com  Thu Mar 29 03:22:00 2007
From: wgwigw at gmail.com (wang wei)
Date: Thu, 29 Mar 2007 15:22:00 +0800
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
Message-ID: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>

hello, I need to know the client address connected to my Twisted XMLRPC
server, is there any way?
the fellow code couldn't work in my machine.

class Examle(xmlrpc.XMLRPC):
    """An example object to be published."""

    def _getPeerAddress(self):
            return self.request.getClientIP()

    def render(self, request):
        self.request = request
        xmlrpc.XMLRPC.render(self, request)

the result is said:
"C:\Python24\lib\site-packages\twisted\web\server.py:272: UserWarning:
Warning! r
equest.finish called twice.
  http.Request.finish(self)"
then how can I get client address in twisted?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070329/b87355fc/attachment.htm 

From mailinglists at smartology.nl  Thu Mar 29 05:24:05 2007
From: mailinglists at smartology.nl (Remi Cool)
Date: Thu, 29 Mar 2007 11:24:05 +0200
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
In-Reply-To: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
References: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
Message-ID: <460B85B5.8070401@smartology.nl>

wang wei wrote:
> hello, I need to know the client address connected to my Twisted
> XMLRPC server, is there any way?
> the fellow code couldn't work in my machine.
> class Examle(xmlrpc.XMLRPC):
>     """An example object to be published."""
>
>         
>     def _getPeerAddress(self):
>             return self.request.getClientIP()
>             
>     def render(self, request):
>         self.request = request
>         xmlrpc.XMLRPC.render(self, request)
>
>
> the result is said:
> "C:\Python24\lib\site-packages\twisted\web\server.py:272: UserWarning: Warning! r
> equest.finish called twice.
>   http.Request.finish(self)"
> then how can I get client address in twisted?
>   
Try:

def render(self, request):
    self.request = request
    return xmlrpc.XMLRPC.render(self, request)


- Remi -



From p.mayers at imperial.ac.uk  Thu Mar 29 05:27:25 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 29 Mar 2007 10:27:25 +0100
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460B2722.7020900@BrendanSimon.com>
References: <460B2722.7020900@BrendanSimon.com>
Message-ID: <460B867D.1080105@imperial.ac.uk>

Brendan Simon wrote:
> Hi,
> 
> I just wanted to know what the latest status is with twisted and pysnmp.
> Is pysnmp 4.x supported?
> Is full SNMPv3 supported?
> What is the roadmap and/or plans for twisted and pysnmp ???
> 
> I want to write and SNMPv3 GUI manager in python :)
> I'm not sure if the complexity and dependency of twisted is worth the 
> effort?  Then again on the other hand it may provide lots of things I 

It is.

Although I don't use the pysnmp library, I do use Twisted for a large 
SNMP polling application (~1200 nodes). It goes much faster than 
anything else I've tried, with the possible exception of a custom event 
loop I wrote ages ago that's virtually unmaintainable and has all sorts 
of magic values.

One thing you might want to investigate is forking off N child processes 
which are simple 2-protocol bridges - they listen on Perspective Broker 
for high-level RPC calls such as "GetSnmpTable(base, cols)" and execute 
SNMP walks.

I've found this can overcome some scalability issues with very large 
numbers of clients on a single UDP socket. The problem is emptying the 
UDP socket buffer fast enough - you have to yield back into the reactor 
ASAP, and any code you execute should be behind a reactor.callLater(0, 
handler).

It also gives you multiprocessor speedups, *and* you can trivially move 
those processes elsewhere later on e.g. if you're monitoring boxes down 
the end of a WAN link, put one process down there. Then the large 
numbers of SNMP packets don't have to flow over the WAN, just the PB 
link which is flow-controlled TCP sending tiny request/result PDUs.



From wgwigw at gmail.com  Thu Mar 29 05:52:20 2007
From: wgwigw at gmail.com (wang wei)
Date: Thu, 29 Mar 2007 17:52:20 +0800
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
In-Reply-To: <460B85B5.8070401@smartology.nl>
References: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
	<460B85B5.8070401@smartology.nl>
Message-ID: <dbeb95830703290252g1f6cf8fdq65c3d935d2b4f63d@mail.gmail.com>

>
> def render(self, request):
>     self.request = request
>     return xmlrpc.XMLRPC.render(self, request)
>
> thanks, I should read the code carefully.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20070329/4f001c6e/attachment.htm 

From mcfletch at vrplumber.com  Thu Mar 29 15:41:06 2007
From: mcfletch at vrplumber.com (Mike C. Fletcher)
Date: Thu, 29 Mar 2007 15:41:06 -0400
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460B2722.7020900@BrendanSimon.com>
References: <460B2722.7020900@BrendanSimon.com>
Message-ID: <460C1652.1040504@vrplumber.com>

Brendan Simon wrote:
> Hi,
>
> I just wanted to know what the latest status is with twisted and pysnmp.
> Is pysnmp 4.x supported?
> Is full SNMPv3 supported?
> What is the roadmap and/or plans for twisted and pysnmp ???
PySNMP 4.x was, the last time I looked at it (probably more than a year 
ago, now), *far* too slow for our client's purposes (monitoring 10,000+ 
cable modems).  In fact, even PySNMP 3.x was too slow (even with our 
speed enhanced version).  We *needed* to be able to scale up to well 
beyond 40,000+ cable modems per (reasonable) scanning box to have a 
chance in the market where DSLAMs/CMTSs have that number of modems on a 
single chasis (and 100s of thousands per head end).  As a result, we had 
to defer on the product's biggest potential market.

SNMPv3 is not supported with TwistedSNMP.  We hacked in PySNMP 4.x, 
discovered it just couldn't be used for our purposes and dropped the 
porting effort before it was completed (which would have included the 
SNMPv3 interfaces).

As for the roadmap, I'm not currently working on the project as we 
aren't working on the product that was footing the bill any more. I 
believe Zenoss is using the package to monitor (smaller) networks, so 
they may have some requirements they need and decide to contribute or 
pay for.  There are others using it for small installations as well, 
they may be interested in working as well.  If there are people who want 
to work on the project I'm certainly willing to add them to the 
developer list on SourceForge.

HTH,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From exarkun at divmod.com  Thu Mar 29 16:57:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 29 Mar 2007 15:57:45 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
In-Reply-To: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>
Message-ID: <20070329205745.18920.618705141.divmod.quotient.6478@ohm>

On Wed, 28 Mar 2007 12:01:12 -0500, Justin Johnson <justinjohnson at gmail.com> wrote:
>Hi,
>
>I'm running Python 2.5 and Twisted 2.5.0 on Windows 2003 Server.
>
>I have a web site (Twisted/Nevow) where users login with a username
>and password.  I save the username and password once they login
>because the same username and password are used to connect to various
>Perspective Broker servers, and I don't want to make users
>reauthenticate for every server that is connected to behind the
>scenes.  Since the password cannot be hashed when passed to PB I store
>it in plaintext.
>
>Up to this point I have been using a realm and file password db as
>listed at the end of this email.  When I recently upgraded from
>Twisted 2.4.0 to 2.5.0 and from Python 2.4 to 2.5 I get the following
>error.
>
>2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Peer will receive
>following PB traceback:
>2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Unhandled Error
>         Traceback (most recent call last):
>           File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
>847, in _recvMessage
>             netResult = object.remoteMessageReceived(self, message, netArgs, 
>netKw)
>           File "D:\Python25\lib\site-packages\twisted\spread\flavors.py",
>line 119, in remoteMessageReceived
>             state = method(*args, **kw)
>           File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
>1217, in remote_respond
>             d = self.portalWrapper.portal.login(self, mind, IPerspective)
>           File "D:\Python25\lib\site-packages\twisted\cred\portal.py", line
>109, in login
>             return maybeDeferred(c.requestAvatarId, credentials
>         --- <exception caught here> ---
>           File "D:\Python25\lib\site-packages\twisted\internet\defer.py",
>line 107, in maybeDeferred
>             result = f(*args, **kw)
>           File "d:\python25\lib\site-packages\ratcontrol\login.py", line 
>195,
>in requestAvatarId
>             up = credentials.IUsernamePassword(c)
>         exceptions.TypeError: ('Could not adapt',
><twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
>
><InterfaceClass twisted.cred.credentials.IUsernamePassword>)
>
>2007/03/28 10:23 -0500 [Broker,client] Unhandled error in Deferred:
>2007/03/28 10:23 -0500 [Broker,client] Unhandled Error
>         Traceback from remote host -- Traceback unavailable
>
>I looked at the Subversion log for twisted.spread.pb.py and am not
>sure what change is causing this failure.  The contents of
>ratcontrol\login.py are below.
>
>Does anyone have any pointers on what I should be looking for here?
>Is there any way I can accomplish my goal in a more maintainable way?

It's not clear to me how this worked in the first place. ;)  The
credentials object being adapted to IUsernamePassword should always
have been a _PortalAuthChallenger, and so it only should have ever
been adaptable to IUsernameHashedPassword and IUsernameMD5Password.

The way you want to write requestAvatarId, though, is to inspect the
credentials object to see what interfaces it provides and them handle
it accordingly.  You can do this by adapting and catching the TypeError,
adapting with a default and checking for that, or using the providedBy
method of the interface object.  The important point is that you have to
be able to handle every kind of credentials object which the you have
declared you can handle (with the credentialInterfaces attribute).  In
this specific case, I believe your checker declared it could handle both
IUsernamePassword and IUsernameHashedPassword, but its implementation can
only actually handle IUsernameePassword.

Hope this helps,

Jean-Paul



From littlesweetmelon at gmail.com  Thu Mar 29 23:38:35 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 11:38:35 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use "static
	member" to store states?
Message-ID: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>

Hi,
    I'm a newbie. After went through the source code in
twisted.protocols.basic, I found it's really strange that all classes
in twisted.protocols.basic use "static member" to store states.
    Take class StatefulStringProtocol as the example. Some Factory
will creates a group of StatefulStringProtocol instances which share
the static member "state". But why all instances MUST have the same
state? In my opinion, instance A may be in the "handshaking" state,
while instance B may be in the "data sending" state. The static member
can not represent this case.
    Therefore, I think protocols should use "member variable" rather
that "static member":

class StatefulStringProtocol:
	def __init__(self):
		self.state = 'init'
...

    Could you plz give me some clue? I am a little confused. Most
possibly, I misunderstanding the design about protocols-factory.

   Thank you.

ShenLei



From daedalus at eigenmagic.com  Fri Mar 30 00:22:42 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 30 Mar 2007 14:22:42 +1000
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460C1652.1040504@vrplumber.com>
References: <460B2722.7020900@BrendanSimon.com>
	<460C1652.1040504@vrplumber.com>
Message-ID: <1175228562.7273.30.camel@localhost>

On Thu, 2007-03-29 at 15:41 -0400, Mike C. Fletcher wrote:
> Brendan Simon wrote:
> > Hi,
> >
> > I just wanted to know what the latest status is with twisted and pysnmp.
> > Is pysnmp 4.x supported?
> > Is full SNMPv3 supported?
> > What is the roadmap and/or plans for twisted and pysnmp ???
> PySNMP 4.x was, the last time I looked at it (probably more than a year 
> ago, now), *far* too slow for our client's purposes (monitoring 10,000+ 
> cable modems).  In fact, even PySNMP 3.x was too slow (even with our 
> speed enhanced version).  We *needed* to be able to scale up to well 
> beyond 40,000+ cable modems per (reasonable) scanning box to have a 
> chance in the market where DSLAMs/CMTSs have that number of modems on a 
> single chasis (and 100s of thousands per head end).  As a result, we had 
> to defer on the product's biggest potential market.
> 
> SNMPv3 is not supported with TwistedSNMP.  We hacked in PySNMP 4.x, 
> discovered it just couldn't be used for our purposes and dropped the 
> porting effort before it was completed (which would have included the 
> SNMPv3 interfaces).

The performance of PySNMP (many years ago) was the main reason we wrote
libsnmp; PySNMP seemed to have been written from a very CompSci
perspective with full abstract ASN.1 model that gets subclassed to SNMP
via many steps, all of which slow it down. We went for a more
engineering approach, hardcoding lookup tables for values that never
change for the specific ASN.1 instanciation that is SNMP, for example.

libsnmp isn't integrated into twisted, though we do use it with twisted
with great success in seafelt; there has been some interest in
integrating libsnmp with twisted in recent times. libsnmp also lacks
SNMPv3 support, only because we haven't had a need to add it yet, but
this means it probably doesn't meet your needs.

However, I am interested in both of these goals: twisted integration,
and SNMPv3 support, so perhaps if there enough people interested in such
an outcome we could work together to achieve it?

-- 
Justin Warren <daedalus at eigenmagic.com>



From therve at free.fr  Fri Mar 30 04:39:57 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 30 Mar 2007 10:39:57 +0200
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
Message-ID: <20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>

Quoting ?? <littlesweetmelon at gmail.com>:

> Hi,
>    I'm a newbie. After went through the source code in
> twisted.protocols.basic, I found it's really strange that all classes
> in twisted.protocols.basic use "static member" to store states.
>    Take class StatefulStringProtocol as the example. Some Factory
> will creates a group of StatefulStringProtocol instances which share
> the static member "state". But why all instances MUST have the same
> state? In my opinion, instance A may be in the "handshaking" state,
> while instance B may be in the "data sending" state. The static member
> can not represent this case.
>    Therefore, I think protocols should use "member variable" rather
> that "static member":
>
> class StatefulStringProtocol:
> 	def __init__(self):
> 		self.state = 'init'
> ...
>
>    Could you plz give me some clue? I am a little confused. Most
> possibly, I misunderstanding the design about protocols-factory.

In fact, you're misunderstanding Python :). The fact that the variable is
defined as class member doesn't make shared between instances. You can 
see some
explanation here:
http://diveintopython.org/object_oriented_framework/class_attributes.html.

-- 
Thomas






From littlesweetmelon at gmail.com  Fri Mar 30 05:23:31 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 17:23:31 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
Message-ID: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>

No, I don't think so. ^_^ You can see it from the last lines in you
recommend document:
>>> d.count
2
>>> c.count
2

Instance c & d indeed share the class attribute "count". You can try
it more explicitly:
>>> class A:
...     i = 0
...
>>> p = A()
>>> q = A()
>>> A.i = 2
>>> p.i
2
>>> q.i
2
Again, instance p & q share the class attribute "i".

--
ShenLei



From p.mayers at imperial.ac.uk  Fri Mar 30 05:46:22 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Mar 2007 10:46:22 +0100
Subject: [Twisted-Python] Why classes in twisted.protocols.basic
	use	"static member" to store states?
In-Reply-To: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
Message-ID: <460CDC6E.40904@imperial.ac.uk>

?? wrote:
> No, I don't think so. ^_^ You can see it from the last lines in you
> recommend document:

No you can't, because you've misunderstood.

>>>> d.count
> 2
>>>> c.count
> 2
> 
> Instance c & d indeed share the class attribute "count". You can try
> it more explicitly:
>>>> class A:
> ...     i = 0
> ...
>>>> p = A()
>>>> q = A()
>>>> A.i = 2
>>>> p.i
> 2
>>>> q.i
> 2
> Again, instance p & q share the class attribute "i".

They share it UNTIL IT IS MODIFIED. So, to continue the above example, 
the relevant bit would be:

 >>> p.i=3
 >>> p.i
3
 >>> q.i
2

Effectively, classes in python serve as templates to create instances. 
If you create two instances of a class and modify the class, then both 
are modified - however, if you then modify an instance, the class and 
other instances are not, and those modifications override any 
conflicting ones on the class.

Continuing the above example:

 >>> p.__dict__
{'i': 3}
 >>> q.__dict__
{}


So, because we've modified "p", the attribute is set in the instance 
dict. q remains unmodified, and the getattr call will continue through 
to the class.

Doing this:

class AProtocol:
   INITIALSTATE = 'foo'

..is just a quick way to get INITIALSTATE set on every instance. The 
ONLY circumstance you need worry about these variables being shared is 
if you use a mutable variable and mutate it in place. For example:

 >>> class BProtocol:
...   SOMEDATA = {}
...
 >>> p = BProtocol()
 >>> q = BProtocol()
 >>> p.SOMEDATA['a'] = 1
 >>> q.SOMEDATA
{'a': 1}

If you don't want that to happen, don't do it. Twisted doesn't.



From screwtape at froup.com  Fri Mar 30 06:04:18 2007
From: screwtape at froup.com (Tim Allen)
Date: Fri, 30 Mar 2007 20:04:18 +1000
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
Message-ID: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>

On 30 Mar 2007, at 19:23, ?? wrote:
> Instance c & d indeed share the class attribute "count". You can try
> it more explicitly:
>>>> class A:
> ...     i = 0
> ...
>>>> p = A()
>>>> q = A()
>>>> A.i = 2
>>>> p.i
> 2
>>>> q.i
> 2

Ah, but continuing:

 >>> p.i = 5
 >>> p.i
5
 >>> q.i
2

i is still not a class attribute in the same way it might be for Java  
or C++.


From littlesweetmelon at gmail.com  Fri Mar 30 06:13:46 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 18:13:46 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
	<1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
Message-ID: <cdb837ea0703300313r561d6b90j2a6b5331c340d5dd@mail.gmail.com>

Oh, I see. Thank you very much.



From matt at zgroupplc.com  Fri Mar 30 07:01:27 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 12:01:27 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
Message-ID: <BAE106C8-3EAB-440A-AD74-208517929627@zgroupplc.com>

Hi All,

I am new to twisted and python. I am evaluating the possibility of  
using it for an application that I am writing. The framework looks  
very comprehensive (I am also enjoying the python language :) but I  
have some questions regarding deferred objects and the twisted web  
server itself.

My application essentially comprises the following:

1. HTTP request is received by the server.
2. Server creates a listening socket on an arbitrary port and waits  
for n seconds for incoming data
3. Data (or timeout message) is returned to the client by way of the  
HTTP response.

This is a relatively simple application and I have created a  
prototype in PHP with fastcgi. I am well aware of the limitations of  
PHP when it some to asynchronous events. The application needs to  
service thousands of clients simultaneously. In terms of CPU power,  
this is not a problem, the logic is simple and there is little  
overhead having thousands of listening sockets waiting for data (I'd  
prefer to use epoll but select or poll will do). However, there is a  
massive memory overhead because it is necessary to ensure that there  
is always one, idle process for any incoming request. Given that the  
request may wait for up to n seconds before returning a response, the  
number of simultaneous PHP fastcgi processes that are required is  
unreasonably high.

I have toyed with the idea of writing a small (low memory) binary  
that will accommodate my needs, but my C isn't great, hence twisted.

I was wondering whether it is feasible to use the twisted framework  
for this application. I have been playing with the framework and I  
can't see a way to service what are essentially thousands of requests  
that perform blocking operations simultaneously. I have noted the  
twisted documentation on threads but I was hoping, for the sake of my  
sanity, that I might be able to manage this using an asynchronous  
approach. Essentially, what I think I am looking for is a waitFor()  
on a deferred callback.

As an aside, is it possible to compile platform specific python  
applications as small binaries? Or does the interpreter (is it  
required?) mean the memory consumption is prohibitive?

Can anybody offer any advice on the matter?

Thanks a lot :)


Matthew Glubb



From exarkun at divmod.com  Fri Mar 30 07:18:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 30 Mar 2007 06:18:15 -0500
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <BAE106C8-3EAB-440A-AD74-208517929627@zgroupplc.com>
Message-ID: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>

On Fri, 30 Mar 2007 12:01:27 +0100, Matthew Glubb <matt at zgroupplc.com> wrote:
>Hi All,
>
>I am new to twisted and python. I am evaluating the possibility of  using it 
>for an application that I am writing. The framework looks  very 
>comprehensive (I am also enjoying the python language :) but I  have some 
>questions regarding deferred objects and the twisted web  server itself.
>
>My application essentially comprises the following:
>
>1. HTTP request is received by the server.
>2. Server creates a listening socket on an arbitrary port and waits  for n 
>seconds for incoming data
>3. Data (or timeout message) is returned to the client by way of the  HTTP 
>response.
>
> [snip]
>
>I was wondering whether it is feasible to use the twisted framework  for 
>this application. I have been playing with the framework and I  can't see a 
>way to service what are essentially thousands of requests  that perform 
>blocking operations simultaneously. I have noted the  twisted documentation 
>on threads but I was hoping, for the sake of my  sanity, that I might be 
>able to manage this using an asynchronous  approach. Essentially, what I 
>think I am looking for is a waitFor()  on a deferred callback.

There's no way to block until an event occurs.  Blocking would prevent the
reactor from noticing the event or informing you about it. :)

Fortunately you don't need to resort to threads, either.

The conventional way to do this would be to write a function which sets up
the listening port and returns a Deferred which will eventually be called
back with the result (presumably the data which some client will eventually
send to it).  Then, using reactor.callLater, set up a timed call which will
tear down the listening port after the timeout has expired and errback the
Deferred to indicate no data arrived within the timeout period.

Actually, that's the only way to do it. :P  The conventional implementation
would be to do this using explicit callback functions in the style you may
have noticed in many Twisted examples.  There are other ways which allow you
to write code in a different style which some people prefer, but it's just
a difference in spelling, the same thing is happening underneath.

>
>As an aside, is it possible to compile platform specific python 
>applications as small binaries? Or does the interpreter (is it  required?) 
>mean the memory consumption is prohibitive?

Generally the only thing that's possible is to wrap up the whole application
with the whole interpreter and some subset of the standard library in an
executable.  This doesn't sound much like what you're after, though.

Jean-Paul



From matt at zgroupplc.com  Fri Mar 30 08:11:32 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 13:11:32 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
Message-ID: <E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>

Hi Jean-Paul,

Thanks for your response.

On 30 Mar 2007, at 12:18, Jean-Paul Calderone wrote:

> The conventional way to do this would be to write a function which  
> sets up
> the listening port and returns a Deferred which will eventually be  
> called
> back with the result (presumably the data which some client will  
> eventually
> send to it).  Then, using reactor.callLater, set up a timed call  
> which will
> tear down the listening port after the timeout has expired and  
> errback the
> Deferred to indicate no data arrived within the timeout period.

Yes, that's the way I have started doing it, basing it on what I have  
seen in various modules and sub-classing ClientFactory and  
LineReceiver. I am a little confused as to how, when the Deferred is  
returned from the factory, the callbacks that are defined are  
connected to the originating client request. I assume that all I have  
to do is to write the response to the client from the callback and  
that's it.

I guess what I am asking is, if an HTTP request (serviced using  
twisted.web.soap and twistd) starts an asynchronous operation, how  
does it know that it should wait for an event from the operation  
before completing its response.

>> As an aside, is it possible to compile platform specific python  
>> applications as small binaries? Or does the interpreter (is it   
>> required?) mean the memory consumption is prohibitive?
>
> Generally the only thing that's possible is to wrap up the whole  
> application
> with the whole interpreter and some subset of the standard library  
> in an
> executable.  This doesn't sound much like what you're after, though.

Yes, that's what I thought, although I wondered whether someone might  
have written a wonderful tool :)

Thanks again for your time,

Matt



From itamar at itamarst.org  Fri Mar 30 08:37:41 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Mar 2007 08:37:41 -0400
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
	<E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
Message-ID: <1175258261.1920.63.camel@localhost.localdomain>

On Fri, 2007-03-30 at 13:11 +0100, Matthew Glubb wrote:

> I guess what I am asking is, if an HTTP request (serviced using  
> twisted.web.soap and twistd) starts an asynchronous operation, how  
> does it know that it should wait for an event from the operation  
> before completing its response.

twisted.web.soap allows you to return a Deferred as a result of a SOAP
method. When someone eventually calls .callback() or .errback() on that
Deferred the HTTP request will get its response.




From matt at zgroupplc.com  Fri Mar 30 08:58:35 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 13:58:35 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <1175258261.1920.63.camel@localhost.localdomain>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
	<E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
	<1175258261.1920.63.camel@localhost.localdomain>
Message-ID: <2377B2F4-082F-4BEE-8A72-C8A923BA7F60@zgroupplc.com>

Great. That's what I wanted to know, thanks :)

On 30 Mar 2007, at 13:37, Itamar Shtull-Trauring wrote:

> On Fri, 2007-03-30 at 13:11 +0100, Matthew Glubb wrote:
>
>> I guess what I am asking is, if an HTTP request (serviced using
>> twisted.web.soap and twistd) starts an asynchronous operation, how
>> does it know that it should wait for an event from the operation
>> before completing its response.
>
> twisted.web.soap allows you to return a Deferred as a result of a SOAP
> method. When someone eventually calls .callback() or .errback() on  
> that
> Deferred the HTTP request will get its response.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mithrandi-twisted-python at mithrandi.za.net  Fri Mar 30 11:50:35 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 30 Mar 2007 17:50:35 +0200
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
	<1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
Message-ID: <20070330155035.GC11991@mithrandi.za.net>

* Tim Allen <screwtape at froup.com> [2007-03-30 20:04:18 +1000]:

> Ah, but continuing:
> 
> >>> p.i = 5
> >>> p.i
> 5
> >>> q.i
> 2
> 
> i is still not a class attribute in the same way it might be for Java  
> or C++.

It would probably be more correct to say that "value types" and
"assignment" work differently in Python compared with Java/C++. More
specifically, in Java/C++, "value types" like int or Integer are
mutable, and the "=" operator mutates them. In python, they are
immutable, and the "=" operator never mutates objects, but instead inds
a variable / attribute / etc. to a new object reference.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20070330/63fa0988/attachment.pgp 

From mcfletch at vrplumber.com  Fri Mar 30 12:57:21 2007
From: mcfletch at vrplumber.com (Mike C. Fletcher)
Date: Fri, 30 Mar 2007 12:57:21 -0400
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <1175228562.7273.30.camel@localhost>
References: <460B2722.7020900@BrendanSimon.com>	<460C1652.1040504@vrplumber.com>
	<1175228562.7273.30.camel@localhost>
Message-ID: <460D4171.1090202@vrplumber.com>

Justin Warren wrote:
...
> The performance of PySNMP (many years ago) was the main reason we wrote
> libsnmp; PySNMP seemed to have been written from a very CompSci
> perspective with full abstract ASN.1 model that gets subclassed to SNMP
> via many steps, all of which slow it down. We went for a more
> engineering approach, hardcoding lookup tables for values that never
> change for the specific ASN.1 instanciation that is SNMP, for example.
>
> libsnmp isn't integrated into twisted, though we do use it with twisted
> with great success in seafelt; there has been some interest in
> integrating libsnmp with twisted in recent times. libsnmp also lacks
> SNMPv3 support, only because we haven't had a need to add it yet, but
> this means it probably doesn't meet your needs.
>   
Actually, would meet our client's needs well enough.  SNMPv3 isn't a 
requirement, just a small nicety for them.
> However, I am interested in both of these goals: twisted integration,
> and SNMPv3 support, so perhaps if there enough people interested in such
> an outcome we could work together to achieve it?
>   
Looking over your code it seems like it would be fairly easy to make it 
an option in TwistedSNMP.  Currently TwistedSNMP has an abstraction 
point that allows regular or speed-enhanced PySNMP to be used.  By the 
look of it a very simple wrapper module would let libsnmp provide the 
(small set of) features we use (basically just encode/decode and 
translation of result values to/from Pythonic values with a few "type" 
operations as well (OID, EndOfMibView, that kind of thing)).

BTW, I notice that none of your code uses GetBulk (though you define 
it)?  Bulk operations were a *huge* speed win for our application.  
Hopefully you're doing it in your real-world code.

Anyway, I'll see if there's any interest from the customer in trying out 
libsnmp with the code-base.  That would let me take company time to work 
on integrating it into TwistedSNMP.  They almost certainly don't care 
enough to have it do v3 operations, but raw speed on v2 operations is 
something they may care about enough to pay for a few hours of work.

Have fun,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From justinjohnson at gmail.com  Fri Mar 30 13:55:25 2007
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 30 Mar 2007 12:55:25 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
In-Reply-To: <20070329205745.18920.618705141.divmod.quotient.6478@ohm>
References: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>
	<20070329205745.18920.618705141.divmod.quotient.6478@ohm>
Message-ID: <94a776e70703301055sc9ab0b7ld320399c1d1cfa58@mail.gmail.com>

> >Does anyone have any pointers on what I should be looking for here?
> >Is there any way I can accomplish my goal in a more maintainable way?
>
> It's not clear to me how this worked in the first place. ;)  The
> credentials object being adapted to IUsernamePassword should always
> have been a _PortalAuthChallenger, and so it only should have ever
> been adaptable to IUsernameHashedPassword and IUsernameMD5Password.
>
> The way you want to write requestAvatarId, though, is to inspect the
> credentials object to see what interfaces it provides and them handle
> it accordingly.  You can do this by adapting and catching the TypeError,
> adapting with a default and checking for that, or using the providedBy
> method of the interface object.  The important point is that you have to
> be able to handle every kind of credentials object which the you have
> declared you can handle (with the credentialInterfaces attribute).  In
> this specific case, I believe your checker declared it could handle both
> IUsernamePassword and IUsernameHashedPassword, but its implementation can
> only actually handle IUsernameePassword.
>
> Hope this helps,

Yes, this is helpful.  It has been too long since I looked at this
code.  Thank you.

Justin



From iacovou at gmail.com  Thu Mar  1 08:12:27 2007
From: iacovou at gmail.com (kgi)
Date: Thu, 1 Mar 2007 17:12:27 +0200
Subject: [Twisted-Python] Foolscap: CopyableSlicer has no streamable
	attribute?
Message-ID: <200703011712.27251.iacovou@gmail.com>


Hi all.

I'm using Foolscap in a project with many disparate types and am gradually 
learning all the ins and outs of sending these all over the place.

I've got an exception occurring that is stumping me. I think it may be a bug 
in Foolscap, but I don't know enough about the inner workings to be sure.

The error is:

  'CopyableSlicer' object has no attribute 'streamable'

Which occurs here (I'm using SVN Foolscap, BTW):

> /usr/lib/python2.4/site-packages/foolscap/banana.py(312)pushSlicer()
(Pdb) l
312  ->         itr = slicer.slice(topSlicer.streamable, self)
313             next = iter(itr).next
(Pdb) whatis topSlicer
<class 'foolscap.copyable.CopyableSlicer'>
(Pdb) dir(topSlicer)
['__class__', '__delattr__', '__dict__', '__doc__', '__getattribute__', '__hash__',
'__implemented__', '__init__', '__module__', '__new__', '__providedBy__',
'__provides__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__',
'__str__', '__weakref__', 'childAborted', 'describe', 'obj', 'opentype',
'parent', 'registerReference', 'sendOpen', 'slice', 'sliceBody',
'slicerForObject', 'slices', 'trackReferences']

So the error happened when trying to access topSlicer.streamable, and indeed, 
dir() shows there is no such attribute on the object, which is of type 
CopyableSlicer. Now, CopyableSlicer is defined like this:

class CopyableSlicer(slicer.BaseSlicer):
    """I handle ICopyable objects (things which are copied by value)."""
    def slice(self, streamable, banana):
        yield 'copyable'
        copytype = self.obj.getTypeToCopy()
        assert isinstance(copytype, str)
        yield copytype
        state = self.obj.getStateToCopy()
        for k,v in state.iteritems():
            yield k
            yield v
    def describe(self):
        return "<%s>" % self.obj.getTypeToCopy()
registerAdapter(CopyableSlicer, ICopyable, tokens.ISlicer)

So it overrides slicer.BaseSlicer.slice(). Now, in slicer.BaseSlicer, we see:

class BaseSlicer:
    __metaclass__ = SlicerClass
    implements(tokens.ISlicer)
    ....
    def slice(self, streamable, banana):
        # this is what makes us ISlicer
        self.streamable = streamable
        assert self.opentype
        for o in self.opentype:
            yield o
        for t in self.sliceBody(streamable, banana):
            yield t

Note the line following the comment, "# this is what makes us ISlicer" sets 
a 'streamable' attribute on the object in the base class, but the subclass 
doesn't preserve this behaviour.

Is this a bug, or is my exception being caused by something else?

Regards,

Ricky




From johnpote at jptechnical.co.uk  Thu Mar  1 08:37:41 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 01 Mar 2007 15:37:41 +0000
Subject: [Twisted-Python] factory class has no __class__ attribute!
Message-ID: <45E6F345.8070903@jptechnical.co.uk>

Hi everyone,
Justed started out to get a twisted http server going. typed in example 
4.2 from Fettig's book but when I run it this strange error is reported:

twisted ver:2.5.0
python ver:2.4.4 (#71, Oct 18 2006, 08:34:43) [MSC v.1310 32 bit (Intel)]
Traceback (most recent call last):
  File "dataServe.py", line 31, in ?
    reactor.listenTCP(8000, myhttpFactory)
  File 
"c:\apps\python\244\lib\site-packages\twisted\internet\posixbase.py", 
line 467, in listenTCP
    p.startListening()
  File "c:\apps\python\244\lib\site-packages\twisted\internet\tcp.py", 
line 739, in startListening
    log.msg("%s starting on %s" % (self.factory.__class__, 
self._realPortNumber))
AttributeError: class myhttpFactory has no attribute '__class__'

anyone shed any light on this?

Also, for your information, I tried Fettig's example 2.6 
'dataforward.py'. This works fine on my Linux box but just hangs on my 
win XP box.

using Py 2.4.4 and Twisted 2.5.0 on winXP and Centos4.4 Linux.

Regards,
John Pote

source code
import sys
from twisted.web import http

class httpRequests(http.Request):
    pages = {
        '/':    '<h1>Home</h1>Home page',
        '/test':'<h1>Test</h1>Test page',
        }
    def process(s):
        if s.pages.has_key(s.path):
            s.write(s.pages[s.path])
        else:
            s.setResponseCode(http.NOT_FOUND)
            s.write("<h1>Not Found!</h1>Sorry, no such page.")
        s.finish()


class httpProtocol(http.HTTPChannel):
    requestFactory = httpRequests

class myhttpFactory(http.HTTPFactory):
    protocol = httpProtocol


if __name__ == "__main__":
    from twisted.internet import reactor
    from twisted._version import version
    print "twisted ver:"+version.short()
    print "python ver:"+sys.version

    reactor.listenTCP(8000, myhttpFactory)
    reactor.run()




From exarkun at divmod.com  Thu Mar  1 08:47:23 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 10:47:23 -0500
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <45E6F345.8070903@jptechnical.co.uk>
Message-ID: <20070301154723.17852.664834624.divmod.quotient.1409@ohm>

On Thu, 01 Mar 2007 15:37:41 +0000, John Pote <johnpote at jptechnical.co.uk> wrote:
>Hi everyone,
>Justed started out to get a twisted http server going. typed in example 4.2 
>from Fettig's book but when I run it this strange error is reported:
>
> [snip]
>AttributeError: class myhttpFactory has no attribute '__class__'
>
>anyone shed any light on this?
>
> [snip]
>
>class myhttpFactory(http.HTTPFactory):
>    protocol = httpProtocol
>

Here you defined a protocol factory class.

>
>if __name__ == "__main__":
>    from twisted.internet import reactor
>    from twisted._version import version
>    print "twisted ver:"+version.short()
>    print "python ver:"+sys.version
>
>    reactor.listenTCP(8000, myhttpFactory)

Here you passed it to listenTCP, when you should have pass an instance of
it to listenTCP:

    reactor.listenTCP(8000, myhttpFactory())

>    reactor.run()
>

Jean-Paul



From ldanielburr at mac.com  Thu Mar  1 08:53:20 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 01 Mar 2007 09:53:20 -0600
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <45E6F345.8070903@jptechnical.co.uk>
References: <45E6F345.8070903@jptechnical.co.uk>
Message-ID: <op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi John,

On Thu, 01 Mar 2007 09:37:41 -0600, John Pote <johnpote at jptechnical.co.uk>  
wrote:

[SNIP]

> source code
> import sys
> from twisted.web import http
>
> class httpRequests(http.Request):
>     pages = {
>         '/':    '<h1>Home</h1>Home page',
>         '/test':'<h1>Test</h1>Test page',
>         }
>     def process(s):
>         if s.pages.has_key(s.path):
>             s.write(s.pages[s.path])
>         else:
>             s.setResponseCode(http.NOT_FOUND)
>             s.write("<h1>Not Found!</h1>Sorry, no such page.")
>         s.finish()
>
>
> class httpProtocol(http.HTTPChannel):
>     requestFactory = httpRequests
>
> class myhttpFactory(http.HTTPFactory):
>     protocol = httpProtocol
>
>
> if __name__ == "__main__":
>     from twisted.internet import reactor
>     from twisted._version import version
>     print "twisted ver:"+version.short()
>     print "python ver:"+sys.version
>
>     reactor.listenTCP(8000, myhttpFactory)
                               ^^^^^^^^^^^^^
You have to pass an *instance* of myhttpFactory,
not the class itself.

Hope this helps,

L. Daniel Burr



From johnpote at jptechnical.co.uk  Thu Mar  1 10:21:32 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 01 Mar 2007 17:21:32 +0000
Subject: [Twisted-Python] factory class has no __class__ attribute!
In-Reply-To: <op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <45E6F345.8070903@jptechnical.co.uk>
	<op.toio26rg3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <45E70B9C.1040309@jptechnical.co.uk>

Thanks Jean-Paul and Daniel. Had to be a trivial problem. My excuse is I 
typed it in at the tail end of a migraine and I'm struggleing with my 
vari-focals anyway. Just didn't see the () to make an instance of the 
factory. Thanks boys.

John

L. Daniel Burr wrote:

>                               ^^^^^^^^^^^^^
> You have to pass an *instance* of myhttpFactory,
> not the class itself.
>
> Hope this helps,
>
> L. Daniel Burr
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From brown at esteem.com  Thu Mar  1 10:21:50 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 09:21:50 -0800
Subject: [Twisted-Python] using a reactor in a loop
Message-ID: <200703010921.51323.brown@esteem.com>

Hello,

I am trying to use a reactor in a loop. The application will go through the 
loop twice then hang when trying to stop the protocol. Here's my loop:

def main():
  factory = Factory()
  factory.numProtocols = 0
  factory.protocol = AqapProtocol
  while True:
    print 'running server'
    # do other work ...
    reactor.listenTCP(48555, factory)
    reactor.run() # stopped by protocol

Here's how the protocol stops the reactor:

  def connectionLost(self, reason):
    self.factory.numProtocols -= 1
    if not self.factory.numProtocols:
      print 'stopping reactor'
      reactor.stop()
      print 'reactor stopped'

I see the 'reactor stopped' get printed out twice through the loop but I don't 
see 'running server' get printed out a third time. So, reactor.run() is not 
returning. I must be missing something or going at this completely wrong. Any 
suggestions?

Thanks,
Tom



From exarkun at divmod.com  Thu Mar  1 10:32:51 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 12:32:51 -0500
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703010921.51323.brown@esteem.com>
Message-ID: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>

On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
>Hello,
>
>I am trying to use a reactor in a loop. The application will go through the
>loop twice then hang when trying to stop the protocol. Here's my loop:
>
> [snip]
>
>I see the 'reactor stopped' get printed out twice through the loop but I don't
>see 'running server' get printed out a third time. So, reactor.run() is not
>returning. I must be missing something or going at this completely wrong. Any
>suggestions?

The simple thing you're missing is that reactors can't be restarted. :)  One
way you can restructure your program to avoid needing to do this is to put
the body of your loop (minus reactor.run()) into a function which returns a
Deferred and to replace the call to reactor.stop() with code which fires that
Deferred.  You can set up callbacks on this Deferred to execute the whole
thing again if necessary.

Jean-Paul



From ldanielburr at mac.com  Thu Mar  1 10:42:18 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 01 Mar 2007 11:42:18 -0600
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703010921.51323.brown@esteem.com>
References: <200703010921.51323.brown@esteem.com>
Message-ID: <op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>

Hi Tom,


On Thu, 01 Mar 2007 11:21:50 -0600, Tom Brown <brown at esteem.com> wrote:

> Hello,
>
> I am trying to use a reactor in a loop. The application will go through  
> the
> loop twice then hang when trying to stop the protocol. Here's my loop:
>

The reactor provides an event loop already, so I am confused as to why
you are trying to run it inside another loop.  Based on the code you
have posted here, I can't ascertain what your goal is.

Generally speaking, you'd be better served by using the reactor's
loop instead of your own, and stopping/starting your listeners,
rather than the reactor itself.

Also, stopping the reactor from within a protocol is probably
not ideal.  That's sort of like telling your OS to shut down
when you're done saving a file ;)

Hope this helps,

L. Daniel Burr



From brown at esteem.com  Thu Mar  1 11:46:10 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 10:46:10 -0800
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <200703010921.51323.brown@esteem.com>
	<op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <200703011046.10873.brown@esteem.com>

On Thursday 01 March 2007 09:42, L. Daniel Burr wrote:
> Hi Tom,
>
> On Thu, 01 Mar 2007 11:21:50 -0600, Tom Brown <brown at esteem.com> wrote:
> > Hello,
> >
> > I am trying to use a reactor in a loop. The application will go through
> > the
> > loop twice then hang when trying to stop the protocol. Here's my loop:
>
> The reactor provides an event loop already, so I am confused as to why
> you are trying to run it inside another loop.  Based on the code you
> have posted here, I can't ascertain what your goal is.
>
> Generally speaking, you'd be better served by using the reactor's
> loop instead of your own, and stopping/starting your listeners,
> rather than the reactor itself.
>
> Also, stopping the reactor from within a protocol is probably
> not ideal.  That's sort of like telling your OS to shut down
> when you're done saving a file ;)

Thanks for your reply.

My goal is this:
1) do specific tasks
2) run the server and wait for a connection
3) when a connection is made, do tasks as instructed by the client in the 
AqapProtocol code.
4) when connection is lost, close server and go back to 1)

Shutting down the server is not necessary if I could get past the 
reactor.run(). A previous post suggested I use deferreds. So, that is 
probably what I need to. I just need to learn how to use them.

Thanks,
Tom



From brown at esteem.com  Thu Mar  1 14:28:04 2007
From: brown at esteem.com (Tom Brown)
Date: Thu, 1 Mar 2007 13:28:04 -0800
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>
References: <20070301173251.17852.1924531679.divmod.quotient.1440@ohm>
Message-ID: <200703011328.05383.brown@esteem.com>

On Thursday 01 March 2007 09:32, Jean-Paul Calderone wrote:
> On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
> >Hello,
> >
> >I am trying to use a reactor in a loop. The application will go through
> > the loop twice then hang when trying to stop the protocol. Here's my
> > loop:
> >
> > [snip]
> >
> >I see the 'reactor stopped' get printed out twice through the loop but I
> > don't see 'running server' get printed out a third time. So,
> > reactor.run() is not returning. I must be missing something or going at
> > this completely wrong. Any suggestions?
>
> The simple thing you're missing is that reactors can't be restarted. :) 
> One way you can restructure your program to avoid needing to do this is to
> put the body of your loop (minus reactor.run()) into a function which
> returns a Deferred and to replace the call to reactor.stop() with code
> which fires that Deferred.  You can set up callbacks on this Deferred to
> execute the whole thing again if necessary.

I read through the deferreds documentation and I'm thoroughly confused on how 
to set this up. I tried to simplify the problem with a simple function:

In [60]: def foo():
   ....:     print 'foo'
   ....:     return Deferred()
   ....:

In [61]: d = foo()
foo

In [62]: d.addCallback(foo)
Out[62]: <Deferred at 0xb786792cL>

So, now I'm lost as to what to do from here. Any suggestions would be 
appreciated.

Thanks,
Tom



From exarkun at divmod.com  Thu Mar  1 14:48:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 1 Mar 2007 16:48:41 -0500
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703011328.05383.brown@esteem.com>
Message-ID: <20070301214841.17852.1621212838.divmod.quotient.1522@ohm>

On Thu, 1 Mar 2007 13:28:04 -0800, Tom Brown <brown at esteem.com> wrote:
>On Thursday 01 March 2007 09:32, Jean-Paul Calderone wrote:
>> On Thu, 1 Mar 2007 09:21:50 -0800, Tom Brown <brown at esteem.com> wrote:
>> >Hello,
>> >
>> >I am trying to use a reactor in a loop. The application will go through
>> > the loop twice then hang when trying to stop the protocol. Here's my
>> > loop:
>> >
>> > [snip]
>> >
>> >I see the 'reactor stopped' get printed out twice through the loop but I
>> > don't see 'running server' get printed out a third time. So,
>> > reactor.run() is not returning. I must be missing something or going at
>> > this completely wrong. Any suggestions?
>>
>> The simple thing you're missing is that reactors can't be restarted. :)
>> One way you can restructure your program to avoid needing to do this is to
>> put the body of your loop (minus reactor.run()) into a function which
>> returns a Deferred and to replace the call to reactor.stop() with code
>> which fires that Deferred.  You can set up callbacks on this Deferred to
>> execute the whole thing again if necessary.
>
>I read through the deferreds documentation and I'm thoroughly confused on how
>to set this up. I tried to simplify the problem with a simple function:
>
>In [60]: def foo():
>   ....:     print 'foo'
>   ....:     return Deferred()
>   ....:
>
>In [61]: d = foo()
>foo
>
>In [62]: d.addCallback(foo)
>Out[62]: <Deferred at 0xb786792cL>
>
>So, now I'm lost as to what to do from here. Any suggestions would be
>appreciated.

Something needs to call that Deferred back for anything further to happen
(though what will happen next is a TypeError, since the callback, `foo',
doesn't accept any arguments, and all Deferred callbacks need to accept at
least one argument. ;)

For example:

   >>> def foo(result):
   ...     print 'Got a result:', result
   ...
   >>> d = Deferred()
   >>> d.addCallback(foo)
   <Deferred at 0xB7D26F4CL>
   >>> d.callback("Hello, world")
   Got a result: Hello, world
   >>>                                                       

Or to set up a (terrible, infinite, actually-infinitely-recursive) loop:

   >>> def bar(lastResult=None):
   ...     print 'Previous result was:', lastResult
   ...     d = Deferred()
   ...     d.addCallback(bar)
   ...     d.callback(str(lastResult) + "bar")
   ...
   >>>

(Slightly) More realistically, you might have something like this:

   >>> class NoOp(Protocol):
   ...     def __init__(self, onConnect):
   ...             self.onConnect = onConnect
   ...     def connectionMade(self):
   ...             self.transport.loseConnection()
   ...             self.onConnect.callback(None)
   ...
   >>> def baz(ignored=None):
   ...     d = Deferred()
   ...     p = NoOp(d)
   ...     f = ClientFactory()
   ...     f.protocol = lambda: p
   ...     reactor.connectTCP(host, port, f)
   ...     d.addCallback(baz)

Which is similar to the previous example, in that it sets up a loop with
a Deferred for an asynchronous operation (connecting to a remote host),
but won't lead to infinite recursion, and might actually resemble what you
want to do. :)

Jean-Paul



From johann.borck at densedata.com  Thu Mar  1 15:05:55 2007
From: johann.borck at densedata.com (Johann Borck)
Date: Thu, 01 Mar 2007 23:05:55 +0100
Subject: [Twisted-Python] using a reactor in a loop
In-Reply-To: <200703011046.10873.brown@esteem.com>
References: <200703010921.51323.brown@esteem.com>	<op.toit4ski3oj628@l-daniel-burrs-powerbook-g4-17.local>
	<200703011046.10873.brown@esteem.com>
Message-ID: <45E74E43.1070005@densedata.com>

Tom Brown wrote:
>
> My goal is this:
> 1) do specific tasks
> 2) run the server and wait for a connection
> 3) when a connection is made, do tasks as instructed by the client in the 
> AqapProtocol code.
> 4) when connection is lost, close server and go back to 1)
>
> Shutting down the server is not necessary if I could get past the 
> reactor.run(). A previous post suggested I use deferreds. So, that is 
> probably what I need to. I just need to learn how to use them.
>
>   

There's really good documentation about twisted and its event-driven 
programming model, there you'll find what you're looking for. in twisted 
you never "get past" the reactor.run() (until you quit the application), 
everything is done inside its loop. so when using twisted you should 
rather consider this:

1) run the event-loop
2) do specific tasks (if you need to complete long running tasks, you could use deferToThread or a pool of threads, to keep your event-loop responsive ) 
3) setup listener for connections (now you have your server)
4) when a connection is made, do tasks as instructed by the client in the 
AqapProtocol code.
5) if really necessary, stop listening for/refuse connections without stopping the eventloop, but maybe it's better to return a "service suspended, come back later" kind of message
6) goto 2) 

AFAIK twisted doesn't support restarting the reactor, there're some issues with cleaning up the state. But when you get used to it, you'll never feel the need to do that anyway, which might be the main reason why it's neither supported nor really discussed. You can do anything you want while the reactor is running. 

Johann


> Thanks,
> Tom
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>   




From mlum at redhat.com  Sat Mar  3 18:19:49 2007
From: mlum at redhat.com (Margaret Lum)
Date: Sat, 03 Mar 2007 17:19:49 -0800
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
Message-ID: <45EA1EB5.9090509@redhat.com>

Hi folks,

I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system with 
the following packages installed:

mod_python-3.2.8-3.1
postgresql-python-8.1.4-1.1
python-2.4.3-18.fc6
python-2.4.3-19.el5
python-elementtree-1.2.6-5
python-krbV-1.0.13-4.el5
python-ldap-2.2.0-2.1
python-numeric-23.7-2.2.2
python-sqlite-1.1.7-1.2.1
python-urlgrabber-3.1.0-1
python-urlgrabber-3.1.0-2

This is the error I get when attempting to install both TwistedCore-2.5.0:
python setup.py install
Traceback (most recent call last):
  File "setup.py", line 20, in ?
    from twisted import copyright
  File "./twisted/__init__.py", line 22, in ?
    raise ImportError("you need zope.interface installed "
ImportError: you need zope.interface installed 
(http://zope.org/Products/ZopeInterface/)

And subsequently ../zope.interface-3.3.0:
running install
running build
running build_py
running build_ext
building '_zope_interface_coptimizations' extension
gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector 
--param=ssp-buffer-size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fPIC 
-I/usr/include/python2.4 -c 
src/zope/interface/_zope_interface_coptimizations.c -o 
build/temp.linux-x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
src/zope/interface/_zope_interface_coptimizations.c:15:20: error: 
Python.h: No such file or directory
src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
structmember.h: No such file or directory

Any quick tips would be appreciated.  Thanks for your time.

-- 
-Margaret

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3229 bytes
Desc: S/MIME Cryptographic Signature
URL: </pipermail/twisted-python/attachments/20070303/48e1dbd0/attachment-0002.bin>

From exarkun at divmod.com  Sat Mar  3 18:30:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 3 Mar 2007 20:30:41 -0500
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
In-Reply-To: <45EA1EB5.9090509@redhat.com>
Message-ID: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>

On Sat, 03 Mar 2007 17:19:49 -0800, Margaret Lum <mlum at redhat.com> wrote:
>Hi folks,
>
>I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system with the 
>following packages installed:
>
>mod_python-3.2.8-3.1
>postgresql-python-8.1.4-1.1
>python-2.4.3-18.fc6
>python-2.4.3-19.el5
>python-elementtree-1.2.6-5
>python-krbV-1.0.13-4.el5
>python-ldap-2.2.0-2.1
>python-numeric-23.7-2.2.2
>python-sqlite-1.1.7-1.2.1
>python-urlgrabber-3.1.0-1
>python-urlgrabber-3.1.0-2
>
>This is the error I get when attempting to install both TwistedCore-2.5.0:
>python setup.py install
>Traceback (most recent call last):
>  File "setup.py", line 20, in ?
>    from twisted import copyright
>  File "./twisted/__init__.py", line 22, in ?
>    raise ImportError("you need zope.interface installed "
>ImportError: you need zope.interface installed 
>(http://zope.org/Products/ZopeInterface/)
>
>And subsequently ../zope.interface-3.3.0:
>running install
>running build
>running build_py
>running build_ext
>building '_zope_interface_coptimizations' extension
>gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
>-Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer- 
>size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fPIC 
>-I/usr/include/python2.4 -c 
>src/zope/interface/_zope_interface_coptimizations.c -o build/temp.linux- 
>x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
>src/zope/interface/_zope_interface_coptimizations.c:15:20: error: Python.h: 
>No such file or directory
>src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
>structmember.h: No such file or directory
>
>Any quick tips would be appreciated.  Thanks for your time.
>

I'm not terribly familiar with RHEL, but it looks like the Python packager
has done the typical thing and split out the files which he/she decided are
only useful for development purposes into a separate package (often named
python-dev or some such).  If this is the case, installing that package
should give you the necessary header files to build Python extension modules.

Jean-Paul




From mlum at redhat.com  Sat Mar  3 18:49:43 2007
From: mlum at redhat.com (Margaret Lum)
Date: Sat, 03 Mar 2007 17:49:43 -0800
Subject: [Twisted-Python] Help -- can't install Twisted/Zope on x86_64
	(RHEL5-beta)
In-Reply-To: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>
References: <20070304013041.17852.1381578234.divmod.quotient.2597@ohm>
Message-ID: <45EA25B7.8040509@redhat.com>

Yes, folks on #twisted told me that, as well.  I've built the Python 2.5 
source and will experiment with it from there, instead.
Thanks a lot!

Jean-Paul Calderone wrote:
> On Sat, 03 Mar 2007 17:19:49 -0800, Margaret Lum <mlum at redhat.com> wrote:
>> Hi folks,
>>
>> I'm trying to install Twisted/Zope on a 64-bit RHEL5 (beta) system 
>> with the following packages installed:
>>
>> mod_python-3.2.8-3.1
>> postgresql-python-8.1.4-1.1
>> python-2.4.3-18.fc6
>> python-2.4.3-19.el5
>> python-elementtree-1.2.6-5
>> python-krbV-1.0.13-4.el5
>> python-ldap-2.2.0-2.1
>> python-numeric-23.7-2.2.2
>> python-sqlite-1.1.7-1.2.1
>> python-urlgrabber-3.1.0-1
>> python-urlgrabber-3.1.0-2
>>
>> This is the error I get when attempting to install both 
>> TwistedCore-2.5.0:
>> python setup.py install
>> Traceback (most recent call last):
>>  File "setup.py", line 20, in ?
>>    from twisted import copyright
>>  File "./twisted/__init__.py", line 22, in ?
>>    raise ImportError("you need zope.interface installed "
>> ImportError: you need zope.interface installed 
>> (http://zope.org/Products/ZopeInterface/)
>>
>> And subsequently ../zope.interface-3.3.0:
>> running install
>> running build
>> running build_py
>> running build_ext
>> building '_zope_interface_coptimizations' extension
>> gcc -pthread -fno-strict-aliasing -DNDEBUG -O2 -g -pipe -Wall 
>> -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector 
>> --param=ssp-buffer- size=4 -m64 -mtune=generic -D_GNU_SOURCE -fPIC 
>> -fPIC -I/usr/include/python2.4 -c 
>> src/zope/interface/_zope_interface_coptimizations.c -o 
>> build/temp.linux- 
>> x86_64-2.4/src/zope/interface/_zope_interface_coptimizations.o
>> src/zope/interface/_zope_interface_coptimizations.c:15:20: error: 
>> Python.h: No such file or directory
>> src/zope/interface/_zope_interface_coptimizations.c:16:26: error: 
>> structmember.h: No such file or directory
>>
>> Any quick tips would be appreciated.  Thanks for your time.
>>
>
> I'm not terribly familiar with RHEL, but it looks like the Python 
> packager
> has done the typical thing and split out the files which he/she 
> decided are
> only useful for development purposes into a separate package (often named
> python-dev or some such).  If this is the case, installing that package
> should give you the necessary header files to build Python extension 
> modules.
>
> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
-Margaret

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3229 bytes
Desc: S/MIME Cryptographic Signature
URL: </pipermail/twisted-python/attachments/20070303/f6b437b9/attachment-0002.bin>

From exarkun at twistedmatrix.com  Sat Mar  3 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Mar 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1172984702.03.1420964604@twistedmatrix.com

Bug summary
______________________
Summary for 2007-02-25 through 2007-03-04
Bugs opened: 25    Bugs closed: 1  Total open bugs: 877 (+24)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:      +16  |Highest:  +2          |Core:  +12             
|Enhancement:  +6  |High:     +4          |Names:  +2             
|Task:         +3  |Normal:  +19          |Trial:  +4             
                                          |Web2:   +1             
                                          |Words:  +6             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2495] Trial never passes a traceback to pyunit-API TestResult objects (opened by jml)
    defect          trial      http://twistedmatrix.com/trac/ticket/2495

[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

                    ===== High =====
[#2486] Change coding standard to require all new classes to be new style (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2486

[#2490] xpath.queryForString fails on unicode XML (opened by akrherz)
    defect          words      http://twistedmatrix.com/trac/ticket/2490

[#2496] Failure constructor API doesn't specify valid values of exc_tb (opened by jml)
    defect          core       http://twistedmatrix.com/trac/ticket/2496

[#2497] FastCGI: infinite loop for packets bigger than 65k (opened by j2a)
    defect          web2       http://twistedmatrix.com/trac/ticket/2497

                    ===== Normal =====
[#2480] twisted.test.test_application.TestInternet2.testConnectionGettingRefused is racey (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2480

[#2481] Several trial tests fail when run multiple times in a single process (opened by exarkun)
    defect          trial      http://twistedmatrix.com/trac/ticket/2481

[#2482] TrialRunners need separate workingDirectory under Windows (opened by therve)
    defect          trial      http://twistedmatrix.com/trac/ticket/2482

[#2483] Undesirable garbage collector/spawnProcess interaction (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2483

[#2484] Support 2.6 and 3.0 with same code base (opened by itamarst)
    task            core       http://twistedmatrix.com/trac/ticket/2484

[#2485] 2to3 cross-compilation tools (opened by itamarst)
    task            core       http://twistedmatrix.com/trac/ticket/2485

[#2487] Switch all classes in Twisted to be new style (opened by itamarst)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2487

[#2488] more efficient adbapi (opened by jack)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2488

[#2489] trial.py script fails on Windows with Python 2.5 (opened by arkanes)
    defect          trial      http://twistedmatrix.com/trac/ticket/2489

[#2491] Deprecate and remove special case behavior for non-None IProtocol.dataRecived return value handling (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2491

[#2492] Unhandled socket error when making DNS query (opened by p1mrx)
    defect          names      http://twistedmatrix.com/trac/ticket/2492

[#2493] Incomplete documentation for exceptions which can be raised by IUDPTransport.write (opened by exarkun)
    defect          core       http://twistedmatrix.com/trac/ticket/2493

[#2494] twisted.words.protocols.msn lineReceived bug (opened by qyb)
    defect          words      http://twistedmatrix.com/trac/ticket/2494

[#2498] trial hangs with threadpool (opened by jack)
    defect          trial      http://twistedmatrix.com/trac/ticket/2498

[#2499] Support DNS UPDATE messages (client and server) in Twisted Names (opened by exarkun)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2499

[#2500] Add @since to the coding standard (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2500

[#2501] defer.inlineCallbacks can't decorate an empty function (opened by jack)
    defect          core       http://twistedmatrix.com/trac/ticket/2501

[#2502] 'and' and 'or' operator suport for xpath (opened by jack)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2502

[#2503] Random garbage/debug prints in t-im irc support signon codepath (opened by exarkun)
    defect          words      http://twistedmatrix.com/trac/ticket/2503



Closed Bugs
______________________
                    ===== Highest =====
[#1901] misdefined test method kills trial with an unhandled exception (opened by exarkun, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/1901





From BRADLEY.S.GASPARD at saic.com  Mon Mar  5 10:58:50 2007
From: BRADLEY.S.GASPARD at saic.com (Gaspard, Bradley S)
Date: Mon, 5 Mar 2007 12:58:50 -0500
Subject: [Twisted-Python] TCP client that can connect to a server at
	periodic intervals
Message-ID: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>


I am trying to write a TCP client that at regular intervals connects to a server makes a request and then closes the connection. Below is the code I've been playing with. I've seen an example of LoopingCall used for periodically sending UPD packets but am not sure how it would apply here because it would seem I need to periodically create new Protocol instances in the ClientFactory class. I've looked for examples and through the documentation but have come up empty. Any pointers would be greatly appreceiated.

class AnnouncementFetcher(protocol.Protocol):

    def connectionMade(self):
        print "connectionMade called"
        self.transport.write(MSG_INFO_IPC)

    def dataReceived(self, data):
        print "Received: ", repr(data)
        # self.factory.share.saveData(data)
        self.transport.loseConnection()
        

class AnnouncementFetcherFactory(protocol.ClientFactory):
    protocol = AnnouncementFetcher

    def __init__(self, share):
        self.share = share

    def buildProtocol(self, addr):
        print 'Connected.'
        p = AnnouncementFetcher()
        p.factory = self
        return p

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection,  Reason:', reason
        reactor.callLater(5, self.buildProtocol, 'localhost')

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070305/f6c63222/attachment.html>

From jarrod at vertigrated.com  Mon Mar  5 14:23:57 2007
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Mon, 5 Mar 2007 16:23:57 -0500
Subject: [Twisted-Python] Any examples of SNMP enabling a Twisted Server?
Message-ID: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>

I was just wondering if there were any twisted server ( NOT CLIENT code )
that are SNMP enabled.
I found lots of SNMP client code via google. But nothing on SNMP interface
for a custom service?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070305/6b9f0731/attachment.html>

From glyph at divmod.com  Mon Mar  5 14:55:43 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 05 Mar 2007 21:55:43 -0000
Subject: [Twisted-Python] TCP client that can connect to a server at
	periodic intervals
In-Reply-To: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
Message-ID: <20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>


On 05:58 pm, bradley.s.gaspard at saic.com wrote:
>
>I am trying to write a TCP client that at regular intervals connects to 
>a server makes a request and then closes the connection.

Your code has a fatal problem.  Nowhere are you actually creating a 
client connection, you're just creating protocol objects and not hooking 
them up to anything!  I've whipped up a quick periodic ping/pong 
client/server pair for you here, which should provide a useful starting 
point for you.

The key thing is the call to the ClientCreator's 'connectTCP' method, 
which actually hooks up an instantiated PingSender to a socket.

-------- cut

from twisted.internet.protocol import Protocol, ClientCreator, Factory
from twisted.internet.task import LoopingCall
from twisted.internet import reactor

class PingResponder(Protocol):
    buf = ''
    def dataReceived(self, data):
        self.buf += data
        if self.buf == 'PING':
            print 'PONGED!'
            self.transport.write('PONG')
            self.transport.loseConnection()

class PingSender(Protocol):
    buf = ''
    def connectionMade(self):
        self.transport.write("PING")
    def dataReceived(self, data):
        self.buf += data
    def connectionLost(self, reason):
        print "PONGED WITH: " +self.buf

def client():
    cc = ClientCreator(reactor, PingSender)
    def dontDelay():
        cc.connectTCP('localhost', 4321)
    lc = LoopingCall(dontDelay)
    lc.start(0.5)


def server():
    pf = Factory()
    pf.protocol = PingResponder
    svr = reactor.listenTCP(4321, pf)

import sys
if sys.argv[1] == 'client':
    client()
else:
    server()

reactor.run()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070305/7bda4d9f/attachment.html>

From daedalus at eigenmagic.com  Tue Mar  6 00:20:09 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 06 Mar 2007 18:20:09 +1100
Subject: [Twisted-Python] Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <1173165609.7343.79.camel@localhost>

On Mon, 2007-03-05 at 16:23 -0500, Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT
> code ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?

What do you want to do? Respond to SNMP Get, GetNext, Set type requests
from within a Service?

There's two bits to this, really: One part is the encoding and decoding
of the SNMP packets, and one is having the server decide what to do
about SNMP packets it receives.

You'd have a Protocol that would listenUDP() on a port for incoming
packets, and implement datagramReceived() to decode the SNMP packets,
and then take some action based on the type and contents of the packet.
I have code for the first part, but the second part is all about how
your Service/server behaves.

Which bit did you want example code for?

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Tue Mar  6 00:44:02 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 06 Mar 2007 18:44:02 +1100
Subject: [Twisted-Python] seafelt uses twisted
Message-ID: <1173167042.7343.97.camel@localhost>

Hey folks,

This is sort of related to the SNMP replies I've made recently. It says
in the wiki that you're interested in projects that use twisted, so I
thought I'd let you know that seafelt (http://www.seafelt.com) now uses
twisted at the core of the backend programs, for SNMP, ICMP and TCP
discovery and polling, as well as asynchronous database access to
PostgreSQL.

seafelt is a network performance monitoring and reporting tool that I've
been working on with Jim Crumpler for the past several years in our free
time. We started it because we thought MRTG was too limited and the
enterprise tools too unwieldy and expensive. We hope to do something
commercial with it at some point, but it's free for personal and
non-commercial use.

The SNMP library is released under the MIT license, and I'd be happy to
have the library components integrated into twisted, particularly bits
like the ICMP code, since the twisted-pair stuff appears to have
stalled? Incidentally, I wrote libsnmp quite a few years back because
PySNMP had some performance issues at large scale, so I don't know if
that's improved now that PySNMP is integrated with twisted.

I recently ported all our old threaded code across to twisted and it's
now even faster and more efficient, not to mention easier to debug. I
think I now finally grok Deferreds, though I still struggle with Errback
chains and Unhandled Deferred errors from time to time.

So yeah, check it out if you're interested in this kind of thing.

Big thumbs up to the twisted guys for providing us with such a great
framework. You guys rock, but you knew that already. ;)

-- 
Justin Warren <daedalus at eigenmagic.com>



From andrew-twisted at puzzling.org  Tue Mar  6 01:15:12 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 6 Mar 2007 19:15:12 +1100
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
References: <1173167042.7343.97.camel@localhost>
Message-ID: <20070306081512.GG14306@steerpike.home.puzzling.org>

Justin Warren wrote:
[...]
> 
> I recently ported all our old threaded code across to twisted and it's
> now even faster and more efficient, not to mention easier to debug. I
> think I now finally grok Deferreds, though I still struggle with Errback
> chains and Unhandled Deferred errors from time to time.

In case you're not aware of it, twisted.internet.defer.setDebugging(True) can be
helpful with understanding unhandled deferred errors.

-Andrew.




From manlio_perillo at libero.it  Tue Mar  6 03:48:01 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 06 Mar 2007 11:48:01 +0100
Subject: [Twisted-Python] memcached client for Twisted
Message-ID: <45ED46E1.20101@libero.it>

Hi.

I'm searching for a memcached client for Twisted.
I have searched with Google, but without success.


Thanks   Manlio Perillo



From therve at free.fr  Tue Mar  6 04:14:27 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Tue, 06 Mar 2007 12:14:27 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <45ED46E1.20101@libero.it>
References: <45ED46E1.20101@libero.it>
Message-ID: <20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>

Quoting Manlio Perillo <manlio_perillo at libero.it>:

> Hi.
>
> I'm searching for a memcached client for Twisted.
> I have searched with Google, but without success.

I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind me.

-- 
Thomas





From manlio_perillo at libero.it  Tue Mar  6 04:33:52 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Tue, 06 Mar 2007 12:33:52 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
References: <45ED46E1.20101@libero.it>
	<20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
Message-ID: <45ED51A0.3070609@libero.it>

Thomas Hervé ha scritto:
> Quoting Manlio Perillo <manlio_perillo at libero.it>:
> 
>> Hi.
>>
>> I'm searching for a memcached client for Twisted.
>> I have searched with Google, but without success.
> 
> I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind 
> me.
> 

Thanks.
I'll wait for it.



Manlio Perillo





From therve at free.fr  Tue Mar  6 06:24:41 2007
From: therve at free.fr (Thomas =?utf-8?b?SGVydsOp?=)
Date: Tue, 06 Mar 2007 14:24:41 +0100
Subject: [Twisted-Python] memcached client for Twisted
In-Reply-To: <45ED51A0.3070609@libero.it>
References: <45ED46E1.20101@libero.it>
	<20070306121427.lzk6okkpigyscow4@wasabox.wasabout.net>
	<45ED51A0.3070609@libero.it>
Message-ID: <20070306142441.ms04zgass9c84gok@wasabox.wasabout.net>

Quoting Manlio Perillo <manlio_perillo at libero.it>:

>> I've this somewhere. I'll create a ticket ASAP, don't hesitate to remind me.
>>
>
> Thanks.
> I'll wait for it.

Here it is: http://twistedmatrix.com/trac/ticket/2506

-- 
Thomas





From wrobyn at cox.net  Tue Mar  6 07:44:49 2007
From: wrobyn at cox.net (wrobyn at cox.net)
Date: Tue, 6 Mar 2007 9:44:49 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
Message-ID: <14508398.1173192289905.JavaMail.root@eastrmwml03.mgt.cox.net>

Hello,
I am attempting to write an xmpp load testing thingy in python. I am hitting big walls with regard to creating concurrent connections above 250.. I need really 1-n concurrent connections, the upper limit would be around 500,000 but I would be happy at this point breaching the 250 ceiling.
Would twisted be able to handle this? Can someone post a simple loop or routine to log in 1-n "people" (i am using the increment in a counter as username) into a jabber server?
Thanks for the help
renee



From exarkun at divmod.com  Tue Mar  6 08:01:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Mar 2007 10:01:22 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <14508398.1173192289905.JavaMail.root@eastrmwml03.mgt.cox.net>
Message-ID: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>

On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>Hello,
>I am attempting to write an xmpp load testing thingy in python. I am hitting big walls with regard to creating concurrent connections above 250.. I need really 1-n concurrent connections, the upper limit would be around 500,000 but I would be happy at this point breaching the 250 ceiling.
>Would twisted be able to handle this? Can someone post a simple loop or routine to log in 1-n "people" (i am using the increment in a counter as username) into a jabber server?

>From the ~250 limit, I would guess you're on OS X and running into the
default per-process open file limit.  You can raise this using the `ulimit'
command. If you're on some other platform, then it'd be helpful if you gave
more details about the exact failure you're running into.

Overall, if you use the select reactor, you're limited to FD_SETSIZE, which
varies, but is usually within an order of magnitude of 1000.  If you use the
poll reactor, then you're limited to the number of TCP connections you can
have, which is going to be at most 65000 per IP address (and possibly as low
as 32000).  You might find performance lacking with large numbers of clients
even with the poll reactor, but the epoll reactor should do somewhat better.

I don't know if you'll be able to do 500k with a single process, but I think
you should at least be able to get to the point where the limit you hit is
the CPU, not something related to file descriptors.

Jean-Paul



From exarkun at divmod.com  Tue Mar  6 08:09:08 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 6 Mar 2007 10:09:08 -0500
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
Message-ID: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>

On Tue, 06 Mar 2007 18:44:02 +1100, Justin Warren <daedalus at eigenmagic.com> wrote:
>Hey folks,
>
>This is sort of related to the SNMP replies I've made recently. It says
>in the wiki that you're interested in projects that use twisted, so I
>thought I'd let you know that seafelt (http://www.seafelt.com) now uses
>twisted at the core of the backend programs, for SNMP, ICMP and TCP
>discovery and polling, as well as asynchronous database access to
>PostgreSQL.
>
>seafelt is a network performance monitoring and reporting tool that I've
>been working on with Jim Crumpler for the past several years in our free
>time. We started it because we thought MRTG was too limited and the
>enterprise tools too unwieldy and expensive. We hope to do something
>commercial with it at some point, but it's free for personal and
>non-commercial use.
>
>The SNMP library is released under the MIT license, and I'd be happy to
>have the library components integrated into twisted, particularly bits
>like the ICMP code, since the twisted-pair stuff appears to have
>stalled? Incidentally, I wrote libsnmp quite a few years back because
>PySNMP had some performance issues at large scale, so I don't know if
>that's improved now that PySNMP is integrated with twisted.
>
>I recently ported all our old threaded code across to twisted and it's
>now even faster and more efficient, not to mention easier to debug. I
>think I now finally grok Deferreds, though I still struggle with Errback
>chains and Unhandled Deferred errors from time to time.
>
>So yeah, check it out if you're interested in this kind of thing.
>
>Big thumbs up to the twisted guys for providing us with such a great
>framework. You guys rock, but you knew that already. ;)
>

Hey, cool. :)  I'm doing some stuff in this area at the moment, so I may try
to do some of the work to get some of this stuff back into Twisted.  Pair
definitely hasn't had much attention for quite a while (I don't think the
latest pair release even works with the latest Twisted release), but maybe
this would be a good excuse to bring it up to date.

Jean-Paul

>--
>Justin Warren <daedalus at eigenmagic.com>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From Benjamin.Rutt at gs.com  Tue Mar  6 10:03:53 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Tue, 6 Mar 2007 12:03:53 -0500
Subject: [Twisted-Python] Learning about IPushProducer
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>

When running the following code (my 2nd twisted program!), it works as I
had hoped - it doesn't starve any clients that want to receive data
back, even with a simultaneously active really long streaming
server-to-client communication (i.e. one piggy client asking for
millions of bytes).  i.e. another client can get in and ask for just a
few bytes while a large payload is being delivered to a different
client.  Which is great!

Here's a sample interaction from the client side:

$ telnet localhost 8007
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
1
x
2
xx
3
xxx
10
xxxxxxxxxx
99999
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
[...lots of x's...]
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
bye
Connection closed by foreign host.
$ 

So I have 2 questions on my code:

1) am I doing anything wrong in setting up the plumbing?
2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

Here is the code, and output from the server is at the end.  Thanks --
Benjamin

#!/usr/bin/env python
import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime
import socket, string, random, time, traceback, shutil, popen2

from zope.interface import implements
from twisted.internet import protocol, defer, interfaces, error, reactor
from twisted.internet.protocol import Protocol, Factory
from twisted.protocols.basic import LineReceiver

class NonStarvingXGiver:
    implements(interfaces.IPushProducer)
    def __init__(self, howmany, consumer):
        self.howmany = howmany
        self.sent_already = 0
        self.paused = False
        self.consumer = consumer
    def beginSendingXs(self):
        self.deferred = deferred = defer.Deferred()
        self.consumer.registerProducer(self, False)
        return deferred
    def pauseProducing(self):
        print 'pauseProducing: invoked'
        self.paused = True
    def resumeProducing(self):
        print 'resumeProducing: invoked'
        self.paused = False
        maxchunksz = 1024
        while not self.paused and self.howmany > self.sent_already:
            chunksz = min(maxchunksz, self.howmany - self.sent_already)
            self.consumer.write('x' * chunksz)
            self.sent_already += chunksz
        if self.howmany == self.sent_already:
            self.consumer.write('\n')
            self.consumer.unregisterProducer()
            print 'resumeProducing: exiting for the last time'
    def stopProducing(self):
        print 'stopProducing: invoked'
        self.consumer.unregisterProducer()
        
class xgiver(LineReceiver):
    def lineReceived(self, howmany):
        print 'got line [%s] from client [%s]' % (howmany,
 
self.transport.getPeer())
        if howmany == 'bye':
            print 'goodbye to', self.transport.getPeer()
            self.transport.loseConnection()
            return
        try:
            howmany = int(howmany)
            s = NonStarvingXGiver(howmany, self.transport)
            s.beginSendingXs()
        except Exception, ex:
            self.transport.write("invalid input " + howmany + "\n")

# Next lines are magic:
factory = Factory()
factory.protocol = xgiver

# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(8007, factory)
reactor.run()


-------------------------------------------------------------------
Server output:

$ ./xgiver.py 
got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [99999] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
resumeProducing: invoked
pauseProducing: invoked
resumeProducing: invoked
resumeProducing: exiting for the last time
got line [bye] from client [IPv4Address(TCP, '127.0.0.1', 51007)]
goodbye to IPv4Address(TCP, '127.0.0.1', 51007)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070306/f2bde4cb/attachment.html>

From ellisonbg.net at gmail.com  Tue Mar  6 10:44:35 2007
From: ellisonbg.net at gmail.com (Brian Granger)
Date: Tue, 6 Mar 2007 10:44:35 -0700
Subject: [Twisted-Python] Twisted and setuptools
Message-ID: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>

There was some talk at PyCon 2007 of making twisted egg friendly
during the sprints.  Was any progress made on that front?

It was great to meet everyone at PyCon!

Cheers,

Brian



From radix at twistedmatrix.com  Tue Mar  6 12:10:29 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Tue, 6 Mar 2007 14:10:29 -0500
Subject: [Twisted-Python] Twisted and setuptools
In-Reply-To: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>
References: <6ce0ac130703060944w674126deqbc8f2941ab1a7f8f@mail.gmail.com>
Message-ID: <60ed19d40703061110r610c09der45f2d4a21ddc4f7a@mail.gmail.com>

On 3/6/07, Brian Granger <ellisonbg.net at gmail.com> wrote:
> There was some talk at PyCon 2007 of making twisted egg friendly
> during the sprints.  Was any progress made on that front?
>
> It was great to meet everyone at PyCon!


Hi Brian,

The issues around easy_install support are summarized in the thread on
distutils-sig starting with this message:
http://mail.python.org/pipermail/distutils-sig/2007-March/007371.html

I'll try to do something about it soon.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From eprparadocs at gmail.com  Tue Mar  6 13:31:45 2007
From: eprparadocs at gmail.com (Chaz)
Date: Tue, 06 Mar 2007 15:31:45 -0500
Subject: [Twisted-Python] Re: Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <45EDCFB1.4040402@gmail.com>


Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT code
> ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I have found TwistedSNMP will work if you need a server side part. You
will need to do a little work to figure out what OIDs you will support,
but it will work.

Chuck Wegrzyn





From eprparadocs at gmail.com  Tue Mar  6 13:31:45 2007
From: eprparadocs at gmail.com (Chaz)
Date: Tue, 06 Mar 2007 15:31:45 -0500
Subject: [Twisted-Python] Re: Any examples of SNMP enabling a Twisted Server?
In-Reply-To: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
References: <fa3d0c740703051323j5e67b59ch3b83df7b6ad1dc74@mail.gmail.com>
Message-ID: <45EDCFB1.4040402@gmail.com>


Jarrod Roberson wrote:
> I was just wondering if there were any twisted server ( NOT CLIENT code
> ) that are SNMP enabled.
> I found lots of SNMP client code via google. But nothing on SNMP
> interface for a custom service?
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

I have found TwistedSNMP will work if you need a server side part. You
will need to do a little work to figure out what OIDs you will support,
but it will work.

Chuck Wegrzyn





From daedalus at eigenmagic.com  Tue Mar  6 13:52:49 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 07 Mar 2007 07:52:49 +1100
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>
References: <20070306150908.17852.591689376.divmod.quotient.3970@ohm>
Message-ID: <1173214369.13827.15.camel@fnord.melbourne.eigenmagic.net>

On Tue, 2007-03-06 at 10:09 -0500, Jean-Paul Calderone wrote:

> Hey, cool. :)  I'm doing some stuff in this area at the moment, so I may try
> to do some of the work to get some of this stuff back into Twisted.  Pair
> definitely hasn't had much attention for quite a while (I don't think the
> latest pair release even works with the latest Twisted release), but maybe
> this would be a good excuse to bring it up to date.

Feel free to steal icmp.py from the seafelt-backend code. It was
inspired by twisted-pair and implements a raw IP packet encode/decode
thing, as well as a bare bones ICMP packet, and it works with twisted
2.2.

-- 
Justin Warren <daedalus at eigenmagic.com>



From yangjun_yulin at 126.com  Tue Mar  6 20:06:01 2007
From: yangjun_yulin at 126.com (yangjun_yulin at 126.com)
Date: Wed, 7 Mar 2007 11:06:01 +0800 (CST)
Subject: [Twisted-Python] is IOCP reactor on win2k mature enough fo
 r production use?
Message-ID: <45EE2C19.0000D8.06845@bj126app58.126.com>

i want to replace some old programs which run on win2k, the program is simple but have to deal with a lot of 
TCP connections, 1K on average and up to 5K+ on max. the program is mainly used to collect data,every connection send data in sevaral seconds(from 3 sec to 30 sec),every time the data is less than 100 Bytes.
    thanks for any suggestion! 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070307/d812b849/attachment.html>

From johnpote at jptechnical.co.uk  Thu Mar  8 08:12:27 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 08 Mar 2007 15:12:27 +0000
Subject: [Twisted-Python] mktap and twistd
Message-ID: <45F027DB.70706@jptechnical.co.uk>

Hello all,

I'm just putting together a twisted app that will have an http server 
for a control UI and a TCP server running my own protocol. I've read the 
'Configuring and using the Twisted.Web Server' but am a bit confused as 
to the relation between rolling my own as described at the beginning of 
the howto and the use of mktap and twistd. Do I take it correctly that 
mktap makes a simple application that is not particularly adaptable? 
Assuming I roll my own as shown at the beginning of the howto how does 
twistd fit in? I seem to remember reading somewhere that twistd was the 
preferred means of starting a twisted app.

I've tried making a simple web server with mktap and twistd which works 
fine except on my winXP box does not run in the background. This is a 
winXP limitation I presume.

Any help appreciated,
John Pote




From exarkun at divmod.com  Thu Mar  8 09:30:16 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Mar 2007 11:30:16 -0500
Subject: [Twisted-Python] mktap and twistd
In-Reply-To: <45F027DB.70706@jptechnical.co.uk>
Message-ID: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>

On Thu, 08 Mar 2007 15:12:27 +0000, John Pote <johnpote at jptechnical.co.uk> wrote:
>Hello all,
>
>I'm just putting together a twisted app that will have an http server for a 
>control UI and a TCP server running my own protocol. I've read the 
>'Configuring and using the Twisted.Web Server' but am a bit confused as to 
>the relation between rolling my own as described at the beginning of the 
>howto and the use of mktap and twistd. Do I take it correctly that mktap 
>makes a simple application that is not particularly adaptable? Assuming I 
>roll my own as shown at the beginning of the howto how does twistd fit in? I 
>seem to remember reading somewhere that twistd was the preferred means of 
>starting a twisted app.

You have the right idea about "mktap web", I think.  It lets you configure
a web server which has some features like serving static files from the file
system and exposing per-user folders and other similar things, but it gives
you no way to add new functionality or customize the behavior beyond what can
be done via the command line arguments it offers.

You can hook your own thing into twistd easily enough, though.  You do this
by making a mktap/twistd plugin, as described here:

  http://twistedmatrix.com/projects/core/documentation/howto/tap.html

This will let you create a tap file using "mktap <your app>" and start
it with "twistd -f <your app>.tap".  Also, starting with Twisted 2.5,
you can skip the mktap step (for your plugin and for all the existing
mktap plugins) and just do "twistd <your app>", which will do the same
thing as the two commands above.

There are also tac files and arbitrary non-IServiceMaker plugins, but
IServiceMaker is probably a good place to start and should take care of
most or all of your needs for now.

>
>I've tried making a simple web server with mktap and twistd which works fine 
>except on my winXP box does not run in the background. This is a winXP 
>limitation I presume.

Yea, no daemonization support in twistd on Windows.  There's some code lying
around someplace to make a service, which is kind of like daemonization I
guess, but it hasn't been integrated with twistd as far as I know.

Jean-Paul



From johnpote at jptechnical.co.uk  Thu Mar  8 09:49:33 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 08 Mar 2007 16:49:33 +0000
Subject: [Twisted-Python] mktap and twistd
In-Reply-To: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>
References: <20070308163016.17852.1336591343.divmod.quotient.5081@ohm>
Message-ID: <45F03E9D.9070800@jptechnical.co.uk>

Thanks for the quick reply.
John

Jean-Paul Calderone wrote:

> On Thu, 08 Mar 2007 15:12:27 +0000, John Pote 
> <johnpote at jptechnical.co.uk> wrote:
>
>> Hello all,
>>
>> I'm just putting together a twisted app that will have an http server 
>> for a control UI and a TCP server running my own protocol. I've read 
>> the 'Configuring and using the Twisted.Web Server' but am a bit 
>> confused as to the relation between rolling my own as described at 
>> the beginning of the howto and the use of mktap and twistd. Do I take 
>> it correctly that mktap makes a simple application that is not 
>> particularly adaptable? Assuming I roll my own as shown at the 
>> beginning of the howto how does twistd fit in? I seem to remember 
>> reading somewhere that twistd was the preferred means of starting a 
>> twisted app.
>
>
> You have the right idea about "mktap web", I think.  It lets you 
> configure
> a web server which has some features like serving static files from 
> the file
> system and exposing per-user folders and other similar things, but it 
> gives
> you no way to add new functionality or customize the behavior beyond 
> what can
> be done via the command line arguments it offers.
>
> You can hook your own thing into twistd easily enough, though.  You do 
> this
> by making a mktap/twistd plugin, as described here:
>
>  http://twistedmatrix.com/projects/core/documentation/howto/tap.html
>
> This will let you create a tap file using "mktap <your app>" and start
> it with "twistd -f <your app>.tap".  Also, starting with Twisted 2.5,
> you can skip the mktap step (for your plugin and for all the existing
> mktap plugins) and just do "twistd <your app>", which will do the same
> thing as the two commands above.
>
> There are also tac files and arbitrary non-IServiceMaker plugins, but
> IServiceMaker is probably a good place to start and should take care of
> most or all of your needs for now.
>
>>
>> I've tried making a simple web server with mktap and twistd which 
>> works fine except on my winXP box does not run in the background. 
>> This is a winXP limitation I presume.
>
>
> Yea, no daemonization support in twistd on Windows.  There's some code 
> lying
> around someplace to make a service, which is kind of like daemonization I
> guess, but it hasn't been integrated with twistd as far as I know.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>





From list-ener at strank.info  Thu Mar  8 11:39:21 2007
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 08 Mar 2007 19:39:21 +0100
Subject: [Twisted-Python] how to get the result of a callLater-scheduled
	func?
Message-ID: <45F05859.6010600@strank.info>

Hi,

I am scheduling a function with `callLater`.
The function happens to return a Deferred (but it might return anything),
and I was searching for an easy way to add a callback in order to
get the result.
I know a workaround by creating a Deferred first, adding the call as 
callback and another callback to get the result, but this seems overly 
complicated (see below).
Am I missing something?

So I set up some function to be scheduled (happens to be an 
inlineCallbacks-generator for testing, but I think this should not be 
relevant here)::

     >>> from twisted.internet import defer, reactor
     >>> @defer.inlineCallbacks
     ... def test(name):
     ...     print name, 'start'
     ...     yield # yielding a non-Deferred does nothing
     ...     print name, 'end'
     ...     yield defer.returnValue('uiuiui')

I know this works::

     >>> deftest = defer.Deferred().addCallback(test)
     >>> jamesdelcall = reactor.callLater(0, deftest.callback, 'James')
     >>> def stopverbose(whatever):
     ...     print 'stopping, result:', whatever
     ...     reactor.stop()
     >>> deftest.addCallback(stopverbose)
     >>> reactor.run()
     James start
     James end
     stopping, result: uiuiui

What I expected to be able to do::

     >>> jamesdelcall = reactor.callLater(0, test, 'James')
     >>> def stopverbose(whatever):
     ...     print 'stopping, result:', whatever
     ...     reactor.stop()
     >>> jamesdelcal.gethisdeferred.addCallback(stopverbose) # <- MAGIC
     >>> reactor.run()
     James start
     James end
     stopping, result: uiuiui

I looked at the code of `ReactorBase.callLater` and 
`ReactorBase.runUntilCurrent`:
Would it be possible to add a `Deferred` to `DelayedCall` (possibly 
created lazily, or maybe even make DelayedCall a subclass of Deferred),
so that such code is possible, or would this somehow destroy the 
mainloop logic?

cheers,
stefan




From exarkun at divmod.com  Thu Mar  8 12:37:37 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 8 Mar 2007 14:37:37 -0500
Subject: [Twisted-Python] how to get the result of a callLater-scheduled
	func?
In-Reply-To: <45F05859.6010600@strank.info>
Message-ID: <20070308193737.17852.893732227.divmod.quotient.5159@ohm>

On Thu, 08 Mar 2007 19:39:21 +0100, Stefan Rank <list-ener at strank.info> wrote:
>Hi,
>
>I am scheduling a function with `callLater`.
>The function happens to return a Deferred (but it might return anything),
>and I was searching for an easy way to add a callback in order to
>get the result.
>I know a workaround by creating a Deferred first, adding the call as 
>callback and another callback to get the result, but this seems overly 
>complicated (see below).
>Am I missing something?
>
>So I set up some function to be scheduled (happens to be an inlineCallbacks- 
>generator for testing, but I think this should not be relevant here)::
>
>     >>> from twisted.internet import defer, reactor
>     >>> @defer.inlineCallbacks
>     ... def test(name):
>     ...     print name, 'start'
>     ...     yield # yielding a non-Deferred does nothing
>     ...     print name, 'end'
>     ...     yield defer.returnValue('uiuiui')
>
>I know this works::
>
>     >>> deftest = defer.Deferred().addCallback(test)
>     >>> jamesdelcall = reactor.callLater(0, deftest.callback, 'James')
>     >>> def stopverbose(whatever):
>     ...     print 'stopping, result:', whatever
>     ...     reactor.stop()
>     >>> deftest.addCallback(stopverbose)
>     >>> reactor.run()
>     James start
>     James end
>     stopping, result: uiuiui
>
>What I expected to be able to do::
>
>     >>> jamesdelcall = reactor.callLater(0, test, 'James')
>     >>> def stopverbose(whatever):
>     ...     print 'stopping, result:', whatever
>     ...     reactor.stop()
>     >>> jamesdelcal.gethisdeferred.addCallback(stopverbose) # <- MAGIC
>     >>> reactor.run()
>     James start
>     James end
>     stopping, result: uiuiui
>
>I looked at the code of `ReactorBase.callLater` and 
>`ReactorBase.runUntilCurrent`:
>Would it be possible to add a `Deferred` to `DelayedCall` (possibly created 
>lazily, or maybe even make DelayedCall a subclass of Deferred),
>so that such code is possible, or would this somehow destroy the mainloop 
>logic?

It's probably possible, but I'm not sure it's ideal.  It sounds like you
have a use-case for the `deferLater' function which has been proposed for
inclusion:

  http://twistedmatrix.com/trac/ticket/1875

With it, your example would look like either:

   d = deferLater(0)
   d.addCallback(lambda ignored: test('James'))
   d.addCallback(stopVerbose)

Or:

  d = deferLater(0, test, 'James')
  d.addCallback(stopVerbose)

Would that save enough typing to satisfy your use case?

Jean-Paul



From list-ener at strank.info  Thu Mar  8 15:40:21 2007
From: list-ener at strank.info (Stefan Rank)
Date: Thu, 08 Mar 2007 23:40:21 +0100
Subject: [Twisted-Python] Re: how to get the result of a callLater-scheduled
	func?
In-Reply-To: <20070308193737.17852.893732227.divmod.quotient.5159@ohm>
References: <45F05859.6010600@strank.info>
	<20070308193737.17852.893732227.divmod.quotient.5159@ohm>
Message-ID: <45F090D5.2090007@strank.info>

on 08.03.2007 20:37 Jean-Paul Calderone said the following:
> On Thu, 08 Mar 2007 19:39:21 +0100, Stefan Rank <list-ener at strank.info> 
> wrote:
>> Hi,
>>
>> I am scheduling a function with `callLater`.
>> The function happens to return a Deferred (but it might return anything),
>> and I was searching for an easy way to add a callback in order to
>> get the result.
<snip>
> 
> It's probably possible, but I'm not sure it's ideal.  It sounds like you
> have a use-case for the `deferLater' function which has been proposed for
> inclusion:
> 
>  http://twistedmatrix.com/trac/ticket/1875
> 
> With it, your example would look like either:
> 
>   d = deferLater(0)
>   d.addCallback(lambda ignored: test('James'))
>   d.addCallback(stopVerbose)
> 
> Or:
> 
>  d = deferLater(0, test, 'James')
>  d.addCallback(stopVerbose)
> 
> Would that save enough typing to satisfy your use case?
> 
> Jean-Paul

Thanks, that's almost what I was looking for. :)

What is lost is the access to the DelayedCall, i.e. you cannot cancel or 
reschedule anymore.

The discussion at the ticket page revolves around which of the two 
variants above is preferable.
I very much prefer the second one,
but if the callable argument would default to None, then a simple::

    if callable_ is not None:
        ... # only now use addCallback inside deferLater

would allow both versions without any overhead.
If the DelayedCall functionality could be integrated somehow than I 
think this could simply replace reactor.callLater.

I'll post at the ticket page.

thanks again,
stefan




From wrobyn at cox.net  Fri Mar  9 05:04:27 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Fri, 9 Mar 2007 07:04:27 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
References: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
Message-ID: <D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>

Hi,
Yes I am on os X. Could you show me how to convert my code below to  
use poll? Thanks!
[mport sys
import socket
import time
import resource
from threading import Thread
from twisted.words.protocols.jabber import client, jid
from twisted.words.xish import domish
from twisted.internet import reactor

resource.setrlimit(8,[65000,65000])
class testit():

     def authd(xmlstream):
         print "authenticated"

         presence = domish.Element(('jabber:client','presence'))
         xmlstream.send(presence)
     #xmlstream.addObserver('/message',  debug)
     #xmlstream.addObserver('/presence', debug)
     #xmlstream.addObserver('/iq',       debug)

     def debug(elem):
         print elem.toXml().encode('utf-8')
         print "="*20
     for i in range(981,2000):
         print i
         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
         factory = client.basicClientFactory(myJid, 'test')
         factory.addBootstrap('//event/stream/authd',authd)
         reactor.connectTCP('jbrsrvrname',5222,factory)

     reactor.run()

current = testit()
current.start()

On Mar 6, 2007, at 10:01 AM, Jean-Paul Calderone wrote:

> On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>> Hello,
>> I am attempting to write an xmpp load testing thingy in python. I  
>> am hitting big walls with regard to creating concurrent  
>> connections above 250.. I need really 1-n concurrent connections,  
>> the upper limit would be around 500,000 but I would be happy at  
>> this point breaching the 250 ceiling.
>> Would twisted be able to handle this? Can someone post a simple  
>> loop or routine to log in 1-n "people" (i am using the increment  
>> in a counter as username) into a jabber server?
>
>> From the ~250 limit, I would guess you're on OS X and running into  
>> the
> default per-process open file limit.  You can raise this using the  
> `ulimit'
> command. If you're on some other platform, then it'd be helpful if  
> you gave
> more details about the exact failure you're running into.
>
> Overall, if you use the select reactor, you're limited to  
> FD_SETSIZE, which
> varies, but is usually within an order of magnitude of 1000.  If  
> you use the
> poll reactor, then you're limited to the number of TCP connections  
> you can
> have, which is going to be at most 65000 per IP address (and  
> possibly as low
> as 32000).  You might find performance lacking with large numbers  
> of clients
> even with the poll reactor, but the epoll reactor should do  
> somewhat better.
>
> I don't know if you'll be able to do 500k with a single process,  
> but I think
> you should at least be able to get to the point where the limit you  
> hit is
> the CPU, not something related to file descriptors.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From sflist at ihonk.com  Fri Mar  9 05:37:44 2007
From: sflist at ihonk.com (Steve Freitas)
Date: Fri, 09 Mar 2007 04:37:44 -0800
Subject: [Twisted-Python] seafelt uses twisted
In-Reply-To: <1173167042.7343.97.camel@localhost>
References: <1173167042.7343.97.camel@localhost>
Message-ID: <1173443864.19805.1.camel@lothar>

On Tue, 2007-03-06 at 18:44 +1100, Justin Warren wrote:
> I think I now finally grok Deferreds, though I still struggle with Errback
> chains and Unhandled Deferred errors from time to time.

Couldn't have said it better myself. Glad to know someone else is in the
same place I am! :-)

Steve




From wrobyn at cox.net  Fri Mar  9 14:34:47 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Fri, 9 Mar 2007 16:34:47 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>
References: <20070306150122.17852.756603868.divmod.quotient.3965@ohm>
	<D855060B-DD1A-4A49-B2C5-181DA537AB2B@cox.net>
Message-ID: <63EAC33B-9D6C-4C8E-84A6-D595AAD62061@cox.net>

and for some reason from twisted.words.protocols.jabber.jid
imports reactor but doesnt use it as far as I can tell, that caused  
the below code to fail if you imported pollreactor.
Still would love to see an example of the below code converted to use  
pollreactor

On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:

> Hi,
> Yes I am on os X. Could you show me how to convert my code below to  
> use poll? Thanks!
> [mport sys
> import socket
> import time
> import resource
> from threading import Thread
> from twisted.words.protocols.jabber import client, jid
> from twisted.words.xish import domish
> from twisted.internet import reactor
>
> resource.setrlimit(8,[65000,65000])
> class testit():
>
>     def authd(xmlstream):
>         print "authenticated"
>
>         presence = domish.Element(('jabber:client','presence'))
>         xmlstream.send(presence)
>     #xmlstream.addObserver('/message',  debug)
>     #xmlstream.addObserver('/presence', debug)
>     #xmlstream.addObserver('/iq',       debug)
>
>     def debug(elem):
>         print elem.toXml().encode('utf-8')
>         print "="*20
>     for i in range(981,2000):
>         print i
>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>         factory = client.basicClientFactory(myJid, 'test')
>         factory.addBootstrap('//event/stream/authd',authd)
>         reactor.connectTCP('jbrsrvrname',5222,factory)
>
>     reactor.run()
>
> current = testit()
> current.start()
>
> On Mar 6, 2007, at 10:01 AM, Jean-Paul Calderone wrote:
>
>> On Tue, 6 Mar 2007 9:44:49 -0500, wrobyn at cox.net wrote:
>>> Hello,
>>> I am attempting to write an xmpp load testing thingy in python. I  
>>> am hitting big walls with regard to creating concurrent  
>>> connections above 250.. I need really 1-n concurrent connections,  
>>> the upper limit would be around 500,000 but I would be happy at  
>>> this point breaching the 250 ceiling.
>>> Would twisted be able to handle this? Can someone post a simple  
>>> loop or routine to log in 1-n "people" (i am using the increment  
>>> in a counter as username) into a jabber server?
>>
>>> From the ~250 limit, I would guess you're on OS X and running  
>>> into the
>> default per-process open file limit.  You can raise this using the  
>> `ulimit'
>> command. If you're on some other platform, then it'd be helpful if  
>> you gave
>> more details about the exact failure you're running into.
>>
>> Overall, if you use the select reactor, you're limited to  
>> FD_SETSIZE, which
>> varies, but is usually within an order of magnitude of 1000.  If  
>> you use the
>> poll reactor, then you're limited to the number of TCP connections  
>> you can
>> have, which is going to be at most 65000 per IP address (and  
>> possibly as low
>> as 32000).  You might find performance lacking with large numbers  
>> of clients
>> even with the poll reactor, but the epoll reactor should do  
>> somewhat better.
>>
>> I don't know if you'll be able to do 500k with a single process,  
>> but I think
>> you should at least be able to get to the point where the limit  
>> you hit is
>> the CPU, not something related to file descriptors.
>>
>> Jean-Paul
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Fri Mar  9 14:52:20 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 9 Mar 2007 16:52:20 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <63EAC33B-9D6C-4C8E-84A6-D595AAD62061@cox.net>
Message-ID: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>

On Fri, 9 Mar 2007 16:34:47 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>and for some reason from twisted.words.protocols.jabber.jid
>imports reactor but doesnt use it as far as I can tell, that caused  the 
>below code to fail if you imported pollreactor.
>Still would love to see an example of the below code converted to use 
>pollreactor

Easy, just import pollreactor first.

>
>On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:
>>Hi,
>>Yes I am on os X. Could you show me how to convert my code below to  use 
>>poll? Thanks!

from twisted.internet import pollreactor
pollreactor.install()

>>[mport sys
>>import socket
>>import time
>>import resource
>>from threading import Thread
>>from twisted.words.protocols.jabber import client, jid
>>from twisted.words.xish import domish
>>from twisted.internet import reactor
>>
>>[snip]

Jean-Paul



From brian.costlow at gmail.com  Fri Mar  9 16:34:17 2007
From: brian.costlow at gmail.com (Brian Costlow)
Date: Fri, 9 Mar 2007 18:34:17 -0500
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
Message-ID: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>

I'm trying to rewrite an existing 'back end' server application. The old app
worked something like this. Client boxes, using multiple methods (ftp, copy
over nfs mount, even rsh sessions) create a file on disk on the server,
which was either XML or a simple proprietary data format. The server was
done in python. It loops over a direcory, looking for new files, and
processes them into a MySQL database.

I patched the client (not python, but proprietary vendor apps, which are
glued together via TCL,) to just write the data to a TCP socket. Using
Twisted, I now have a test TCP server running, which uses LineReceiver, with
each line recieved added to a list, and a connection close callback that
writes the data to a file. This last part isn't part of the final app, and
it does block, i know. It's just for me to see the data we're gettiing. So
we have a working system now that transmits the files via a unified method,
to a server that can handle simultaneous connections. Cool. Now I have to do
real work with the data.

I have some architectural questions on how to proceed. Take the case of the
XML data. In the old version, it reads the XML into an ElementTree, uses
business logic to iterate through all or part of the tree, building a key,
value dict, that dict is passed to another object whose methods construct
sql inserts from the dict data and makes db calls. (That's simplified, the
current db layer is a huge rube goldberg).

So the easy way out, it seems to me, would be to make the LineRecever
callback build the ElementTree as I get it. Then wrap minimally modfied
versions of the code that processes the ElementTree to the dict, and the
dict to the database, in a callInThread or deferToThread call. Which is a
lot of use of the thread pool, which seems to violate the idea of a
low-overhead asynchronous event loop.

So is there a better way? For example, if I have a callback chain, when the
first one fires, do they all fire in sequence as the prior callback returns,
or does the chain yield to other events. If it does, I could potentially
break the code into smaller chunks, say so each one processed enough tree
data to generate 1 dict entry, and add the chunks as a callback chain on the
connectionLost?

Note: None of this code is tested, I'm just trying to get the basic logic
worked out.

Something like this?

def connectionLost(self):
    d = defer.Deferrred()
    d.addCallback(chunkOne)
    d.addCallback(chunkTwo)
    d.addCallback(chunkThree)
    d.addCallback(chunkN...)
    d.addCallback(finish)
    d.callback(self.myElementTree)

If I have a bunch of connections that close as simultaneously as the
implementation allows, does that sequence all fire first for one closing
connection, then the next, and so on? Or do they intermix?

Or do I need to set up a chain of deferreds with explicit scheduling?

Something like:

def connectionLost(self):
   self.myDict = {}
   finish()

def finish(self)
   d = defer.Deferred
   def realFinish(d):
         do stuff to clean up
   d.addCallback(ChunkThree)
   d.addCallback(realFinish)
   reactor.callLater(0, d.callback, None)

def chunkThree()
    d = defer.Deferred
    def realChunkThree(self.MyElementTree, self.myDict):
         do stuff to process one dict key
    d.addCallback(ChunkTwo)
    d.addCallback(realChunkThree)
    reactor.callLater(0, d.callback, None)
    return d

etc,

The above doesn't really seem much different than the first, it's just that
we schedule the calls explicitly, and pass data around in multiple
deferreds.

The  last thing I though about doing was something like this:

def connectionLost(self):
    myDict = {}
    d.defer.Deferred()
    d.addCallback(finish)
    myIterObj = self.myElementTree.getIterator()
    def processChunk():
        try:
            foo = myIterObj.next()
            do stuff with foo to process element to dict entry
        except StopIteration:
            d.callback(None)
        except:
            error handling stuff
        else
            reactor.callLater(0, processChunk)
    return d

Except I found some really similar code in an old thread, where Bob Ippolito
says, 'just use flow instead'
http://twistedmatrix.com/pipermail/twisted-python/2003-July/005013.html

But the current flow doc says: Don't use flow, write asynchronous code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070309/1925c925/attachment.html>

From mithrandi-twisted-python at mithrandi.za.net  Fri Mar  9 17:16:33 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 10 Mar 2007 02:16:33 +0200
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
Message-ID: <20070310001633.GA31905@mithrandi.za.net>

* Brian Costlow <brian.costlow at gmail.com> [2007-03-09 18:34:17 -0500]:

> 
> def connectionLost(self):
>    myDict = {}
>    d.defer.Deferred()
>    d.addCallback(finish)
>    myIterObj = self.myElementTree.getIterator()
>    def processChunk():
>        try:
>            foo = myIterObj.next()
>            do stuff with foo to process element to dict entry
>        except StopIteration:
>            d.callback(None)
>        except:
>            error handling stuff
>        else
>            reactor.callLater(0, processChunk)
>    return d

This is very similar to what twisted.internet.task.coiterate() does. See
the following:

    http://jcalderone.livejournal.com/24285.html
    http://twistedmatrix.com/documents/current/api/twisted.internet.task.html

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070310/2954f0e9/attachment.sig>

From andrew-twisted at puzzling.org  Fri Mar  9 18:02:30 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 10 Mar 2007 12:02:30 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
Message-ID: <20070310010230.GX14306@steerpike.home.puzzling.org>

Brian Costlow wrote:
[...]
> 
> So the easy way out, it seems to me, would be to make the LineRecever callback
> build the ElementTree as I get it. Then wrap minimally modfied versions of the
> code that processes the ElementTree to the dict, and the dict to the database,
> in a callInThread or deferToThread call. Which is a lot of use of the thread
> pool, which seems to violate the idea of a low-overhead asynchronous event
> loop.

Most databases don't really give you any choice but to use threads.
twisted.enterprise.adbapi helps a little.  Compared to the time it takes for the
database to do its stuff, I doubt you'll notice the thread overhead.

> So is there a better way? For example, if I have a callback chain, when the
> first one fires, do they all fire in sequence as the prior callback returns, or
> does the chain yield to other events. If it does, I could potentially break the
> code into smaller chunks, say so each one processed enough tree data to
> generate 1 dict entry, and add the chunks as a callback chain on the
> connectionLost?

Deferreds are completely independent of the reactor (i.e. event loop).  They
don't any magical yielding to the event loop or anything like that.  Deferreds
simply manage the chain of callbacks, and arrange for them to be called as soon
as the the data they're waiting on is there.

> Note: None of this code is tested, I'm just trying to get the basic logic
> worked out.
> 
> Something like this?
> 
> def connectionLost(self):
>     d = defer.Deferrred()
>     d.addCallback(chunkOne)
>     d.addCallback(chunkTwo)
>     d.addCallback(chunkThree)
>     d.addCallback(chunkN...)
>     d.addCallback(finish)
>     d.callback(self.myElementTree)
> 
> If I have a bunch of connections that close as simultaneously as the
> implementation allows, does that sequence all fire first for one closing
> connection, then the next, and so on? Or do they intermix?

They will all fire immediately.  It's just like doing:

    result = chunkOne(self.myElementTree)
    result = chunkTwo(result)
    result = chunkTwo(result)
    result = chunkThree(result)
    result = chunkN(result)
    ...
    finish(result)

i.e. synchronous.

> Or do I need to set up a chain of deferreds with explicit scheduling?
> 
> Something like:
> 
> def connectionLost(self):
>    self.myDict = {}
>    finish()
> 
> def finish(self)
>    d = defer.Deferred
>    def realFinish(d):
>          do stuff to clean up
>    d.addCallback(ChunkThree)
>    d.addCallback(realFinish)
>    reactor.callLater(0, d.callback, None)
> 
> def chunkThree()
>     d = defer.Deferred
>     def realChunkThree(self.MyElementTree, self.myDict):
>          do stuff to process one dict key
>     d.addCallback(ChunkTwo)
>     d.addCallback(realChunkThree)
>     reactor.callLater(0, d.callback, None)
>     return d

This is an awkward way to arrange it, but this would let the reactor do work
between the chunks, yes.

> The above doesn't really seem much different than the first, it's just that we
> schedule the calls explicitly, and pass data around in multiple deferreds. 
> 
> The  last thing I though about doing was something like this:
> 
> def connectionLost(self):
>     myDict = {}
>     d.defer.Deferred()
>     d.addCallback(finish)
>     myIterObj = self.myElementTree.getIterator()
>     def processChunk():
>         try:
>             foo = myIterObj.next()
>             do stuff with foo to process element to dict entry
>         except StopIteration:
>             d.callback(None)
>         except:
>             error handling stuff
>         else
>             reactor.callLater(0, processChunk)
>     return d

This approach can work a little better, yeah.

Note that returning a Deferred from connectionLost doesn't do anything.  What do
you want to wait on the deferred (i.e. what in your code is waiting on this
result)?  As far as I can tell, nothing.  If so, you probably don't want a
Deferred at all.

http://twistedmatrix.com/projects/core/documentation/examples/longex.py and
http://twistedmatrix.com/projects/core/documentation/examples/longex2.py

Have some basic examples of this sort of stuff.

There's also the "cooperator" module in
http://divmod.org/trac/wiki/DivmodEpsilon, but it's totally lacking in
documentation.  So who knows if it's really appropriate for this, or if you'll
be able to figure out how to use it.

> Except I found some really similar code in an old thread, where Bob Ippolito
> says, 'just use flow instead'
> http://twistedmatrix.com/pipermail/twisted-python/2003-July/005013.html
> 
> But the current flow doc says: Don't use flow, write asynchronous code.

In this case, twisted.internet.defer.inlineCallbacks could probably be used
instead of flow:

     @inlineCallbacks
     def doChunks():
         for chunk in chunks:
             # do the next chunk
             chunk()
             # yield to the event loop
             d = Deferred()
             reactor.callLater(0, d.callback, None)
             yield d

(The deferLater function in http://twistedmatrix.com/trac/ticket/1875 would make
this even shorter.)

Finally, are you sure you really need to chunk this processing at all?
ElementTree is pretty fast; it's entirely possible that breaking it into chunks
and going in-and-out of the event loop repeatedly will hurt your performance
more than just doing it all at once.  It might be a good idea to check if you
actually have a real performance problem (rather than just a theoretical one)
before you worry about solving it.

Similarly, consider just putting the computationally expensive stuff in a
deferToThread call and letting your OS worry about scheduling it.  If the
processing doesn't need to interact much with the event-driven code, then this
can be a good option.

-Andrew.




From mithrandi-twisted-python at mithrandi.za.net  Fri Mar  9 18:30:50 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 10 Mar 2007 03:30:50 +0200
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <20070310013050.GB31905@mithrandi.za.net>

* Andrew Bennetts <andrew-twisted at puzzling.org> [2007-03-10 12:02:30 +1100]:

> There's also the "cooperator" module in
> http://divmod.org/trac/wiki/DivmodEpsilon, but it's totally lacking in
> documentation.  So who knows if it's really appropriate for this, or if you'll
> be able to figure out how to use it.

cooperator is now in twisted.internet.task, see my other mail.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070310/46076f5f/attachment.sig>

From daedalus at eigenmagic.com  Fri Mar  9 22:48:45 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Sat, 10 Mar 2007 16:48:45 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous
	code for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <1173505725.26267.32.camel@fnord.melbourne.eigenmagic.net>

On Sat, 2007-03-10 at 12:02 +1100, Andrew Bennetts wrote:

> Finally, are you sure you really need to chunk this processing at all?
> ElementTree is pretty fast; it's entirely possible that breaking it into chunks
> and going in-and-out of the event loop repeatedly will hurt your performance
> more than just doing it all at once.  It might be a good idea to check if you
> actually have a real performance problem (rather than just a theoretical one)
> before you worry about solving it.

I agree. Premature optimisation is the root of all evil. I've done some
really dumb things trying to optimise too early, though I thought I was
being really clever at the time. If you're not sure how you're going to
do things, write a prototype first, then rewrite from scratch using
everything you learn from the prototype. You end up with better code in
the end, and it's faster and easier than trying to gradually migrate
old, poorly written code, in my experience.

-- 
Justin Warren <daedalus at eigenmagic.com>



From manlio_perillo at libero.it  Sat Mar 10 03:32:18 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Sat, 10 Mar 2007 11:32:18 +0100
Subject: [Twisted-Python] Need some pointers for writing asynchronous
	code	for Twisted app
In-Reply-To: <20070310010230.GX14306@steerpike.home.puzzling.org>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
Message-ID: <45F28932.8090508@libero.it>

Andrew Bennetts ha scritto:
> Brian Costlow wrote:
> [...]
>> So the easy way out, it seems to me, would be to make the LineRecever callback
>> build the ElementTree as I get it. Then wrap minimally modfied versions of the
>> code that processes the ElementTree to the dict, and the dict to the database,
>> in a callInThread or deferToThread call. Which is a lot of use of the thread
>> pool, which seems to violate the idea of a low-overhead asynchronous event
>> loop.
> 
> Most databases don't really give you any choice but to use threads.
> twisted.enterprise.adbapi helps a little.  Compared to the time it takes for the
> database to do its stuff, I doubt you'll notice the thread overhead.
> 

A pure asyncronous database API (written in Twisted), for PostgreSQL 
only, is pgasync
http://jamwt.com/pgasync/
and pglib
http://developer.berlios.de/projects/pglib/


Regards  Manlio Perillo



From wrobyn at cox.net  Sat Mar 10 07:24:49 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Sat, 10 Mar 2007 09:24:49 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>
References: <20070309215220.18920.1562892540.divmod.quotient.8@ohm>
Message-ID: <D13B7408-C731-4F00-AD71-5442CBCC0DB0@cox.net>

That throws an error if I import pollreactor in my code, then jid  
tries to import reactor, days there is already an instance or something

On Mar 9, 2007, at 4:52 PM, Jean-Paul Calderone wrote:

> On Fri, 9 Mar 2007 16:34:47 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>> and for some reason from twisted.words.protocols.jabber.jid
>> imports reactor but doesnt use it as far as I can tell, that  
>> caused  the below code to fail if you imported pollreactor.
>> Still would love to see an example of the below code converted to  
>> use pollreactor
>
> Easy, just import pollreactor first.
>
>>
>> On Mar 9, 2007, at 7:04 AM, Wrene Robyn wrote:
>>> Hi,
>>> Yes I am on os X. Could you show me how to convert my code below  
>>> to  use poll? Thanks!
>
> from twisted.internet import pollreactor
> pollreactor.install()
>
>>> [mport sys
>>> import socket
>>> import time
>>> import resource
>>> from threading import Thread
>>> from twisted.words.protocols.jabber import client, jid
>>> from twisted.words.xish import domish
>>> from twisted.internet import reactor
>>>
>>> [snip]
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sat Mar 10 08:54:42 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 10 Mar 2007 10:54:42 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <D13B7408-C731-4F00-AD71-5442CBCC0DB0@cox.net>
Message-ID: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>

On Sat, 10 Mar 2007 09:24:49 -0500, Wrene Robyn <wrobyn at cox.net> wrote:
>That throws an error if I import pollreactor in my code, then jid  tries to 
>import reactor, days there is already an instance or something

You'll have to provide more information than this.  The behavior you describe
isn't what should happen given the program snippet below, nor what happens
when I simplify it to just this:

  exarkun at boson:~$ python
  Python 2.4.3 (#2, Oct  6 2006, 07:52:30)
  [GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
  Type "help", "copyright", "credits" or "license" for more information.
  >>> from twisted.internet import pollreactor
  >>> pollreactor.install()
  >>> from twisted.words.protocols.jabber import jid
  >>> # No error

Generally when you encounter a problem you need help with, the best thing to do
is to create the simplest possible example which demonstrates the problem and
include it with your question.  Without this, responders have to guess at what
you're doing, which leads to incorrect, irrelevant, or ambiguous answers.

Jean-Paul



From brian.costlow at gmail.com  Sat Mar 10 11:55:30 2007
From: brian.costlow at gmail.com (Brian Costlow)
Date: Sat, 10 Mar 2007 13:55:30 -0500
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <45F28932.8090508@libero.it>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
	<45F28932.8090508@libero.it>
Message-ID: <89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>

Thanks everyone for your comments, you were all a lot of help.

Andrew, I was aware that the deferred didn't go anywhere, I oversimplified
things in the example, in the original design in my head, the code that
actually does the db calls was waiting on the deferred. Actually, the way
it's written, it never even runs, I left out the first call to
processChunk() necessary to start the iteration. But your comments helped a
lot.

My concern wasn't ElementTrees built in stuff, but 300+ line spaghetti
procedure that massages the element tree data into a dictionary. That needs
to be rewritten anyway.

I messed around this morning, and here's what I have done. I compiled
cElementTree onto the test box. The LineReceiver uses
cElementTree.XMLTreeBuilder.feed() and builds the tree on the fly.

At connectionClose it calls a method that runs the business logic routine in
a thread, using threads.deferToThread, and adding a callback; said callback
executes the db code. That still blocks for now.

So, my current plan is to refactor the tree-->dict code, but call that in a
separate thread. Rewite the dict --> db layer. The only question I have, is
since it's a long series of insert/update calls in which I don't need
results other than, 'it worked' , is, after reading the comments, it seems
like I might just best be served by writing a series of straight dbi calls;
and wrapping that all in one call to thread.callInThread.

The db is MySQL, and feeds a PHP-based reporting app, so I can't use
pgasync.

Thanks again all.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070310/cd040366/attachment.html>

From andrew-twisted at puzzling.org  Sat Mar 10 18:35:24 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sun, 11 Mar 2007 12:35:24 +1100
Subject: [Twisted-Python] Need some pointers for writing asynchronous code
	for Twisted app
In-Reply-To: <89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>
References: <89d8b1b00703091534s741352dcq39c75e1672015741@mail.gmail.com>
	<20070310010230.GX14306@steerpike.home.puzzling.org>
	<45F28932.8090508@libero.it>
	<89d8b1b00703101055k5ebb9bctf8747dcdf125748f@mail.gmail.com>
Message-ID: <20070311013524.GB14306@steerpike.home.puzzling.org>

Brian Costlow wrote:
[...]
> So, my current plan is to refactor the tree-->dict code, but call that in a
> separate thread. Rewite the dict --> db layer. The only question I have, is
> since it's a long series of insert/update calls in which I don't need results
> other than, 'it worked' , is, after reading the comments, it seems like I might
> just best be served by writing a series of straight dbi calls; and wrapping
> that all in one call to thread.callInThread.
> 
> The db is MySQL, and feeds a PHP-based reporting app, so I can't use pgasync.

You can use twisted.enterprise.adbapi, though.  You'd want to use
ConnectionPool.runInteraction.  It might be slightly easier than doing it
yourself with callInThread.

-Andrew.




From exarkun at twistedmatrix.com  Sat Mar 10 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Mar 2007 05:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1173589502.04.1827094710@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-04 through 2007-03-11
Bugs opened: 14    Bugs closed: 13  Total open bugs: 878 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       +2  |Highest:  -5          |Core:                +3  
|Enhancement:  +0  |High:     +1          |Lore:                +1  
                   |Normal:   +4          |Pydoctor:            +0  
                   |Low:      +2          |Release Management:  +0  
                                          |Trial:               +0  
                                          |Web:                 +1  
                                          |Web2:                -3  
                                          |Words:               +0  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2509] removing event triggers while in an event trigger callback does bad things (opened by jack)
    defect          core       http://twistedmatrix.com/trac/ticket/2509

                    ===== High =====
[#2507] missing 'plugins' directory breaks trial (opened by mlum at redhat.com)
    defect          trial      http://twistedmatrix.com/trac/ticket/2507

                    ===== Normal =====
[#2504] Parameterize reactor in ircsupport to simplify testing (opened by exarkun)
    enhancement     words      http://twistedmatrix.com/trac/ticket/2504

[#2505] twisted.xmlrpc.XMLRPC.render need more error handling (opened by yasusii)
    defect          web        http://twistedmatrix.com/trac/ticket/2505

[#2508] TypeError: <lambda>() got multiple values for keyword argument 'asc' (opened by tsal) (CLOSED, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/2508

[#2510] add a howto explaining how to communicate between two protocol instances (opened by exarkun)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2510

[#2511] AttributeError when generating docs with pydoctor (opened by kumar303) (CLOSED, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2511

[#2513] Infinite recursion in udp write() function (opened by p1mrx)
    defect          core       http://twistedmatrix.com/trac/ticket/2513

[#2514] Documentation bug in the list of possible <span/> classes (opened by edwards)
    defect          lore       http://twistedmatrix.com/trac/ticket/2514

[#2515] "python setup.py build" fails for Twisted (opened by edwards)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#2516] wxreactor and wx.FileDialog stops twisted reactor loop (opened by line72)
    defect          core       http://twistedmatrix.com/trac/ticket/2516

[#2515] "python setup.py build" fails for Twisted (opened by edwards)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

                    ===== Low =====
[#2506] Memcached client (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2506

[#2512] simple typo in twisted/internet/error.py (opened by thomasvs)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2512



Closed Bugs
______________________
                    ===== Highest =====
[#2104] HTTP digest authentication forced for each page refresh (opened by Cyrus Daboo, closed by dreid, fixed)
    defect          web2       http://twistedmatrix.com/trac/ticket/2104

[#2460] HTTPAuthResource doesn't provide any way to support anonymous access. (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2460

[#2172] kqueue connection failure results in bad fd message (opened by ghazel, closed by alus, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2172

[#2495] Trial never passes a traceback to pyunit-API TestResult objects (opened by jml, closed by jml, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2495

[#2461] words.protocols.jabber.sasl uses base64.b64encode, which breaks compatibility with Python 2.3.x (opened by murphy_slaw, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2461

[#460 ] [PATCH] example cred checker for pypgsql/adbapi. (opened by matiu, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/460

                    ===== Normal =====
[#2280] DigestCredential needs a new interface that supports verifying credentials when given a prehashed user:realm:password (opened by dreid, closed by dreid, fixed)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2280

[#2508] TypeError: <lambda>() got multiple values for keyword argument 'asc' (opened by tsal, closed by exarkun, wontfix)
    defect          release management http://twistedmatrix.com/trac/ticket/2508

[#2511] AttributeError when generating docs with pydoctor (opened by kumar303, closed by mwh, fixed)
    defect          pydoctor   http://twistedmatrix.com/trac/ticket/2511

[#2247] Wrong signature for addCallbacks in the Deferred Reference (opened by zseil, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2247

[#1603] Typo in client howto (opened by exarkun, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1603

[#2515] "python setup.py build" fails for Twisted (opened by edwards, closed by exarkun, )
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#1932] Make twisted installable with easy_install / setuptools (opened by philn, closed by radix, duplicate)
    enhancement     core       http://twistedmatrix.com/trac/ticket/1932





From john at johnnypops.demon.co.uk  Sun Mar 11 09:51:18 2007
From: john at johnnypops.demon.co.uk (John Popplewell)
Date: Sun, 11 Mar 2007 15:51:18 +0000
Subject: [Twisted-Python] Couple of conch bug-fixes
Message-ID: <20070311155118.GA17463@rosa.blake>

Hi,

I've been using the Twisted SSH server and client code and found a
couple of bugs in the SFTP code:

In 'twisted/conch/ssh/filetransfer.py':

  FILEXFER_ATTR_ACMODTIME     0x00000009

should be replaced by this:

  FILEXFER_ATTR_ACMODTIME     0x00000008

According to this document anyway:
http://tools.ietf.org/html/draft-ietf-secsh-filexfer-02#section-5

This makes the 'preserve timestamp' option in WinSCP3 work.


In 'twisted/conch/scripts/cftp.py':

  d = self.client.openFile(remote, filetransfer.FXF_WRITE|filetransfer.FXF_CREAT, {})

should be replaced, in *both* places, by something like this:

  flags = filetransfer.FXF_WRITE|filetransfer.FXF_CREAT|filetransfer.FXF_TRUNC
  d = self.client.openFile(remote, flags, {})

This makes file tranfer work when an *existing* file is being
over-written by a *smaller* file. It took me a while to find this one :-)

Hope this is a suitable place for these minor fixes,

regards,
John.




From wrobyn at cox.net  Sun Mar 11 17:43:15 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Sun, 11 Mar 2007 19:43:15 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>
References: <20070310155442.18920.1186905637.divmod.quotient.400@ohm>
Message-ID: <5A9F82CC-6B5D-4DFB-A7AF-F7D9364E4F04@cox.net>

Thanks for all your help thus far. Here is my code which does run  
with normal select reactor. How to switch it to use poll reactor?  
that is really the crux of my problem.

import sys
import socket
import time
import resource
from threading import Thread
from twisted.words.protocols.jabber import client, jid
from twisted.words.xish import domish
from twisted.internet import reactor

resource.setrlimit(8,[65000,65000])
class testit():

     def authd(xmlstream):
         print "authenticated"

         presence = domish.Element(('jabber:client','presence'))
         xmlstream.send(presence)
     #xmlstream.addObserver('/message',  debug)
     #xmlstream.addObserver('/presence', debug)
     #xmlstream.addObserver('/iq',       debug)

     def debug(elem):
         print elem.toXml().encode('utf-8')
         print "="*20
     for i in range(1,2000):
         print i
         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
         factory = client.basicClientFactory(myJid, 'test')
         factory.addBootstrap('//event/stream/authd',authd)
         reactor.connectTCP('jbrsrvrname',5222,factory)

     reactor.run()

current = testit()
current.start()

On Mar 10, 2007, at 10:54 AM, Jean-Paul Calderone wrote:

> On Sat, 10 Mar 2007 09:24:49 -0500, Wrene Robyn <wrobyn at cox.net>  
> wrote:
>> That throws an error if I import pollreactor in my code, then jid   
>> tries to import reactor, days there is already an instance or  
>> something
>
> You'll have to provide more information than this.  The behavior  
> you describe
> isn't what should happen given the program snippet below, nor what  
> happens
> when I simplify it to just this:
>
>  exarkun at boson:~$ python
>  Python 2.4.3 (#2, Oct  6 2006, 07:52:30)
>  [GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
>  Type "help", "copyright", "credits" or "license" for more  
> information.
>  >>> from twisted.internet import pollreactor
>  >>> pollreactor.install()
>  >>> from twisted.words.protocols.jabber import jid
>  >>> # No error
>
> Generally when you encounter a problem you need help with, the best  
> thing to do
> is to create the simplest possible example which demonstrates the  
> problem and
> include it with your question.  Without this, responders have to  
> guess at what
> you're doing, which leads to incorrect, irrelevant, or ambiguous  
> answers.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at divmod.com  Sun Mar 11 19:02:31 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 11 Mar 2007 20:02:31 -0500
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <5A9F82CC-6B5D-4DFB-A7AF-F7D9364E4F04@cox.net>
Message-ID: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>

On Sun, 11 Mar 2007 19:43:15 -0400, Wrene Robyn <wrobyn at cox.net> wrote:
>Thanks for all your help thus far. Here is my code which does run  with 
>normal select reactor. How to switch it to use poll reactor?  that is really 
>the crux of my problem.

As in my previous post, you switch it to the poll reactor by importing and installing the poll reactor before the default reactor is imported and installed.  You can do this by adding these two lines:

    from twisted.internet import pollreactor
    pollreactor.install()

to the program anywhere before the default reactor is imported.  For example, you could add them before the "import sys" line.

>
>import sys
>import socket
>import time
>import resource
>from threading import Thread
>from twisted.words.protocols.jabber import client, jid
>from twisted.words.xish import domish
>from twisted.internet import reactor
>
>resource.setrlimit(8,[65000,65000])
>class testit():
>
>     def authd(xmlstream):
>         print "authenticated"
>
>         presence = domish.Element(('jabber:client','presence'))
>         xmlstream.send(presence)
>     #xmlstream.addObserver('/message',  debug)
>     #xmlstream.addObserver('/presence', debug)
>     #xmlstream.addObserver('/iq',       debug)
>
>     def debug(elem):
>         print elem.toXml().encode('utf-8')
>         print "="*20

Note that this code:

>     for i in range(1,2000):
>         print i
>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>         factory = client.basicClientFactory(myJid, 'test')
>         factory.addBootstrap('//event/stream/authd',authd)
>         reactor.connectTCP('jbrsrvrname',5222,factory)
>
>     reactor.run()

is all at the class definition level, so it is executed when the class
is defined.  This means you are starting the reactor before the class
definition has even completed.  You probably don't want to do this.  All
the code after this point doesn't even get a chance to run until the
reactor stops.

>
>current = testit()
>current.start()
>

Jean-Paul



From itamar at itamarst.org  Sun Mar 11 20:34:28 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 11 Mar 2007 22:34:28 -0400
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <20070311155118.GA17463@rosa.blake>
References: <20070311155118.GA17463@rosa.blake>
Message-ID: <1173666869.10799.4.camel@localhost.localdomain>

On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
> Hi,
> 
> I've been using the Twisted SSH server and client code and found a
> couple of bugs in the SFTP code:

Could you please add them to our issue tracker
(http://twistedmatrix.com) so they don't get lost? Thanks!




From jarek.zgoda at sensisoft.com  Mon Mar 12 08:41:04 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Mon, 12 Mar 2007 15:41:04 +0100
Subject: [Twisted-Python] Strange twistd behaviour
Message-ID: <45F56680.8090103@sensisoft.com>

I have an application ran as a twistd plugin. It spawns a "worker 
thread" that gets objects from Queue.Queue and runs in a "while 1: " 
loop. The problem I got is that when I run the application without 
daemonizing it (using -n switch for twistd) everything works fine, but 
as soon as it is run as daemon, the thread does not perform the 
"looping". I am bit stuck, as I don't know even where to look for 
possible causes... Can anybody put some light here?

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From exarkun at divmod.com  Mon Mar 12 08:56:04 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 09:56:04 -0500
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F56680.8090103@sensisoft.com>
Message-ID: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>

On Mon, 12 Mar 2007 15:41:04 +0100, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>I have an application ran as a twistd plugin. It spawns a "worker thread" 
>that gets objects from Queue.Queue and runs in a "while 1: " loop. The 
>problem I got is that when I run the application without daemonizing it 
>(using -n switch for twistd) everything works fine, but as soon as it is run 
>as daemon, the thread does not perform the "looping". I am bit stuck, as I 
>don't know even where to look for possible causes... Can anybody put some 
>light here?
>

If you are starting the thread before the process daemonizes, you might want
to try starting it after daemonization instead and see if that helps.

You can do this by starting the thread in the startService method of a Service.

Combining forking and threading usually leads to suffering.

Jean-Paul



From andrew-twisted at puzzling.org  Mon Mar 12 09:16:56 2007
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 13 Mar 2007 02:16:56 +1100
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F56680.8090103@sensisoft.com>
References: <45F56680.8090103@sensisoft.com>
Message-ID: <20070312151656.GH14306@steerpike.home.puzzling.org>

Jarek Zgoda wrote:
> I have an application ran as a twistd plugin. It spawns a "worker 
> thread" that gets objects from Queue.Queue and runs in a "while 1: " 
> loop. The problem I got is that when I run the application without 
> daemonizing it (using -n switch for twistd) everything works fine, but 
> as soon as it is run as daemon, the thread does not perform the 
> "looping". I am bit stuck, as I don't know even where to look for 
> possible causes... Can anybody put some light here?

You probably spawn the thread in the wrong process.

You should make sure the thread is spawned by the reactor, e.g. by doing it
from a startService method or using reactor.callWhenRunning.

-Andrew.




From jarek.zgoda at sensisoft.com  Mon Mar 12 09:24:26 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Mon, 12 Mar 2007 16:24:26 +0100
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
References: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
Message-ID: <45F570AA.7040503@sensisoft.com>

Jean-Paul Calderone napisał(a):

> If you are starting the thread before the process daemonizes, you might 
> want
> to try starting it after daemonization instead and see if that helps.
> 
> You can do this by starting the thread in the startService method of a 
> Service.

I see, I added the code for creating the thread in "after startup" event 
trigger and now it forks fine, thank you.

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From glyph at divmod.com  Mon Mar 12 10:28:32 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Mar 2007 16:28:32 -0000
Subject: [Twisted-Python] Strange twistd behaviour
In-Reply-To: <45F570AA.7040503@sensisoft.com>
References: <20070312145604.18920.1597717110.divmod.quotient.1330@ohm>
	<45F570AA.7040503@sensisoft.com>
Message-ID: <20070312162832.7769.1305634573.divmod.xquotient.708@joule.divmod.com>


On 03:24 pm, jarek.zgoda at sensisoft.com wrote:
>Jean-Paul Calderone napisa2(a):
>>If you are starting the thread before the process daemonizes, you 
>>might want
>>to try starting it after daemonization instead and see if that helps.
>>
>>You can do this by starting the thread in the startService method of a 
>>Service.
>
>I see, I added the code for creating the thread in "after startup" 
>event trigger and now it forks fine, thank you.

You might also consider using the reactor's built-in thread support, 
reactor.callInThread, rather than starting your own worker thread.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070312/4d47d92c/attachment.html>

From john at johnnypops.demon.co.uk  Mon Mar 12 11:35:28 2007
From: john at johnnypops.demon.co.uk (John Popplewell)
Date: Mon, 12 Mar 2007 17:35:28 +0000
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <1173666869.10799.4.camel@localhost.localdomain>
References: <20070311155118.GA17463@rosa.blake>
	<1173666869.10799.4.camel@localhost.localdomain>
Message-ID: <20070312173528.GB17463@rosa.blake>

On Sun, Mar 11, 2007 at 10:34:28PM -0400, Itamar Shtull-Trauring wrote:
> On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
> > Hi,
> > 
> > I've been using the Twisted SSH server and client code and found a
> > couple of bugs in the SFTP code:
> 
> Could you please add them to our issue tracker
> (http://twistedmatrix.com) so they don't get lost? Thanks!
> 
Done:
http://twistedmatrix.com/trac/ticket/2519




From exarkun at divmod.com  Mon Mar 12 12:36:28 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 13:36:28 -0500
Subject: [Twisted-Python] Couple of conch bug-fixes
In-Reply-To: <20070312173528.GB17463@rosa.blake>
Message-ID: <20070312183628.18920.451892512.divmod.quotient.1409@ohm>

On Mon, 12 Mar 2007 17:35:28 +0000, John Popplewell <john at johnnypops.demon.co.uk> wrote:
>On Sun, Mar 11, 2007 at 10:34:28PM -0400, Itamar Shtull-Trauring wrote:
>> On Sun, 2007-03-11 at 15:51 +0000, John Popplewell wrote:
>> > Hi,
>> >
>> > I've been using the Twisted SSH server and client code and found a
>> > couple of bugs in the SFTP code:
>>
>> Could you please add them to our issue tracker
>> (http://twistedmatrix.com) so they don't get lost? Thanks!
>>
>Done:
>http://twistedmatrix.com/trac/ticket/2519
>

Thanks!

Jean-Paul



From srock258 at gmail.com  Mon Mar 12 13:22:38 2007
From: srock258 at gmail.com (Sean Roark)
Date: Mon, 12 Mar 2007 14:22:38 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
Message-ID: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>

I would love to migrate my asyncore based applications to Twisted but the
learning curve seems quite steep. Anybody have a good tutorial? Migrating
asyncore.dispatcher objects to twisted protocols examples would be awesome.

-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070312/ea2a3589/attachment.html>

From Benjamin.Rutt at gs.com  Mon Mar 12 13:44:41 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Mon, 12 Mar 2007 15:44:41 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>

Hi.
 
Anyone have any pointers as to how I can get some of my questions
answered below?  I had hoped to get some response.  Did I not use the
proper etiquitte?  Or there is some expert on the IPushProducer
mechanism or the author of page 
 
http://twistedmatrix.com/projects/core/documentation/howto/producers.htm
l
 
that I can be referred to that perhaps isn't reading this list?

Thanks,
Benjamin Rutt

________________________________

	From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rutt,
Benjamin
	Sent: Tuesday, March 06, 2007 12:04 PM
	To: twisted-python at twistedmatrix.com
	Subject: [Twisted-Python] Learning about IPushProducer
	
	

	When running the following code (my 2nd twisted program!), it
works as I had hoped - it doesn't starve any clients that want to
receive data back, even with a simultaneously active really long
streaming server-to-client communication (i.e. one piggy client asking
for millions of bytes).  i.e. another client can get in and ask for just
a few bytes while a large payload is being delivered to a different
client.  Which is great!

	Here's a sample interaction from the client side: 

	$ telnet localhost 8007 
	Trying 127.0.0.1... 
	Connected to localhost. 
	Escape character is '^]'. 
	1 
	x 
	2 
	xx 
	3 
	xxx 
	10 
	xxxxxxxxxx 
	99999 
	
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	[...lots of x's...] 
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
	bye 
	Connection closed by foreign host. 
	$ 

	So I have 2 questions on my code: 

	1) am I doing anything wrong in setting up the plumbing? 
	2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

	Here is the code, and output from the server is at the end.
Thanks -- Benjamin 

	#!/usr/bin/env python 
	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime 
	import socket, string, random, time, traceback, shutil, popen2 

	from zope.interface import implements 
	from twisted.internet import protocol, defer, interfaces, error,
reactor 
	from twisted.internet.protocol import Protocol, Factory 
	from twisted.protocols.basic import LineReceiver 

	class NonStarvingXGiver: 
	    implements(interfaces.IPushProducer) 
	    def __init__(self, howmany, consumer): 
	        self.howmany = howmany 
	        self.sent_already = 0 
	        self.paused = False 
	        self.consumer = consumer 
	    def beginSendingXs(self): 
	        self.deferred = deferred = defer.Deferred() 
	        self.consumer.registerProducer(self, False) 
	        return deferred 
	    def pauseProducing(self): 
	        print 'pauseProducing: invoked' 
	        self.paused = True 
	    def resumeProducing(self): 
	        print 'resumeProducing: invoked' 
	        self.paused = False 
	        maxchunksz = 1024 
	        while not self.paused and self.howmany >
self.sent_already: 
	            chunksz = min(maxchunksz, self.howmany -
self.sent_already) 
	            self.consumer.write('x' * chunksz) 
	            self.sent_already += chunksz 
	        if self.howmany == self.sent_already: 
	            self.consumer.write('\n') 
	            self.consumer.unregisterProducer() 
	            print 'resumeProducing: exiting for the last time' 
	    def stopProducing(self): 
	        print 'stopProducing: invoked' 
	        self.consumer.unregisterProducer() 
	        
	class xgiver(LineReceiver): 
	    def lineReceived(self, howmany): 
	        print 'got line [%s] from client [%s]' % (howmany, 
	
self.transport.getPeer()) 
	        if howmany == 'bye': 
	            print 'goodbye to', self.transport.getPeer() 
	            self.transport.loseConnection() 
	            return 
	        try: 
	            howmany = int(howmany) 
	            s = NonStarvingXGiver(howmany, self.transport) 
	            s.beginSendingXs() 
	        except Exception, ex: 
	            self.transport.write("invalid input " + howmany +
"\n") 

	# Next lines are magic: 
	factory = Factory() 
	factory.protocol = xgiver 

	# 8007 is the port you want to run under. Choose something >1024

	reactor.listenTCP(8007, factory) 
	reactor.run() 


	
------------------------------------------------------------------- 
	Server output: 

	$ ./xgiver.py 
	got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]

	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [99999] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	resumeProducing: invoked 
	pauseProducing: invoked 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [bye] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	goodbye to IPv4Address(TCP, '127.0.0.1', 51007) 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070312/81569638/attachment.html>

From leszczynscy at yahoo.com  Mon Mar 12 10:49:12 2007
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Mon, 12 Mar 2007 09:49:12 -0700 (PDT)
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
Message-ID: <20070312164912.30866.qmail@web50605.mail.re2.yahoo.com>

Hi,


I need to launch the twisted based FTP server as a part of my application. I could spawn/control a separate process with subprocess/popen2/etc. However for other reasons I would rather prefer to have it as a separate thread of my app. The question is how to convert mktap generated file into a piece of python code.

Thx, Andy





From exarkun at divmod.com  Mon Mar 12 14:51:50 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 15:51:50 -0500
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
In-Reply-To: <20070312164912.30866.qmail@web50605.mail.re2.yahoo.com>
Message-ID: <20070312205151.18920.430414936.divmod.quotient.1465@ohm>

On Mon, 12 Mar 2007 09:49:12 -0700 (PDT), Andy Leszczynski <leszczynscy at yahoo.com> wrote:
>Hi,
>
>I need to launch the twisted based FTP server as a part of my application. I could spawn/control a separate process with subprocess/popen2/etc. However for other reasons I would rather prefer to have it as a separate thread of my app. The question is how to convert mktap generated file into a piece of python code.

You can't run just an FTP server in a thread, but you can run the whole
reactor in a thread.  If the rest of your application doesn't use Twisted,
this might make sense.  Of course, if the rest of your application does
use Twisted, you don't need to get threads involved.

The threaded approach looks something vaguely like this (untested):

  from threading import Thread

  from twisted.tap.ftp import makeService
  from twisted.internet import reactor

  svc = makeService({configuration options})
  reactor.callWhenRunning(svc.startService)
  Thread(target=reactor.run, args=(False,)).start()

  ...
  



From exarkun at divmod.com  Mon Mar 12 15:09:56 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 16:09:56 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070312210956.18920.1418770739.divmod.quotient.1476@ohm>

On Mon, 12 Mar 2007 15:44:41 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>Hi.
>
>Anyone have any pointers as to how I can get some of my questions
>answered below?  I had hoped to get some response.  Did I not use the
>proper etiquitte?  Or there is some expert on the IPushProducer
>mechanism or the author of page

Sorry, your question was big and challenging to approach.

> [snip]
>
>	When running the following code (my 2nd twisted program!), it
>works as I had hoped - it doesn't starve any clients that want to
>receive data back, even with a simultaneously active really long
>streaming server-to-client communication (i.e. one piggy client asking
>for millions of bytes).  i.e. another client can get in and ask for just
>a few bytes while a large payload is being delivered to a different
>client.  Which is great!
>
>	Here's a sample interaction from the client side:
>
>	$ telnet localhost 8007
>	Trying 127.0.0.1...
>	Connected to localhost.
>	Escape character is '^]'.
>	1
>	x
>	2
>	xx
>	3
>	xxx
>	10
>	xxxxxxxxxx
>	99999
>
>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>
>	[...lots of x's...]
>	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>	bye
>	Connection closed by foreign host.
>	$
>
>	So I have 2 questions on my code:
>
>	1) am I doing anything wrong in setting up the plumbing?
>	2) does pauseProducing() get called by another thread whilst
>resumeProducing() is running?  (I believe it must, otherwise my
>resumeProducing() would only be entered once).  If so I should have an
>appropriate mutex around the read/write of self.pause, no?
>
>	Here is the code, and output from the server is at the end.
>Thanks -- Benjamin
>
>	#!/usr/bin/env python
>	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
>datetime
>	import socket, string, random, time, traceback, shutil, popen2
>
>	from zope.interface import implements
>	from twisted.internet import protocol, defer, interfaces, error,
>reactor
>	from twisted.internet.protocol import Protocol, Factory
>	from twisted.protocols.basic import LineReceiver
>
>	class NonStarvingXGiver:
>	    implements(interfaces.IPushProducer)
>	    def __init__(self, howmany, consumer):
>	        self.howmany = howmany
>	        self.sent_already = 0
>	        self.paused = False
>	        self.consumer = consumer
>	    def beginSendingXs(self):
>	        self.deferred = deferred = defer.Deferred()
>	        self.consumer.registerProducer(self, False)
>	        return deferred
>	    def pauseProducing(self):
>	        print 'pauseProducing: invoked'
>	        self.paused = True
>	    def resumeProducing(self):
>	        print 'resumeProducing: invoked'
>	        self.paused = False
>	        maxchunksz = 1024

This loop:

>	        while not self.paused and self.howmany >
>self.sent_already:
>	            chunksz = min(maxchunksz, self.howmany -
>self.sent_already)
>	            self.consumer.write('x' * chunksz)
>	            self.sent_already += chunksz

is a bit atypical, I think.  The reason it is eventually stopping
is that your code is being invoked re-entrantly by the consumer as
soon as it decides its buffer is full.  I'm not sure the loop is
/wrong/, but it is a bit surprising.  You don't need a mutex here,
since it's single threaded, but you do need to be aware that your
code can be re-entered within a single thread.

Does that answer your questions?

> [snip]

Jean-Paul



From duncan.mcgreggor at gmail.com  Mon Mar 12 15:39:31 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 12 Mar 2007 15:39:31 -0600
Subject: [Twisted-Python] Vote: The Engine of Your Internet
Message-ID: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>

Vote now!

In the spirit of all contests that are thinly disguised high school
popularity contests, there is a poll up on jyte.com, and we need your
help!

 http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet

Because, if we loose... well... the Jocks will get to claim the
sandpit for their debauched parties, and where will we host our
late-night chess and math club parties?

d



From Benjamin.Rutt at gs.com  Mon Mar 12 15:46:54 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Mon, 12 Mar 2007 17:46:54 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <20070312210956.18920.1418770739.divmod.quotient.1476@ohm>
References: <C8853DE689283B47B5D348BC33E06193043D64F4@gsmbnmp04es.firmwide.corp.gs.com>
	<20070312210956.18920.1418770739.divmod.quotient.1476@ohm>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D64F9@gsmbnmp04es.firmwide.corp.gs.com>

    Sorry, your question was big and challenging to approach.

Understood, thanks.  I should have pared it down.

    This loop:
    
    >	        while not self.paused and self.howmany >
    >self.sent_already:
    >	            chunksz = min(maxchunksz, self.howmany -
    >self.sent_already)
    >	            self.consumer.write('x' * chunksz)
    >	            self.sent_already += chunksz
    
    is a bit atypical, I think.  The reason it is eventually stopping
    is that your code is being invoked re-entrantly by the consumer as
    soon as it decides its buffer is full.  I'm not sure the loop is
    /wrong/, but it is a bit surprising.  You don't need a mutex here,
    since it's single threaded, but you do need to be aware that your
    code can be re-entered within a single thread.
    
    Does that answer your questions?

Yes, thank you, it answers some of them but it raises more :).  I see,
it's self.consumer.write(...) that ends up calling the pause method.  So
that's how it's reentrant.  I knew twisted wasn't multithreaded in this
case.  Makes sense.

I have since made my resumeProducing() code loop for up to 100 (or 500,
or 1000 etc.) iterations and then return.  Thus I'm treating
resumeProducing as if it should "produce a chunk larger than 1 byte but
smaller that the whole dataset" then return.  How is this approach, does
it better match the intention of the producer/consumer system vs. the
"loop forever until paused" scheme I had earlier?

A final question -- is it safe for my code to ever call pauseProducing,
stopProducing, resumeProducing directly?  Or that will mess up the
balance of the twisted universe?  (I'm thinking that the calls to these
3 methods should only originate "from within twisted" in case the whole
producer/consumer system is tracking how many times it calls each one
etc.)  I don't plan on calling them directly, but want to critically
review in an informed way my colleague's code which does this.

Thank you so much for the response!

Benjamin Rutt



From leszczynscy at yahoo.com  Mon Mar 12 15:51:41 2007
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Mon, 12 Mar 2007 14:51:41 -0700 (PDT)
Subject: [Twisted-Python] Running FTP server as a thread (as opposed to
	twistd -f ftp.tap)
Message-ID: <20070312215141.27106.qmail@web50606.mail.re2.yahoo.com>

>You can't run just an FTP server in a thread, but you can run the whole
>reactor in a thread.

This is what I meant - I have a hybrid app so threads are only solution (for now).


>The threaded approach looks something vaguely like this (untested):
[...]

thx a lot - work like a charm.







From exarkun at divmod.com  Mon Mar 12 16:18:43 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 12 Mar 2007 17:18:43 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64F9@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070312221843.18920.1567056401.divmod.quotient.1497@ohm>

On Mon, 12 Mar 2007 17:46:54 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>    Sorry, your question was big and challenging to approach.
>
>Understood, thanks.  I should have pared it down.
>
>    This loop:
>
>    >	        while not self.paused and self.howmany >
>    >self.sent_already:
>    >	            chunksz = min(maxchunksz, self.howmany -
>    >self.sent_already)
>    >	            self.consumer.write('x' * chunksz)
>    >	            self.sent_already += chunksz
>
>    is a bit atypical, I think.  The reason it is eventually stopping
>    is that your code is being invoked re-entrantly by the consumer as
>    soon as it decides its buffer is full.  I'm not sure the loop is
>    /wrong/, but it is a bit surprising.  You don't need a mutex here,
>    since it's single threaded, but you do need to be aware that your
>    code can be re-entered within a single thread.
>
>    Does that answer your questions?
>
>Yes, thank you, it answers some of them but it raises more :).  I see,
>it's self.consumer.write(...) that ends up calling the pause method.  So
>that's how it's reentrant.  I knew twisted wasn't multithreaded in this
>case.  Makes sense.
>
>I have since made my resumeProducing() code loop for up to 100 (or 500,
>or 1000 etc.) iterations and then return.  Thus I'm treating
>resumeProducing as if it should "produce a chunk larger than 1 byte but
>smaller that the whole dataset" then return.  How is this approach, does
>it better match the intention of the producer/consumer system vs. the
>"loop forever until paused" scheme I had earlier?

That's more like what I expect to see in a resumeProducing, yea.  Of course,
paused might still get set before your loop decides to exit, if you are no
longer checking paused.  This isn't disasterous, but it means some
information about what a good amount of stuff to keep in memory is.

I think the most common thing for a resumeProducing implementation to do is
build up a chunk of data and then call write on the consumer just once.  So
it doesn't end up mattering if you get paused or not, since you're done any
way by the time that happens.

I think you have the basic idea of how producers should work, though, and
now I'm just blabbing. :)

>
>A final question -- is it safe for my code to ever call pauseProducing,
>stopProducing, resumeProducing directly?  Or that will mess up the
>balance of the twisted universe?  (I'm thinking that the calls to these
>3 methods should only originate "from within twisted" in case the whole
>producer/consumer system is tracking how many times it calls each one
>etc.)  I don't plan on calling them directly, but want to critically
>review in an informed way my colleague's code which does this.

The consumer you register the producer with basically gets control of those
methods for as long as the producer remains registered.  They're there for
it to communicate its needs with the producer, so having any other code call
them is probably bad in general, although it might work in specific cases.

>
>Thank you so much for the response!
>

No problem. :)

Jean-Paul




From jkakar at kakar.ca  Mon Mar 12 16:35:35 2007
From: jkakar at kakar.ca (Jamu Kakar)
Date: Mon, 12 Mar 2007 15:35:35 -0700
Subject: [Twisted-Python] Streaming in AMP
Message-ID: <45F5D5B7.4030803@kakar.ca>

Hi,

Glyph has been kind enough to share some of his ideas about adding
streaming support to AMP via private mail.  He suggested that the
discussion should really be on the list.  Here's the relevant technical
details we've discussed so far:

(I made the comments in quotes; Glyph's response follows)

>When you get a chance to get to the AMP streaming spec please let me
>know.  I'm interested in learning more about AMP and possibly helping
>out with it.

Since there is basically about a 5% probability that I will actually
manage to write something that looks like a spec, let me take this
random email response as an opportunity to get started.

The protocol limitation in AMP of 64k per value is intentional, and in
fact, should regarded as a very high end for a per-packet payload.  The
idea of AMP is that the connection should be a multiplexable resource
which can do lots of things at the same time; if you start plugging it
up with megabyte-at-a-time payloads, then when you send a packet over
it, it's not going to get there in a reasonable time frame.

So the idea behind AMP streaming is that there should be a parameter
type which presents an API that allows you to deal with a "large" value
that might be a multi-gigabyte stream, chunked up into smaller fragments
so that you can have one connection downloading multiple things.

I haven't completely decided on the API yet, but just to give you an
idea of where I'm going:

    class Put(amp.Command):
        arguments = [('upload', amp.Upload()),
                     ('filename', amp.Unicode())]

    # ...
    def put(upload, filename):
        def saveResult(result):
            f = file(filename, 'wb')
            f.write(result)
            f.close()
        upload.fullResultAsString().addCallback(saveResult)
        return {}
    Put.responder(put)

This is a straw-man API because the *suggested* API for doing something
like this would be to incrementally write the results to a file as
they're available, but a hacky convenience API like this might be useful
in some applications (and as an example it's less code to write).
Another, possibly better convenience API might be
'fullResultAsTemporaryFile'.

The implementation technique here would be to make the AMP protocol
object a multiplexable consumer, and establish a convention (perhaps
some built-in commands?) for sending chunks of a previously-identified
file object.  You can find the notifications involved in this process
documented here:

http://twistedmatrix.com/projects/core/documentation/howto/producers.html

Is this helpful as the beginnings of a specification?  Let me know if
you need more information.




From duncan.mcgreggor at gmail.com  Mon Mar 12 17:20:40 2007
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Mon, 12 Mar 2007 17:20:40 -0600
Subject: [Twisted-Python] Re: Vote: The Engine of Your Internet
In-Reply-To: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
References: <4327dfbd0703121439h64ceade1j7c6dc9ddf0a9404f@mail.gmail.com>
Message-ID: <4327dfbd0703121620q1a0661fjda14c6a94846f00@mail.gmail.com>

On 3/12/07, Duncan McGreggor <duncan.mcgreggor at gmail.com> wrote:
> Vote now!
>
> In the spirit of all contests that are thinly disguised high school
> popularity contests, there is a poll up on jyte.com, and we need your
> help!
>
>  http://jyte.com/cl/twistedmatrix.com-is-the-engine-of-your-internet
>
> Because, if we loose... well... the Jocks will get to claim the
> sandpit for their debauched parties, and where will we host our
> late-night chess and math club parties?

The sandpit is almost ours! We've gone from 10 against 31 to 21
against 31. Still down by ten,, but climbing steadily...

d



From glyph at divmod.com  Mon Mar 12 17:59:06 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Mon, 12 Mar 2007 23:59:06 -0000
Subject: [Twisted-Python] Streaming in AMP
In-Reply-To: <45F5D5B7.4030803@kakar.ca>
References: <45F5D5B7.4030803@kakar.ca>
Message-ID: <20070312235906.7769.9980781.divmod.xquotient.720@joule.divmod.com>


On 10:35 pm, jkakar at kakar.ca wrote:
>Hi,
>
>Glyph has been kind enough to share some of his ideas about adding
>streaming support to AMP via private mail.  He suggested that the
>discussion should really be on the list.  Here's the relevant technical
>details we've discussed so far:

*snip*

As a finger-exercise today I banged out a tedious, untested and highly 
buggy proof-of-concept of the API proposed there.  It seems to work OK; 
the main open question is how the command-responders for "you got a 
chunk of data on this channel", "please throttle this channel", and 
"this channel is done" should be associated with the protocol.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070312/dced6e8d/attachment.html>

From hellojianwu at gmail.com  Tue Mar 13 03:08:26 2007
From: hellojianwu at gmail.com (jian wu)
Date: Tue, 13 Mar 2007 02:08:26 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
Message-ID: <d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>

Hi Sean,

I had some experience to write a simple python test simulator for my
java network
application using Apache Mina for a text line based protocol

At first I used asyncore.async_chat, then I moved to
twisted.protocols.basic.LineReceiver
since I need async multi-thread behavior. For me, it is
straight-forward regarding handling the protocol when moving from
async_chat to LineReceiver.

And, asyncore.disptacher is just replaced with Twisted reactor and
Factory or TCPServer
if you want to write a Twisted Application.

If you have a very complicated protocol, it might be totally different
from my experience.

Best regards,

Jian


On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> I would love to migrate my asyncore based applications to Twisted but the
> learning curve seems quite steep. Anybody have a good tutorial? Migrating
> asyncore.dispatcher objects to twisted protocols examples would be awesome.
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From mking at humana.com  Tue Mar 13 07:26:03 2007
From: mking at humana.com (Michael King)
Date: Tue, 13 Mar 2007 13:26:03 +0000 (UTC)
Subject: [Twisted-Python] Re: Producers / Consumers and more
	examples	tutorials?
References: <2389d4730608141014pcea8797v60d4044217d9db11@mail.gmail.com>
	<20060814173120.1717.315578462.divmod.quotient.22830@ohm>
Message-ID: <loom.20070313T141556-673@post.gmane.org>



Jean-Paul Calderone <exarkun <at> divmod.com> writes:


> Just name a specific example you'd like to see and I'll try to write
> something up.  I don't want to pick something, write it up, and then
> discover that it doesn't cover what you wanted to learn. :)
> 
> Jean-Paul
> 


Jean-Paul,

I never saw anyone ask for a specific example, and now I actually have one:

I am building a simple chat-like server, but instead of clients producing the
data sent over the channel, I am tailing a log file, turning it into an xml
node, and spitting it out to all connected clients.   At least, that's what
I'm trying to do.

My guess is that I would have the Consumer sub-class that I'd make use the
write() method to call the server's broadcast method.  Not a complaint, but
there's very little documentation on how things glue together, and the
fileserver example doesn't help.

So, I guess the example I'm looking for is something that:

* Has a producer that reads from a file, checking for changes periodically (I
think I have this done, I'll paste a link to the code at the end of this post)
* Has a consumer that then takes the data from the producer, and then
broadcasts it out to all clients on a simple server.

I don't need to see how to implement the server, that part I think I've
got down. :)

Producer source:  http://pastie.caboo.se/46607

I know it's not complete, but I think it's a start from what I understand about
Producers/Consumers.

Thanks,

Michael




From srock258 at gmail.com  Tue Mar 13 09:03:19 2007
From: srock258 at gmail.com (Sean Roark)
Date: Tue, 13 Mar 2007 10:03:19 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
	<d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
Message-ID: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>

Thanks Jian. I am actually not sure if it is my protocol that is complicated
or if the way in which I want to pass the data that is complicated. This is
what I'm doing.

I have two devices that both send and recieve binary strings. Each device
formats the binary messages in a completely different manner, but
abstractly, they basicly contain the same information just in different
formats. I need to recieve the data, parse it, translate it, then repack it
into this different raw format and send it to another destination. All this
works just fine using asyncore dispatchers but I have created my own way of
passing the messages between the different modules. Each module I have
(parse, translate, pack, recieve, send) is wrapped by two Queue's, one
taking input and the other taking output. I connect the modules by replacing
one instance's output Queue with another's input Queue. This way each module
is a thread that simply blocks on the input Queue. When the Parse instance
finishes parsing data it puts it on the output Queue which is actually the
Translate modules input Queue. Since everything needs to happen in a nice
linear manner this works great.

But, this means I am not using callbacks or anything. Instead I would need
to wrap the Twisted protocol in my Queue protocol. This seems straight
forward enough, but I don't have much time to make this conversion (charge
number is running out!) which is why I would love to see an example of the
asyncore dispatcher to twisted protocol conversion. It would go along way to
helping me quickly map my existing code to twisted style code.

My reason's for switching to Twisted are for the future. This may need a web
interface for configuration and monitoring in the near future. Also,
asyncore has a myriad of issues on Win32 but we want the program to work on
both *nix and windows, I'm hoping Twisted helps. Furthermore, the Twisted
libraries for making my system an application look very appealing as a means
to ease deployment.

Thanks,

Sean

On 3/13/07, jian wu <hellojianwu at gmail.com> wrote:
>
> Hi Sean,
>
> I had some experience to write a simple python test simulator for my
> java network
> application using Apache Mina for a text line based protocol
>
> At first I used asyncore.async_chat, then I moved to
> twisted.protocols.basic.LineReceiver
> since I need async multi-thread behavior. For me, it is
> straight-forward regarding handling the protocol when moving from
> async_chat to LineReceiver.
>
> And, asyncore.disptacher is just replaced with Twisted reactor and
> Factory or TCPServer
> if you want to write a Twisted Application.
>
> If you have a very complicated protocol, it might be totally different
> from my experience.
>
> Best regards,
>
> Jian
>
>
> On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> > I would love to migrate my asyncore based applications to Twisted but
> the
> > learning curve seems quite steep. Anybody have a good tutorial?
> Migrating
> > asyncore.dispatcher objects to twisted protocols examples would be
> awesome.
> >
> > --
> >
> > Sean Roark
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070313/316b67de/attachment.html>

From exarkun at divmod.com  Tue Mar 13 09:33:12 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 13 Mar 2007 10:33:12 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
Message-ID: <20070313153312.18920.934004231.divmod.quotient.1881@ohm>

On Tue, 13 Mar 2007 10:03:19 -0500, Sean Roark <srock258 at gmail.com> wrote:
>Thanks Jian. I am actually not sure if it is my protocol that is complicated
>or if the way in which I want to pass the data that is complicated. This is
>what I'm doing.

It might be too simple to be of use, but there is an asyncore/Twisted echo
example here:

http://twistedmatrix.com/products/echo_server

(It should probably be moved somewhere else, since that part of the website
is no longer maintained and will probably disappear eventually).

Jean-Paul



From wrobyn at cox.net  Tue Mar 13 19:47:46 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Tue, 13 Mar 2007 21:47:46 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
Message-ID: <1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>

OH! I get it,
I was  under the impression that there was a different syntax for  
reactor.run() if you were using a poll reactor like pollreactor.run()  
or something. The code no longer throws up using import poll reactor.  
I am still capping off at around 984 connections but I believe this  
to be on os issue

On Mar 11, 2007, at 9:02 PM, Jean-Paul Calderone wrote:

> On Sun, 11 Mar 2007 19:43:15 -0400, Wrene Robyn <wrobyn at cox.net>  
> wrote:
>> Thanks for all your help thus far. Here is my code which does run   
>> with normal select reactor. How to switch it to use poll reactor?   
>> that is really the crux of my problem.
>
> As in my previous post, you switch it to the poll reactor by  
> importing and installing the poll reactor before the default  
> reactor is imported and installed.  You can do this by adding these  
> two lines:
>
>    from twisted.internet import pollreactor
>    pollreactor.install()
>
> to the program anywhere before the default reactor is imported.   
> For example, you could add them before the "import sys" line.
>
>>
>> import sys
>> import socket
>> import time
>> import resource
>> from threading import Thread
>> from twisted.words.protocols.jabber import client, jid
>> from twisted.words.xish import domish
>> from twisted.internet import reactor
>>
>> resource.setrlimit(8,[65000,65000])
>> class testit():
>>
>>     def authd(xmlstream):
>>         print "authenticated"
>>
>>         presence = domish.Element(('jabber:client','presence'))
>>         xmlstream.send(presence)
>>     #xmlstream.addObserver('/message',  debug)
>>     #xmlstream.addObserver('/presence', debug)
>>     #xmlstream.addObserver('/iq',       debug)
>>
>>     def debug(elem):
>>         print elem.toXml().encode('utf-8')
>>         print "="*20
>
> Note that this code:
>
>>     for i in range(1,2000):
>>         print i
>>         myJid = jid.JID(str(i)+'@jbrsrvrnamt/twisted_words')
>>         factory = client.basicClientFactory(myJid, 'test')
>>         factory.addBootstrap('//event/stream/authd',authd)
>>         reactor.connectTCP('jbrsrvrname',5222,factory)
>>
>>     reactor.run()
>
> is all at the class definition level, so it is executed when the class
> is defined.  This means you are starting the reactor before the class
> definition has even completed.  You probably don't want to do  
> this.  All
> the code after this point doesn't even get a chance to run until the
> reactor stops.
>
>>
>> current = testit()
>> current.start()
>>
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From matusis at matusis.com  Tue Mar 13 19:51:30 2007
From: matusis at matusis.com (Alec Matusis)
Date: Tue, 13 Mar 2007 18:51:30 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
Message-ID: <007f01c765db$49ee36a0$ddcaa3e0$@com>

Hello
 
I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
"top" currently shows 80-90% CPU utilization for this twistd process.
We have not switched to epoll Twisted 2.5 yet, although we are planning to.

We are going to add boxes to run these servers. We have a choice of getting
either Opteron 2216 with 1MB L2 cache and faster RAM access, or Intel
Woodcrest 5140 with 4MB L2 and slower FB-DIMM RAM access. 
The current RSS size of the twisted process is about 60MB. 
The main load comes from poll() and from modifying long dictionaries of the
protocol class instances (searching/modifying dictionaries of client
sessions).

Where should we expect a better performance: on Woodcrest 5140 with bigger
L2 or on Opteron 2216 with faster RAM access? We need to order the new box
tomorrow afternoon, so if someone could reply today, it'd be great for us!

Thanks

Alec.




From hellojianwu at gmail.com  Wed Mar 14 01:26:23 2007
From: hellojianwu at gmail.com (jian wu)
Date: Wed, 14 Mar 2007 00:26:23 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
References: <a7964aae0703121222j6a004519y5923080b73e5277f@mail.gmail.com>
	<d81c17cd0703130208t35106cffuf1bc74c7453fa154@mail.gmail.com>
	<a7964aae0703130803m1c36e166qd9e88ddf33fc4e9@mail.gmail.com>
Message-ID: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>

Hi Sean,

> I am actually not sure if it is my protocol that is complicated
> or if the way in which I want to pass the data that is complicated.

I should claim that I'm not very well experienced with either Twisted
or asyncore, My guess is that is not protocol but the way to pass
data.

Assuming that your python program is connected to your two
devices with two independent TCP connections, your python
program actually is doing message based routing among two
async bi-directional tcp channels.

My guess is that you can keep two Queues since it will help
keeping the order of the async messages received and processed.
And, since twisted has a thread pool, it might be doable that
you could create four threads, two for each TCP Connections,
one thread for read and another for write per TCP connection,
the read thread will handle the received message, process it
and put it into the Queue, the write thread will take the message
from the Queue and write it out to the targeted TCP connection.

Hope this info might be helpful and Good Luck!

Jian


On 3/13/07, Sean Roark <srock258 at gmail.com> wrote:
> Thanks Jian. I am actually not sure if it is my protocol that is complicated
> or if the way in which I want to pass the data that is complicated. This is
> what I'm doing.
>
> I have two devices that both send and recieve binary strings. Each device
> formats the binary messages in a completely different manner, but
> abstractly, they basicly contain the same information just in different
> formats. I need to recieve the data, parse it, translate it, then repack it
> into this different raw format and send it to another destination. All this
> works just fine using asyncore dispatchers but I have created my own way of
> passing the messages between the different modules. Each module I have
> (parse, translate, pack, recieve, send) is wrapped by two Queue's, one
> taking input and the other taking output. I connect the modules by replacing
> one instance's output Queue with another's input Queue. This way each module
> is a thread that simply blocks on the input Queue. When the Parse instance
> finishes parsing data it puts it on the output Queue which is actually the
> Translate modules input Queue. Since everything needs to happen in a nice
> linear manner this works great.
>
> But, this means I am not using callbacks or anything. Instead I would need
> to wrap the Twisted protocol in my Queue protocol. This seems straight
> forward enough, but I don't have much time to make this conversion (charge
> number is running out!) which is why I would love to see an example of the
> asyncore dispatcher to twisted protocol conversion. It would go along way to
> helping me quickly map my existing code to twisted style code.
>
> My reason's for switching to Twisted are for the future. This may need a web
> interface for configuration and monitoring in the near future. Also,
> asyncore has a myriad of issues on Win32 but we want the program to work on
> both *nix and windows, I'm hoping Twisted helps. Furthermore, the Twisted
> libraries for making my system an application look very appealing as a means
> to ease deployment.
>
> Thanks,
>
> Sean
>
>
> On 3/13/07, jian wu <hellojianwu at gmail.com> wrote:
> > Hi Sean,
> >
> > I had some experience to write a simple python test simulator for my
> > java network
> > application using Apache Mina for a text line based protocol
> >
> > At first I used asyncore.async_chat, then I moved to
> > twisted.protocols.basic.LineReceiver
> > since I need async multi-thread behavior. For me, it is
> > straight-forward regarding handling the protocol when moving from
> > async_chat to LineReceiver.
> >
> > And, asyncore.disptacher is just replaced with Twisted reactor and
> > Factory or TCPServer
> > if you want to write a Twisted Application.
> >
> > If you have a very complicated protocol, it might be totally different
> > from my experience.
> >
> > Best regards,
> >
> > Jian
> >
> >
> > On 3/12/07, Sean Roark <srock258 at gmail.com> wrote:
> > > I would love to migrate my asyncore based applications to Twisted but
> the
> > > learning curve seems quite steep. Anybody have a good tutorial?
> Migrating
> > > asyncore.dispatcher objects to twisted protocols examples would be
> awesome.
> > >
> > > --
> > >
> > > Sean Roark
> > > _______________________________________________
> > > Twisted-Python mailing list
> > > Twisted-Python at twistedmatrix.com
> > >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> > >
> > >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From glyph at divmod.com  Wed Mar 14 02:22:57 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 14 Mar 2007 08:22:57 -0000
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <20070314082257.7769.1889864074.divmod.xquotient.748@joule.divmod.com>

On 01:51 am, matusis at matusis.com wrote:
>I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
>"top" currently shows 80-90% CPU utilization for this twistd process.
>We have not switched to epoll Twisted 2.5 yet, although we are planning 
>to.

Hi, Alec!  Nice to hear that you're using Twisted in such a demanding 
situation.
>Where should we expect a better performance: on Woodcrest 5140 with 
>bigger
>L2 or on Opteron 2216 with faster RAM access? We need to order the new 
>box
>tomorrow afternoon, so if someone could reply today, it'd be great for 
>us!

I'm only replying to this message because of your extremely short 
timeframe.  I have _no_ reliable data that I would feel comfortable 
making a decision based on, but then, either of these systems will 
likely be adequate to your purposes.  So, take all this with a grain of 
salt, and I hope you get something better.

My new MacBook - a core 2 duo with 4MB of cache - slightly (10% time 
difference) outstrips my desktop work machine - an opteron64 with 1MB of 
cache - when running the Twisted unit tests.  The Opteron is almost 8 
months old now, but the MacBook is a laptop.  I am being intentionally 
vague about the rest of the specs here to stress the anecdotal and 
unscientific nature of this knowledge :-).

However, this result doesn't surprise me, and I guess it may generalize 
to the current generation of hardware, which is to say, Intel wins.  RAM 
is important, as is raw CPU speed, but L2 cache is _the_ major 
determinant of Python's performance in all of the cross-machine 
profiling I've done.  That is to say, this experiment, and this one 
other time I think I ran some stuff on a PowerPC or a MIPS or something 
(those are different, right?).

Good luck on making the right choice here with such tight constraints!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070314/61fc99ac/attachment.html>

From itamar at itamarst.org  Wed Mar 14 06:25:48 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Mar 2007 08:25:48 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
	<1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
Message-ID: <1173875148.9197.3.camel@localhost.localdomain>

On Tue, 2007-03-13 at 21:47 -0400, Wrene Robyn wrote:
> OH! I get it,
> I was  under the impression that there was a different syntax for  
> reactor.run() if you were using a poll reactor like pollreactor.run()  
> or something. The code no longer throws up using import poll reactor.  
> I am still capping off at around 984 connections but I believe this  
> to be on os issue

In addition to reactor limitations there are also rlimits on how many
descriptors a user can use; you should be able to change those as root.




From exarkun at divmod.com  Wed Mar 14 07:14:03 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 14 Mar 2007 08:14:03 -0500
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
Message-ID: <20070314131403.18920.1331457688.divmod.quotient.2289@ohm>

On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
>Hi Sean,
>>I am actually not sure if it is my protocol that is complicated
>>or if the way in which I want to pass the data that is complicated.
>
>I should claim that I'm not very well experienced with either Twisted
>or asyncore, My guess is that is not protocol but the way to pass
>data.
>
>Assuming that your python program is connected to your two
>devices with two independent TCP connections, your python
>program actually is doing message based routing among two
>async bi-directional tcp channels.
>
>My guess is that you can keep two Queues since it will help
>keeping the order of the async messages received and processed.
>And, since twisted has a thread pool, it might be doable that
>you could create four threads, two for each TCP Connections,
>one thread for read and another for write per TCP connection,
>the read thread will handle the received message, process it
>and put it into the Queue, the write thread will take the message
>from the Queue and write it out to the targeted TCP connection.
>

Four extra threads is four more than there's any reason to have here.  Two
threads per socket is the kind of thing Twisted exists to let you avoid.

Jean-Paul



From itamar at itamarst.org  Wed Mar 14 07:38:17 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 14 Mar 2007 09:38:17 -0400
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <1173879497.9197.11.camel@localhost.localdomain>

On Tue, 2007-03-13 at 18:51 -0700, Alec Matusis wrote:

> The main load comes from poll() and from modifying long dictionaries of the
> protocol class instances (searching/modifying dictionaries of client
> sessions).

Simply switching to epoll should give significant improvement (it
supports up to 8-10K clients without complaining at least in the one
test we did, IIRC. poll starts using major CPU around 2 or 3K.)




From srock258 at gmail.com  Wed Mar 14 09:32:09 2007
From: srock258 at gmail.com (Sean Roark)
Date: Wed, 14 Mar 2007 11:32:09 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
Message-ID: <a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>

>Assuming that your python program is connected to your two
>devices with two independent TCP connections, your python
>program actually is doing message based routing among two
>async bi-directional tcp channels.

This is a very good way to describe it, thank you.

>Four extra threads is four more than there's any reason to have here.  Two
>threads per socket is the kind of thing Twisted exists to let you avoid.

Even with asyncore I don't need two threads per connection. The asyncore
loop handles the send and receive just fine. My Queue interface between my
application and the comms layer is what I need a protocol for. Abstractly,
it isn't complicated, I just don't have time to go down that road without
any guidance because if it takes more then a day or two I'm toast.

I'm more interested in a mapping from asyncore dispatcher to twisted
protocol. This is on my to do list to figure out but for my current project
i don't have time. Something filling in these blanks would be perfect:

Asyncore.dispatcher ----->Twisted Protocol
handle_connect ------------> ?
handle_read      ------------> read, getline, readraw, etc...
handle_write     ------------> sendline, send, etc...
handle_expt     ------------> ?
?                    -------------> buildFactory
asyncore.loop  ------------> reactor.run

Obviously need more then just that.

I have found the online examples and documentation to be quite terse when
describing how things fit together. When I eventually get the chance to make
this migration I plan to write a tutorial. In my opinion the less legacy
code directly using asyncore in this world, the better, so may as well make
it easy to migrate.

Sean

On 3/14/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
> >Hi Sean,
> >>I am actually not sure if it is my protocol that is complicated
> >>or if the way in which I want to pass the data that is complicated.
> >
> >I should claim that I'm not very well experienced with either Twisted
> >or asyncore, My guess is that is not protocol but the way to pass
> >data.
> >
> >Assuming that your python program is connected to your two
> >devices with two independent TCP connections, your python
> >program actually is doing message based routing among two
> >async bi-directional tcp channels.
> >
> >My guess is that you can keep two Queues since it will help
> >keeping the order of the async messages received and processed.
> >And, since twisted has a thread pool, it might be doable that
> >you could create four threads, two for each TCP Connections,
> >one thread for read and another for write per TCP connection,
> >the read thread will handle the received message, process it
> >and put it into the Queue, the write thread will take the message
> >from the Queue and write it out to the targeted TCP connection.
> >
>
> Four extra threads is four more than there's any reason to have here.  Two
> threads per socket is the kind of thing Twisted exists to let you avoid.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 

Sean Roark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070314/2977ed12/attachment.html>

From andy at thecablelounge.com  Wed Mar 14 19:45:32 2007
From: andy at thecablelounge.com (Andy Gayton)
Date: Wed, 14 Mar 2007 18:45:32 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <007f01c765db$49ee36a0$ddcaa3e0$@com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
Message-ID: <45F8A53C.1070202@thecablelounge.com>

Alec Matusis wrote:
> I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
> "top" currently shows 80-90% CPU utilization for this twistd process.
> We have not switched to epoll Twisted 2.5 yet, although we are planning to.

Being async, a twisted server can only make use of a single processor. 
With dual core chips, it can only use one of the cores.

No matter what hardware you throw at it, you'll eventually max out that 
core.

If you're planning to scale out a lot more, you'll want to structure 
things so you can load balance several (1 process per core) twisted 
processes running the service.

cheers,
Andy.




From jonathansamuel at yahoo.com  Wed Mar 14 20:14:57 2007
From: jonathansamuel at yahoo.com (Jonathan Mark)
Date: Wed, 14 Mar 2007 19:14:57 -0700 (PDT)
Subject: [Twisted-Python] What is the most recent compatible combination of
	Twisted and Twisted.web2?
In-Reply-To: <E1HRVSa-0008Fn-02@pyramid.twistedmatrix.com>
Message-ID: <601051.53014.qm@web32508.mail.mud.yahoo.com>

My Redhat 7.3/Python 2.5 box had TwistedWeb2-0.2.0 and
Twisted 2.5 . However, they are not compatible. 

What is the most recent combination of Twisted and
Twisted.Web2 that I could use together?

Where can I get the most recent version of
Twisted.Web2? TwistedMatrix doesn't seem to have a
link to it.



 
____________________________________________________________________________________
Never miss an email again!
Yahoo! Toolbar alerts you the instant new Mail arrives.
http://tools.search.yahoo.com/toolbar/features/mail/



From glyph at divmod.com  Wed Mar 14 21:19:30 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Mar 2007 03:19:30 -0000
Subject: [Twisted-Python] What is the most recent compatible combination of
	Twisted and Twisted.web2?
In-Reply-To: <601051.53014.qm@web32508.mail.mud.yahoo.com>
References: <E1HRVSa-0008Fn-02@pyramid.twistedmatrix.com>
	<601051.53014.qm@web32508.mail.mud.yahoo.com>
Message-ID: <20070315031930.7769.63739133.divmod.xquotient.764@joule.divmod.com>

On 02:14 am, jonathansamuel at yahoo.com wrote:
>My Redhat 7.3/Python 2.5 box had TwistedWeb2-0.2.0 and
>Twisted 2.5 . However, they are not compatible.
>
>What is the most recent combination of Twisted and
>Twisted.Web2 that I could use together?

Since no "blessed" production-ready release of web2 is yet available, 
you are probably better off checking it out from Twisted trunk, or 
checking out the entire Twisted trunk together.

If you're interested in rectifying this situation, the path to a web2 
release is pretty well plotted in the Twisted tracker already, and you 
could submit patches to the tickets in there.

Start here:

http://twistedmatrix.com/trac/query?status=new&status=assigned&status=reopened&milestone=Web2 
-Gold-Master

Also, since this question is more appropriate to the twisted-web list I 
am cross-posting the response there.  Please follow up without cross- 
posting to twisted-python.

Good luck!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070315/b3eb4ed2/attachment.html>

From hellojianwu at gmail.com  Thu Mar 15 00:38:20 2007
From: hellojianwu at gmail.com (jian wu)
Date: Wed, 14 Mar 2007 23:38:20 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
Message-ID: <d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>

Hi Sean,

> Even with asyncore I don't need two threads per connection. The
> asyncore loop handles the send and receive just fine.

I think that I had better correcting my term as "4 types of threads" or
"4 types of threading tasks" since Twisted has a thread pool, so you
don't need start thread by your python code, you just submit your
task to Twisted Thread Pool, it'll schedule and run for you.

> I'm more interested in a mapping from asyncore dispatcher to
> twisted protocol. This is on my to do list to figure out but for
> my current project i don't have time.

Again, I might not be the right person to define the mapping.
Also, I think that you don't have to restrict yourself in an
one-to-one-map-porting mode since Twisted has more rich
features and functionalities than "asyncore", such as thread
pool and that should be other alternative way to implement
async message routing like using Deferred along with Callback
Chain.

This is just my 2 cents.

Best regards,

Jian


On 3/14/07, Sean Roark <srock258 at gmail.com> wrote:
> >Assuming that your python program is connected to your two
> >devices with two independent TCP connections, your python
> >program actually is doing message based routing among two
> >async bi-directional tcp channels.
>
> This is a very good way to describe it, thank you.
>
> >Four extra threads is four more than there's any reason to have here.  Two
> >threads per socket is the kind of thing Twisted exists to let you avoid.
>
> Even with asyncore I don't need two threads per connection. The asyncore
> loop handles the send and receive just fine. My Queue interface between my
> application and the comms layer is what I need a protocol for. Abstractly,
> it isn't complicated, I just don't have time to go down that road without
> any guidance because if it takes more then a day or two I'm toast.
>
> I'm more interested in a mapping from asyncore dispatcher to twisted
> protocol. This is on my to do list to figure out but for my current project
> i don't have time. Something filling in these blanks would be perfect:
>
> Asyncore.dispatcher ----->Twisted Protocol
> handle_connect ------------> ?
> handle_read      ------------> read, getline, readraw, etc...
> handle_write     ------------> sendline, send, etc...
>  handle_expt     ------------> ?
> ?                    -------------> buildFactory
> asyncore.loop  ------------> reactor.run
>
> Obviously need more then just that.
>
> I have found the online examples and documentation to be quite terse when
> describing how things fit together. When I eventually get the chance to make
> this migration I plan to write a tutorial. In my opinion the less legacy
> code directly using asyncore in this world, the better, so may as well make
> it easy to migrate.
>
> Sean
>
>
> On 3/14/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > On Wed, 14 Mar 2007 00:26:23 -0700, jian wu <hellojianwu at gmail.com> wrote:
> > >Hi Sean,
> > >>I am actually not sure if it is my protocol that is complicated
> > >>or if the way in which I want to pass the data that is complicated.
> > >
> > >I should claim that I'm not very well experienced with either Twisted
> > >or asyncore, My guess is that is not protocol but the way to pass
> > >data.
> > >
> > >Assuming that your python program is connected to your two
> > >devices with two independent TCP connections, your python
> > >program actually is doing message based routing among two
> > >async bi-directional tcp channels.
> > >
> > >My guess is that you can keep two Queues since it will help
> > >keeping the order of the async messages received and processed.
> > >And, since twisted has a thread pool, it might be doable that
> > >you could create four threads, two for each TCP Connections,
> > >one thread for read and another for write per TCP connection,
> > >the read thread will handle the received message, process it
> > >and put it into the Queue, the write thread will take the message
> > >from the Queue and write it out to the targeted TCP connection.
> > >
> >
> > Four extra threads is four more than there's any reason to have here.  Two
> > threads per socket is the kind of thing Twisted exists to let you avoid.
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> >
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
>
> Sean Roark
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From itamar at itamarst.org  Thu Mar 15 06:00:20 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 15 Mar 2007 08:00:20 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
Message-ID: <1173960020.9197.16.camel@localhost.localdomain>

On Wed, 2007-03-14 at 23:38 -0700, jian wu wrote:
> Hi Sean,
> 
> > Even with asyncore I don't need two threads per connection. The
> > asyncore loop handles the send and receive just fine.
> 
> I think that I had better correcting my term as "4 types of threads" or
> "4 types of threading tasks" since Twisted has a thread pool, so you
> don't need start thread by your python code, you just submit your
> task to Twisted Thread Pool, it'll schedule and run for you.

Twisted doesn't need threads for this at all. Nor does asyncore.




From karlb at gmx.net  Thu Mar 15 07:10:02 2007
From: karlb at gmx.net (Karl Bartel)
Date: Thu, 15 Mar 2007 14:10:02 +0100
Subject: [Twisted-Python] Game using twisted: Castle-Combat
Message-ID: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>

Hi!

I've written a game which could be added to http://twistedmatrix.com/ 
trac/wiki/ProjectsUsingTwisted, if it qualifies as successful.

Name: Castle-Combat
URL: http://linux-games.com/castle-combat
Desc: a multiplayer game designed after the arcade game "Rampart"

Thanks,
Karl



From psanchez at nortel.com  Thu Mar 15 08:57:49 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 10:57:49 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
	<20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
Message-ID: <1173970669.22312.45.camel@pcard0ze>

Hello,

I will likely get to work on a gateway between SOAP-based Web Services
and SIP-based services. I would like to explore the possibility of
implementing it using the Twisted framework and I'd appreciate if you
can give me suggestions on:

1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
these days.

2. Which SIP stack to use.

I will eventually fire questions about the overall architecture the
gateway software should have. Any hints here are welcome.

Thank you,

-- 
Pedro





From psanchez at nortel.com  Thu Mar 15 09:20:37 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 11:20:37 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
Message-ID: <1173972037.22312.47.camel@pcard0ze>

(resent: Previous message went under a different thread)

Hello,

I will likely get to work on a gateway between SOAP-based Web Services
and SIP-based services. I would like to explore the possibility of
implementing it using the Twisted framework and I'd appreciate if you
can give me suggestions on:

1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
these days.

2. Which SIP stack to use.

I will eventually fire questions about the overall architecture the
gateway software should have. Any hints here are welcome.

Thank you,

-- 
Pedro





From thostrup at gmail.com  Thu Mar 15 10:34:59 2007
From: thostrup at gmail.com (Henrik Thostrup Jensen)
Date: Thu, 15 Mar 2007 17:34:59 +0100
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <1173970669.22312.45.camel@pcard0ze>
References: <702ADCB87C5EF340B1D7A597A9DFF1DA4B8C02@0015-its-exmb02.us.saic.com>
	<20070305215543.22258.760433806.divmod.xquotient.62@joule.divmod.com>
	<1173970669.22312.45.camel@pcard0ze>
Message-ID: <f33a4da20703150934g61aadc50u1042eca5cc736827@mail.gmail.com>

Hi Pedro

On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
>
> Hello,
>
> I will likely get to work on a gateway between SOAP-based Web Services
> and SIP-based services.


This sounds slightly strange in my ears, but thats probably just me.

I would like to explore the possibility of
> implementing it using the Twisted framework and I'd appreciate if you
> can give me suggestions on:
>
> 1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
> these days.


You probably want ZSI:  http://pywebsvcs.sourceforge.net/

I know it has some twisted web resource that might be usefull.

I don't think there is any actual software called ZopeLib. SOAP and Zope has
similar phonetic sounds, so there might a misunderstanding here.

2. Which SIP stack to use.


There is twisted/protocols/sip.py. There is Shtoom (
http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.


> I will eventually fire questions about the overall architecture the
> gateway software should have. Any hints here are welcome.


Start by understanding each of the above things before combining them :-)

-- 
   - Henrik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070315/c0f38dbc/attachment.html>

From matusis at matusis.com  Thu Mar 15 11:05:20 2007
From: matusis at matusis.com (matusis at matusis.com)
Date: Thu, 15 Mar 2007 10:05:20 -0700
Subject: [Twisted-Python] CPU choice for big twisted server.
In-Reply-To: <45F8A53C.1070202@thecablelounge.com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>
	<45F8A53C.1070202@thecablelounge.com>
Message-ID: <!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>

Yes, we are getting 2x dual core, to run 4 instances of the server per box
(they are load-balanced). 
Incidentally, does Twisted API have anything for load-balancing? We have
implemented it ourselves.

I will switch to epoll and report the load difference with poll here.

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Andy Gayton
> Sent: Wednesday, March 14, 2007 6:46 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] CPU choice for big twisted server.
> 
> Alec Matusis wrote:
> > I am running a poll reactor with Twisted 2.2 on 2.6.11 kernel.
> > "top" currently shows 80-90% CPU utilization for this twistd process.
> > We have not switched to epoll Twisted 2.5 yet, although we are
> planning to.
> 
> Being async, a twisted server can only make use of a single processor.
> With dual core chips, it can only use one of the cores.
> 
> No matter what hardware you throw at it, you'll eventually max out that
> core.
> 
> If you're planning to scale out a lot more, you'll want to structure
> things so you can load balance several (1 process per core) twisted
> processes running the service.
> 
> cheers,
> Andy.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nico at tekNico.net  Thu Mar 15 11:26:59 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 15 Mar 2007 18:26:59 +0100
Subject: [Twisted-Python] Re: CPU choice for big twisted server.
In-Reply-To: <!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>
References: <007f01c765db$49ee36a0$ddcaa3e0$@com>	<45F8A53C.1070202@thecablelounge.com>
	<!&!GAAAAAAAAADePrqg2xlmTaV8QpVryY9twoAAABgAAAAAAAAA3j66oNsZZk2lfEKVa8mPbQSXNAAAAAAAEAAAALzrbdkPwxlFkl3TBxoxuu04AAAAUkU6IFtUd2lzdGVkLVB5dGhvbl0gQ1BVIGNob2ljZSBmb3IgYmlnIHR3aXN0ZWQgc2VydmVyLgA=@matusis.com>
Message-ID: <etbvl3$ij2$1@sea.gmane.org>

matusis at matusis.com wrote:
> Incidentally, does Twisted API have anything for load-balancing? We have
> implemented it ourselves.

PythonDirector is based on Twisted:

http://pythondirector.sourceforge.net/

You may also use nginx:

http://wiki.codemongers.com/NginxLoadBalanceExample


-- 
Nicola Larosa - http://www.tekNico.net/

There's no gentle way to break somebody's heart
To say, it's over, it's time for us to part
 -- Prefab Sprout, Love Will Find Someone for You,
    The Gunman and Other Stories, 2001




From exarkun at divmod.com  Thu Mar 15 11:29:49 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 15 Mar 2007 12:29:49 -0500
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <f33a4da20703150934g61aadc50u1042eca5cc736827@mail.gmail.com>
Message-ID: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>

On Thu, 15 Mar 2007 17:34:59 +0100, Henrik Thostrup Jensen <thostrup at gmail.com> wrote:
>Hi Pedro
>
>On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
>>
>>Hello,
>>
>>I will likely get to work on a gateway between SOAP-based Web Services
>>and SIP-based services.
>
>
>This sounds slightly strange in my ears, but thats probably just me.
>
>I would like to explore the possibility of
>>implementing it using the Twisted framework and I'd appreciate if you
>>can give me suggestions on:
>>
>>1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
>>these days.
>
>
>You probably want ZSI:  http://pywebsvcs.sourceforge.net/
>
>I know it has some twisted web resource that might be usefull.
>
>I don't think there is any actual software called ZopeLib. SOAP and Zope has
>similar phonetic sounds, so there might a misunderstanding here.
>
>2. Which SIP stack to use.
>
>
>There is twisted/protocols/sip.py. There is Shtoom (
>http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.

Slight correction.  Rather than twisted/protocols/sip.py, you probably want
to use the protocol code from Divmod Sine.  There is some effort to backport
improvements and fixes to Twisted, but this is still in progress, so you'll
be missing out on a ton of stuff if you use what's in any existing Twisted
release.

>>I will eventually fire questions about the overall architecture the
>>gateway software should have. Any hints here are welcome.
>
>
>Start by understanding each of the above things before combining them :-)

Jean-Paul



From johnpote at jptechnical.co.uk  Thu Mar 15 13:08:10 2007
From: johnpote at jptechnical.co.uk (John Pote)
Date: Thu, 15 Mar 2007 19:08:10 +0000
Subject: [Twisted-Python] web.resource.Resource.putChild() problem
Message-ID: <45F9999A.7040305@jptechnical.co.uk>

Hi, can someone help.

I've used the code snippet below to create a http control site for a web 
app. But I want to re-render the html pages from a sub dir, 
'controlSit/pp', so I figured putChild() would help.

def makeControlSite():
    site = static.File('controlSite')
    site.putChild('pp', ProcessPage())
    return site

So I set the app going with twistd and the site files, control/*.* and 
control/pp/*.* get returned to the browser as is. My ProcessPage() 
resource seems to be ignored.

Does static.File look for child resources or can I not mix static.File 
with putChild() as I've attempted to do?

Help appreciated,
John






From psanchez at nortel.com  Thu Mar 15 13:27:49 2007
From: psanchez at nortel.com (Pedro Sanchez)
Date: Thu, 15 Mar 2007 15:27:49 -0400
Subject: [Twisted-Python] Using Twisted for a SOAP/SIP gateway
In-Reply-To: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>
References: <20070315172949.18920.324587665.divmod.quotient.2841@ohm>
Message-ID: <1173986869.22312.52.camel@pcard0ze>

On Thu, 2007-03-15 at 12:29 -0500, Jean-Paul Calderone wrote:
> On Thu, 15 Mar 2007 17:34:59 +0100, Henrik Thostrup Jensen <thostrup at gmail.com> wrote:
> >Hi Pedro
> >
> >On 3/15/07, Pedro Sanchez <psanchez at nortel.com> wrote:
> >>
> >>Hello,
> >>
> >>I will likely get to work on a gateway between SOAP-based Web Services
> >>and SIP-based services.
> >
> >
> >This sounds slightly strange in my ears, but thats probably just me.
> >
> >I would like to explore the possibility of
> >>implementing it using the Twisted framework and I'd appreciate if you
> >>can give me suggestions on:
> >>
> >>1. Which SOAP stack to use. I've heard that ZopeLib is the way to go
> >>these days.
> >
> >
> >You probably want ZSI:  http://pywebsvcs.sourceforge.net/
> >
> >I know it has some twisted web resource that might be usefull.
> >
> >I don't think there is any actual software called ZopeLib. SOAP and Zope has
> >similar phonetic sounds, so there might a misunderstanding here.
> >

OK, the recommendation I'm getting from a colleague is SOAPlib (sorry
for the confusion) from http://trac.optio.webfactional.com/

Any experience with this one?

> >2. Which SIP stack to use.
> >
> >
> >There is twisted/protocols/sip.py. There is Shtoom (
> >http://divmod.org/trac/wiki/ShtoomProject) if you need voice over IP.
> 
> Slight correction.  Rather than twisted/protocols/sip.py, you probably want
> to use the protocol code from Divmod Sine.  There is some effort to backport
> improvements and fixes to Twisted, but this is still in progress, so you'll
> be missing out on a ton of stuff if you use what's in any existing Twisted
> release.
> 

Thanks, I'll take a look at Sine.

> >>I will eventually fire questions about the overall architecture the
> >>gateway software should have. Any hints here are welcome.
> >
> >
> >Start by understanding each of the above things before combining them :-)
> 
> Jean-Paul
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
Pedro I. Sanchez
Rapid Prototyping Lab
CTO, Nortel
ESN 393-6084
External 613-763-6084




From hellojianwu at gmail.com  Thu Mar 15 13:36:02 2007
From: hellojianwu at gmail.com (jian wu)
Date: Thu, 15 Mar 2007 12:36:02 -0700
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <1173960020.9197.16.camel@localhost.localdomain>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
Message-ID: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>

Hi,

> Twisted doesn't need threads for this at all. Nor does asyncore.

>From what I understand, it is better using threads to offload any
blocking operation out of Twisted main event loop unless all your
message processing is non-blocking or "light-weight and fast"
( Sometimes message processing plus state management could
 be heavy operations ).

Best regards,

Jian


On 3/15/07, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> On Wed, 2007-03-14 at 23:38 -0700, jian wu wrote:
> > Hi Sean,
> >
> > > Even with asyncore I don't need two threads per connection. The
> > > asyncore loop handles the send and receive just fine.
> >
> > I think that I had better correcting my term as "4 types of threads" or
> > "4 types of threading tasks" since Twisted has a thread pool, so you
> > don't need start thread by your python code, you just submit your
> > task to Twisted Thread Pool, it'll schedule and run for you.
>
> Twisted doesn't need threads for this at all. Nor does asyncore.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radix at twistedmatrix.com  Thu Mar 15 14:01:11 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 15 Mar 2007 16:01:11 -0400
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
	<d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
Message-ID: <60ed19d40703151301h4fbd34dbwa90090dee172da50@mail.gmail.com>

On 3/15/07, jian wu <hellojianwu at gmail.com> wrote:
> Hi,
>
> > Twisted doesn't need threads for this at all. Nor does asyncore.
>
> >From what I understand, it is better using threads to offload any
> blocking operation out of Twisted main event loop unless all your
> message processing is non-blocking or "light-weight and fast"
> ( Sometimes message processing plus state management could
>  be heavy operations ).

Ideally, you're not really offloading *processing* but just stuff like
disk or database I/O, and only when necessary. It's often worthwhile
finding the minimal amount of code to throw into a thread.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From glyph at divmod.com  Thu Mar 15 14:07:18 2007
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 15 Mar 2007 20:07:18 -0000
Subject: [Twisted-Python] Migrate Asyncore to Twisted
In-Reply-To: <d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
References: <d81c17cd0703140026h1496c01ew526cd93f3c7fe741@mail.gmail.com>
	<20070314131403.18920.1331457688.divmod.quotient.2289@ohm>
	<a7964aae0703140832l702056abwdda0863f13399497@mail.gmail.com>
	<d81c17cd0703142338t49061668k37338f46c19a8470@mail.gmail.com>
	<1173960020.9197.16.camel@localhost.localdomain>
	<d81c17cd0703151236i75b6a0d7p42ccc06048bc65d8@mail.gmail.com>
Message-ID: <20070315200718.7769.366752569.divmod.xquotient.991@joule.divmod.com>

On 07:36 pm, hellojianwu at gmail.com wrote:
>Hi,
>>Twisted doesn't need threads for this at all. Nor does asyncore.
>
>> From what I understand, it is better using threads to offload any
>blocking operation out of Twisted main event loop unless all your
>message processing is non-blocking or "light-weight and fast"
>( Sometimes message processing plus state management could
>be heavy operations ).

No, it is *best* not to perform blocking operations :).

If you do need to perform "blocking" operations which are slow due to 
CPU utilization, you want to put them into a subprocess, not a thread. 
Threads are more bug-prone, and they don't perform as well, as 
processes.

Certain kinds of blocking operations are unfortunately inconvenient to 
do in subprocesses, such as SQL access; those typically go into a thread 
as a mechanism for integrating with an inherently blocking type of 
library, not as a way to avoid slow operations.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070315/ce9defe1/attachment.html>

From wrobyn at cox.net  Thu Mar 15 17:03:37 2007
From: wrobyn at cox.net (Wrene Robyn)
Date: Thu, 15 Mar 2007 19:03:37 -0400
Subject: [Twisted-Python] newbe twisted xmpp load
In-Reply-To: <1173875148.9197.3.camel@localhost.localdomain>
References: <20070312010231.18920.739506088.divmod.quotient.1062@ohm>
	<1C39785C-2CED-4947-AB5D-7F09E3EA58CD@cox.net>
	<1173875148.9197.3.camel@localhost.localdomain>
Message-ID: <E917DC64-A5A9-4E88-BF98-5AAFFA24B6B9@cox.net>

I changed those as well to a high value but am still getting capped  
at 983-984 connections even with pollreactor. Can someone else verify  
my code? ANY help would be appreciated. Or conversely, give me a  
function to log in 10k users to jabber :)

On Mar 14, 2007, at 8:25 AM, Itamar Shtull-Trauring wrote:

> On Tue, 2007-03-13 at 21:47 -0400, Wrene Robyn wrote:
>> OH! I get it,
>> I was  under the impression that there was a different syntax for
>> reactor.run() if you were using a poll reactor like pollreactor.run()
>> or something. The code no longer throws up using import poll reactor.
>> I am still capping off at around 984 connections but I believe this
>> to be on os issue
>
> In addition to reactor limitations there are also rlimits on how many
> descriptors a user can use; you should be able to change those as  
> root.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From dakoner at gmail.com  Thu Mar 15 22:58:56 2007
From: dakoner at gmail.com (David Konerding)
Date: Thu, 15 Mar 2007 21:58:56 -0700
Subject: [Twisted-Python] running a TurboGears from Twisted
Message-ID: <4f0f0cb0703152158y7edf57fbw5cc4c674726c488f@mail.gmail.com>

Hi,

I want to run a turbogears site from inside Twisted via WSGI.  This isn't
documented, and I'm struggling to get it to work.  This is what I have so
far:

from twisted.web2 import wsgi
from twisted.application import service, strports
from twisted.web2 import server, channel
from twisted.python import util
from turbogears import update_config, start_server
from twisted.web2.wsgi import WSGIResource as WSGI
from cherrypy._cpwsgi import wsgiApp
import cherrypy
cherrypy.lowercase_api = True


# This part gets run when you run this file via: "twistd -noy demo.py"
if __name__ == '__builtin__':

    update_config(configfile="dev.cfg",modulename="quickie.config")
    test = WSGI(wsgiApp)

    # Create the site and application objects
    site = server.Site(test)
    application = service.Application("demo")

    # Serve it via standard HTTP on port 8080
    s = strports.service('tcp:8080', channel.HTTPFactory(site))
    s.setServiceParent(application)

I'm not having much luck with this, and I thought I'd check on the list if
anybody already had a recipe for this.

Thanks,
Dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070315/99992fa9/attachment.html>

From o.fournier at perigord.com  Fri Mar 16 09:31:45 2007
From: o.fournier at perigord.com (Olivier Fournier)
Date: Fri, 16 Mar 2007 16:31:45 +0100
Subject: [Twisted-Python] components.Interface call
In-Reply-To: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
References: <20070220021437.25807.2076505267.divmod.quotient.27715@ohm>
Message-ID: <45FAB861.70207@perigord.com>

Hi,

I'm Newbee in Twisted and I tried to run Web2 examples.

I obtain an error when I run 
http://twistedmatrix.com/projects/web2/documentation/examples/intro/simple.py

AttributeError: 'module' object has no attribute 'Interface'

Traceback (innermost last):

File "/opt/twisted/simple.py", line 1, in ?
  from twisted.web2 import server, http, resource, channel
File "/opt/twisted/simple.py", line 1, in ?
  from twisted.web2 import server, http, resource, channel
File "/usr/lib/python2.4/site-packages/twisted/web2/server.py", line 25, 
in ?
  from twisted.web2 import http, iweb, fileupload, responsecode
File "/usr/lib/python2.4/site-packages/twisted/web2/http.py", line 27, in ?
  from twisted.web2 import iweb
File "/usr/lib/python2.4/site-packages/twisted/web2/iweb.py", line 58, in ?
  class IOldNevowResource(components.Interface):

It seem's components.Interface is deprecated and replaced by 
zope.interface.Interface

If I replace components.Interface by Interface in 
/usr/lib/python2.4/site-packages/twisted/web2/iweb.py
It's run!

by



From Benjamin.Rutt at gs.com  Fri Mar 16 09:48:53 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 16 Mar 2007 11:48:53 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D64E1@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>

BTW, how was it that my pauseProducing ever got invoked below?  after
all I registered my producer (erroneously, no doubt since it implements
IPushProducer) as a pull producer by using the 2nd argument of 'False'
below:
 
self.consumer.registerProducer(self, False) 
 
If indeed it's registered as a pull producer I wouldn't think its pause
should ever be called. Does twisted actually use the type of the class
to see what to call?  Or getattr(class,'pauseProducing') or somesuch?
If so, what's the purpose of 'True' or 'False' during registration?
 
from the docs:

	

	registerProducer(producer, streaming)


	So that a consumer can invoke methods on a producer, the
consumer needs to be told about the producer. This is done with the
registerProducer method. The first argument is either a IPullProducer or
IPushProducer provider; the second argument indicates which of these
interfaces is provided: True for push producers, False for pull
producers.

Thanks!

________________________________

	From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Rutt,
Benjamin
	Sent: Tuesday, March 06, 2007 12:04 PM
	To: twisted-python at twistedmatrix.com
	Subject: [Twisted-Python] Learning about IPushProducer
	
	

	When running the following code (my 2nd twisted program!), it
works as I had hoped - it doesn't starve any clients that want to
receive data back, even with a simultaneously active really long
streaming server-to-client communication (i.e. one piggy client asking
for millions of bytes).  i.e. another client can get in and ask for just
a few bytes while a large payload is being delivered to a different
client.  Which is great!

	Here's a sample interaction from the client side: 

	$ telnet localhost 8007 
	Trying 127.0.0.1... 
	Connected to localhost. 
	Escape character is '^]'. 
	1 
	x 
	2 
	xx 
	3 
	xxx 
	10 
	xxxxxxxxxx 
	99999 
	
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	[...lots of x's...] 
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
	bye 
	Connection closed by foreign host. 
	$ 

	So I have 2 questions on my code: 

	1) am I doing anything wrong in setting up the plumbing? 
	2) does pauseProducing() get called by another thread whilst
resumeProducing() is running?  (I believe it must, otherwise my
resumeProducing() would only be entered once).  If so I should have an
appropriate mutex around the read/write of self.pause, no?

	Here is the code, and output from the server is at the end.
Thanks -- Benjamin 

	#!/usr/bin/env python 
	import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime 
	import socket, string, random, time, traceback, shutil, popen2 

	from zope.interface import implements 
	from twisted.internet import protocol, defer, interfaces, error,
reactor 
	from twisted.internet.protocol import Protocol, Factory 
	from twisted.protocols.basic import LineReceiver 

	class NonStarvingXGiver: 
	    implements(interfaces.IPushProducer) 
	    def __init__(self, howmany, consumer): 
	        self.howmany = howmany 
	        self.sent_already = 0 
	        self.paused = False 
	        self.consumer = consumer 
	    def beginSendingXs(self): 
	        self.deferred = deferred = defer.Deferred() 
	        self.consumer.registerProducer(self, False) 
	        return deferred 
	    def pauseProducing(self): 
	        print 'pauseProducing: invoked' 
	        self.paused = True 
	    def resumeProducing(self): 
	        print 'resumeProducing: invoked' 
	        self.paused = False 
	        maxchunksz = 1024 
	        while not self.paused and self.howmany >
self.sent_already: 
	            chunksz = min(maxchunksz, self.howmany -
self.sent_already) 
	            self.consumer.write('x' * chunksz) 
	            self.sent_already += chunksz 
	        if self.howmany == self.sent_already: 
	            self.consumer.write('\n') 
	            self.consumer.unregisterProducer() 
	            print 'resumeProducing: exiting for the last time' 
	    def stopProducing(self): 
	        print 'stopProducing: invoked' 
	        self.consumer.unregisterProducer() 
	        
	class xgiver(LineReceiver): 
	    def lineReceived(self, howmany): 
	        print 'got line [%s] from client [%s]' % (howmany, 
	
self.transport.getPeer()) 
	        if howmany == 'bye': 
	            print 'goodbye to', self.transport.getPeer() 
	            self.transport.loseConnection() 
	            return 
	        try: 
	            howmany = int(howmany) 
	            s = NonStarvingXGiver(howmany, self.transport) 
	            s.beginSendingXs() 
	        except Exception, ex: 
	            self.transport.write("invalid input " + howmany +
"\n") 

	# Next lines are magic: 
	factory = Factory() 
	factory.protocol = xgiver 

	# 8007 is the port you want to run under. Choose something >1024

	reactor.listenTCP(8007, factory) 
	reactor.run() 


	
------------------------------------------------------------------- 
	Server output: 

	$ ./xgiver.py 
	got line [1] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [2] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [3] from client [IPv4Address(TCP, '127.0.0.1', 51007)] 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [10] from client [IPv4Address(TCP, '127.0.0.1', 51007)]

	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [99999] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	resumeProducing: invoked 
	pauseProducing: invoked 
	resumeProducing: invoked 
	resumeProducing: exiting for the last time 
	got line [bye] from client [IPv4Address(TCP, '127.0.0.1',
51007)] 
	goodbye to IPv4Address(TCP, '127.0.0.1', 51007) 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070316/44ed0574/attachment.html>

From exarkun at divmod.com  Fri Mar 16 11:29:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 16 Mar 2007 12:29:45 -0500
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070316172945.18920.1813365261.divmod.quotient.3173@ohm>

On Fri, 16 Mar 2007 11:48:53 -0400, "Rutt, Benjamin" <benjamin.rutt at gs.com> wrote:
>BTW, how was it that my pauseProducing ever got invoked below?  after
>all I registered my producer (erroneously, no doubt since it implements
>IPushProducer) as a pull producer by using the 2nd argument of 'False'
>below:
>
>self.consumer.registerProducer(self, False)
>
>If indeed it's registered as a pull producer I wouldn't think its pause
>should ever be called. Does twisted actually use the type of the class
>to see what to call?  Or getattr(class,'pauseProducing') or somesuch?
>If so, what's the purpose of 'True' or 'False' during registration?
>
>from the docs:
>
>
>
>	registerProducer(producer, streaming)
>
>
>	So that a consumer can invoke methods on a producer, the
>consumer needs to be told about the producer. This is done with the
>registerProducer method. The first argument is either a IPullProducer or
>IPushProducer provider; the second argument indicates which of these
>interfaces is provided: True for push producers, False for pull
>producers.

This was a bug in one of the consumer implementations in Twisted (#2286).
It's been fixed since Twisted 2.5, so this won't happen in Twisted 2.6.

Jean-Paul



From Benjamin.Rutt at gs.com  Fri Mar 16 14:16:51 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 16 Mar 2007 16:16:51 -0400
Subject: [Twisted-Python] Learning about IPushProducer
In-Reply-To: <20070316172945.18920.1813365261.divmod.quotient.3173@ohm>
References: <C8853DE689283B47B5D348BC33E06193043D6575@gsmbnmp04es.firmwide.corp.gs.com>
	<20070316172945.18920.1813365261.divmod.quotient.3173@ohm>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6582@gsmbnmp04es.firmwide.corp.gs.com>

Thanks.  One more question.  Any ideas why my server doesn't return any
data at all with the 2nd argument to registration being True?  It just
seems to sit there, but if I flip it to False it works as desired.
(This must be why I set it to False earlier, to get it to run).

I'm using python 2.4 and twisted 2.0.0.

Trivially modified server code, server output and client output are
below, separated by ======================.  Thanks.

#!/usr/bin/env python
import os, os.path, sys, re, commands, pickle, tempfile, getopt,
datetime
import socket, string, random, time, traceback, shutil, popen2

from zope.interface import implements
from twisted.internet import protocol, defer, interfaces, error, reactor
from twisted.internet.protocol import Protocol, Factory
from twisted.protocols.basic import LineReceiver

class NonStarvingXGiver:
    implements(interfaces.IPushProducer)
    def __init__(self, howmany, consumer):
        self.howmany = howmany
        self.sent_already = 0
        self.paused = False
        self.consumer = consumer
        self.act_as_pull = 0
        self.payload1024 = 'x'*1024
    def beginSendingXs(self):
        self.deferred = deferred = defer.Deferred()
        self.consumer.registerProducer(self, True)
        return deferred
    def pauseProducing(self):
        print 'pauseProducing: invoked at %d bytes' %
(self.sent_already)
        self.paused = True
    def resumeProducing(self):
        if not self.act_as_pull:
            print 'resumeProducing: invoked'
        self.paused = False
        maxchunksz = 1024
        while not self.paused and self.howmany > self.sent_already:
            chunksz = min(maxchunksz, self.howmany - self.sent_already)
            if chunksz == 1024:
                self.consumer.write(self.payload1024)
            else:
                self.consumer.write('x' * chunksz)
            self.sent_already += chunksz
            if self.act_as_pull:
                break
        if self.howmany == self.sent_already:
            self.consumer.write('\n')
            self.consumer.unregisterProducer()
            print 'resumeProducing: exiting for the last time'
    def stopProducing(self):
        print 'stopProducing: invoked'
        self.consumer.unregisterProducer()
        
class xgiver(LineReceiver):
    def lineReceived(self, howmany):
        print 'got line [%s] from client [%s]' % (howmany,
 
self.transport.getPeer())
        if howmany == 'bye':
            print 'goodbye to', self.transport.getPeer()
            self.transport.loseConnection()
            return
        try:
            howmany = int(howmany)
            s = NonStarvingXGiver(howmany, self.transport)
            s.beginSendingXs()
        except Exception, ex:
            traceback.print_exc()
            self.transport.write("invalid input " + `howmany` + "\n")

# Next lines are magic:
factory = Factory()
factory.protocol = xgiver

# 8007 is the port you want to run under. Choose something >1024
reactor.listenTCP(8007, factory)
reactor.run()

======================
got line [5] from client [IPv4Address(TCP, '127.0.0.1', 34840)]
got line [4] from client [IPv4Address(TCP, '127.0.0.1', 34840)]
Traceback (most recent call last):
  File "./xgiver.py", line 77, in lineReceived
    s.beginSendingXs()
  File "./xgiver.py", line 39, in beginSendingXs
    self.consumer.registerProducer(self, True)
  File
"/sw/external/python-2.4/lib/python2.4/site-packages/twisted/internet/ab
stract.py", line 266, in registerProducer
    raise RuntimeError("Cannot register producer %s, because producer %s
was never unregistered." % (producer, self.producer))
RuntimeError: Cannot register producer <__main__.NonStarvingXGiver
instance at 0x3a5120>, because producer <__main__.NonStarvingXGiver
instance at 0x3a5198> was never unregistered.
stopProducing: invoked
======================
$ telnet localhost 8007
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
5
4
invalid input 4



From warner at lothar.com  Fri Mar 16 17:43:55 2007
From: warner at lothar.com (Brian Warner)
Date: Fri, 16 Mar 2007 16:43:55 -0700 (PDT)
Subject: [Twisted-Python] Foolscap-0.1.0 released
Message-ID: <20070316.164355.112604497.warner@lothar.com>


I made a new release of Foolscap last night, available in the usual place at
http://twistedmatrix.com/trac/wiki/FoolsCap . This release makes a few
usability improvements for Foolscap-based servers, and fixes a bug that made
it impossible to use a Tub right after creating it for the first time (if
that system's clock was faster than the system being connected to).

The Foolscap-0.1.0 release tarball is signed by my GPG public key
(0x1514A7BD) and available from:

 http://twistedmatrix.com/~warner/Foolscap/foolscap-0.1.0.tar.gz
 http://twistedmatrix.com/~warner/Foolscap/foolscap-0.1.0.tar.gz.sig

There are no protocol changes between 0.1.0 and the previous 0.0.7 release,
just bugfixes and API additions. There are still protocol changes in the
works, though. Why call this version 0.1.0? Because this release is actually
kind of useful for something.

What is Foolscap? From the README:

   This is a ground-up rewrite of Perspective Broker, which itself is
   Twisted's native RPC/RMI protocol (Remote Procedure Call / Remote Method
   Invocation). If you have control of both ends of the wire, and are thus
   not constrained to use some other protocol like HTTP/XMLRPC/CORBA/etc, you
   might consider using Foolscap.

   Fundamentally, Foolscap allows you to make a python object in one process
   available to code in other processes, which means you can invoke its
   methods remotely. This includes a data serialization layer to convey the
   object graphs for the arguments and the eventual response, and an object
   reference system to keep track of which objects you are connecting to. It
   uses a capability-based security model, such that once you create a
   non-public object, it is only accessible to clients to whom you've given
   the (unguessable) PB-URL. You can of course publish world-visible objects
   that have well-known PB-URLs.

The complete release notes for 0.1.0 are attached below.

share and enjoy,
 -Brian


* Release 0.1.0 (15 Mar 2007)

** usability improvements

*** Tubs now have a certFile= argument

A certFile= argument has been added to the Tub constructor to allow the Tub
to manage its own certificates. This argument provides a filename where the
Tub should read or write its certificate. If the file exists, the Tub will
read the certificate data from there. If not, the Tub will generate a new
certificate and write it to the file.

The idea is that you can point certFile= at a persistent location on disk,
perhaps in the application's configuration or preferences subdirectory, and
then not need to distinguish between the first time the Tub has been created
and later invocations. This allows the Tub's identity (derived from the
certificate) to remain stable from one invocation to the next. The related
problem of how to make (unguessable) object names persistent from one program
run to the next is still outstanding, but I expect to implement something
similar in the future (some sort of file to which object names are written
and read later).

certFile= is meant to be used somewhat like this:

 where = os.path.expanduser("~/.myapp.cert")
 t = Tub(certFile=where)
 t.registerReference(obj) # ...

*** All eventual-sends are retired on each reactor tick, not just one.

Applications which make extensive use of the eventual-send operations (in
foolscap.eventual) will probably run more smoothly now. In previous releases,
the _SimpleCallQueue class would only execute a single eventual-send call per
tick, then take care of all pending IO (and any pending timers) before
servicing the next eventual-send. This could probably lead to starvation, as
those eventual-sends might generate more work (and cause more network IO),
which could cause the event queue to grow without bound. The new approach
finishes as much eventual-send work as possible before accepting any IO. Any
new eventual-sends which are queued during the current tick will be put off
until the next tick, but everything which was queued before the current tick
will be retired in the current tick.

** bug fixes

*** Tub certificates can now be used the moment they are created

In previous releases, Tubs were only willing to accept SSL certificates that
created before the moment of checking. If two systems A and B had
unsynchronized clocks, and a Foolscap-using application on A was run for the
first time to connect to B (thus creating a new SSL certificate), system B
might reject the certificate because it looks like it comes from the future.

This problem is endemic in systems which attempt to use the passage of time
as a form of revocation. For now at least, to resolve the practical problem
of certificates generated on demand and used by systems with unsynchronized
clocks, Foolscap does not use certificate lifetimes, and will ignore
timestamps on the certificates it examines.



From radix at twistedmatrix.com  Sat Mar 17 10:16:37 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Sat, 17 Mar 2007 12:16:37 -0400
Subject: [Twisted-Python] Game using twisted: Castle-Combat
In-Reply-To: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>
References: <995443BA-E27F-4117-A785-044C01BF4957@gmx.net>
Message-ID: <60ed19d40703170916t569ff93chba683a05ca7035d1@mail.gmail.com>

On 3/15/07, Karl Bartel <karlb at gmx.net> wrote:
> Hi!
>
> I've written a game which could be added to http://twistedmatrix.com/
> trac/wiki/ProjectsUsingTwisted, if it qualifies as successful.

I've added it. Thanks a lot, Karl!

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at twistedmatrix.com  Sat Mar 17 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Mar 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1174190702.2.1171066819@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-11 through 2007-03-18
Bugs opened: 12    Bugs closed: 11  Total open bugs: 879 (+1)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +0  |Highest:  -4          |Conch:  +1             
|Enhancement:  +2  |High:     +3          |Core:   -4             
                   |Normal:   +2          |Lore:   +3             
                   |Lowest:   +1          |Mail:   +1             
                                          |Trial:  +0             
                                          |Web:    +1             
                                          |Web2:   +1             
                                          |Words:  -1             


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2521] SMTP authentication tracebacks when receiving an empty line (opened by washort)
    defect          mail       http://twistedmatrix.com/trac/ticket/2521

[#2523] portal can't check for inherited interfaces (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2523

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi) (CLOSED, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

                    ===== High =====
[#2525] Improve Lore's automated test coverage to UQDS standards (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2525

[#2526] Integrate Lore patches which do index generation for ThinkCSPy (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2526

[#2527] Lore Index output for LaTeX (opened by glyph)
    enhancement     lore       http://twistedmatrix.com/trac/ticket/2527

                    ===== Normal =====
[#2517] Xish XPath event observers not tested (opened by exarkun)
    defect          words      http://twistedmatrix.com/trac/ticket/2517

[#2518] t.w.xmlrpc.QueryProtocol does not close the connection after handling the request (opened by karlb)
    defect          web        http://twistedmatrix.com/trac/ticket/2518

[#2519] Couple of conch bug-fixes (opened by johnnypops)
    defect          conch      http://twistedmatrix.com/trac/ticket/2519

[#2520] twisted.mail.pop3client.POP3Client does not allow plain text login (opened by yasusii) (CLOSED, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2520

[#2522] HTTPAuthResource: 'ValueError: too many values to unpack' when IRealm.requestAvatarId returns a logout callable (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2522

                    ===== Lowest =====
[#2524] Support for triggering trial's waiting for Deferreds from within doctests (opened by strank)
    enhancement     trial      http://twistedmatrix.com/trac/ticket/2524



Closed Bugs
______________________
                    ===== Highest =====
[#1652] xish' EventDispatcher grinds to a halt when using many different one-time observers (opened by ralphm, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/1652

[#2476] local variable 'cbl' referenced before assignment (opened by jack, closed by ralphm, fixed)
    defect          words      http://twistedmatrix.com/trac/ticket/2476

[#2419] t.i.fdesc improvements (opened by itamarst, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2419

[#2005] trial twisted/mail/ traces back, omitting trailing / does not. (opened by jerub, closed by therve, fixed)
    defect          trial      http://twistedmatrix.com/trac/ticket/2005

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2430] web.xmlrpc returns response with  "text/html" content-type when xmlrpc method does not exist. (opened by Remi, closed by therve, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/2430

[#2523] portal can't check for inherited interfaces (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2523

[#2463] add tests for logging of unhandled deferred errors (opened by antoine, closed by therve, fixed)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2463

                    ===== Normal =====
[#2515] "python setup.py build" fails for Twisted (opened by edwards, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2515

[#2520] twisted.mail.pop3client.POP3Client does not allow plain text login (opened by yasusii, closed by yasusii, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2520

[#1739] (patch) Removing system event triggers while firing does the wrong thing. (opened by antony, closed by glyph, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1739





From listbox at evernex.com  Mon Mar 19 20:16:23 2007
From: listbox at evernex.com (Neurophyre)
Date: Mon, 19 Mar 2007 19:16:23 -0700
Subject: [Twisted-Python] using stdio with Twisted
Message-ID: <DFB61B0A-D487-447C-97EF-FCAFCD2A09FB@evernex.com>

Hello,

I'm building an old-school BBS client using Twisted.  It needs to  
take user input, parse it, send messages over the wire and get  
messages back and display them.. the usual.  I'm just now getting to  
writing the UI and have run into a couple problems.

First, whether using protocol.Protocol or  
protocols.basic.LineReceiver (in raw mode) with  
internet.stdio.StandardIO, I have the same problem: the dataReceived  
(or rawDataReceived in the case of LineReceiver in raw mode)  
functions are only called after one types some text and hits return.   
I need to process input on a keystroke level, since there will be  
prompts at which a single keystroke will do things.

Second, I was looking at  
twisted.conch.insults.insults.TerminalProtocol after some Googling --  
does anyone know if I can just drop this in in place of  
protocols.basic.LineReceiver (or whatever) and have it work properly,  
or does it require some special invocation and/or grab stdio by itself?

Thanks!




From exarkun at divmod.com  Tue Mar 20 05:13:55 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 06:13:55 -0500
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <DFB61B0A-D487-447C-97EF-FCAFCD2A09FB@evernex.com>
Message-ID: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>

On Mon, 19 Mar 2007 19:16:23 -0700, Neurophyre <listbox at evernex.com> wrote:
>Hello,
>
>I'm building an old-school BBS client using Twisted.  It needs to  take user 
>input, parse it, send messages over the wire and get  messages back and 
>display them.. the usual.  I'm just now getting to  writing the UI and have 
>run into a couple problems.
>
>First, whether using protocol.Protocol or  protocols.basic.LineReceiver (in 
>raw mode) with  internet.stdio.StandardIO, I have the same problem: the 
>dataReceived  (or rawDataReceived in the case of LineReceiver in raw mode) 
>functions are only called after one types some text and hits return.   I 
>need to process input on a keystroke level, since there will be  prompts at 
>which a single keystroke will do things.
>
>Second, I was looking at  twisted.conch.insults.insults.TerminalProtocol 
>after some Googling --  does anyone know if I can just drop this in in place 
>of  protocols.basic.LineReceiver (or whatever) and have it work properly, 
>or does it require some special invocation and/or grab stdio by itself?

Take a look at what twisted.conch.stdio.runWithProtocol does to the terminal.
That's more or less what's necessary to kick it out of line buffered mode and
give you each keystroke as it arrives.

TerminalProtocol is meant to be used with ServerProtocol from the same module.
ServerProtocol will interpret various terminal control sequences and translate
them into calls onto whatever ITerminalProtocol you supply to it.  It probably
won't be much use to use LineReceiver, since keystrokeReceived will be called
with things like backspace and home and other things LineReceiver has no idea
what to do with.  There are a couple other things you might be interested in
though, like twisted.conch.recvline.RecvLine or a class in a project I've been
working on a bit on and off, invective.widgets.LineInputWidget, which uses
insults' widget system to implement a more re-usable line input class (you can
find invective in my Twisted sandbox,

  http://twistedmatrix.com/trac/browser/sandbox/exarkun/invective/

), which will hopefully move back into Twisted at some point.

Jean-Paul



From sebastien.lelong at dexia-securities.fr  Tue Mar 20 07:05:40 2007
From: sebastien.lelong at dexia-securities.fr (=?iso-8859-1?q?S=E9bastien_LELONG?=)
Date: Tue, 20 Mar 2007 14:05:40 +0100
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
Message-ID: <200703201405.41090.sebastien.lelong@dexia-securities.fr>

Hi,

I've been using Twisted for several months, and have frequently encountered 
the following problem. 

In my Twisted apps, I declare services (t.a.service.Service), which then I 
need to subclass. The problem is I can't call super() on such subclass, since 
the class Service in twisted does not inherit the built-in 'object' type 
("TypeError: super() argument 1 must be type, not classobj"). For now, I can 
use other form of superclass calling, but that can be error prone.

Is there any particular reason why class Service isn't a subclass of object ? 
It's kind of surprising since Service is designed to be subclassed.

Thanks in advance for your help/replies.

Cheers,

Seb
-- 
Sébastien LELONG
sebastien.lelong[at]sirloon.net
http://www.sirloon.net



From exarkun at divmod.com  Tue Mar 20 08:13:22 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 09:13:22 -0500
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
In-Reply-To: <200703201405.41090.sebastien.lelong@dexia-securities.fr>
Message-ID: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>

On Tue, 20 Mar 2007 14:05:40 +0100, Sébastien LELONG <sebastien.lelong at dexia-securities.fr> wrote:
>Hi,
>
>I've been using Twisted for several months, and have frequently encountered
>the following problem.
>
>In my Twisted apps, I declare services (t.a.service.Service), which then I
>need to subclass. The problem is I can't call super() on such subclass, since
>the class Service in twisted does not inherit the built-in 'object' type
>("TypeError: super() argument 1 must be type, not classobj"). For now, I can
>use other form of superclass calling, but that can be error prone.
>
>Is there any particular reason why class Service isn't a subclass of object ?
>It's kind of surprising since Service is designed to be subclassed.
>
>Thanks in advance for your help/replies.
>
>Cheers,
>

The major reason is backwards compatibility.  Changing a class to inherit
from object can break subclasses which didn't expect this.

The idea that's been discussed so far to address this is something along the
lines of adding an optional keyword argument to allow each user of the class
to specify whether it wants classic or new-style.  The default would be stay
classic for a while, then that would be deprecated, and finally it would be
an error not to ask for new-style (or maybe it would just become new-style
by default, but I don't like that so much).  Nothing's even nearly decided
yet though.  Suggestions are, of course, welcome. :)

You might find the information given here:

  http://fuhm.net/super-harmful/

interesting as well, though (completely separate from whether Service is
new-style or not).

Jean-Paul



From jarek.zgoda at sensisoft.com  Tue Mar 20 08:34:24 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Tue, 20 Mar 2007 15:34:24 +0100
Subject: [Twisted-Python] Twistd memory usage
Message-ID: <45FFF0F0.6060907@sensisoft.com>

I have an application, ran as twistd plugin. If I run it as daemon,
twistd consumes all available memory (of 4GB available), then after few
seconds of swapping twistd is killed by kernel's OOM killer. I cann't
reproduce this when I run this application in no-daemon mode (twistd
-n), the memory footprint is constant and does not exceed 150MB. Is this
normal behaviour?

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From sebastien.lelong at dexia-securities.fr  Tue Mar 20 09:16:58 2007
From: sebastien.lelong at dexia-securities.fr (=?utf-8?q?S=C3=A9bastien_LELONG?=)
Date: Tue, 20 Mar 2007 16:16:58 +0100
Subject: [Twisted-Python] Inheriting t.a.service.Service and super
In-Reply-To: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>
References: <20070320141322.18920.1637805005.divmod.quotient.4231@ohm>
Message-ID: <200703201616.58878.sebastien.lelong@dexia-securities.fr>

Thanks for your reply !

> The major reason is backwards compatibility.  Changing a class to inherit
> from object can break subclasses which didn't expect this.
> [...] You might find the information given here [link] interesting as well

OK, I understand that. And thanks for your interresting link. I guess I might 
need to reconsider my "super" approach :). For now, I'll use the oldstyle 
superclass calling with twisted's Service.


Cheers,

Seb
-- 
Sébastien LELONG
sebastien.lelong[at]sirloon.net
http://www.sirloon.net



From listbox at evernex.com  Tue Mar 20 13:02:36 2007
From: listbox at evernex.com (Neurophyre)
Date: Tue, 20 Mar 2007 12:02:36 -0700
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>
References: <20070320111355.18920.2001733244.divmod.quotient.4196@ohm>
Message-ID: <F3016DCB-D50E-4984-ABF6-2BEF06F88D49@evernex.com>

On Mar 20, 2007, at 4:13 AM, Jean-Paul Calderone wrote:

> Take a look at what twisted.conch.stdio.runWithProtocol does to the  
> terminal.
> That's more or less what's necessary to kick it out of line  
> buffered mode and
> give you each keystroke as it arrives.

Thanks for this pointer.  I'm going to try rewriting my terminal I/O  
code, what little of it there is, to use that this morning.

> TerminalProtocol is meant to be used with ServerProtocol from the  
> same module.
> ServerProtocol will interpret various terminal control sequences  
> and translate
> them into calls onto whatever ITerminalProtocol you supply to it.   
> It probably

After looking at your invective code a second time (somebody in  
#twisted pointed me to it last night) I'm still not entirely sure how  
ServerProtocol integrates.  It seems like you're mainly just using it  
as a sort of container of constants to interpret special keystrokes  
(like alt-whatever, or backspace or similar) and in the test cases to  
produce such sequences.  Is that its main use?

> what to do with.  There are a couple other things you might be  
> interested in
> though, like twisted.conch.recvline.RecvLine or a class in a  
> project I've been
> working on a bit on and off, invective.widgets.LineInputWidget,  
> which uses
> insults' widget system to implement a more re-usable line input  
> class (you can
> find invective in my Twisted sandbox,

Yep, I think twisted.conch.recvline.RecvLine may be what I'm looking  
for.  My program needs to respond to keystrokes in some cases, and  
allow line editing in others -- message entry, for example.

Thanks again for your help and I'll probably be back here with more  
questions at some point.

--Neuro




From exarkun at divmod.com  Tue Mar 20 13:43:26 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 14:43:26 -0500
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <F3016DCB-D50E-4984-ABF6-2BEF06F88D49@evernex.com>
Message-ID: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>

On Tue, 20 Mar 2007 12:02:36 -0700, Neurophyre <listbox at evernex.com> wrote:
> [snip]
>
>After looking at your invective code a second time (somebody in  #twisted 
>pointed me to it last night) I'm still not entirely sure how  ServerProtocol 
>integrates.  It seems like you're mainly just using it  as a sort of 
>container of constants to interpret special keystrokes  (like alt-whatever, 
>or backspace or similar) and in the test cases to  produce such sequences. 
>Is that its main use?

Well, it is also a protocol implementation for something like VT102.  A lot
of the tests bypass the byte-level stuff because that's not what's interesting
for what they're testing.  In your actual code, ServerProtocol is what is
responsible for calling keystrokeReceived with all of those interesting
values.

Jean-Paul



From listbox at evernex.com  Tue Mar 20 14:31:19 2007
From: listbox at evernex.com (Neurophyre)
Date: Tue, 20 Mar 2007 13:31:19 -0700
Subject: [Twisted-Python] using stdio with Twisted
In-Reply-To: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>
References: <20070320194326.18920.491814317.divmod.quotient.4293@ohm>
Message-ID: <000E1D16-E278-4F75-906F-9D477D428101@evernex.com>

On Mar 20, 2007, at 12:43 PM, Jean-Paul Calderone wrote:

>
> Well, it is also a protocol implementation for something like  
> VT102.  A lot
> of the tests bypass the byte-level stuff because that's not what's  
> interesting
> for what they're testing.  In your actual code, ServerProtocol is  
> what is
> responsible for calling keystrokeReceived with all of those  
> interesting
> values.

Sorry, but I don't understand how to make it do that.  I have my own  
user interface 'protocol' which at this point is getting  
keystrokeReceived events and echoing them to the screen, but it's  
only getting a keyID and the modifier field is always None.  Also, if  
I enter a control-key, the control character is echoed (for example  
ctrl-J produces a line feed) but the modifier is not set.

I've grepped your code and found only one place, in widgets.py, where  
it's used that isn't a test case -- and that's just doing a  
comparison on a received keystroke, I think.

Here's my relevant code, for reference:


class DOCUIProtocol(recvline.RecvLine):
     """
     A 'protocol' which handles the user interface.
     """

     def connectionMade(self):
         """runWithProtocol() in main"""
         # process individual keystrokes, hopefully

         # http://svn.twistedmatrix.com/cvs/sandbox/exarkun/invective/ 
trunk/invective/tui.py?rev=19759&view=auto
         super(DOCUIProtocol, self).connectionMade()
         self.terminal.resetPrivateModes([privateModes.CURSOR_MODE])

         # set up quasi-singleton state variables
         self.__buff = ClientUITidbits.KeystrokeBuffer()
         self.__clientUIState = ClientUITidbits.UIState()
         self.__clientUIState.setState(Constants.UISTATE_DISCONNECTED)

         # make a quasi-singleton instance of ourself so others can  
use write() and writeLine()
         dummy = ClientUITidbits.StdIO()
         dummy.stdioInstance = self;

         d = self.write(u'done.\n')
         self.connectBBS()

     def keystrokeReceived(self, keyID, modifier):
         # see http://twistedmatrix.com/documents/current/api/ 
twisted.conch.insults.insults.TerminalProtocol.html
         # TODO fix for control keys
         self.writeLine("Got key: " + keyID + " " + str(modifier))

         # ?
         if keyID == ServerProtocol.RIGHT_ARROW:
             self.writeLine("killed")
             reactor.stop()

         #self.__buff.append(keyID)
         #ClientParseInput.KeystrokeDispatcher.parse()

     # TODO delete if we continue using insults
     def dataReceived(self, data):
         self.__buff.append(data)
         ClientParseInput.KeystrokeDispatcher.parse()

     def write(self, data):
         """write data to stdout, encoded in an output charset"""
         # TODO delete for conch
         # self.transport.write(data.encode(Constants.CHARSET_OUTPUT))
         self.terminal.write(data.encode(Constants.CHARSET_OUTPUT))

     def writeLine(self, data):
         """write data plus a newline, encoded in an output charset"""
         # TODO find out why this isn't working right
         # TODO delete for conch
         # self.transport.write(data.encode(Constants.CHARSET_OUTPUT  
+ '\n'))
         self.terminal.write(data.encode(Constants.CHARSET_OUTPUT) +  
'\n')

     def connectBBS(self):
         """initiate the TCP connection to the BBS server and start  
the reactor."""
         # the factory writes diagnostic messages to the stdio  
instance for us
         reactor.connectTCP('vapor.evernex.net', 9023,  
ClientProtocol.BBSClientProtocolFactory())
         # reactor.run()


class CommandLineUserInterface(DOCUIProtocol):
     """
     See http://svn.twistedmatrix.com/cvs/sandbox/exarkun/invective/ 
trunk/invective/tui.py?rev=19759&view=auto
     """

     def connectionMade(self):
         signal(SIGWINCH, self.windowChanged)
         winSize = self.getWindowSize()
         self.width = winSize[0]
         self.height = winSize[1]
         super(CommandLineUserInterface, self).connectionMade()

     def connectionLost(self, reason):
         reactor.stop()

     # XXX Should be part of runWithProtocol
     def getWindowSize(self):
         winsz = ioctl(0, TIOCGWINSZ, '12345678')
         winSize = unpack('4H', winsz)
         newSize = winSize[1], winSize[0], winSize[3], winSize[2]
         return newSize

     def windowChanged(self, signum, frame):
         winSize = self.getWindowSize()
         self.terminalSize(winSize[0], winSize[1])


if __name__ == "__main__":
     splashLine = Constants.VERSION_CLIENT_LINE + u' - ' +  
Constants.VERSION_COPYRIGHT
     print splashLine.encode(Constants.CHARSET_OUTPUT)
     print 'Connecting user interface: ',
     runWithProtocol(CommandLineUserInterface)




From kickdaddy at gmail.com  Tue Mar 20 15:27:26 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 14:27:26 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and additional
	sections
Message-ID: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>

Hey all,

I have a client I have written using twisted.names that will send a
DNS request.  Here is the gist of the relevant code:

    (tfp, tfile) = tempfile.mkstemp()
    os.write(tfp, 'nameserver %s' % ip)
    os.close(tfp)
    resolver = client.createResolver(resolvconf=tfile)
    deferred = resolver.lookupAddress(somevalue)
    deferred.addCallback(resultHandler)

hacky way to set the IP, but I am having issues with passing in the
"servers" list I don't want to troubleshoot until I figure out this
problem.

Anyways, as you can see, this code calls the lookupAddress method for
the name I want.  The problem I am having is it is only returning the
answer section of the response.  I need the additional and authority
sections as well (and I know for sure those sections exist in the
response).  I have looked at the docs and the code, and I don't know
what I am missing.  I am sure it's something silly, but I am missing
it right now.

So long question short, what do I need to change in my code so I can
get the additional sections and authority sections in the response so
I can get to those values?

Thanks,
Sean



From exarkun at divmod.com  Tue Mar 20 16:30:11 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 17:30:11 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>
Message-ID: <20070320223011.18920.1524114690.divmod.quotient.4325@ohm>

On Tue, 20 Mar 2007 14:27:26 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Hey all,
>
>I have a client I have written using twisted.names that will send a
>DNS request.  Here is the gist of the relevant code:
>
>    (tfp, tfile) = tempfile.mkstemp()
>    os.write(tfp, 'nameserver %s' % ip)
>    os.close(tfp)
>    resolver = client.createResolver(resolvconf=tfile)
>    deferred = resolver.lookupAddress(somevalue)
>    deferred.addCallback(resultHandler)
>
>hacky way to set the IP, but I am having issues with passing in the
>"servers" list I don't want to troubleshoot until I figure out this
>problem.
>
>Anyways, as you can see, this code calls the lookupAddress method for
>the name I want.  The problem I am having is it is only returning the
>answer section of the response.  I need the additional and authority
>sections as well (and I know for sure those sections exist in the
>response).  I have looked at the docs and the code, and I don't know
>what I am missing.  I am sure it's something silly, but I am missing
>it right now.
>
>So long question short, what do I need to change in my code so I can
>get the additional sections and authority sections in the response so
>I can get to those values?

One approach would be to use queryUDP directly instead of lookupAddress:

    resolver.queryUDP([dns.Query(name, dns.A, dns.IN)])

Which will give you a full message object back, including lists of answers,
additional, and authority sections.

Jean-Paul



From kickdaddy at gmail.com  Tue Mar 20 17:13:14 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 16:13:14 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070320223011.18920.1524114690.divmod.quotient.4325@ohm>
References: <45666470703201427u24564fao3c529ef0fc86fe5@mail.gmail.com>
	<20070320223011.18920.1524114690.divmod.quotient.4325@ohm>
Message-ID: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>

Thanks Jean-Paul,

I tried changing to queryUDP, and it just sits there, never sends out
a query (watching with tcpdump).  If I change it to _lookup, which it
looks like queryUDP calls, it sends the query, but like lookupAddress,
I don't get the additional and auth sections still...

What is weird, when I do this

deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])

and I try and debug why it's hanging, I put a print in the
ResolverBase.queryUDP function right at the top, and it never prints.

Regards,
Sean


On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 20 Mar 2007 14:27:26 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> >Hey all,
> >
> >I have a client I have written using twisted.names that will send a
> >DNS request.  Here is the gist of the relevant code:
> >
> >    (tfp, tfile) = tempfile.mkstemp()
> >    os.write(tfp, 'nameserver %s' % ip)
> >    os.close(tfp)
> >    resolver = client.createResolver(resolvconf=tfile)
> >    deferred = resolver.lookupAddress(somevalue)
> >    deferred.addCallback(resultHandler)
> >
> >hacky way to set the IP, but I am having issues with passing in the
> >"servers" list I don't want to troubleshoot until I figure out this
> >problem.
> >
> >Anyways, as you can see, this code calls the lookupAddress method for
> >the name I want.  The problem I am having is it is only returning the
> >answer section of the response.  I need the additional and authority
> >sections as well (and I know for sure those sections exist in the
> >response).  I have looked at the docs and the code, and I don't know
> >what I am missing.  I am sure it's something silly, but I am missing
> >it right now.
> >
> >So long question short, what do I need to change in my code so I can
> >get the additional sections and authority sections in the response so
> >I can get to those values?
>
> One approach would be to use queryUDP directly instead of lookupAddress:
>
>     resolver.queryUDP([dns.Query(name, dns.A, dns.IN)])
>
> Which will give you a full message object back, including lists of answers,
> additional, and authority sections.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From wgwigw at gmail.com  Tue Mar 20 20:01:11 2007
From: wgwigw at gmail.com (wang wei)
Date: Wed, 21 Mar 2007 10:01:11 +0800
Subject: [Twisted-Python] question about thread and threadpool
Message-ID: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>

the document said:
# run method in thread
reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
but after above code, Is that Thread dead? and how can I re-use this thread?
and if I create a thread using python thread module, can I use reactor to
re-use it?
there is a threadpool in twisted, is there any example of how to use it?
thanks for any advices.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070321/dcae0753/attachment.html>

From exarkun at divmod.com  Tue Mar 20 20:41:52 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 21:41:52 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
Message-ID: <20070321024152.18920.1241379717.divmod.quotient.4396@ohm>

On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Thanks Jean-Paul,
>
>I tried changing to queryUDP, and it just sits there, never sends out
>a query (watching with tcpdump).  If I change it to _lookup, which it
>looks like queryUDP calls, it sends the query, but like lookupAddress,
>I don't get the additional and auth sections still...
>
>What is weird, when I do this
>
>deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
>
>and I try and debug why it's hanging, I put a print in the
>ResolverBase.queryUDP function right at the top, and it never prints.
>

The factoring here is a little weird.  Try creating a t.names.client.Resolver
explicitly (just instantiate it with a servers list or a resolv.conf filename)
and calling queryUDP on it (unless you were doing this already).  The
createResolver function does some other stuff which might be getting in the
way here, either of functioning or debugging.

Here's an example (using t/conch/stdio.py):

  >>> from twisted.names import dns, client
  >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
  >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
  >>> d
  <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
  >>> d.result
  <twisted.names.dns.Message instance at 0xb79b6aec>
  >>> d.result.authority
  [<snip - a bunch of records>]
  >>> d.result.additional
  [<snip - a bunch of records>]
  >>> d.result.answers
  []
  >>>

Hope this helps things,

Jean-Paul



From exarkun at divmod.com  Tue Mar 20 20:44:25 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 20 Mar 2007 21:44:25 -0500
Subject: [Twisted-Python] question about thread and threadpool
In-Reply-To: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>
Message-ID: <20070321024425.18920.361163719.divmod.quotient.4398@ohm>

On Wed, 21 Mar 2007 10:01:11 +0800, wang wei <wgwigw at gmail.com> wrote:
>the document said:
># run method in thread
>reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
>but after above code, Is that Thread dead? and how can I re-use this thread?
>and if I create a thread using python thread module, can I use reactor to
>re-use it?
>there is a threadpool in twisted, is there any example of how to use it?
>thanks for any advices.
>

callInThread uses a threadpool.  If you use it again after the first function
finishes, it is quite likely that the same thread will be used to service the
second request.

If you want, you can also create your own twisted.python.threadpool.ThreadPool
instance and dispatch calls to it.

Jean-Paul



From kickdaddy at gmail.com  Tue Mar 20 21:16:59 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 20:16:59 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
Message-ID: <45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>

Sweet!  That was it.  Explicitly creating the Resolver worked like a
charm (don't ask me why :)   ).  Thanks!

On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> >Thanks Jean-Paul,
> >
> >I tried changing to queryUDP, and it just sits there, never sends out
> >a query (watching with tcpdump).  If I change it to _lookup, which it
> >looks like queryUDP calls, it sends the query, but like lookupAddress,
> >I don't get the additional and auth sections still...
> >
> >What is weird, when I do this
> >
> >deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
> >
> >and I try and debug why it's hanging, I put a print in the
> >ResolverBase.queryUDP function right at the top, and it never prints.
> >
>
> The factoring here is a little weird.  Try creating a t.names.client.Resolver
> explicitly (just instantiate it with a servers list or a resolv.conf filename)
> and calling queryUDP on it (unless you were doing this already).  The
> createResolver function does some other stuff which might be getting in the
> way here, either of functioning or debugging.
>
> Here's an example (using t/conch/stdio.py):
>
>   >>> from twisted.names import dns, client
>   >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
>   >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
>   >>> d
>   <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
>   >>> d.result
>   <twisted.names.dns.Message instance at 0xb79b6aec>
>   >>> d.result.authority
>   [<snip - a bunch of records>]
>   >>> d.result.additional
>   [<snip - a bunch of records>]
>   >>> d.result.answers
>   []
>   >>>
>
> Hope this helps things,
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From wgwigw at gmail.com  Tue Mar 20 21:40:21 2007
From: wgwigw at gmail.com (wang wei)
Date: Wed, 21 Mar 2007 11:40:21 +0800
Subject: [Twisted-Python] question about thread and threadpool
In-Reply-To: <20070321024425.18920.361163719.divmod.quotient.4398@ohm>
References: <dbeb95830703201901vad5b28cydf65ef685f412d71@mail.gmail.com>
	<20070321024425.18920.361163719.divmod.quotient.4398@ohm>
Message-ID: <dbeb95830703202040t72058a2ia0a5dfe82a243fde@mail.gmail.com>

2007/3/21, Jean-Paul Calderone <exarkun at divmod.com>:
>
> On Wed, 21 Mar 2007 10:01:11 +0800, wang wei <wgwigw at gmail.com> wrote:
> >the document said:
> ># run method in thread
> >reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
> >but after above code, Is that Thread dead? and how can I re-use this
> thread?
> >and if I create a thread using python thread module, can I use reactor to
> >re-use it?
> >there is a threadpool in twisted, is there any example of how to use it?
> >thanks for any advices.
> >
>
> callInThread uses a threadpool.  If you use it again after the first
> function
> finishes, it is quite likely that the same thread will be used to service
> the
> second request.
>
> If you want, you can also create your own
> twisted.python.threadpool.ThreadPool
> instance and dispatch calls to it.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
thanks, I get the idea. Is there any examples on how to use it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070321/8fb009b0/attachment.html>

From kickdaddy at gmail.com  Tue Mar 20 21:42:25 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Tue, 20 Mar 2007 20:42:25 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
Message-ID: <45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>

Ok...ignore my last post, jumped the gun, the additional and authority
still don't exist in the result object.  In addition, I tried your
example to make sure I wasn't crazy, and it doesn't return any result
data.  I know it's not a network issue or anything silly as I can
query a.root fine with dig and get the results.  Here is the session:

$ cat test.py
#!/usr/bin/python2.4
import time
from twisted.names import dns, client, _version
print _version.version
def errorHandler(error):
    print str(error)
r = client.Resolver(servers=[('198.41.0.4', 53)])
d = r.queryUDP([dns.Query('google.com', dns.IN,
dns.A)]).addErrback(errorHandler)
time.sleep(5)  ## give it a time for shitz and giggles
print d
print d.result

$ ./test.py
[twisted.names, version 0.4.0]
<Deferred at 0xB7BBBFECL>
Traceback (most recent call last):
  File "./test.py", line 10, in ?
    print d.result
AttributeError: Deferred instance has no attribute 'result'






On 3/20/07, Sean Leach <kickdaddy at gmail.com> wrote:
> Sweet!  That was it.  Explicitly creating the Resolver worked like a
> charm (don't ask me why :)   ).  Thanks!
>
> On 3/20/07, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> > On Tue, 20 Mar 2007 16:13:14 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
> > >Thanks Jean-Paul,
> > >
> > >I tried changing to queryUDP, and it just sits there, never sends out
> > >a query (watching with tcpdump).  If I change it to _lookup, which it
> > >looks like queryUDP calls, it sends the query, but like lookupAddress,
> > >I don't get the additional and auth sections still...
> > >
> > >What is weird, when I do this
> > >
> > >deferred = resolver.queryUDP([Dns.Query(name, dns.IN, dns.A)])
> > >
> > >and I try and debug why it's hanging, I put a print in the
> > >ResolverBase.queryUDP function right at the top, and it never prints.
> > >
> >
> > The factoring here is a little weird.  Try creating a t.names.client.Resolver
> > explicitly (just instantiate it with a servers list or a resolv.conf filename)
> > and calling queryUDP on it (unless you were doing this already).  The
> > createResolver function does some other stuff which might be getting in the
> > way here, either of functioning or debugging.
> >
> > Here's an example (using t/conch/stdio.py):
> >
> >   >>> from twisted.names import dns, client
> >   >>> r = client.Resolver(servers=[('198.41.0.4', 53)])
> >   >>> d = r.queryUDP([dns.Query('google.com', dns.IN, dns.A)])
> >   >>> d
> >   <Deferred at 0xB78F072CL  current result: <twisted.names.dns.Message instance at 0xb79b6aec>>
> >   >>> d.result
> >   <twisted.names.dns.Message instance at 0xb79b6aec>
> >   >>> d.result.authority
> >   [<snip - a bunch of records>]
> >   >>> d.result.additional
> >   [<snip - a bunch of records>]
> >   >>> d.result.answers
> >   []
> >   >>>
> >
> > Hope this helps things,
> >
> > Jean-Paul
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From therve at free.fr  Wed Mar 21 03:11:51 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Wed, 21 Mar 2007 10:11:51 +0100
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
Message-ID: <20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>

Quoting Sean Leach <kickdaddy at gmail.com>:

> Ok...ignore my last post, jumped the gun, the additional and authority
> still don't exist in the result object.  In addition, I tried your
> example to make sure I wasn't crazy, and it doesn't return any result
> data.  I know it's not a network issue or anything silly as I can
> query a.root fine with dig and get the results.  Here is the session:
>
> $ cat test.py
> #!/usr/bin/python2.4
> import time
> from twisted.names import dns, client, _version
> print _version.version
> def errorHandler(error):
>    print str(error)
> r = client.Resolver(servers=[('198.41.0.4', 53)])
> d = r.queryUDP([dns.Query('google.com', dns.IN,
> dns.A)]).addErrback(errorHandler)
> time.sleep(5)  ## give it a time for shitz and giggles
> print d
> print d.result

I *think* you're missing something about Twisted. You should start the reactor
to have something, and *never* use time.sleep inside a Twisted program.

You could start with reading the documentation here:
http://twistedmatrix.com/projects/core/documentation/howto/async.html.

-- 
Thomas






From kickdaddy at gmail.com  Wed Mar 21 06:31:08 2007
From: kickdaddy at gmail.com (Sean Leach)
Date: Wed, 21 Mar 2007 05:31:08 -0700
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
	<20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
Message-ID: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>

Yes - I know, this was a small example program to show the problem I
was seeing.  And I have read over all of the documentation, including
the Twisted.names source.

On 3/21/07, Thomas Hervé <therve at free.fr> wrote:
> Quoting Sean Leach <kickdaddy at gmail.com>:
>
> > Ok...ignore my last post, jumped the gun, the additional and authority
> > still don't exist in the result object.  In addition, I tried your
> > example to make sure I wasn't crazy, and it doesn't return any result
> > data.  I know it's not a network issue or anything silly as I can
> > query a.root fine with dig and get the results.  Here is the session:
> >
> > $ cat test.py
> > #!/usr/bin/python2.4
> > import time
> > from twisted.names import dns, client, _version
> > print _version.version
> > def errorHandler(error):
> >    print str(error)
> > r = client.Resolver(servers=[('198.41.0.4', 53)])
> > d = r.queryUDP([dns.Query('google.com', dns.IN,
> > dns.A)]).addErrback(errorHandler)
> > time.sleep(5)  ## give it a time for shitz and giggles
> > print d
> > print d.result
>
> I *think* you're missing something about Twisted. You should start the reactor
> to have something, and *never* use time.sleep inside a Twisted program.
>
> You could start with reading the documentation here:
> http://twistedmatrix.com/projects/core/documentation/howto/async.html.
>
> --
> Thomas
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From itamar at itamarst.org  Wed Mar 21 06:58:07 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Mar 2007 08:58:07 -0400
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
References: <45666470703201613r6f3e07cfm846dc48b88756889@mail.gmail.com>
	<20070321024152.18920.1241379717.divmod.quotient.4396@ohm>
	<45666470703202016u6055a5a9hd725bc64f0020b44@mail.gmail.com>
	<45666470703202042t758bd8ady3bbf635fe43ee0e1@mail.gmail.com>
	<20070321101151.k4yg3thf6a8888w0@wasabox.wasabout.net>
	<45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
Message-ID: <1174481887.29452.12.camel@localhost.localdomain>

On Wed, 2007-03-21 at 05:31 -0700, Sean Leach wrote:
> Yes - I know, this was a small example program to show the problem I
> was seeing.  And I have read over all of the documentation, including
> the Twisted.names source.

That example program is always going to fail without reactor.run(),
though, so it doesn't really serve its purpose if you've found a real
bug.




From exarkun at divmod.com  Wed Mar 21 07:36:41 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 21 Mar 2007 08:36:41 -0500
Subject: [Twisted-Python] Twisted.Names assistance with auth and
	additional sections
In-Reply-To: <45666470703210531s5a4cf6c7uf63854217a96656b@mail.gmail.com>
Message-ID: <20070321133641.18920.2121663165.divmod.quotient.4525@ohm>

On Wed, 21 Mar 2007 05:31:08 -0700, Sean Leach <kickdaddy at gmail.com> wrote:
>Yes - I know, this was a small example program to show the problem I
>was seeing.  And I have read over all of the documentation, including
>the Twisted.names source.
>

The example I gave might have been a bit confusing.  I was using a shell
that has the reactor running already, so I didn't need to start it.  The
equivalent as a normal Twisted program would be something like:

  #!/usr/bin/python2.4
  import time
  from twisted.names import dns, client, _version
  from twisted.internet import reactor
  def errorHandler(error):
      print str(error)
  def gotMessage(message):
      print message.answers
      print message.additional
      print message.authority
  r = client.Resolver(servers=[('198.41.0.4', 53)])
  d = r.queryUDP([
      dns.Query('google.com', dns.IN, dns.A)])
  d.addErrback(errorHandler)
  d.addCallback(gotMessage)
  reactor.run()

Jean-Paul



From twisted-python at 2xlp.com  Wed Mar 21 09:32:53 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 11:32:53 -0400
Subject: [Twisted-Python] suggestion for tracking down cause of 2 bugs
	sought: possibly threads / defer.DeferredSemaphore ?
Message-ID: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>


I've got 2 bugs in a twisted app that I'm trying to narrow in on.

Overview of the app:
	A twisted service connects to a db and requests about 500 web pages  
to download and analyze.
	The service than uses defer.DeferredSemaphore service to handle  
dispatching each request to a thread via deferToThread .
		defer.DeferredSemaphore( tokens= MAX_DOWNLOADERS )
		reactor.suggestThreadPoolSize( MAX_DOWNLOADERS + 1 )
	Each thread runs a python script that is not written in Twisted and  
has a lot of blocking.

And to pre-empt many comments that will inevitably pop up: It would  
be great to convert all the code to twisted , but 90% of the code +  
underlying modules are used by command line maintenance routines that  
were already in place.  I just don't have the time or resources to  
rewrite it all in twisted.  One day I'd love to have the funding to  
hire someone to manage them, but I just don't have that time myself.


Overview of the bugs:
	1)
		The query for figuring out which pages to download can take quite  
some time , so I run the getNextDownloads routine in a new thread ,  
so the pool always remains full.
		It works perfect, except when the number of items queued up to  
defer.DeferredSemaphore reaches ~ 1000.
		After ~1000, I seem to only be running with 1-2 semaphores in place  
not 15

		Question:
			Can anyone suggest a way to test this to see where the error is?
			Off the top of my head, the following seem plausible:
				a- hitting 1000 just breaks something in  
defer.DeferredSemaphore  .  the module is listed as unstable, so I'm  
guessing this could be the cause.
				b- the defer.DeferredSemaphore connection is just coincidental --  
its really an issue with threads locking up
				c- something entirely different
			Unfortunately, I'm at a loss on trying to figure out whats going on.

	2)
		I'm experiencing an obscene amount of process growth.  I'm fairly  
certain that its from constant errors in urllib2 , which has been  
nothing of a nightmare with countless known bugs and patches  
( downloading takes place via Mechanize , which is wrapped via  
urllib2 ), and makes me consider just wrapping wget or curl.   but  
this could very well be threading related.
		
		Question:
			Is there any way to profile memory usage by twisted in a granular  
fashion ?  I'd like to figure out where this memory usage is ( it  
grows steadily to ~1.7gb after 8 hours ).

Thanks,

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
| SyndiClick.com
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      FindMeOn.com - The cure for Multiple Web Personality Disorder
|      Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      RoadSound.com - Tools For Bands, Stuff For Fans
|      Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -





From itamar at itamarst.org  Wed Mar 21 09:59:56 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 21 Mar 2007 11:59:56 -0400
Subject: [Twisted-Python] Twistd memory usage
In-Reply-To: <45FFF0F0.6060907@sensisoft.com>
References: <45FFF0F0.6060907@sensisoft.com>
Message-ID: <1174492796.29452.21.camel@localhost.localdomain>

On Tue, 2007-03-20 at 15:34 +0100, Jarek Zgoda wrote:
> I have an application, ran as twistd plugin. If I run it as daemon,
> twistd consumes all available memory (of 4GB available), then after few
> seconds of swapping twistd is killed by kernel's OOM killer. I cann't
> reproduce this when I run this application in no-daemon mode (twistd
> -n), the memory footprint is constant and does not exceed 150MB. Is this
> normal behaviour?

That is not normal behavior. Maybe you could expand a bit on what the
program does, what the logs say, etc.?




From twisted-python at 2xlp.com  Wed Mar 21 13:34:02 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 15:34:02 -0400
Subject: [Twisted-Python] suggestion for tracking down cause of 2 bugs
	sought: possibly threads / defer.DeferredSemaphore ?
In-Reply-To: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
References: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
Message-ID: <D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>


On Mar 21, 2007, at 11:32 AM, Jonathan Vanasco wrote:


> 	2)
> 		I'm experiencing an obscene amount of process growth.  I'm fairly  
> certain that its from constant errors in urllib2 , which has been  
> nothing of a nightmare with countless known bugs and patches  
> ( downloading takes place via Mechanize , which is wrapped via  
> urllib2 ), and makes me consider just wrapping wget or curl.   but  
> this could very well be threading related.
> 		
> 		Question:
> 			Is there any way to profile memory usage by twisted in a  
> granular fashion ?  I'd like to figure out where this memory usage  
> is ( it grows steadily to ~1.7gb after 8 hours ).
>

I just came across this:
	From: 	  mwl at point45.com
	Subject: 	Re: [Twisted-Python] questions about large db queries and  
memory leak
	Date: 	February 8, 2007 8:28:59 AM EST
	...
	If you're not running Python >= 2.5.0 this might be relevant:
	http://evanjones.ca/python-memory.html


i was on 2.4, upping to 2.5 solved that issue.  incremental growth  
of .2mb / thread instance ( which ate 1.7gb of ram in an hour or  
so ) , has been replaced by a steady 18-25mb daemon

my machine is responsive again.

// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
| SyndiClick.com
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      FindMeOn.com - The cure for Multiple Web Personality Disorder
|      Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -
|      RoadSound.com - Tools For Bands, Stuff For Fans
|      Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - - - - -





From matusis at matusis.com  Wed Mar 21 15:01:27 2007
From: matusis at matusis.com (Alec Matusis)
Date: Wed, 21 Mar 2007 14:01:27 -0700
Subject: [Twisted-Python] suggestion for tracking down cause of 2
	bugs	sought: possibly threads / defer.DeferredSemaphore ?
In-Reply-To: <D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>
References: <EAD7635D-B156-4A14-9E65-3ADE878CB6B5@2xlp.com>
	<D71C3B26-082D-4CA6-ABBF-EEB7F3DDA0A2@2xlp.com>
Message-ID: <00e201c76bfc$188ddf30$49a99d90$@com>

> > Is there any way to profile memory usage by twisted
> in a
> > granular fashion ?  I'd like to figure out where this memory usage
> > is ( it grows steadily to ~1.7gb after 8 hours ).

We found twisted manhole very useful for this. Inspect all your objects via
manhole on the production server.
Also, in one instance, we had to force python garbage collector to collect
every 10 min: for some reason: without this, the RSS size just grew and
grew...

> -----Original Message-----
> From: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-
> bounces at twistedmatrix.com] On Behalf Of Jonathan Vanasco
> Sent: Wednesday, March 21, 2007 12:34 PM
> To: Twisted general discussion
> Subject: Re: [Twisted-Python] suggestion for tracking down cause of 2
> bugs sought: possibly threads / defer.DeferredSemaphore ?
> 
> 
> On Mar 21, 2007, at 11:32 AM, Jonathan Vanasco wrote:
> 
> 
> > 	2)
> > 		I'm experiencing an obscene amount of process growth.  I'm
> fairly
> > certain that its from constant errors in urllib2 , which has been
> > nothing of a nightmare with countless known bugs and patches
> > ( downloading takes place via Mechanize , which is wrapped via
> > urllib2 ), and makes me consider just wrapping wget or curl.   but
> > this could very well be threading related.
> >
> > 		Question:
> > 			Is there any way to profile memory usage by twisted
> in a
> > granular fashion ?  I'd like to figure out where this memory usage
> > is ( it grows steadily to ~1.7gb after 8 hours ).
> >
> 
> I just came across this:
> 	From: 	  mwl at point45.com
> 	Subject: 	Re: [Twisted-Python] questions about large db
queries
> and
> memory leak
> 	Date: 	February 8, 2007 8:28:59 AM EST
> 	...
> 	If you're not running Python >= 2.5.0 this might be relevant:
> 	http://evanjones.ca/python-memory.html
> 
> 
> i was on 2.4, upping to 2.5 solved that issue.  incremental growth
> of .2mb / thread instance ( which ate 1.7gb of ram in an hour or
> so ) , has been replaced by a steady 18-25mb daemon
> 
> my machine is responsive again.
> 
> // Jonathan Vanasco
> 
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> | SyndiClick.com
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> |      FindMeOn.com - The cure for Multiple Web Personality Disorder
> |      Web Identity Management and 3D Social Networking
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> |      RoadSound.com - Tools For Bands, Stuff For Fans
> |      Collaborative Online Management And Syndication Tools
> | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> - - - - - - - - - - - - - - - - - - -
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted-python at 2xlp.com  Wed Mar 21 17:02:11 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 21 Mar 2007 19:02:11 -0400
Subject: [Twisted-Python] hardcoded max in threadpool or connection pool ?
Message-ID: <C9354EC0-90B3-4C59-AA1B-8B20940944B1@2xlp.com>


forgive my ignorance this week - i'm rusty on twisted.

I seem to be hitting a limit on threads / db connection ( not sure  
which one , as db could block connection ) at 11

The only code i have influencing the sizes are as follows:

=======
class MY_dbConnectionPool( adbapi.ConnectionPool ):
	def __init__( self ,):
		adbapi.ConnectionPool.__init__( self, 'psycopg2' ,
			host="localhost",
			database="xxxxx",
			user="xxxxx",
			password="xxxxx",
			cp_min= 16,
			cp_max= 16
		)
=======
reactor.suggestThreadPoolSize( 17 )
reactor.run()
=======

i never see more than 11 connections - in fact, i always see 11  
connections -- 10 for the db the thread pool, and 1 for the db in the  
main

i'm fairly sure if there's any error here it's going to be my fault  
-- can someone point me in the right direction ?



From vince6 at offshore.ai  Thu Mar 22 01:17:38 2007
From: vince6 at offshore.ai (Vincent Cate)
Date: Thu, 22 Mar 2007 03:17:38 -0400
Subject: [Twisted-Python] Twisted friendly hosting services?
Message-ID: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>


I am working on an application that runs using twisted.web.  I want to
host it on a machine with plenty of bandwidth as cheaply as possible.  

Is there a hosting service that uses Twisted.web so that I can just add
my resource to the namespace?

Or will I have to get a "virtual dedicated server" or a real "dedicated
server"?  If so, does anyone know a virtual one that uses Ubuntu?

Thanks,

   -- Vince





From nico at tekNico.net  Thu Mar 22 02:33:51 2007
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 22 Mar 2007 09:33:51 +0100
Subject: [Twisted-Python] Re: Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <ettf17$lm8$1@sea.gmane.org>

Vincent Cate wrote:
> I am working on an application that runs using twisted.web.  I want to
> host it on a machine with plenty of bandwidth as cheaply as possible.  
> 
> Is there a hosting service that uses Twisted.web so that I can just add
> my resource to the namespace?

Don't know of any.


> Or will I have to get a "virtual dedicated server" or a real "dedicated
> server"?  If so, does anyone know a virtual one that uses Ubuntu?

I'd use either Slicehost or Linode virtual servers (add .com to both).


-- 
Nicola Larosa - http://www.tekNico.net/

Statistically, if you want to avoid failure, it would seem like the most
important thing is to quit your day job. Most founders of failed startups
don't quit their day jobs, and most founders of successful ones do.
If startup failure were a disease, the CDC would be issuing bulletins
warning people to avoid day jobs. -- Paul Graham, October 2006




From jarek.zgoda at sensisoft.com  Thu Mar 22 02:37:57 2007
From: jarek.zgoda at sensisoft.com (Jarek Zgoda)
Date: Thu, 22 Mar 2007 09:37:57 +0100
Subject: [Twisted-Python] Twistd memory usage
In-Reply-To: <1174492796.29452.21.camel@localhost.localdomain>
References: <45FFF0F0.6060907@sensisoft.com>
	<1174492796.29452.21.camel@localhost.localdomain>
Message-ID: <46024065.5090404@sensisoft.com>

Itamar Shtull-Trauring napisał(a):

>> I have an application, ran as twistd plugin. If I run it as daemon,
>> twistd consumes all available memory (of 4GB available), then after few
>> seconds of swapping twistd is killed by kernel's OOM killer. I cann't
>> reproduce this when I run this application in no-daemon mode (twistd
>> -n), the memory footprint is constant and does not exceed 150MB. Is this
>> normal behaviour?
> 
> That is not normal behavior. Maybe you could expand a bit on what the
> program does, what the logs say, etc.?

The application is search/indexing server using PyLucene. It is done as
twisted web resource (rpy). Due to PyLucene limitation, the application
must use "special" thread class (PyLucene.PythonThread) to access index
content. This thread is started in reactor's after startup event
trigger. There is one really large datastructure in the application (the
Queue.Queue object holding dictionaries of documents to be indexed).

As the memory consumption grows in the time of adding documents to
queue, I suspect some problem with garbage collector and the fact that I
observe this behaviour only in daemonized application adds only more
confusion.

There's nothing special in logs, neither twistd or system. Of course,
OOM killer activation is reflected in /var/log/messages, but with no
apparent clues for possible causes. Twistd did not log anything (even
its death).

For now, twistd is run in nodaemon mode (-ny), but I know it's suboptimal...

-- 
Jarek Zgoda

"We read Knuth so you don't have to."



From Marcin.Kasperski at softax.com.pl  Thu Mar 22 08:58:08 2007
From: Marcin.Kasperski at softax.com.pl (Marcin Kasperski)
Date: Thu, 22 Mar 2007 15:58:08 +0100
Subject: [Twisted-Python] Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <1174575488.29223.17.camel@pitagoras>

> Or will I have to get a "virtual dedicated server" or a real dedicated
> server"?  If so, does anyone know a virtual one that uses Ubuntu?

I am using VPS on xenplanet.com for similar purpose
(comparing to linode it is a bit cheaper, and grants *far* more disk
space, and is significantly less polished - less support, emails to
admin in case of trouble etc). So far (about a year) I am happy.







From pico at trispen.com  Thu Mar 22 12:08:50 2007
From: pico at trispen.com (pico)
Date: Thu, 22 Mar 2007 20:08:50 +0200
Subject: [Twisted-Python] Using twisted.conch
Message-ID: <4602C632.9030904@trispen.com>

Hi all.

I'm struggling a bit with twisted.conch.
I've read the howto at 
http://twistedmatrix.com/projects/conch/documentation/howto/conch_client.html.
I can understand this example fine.
For a simple application, it works fine to subclass SSHChannel and 
implement all the code in that classes methods.
However I would like to be able to implement something as follows:

class SSHWrapper:
    def connect(self,hostname,username,password):
       #Create SshTransport object
    def runCommand(self,command)
       #Use SshChannel object to run command, return a deferred
    def disconnect(self):
       #Cleanup

The problem is that, due to the ClientFactory creating instances of the 
relevant objects for you (SSHClientTransport,SSHUserAuthClient,etc), you 
are left without a reference to the SSHChannel object,required to run 
the command.

Is there any way to get the SSHChannel object from the 
SSHClientTransport instance.
Any advice with this matter would be appreciated.

Thanks
Pico



From Benjamin.Rutt at gs.com  Thu Mar 22 12:48:59 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 14:48:59 -0400
Subject: [Twisted-Python] thread pool question
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>

From
http://twistedmatrix.com/projects/core/documentation/howto/threading.htm
l:

I copied the code below and ran it as:

	$ cat twisted-threadpool.py 
	#!/usr/bin/env python

	from twisted.internet import reactor

	def aSillyBlockingMethod(x):
	    import time
	    time.sleep(2)
	    print x

	# run method in thread
	reactor.callInThread(aSillyBlockingMethod, "2 seconds have
passed")

	$ ./twisted-threadpool.py 
	2 seconds have passed

But I note that the program never stops.  I infer that least one thread
is getting set as a non-daemon thread, according to python's thread
rules on program termination:

  `thread.setDaemon(daemonic)'
     Set the thread's daemon flag to the Boolean value DAEMONIC.  This
     must be called before `start()' is called.

     The initial value is inherited from the creating thread.

     The entire Python program exits when no active non-daemon threads
     are left.

Is there a way to set this program up such that the program will exit
when all of the threads registered via callInThread, and the main
thread, have exited?

Thanks,
-- 
Benjamin Rutt


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070322/8defeae6/attachment.html>

From manlio_perillo at libero.it  Thu Mar 22 13:09:07 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Mar 2007 20:09:07 +0100
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <4602D453.7020300@libero.it>

Rutt, Benjamin ha scritto:
>  From 
> _http://twistedmatrix.com/projects/core/documentation/howto/threading.html_: 
> 
> 
> I copied the code below and ran it as:
> 
>       $ cat twisted-threadpool.py
>       #!/usr/bin/env python
> 
>       from twisted.internet import reactor
> 
>       def aSillyBlockingMethod(x):
>           import time
>           time.sleep(2)
>           print x
> 
>       # run method in thread
>       reactor.callInThread(aSillyBlockingMethod, "2 seconds have passed")
> 
>       $ ./twisted-threadpool.py
>       2 seconds have passed
> 
> But I note that the program never stops. 

You should use deferToThread.

from twisted.internet import threads

d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(reactor.stop)



Regards  Manlio Perillo



From Benjamin.Rutt at gs.com  Thu Mar 22 13:35:19 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 15:35:19 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <4602D453.7020300@libero.it>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602D453.7020300@libero.it>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>

Thanks but that runs forever for me too (twisted 2.0.0).

Does this stop for you?

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet import threads

def aSillyBlockingMethod(x):
    import time
    time.sleep(2)
    print x

d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(reactor.stop)



From manlio_perillo at libero.it  Thu Mar 22 14:40:37 2007
From: manlio_perillo at libero.it (Manlio Perillo)
Date: Thu, 22 Mar 2007 21:40:37 +0100
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>	<4602D453.7020300@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <4602E9C5.1060406@libero.it>

Rutt, Benjamin ha scritto:
> Thanks but that runs forever for me too (twisted 2.0.0).
> 
> Does this stop for you?
> 
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> 
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> 
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(reactor.stop)
> 

Sorry.
It should be
d.addBoth(lambda _: reactor.stop())


Regards   Manlio Perillo



From listbox at evernex.com  Thu Mar 22 15:05:17 2007
From: listbox at evernex.com (listbox at evernex.com)
Date: Thu, 22 Mar 2007 14:05:17 -0700
Subject: [Twisted-Python] Using twisted.conch
In-Reply-To: <4602C632.9030904@trispen.com>
References: <4602C632.9030904@trispen.com>
Message-ID: <4602EF8D.7010805@evernex.com>

pico wrote:
> The problem is that, due to the ClientFactory creating instances of 
> the relevant objects for you 
> (SSHClientTransport,SSHUserAuthClient,etc), you are left without a 
> reference to the SSHChannel object,required to run the command.
>
> Is there any way to get the SSHChannel object from the 
> SSHClientTransport instance.
> Any advice with this matter would be appreciated.

I confess to not fully understanding your question, but perhaps a (sort 
of) singleton object might do it?  In the ClientFactory (or whereever 
the SSHChannel is created), instantiate the singleton object and then 
assign the SSHChannel to a variable tacked onto it.  You can assign 
'self' to such a variable too. Then every time you instantiate that 
singleton object again, it has the reference already in it.

I use the 'Borg' class to do this and I've used it to store references 
to a netstringReceiver in my own Twisted code.

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66531




From Benjamin.Rutt at gs.com  Thu Mar 22 16:03:29 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Thu, 22 Mar 2007 18:03:29 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <4602E9C5.1060406@libero.it>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>	<4602D453.7020300@libero.it><C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>

Still isn't working for me:

#!/usr/bin/env python
from twisted.internet import reactor
from twisted.internet import threads
def aSillyBlockingMethod(x):
    import time
    time.sleep(2)
    print x
d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
d.addBoth(lambda _: reactor.stop())

Does this work for you? 



From mithrandi-twisted-python at mithrandi.za.net  Thu Mar 22 16:42:46 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 23 Mar 2007 00:42:46 +0200
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <20070322224246.GA27024@mithrandi.za.net>

* Rutt, Benjamin <Benjamin.Rutt at gs.com> [2007-03-22 18:03:29 -0400]:

> Still isn't working for me:
> 
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(lambda _: reactor.stop())

reactor.run()

With the above line of code added to the end, this code behaves as
expected for me:

mithrandi at elvardein:~> time python foo.py
2 seconds have passed
python foo.py  0.27s user 0.06s system 14% cpu 2.385 total

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070323/9f372434/attachment.sig>

From ldanielburr at mac.com  Thu Mar 22 16:47:33 2007
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Thu, 22 Mar 2007 17:47:33 -0500
Subject: [Twisted-Python] thread pool question
In-Reply-To: <C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com>
	<4602D453.7020300@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com>
	<4602E9C5.1060406@libero.it>
	<C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>

On Thu, 22 Mar 2007 17:03:29 -0500, Rutt, Benjamin <Benjamin.Rutt at gs.com>  
wrote:

> Still isn't working for me:
>
> #!/usr/bin/env python
> from twisted.internet import reactor
> from twisted.internet import threads
> def aSillyBlockingMethod(x):
>     import time
>     time.sleep(2)
>     print x
> d = threads.deferToThread(aSillyBlockingMethod, "2 seconds have passed")
> d.addBoth(lambda _: reactor.stop())
>
> Does this work for you?
>

You have to run the reactor, or nothing will ever start.

Try adding reactor.run()

Hope this helps,

L. Daniel Burr



From dave at krondo.com  Thu Mar 22 19:42:08 2007
From: dave at krondo.com (Dave Peticolas)
Date: Thu, 22 Mar 2007 18:42:08 -0700
Subject: [Twisted-Python] Twisted friendly hosting services?
In-Reply-To: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
References: <1174547860.20815.74.camel@vinceworkstation.offshore.ai>
Message-ID: <46033070.2060006@krondo.com>

Vincent Cate wrote:
> I am working on an application that runs using twisted.web.  I want to
> host it on a machine with plenty of bandwidth as cheaply as possible.  
>
> Is there a hosting service that uses Twisted.web so that I can just add
> my resource to the namespace?
>   
You might check out webfaction.com. They do have a twisted.web
option, though I haven't used it. They also let you just set up your
own twisted server however you like.

dave




From Benjamin.Rutt at gs.com  Fri Mar 23 07:33:09 2007
From: Benjamin.Rutt at gs.com (Rutt, Benjamin)
Date: Fri, 23 Mar 2007 09:33:09 -0400
Subject: [Twisted-Python] thread pool question
In-Reply-To: <op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>
References: <C8853DE689283B47B5D348BC33E06193043D6629@gsmbnmp04es.firmwide.corp.gs.com><4602D453.7020300@libero.it><C8853DE689283B47B5D348BC33E06193043D6631@gsmbnmp04es.firmwide.corp.gs.com><4602E9C5.1060406@libero.it><C8853DE689283B47B5D348BC33E06193043D663B@gsmbnmp04es.firmwide.corp.gs.com>
	<op.tpl39je13oj628@l-daniel-burrs-powerbook-g4-17.local>
Message-ID: <C8853DE689283B47B5D348BC33E06193043D6643@gsmbnmp04es.firmwide.corp.gs.com>

Thanks Tristan and Daniel, it works for me too now.



From exarkun at twistedmatrix.com  Sat Mar 24 22:05:02 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Mar 2007 04:05:02 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1174795502.05.519595432@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-18 through 2007-03-25
Bugs opened: 11    Bugs closed: 9  Total open bugs: 881 (+2)

|== Type Changes   |== Priority Changes   |== Component Changes     
|Defect:       -3  |Highest:  -1          |Conch:               +0  
|Enhancement:  +3  |High:     -3          |Core:                +2  
|Task:         +2  |Normal:   +4          |Mail:                -1  
                   |Low:      +2          |Pydoctor:            +1  
                                          |Release Management:  +0  
                                          |Web:                 -1  
                                          |Web2:                +1  


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2528] t.conch.ssh.userauth.ssh_USERAUTH_REQUEST creates a Deferred and doesn't return it (opened by jml) (CLOSED, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2528

[#2530] Remove some of the warnings of process-docs (opened by therve) (CLOSED, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2530

                    ===== Normal =====
[#2529] AMP streaming protocol extension (opened by glyph)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2529

[#2531] twisted.conch.stdio.runWithProtocol fails in Eclipse/pyDev console (opened by neurophyre) (CLOSED, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2531

[#2532] How is a source listing generated (opened by duncanwebb) (CLOSED, fixed)
    task            pydoctor   http://twistedmatrix.com/trac/ticket/2532

[#2533] Pydoctor SVN and TortoiseSVN don't work (opened by duncanwebb)
    enhancement     pydoctor   http://twistedmatrix.com/trac/ticket/2533

[#2535] Allow Twisted to work without SIGCHLD on posix (opened by spiv)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2535

[#2536] Deprecated TimeoutQueue so we can remove it (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2536

[#2538] twisted.web2.client.http has no unittests for pipelining support (opened by dreid)
    enhancement     web2       http://twistedmatrix.com/trac/ticket/2538

                    ===== Low =====
[#2534] investigate event dispatch optimization (opened by exarkun)
    task            core       http://twistedmatrix.com/trac/ticket/2534

[#2537] doc/current/api source links point to SVN HEAD (opened by mwh)
    defect          release management http://twistedmatrix.com/trac/ticket/2537



Closed Bugs
______________________
                    ===== Highest =====
[#2528] t.conch.ssh.userauth.ssh_USERAUTH_REQUEST creates a Deferred and doesn't return it (opened by jml, closed by jml, fixed)
    defect          conch      http://twistedmatrix.com/trac/ticket/2528

[#2530] Remove some of the warnings of process-docs (opened by therve, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/2530

[#2521] SMTP authentication tracebacks when receiving an empty line (opened by washort, closed by washort, fixed)
    defect          mail       http://twistedmatrix.com/trac/ticket/2521

                    ===== High =====
[#1272] selectreactor's addReader unexpectedly assumes a logPrefix attr (opened by marienz, closed by therve, fixed)
    defect          core       http://twistedmatrix.com/trac/ticket/1272

[#1366] TwistedQuotes documentation references external source files (opened by exarkun, closed by exarkun, duplicate)
    defect          core       http://twistedmatrix.com/trac/ticket/1366

[#927 ] Add description of Twisted Web to its project site (opened by hypatia, closed by oubiwann, fixed)
    defect          web        http://twistedmatrix.com/trac/ticket/927

                    ===== Normal =====
[#1126] Package Twisted using Eggs/EasyInstall (opened by glyph, closed by therve, duplicate)
    enhancement     release management http://twistedmatrix.com/trac/ticket/1126

[#2531] twisted.conch.stdio.runWithProtocol fails in Eclipse/pyDev console (opened by neurophyre, closed by glyph, invalid)
    defect          conch      http://twistedmatrix.com/trac/ticket/2531

[#2532] How is a source listing generated (opened by duncanwebb, closed by duncanwebb, fixed)
    task            pydoctor   http://twistedmatrix.com/trac/ticket/2532





From forsberg at cendio.se  Mon Mar 26 02:29:23 2007
From: forsberg at cendio.se (Erik Forsberg)
Date: Mon, 26 Mar 2007 10:29:23 +0200
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
Message-ID: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>

Hi!

In TwistedCore/setup.py, I find that python 2.3 is required for
Twisted. I'd like to use Twisted for a project that currently requires
only Python 2.2, which raises the question - which parts of Twisted
requires 2.3, and how much of it can I run on Python 2.2?

On the same matter - are there any plans on when to stop supporting
Python 2.3, Python 2.4, etc? 

Thanks,
\EF
-- 
Erik Forsberg                OpenSource-based Thin Client Technology
Systems Analyst/Developer    Phone: +46-13-21 46 00    
Cendio AB    	             Web: http://www.cendio.com
		             





From radix at twistedmatrix.com  Mon Mar 26 06:07:10 2007
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Mon, 26 Mar 2007 08:07:10 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
Message-ID: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>

On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
> In TwistedCore/setup.py, I find that python 2.3 is required for
> Twisted. I'd like to use Twisted for a project that currently requires
> only Python 2.2, which raises the question - which parts of Twisted
> requires 2.3, and how much of it can I run on Python 2.2?

Dunno. However, are you sure the library you're using won't run on
anything above Python 2.2? If so, is it a proprietary thing that you
can't change?

> On the same matter - are there any plans on when to stop supporting
> Python 2.3, Python 2.4, etc?

I think we've generally maintained a 5-year support for Python releases.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From itamar at itamarst.org  Mon Mar 26 07:03:34 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Mar 2007 09:03:34 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <1174914214.1920.11.camel@localhost.localdomain>

On Mon, 2007-03-26 at 08:07 -0400, Christopher Armstrong wrote:

> I think we've generally maintained a 5-year support for Python releases.

Slightly less than that; Python 2.2 was supported for approximately 4.25
years.




From forsberg at cendio.se  Mon Mar 26 08:18:28 2007
From: forsberg at cendio.se (Erik Forsberg)
Date: Mon, 26 Mar 2007 16:18:28 +0200
Subject: [Twisted-Python] Re: Can I still run (most of) Twisted on Python
	2.2?
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <uoslbs2imj.fsf@impertigo.lkpg.cendio.se>

"Christopher Armstrong" writes:

> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>> In TwistedCore/setup.py, I find that python 2.3 is required for
>> Twisted. I'd like to use Twisted for a project that currently requires
>> only Python 2.2, which raises the question - which parts of Twisted
>> requires 2.3, and how much of it can I run on Python 2.2?
>
> Dunno. However, are you sure the library you're using won't run on
> anything above Python 2.2? If so, is it a proprietary thing that you
> can't change?

The project I'm talking about is ThinLinc which is the main product of
the company I work for, and so far, we've been able to say that "it
runs on any Linux that is equal to or newer than RedHat Linux 7.3",
which is something of a strength. 

We're now considering using twisted for parts of the product, and if
possible, we'd like to stay on the old requirements.

OTOH, requiring Python 2.3 is probably not a major problem. It's not
like we have any customers doing new installations on RHL7.3 :-).

I made a small investigation of the python version available on some
more or less aged Linux distributions. If someone's interested, here
the list:

Suse Linux Enterprise Linux 9 (SLES9): Python 2.3.3
Suse Linux Enterprise Desktop 10 (SLED10): Python 2.4.2
CentOS4 (should be the same as RHEL4): Python 2.3.4
Ubuntu 4.10 (Warty, oldest Ubuntu available on http://packages.ubuntu.com): 2.3.4 available.
Debian stable/sarge: 2.3.5 and 2.4.1 available.
Red Hat Linux 9: Python 2.2.2

So, in practice, there's very few distributions that are relevant for
use with ThinLinc (it's a terminal server solution for Linux, so a
modern desktop is required) that don't have Python 2.3.

Still, it would be interesting to know what parts of twisted requires
2.3. I guess that if there's nobody that knows, I'll just have to live
with the 2.3 requirement, and testrun on Python 2.2 when I'm done
:-). 

>> On the same matter - are there any plans on when to stop supporting
>> Python 2.3, Python 2.4, etc?
>
> I think we've generally maintained a 5-year support for Python
> releases.

Sounds good. 

Thanks,
\EF
-- 
Erik Forsberg                OpenSource-based Thin Client Technology
Systems Analyst/Developer    Phone: +46-13-21 46 00    
Cendio AB    	             Web: http://www.cendio.com
		             




From itamar at itamarst.org  Mon Mar 26 09:18:26 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 26 Mar 2007 11:18:26 -0400
Subject: [Twisted-Python] Re: Can I still run (most of) Twisted on
	Python 2.2?
In-Reply-To: <uoslbs2imj.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
	<uoslbs2imj.fsf@impertigo.lkpg.cendio.se>
Message-ID: <1174922307.1920.17.camel@localhost.localdomain>

On Mon, 2007-03-26 at 16:18 +0200, Erik Forsberg wrote:

> The project I'm talking about is ThinLinc which is the main product of
> the company I work for, and so far, we've been able to say that "it
> runs on any Linux that is equal to or newer than RedHat Linux 7.3",
> which is something of a strength. 

At work (where we still have some machines with Redhat 7.3) we solve
this by installing our own version of Python in a non-clashing
namespace. It's very easy to do, and you could make it completely
transparent to your users (a few more files in the RPM).

Alternatively, you could probably with a little work either add relevant
bugfixes to older version of Twisted, or make the parts of Twisted you
use work with Python 2.2.




From palacenataku at yahoo.com  Mon Mar 26 12:50:45 2007
From: palacenataku at yahoo.com (Rob Smith)
Date: Mon, 26 Mar 2007 11:50:45 -0700 (PDT)
Subject: [Twisted-Python] problem with a tutorial
Message-ID: <4061.97365.qm@web58408.mail.re3.yahoo.com>

I'm hoping this is just a simple configuration problem
I have.

I followed the tutorial for Using the Twisted
Application Framework and created the .tac file shown
below:

from twisted.application import internet, service
from qotdfactory import QOTDFactory

port = 7001
factory = QOTDFactory()

application = service.Application("qotd")
echoService = internet.TCPServer(port, factory)
echoService.setServiceParent(application)

As soon as I run it with twistd on my winXP laptop it
fails with an Import error "no module named
qotdfactory". qotdfactory.py exists in the same
directory as the .tac file.

If I take the code in the .py file and put it directly
in the .tac file, the program runs without trouble.
I've tried adding the directory both files are in to
the windows path variable, and tried adding a
__init__.py file to the directory. Neither made a
difference.

Any thoughts on what I'm missing?

Thanks,
Rob Smith


 
____________________________________________________________________________________
Sucker-punch spam with award-winning protection. 
Try the free Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/features_spam.html



From ppergame at gmail.com  Mon Mar 26 16:06:29 2007
From: ppergame at gmail.com (Pavel Pergamenshchik)
Date: Mon, 26 Mar 2007 15:06:29 -0700
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
Message-ID: <4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>

On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>
> Hi!
>
> In TwistedCore/setup.py, I find that python 2.3 is required for
> Twisted. I'd like to use Twisted for a project that currently requires
> only Python 2.2, which raises the question - which parts of Twisted
> requires 2.3, and how much of it can I run on Python 2.2?


Twisted has a test suite. Run that with Python 2.2 and see which tests fail.

(something like "python22 bin/trial twisted", from the directory where
Twisted was unpacked)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070326/d1cee12a/attachment.html>

From foom at fuhm.net  Mon Mar 26 22:54:18 2007
From: foom at fuhm.net (James Y Knight)
Date: Tue, 27 Mar 2007 00:54:18 -0400
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<4a5c1b500703261506m4666b3d8i7f4c3d1c0190e722@mail.gmail.com>
Message-ID: <37867445-20DE-4B0F-86BE-B266DA7B485E@fuhm.net>


On Mar 26, 2007, at 6:06 PM, Pavel Pergamenshchik wrote:

> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
>> Hi!
>>
>> In TwistedCore/setup.py, I find that python 2.3 is required for
>> Twisted. I'd like to use Twisted for a project that currently  
>> requires
>> only Python 2.2, which raises the question - which parts of Twisted
>> requires 2.3, and how much of it can I run on Python 2.2?
>
> Twisted has a test suite. Run that with Python 2.2 and see which  
> tests fail.
>
> (something like "python22 bin/trial twisted", from the directory  
> where Twisted was unpacked)

It's not going to work at all. I suspect it won't even come close to  
importing. Check the commit logs for the removal of python 2.2  
support -- there was a lot of compatibility cruft, including  
backports of a few python modules. You're better off just using the  
last version of Twisted with Python 2.2 support than trying to re-add  
it to current Twisted.

James





From jml at mumak.net  Mon Mar 26 23:06:45 2007
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 27 Mar 2007 15:06:45 +1000
Subject: [Twisted-Python] Can I still run (most of) Twisted on Python 2.2?
In-Reply-To: <60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
References: <uobqig5rx8.fsf@impertigo.lkpg.cendio.se>
	<60ed19d40703260507n7dd3f246k68edc02ee17b2ac0@mail.gmail.com>
Message-ID: <d06a5cd30703262206h3b5d34bqe2156a07dde2cbdf@mail.gmail.com>

On 3/26/07, Christopher Armstrong <radix at twistedmatrix.com> wrote:
> On 3/26/07, Erik Forsberg <forsberg at cendio.se> wrote:
> > On the same matter - are there any plans on when to stop supporting
> > Python 2.3, Python 2.4, etc?
>
> I think we've generally maintained a 5-year support for Python releases.
>

I was under the impression that we supported the Python in debian
stable, and anything newer.

Whatever the answer, it would be good to have it written down as a
policy. I've filed a bug for this:
http://twistedmatrix.com/trac/ticket/2541

cheers,
jml



From twisted-python at 2xlp.com  Tue Mar 27 10:03:44 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Tue, 27 Mar 2007 12:03:44 -0400
Subject: [Twisted-Python] 2 threads questions
Message-ID: <50D5469E-138A-4E00-A084-B7C1D8370137@2xlp.com>

i have a threaded daemon which occasionally hangs because of some  
stalling in the threadpool

a-	whats the best way to shut it down ?
	attempts to ctl-c / kill it seem to be interpreted by a random  
thread.  the only way to kill it is a kill -9
	the python threading docs said that was the expected behavior, and  
that it could be avoided by using signal.
	I figured twisted might have something in it already to handle  
shutting down a reactor with active threads.  the threads docs for  
twisted are a little light.

b-	i'm trying to figure out the cause of the stalling in the threadpool
	from the status messages i'm printing, I'm seeing the main python  
code firing fine, but the threadpool is just stuck - nothing  
dispatched to it seems to clean up
	i wonder if it might be related to a few tickets i've seen
		http://twistedmatrix.com/trac/ticket/2448
		http://trac.edgewall.org/ticket/3923

	i'm trying to figure out a way to reliably test this.  i've got a  
ssh manhole running via conch ( and instructions from the twisted book )
	can anyone suggest a good way to test and try to debug what is going  
on?  i'm extremely uninformed when it comes to python threads.




From exarkun at divmod.com  Tue Mar 27 10:30:30 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 27 Mar 2007 11:30:30 -0500
Subject: [Twisted-Python] 2 threads questions
In-Reply-To: <50D5469E-138A-4E00-A084-B7C1D8370137@2xlp.com>
Message-ID: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>

On Tue, 27 Mar 2007 12:03:44 -0400, Jonathan Vanasco <twisted-python at 2xlp.com> wrote:
>i have a threaded daemon which occasionally hangs because of some  stalling 
>in the threadpool
>
>a-      whats the best way to shut it down ?
>         attempts to ctl-c / kill it seem to be interpreted by a random 
>thread.  the only way to kill it is a kill -9
>         the python threading docs said that was the expected behavior, and 
>that it could be avoided by using signal.
>         I figured twisted might have something in it already to handle 
>shutting down a reactor with active threads.  the threads docs for  twisted 
>are a little light.
>
>b-      i'm trying to figure out the cause of the stalling in the threadpool
>         from the status messages i'm printing, I'm seeing the main python 
>code firing fine, but the threadpool is just stuck - nothing  dispatched to 
>it seems to clean up
>         i wonder if it might be related to a few tickets i've seen
>                 http://twistedmatrix.com/trac/ticket/2448
>                 http://trac.edgewall.org/ticket/3923
>
>         i'm trying to figure out a way to reliably test this.  i've got a 
>ssh manhole running via conch ( and instructions from the twisted book )
>         can anyone suggest a good way to test and try to debug what is going 
>on?  i'm extremely uninformed when it comes to python threads.
>

Python 2.5 includes sys._current_frames() which returns a mapping from thread
identifiers to the frame objects which you might be able to use to learn what
is going on.  You can call this from your manhole prompt when you notice the
system to have hung.

Jean-Paul



From luc.stepniewski at adelux.fr  Wed Mar 28 07:20:38 2007
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Wed, 28 Mar 2007 15:20:38 +0200
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <4061.97365.qm@web58408.mail.re3.yahoo.com>
References: <4061.97365.qm@web58408.mail.re3.yahoo.com>
Message-ID: <200703281520.38226.luc.stepniewski@adelux.fr>

On Monday 26 March 2007 20:50, Rob Smith wrote:
> I'm hoping this is just a simple configuration problem
> I have.
> I followed the tutorial for Using the Twisted
> Application Framework and created the .tac file shown
> below:
>
> from twisted.application import internet, service
> from qotdfactory import QOTDFactory

I didn't find in the docs where this tutorial resides, but that means that you 
need a file named qotdfactory.py in your PYTHONPATH (or in the current 
directory). Isn't there any reference to this file in that tutorial?


-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A




From palacenataku at yahoo.com  Wed Mar 28 08:33:10 2007
From: palacenataku at yahoo.com (Rob Smith)
Date: Wed, 28 Mar 2007 07:33:10 -0700 (PDT)
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <200703281520.38226.luc.stepniewski@adelux.fr>
Message-ID: <411122.86895.qm@web58405.mail.re3.yahoo.com>


> 
> I didn't find in the docs where this tutorial
> resides, but that means that you 
> need a file named qotdfactory.py in your PYTHONPATH
> (or in the current 
> directory). Isn't there any reference to this file
> in that tutorial?
> 

It's in the current directory, but I don't think I've
touched the PYTHONPATH. There isn't anything
mentioning that in the tutorial I was looking at
(which was Using the Twisted Application Framework).

However, it is mentioned in a few other places. It
seems I was just being too selective of what sections
to read, and thus didn't understand the directory
structure these files required.

Thanks, for the reply! This should fix my problem.



 
____________________________________________________________________________________
No need to miss a message. Get email on-the-go 
with Yahoo! Mail for Mobile. Get started.
http://mobile.yahoo.com/mail 



From arkanes at gmail.com  Wed Mar 28 10:06:21 2007
From: arkanes at gmail.com (Chris Mellon)
Date: Wed, 28 Mar 2007 11:06:21 -0500
Subject: [Twisted-Python] problem with a tutorial
In-Reply-To: <411122.86895.qm@web58405.mail.re3.yahoo.com>
References: <200703281520.38226.luc.stepniewski@adelux.fr>
	<411122.86895.qm@web58405.mail.re3.yahoo.com>
Message-ID: <4866bea60703280906u590d9cbdt59e4afafac84884d@mail.gmail.com>

On 3/28/07, Rob Smith <palacenataku at yahoo.com> wrote:
>
> >
> > I didn't find in the docs where this tutorial
> > resides, but that means that you
> > need a file named qotdfactory.py in your PYTHONPATH
> > (or in the current
> > directory). Isn't there any reference to this file
> > in that tutorial?
> >
>
> It's in the current directory, but I don't think I've
> touched the PYTHONPATH. There isn't anything
> mentioning that in the tutorial I was looking at
> (which was Using the Twisted Application Framework).
>
> However, it is mentioned in a few other places. It
> seems I was just being too selective of what sections
> to read, and thus didn't understand the directory
> structure these files required.
>
> Thanks, for the reply! This should fix my problem.
>
>

If you're using Python 2.5 then this is probably because of a default
path change from 2.4, which breaks scripts like twistd and trial. See
ticket 2489 on the twisted trac for some details. The fix you'll want
to make is to modify your twistd.py (and any other twisted scripts) so
that the current directory is added to sys.path.

sys.path.insert(0, os.curdir)

is all it takes.

is all it takes.



From twisted-python at 2xlp.com  Wed Mar 28 10:44:23 2007
From: twisted-python at 2xlp.com (Jonathan Vanasco)
Date: Wed, 28 Mar 2007 12:44:23 -0400
Subject: [Twisted-Python] 2 threads questions
In-Reply-To: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>
References: <20070327163030.18920.1641290797.divmod.quotient.6019@ohm>
Message-ID: <4F76F869-2FEA-4F45-80BD-1E76793CF989@2xlp.com>


On Mar 27, 2007, at 12:30 PM, Jean-Paul Calderone wrote:

>
> Python 2.5 includes sys._current_frames() which returns a mapping  
> from thread
> identifiers to the frame objects which you might be able to use to  
> learn what
> is going on.  You can call this from your manhole prompt when you  
> notice the
> system to have hung.


Great!  Thanks.

Still working on debugging this, but for other people who need to  
jump into a manhole for something like this in the future  -- the  
following works well.



=======

import sys
import traceback

def formatTraceback ( frameId , frameObj ):
	traceback_lines= traceback.format_stack( frameObj )
	if not len(traceback_lines):
		return
	print ""
	print  
"----------------------------------------------------------------------- 
-----------"
	print ">> --- %s | %s ===================================" %  
( frameId , frameObj )
	print "".join(traceback_lines)
	print "<< --- %s | %s ===================================" %  
( frameId , frameObj )
	print ""

def printCurrentStack():
	frames= sys._current_frames()
	for frameId in frames:
		frameObj= frames[frameId]
		formatTraceback( frameId , frameObj )

printCurrentStack()








// Jonathan Vanasco

| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| FindMeOn.com - The cure for Multiple Web Personality Disorder
| Web Identity Management and 3D Social Networking
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -
| RoadSound.com - Tools For Bands, Stuff For Fans
| Collaborative Online Management And Syndication Tools
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
- - - - - - - - - - - - - - - -





From justinjohnson at gmail.com  Wed Mar 28 11:01:12 2007
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 28 Mar 2007 12:01:12 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
Message-ID: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>

Hi,

I'm running Python 2.5 and Twisted 2.5.0 on Windows 2003 Server.

I have a web site (Twisted/Nevow) where users login with a username
and password.  I save the username and password once they login
because the same username and password are used to connect to various
Perspective Broker servers, and I don't want to make users
reauthenticate for every server that is connected to behind the
scenes.  Since the password cannot be hashed when passed to PB I store
it in plaintext.

Up to this point I have been using a realm and file password db as
listed at the end of this email.  When I recently upgraded from
Twisted 2.4.0 to 2.5.0 and from Python 2.4 to 2.5 I get the following
error.

2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Peer will receive
following PB traceback:
2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Unhandled Error
	Traceback (most recent call last):
	  File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
847, in _recvMessage
	    netResult = object.remoteMessageReceived(self, message, netArgs, netKw)
	  File "D:\Python25\lib\site-packages\twisted\spread\flavors.py",
line 119, in remoteMessageReceived
	    state = method(*args, **kw)
	  File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
1217, in remote_respond
	    d = self.portalWrapper.portal.login(self, mind, IPerspective)
	  File "D:\Python25\lib\site-packages\twisted\cred\portal.py", line
109, in login
	    return maybeDeferred(c.requestAvatarId, credentials
	--- <exception caught here> ---
	  File "D:\Python25\lib\site-packages\twisted\internet\defer.py",
line 107, in maybeDeferred
	    result = f(*args, **kw)
	  File "d:\python25\lib\site-packages\ratcontrol\login.py", line 195,
in requestAvatarId
	    up = credentials.IUsernamePassword(c)
	exceptions.TypeError: ('Could not adapt',
<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,

<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
	
2007/03/28 10:23 -0500 [Broker,client] Unhandled error in Deferred:
2007/03/28 10:23 -0500 [Broker,client] Unhandled Error
	Traceback from remote host -- Traceback unavailable

I looked at the Subversion log for twisted.spread.pb.py and am not
sure what change is causing this failure.  The contents of
ratcontrol\login.py are below.

Does anyone have any pointers on what I should be looking for here?
Is there any way I can accomplish my goal in a more maintainable way?

Thanks,
Justin

----------------
from twisted.cred import portal, checkers, credentials, error
from twisted.web import resource
from twisted.spread import pb
from twisted.python import log, components
from twisted.internet.defer import maybeDeferred
from twisted.internet import defer
from twisted.python import failure, reflect, components

from zope.interface import implements

from nevow import inevow


from ratcontrol.web import pages
from ratcontrol import perspectives
from ratcontrol import services

def noLogout():
    return None

class RatControlRealm:
    """A simple implementor of cred's IRealm.
       For web, this gives us the LoggedIn page.
       For PB, this gives us a reference to the perspective.
    """
    implements(portal.IRealm)

    def __init__(self):
        self.clients = []
        self.serviceTypes = []

    def addServiceType(self, serviceType):
        self.serviceTypes.append(serviceType)

    def requestAvatar(self, avatarIdAndPassword, mind, *interfaces):
        ## If the login is anonymous, only one item will be passed.
        ## If it is an authorized login, both the id and password
        ## will be passed.
        if len(avatarIdAndPassword) == 2:
            avatarId, avatarPassword = avatarIdAndPassword
        else:
            avatarId = avatarIdAndPassword

        for iface in interfaces:
            if iface is inevow.IResource:
                if avatarId is checkers.ANONYMOUS:
                    resc = pages.NotLoggedIn()
                    return (resource.IResource, resc, noLogout)
                else:
                    resc = pages.LoggedIn(avatarId, avatarPassword, self)
                    return resource.IResource, resc, noLogout
            elif iface is pb.IPerspective:
                if avatarId is checkers.ANONYMOUS:
                    return (pb.IPerspective, None, None)
                else:
                    log.msg("User %s logged in" % avatarId)
                    #s = services.RatControlService()
                    s = services.getServiceForTypes(self.serviceTypes)
                    self.p = perspectives.IPerspectiveRatControl(s)
                    self.p.loggedIn = 1
                    return (pb.IPerspective, self.p, self.p.logout)

        raise NotImplementedError("Can't support that interface.")


class FilePasswordDB:
    """A file-based, text-based username/password database.

    Records in the datafile for this class are delimited by a particular
    string.  The username appears in a fixed field of the columns delimited
    by this string, as does the password.  Both fields are specifiable.  If
    the passwords are not stored plaintext, a hash function must be supplied
    to convert plaintext passwords to the form stored on disk and this
    CredentialsChecker will only be able to check IUsernamePassword
    credentials.  If the passwords are stored plaintext,
    IUsernameHashedPassword credentials will be checkable as well.
    """

    implements(checkers.ICredentialsChecker)

    def __init__(self, filename, delim=':', usernameField=0, passwordField=1,
                 caseSensitive=True, hash=None):
        """
        @type filename: C{str}
        @param filename: The name of the file from which to read username and
        password information.

        @type delim: C{str}
        @param delim: The field delimiter used in the file.

        @type usernameField: C{int}
        @param usernameField: The index of the username after splitting a
        line on the delimiter.

        @type caseSensitive: C{bool}
        @param caseSensitive: If true, consider the case of the username when
        performing a lookup.  Ignore it otherwise.

        @type passwordField: C{int}
        @param passwordField: The index of the password after splitting a
        line on the delimiter.

        @type hash: Three-argument callable.
        @param hash: A function used to transform the plaintext password
        received over the network to a format suitable for comparison against
        the version stored on disk.  The arguments to the callable are the
        username, the network-supplied password, and the in-file version of
        the password.
        """
        self.filename = filename
        self.delim = delim
        self.ufield = usernameField
        self.pfield = passwordField
        self.caseSensitive = caseSensitive
        self.hash = hash

        if self.hash is None:
            # The passwords are stored plaintext.  We can support both
            # plaintext and hashed passwords received over the network.
            self.credentialInterfaces = (
                credentials.IUsernamePassword,
                credentials.IUsernameHashedPassword
            )
        else:
            # The passwords are hashed on disk.  We can support only
            # plaintext passwords received over the network.
            self.credentialInterfaces = (
                credentials.IUsernamePassword,
            )


    def _cbPasswordMatch(self, matched, usernameAndPassword):
        ## Return both the username and password so we can save the password
        ## for connecting to other services once we are authenticated on one.
        if matched:
            return usernameAndPassword
        else:
            return failure.Failure(error.UnauthorizedLogin())

    def getUser(self, username):
        try:
            f = file(self.filename)
        except:
            log.err()
            raise error.UnauthorizedLogin()
        else:
            if not self.caseSensitive:
                username = username.lower()
            for line in f:
                line = line.rstrip()
                parts = line.split(self.delim)

                if self.ufield >= len(parts) or self.pfield >= len(parts):
                    continue
                if self.caseSensitive:
                    if parts[self.ufield] != username:
                        continue
                elif parts[self.ufield].lower() != username:
                    continue

                return parts[self.ufield], parts[self.pfield]
            raise KeyError(username)


    def requestAvatarId(self, c):
        try:
            u, p = self.getUser(c.username)
        except KeyError:
            return failure.Failure(error.UnauthorizedLogin())
        else:
            up = credentials.IUsernamePassword(c)
            if self.hash:
                if up is not None:
                    h = self.hash(up.username, up.password, p)
                    if h == p:
                        return (u, p)
                return failure.Failure(error.UnauthorizedLogin())
            else:
                ## Note that we pass both the username and the password
                return defer.maybeDeferred(c.checkPassword, p
                    ).addCallback(self._cbPasswordMatch, (u,p))



From Brendan at BrendanSimon.com  Wed Mar 28 20:40:34 2007
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Thu, 29 Mar 2007 12:40:34 +1000
Subject: [Twisted-Python] twisted pysnmp status
Message-ID: <460B2722.7020900@BrendanSimon.com>

Hi,

I just wanted to know what the latest status is with twisted and pysnmp.
Is pysnmp 4.x supported?
Is full SNMPv3 supported?
What is the roadmap and/or plans for twisted and pysnmp ???

I want to write and SNMPv3 GUI manager in python :)
I'm not sure if the complexity and dependency of twisted is worth the 
effort?  Then again on the other hand it may provide lots of things I 
would probably need to write anyway ?  Given I would also like SSH and 
maybe even WBEM and/or WS-Management protocols too, then maybe twisted 
provides a better framework ???

Cheers,
Brendan.




From wgwigw at gmail.com  Thu Mar 29 01:22:00 2007
From: wgwigw at gmail.com (wang wei)
Date: Thu, 29 Mar 2007 15:22:00 +0800
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
Message-ID: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>

hello, I need to know the client address connected to my Twisted XMLRPC
server, is there any way?
the fellow code couldn't work in my machine.

class Examle(xmlrpc.XMLRPC):
    """An example object to be published."""

    def _getPeerAddress(self):
            return self.request.getClientIP()

    def render(self, request):
        self.request = request
        xmlrpc.XMLRPC.render(self, request)

the result is said:
"C:\Python24\lib\site-packages\twisted\web\server.py:272: UserWarning:
Warning! r
equest.finish called twice.
  http.Request.finish(self)"
then how can I get client address in twisted?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070329/b87355fc/attachment.html>

From mailinglists at smartology.nl  Thu Mar 29 03:24:05 2007
From: mailinglists at smartology.nl (Remi Cool)
Date: Thu, 29 Mar 2007 11:24:05 +0200
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
In-Reply-To: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
References: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
Message-ID: <460B85B5.8070401@smartology.nl>

wang wei wrote:
> hello, I need to know the client address connected to my Twisted
> XMLRPC server, is there any way?
> the fellow code couldn't work in my machine.
> class Examle(xmlrpc.XMLRPC):
>     """An example object to be published."""
>
>         
>     def _getPeerAddress(self):
>             return self.request.getClientIP()
>             
>     def render(self, request):
>         self.request = request
>         xmlrpc.XMLRPC.render(self, request)
>
>
> the result is said:
> "C:\Python24\lib\site-packages\twisted\web\server.py:272: UserWarning: Warning! r
> equest.finish called twice.
>   http.Request.finish(self)"
> then how can I get client address in twisted?
>   
Try:

def render(self, request):
    self.request = request
    return xmlrpc.XMLRPC.render(self, request)


- Remi -



From p.mayers at imperial.ac.uk  Thu Mar 29 03:27:25 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 29 Mar 2007 10:27:25 +0100
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460B2722.7020900@BrendanSimon.com>
References: <460B2722.7020900@BrendanSimon.com>
Message-ID: <460B867D.1080105@imperial.ac.uk>

Brendan Simon wrote:
> Hi,
> 
> I just wanted to know what the latest status is with twisted and pysnmp.
> Is pysnmp 4.x supported?
> Is full SNMPv3 supported?
> What is the roadmap and/or plans for twisted and pysnmp ???
> 
> I want to write and SNMPv3 GUI manager in python :)
> I'm not sure if the complexity and dependency of twisted is worth the 
> effort?  Then again on the other hand it may provide lots of things I 

It is.

Although I don't use the pysnmp library, I do use Twisted for a large 
SNMP polling application (~1200 nodes). It goes much faster than 
anything else I've tried, with the possible exception of a custom event 
loop I wrote ages ago that's virtually unmaintainable and has all sorts 
of magic values.

One thing you might want to investigate is forking off N child processes 
which are simple 2-protocol bridges - they listen on Perspective Broker 
for high-level RPC calls such as "GetSnmpTable(base, cols)" and execute 
SNMP walks.

I've found this can overcome some scalability issues with very large 
numbers of clients on a single UDP socket. The problem is emptying the 
UDP socket buffer fast enough - you have to yield back into the reactor 
ASAP, and any code you execute should be behind a reactor.callLater(0, 
handler).

It also gives you multiprocessor speedups, *and* you can trivially move 
those processes elsewhere later on e.g. if you're monitoring boxes down 
the end of a WAN link, put one process down there. Then the large 
numbers of SNMP packets don't have to flow over the WAN, just the PB 
link which is flow-controlled TCP sending tiny request/result PDUs.



From wgwigw at gmail.com  Thu Mar 29 03:52:20 2007
From: wgwigw at gmail.com (wang wei)
Date: Thu, 29 Mar 2007 17:52:20 +0800
Subject: [Twisted-Python] anyway to know client address in XMLRPC?
In-Reply-To: <460B85B5.8070401@smartology.nl>
References: <dbeb95830703290022v754db0e2i88a14c282d080973@mail.gmail.com>
	<460B85B5.8070401@smartology.nl>
Message-ID: <dbeb95830703290252g1f6cf8fdq65c3d935d2b4f63d@mail.gmail.com>

>
> def render(self, request):
>     self.request = request
>     return xmlrpc.XMLRPC.render(self, request)
>
> thanks, I should read the code carefully.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20070329/4f001c6e/attachment.html>

From mcfletch at vrplumber.com  Thu Mar 29 13:41:06 2007
From: mcfletch at vrplumber.com (Mike C. Fletcher)
Date: Thu, 29 Mar 2007 15:41:06 -0400
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460B2722.7020900@BrendanSimon.com>
References: <460B2722.7020900@BrendanSimon.com>
Message-ID: <460C1652.1040504@vrplumber.com>

Brendan Simon wrote:
> Hi,
>
> I just wanted to know what the latest status is with twisted and pysnmp.
> Is pysnmp 4.x supported?
> Is full SNMPv3 supported?
> What is the roadmap and/or plans for twisted and pysnmp ???
PySNMP 4.x was, the last time I looked at it (probably more than a year 
ago, now), *far* too slow for our client's purposes (monitoring 10,000+ 
cable modems).  In fact, even PySNMP 3.x was too slow (even with our 
speed enhanced version).  We *needed* to be able to scale up to well 
beyond 40,000+ cable modems per (reasonable) scanning box to have a 
chance in the market where DSLAMs/CMTSs have that number of modems on a 
single chasis (and 100s of thousands per head end).  As a result, we had 
to defer on the product's biggest potential market.

SNMPv3 is not supported with TwistedSNMP.  We hacked in PySNMP 4.x, 
discovered it just couldn't be used for our purposes and dropped the 
porting effort before it was completed (which would have included the 
SNMPv3 interfaces).

As for the roadmap, I'm not currently working on the project as we 
aren't working on the product that was footing the bill any more. I 
believe Zenoss is using the package to monitor (smaller) networks, so 
they may have some requirements they need and decide to contribute or 
pay for.  There are others using it for small installations as well, 
they may be interested in working as well.  If there are people who want 
to work on the project I'm certainly willing to add them to the 
developer list on SourceForge.

HTH,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From exarkun at divmod.com  Thu Mar 29 14:57:45 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 29 Mar 2007 15:57:45 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
In-Reply-To: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>
Message-ID: <20070329205745.18920.618705141.divmod.quotient.6478@ohm>

On Wed, 28 Mar 2007 12:01:12 -0500, Justin Johnson <justinjohnson at gmail.com> wrote:
>Hi,
>
>I'm running Python 2.5 and Twisted 2.5.0 on Windows 2003 Server.
>
>I have a web site (Twisted/Nevow) where users login with a username
>and password.  I save the username and password once they login
>because the same username and password are used to connect to various
>Perspective Broker servers, and I don't want to make users
>reauthenticate for every server that is connected to behind the
>scenes.  Since the password cannot be hashed when passed to PB I store
>it in plaintext.
>
>Up to this point I have been using a realm and file password db as
>listed at the end of this email.  When I recently upgraded from
>Twisted 2.4.0 to 2.5.0 and from Python 2.4 to 2.5 I get the following
>error.
>
>2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Peer will receive
>following PB traceback:
>2007/03/28 10:23 -0500 [Broker,0,IP_ADDRESS] Unhandled Error
>         Traceback (most recent call last):
>           File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
>847, in _recvMessage
>             netResult = object.remoteMessageReceived(self, message, netArgs, 
>netKw)
>           File "D:\Python25\lib\site-packages\twisted\spread\flavors.py",
>line 119, in remoteMessageReceived
>             state = method(*args, **kw)
>           File "D:\Python25\lib\site-packages\twisted\spread\pb.py", line
>1217, in remote_respond
>             d = self.portalWrapper.portal.login(self, mind, IPerspective)
>           File "D:\Python25\lib\site-packages\twisted\cred\portal.py", line
>109, in login
>             return maybeDeferred(c.requestAvatarId, credentials
>         --- <exception caught here> ---
>           File "D:\Python25\lib\site-packages\twisted\internet\defer.py",
>line 107, in maybeDeferred
>             result = f(*args, **kw)
>           File "d:\python25\lib\site-packages\ratcontrol\login.py", line 
>195,
>in requestAvatarId
>             up = credentials.IUsernamePassword(c)
>         exceptions.TypeError: ('Could not adapt',
><twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
>
><InterfaceClass twisted.cred.credentials.IUsernamePassword>)
>
>2007/03/28 10:23 -0500 [Broker,client] Unhandled error in Deferred:
>2007/03/28 10:23 -0500 [Broker,client] Unhandled Error
>         Traceback from remote host -- Traceback unavailable
>
>I looked at the Subversion log for twisted.spread.pb.py and am not
>sure what change is causing this failure.  The contents of
>ratcontrol\login.py are below.
>
>Does anyone have any pointers on what I should be looking for here?
>Is there any way I can accomplish my goal in a more maintainable way?

It's not clear to me how this worked in the first place. ;)  The
credentials object being adapted to IUsernamePassword should always
have been a _PortalAuthChallenger, and so it only should have ever
been adaptable to IUsernameHashedPassword and IUsernameMD5Password.

The way you want to write requestAvatarId, though, is to inspect the
credentials object to see what interfaces it provides and them handle
it accordingly.  You can do this by adapting and catching the TypeError,
adapting with a default and checking for that, or using the providedBy
method of the interface object.  The important point is that you have to
be able to handle every kind of credentials object which the you have
declared you can handle (with the credentialInterfaces attribute).  In
this specific case, I believe your checker declared it could handle both
IUsernamePassword and IUsernameHashedPassword, but its implementation can
only actually handle IUsernameePassword.

Hope this helps,

Jean-Paul



From littlesweetmelon at gmail.com  Thu Mar 29 21:38:35 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 11:38:35 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use "static
	member" to store states?
Message-ID: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>

Hi,
    I'm a newbie. After went through the source code in
twisted.protocols.basic, I found it's really strange that all classes
in twisted.protocols.basic use "static member" to store states.
    Take class StatefulStringProtocol as the example. Some Factory
will creates a group of StatefulStringProtocol instances which share
the static member "state". But why all instances MUST have the same
state? In my opinion, instance A may be in the "handshaking" state,
while instance B may be in the "data sending" state. The static member
can not represent this case.
    Therefore, I think protocols should use "member variable" rather
that "static member":

class StatefulStringProtocol:
	def __init__(self):
		self.state = 'init'
...

    Could you plz give me some clue? I am a little confused. Most
possibly, I misunderstanding the design about protocols-factory.

   Thank you.

ShenLei



From daedalus at eigenmagic.com  Thu Mar 29 22:22:42 2007
From: daedalus at eigenmagic.com (Justin Warren)
Date: Fri, 30 Mar 2007 14:22:42 +1000
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <460C1652.1040504@vrplumber.com>
References: <460B2722.7020900@BrendanSimon.com>
	<460C1652.1040504@vrplumber.com>
Message-ID: <1175228562.7273.30.camel@localhost>

On Thu, 2007-03-29 at 15:41 -0400, Mike C. Fletcher wrote:
> Brendan Simon wrote:
> > Hi,
> >
> > I just wanted to know what the latest status is with twisted and pysnmp.
> > Is pysnmp 4.x supported?
> > Is full SNMPv3 supported?
> > What is the roadmap and/or plans for twisted and pysnmp ???
> PySNMP 4.x was, the last time I looked at it (probably more than a year 
> ago, now), *far* too slow for our client's purposes (monitoring 10,000+ 
> cable modems).  In fact, even PySNMP 3.x was too slow (even with our 
> speed enhanced version).  We *needed* to be able to scale up to well 
> beyond 40,000+ cable modems per (reasonable) scanning box to have a 
> chance in the market where DSLAMs/CMTSs have that number of modems on a 
> single chasis (and 100s of thousands per head end).  As a result, we had 
> to defer on the product's biggest potential market.
> 
> SNMPv3 is not supported with TwistedSNMP.  We hacked in PySNMP 4.x, 
> discovered it just couldn't be used for our purposes and dropped the 
> porting effort before it was completed (which would have included the 
> SNMPv3 interfaces).

The performance of PySNMP (many years ago) was the main reason we wrote
libsnmp; PySNMP seemed to have been written from a very CompSci
perspective with full abstract ASN.1 model that gets subclassed to SNMP
via many steps, all of which slow it down. We went for a more
engineering approach, hardcoding lookup tables for values that never
change for the specific ASN.1 instanciation that is SNMP, for example.

libsnmp isn't integrated into twisted, though we do use it with twisted
with great success in seafelt; there has been some interest in
integrating libsnmp with twisted in recent times. libsnmp also lacks
SNMPv3 support, only because we haven't had a need to add it yet, but
this means it probably doesn't meet your needs.

However, I am interested in both of these goals: twisted integration,
and SNMPv3 support, so perhaps if there enough people interested in such
an outcome we could work together to achieve it?

-- 
Justin Warren <daedalus at eigenmagic.com>



From therve at free.fr  Fri Mar 30 02:39:57 2007
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Fri, 30 Mar 2007 10:39:57 +0200
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
Message-ID: <20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>

Quoting ?? <littlesweetmelon at gmail.com>:

> Hi,
>    I'm a newbie. After went through the source code in
> twisted.protocols.basic, I found it's really strange that all classes
> in twisted.protocols.basic use "static member" to store states.
>    Take class StatefulStringProtocol as the example. Some Factory
> will creates a group of StatefulStringProtocol instances which share
> the static member "state". But why all instances MUST have the same
> state? In my opinion, instance A may be in the "handshaking" state,
> while instance B may be in the "data sending" state. The static member
> can not represent this case.
>    Therefore, I think protocols should use "member variable" rather
> that "static member":
>
> class StatefulStringProtocol:
> 	def __init__(self):
> 		self.state = 'init'
> ...
>
>    Could you plz give me some clue? I am a little confused. Most
> possibly, I misunderstanding the design about protocols-factory.

In fact, you're misunderstanding Python :). The fact that the variable is
defined as class member doesn't make shared between instances. You can 
see some
explanation here:
http://diveintopython.org/object_oriented_framework/class_attributes.html.

-- 
Thomas






From littlesweetmelon at gmail.com  Fri Mar 30 03:23:31 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 17:23:31 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
Message-ID: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>

No, I don't think so. ^_^ You can see it from the last lines in you
recommend document:
>>> d.count
2
>>> c.count
2

Instance c & d indeed share the class attribute "count". You can try
it more explicitly:
>>> class A:
...     i = 0
...
>>> p = A()
>>> q = A()
>>> A.i = 2
>>> p.i
2
>>> q.i
2
Again, instance p & q share the class attribute "i".

--
ShenLei



From p.mayers at imperial.ac.uk  Fri Mar 30 03:46:22 2007
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 30 Mar 2007 10:46:22 +0100
Subject: [Twisted-Python] Why classes in twisted.protocols.basic
	use	"static member" to store states?
In-Reply-To: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
Message-ID: <460CDC6E.40904@imperial.ac.uk>

甜瓜 wrote:
> No, I don't think so. ^_^ You can see it from the last lines in you
> recommend document:

No you can't, because you've misunderstood.

>>>> d.count
> 2
>>>> c.count
> 2
> 
> Instance c & d indeed share the class attribute "count". You can try
> it more explicitly:
>>>> class A:
> ...     i = 0
> ...
>>>> p = A()
>>>> q = A()
>>>> A.i = 2
>>>> p.i
> 2
>>>> q.i
> 2
> Again, instance p & q share the class attribute "i".

They share it UNTIL IT IS MODIFIED. So, to continue the above example, 
the relevant bit would be:

 >>> p.i=3
 >>> p.i
3
 >>> q.i
2

Effectively, classes in python serve as templates to create instances. 
If you create two instances of a class and modify the class, then both 
are modified - however, if you then modify an instance, the class and 
other instances are not, and those modifications override any 
conflicting ones on the class.

Continuing the above example:

 >>> p.__dict__
{'i': 3}
 >>> q.__dict__
{}


So, because we've modified "p", the attribute is set in the instance 
dict. q remains unmodified, and the getattr call will continue through 
to the class.

Doing this:

class AProtocol:
   INITIALSTATE = 'foo'

..is just a quick way to get INITIALSTATE set on every instance. The 
ONLY circumstance you need worry about these variables being shared is 
if you use a mutable variable and mutate it in place. For example:

 >>> class BProtocol:
...   SOMEDATA = {}
...
 >>> p = BProtocol()
 >>> q = BProtocol()
 >>> p.SOMEDATA['a'] = 1
 >>> q.SOMEDATA
{'a': 1}

If you don't want that to happen, don't do it. Twisted doesn't.



From screwtape at froup.com  Fri Mar 30 04:04:18 2007
From: screwtape at froup.com (Tim Allen)
Date: Fri, 30 Mar 2007 20:04:18 +1000
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
Message-ID: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>

On 30 Mar 2007, at 19:23, 甜瓜 wrote:
> Instance c & d indeed share the class attribute "count". You can try
> it more explicitly:
>>>> class A:
> ...     i = 0
> ...
>>>> p = A()
>>>> q = A()
>>>> A.i = 2
>>>> p.i
> 2
>>>> q.i
> 2

Ah, but continuing:

 >>> p.i = 5
 >>> p.i
5
 >>> q.i
2

i is still not a class attribute in the same way it might be for Java  
or C++.


From littlesweetmelon at gmail.com  Fri Mar 30 04:13:46 2007
From: littlesweetmelon at gmail.com (=?GB2312?B?zPC5zw==?=)
Date: Fri, 30 Mar 2007 18:13:46 +0800
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
	<1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
Message-ID: <cdb837ea0703300313r561d6b90j2a6b5331c340d5dd@mail.gmail.com>

Oh, I see. Thank you very much.



From matt at zgroupplc.com  Fri Mar 30 05:01:27 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 12:01:27 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
Message-ID: <BAE106C8-3EAB-440A-AD74-208517929627@zgroupplc.com>

Hi All,

I am new to twisted and python. I am evaluating the possibility of  
using it for an application that I am writing. The framework looks  
very comprehensive (I am also enjoying the python language :) but I  
have some questions regarding deferred objects and the twisted web  
server itself.

My application essentially comprises the following:

1. HTTP request is received by the server.
2. Server creates a listening socket on an arbitrary port and waits  
for n seconds for incoming data
3. Data (or timeout message) is returned to the client by way of the  
HTTP response.

This is a relatively simple application and I have created a  
prototype in PHP with fastcgi. I am well aware of the limitations of  
PHP when it some to asynchronous events. The application needs to  
service thousands of clients simultaneously. In terms of CPU power,  
this is not a problem, the logic is simple and there is little  
overhead having thousands of listening sockets waiting for data (I'd  
prefer to use epoll but select or poll will do). However, there is a  
massive memory overhead because it is necessary to ensure that there  
is always one, idle process for any incoming request. Given that the  
request may wait for up to n seconds before returning a response, the  
number of simultaneous PHP fastcgi processes that are required is  
unreasonably high.

I have toyed with the idea of writing a small (low memory) binary  
that will accommodate my needs, but my C isn't great, hence twisted.

I was wondering whether it is feasible to use the twisted framework  
for this application. I have been playing with the framework and I  
can't see a way to service what are essentially thousands of requests  
that perform blocking operations simultaneously. I have noted the  
twisted documentation on threads but I was hoping, for the sake of my  
sanity, that I might be able to manage this using an asynchronous  
approach. Essentially, what I think I am looking for is a waitFor()  
on a deferred callback.

As an aside, is it possible to compile platform specific python  
applications as small binaries? Or does the interpreter (is it  
required?) mean the memory consumption is prohibitive?

Can anybody offer any advice on the matter?

Thanks a lot :)


Matthew Glubb



From exarkun at divmod.com  Fri Mar 30 05:18:15 2007
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 30 Mar 2007 06:18:15 -0500
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <BAE106C8-3EAB-440A-AD74-208517929627@zgroupplc.com>
Message-ID: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>

On Fri, 30 Mar 2007 12:01:27 +0100, Matthew Glubb <matt at zgroupplc.com> wrote:
>Hi All,
>
>I am new to twisted and python. I am evaluating the possibility of  using it 
>for an application that I am writing. The framework looks  very 
>comprehensive (I am also enjoying the python language :) but I  have some 
>questions regarding deferred objects and the twisted web  server itself.
>
>My application essentially comprises the following:
>
>1. HTTP request is received by the server.
>2. Server creates a listening socket on an arbitrary port and waits  for n 
>seconds for incoming data
>3. Data (or timeout message) is returned to the client by way of the  HTTP 
>response.
>
> [snip]
>
>I was wondering whether it is feasible to use the twisted framework  for 
>this application. I have been playing with the framework and I  can't see a 
>way to service what are essentially thousands of requests  that perform 
>blocking operations simultaneously. I have noted the  twisted documentation 
>on threads but I was hoping, for the sake of my  sanity, that I might be 
>able to manage this using an asynchronous  approach. Essentially, what I 
>think I am looking for is a waitFor()  on a deferred callback.

There's no way to block until an event occurs.  Blocking would prevent the
reactor from noticing the event or informing you about it. :)

Fortunately you don't need to resort to threads, either.

The conventional way to do this would be to write a function which sets up
the listening port and returns a Deferred which will eventually be called
back with the result (presumably the data which some client will eventually
send to it).  Then, using reactor.callLater, set up a timed call which will
tear down the listening port after the timeout has expired and errback the
Deferred to indicate no data arrived within the timeout period.

Actually, that's the only way to do it. :P  The conventional implementation
would be to do this using explicit callback functions in the style you may
have noticed in many Twisted examples.  There are other ways which allow you
to write code in a different style which some people prefer, but it's just
a difference in spelling, the same thing is happening underneath.

>
>As an aside, is it possible to compile platform specific python 
>applications as small binaries? Or does the interpreter (is it  required?) 
>mean the memory consumption is prohibitive?

Generally the only thing that's possible is to wrap up the whole application
with the whole interpreter and some subset of the standard library in an
executable.  This doesn't sound much like what you're after, though.

Jean-Paul



From matt at zgroupplc.com  Fri Mar 30 06:11:32 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 13:11:32 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
Message-ID: <E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>

Hi Jean-Paul,

Thanks for your response.

On 30 Mar 2007, at 12:18, Jean-Paul Calderone wrote:

> The conventional way to do this would be to write a function which  
> sets up
> the listening port and returns a Deferred which will eventually be  
> called
> back with the result (presumably the data which some client will  
> eventually
> send to it).  Then, using reactor.callLater, set up a timed call  
> which will
> tear down the listening port after the timeout has expired and  
> errback the
> Deferred to indicate no data arrived within the timeout period.

Yes, that's the way I have started doing it, basing it on what I have  
seen in various modules and sub-classing ClientFactory and  
LineReceiver. I am a little confused as to how, when the Deferred is  
returned from the factory, the callbacks that are defined are  
connected to the originating client request. I assume that all I have  
to do is to write the response to the client from the callback and  
that's it.

I guess what I am asking is, if an HTTP request (serviced using  
twisted.web.soap and twistd) starts an asynchronous operation, how  
does it know that it should wait for an event from the operation  
before completing its response.

>> As an aside, is it possible to compile platform specific python  
>> applications as small binaries? Or does the interpreter (is it   
>> required?) mean the memory consumption is prohibitive?
>
> Generally the only thing that's possible is to wrap up the whole  
> application
> with the whole interpreter and some subset of the standard library  
> in an
> executable.  This doesn't sound much like what you're after, though.

Yes, that's what I thought, although I wondered whether someone might  
have written a wonderful tool :)

Thanks again for your time,

Matt



From itamar at itamarst.org  Fri Mar 30 06:37:41 2007
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 30 Mar 2007 08:37:41 -0400
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
	<E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
Message-ID: <1175258261.1920.63.camel@localhost.localdomain>

On Fri, 2007-03-30 at 13:11 +0100, Matthew Glubb wrote:

> I guess what I am asking is, if an HTTP request (serviced using  
> twisted.web.soap and twistd) starts an asynchronous operation, how  
> does it know that it should wait for an event from the operation  
> before completing its response.

twisted.web.soap allows you to return a Deferred as a result of a SOAP
method. When someone eventually calls .callback() or .errback() on that
Deferred the HTTP request will get its response.




From matt at zgroupplc.com  Fri Mar 30 06:58:35 2007
From: matt at zgroupplc.com (Matthew Glubb)
Date: Fri, 30 Mar 2007 13:58:35 +0100
Subject: [Twisted-Python] Simultaneous Blocking Operations and Twisted
In-Reply-To: <1175258261.1920.63.camel@localhost.localdomain>
References: <20070330111815.18920.1122184131.divmod.quotient.6574@ohm>
	<E78B1A93-E2DC-4AF8-8556-D3424F530767@zgroupplc.com>
	<1175258261.1920.63.camel@localhost.localdomain>
Message-ID: <2377B2F4-082F-4BEE-8A72-C8A923BA7F60@zgroupplc.com>

Great. That's what I wanted to know, thanks :)

On 30 Mar 2007, at 13:37, Itamar Shtull-Trauring wrote:

> On Fri, 2007-03-30 at 13:11 +0100, Matthew Glubb wrote:
>
>> I guess what I am asking is, if an HTTP request (serviced using
>> twisted.web.soap and twistd) starts an asynchronous operation, how
>> does it know that it should wait for an event from the operation
>> before completing its response.
>
> twisted.web.soap allows you to return a Deferred as a result of a SOAP
> method. When someone eventually calls .callback() or .errback() on  
> that
> Deferred the HTTP request will get its response.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From mithrandi-twisted-python at mithrandi.za.net  Fri Mar 30 09:50:35 2007
From: mithrandi-twisted-python at mithrandi.za.net (Tristan Seligmann)
Date: Fri, 30 Mar 2007 17:50:35 +0200
Subject: [Twisted-Python] Why classes in twisted.protocols.basic use
	"static member" to store states?
In-Reply-To: <1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
References: <cdb837ea0703292038j5d07bfar11dba9673b1eb8e0@mail.gmail.com>
	<20070330103957.oxdlt768w88o4k04@wasabox.wasabout.net>
	<cdb837ea0703300223v45339c70wbcfe003a47b2f6cf@mail.gmail.com>
	<1C771D3E-DE6F-483C-B9D1-278E0FFA74CD@froup.com>
Message-ID: <20070330155035.GC11991@mithrandi.za.net>

* Tim Allen <screwtape at froup.com> [2007-03-30 20:04:18 +1000]:

> Ah, but continuing:
> 
> >>> p.i = 5
> >>> p.i
> 5
> >>> q.i
> 2
> 
> i is still not a class attribute in the same way it might be for Java  
> or C++.

It would probably be more correct to say that "value types" and
"assignment" work differently in Python compared with Java/C++. More
specifically, in Java/C++, "value types" like int or Integer are
mutable, and the "=" operator mutates them. In python, they are
immutable, and the "=" operator never mutates objects, but instead inds
a variable / attribute / etc. to a new object reference.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20070330/63fa0988/attachment.sig>

From mcfletch at vrplumber.com  Fri Mar 30 10:57:21 2007
From: mcfletch at vrplumber.com (Mike C. Fletcher)
Date: Fri, 30 Mar 2007 12:57:21 -0400
Subject: [Twisted-Python] twisted pysnmp status
In-Reply-To: <1175228562.7273.30.camel@localhost>
References: <460B2722.7020900@BrendanSimon.com>	<460C1652.1040504@vrplumber.com>
	<1175228562.7273.30.camel@localhost>
Message-ID: <460D4171.1090202@vrplumber.com>

Justin Warren wrote:
...
> The performance of PySNMP (many years ago) was the main reason we wrote
> libsnmp; PySNMP seemed to have been written from a very CompSci
> perspective with full abstract ASN.1 model that gets subclassed to SNMP
> via many steps, all of which slow it down. We went for a more
> engineering approach, hardcoding lookup tables for values that never
> change for the specific ASN.1 instanciation that is SNMP, for example.
>
> libsnmp isn't integrated into twisted, though we do use it with twisted
> with great success in seafelt; there has been some interest in
> integrating libsnmp with twisted in recent times. libsnmp also lacks
> SNMPv3 support, only because we haven't had a need to add it yet, but
> this means it probably doesn't meet your needs.
>   
Actually, would meet our client's needs well enough.  SNMPv3 isn't a 
requirement, just a small nicety for them.
> However, I am interested in both of these goals: twisted integration,
> and SNMPv3 support, so perhaps if there enough people interested in such
> an outcome we could work together to achieve it?
>   
Looking over your code it seems like it would be fairly easy to make it 
an option in TwistedSNMP.  Currently TwistedSNMP has an abstraction 
point that allows regular or speed-enhanced PySNMP to be used.  By the 
look of it a very simple wrapper module would let libsnmp provide the 
(small set of) features we use (basically just encode/decode and 
translation of result values to/from Pythonic values with a few "type" 
operations as well (OID, EndOfMibView, that kind of thing)).

BTW, I notice that none of your code uses GetBulk (though you define 
it)?  Bulk operations were a *huge* speed win for our application.  
Hopefully you're doing it in your real-world code.

Anyway, I'll see if there's any interest from the customer in trying out 
libsnmp with the code-base.  That would let me take company time to work 
on integrating it into TwistedSNMP.  They almost certainly don't care 
enough to have it do v3 operations, but raw speed on v2 operations is 
something they may care about enough to pay for a few hours of work.

Have fun,
Mike

-- 
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com




From justinjohnson at gmail.com  Fri Mar 30 11:55:25 2007
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 30 Mar 2007 12:55:25 -0500
Subject: [Twisted-Python] exceptions.TypeError: ('Could not adapt',
	<twisted.spread.pb._PortalAuthChallenger instance at 0x013E3760>,
	<InterfaceClass twisted.cred.credentials.IUsernamePassword>)
In-Reply-To: <20070329205745.18920.618705141.divmod.quotient.6478@ohm>
References: <94a776e70703281001l735ddef0pcb0091a5ff88458d@mail.gmail.com>
	<20070329205745.18920.618705141.divmod.quotient.6478@ohm>
Message-ID: <94a776e70703301055sc9ab0b7ld320399c1d1cfa58@mail.gmail.com>

> >Does anyone have any pointers on what I should be looking for here?
> >Is there any way I can accomplish my goal in a more maintainable way?
>
> It's not clear to me how this worked in the first place. ;)  The
> credentials object being adapted to IUsernamePassword should always
> have been a _PortalAuthChallenger, and so it only should have ever
> been adaptable to IUsernameHashedPassword and IUsernameMD5Password.
>
> The way you want to write requestAvatarId, though, is to inspect the
> credentials object to see what interfaces it provides and them handle
> it accordingly.  You can do this by adapting and catching the TypeError,
> adapting with a default and checking for that, or using the providedBy
> method of the interface object.  The important point is that you have to
> be able to handle every kind of credentials object which the you have
> declared you can handle (with the credentialInterfaces attribute).  In
> this specific case, I believe your checker declared it could handle both
> IUsernamePassword and IUsernameHashedPassword, but its implementation can
> only actually handle IUsernameePassword.
>
> Hope this helps,

Yes, this is helpful.  It has been too long since I looked at this
code.  Thank you.

Justin



From exarkun at twistedmatrix.com  Sat Mar 31 22:05:01 2007
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 01 Apr 2007 04:05:01 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1175400301.42.1173024084@twistedmatrix.com

Bug summary
______________________
Summary for 2007-03-25 through 2007-04-01
Bugs opened: 12    Bugs closed: 4  Total open bugs: 889 (+8)

|== Type Changes   |== Priority Changes   |== Component Changes   
|Defect:       +7  |Highest:  +0          |Core:     +6           
|Enhancement:  +4  |High:     +1          |Ftp:      +2           
|Task:         -1  |Normal:   +8          |Names:    -1           
                   |Low:      +1          |Web:      +1           
                                          |Web2:     +1           
                                          |Website:  +1           


New / Reopened Bugs
______________________
                    ===== Highest =====
[#2539] Add epoll reactor to the choosing-reactor doc (opened by therve)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2539

[#1160] FTPClient failed commands return a FirstError (opened by orbitz)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1160

                    ===== High =====
[#1107] [PATCH] FTPClient does not fire current commands errback on connectionLost (opened by orbitz)
    defect          ftp        http://twistedmatrix.com/trac/ticket/1107

                    ===== Normal =====
[#2540] twistd daemonizing before calling setup code (opened by hagna)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2540

[#2541] Decide on and document Python version support policy (opened by jml)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2541

[#2542] twisted.web.microdom.Node.isEqualToNode does no actual comparison (opened by dreid)
    defect          web        http://twistedmatrix.com/trac/ticket/2542

[#2543] "Noone" isn't a word (opened by indigo)
    defect          core       http://twistedmatrix.com/trac/ticket/2543

[#2544] twisted.web2.channel.[s]cgi contain multiple uses of a function that doesn't exist. (opened by dreid)
    defect          web2       http://twistedmatrix.com/trac/ticket/2544

[#2545] Multiple select reactors to support use of Twisted by non-Twisted libraries (opened by j1m)
    enhancement     core       http://twistedmatrix.com/trac/ticket/2545

[#2546] Are stream/push producers assumed to start paused or unpaused?  Need more docs. :) (opened by j1m)
    defect          core       http://twistedmatrix.com/trac/ticket/2546

[#2547] API Docs has no info about attributes (opened by redbaron)
    enhancement     website    http://twistedmatrix.com/trac/ticket/2547

                    ===== Low =====
[#2548] Need IClientFactory? (opened by j1m)
    defect          core       http://twistedmatrix.com/trac/ticket/2548



Closed Bugs
______________________
                    ===== Highest =====
[#2414] Refactor DNSProtocol and DNSDatagramProtocol (opened by therve, closed by therve, fixed)
    enhancement     names      http://twistedmatrix.com/trac/ticket/2414

[#2426] Delete the s*** at the end of failure.py (opened by exarkun, closed by exarkun, fixed)
    task            core       http://twistedmatrix.com/trac/ticket/2426

[#1160] FTPClient failed commands return a FirstError (opened by orbitz, closed by therve, )
    defect          ftp        http://twistedmatrix.com/trac/ticket/1160

                    ===== High =====
[#1107] [PATCH] FTPClient does not fire current commands errback on connectionLost (opened by orbitz, closed by therve, )
    defect          ftp        http://twistedmatrix.com/trac/ticket/1107





