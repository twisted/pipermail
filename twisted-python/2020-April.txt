From trac at twistedmatrix.com  Sun Apr  5 00:05:17 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Apr 2020 06:05:17 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1586066717.17.8073018153808410282@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200405/88f9e67d/attachment.htm>

From trac at twistedmatrix.com  Sun Apr 12 00:05:16 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Apr 2020 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1586671516.5.5641788623821780267@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200412/b3b92f66/attachment.htm>

From trac at twistedmatrix.com  Sun Apr 19 00:05:15 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Apr 2020 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1587276315.61.5085957660757132644@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200419/7669adff/attachment.htm>

From gksalil at gmail.com  Sun Apr 19 04:03:43 2020
From: gksalil at gmail.com (salil GK)
Date: Sun, 19 Apr 2020 15:33:43 +0530
Subject: [Twisted-Python] Help with twisted.conch.manhole
Message-ID: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>

    I am real need to debug my python application for memory issues. I
found that using twisted.conch.manhole we can get a telnet session to
python interpreter so that we can do some debugging sessions there. I
am using twisted 16.6 in my server. Could you some one please give me
some sample program for achieving this.

Thanks ~S

PS: I have posted this message in stack overflow. Sorry for cross
posting. I have joined this group only today.


From werner at thieprojects.ch  Sun Apr 19 11:05:25 2020
From: werner at thieprojects.ch (Werner Thie)
Date: Sun, 19 Apr 2020 07:05:25 -1000
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
Message-ID: <9517e309-3a44-61b1-052b-9d4f5b2067ce@thieprojects.ch>

Don't know if this is still state of the art, but I've been using this
off and on and please don't use

checkers.InMemoryUsernamePasswordDatabaseDontUse

HTH, Werner




#### controlling terminal command line server
#
#on port 9999. Connect with
#
#ssh admin at localhost -p 9999
#
#accept new keys and start work
#
from twisted.conch import manhole, manhole_ssh
from twisted.conch.ssh import keys, userauth, factory, connection
from twisted.conch.ssh.transport import SSHServerTransport
from twisted.cred import portal, checkers

"""
Generate these keys with

$ ckeygen -t rsa -f ssh-keys/ssh_host_rsa_key
$ ckeygen -t rsa -f ssh-keys/client_rsa

ssh_host_rsa_key.pub is the public key file
ssh_host_rsa_key     is the private key file
"""
publicKey = """ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCoJSZjqVJdh36RoNvwsTMNlqk8heFV6DxNhhkw3uZ58uyrsnz+7JHGpu56tJAO39WMJPLQfdtyWxCy1P2RRKh65hGznvyt2UaAHdZDMqbNcMlupFPg8P4pCgR+/2M14QSopqysfjgXUJRfR/pD93Ofy0L2N5uEGipTjVAjKwxbzQ== wthie at qubik.local"""

privateKey = """-----BEGIN RSA PRIVATE KEY-----
MIICXgIBAAKBgQCoJSZjqVJdh36RoNvwsTMNlqk8heFV6DxNhhkw3uZ58uyrsnz+
7JHGpu56tJAO39WMJPLQfdtyWxCy1P2RRKh65hGznvyt2UaAHdZDMqbNcMlupFPg
8P4pCgR+/2M14QSopqysfjgXUJRfR/pD93Ofy0L2N5uEGipTjVAjKwxbzQIDAQAB
AoGBAKD/8WI8HsGvm2GVxQMSqO+58xIgn0LCu/r/C9/fjo/2Kue8YDM4Ed1EudSE
T+vuJ2updVZtLFKzH6ochy8xrp9wbEPhhQqAl8OEvjFa932mSNqg69403qU57eu1
6j0gqE7Z8pQAyM685RwAv4UujRrT1Vi3EmHu8Rvl7/4MRn+BAkEAwBVzxD7XbEoi
lGCoKSvs2JczVIpOOp8s1FCAvsvbRBKzuqLI9N8J9ljM+SalLecalFqsDMJdx4b5
nfPPoK2wswJBAOAYfrih+3pKznkiW56oVlsTBw20baJpD7D9mRBUkURpu/6zaSLh
7mPP5nxnw+92jOmwXW/9/fqSmOT/wNKLAX8CQHxLZWYP5AZG0qmBAk/iBJkC/kwu
UwDMD44zqZvM/k3GbFbRD4ik6yVlwP1YbHqPmTt2kO6Qt25tgQkcw7YNrtECQQDG
xLNR7Utz03qEc3c0qTe/nIb7HvjHv8yNPsNPetNHDUoUxuoQaLncioF0A04Fzu96
MFcQiQeIBBPduwQ7O9TdAkEAvsQWuNmvVFTg0KQLP2Ity5wHSwoIRWjUq19ciHZu
acFIvir+6kDMWEooqY0uXfKx7UUWJAMCjVJztFoSp/jobw==
-----END RSA PRIVATE KEY-----"""

class ConchSSHFactory(factory.SSHFactory):
    """
    This is the entry point of our SSH server implementation.

    The SSH transport layer is implemented by L{SSHTransport} and is the
    protocol of this factory.

    Here we configure the server's identity (host keys) and handlers for the
    SSH services:
    * L{connection.SSHConnection} handles requests for the channel multiplexing
      service.
    * L{userauth.SSHUserAuthServer} handlers requests for the user
      authentication service.
    """
    protocol = SSHServerTransport

    services = {
        'ssh-userauth': userauth.SSHUserAuthServer,
        'ssh-connection': connection.SSHConnection
    }

    def __init__(self, portal):
        self.portal = portal
        self.publicKeys = {
            'ssh-rsa': keys.Key.fromString(data=publicKey)
        }
        self.privateKeys = {
            'ssh-rsa': keys.Key.fromString(data=privateKey)
        }


def get_manhole_factory(namespace, **passwords):
    realm = manhole_ssh.TerminalRealm()

    def get_manhole(_):
        return manhole.Manhole(namespace)

    realm.chainedProtocolFactory.protocolFactory = get_manhole
    p = portal.Portal(realm)
    checker = checkers.InMemoryUsernamePasswordDatabaseDontUse(**passwords)
    p.registerChecker(checker)
    return ConchSSHFactory(p)

console = get_manhole_factory(pbRoot.initCommands(), admin='admin')
internet.TCPServer(9999, console, interface='localhost').setServiceParent(application)





For memory debugging I found these few lines helpful

exc = [
  "function",
  "type",
  "list",
  "dict",
  "tuple",
  "wrapper_descriptor",
  "module",
  "method_descriptor",
  "member_descriptor",
  "instancemethod",
  "builtin_function_or_method",
  "frame",
  "classmethod",
  "classmethod_descriptor",
  "_Environ",
  "MemoryError",
  "_Printer",
  "_Helper",
  "getset_descriptor",
  "weakreaf"
]

inc = [
]

prev = {}

def dumpObjects(delta=True, limit=0, include=inc, exclude=[]):
  global prev
  if include != [] and exclude != []:
    print 'cannot use include and exclude at the same time'
    return
  print 'working with:'
  print '   delta: ', delta
  print '   limit: ', limit
  print ' include: ', include
  print ' exclude: ', exclude
  objects = {}
  gc.collect()
  oo = gc.get_objects()
  for o in oo:
    if getattr(o, "__class__", None):
      name = o.__class__.__name__
      if ((exclude == [] and include == [])       or \
          (exclude != [] and name not in exclude) or \
          (include != [] and name in include)):
        objects[name] = objects.get(name, 0) + 1
##    if more:
##      print o
  pk = prev.keys()
  pk.sort()
  names = objects.keys()
  names.sort()
  for name in names:
    if limit == 0 or objects[name] > limit:
      if not prev.has_key(name):
        prev[name] = objects[name]
      dt = objects[name] - prev[name]
      if delta or dt != 0:
        print '%0.6d -- %0.6d -- ' % (dt, objects[name]),  name
      prev[name] = objects[name]

def getObjects(oname):
  """
  gets an object list with all the named objects out of the sea of
  gc'ed objects
  """
  olist = []
  objects = {}
  gc.collect()
  oo = gc.get_objects()
  for o in oo:
    if getattr(o, "__class__", None):
      name = o.__class__.__name__
      if (name == oname):
        olist.append(o)
  return olist

On 4/19/20 00:03, salil GK wrote:
>     I am real need to debug my python application for memory issues. I
> found that using twisted.conch.manhole we can get a telnet session to
> python interpreter so that we can do some debugging sessions there. I
> am using twisted 16.6 in my server. Could you some one please give me
> some sample program for achieving this.
>
> Thanks ~S
>
> PS: I have posted this message in stack overflow. Sorry for cross
> posting. I have joined this group only today.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200419/b4713e77/attachment-0001.htm>

From glyph at twistedmatrix.com  Sun Apr 19 17:57:09 2020
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 19 Apr 2020 16:57:09 -0700
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
Message-ID: <F58B16D3-329D-4177-B5E5-6F83CBCFAB4A@twistedmatrix.com>


> On Apr 19, 2020, at 3:03 AM, salil GK <gksalil at gmail.com> wrote:
> 
> I am using twisted 16.6 in my server

There have been several security updates since 16.6, which is nearing 4 years old at this point.  You should really upgrade!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200419/47f23e67/attachment.htm>

From contact at evilham.com  Mon Apr 20 03:01:11 2020
From: contact at evilham.com (Evilham)
Date: Mon, 20 Apr 2020 11:01:11 +0200
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
Message-ID: <6a078f1c-d7d0-40d5-808c-6dec06ae1ba4@yggdrasil.evilham.com>


On dg., abr. 19 2020, salil GK wrote:

>     I am real need to debug my python application for memory 
>     issues. I
> found that using twisted.conch.manhole we can get a telnet 
> session to
> python interpreter so that we can do some debugging sessions 
> there. I
> am using twisted 16.6 in my server. Could you some one please 
> give me
> some sample program for achieving this.
>
> Thanks ~S
>
> PS: I have posted this message in stack overflow. Sorry for 
> cross
> posting. I have joined this group only today.

As glyph mentioned, you really should be running newer Twisted; it 
is entirely possible that many recommendations would not work 
because of the old version.

That being said, you can peek in this repository, which has a 
manhole over SSH and public key-based auth:
  https://github.com/evilham/isalive.me/blob/master/isaliveme/conch_helpers.py
  (At least parts of the code in that file should end up in 
  Twisted some day)

Or peek in matrix-synapse's code, which has a telnet-based one.
Or these, even more minimal examples: 
https://twistedmatrix.com/documents/current/conch/examples/index.html
--
Evilham


From richard at matrix.org  Mon Apr 20 03:27:42 2020
From: richard at matrix.org (Richard van der Hoff)
Date: Mon, 20 Apr 2020 10:27:42 +0100
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <6a078f1c-d7d0-40d5-808c-6dec06ae1ba4@yggdrasil.evilham.com>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
 <6a078f1c-d7d0-40d5-808c-6dec06ae1ba4@yggdrasil.evilham.com>
Message-ID: <bfa44513-12ec-917c-d11d-0a034c004a9b@matrix.org>

> Or peek in matrix-synapse's code, which has a telnet-based one.

synapse's manhole is SSH-based :)

(dunno why, given it uses hardcoded auth, so all security depends on the 
manhole port being locked down, but still)


From contact at evilham.com  Mon Apr 20 03:34:17 2020
From: contact at evilham.com (Evilham)
Date: Mon, 20 Apr 2020 11:34:17 +0200
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <bfa44513-12ec-917c-d11d-0a034c004a9b@matrix.org>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
 <6a078f1c-d7d0-40d5-808c-6dec06ae1ba4@yggdrasil.evilham.com>
 <bfa44513-12ec-917c-d11d-0a034c004a9b@matrix.org>
Message-ID: <f68c25fb-dfcd-4dd7-aa15-38b647c66517@yggdrasil.evilham.com>


On dl., abr. 20 2020, Richard van der Hoff wrote:

>> Or peek in matrix-synapse's code, which has a telnet-based one.
>
> synapse's manhole is SSH-based :)
>
> (dunno why, given it uses hardcoded auth, so all security 
> depends on the manhole
> port being locked down, but still)


I actually remembered this the second I sent that email :-D. My 
brain jumped from "hardcoded username and password" to Telnet 
somehow :-p.
--
Evilham


From gksalil at gmail.com  Mon Apr 20 04:22:55 2020
From: gksalil at gmail.com (salil GK)
Date: Mon, 20 Apr 2020 15:52:55 +0530
Subject: [Twisted-Python] Help with twisted.conch.manhole
In-Reply-To: <f68c25fb-dfcd-4dd7-aa15-38b647c66517@yggdrasil.evilham.com>
References: <CAPACB-z0PMTBno1mX-LDiRNA-FBRv8G_jZ0qxTpF-E4prjfBOg@mail.gmail.com>
 <6a078f1c-d7d0-40d5-808c-6dec06ae1ba4@yggdrasil.evilham.com>
 <bfa44513-12ec-917c-d11d-0a034c004a9b@matrix.org>
 <f68c25fb-dfcd-4dd7-aa15-38b647c66517@yggdrasil.evilham.com>
Message-ID: <CAPACB-wKj8mwSjdSaEmOUtMeTJ8=pFDdzDfjA5DLUcY=oms8pA@mail.gmail.com>

Thank you all so much
Its of great help.
Twisted upgrade is in the pipeline. We will be moving there soon.
~S

On Mon, 20 Apr 2020 at 15:04, Evilham <contact at evilham.com> wrote:
>
>
> On dl., abr. 20 2020, Richard van der Hoff wrote:
>
> >> Or peek in matrix-synapse's code, which has a telnet-based one.
> >
> > synapse's manhole is SSH-based :)
> >
> > (dunno why, given it uses hardcoded auth, so all security
> > depends on the manhole
> > port being locked down, but still)
>
>
> I actually remembered this the second I sent that email :-D. My
> brain jumped from "hardcoded username and password" to Telnet
> somehow :-p.
> --
> Evilham
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From rodrigc at crodrigues.org  Tue Apr 21 21:57:12 2020
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Tue, 21 Apr 2020 20:57:12 -0700
Subject: [Twisted-Python] twistedchecker now uses pylint >= 2.4.4,
 can we use type annotations in Twisted now?
Message-ID: <CAG=rPVdtVyL8di8wPndfTKcPTx268vsRp6RUzDJ02+yzeqNcBg@mail.gmail.com>

Hi,

Last week I did some work and updated twistedchecker
so that it uses pylint >= 2.4.4.  Before that, it was using a really old
version
of pylint.

twistedchecker is run over the Twisted code as part of CI, and reports
various style issues.  Now that twistedchecker is using a newer pylint,
it should be compatible with newer Python language features.

Now that Twisted supports Python 3.5+ (with Python 2.7 support being
dropped),
is it OK to start using newer features of the Python language in the
Twisted codebase
such as type hints ( https://docs.python.org/3/library/typing.html )?

I don't have experience with that feature, but it looks like it could be
useful,
when combined with a tool like mypy.  Does anyone else have opinions on
type hints and mypy?

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200421/7a68370c/attachment.htm>

From glyph at twistedmatrix.com  Wed Apr 22 01:27:28 2020
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 22 Apr 2020 00:27:28 -0700
Subject: [Twisted-Python] twistedchecker now uses pylint >= 2.4.4,
 can we use type annotations in Twisted now?
In-Reply-To: <CAG=rPVdtVyL8di8wPndfTKcPTx268vsRp6RUzDJ02+yzeqNcBg@mail.gmail.com>
References: <CAG=rPVdtVyL8di8wPndfTKcPTx268vsRp6RUzDJ02+yzeqNcBg@mail.gmail.com>
Message-ID: <4F554B45-897C-4209-845C-48721584EE0E@twistedmatrix.com>



> On Apr 21, 2020, at 8:57 PM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> Hi,
> 
> Last week I did some work and updated twistedchecker
> so that it uses pylint >= 2.4.4.  Before that, it was using a really old version
> of pylint.
> 
> twistedchecker is run over the Twisted code as part of CI, and reports
> various style issues.  Now that twistedchecker is using a newer pylint,
> it should be compatible with newer Python language features.
> 
> Now that Twisted supports Python 3.5+ (with Python 2.7 support being dropped),
> is it OK to start using newer features of the Python language in the Twisted codebase
> such as type hints ( https://docs.python.org/3/library/typing.html <https://docs.python.org/3/library/typing.html> )?
> 
> I don't have experience with that feature, but it looks like it could be useful,
> when combined with a tool like mypy.  Does anyone else have opinions on
> type hints and mypy?

We use them at work, and on some other Twisted projects (Klein) and they're absolutely awesome.  Even with type comments, mypy is a huge upgrade to how one writes and maintains Python; with annotations, it's a major upgrade to the language.

The first step here, however, is to set up the CI infrastructure (tox, etc) to run mypy so that we can ensure that as we start writing type hints, we don't accidentally get any of them wrong and back ourselves into any corners.  Mypy can catch a surprising number of bugs with just the implicit type-checking it does on values that come from the standard library.  In fact, if we do `mypy src/twisted` right now, and exclude the things that would be fixed by adding in https://github.com/Shoobx/mypy-zope <https://github.com/Shoobx/mypy-zope> ("method must have at least one argument" zope.interface definition errors) and fixing up some simple type hints (has no attribute "skip") we still have almost a thousand type errors that we should figure out a way to start correcting or systematically skipping if they're false positives.  I guarantee you there's at least one real bug in there though.

As you know, I tend to be pretty cautious about sweeping changes to the code that might make it harder to maintain on older versions - type hints are an exception where I think it's absolutely worthwhile to go All In early on.  But CI infrastructure for this stuff is a must-have and it might be tricky to get set up initially.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200422/cd842e96/attachment.htm>

From goluhng at gmail.com  Wed Apr 22 10:13:06 2020
From: goluhng at gmail.com (Go Luhng)
Date: Wed, 22 Apr 2020 12:13:06 -0400
Subject: [Twisted-Python] Returning a response for an HTTP query that
 requires upstream IO.
Message-ID: <CAO-tw_j4B6a32GZmN3dU2EU8_nkkDU8Zax_HaPG+G7WXr9EggA@mail.gmail.com>

I'd like to develop a server that maintains a TCP connection to an
upstream server, and listens for HTTP requests. Upon receiving an HTTP
request, the server will send a message upstream, wait for a response,
and return an HTTP response to the client which made the request.

My background is in writing blocking web services, so my natural
instinct is to write a `get_result_for(query)` method that will take a
`query` string and return a result from the upstream TCP connection.

I'm not sure whether writing such a method is possible in Twisted,
since it's basically a blocking method. I suspect I may have to use
Continuation-Passing Style instead, that is: provide a callback to
`get_result_for(query, callback)`.

Even if that's the case, how do I return an HTTP response to the HTTP
client once the query result is available?


From donal.mcmullan at gmail.com  Wed Apr 22 10:56:31 2020
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Wed, 22 Apr 2020 17:56:31 +0100
Subject: [Twisted-Python] Returning a response for an HTTP query that
 requires upstream IO.
In-Reply-To: <CAO-tw_j4B6a32GZmN3dU2EU8_nkkDU8Zax_HaPG+G7WXr9EggA@mail.gmail.com>
References: <CAO-tw_j4B6a32GZmN3dU2EU8_nkkDU8Zax_HaPG+G7WXr9EggA@mail.gmail.com>
Message-ID: <CADf-aJECcQRu9gg5w-KUAFxTB4D0DFF_4V_ZLffKkpBa5XmMgw@mail.gmail.com>

This section of the documentation might be what you're looking for:
https://twistedmatrix.com/documents/current/web/howto/web-in-60/asynchronous.html

If the tcp request to your upstream server is using some blocking
(non-twisted) API, you could look into deferToThread.

On Wed, 22 Apr 2020 at 17:17, Go Luhng <goluhng at gmail.com> wrote:

> I'd like to develop a server that maintains a TCP connection to an
> upstream server, and listens for HTTP requests. Upon receiving an HTTP
> request, the server will send a message upstream, wait for a response,
> and return an HTTP response to the client which made the request.
>
> My background is in writing blocking web services, so my natural
> instinct is to write a `get_result_for(query)` method that will take a
> `query` string and return a result from the upstream TCP connection.
>
> I'm not sure whether writing such a method is possible in Twisted,
> since it's basically a blocking method. I suspect I may have to use
> Continuation-Passing Style instead, that is: provide a callback to
> `get_result_for(query, callback)`.
>
> Even if that's the case, how do I return an HTTP response to the HTTP
> client once the query result is available?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200422/66371583/attachment.htm>

From trac at twistedmatrix.com  Sun Apr 26 00:05:18 2020
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Apr 2020 06:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1587881118.59.4131586489005925722@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20200426/5a0cbcab/attachment.htm>

