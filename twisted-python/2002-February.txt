From slt5v at cc.usu.edu  Fri Feb  1 04:27:56 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Fri, 1 Feb 2002 02:27:56 -0700
Subject: [Twisted-Python] IM feature requests
Message-ID: <20020201092756.GE13679@nafai.dynodns.net>

Hey all,
  I am excited for the new GTK IM client that is in CVS.  I've been
  happy with its features thus far -- pretty good for a program that is
  so new.  Anyway, since I am in some strange e-mail writing mood, I
  thought I would document for the world (or at least those planning on
  working on GTK IM in the near future) some of my feature requests for
  t-im, so that it becomes very useful for me.  These aren't all high
  priority, and I myself might want to try to add some of these.  But
  it's just a list for the world to see:

  1.  Tabbed interface.  I would prefer that it all be in one window
  instead of all separate.  Especially if I have multiple private
  conversations going on, and am on multiple channels.  Hopefully this
  one won't be too hard, since we have Glade at our disposal.

  2.  Tab completion.  This one actually doesn't look too hard to add,
  and if no one is planning on this one, I might try it this weekend,
  with a little help.  I'm so used to my IRC clients completing nicks
  for me when I press tab that I feel deprived without it.

  3.  Nick highlighting.  Highlighting messages directed towards you.

  4.  /me working.  I'm getting used to seeing /me a lot.  That's
  probably a words thing.

  5.  Hi-light tab titles to indicate activity.  IIRC, X-Chat highlights
  with one color for normal activity in a non-active tab, and another if
  your nick was mentioned.

  6.  Keyboard control.  Shortcut keys for everything -- switching tabs,
  etc.

  7.  Integrated contact management.  Okay, this one is my deal.  Should
  be fun.

  8.  The kitchen sink.  I would love for this to be the ultimate
  communication tool for me.  Does words support file transfer?
  Something akin to /dcc?  What about the whiteboard thingy that somone
  (was it Acap?) was working on a long time ago?  Just the ultimate!

  Good work and I will try to contribute how I can!

Nafai



From twisted at itamarst.org  Fri Feb  1 06:52:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Feb 2002 13:52:31 +0200
Subject: [Twisted-Python] IM feature requests
References: <20020201092756.GE13679@nafai.dynodns.net>
Message-ID: <3C5A817F.90606@itamarst.org>

Travis B. Hartwell wrote:


>   2.  Tab completion.  This one actually doesn't look too hard to add,
>   and if no one is planning on this one, I might try it this weekend,
>   with a little help.  I'm so used to my IRC clients completing nicks
>   for me when I press tab that I feel deprived without it.

And if we could have ry support, so it does autocomplete for e at ircnet, 
that'd be even better ;)




From twisted at itamarst.org  Fri Feb  1 14:11:09 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Feb 2002 21:11:09 +0200
Subject: [Twisted-Python] RFC: Dropping support for Python versions prior to 2.1
Message-ID: <3C5AE84D.6010907@itamarst.org>

Hi,

We've been discussing dropping support in Twisted for versions of Python 
prior to 2.1. There will be a number of limitation for people developing 
Twisted itself, though not, of course for people *using* Twisted - the 
coding standard will probably disallow list comprehensions, print>>, and 
import X as Y.

On the plus side, 2.1 will allow use of new features such as weak 
references, string object methods and so on. Additionaly, pyOpenSSL does 
not run on Python 1.5.2. On the other hand, 2.1 is less commonly 
installed than 1.5.2.

So, do any of you (users and developers) mind if 1.5.2 is no longer 
supported? If so, this is the time to speak out and say so.




From ivo at amaze.nl  Sat Feb  2 04:54:28 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 2 Feb 2002 10:54:28 +0100
Subject: [Twisted-Python] RFC: Dropping support for Python versions prior to 2.1
In-Reply-To: <3C5AE84D.6010907@itamarst.org>; from twisted@itamarst.org on Fri, Feb 01, 2002 at 09:11:09PM +0200
References: <3C5AE84D.6010907@itamarst.org>
Message-ID: <20020202105428.B30432@amaze.nl>

On Fri, Feb 01, 2002 at 09:11:09PM +0200, Itamar Shtull-Trauring wrote:
> Hi,
> 
> We've been discussing dropping support in Twisted for versions of Python 
> prior to 2.1. There will be a number of limitation for people developing 
> Twisted itself, though not, of course for people *using* Twisted - the 
> coding standard will probably disallow list comprehensions, print>>, and 
> import X as Y.
> 
> On the plus side, 2.1 will allow use of new features such as weak 
> references, string object methods and so on. Additionaly, pyOpenSSL does 
> not run on Python 1.5.2. On the other hand, 2.1 is less commonly 
> installed than 1.5.2.
> 
> So, do any of you (users and developers) mind if 1.5.2 is no longer 
> supported? If so, this is the time to speak out and say so.
> 

I would. Unfortunately, 1.5.2 is still the default install with redhat
systems (which are quite alot). I'm using Twisted to write gtk network
applications (such as an irc / msn client), and it's very usefull that
people can use the default pytgtk/glade packages that come with their
distribution. Requiring that people upgrade to 2.1, along with pygtk, 
pyglade (and of course install Twisted on top of that) may prevent 
people from using my applications at all.

I wouldn't mind parts of twisted being 2.x only - I only use the 
protocol/tcp parts of Twisted at this moment.

With regards,

	Ivo

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From twisted at itamarst.org  Sat Feb  2 09:05:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 02 Feb 2002 16:05:27 +0200
Subject: [Twisted-Python] Call Profiler - profile your Zope website
Message-ID: <3C5BF227.2060302@itamarst.org>

This sounds like a useful functionality for us:
<http://www.zope.org/Members/richard/CallProfiler/>

This is infrastructure for profiling specific requests, as opposed to 
the whole server, so it's much more useful for figuring out why your PB 
or web request is slow.




From jason at crash.org  Sat Feb  2 14:12:41 2002
From: jason at crash.org (Jason Asbahr)
Date: Sat, 2 Feb 2002 13:12:41 -0600
Subject: [Twisted-Python] Behold: Shirts
In-Reply-To: <7F71ABFE-1462-11D6-9D26-000393753460@crash.org>
Message-ID: <D40EACE0-1810-11D6-B119-000393753460@crash.org>

FYI, my shirt arrived on Jan 31.  If you haven't ordered yet, and still 
want to, consider having it shipped 2-day to your hotel....

J

On Monday, January 28, 2002, at 08:47 PM, Jason Asbahr wrote:

>
> Glyph has set up a CafePress storefront -- now you too can be proudly 
> emblazoned with the Twisted Logo!
>
> http://www.cafepress.com/twistedlabs
>
>
> Jason
>
> (I went ahead and paid the outrageous 2nd day air shipping to make sure 
> my shirt arrives before IPC 10...)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From corydodt at yahoo.com  Mon Feb  4 14:57:52 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 4 Feb 2002 11:57:52 -0800 (PST)
Subject: [Twisted-Python] twistd-debug doesn't ken plugins
Message-ID: <20020204195752.85420.qmail@web10001.mail.yahoo.com>

$ ./twistd dataconda (with a plugin named dataconda) ... starts twistd
$ ./twistd-debug dataconda
Traceback (most recent call last):
  File "/usr/bin/twistd-debug", line 43, in ?
    app = cPickle.load(open(sys.argv[1]))
IOError: [Errno 2] No such file or directory: 'dataconda'

Nuff said :)

__________________________________________________
Do You Yahoo!?
Great stuff seeking new owners in Yahoo! Auctions! 
http://auctions.yahoo.com



From slt5v at cc.usu.edu  Mon Feb  4 22:16:28 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Mon, 4 Feb 2002 20:16:28 -0700
Subject: [Twisted-Python] IM: Design ideas
Message-ID: <20020205031628.GA13029@nafai.dynodns.net>

Hey all,

  I hope y'all at IPC10 are having enough fun for the lot of us.
  Also, I hope y'all don't get annoyed with my constant feature
  requests and ideas and no code (as of yet).  I hope to change that.
  But, in the meantime, I'm going to continue to throw out my ideas.
  Please tear it apart, kill it, praise it, or whatever you wish!

  As many of you know, I'm primarily a text-mode (console/xterm/ssh)
  and screen kind of guy, though I do live in X when I'm at home.
  (Gotta love the maximaxed, borderless xterms!)  Anyway, I also am
  really enjoying the new GTK IM and the possibilities that it can
  offer.  I am willing to shift to it as my primary communication
  client, ditching epic4 for IRC.  But, I really need to be able to
  connect to my client from ssh -- using VNC really doesn't work that
  well from my cable modem to campus.  I could just disconnect from
  GTK IM when I leave in the morning and connect via epic under screen
  and then reconnect via GTK IM at night.  But that is a hassle.

  This is what I propose, and ask if this is possible or plausible:
  Add another layer between GTK IM and the [twisted.words/TOC/IRC]
  supports.  This layer will have no UI, but will act as an abstract
  client for those support services.  It will keep track of all
  activity on your joined channels, any /msgs, etc.  Then, a UI client
  will connect to this layer thingamajig.  It will be able to display
  all of the activity that has taken place while disconnected and then
  will communicate with the twisted.words server via the layer
  thingamajig.  Then, I need to write a text-mode client for this
  (grrr, the annoying part) so I can just re-connect with that when I
  ssh into my box, but then later re-attach the GTK client, taking me
  back to where it was in the text-mode client.

  I don't think I'm being very clear, so I hope y'all understand.
  Either one of the clients can automatically start the layer
  thingamajig if it isn't already running, so those who don't want the
  detachable capability will use the client unawares.

  Good, bad, ugly, dumb?  How hard?

Nafai

  



From corydodt at yahoo.com  Tue Feb  5 04:21:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 5 Feb 2002 01:21:08 -0800 (PST)
Subject: [Twisted-Python] some errors twisted does not handle gracefully
Message-ID: <20020205092108.76415.qmail@web10006.mail.yahoo.com>

I'm trying to make a catalog of these.  Twisted needs to have
better-defined exceptions for certain conditions instead of relying on
Python to report the error via tracebacks.  More specific errors would
allow the developer to more quickly track down the problem. 
Furthermore,
programmatic handling of exceptions in the client should be feasible. 
Handling a TypeError that could be a bug in your code the same as an
unauthorized-client-action style error means you have to accept that
bugs
in your code will be masked if you catch these.

Here's the list:


1) cause: Didn't set 'application' in a config.tac.

results in this message in the log:

"05/02/2002 00:50 [-] Python file
'/home/cdodt/TwistedPlugins/dataconda/config.tac' did not produce an
application."

This isn't gross, but there's no reason not to give more information
here.
 Even though I knew about this requirement, I had forgotten about it and
renamed a variable, resulting in this situation.  The log message wasn't
helpful in reminding me.  It should be just a little more specific:
"config.tac must set a variable named 'application'.  No application was
produced."


2) cause: Trying to log in as an Identity that never had a password set

Traceback! exceptions.TypeError, argument must be string or read-only
buffer, not None
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:759:_recvMessage
/usr/lib/python2.1/site-packages/twisted/spread/flavors.py:155:remoteMessageReceived
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:958:remote_respond
/usr/lib/python2.1/site-packages/twisted/cred/identity.py:123:verifyPassword

This one is pretty ugly.  It's valid to have an Identity with no password.
(If it isn't, then you shouldn't be able to create one.)  In my case,
it just means that user can't log in.  If we must throw an exception
here,
throw "IdentityWithNullPasswordError" or something like that, and better
yet, name the identity with the problem.


3) cause: calling a method with the wrong name on a RemoteReferenced
object (Perspective, Referenceable, etc.)

Traceback! exceptions.AttributeError, LobbyUser instance has no
attribute 'perspective_xxx'
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:759:_recvMessage
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:194:perspectiveMessageReceived

Well ok, duh, at least this one I can figure out.  But it should still
be something more specific: 'RemoteMethodNotImplementedError' for
example.

I will send more as I find them.

Thanks!
C


__________________________________________________
Do You Yahoo!?
Send FREE Valentine eCards with Yahoo! Greetings!
http://greetings.yahoo.com



From acapnotic at twistedmatrix.com  Tue Feb  5 16:46:20 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 05 Feb 2002 13:46:20 -0800
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <20020205031628.GA13029@nafai.dynodns.net>
References: <20020205031628.GA13029@nafai.dynodns.net>
Message-ID: <1012945580.1645.36.camel@troglodyte>

On Mon, 2002-02-04 at 19:16, Travis B. Hartwell wrote:
>   This is what I propose, and ask if this is possible or plausible:
>   Add another layer between GTK IM and the [twisted.words/TOC/IRC]
>   supports.  This layer will have no UI, but will act as an abstract
>   client for those support services.  It will keep track of all
>   activity on your joined channels, any /msgs, etc.  Then, a UI client
>   will connect to this layer thingamajig.

What I'm thinking is that this layer could be a local, personal Words
service.  It has pretty much the interface you need, as it keeps track
of what channels you're on, receives messages, etc.  You'd set this
words service up as a client (or perhaps a peer) to the shared server,
and then your front-end would connect to your personal server.  It
certainly makes the clients easy enough to write =) and you can plug in
other capabilities by having other agent-programs log in to your
personal server too.

I'm still a bit under the weather, so I don't know how lucid I'm being,
but does this spark anything for you?




From slt5v at cc.usu.edu  Tue Feb  5 17:01:54 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Tue, 5 Feb 2002 15:01:54 -0700
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <1012945580.1645.36.camel@troglodyte>
References: <20020205031628.GA13029@nafai.dynodns.net> <1012945580.1645.36.camel@troglodyte>
Message-ID: <20020205220154.GA1769@nafai.dynodns.net>

On Tue, Feb 05, 2002 at 01:46:20PM -0800, Kevin Turner wrote:
> What I'm thinking is that this layer could be a local, personal Words
> service.  It has pretty much the interface you need, as it keeps track
> of what channels you're on, receives messages, etc.  You'd set this
> words service up as a client (or perhaps a peer) to the shared server,
> and then your front-end would connect to your personal server.  It
> certainly makes the clients easy enough to write =) and you can plug in
> other capabilities by having other agent-programs log in to your
> personal server too.
> 
> I'm still a bit under the weather, so I don't know how lucid I'm being,
> but does this spark anything for you?

This is roughly what I was thinking.  Part of the reason I was somewhat
hazy in my mail is that I don't really know how words works.  If this
can cache all events and messages for me, it would be great.  Now if we
can just get the word from the big wigs.

Naf



From acapnotic at twistedmatrix.com  Wed Feb  6 00:21:59 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 05 Feb 2002 21:21:59 -0800
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <20020205220154.GA1769@nafai.dynodns.net>
References: <20020205031628.GA13029@nafai.dynodns.net>
	<1012945580.1645.36.camel@troglodyte> 
	<20020205220154.GA1769@nafai.dynodns.net>
Message-ID: <1012972919.2143.12.camel@troglodyte>

On Tue, 2002-02-05 at 14:01, Travis B. Hartwell wrote:
> On Tue, Feb 05, 2002 at 01:46:20PM -0800, Kevin Turner wrote:
> > What I'm thinking is that this layer could be a local, personal Words
> > service.
...]
> If this
> can cache all events and messages for me, it would be great.

Well, of course, there are a few things standing between this concept of
the personal Words server and using it in reality.  One thing is that
nobody's done a Words service to Words service connection yet, whether
it be oriented towards linking several public servers, or using a
personal server as a Words client.

The other is that no, there's no cacheing or spooling done by the Words
service, so you'd have to add that in too.

One question I might ask here is, what is it that you really want to
do?  I currently leave an IRC client running under 'screen' in some
places, but I think that if I had access to full logs of that channel, I
wouldn't need to leave a personal client connected.  Thus the desire for
the stenobot.

What other needs does this Words personal proxy serve?

 - Kevin




From z3p at twistedmatrix.com  Tue Feb  5 23:43:44 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 5 Feb 2002 23:43:44 -0500
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <1012945580.1645.36.camel@troglodyte>
References: <20020205031628.GA13029@nafai.dynodns.net>
Message-ID: <3C606E30.27727.1F259F1@localhost>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 5 Feb 2002 at 13:46, Kevin Turner wrote:

> On Mon, 2002-02-04 at 19:16, Travis B. Hartwell wrote:
> >   This is what I propose, and ask if this is possible or plausible:
> >   Add another layer between GTK IM and the [twisted.words/TOC/IRC]
> >   supports.  This layer will have no UI, but will act as an abstract
> >   client for those support services.  It will keep track of all
> >   activity on your joined channels, any /msgs, etc.  Then, a UI client
> >   will connect to this layer thingamajig.
> 
> What I'm thinking is that this layer could be a local, personal Words
> service.  It has pretty much the interface you need, as it keeps track
> of what channels you're on, receives messages, etc.  You'd set this
> words service up as a client (or perhaps a peer) to the shared server,
> and then your front-end would connect to your personal server.  It
> certainly makes the clients easy enough to write =) and you can plug in
> other capabilities by having other agent-programs log in to your
> personal server too.
> 
> I'm still a bit under the weather, so I don't know how lucid I'm being,
> but does this spark anything for you?

The problem with just having a local Words service is that it doesn't 
deal with other protocols.  Running a local service for every protocol 
you want to connect to would be a pain.  Another idea (perhaps closer to 
what Nafai wanted) is to have an "Instance Messenger" PB service, with 
methods like addAccount(), signOnAccount(), sendMessage(), joinGroup(), 
etc.  The PB service would call back with methods like gotMessage() and 
joinedGroup().  When the UI is disconnected from the service, it logs 
messages, and when a UI reconnects, it sends the log messages so the UI 
is caught up.
	The only issue I see with this is configuration.  Perhaps all 
configuration could be just only with GTK-IM?  Writing complex UI-
indepdent anything is hard, and it would probably be easiest to restrict 
it to GTK-IM with the Glade Account Manager.
- -p
- --
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (MingW32)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjxgtIEACgkQ/0FqBhns6q3IhACfYx8vZxWwK0xk6tzufOsS7SWa
TgsAn1SmSf9+7Gd2aCBooIiiZAwCXEdN
=Tbdv
-----END PGP SIGNATURE-----




From shandy at geeky.net  Fri Feb  8 04:23:58 2002
From: shandy at geeky.net (Shandy Brown)
Date: 08 Feb 2002 04:23:58 -0500
Subject: [Twisted-Python] Documentation
Message-ID: <1013160238.25156.25.camel@shitbox>

Hi.

Glyph invited me to share my thoughts about the state of Twisted
Documentation, and why I chose not to use Twisted in my project,
Metagame-Sector ( http://sjbrown.geeky.net/metagame-sector/ ).  I guess
the best way to explain why I didn't choose Twisted is to look at what I
did choose, SimpleXMLRPCServer (
http://www.python.org/doc/current/lib/simple-xmlrpc-servers.html ).

My project and my attitudes are such that I don't want to spend a lot of
time on client-server implementation.  I already  had a working
'standalone' implementation, and I wanted to add on the client-server
"Feature".  And for this, XMLRPCServer was great.  To make my Game
object listen for requests on the internet, all i had to do was call
register_instance( myGame )  (ok, it was a little more complicated than
that -- i had to resolve threading and pickling issues, but that got me
started )  I was able to read this article:

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81549

and the SimpleXMLRPCServer docs linked above, and I was good to go. 
Some say a picture is worth a thousand words;  When learning APIs, an
example (as above) is worth a thousand help()s.

In comparison, Twisted offerred me this as documentation:

http://www.twistedmatrix.com/page.epy/docs/writing-servers.html

In a *subjective* nutshell, this is hard to read.  Also, coming from my
background, it doesn't tell me how do do what I want to do, which is:
extend my already existing class to make it listen to the internet for
requests.  An ***example*** would really help out here.

Hope this helps let you understand one outsider's view of the
documentation.

sjbrown


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020208/63ae9d91/attachment.pgp 

From glyph at twistedmatrix.com  Sun Feb 10 21:17:14 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 10 Feb 2002 20:17:14 -0600
Subject: [Twisted-Python] International Python Conspiracy 10
Message-ID: <1013393835.427.1.camel@zelda>

Some members of the Twisted development team, including myself, attended
IPC10 this last week.  ( http://www.python10.com/ )

In general, the conference was a huge success.  The talk that Moshe
Zadka and I gave was heavily attended.  Various materials related to the
conference, including photos, the paper, and erratta are available at:

        http://twistedmatrix.com/users/glyph/ipc10

There will probably be a few more additions, since I've been really busy
after getting back from the conference.

Also, most of the Twisted development team met in meatspace for the first time.

If you were there, either at the paper presentation or at the Birds of a
Feather session, thanks for dropping by!  We got some good feedback from the
people who attended both of these, and that was mainly that our key problem is
(surprise) documentation.

It was hard to decide what features of the conference to describe in detail
here, since I had a lot of fun and met a lot of people, so I'll focus on what
impact these things will have on the future development of Twisted itself.

There was an incredible amount of interest in Twisted; I found that often,
rather than trying to generate interest, I was having to keep people's
expectations low.  The chief reason was that Twisted doesn't have very good
documentation, and so it's difficult for end-users to get into it.  I had
underestimated how useful something like Twisted could be to the average web
developer.

Currently I'm trying to develop a documentation strategy, and I'm still not
sure what form it will take.  If you are interested in writing documentation,
but don't understand Twisted well enough to do so, please contact me and let me
know what information you need to get started.  The file doc/index.html in the
distribution is an outline of the docs we need -- there is nobody signed up to
work on them yet.  A few people have mentioned their interest, and if we're
lucky, enough time will clear up in all of our schedules to permit working on
that.

While Developer Day was going on, the Twisted team met outside the conference
to talk about the Version 1.0 release strategy.  I'd like to get to 1.0 by
about april, since I think we've already got a lot of functionality, and one of
the things that's making it difficult to document is that it changes all the
time.

It is easiest to define release criterea when your test suites are written by
someone else.  We hope to leverage that by using use-cases derived from other
sorts of server software for those parts of Twisted which are not really
integrated: we can tell when twisted.mail is at the postfix/qmail level of mail
application, when twisted.web can compete with apache, and when twisted.names
can replace BIND.  Those are all going to be release criterea, but we also need
some way to decide when our integration between services is good enough.  Since
including them in this email was making it rediculously long, I've put up a
webpage that is a first draft at figuring out what we need for 1.0:

        http://twistedmatrix.com/users/glyph/twisted/one-point-oh.html

Twisted Developers (especially those not at IPC10), your comments are
appreciated.

Hope to see you all there next year!


-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020210/968849d5/attachment.pgp 

From acapnotic at twistedmatrix.com  Mon Feb 11 00:06:45 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 10 Feb 2002 21:06:45 -0800
Subject: [Twisted-Python] Words.Participant capabilities
Message-ID: <1013404005.3767.18.camel@troglodyte>

So, I was looking at doing /whois for words.ircservice, and found that
lots of accessors weren't available, and there may be a bunch of
questions as to whether they should be.

One central question is "Do queries about a participant get answered by
the server, or by the participant's client?"  Having the server answer
the questions is faster and cuts down on traffic, particularly if it's a
question that everyone is frequently going to be asking about everyone
else.  But letting the client provide the answers gives the client more
freedom to protect their privacy by refusing to answer, or lying, etc. 
("No...  she's not home.  Really.  You just missed her.  No, that's not
her voice in the background, that's just the TV.")

More specific points:

There's no way for a Words client to determine the online status of
another Participant without adding that person to their contact list. 
Should there be?  Almost definately.  Unless for some reason you *want*
them to have to go through the hurdle of getting you added to their
contact list.

More user information.  Should a Words client be able to look up another
Participant and maybe find out what their Identity is, and maybe get a
few bits of meta-data out of that?  Anything from a single IRCNAME-style
string to a contact-manager VCard.

Server descriptions.  The best I've seen is something like
self.service.serviceName, which in practice always yields
"twisted.words".  How can we get something more descriptive, like "The
Official Words Service Of The 2002 Olympics" or
"pb://192.168.0.2/twisted.words/"?

When we get inter-server connections going, do we want to disclose which
server a participant initially signed on to?  Do we want to disclose the
internet address of the participant's client?

Away messages and idle times.  Words doesn't have these.  Should it?

That's all for now,

 - Kevin, 
   (who is still NOT wasting coding time on IRC servers.)

-- 
The moon is new, 1.9% illuminated, 28.2 days old.




From carmstro at twistedmatrix.com  Mon Feb 11 02:14:07 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 02:14:07 -0500
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013404005.3767.18.camel@troglodyte>
References: <1013404005.3767.18.camel@troglodyte>
Message-ID: <1013411649.3645.41.camel@radii>

Some quick notes. They're really ideas and opinions, even though it
sounds like I'm telling you what to do. :D

On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> One central question is "Do queries about a participant get answered by
> the server, or by the participant's client?"

Let the server handle user-status queries, but let the client tell the
server how to respond to them.

> More specific points:
> 
> There's no way for a Words client to determine the online status of
> another Participant without adding that person to their contact list. 
> Should there be?  Almost definately.  Unless for some reason you *want*
> them to have to go through the hurdle of getting you added to their
> contact list.

Let the user-who-is-being-queried specify how they want this to be
answered.

> More user information.  Should a Words client be able to look up another
> Participant and maybe find out what their Identity is, and maybe get a
> few bits of meta-data out of that?  Anything from a single IRCNAME-style
> string to a contact-manager VCard.

Again, let the client specify.

OK, I'm noticing a pattern here. This "capabilities" issue has been
popping up a *lot* recently, so maybe some sort of generalized
"capability system" might crop up out of this (ie, a way to grant or
deny capabilities between perspectives (or identities?)). something to
think about.

> Server descriptions.  The best I've seen is something like
> self.service.serviceName, which in practice always yields
> "twisted.words".  How can we get something more descriptive, like "The
> Official Words Service Of The 2002 Olympics" or
> "pb://192.168.0.2/twisted.words/"?

I'm not sure where you're going with this point, but I get an odd
pleasure out of seeing "pb://". 

> When we get inter-server connections going, do we want to disclose which
> server a participant initially signed on to?  Do we want to disclose the
> internet address of the participant's client?

I *definitely* don't want to allow clients to get IPs of other clients
without explicit consent. After living on dalnet for a few years, where
kiddies DDoS you for looking at them the wrong way, I've been locked
into this opinion. And the server thing - I don't see any harm, but why
does it matter? (that is, if you can think of a reason to do it, I don't
think there's any problem with doing it)

> Away messages and idle times.  Words doesn't have these.  Should it?

Yeah.

> That's all for now,

So yeah, unless there's some reason to give access to information about
a user/server other than "because it's in /whois", then I don't really
see the point.

>  - Kevin, 
>    (who is still NOT wasting coding time on IRC servers.)

We believe you. Keep up the good work on hacking not-IRC, anyhow. :-D

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From moshez at twistedmatrix.com  Mon Feb 11 06:31:20 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Mon, 11 Feb 2002 05:31:20 -0600
Subject: [Twisted-Python] http://www.cs.wustl.edu/~schmidt/patterns-ace.html
Message-ID: <E16aEg4-0001mg-00@zaibach.twistedmatrix.com>

Do we have this in Python?




From kendall at monkeyfist.com  Mon Feb 11 14:09:14 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 13:09:14 -0600
Subject: [Twisted-Python] subclassing twisted.web?
Message-ID: <15464.5850.340517.261097@cmpu.net>

Hi,

I'm playing around with some REST ideas[1], and I want to use this
approach to build a web-forum-like[2] app for one of my busy content
sites. I want to use a standalone, Python-based http server for this
app, so I've been looking at the simple http servers in the Python
lib, Zope's Z3, Medusa, and twisted.web.

For various reasons[3], I'd like to try twisted.web first, but I have a
few qestions --

(1) Is there a 'servlet' or other programming model to use with
    twisted.web? If so, is there any example code? How can I get
    started?

    In other words, how are people building Web apps with twisted.web?

(2) I'm also playing around with the idea of 'ad hoc http servers',
    i.e., lightweight servers that do one thing and one thing well,
    which gets integrated into an existing site using something like
    Apache's mod_rewrite and mod_proxy.

    So if I wanted to build a specialized twisted.web that only did
    one thing, is there a class I can subclass or methods I can
    override? 

    In other words, I want to specialize the bit(s) of twisted.web
    which map REQUEST.URI to a local entity; and I want to do so for
    particular HTTP methods (specifically, GET, POST, DELETE) and
    return the appropriate non-implemented HTTP response for
    everything else (i.e., 404 for non-existent URIs and <whatever>
    for the other HTTP methods).

I looked at the twisted.web source briefly, but nothing leapt out at
me, alas.

Thanks,
Kendall Clark

Footnotes: 
[1]  http://internet.conveyor.com/RESTwiki/moin.cgi

[2]  Yes, I looked at twisted.forum long enough to know that I can't
     use it; this forum app has to be fairly specialized to fit into
     an existing site.

[3]  If for no other reason, Z3 doesn't seem to have been busted out
     of Zope yet (as has ZODB, yay!), and I don't have the time or
     energy to work on that just to use it cleanly. Plus, I'm looking
     for reasons to use twisted.




From carmstro at twistedmatrix.com  Mon Feb 11 14:46:39 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 14:46:39 -0500
Subject: [Twisted-Python] Documentation.. On a wiki!?
Message-ID: <1013456803.5847.3.camel@radii>

Yes, that's right.
http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/ (ok, yeah, it's a long URL. deal.)

So, the idea is to use MoinMoin for Twisted's documentation. I have the
skeleton ported as well as one or two docs (and I'm working on
transcribing the rest of the docs to fit this framework). So, this is my
official submission for "what should Twisted use for documentation?". 

Yes, I do realize that I'll probably need to make lots of customizations
for this to work well, and maybe even some tools for dealing with the
wiki without using the web. (ie, CLI tools etc).
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 14:57:10 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 14:57:10 -0500
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <15464.5850.340517.261097@cmpu.net>
References: <15464.5850.340517.261097@cmpu.net>
Message-ID: <1013457432.5848.10.camel@radii>

On Mon, 2002-02-11 at 14:09, Kendall Clark wrote:
> Hi,
> 
> I'm playing around with some REST ideas[1], and I want to use this
> approach to build a web-forum-like[2] app for one of my busy content
> sites. I want to use a standalone, Python-based http server for this
> app, so I've been looking at the simple http servers in the Python
> lib, Zope's Z3, Medusa, and twisted.web.
> 
> For various reasons[3], I'd like to try twisted.web first, but I have a
> few qestions --
> 
> (1) Is there a 'servlet' or other programming model to use with
>     twisted.web? If so, is there any example code? How can I get
>     started?

There are two levels of abstraction for web apps once you get past the
low-level stuff: Resources, and WebWidgets, which are built on
Resources. Resources are a 1:1 mapping with Requests (ie, a web request
causes a single Resource to render itself). WebWidgets are more
fine-grained - you can have multiple Widgets on a Page, etc. WebWidgets
is the recommended tool for writing most web apps, and Resources are
mainly a framework thing.

>     In other words, how are people building Web apps with twisted.web?

Widgets.

> (2) I'm also playing around with the idea of 'ad hoc http servers',
>     i.e., lightweight servers that do one thing and one thing well,
>     which gets integrated into an existing site using something like
>     Apache's mod_rewrite and mod_proxy.
> 
>     So if I wanted to build a specialized twisted.web that only did
>     one thing, is there a class I can subclass or methods I can
>     override? 

If you want, you can subclass twisted.protocols.http.HTTP directly, but
I'm not sure if this would be the best way to go for you or not. I'd
need to know more about what you're doing. twisted.web.server.Site
subclasses the base HTTP class to add some more functionality, like
"Request" objects etc, maybe take a look at that too. But like I said
before, most most apps, you probably want to use WebWidgets. If you
think that WebWidgets is too high-level and server.Site is too
low-level, take a look at Resources.

>     In other words, I want to specialize the bit(s) of twisted.web
>     which map REQUEST.URI to a local entity; and I want to do so for
>     particular HTTP methods (specifically, GET, POST, DELETE) and
>     return the appropriate non-implemented HTTP response for
>     everything else (i.e., 404 for non-existent URIs and <whatever>
>     for the other HTTP methods).

Yeah, take a look at twisted.protocols.http.HTTP and
twisted.web.server.Site

Any more questions, feel free to respond or ask me on IRC.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From bob at redivi.com  Mon Feb 11 15:40:56 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 11 Feb 2002 15:40:56 -0500
Subject: [Twisted-Python] twisted.enterprise / transactions
Message-ID: <A6138838-1F2F-11D6-9842-0003938210D6@redivi.com>

I've been looking into twisted.enterprise.. and I have a few questions

It seems that enterprise expects that you want to commit data for every 
successful query?  This certainly makes things simpler, as with 
PostgreSQL a separate backend (connection) is going to be running for 
every connection to that database, which means the thread pool would 
require some more complicated management.  There ought to be a way to 
set it up such that your callbacks can do more processing and guarantee 
that it happens in the same thread, so you get the same connection, and 
don't have to commit every time.  Committing after every query kinda 
defeats the purpose of having transactions at all, unless you do 
everything in user defined functions (stored procedures) that use 
transactions themselves.

Similarly, what's the point of rolling back on error if you can't use 
transactions anyways?  If it errored, it didn't do anything anyways.

One more thing, do you need to do anything with threadable before using 
enterprise?

-bob




From twisted at itamarst.org  Mon Feb 11 12:21:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 17:21:20 +0000
Subject: [Twisted-Python] http://www.cs.wustl.edu/~schmidt/patterns-ace.html
References: <E16aEg4-0001mg-00@zaibach.twistedmatrix.com>
Message-ID: <3C67FD90.5020800@itamarst.org>

Moshe Zadka wrote:

> Do we have this in Python?

I wrote an email a while back explaining how some of these patterns are 
used in Twisted - check out the archives.




From twisted at itamarst.org  Mon Feb 11 12:28:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 17:28:08 +0000
Subject: [Twisted-Python] twisted.enterprise / transactions
References: <A6138838-1F2F-11D6-9842-0003938210D6@redivi.com>
Message-ID: <3C67FF28.6080503@itamarst.org>

Bob Ippolito wrote:

> It seems that enterprise expects that you want to commit data for every 
> successful query?  This certainly makes things simpler, as with 
> PostgreSQL a separate backend (connection) is going to be running for 
> every connection to that database, which means the thread pool would 
> require some more complicated management.  There ought to be a way to 
> set it up such that your callbacks can do more processing and guarantee 
> that it happens in the same thread, so you get the same connection, and 
> don't have to commit every time.  Committing after every query kinda 
> defeats the purpose of having transactions at all, unless you do 
> everything in user defined functions (stored procedures) that use 
> transactions themselves.


There is support for doing so.


Specifically, adabpi.ConnectionPool.interaction() lets you pass a 
callable object  (a function or method). The method you pass will be 
called with an instance of adabpi.Transaction, upon which you can run a 
series of SQL commands, after which the changes will be commited 
automatically (or rollbacked if there's an exception thrown.)

So, write a function that accepts one argument, an instance of 
adbapi.Transaction, and does a series of SQL commands on this instance. 
Then, pass this function to your connectionpoool's interaction() method.


> One more thing, do you need to do anything with threadable before using 
> enterprise?

Nope, it will automatically do that for you, on the assumption 
enterprise.adbapi is imported before your program starts, i.e. before 
you call your Application's run() method (or t.i.main.run()).




From acapnotic at twistedmatrix.com  Mon Feb 11 18:43:59 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 15:43:59 -0800
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013411649.3645.41.camel@radii>
References: <1013404005.3767.18.camel@troglodyte> 
	<1013411649.3645.41.camel@radii>
Message-ID: <1013471039.1018.28.camel@troglodyte>

On Sun, 2002-02-10 at 23:14, Christopher Armstrong wrote:
> On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> > One central question is "Do queries about a participant get answered by
> > the server, or by the participant's client?"
> 
> Let the server handle user-status queries, but let the client tell the
> server how to respond to them.

Does that provide enough flexibility?  Your possible configurations
would be limited by the things the server can think of.  That means you
probably can't program a configuration like "If it's during working
hours and I don't have anything scheduled on my appointment calander and
I don't have a personal chat session with Cindy open and I'm not
listening to my deth metal playlist, then let Ross see my status as
'available'."

> > There's no way for a Words client to determine the online status of
> > another Participant without adding that person to their contact list. 
>
> Let the user-who-is-being-queried specify how they want this to be
> answered.
>
> > More user information.  Should a Words client be able to look up another
> > Participant and maybe find out what their Identity is [...]
>
> Again, let the client specify.

Ok, that at least means "Yes, we need to add this to Participant's
remote interface" for each of those features.

> OK, I'm noticing a pattern here. This "capabilities" issue has been
> popping up a *lot* recently, so maybe some sort of generalized
> "capability system" might crop up out of this (ie, a way to grant or
> deny capabilities between perspectives (or identities?)). something to
> think about.
> 
> > Server descriptions.  The best I've seen is something like
> > self.service.serviceName, which in practice always yields
> > "twisted.words".  
> 
> I'm not sure where you're going with this point,

I just want to stop seeing "welcome to twisted.quux" on whatever service
I sign on to, and instead see something that identifies whose service
I'm connected using.

> I *definitely* don't want to allow clients to get IPs of other clients
> without explicit consent. After living on dalnet for a few years, where
> kiddies DDoS you for looking at them the wrong way, I've been locked
> into this opinion.

You're right about client IPs, I think.  There are only two reasons
those are useful on IRC.  1) to help identify the user, which you have a
hard time doing due to IRC's non-existant authentication 2) DoS
attacks.  Since we'll actually have authentication, reason #1 goes away.

> And the server thing - I don't see any harm, but why
> does it matter?

I can think of two reasons for publishing the server address.  One is
for advertising, you might be thinking "Gee, my server sucks.  What are
other people using?"  The other might be to help track down problems. 
"That server is administered really poorly.  Lets add it to our
blacklist."

> > Away messages and idle times.  Words doesn't have these.  Should it?
> 
> Yeah.




From glyph at twistedmatrix.com  Mon Feb 11 19:51:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 11 Feb 2002 18:51:51 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted ChangeLog,1.13,1.14
In-Reply-To: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com>
Message-ID: <1013475111.1440.3.camel@zelda>

For those of you who do not subscribe, this is a message in response to
a CVS commit.  If you're interested in getting CVS commit messages,
email me privately.

On Mon, 2002-02-11 at 16:02, Chris Armstrong wrote:
> Update of /cvs/Twisted
> In directory zaibach:/tmp/cvs-serv21198
> 
> Modified Files:
> 	ChangeLog 
> Log Message:
> updated ChangeLog to reflect stuff on twisted-commits.

IMHO this is far too fine-grained.  Especially something like:

> +       * twisted/eco/eco.py: Reverted evaluator state back to functional-ness
> +       :) And added functions (anonymous and global), and broke various
> +       interfaces

Not to mention the fact that the evaluator is hardly functional, even
though it uses functions :)

In general, NOTHING that gets changed in CVS and then gets changed
*back* before the release ought to be documented in ChangeLog.  This is
confusing enough as is.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020211/d57bb08d/attachment.pgp 

From andrew at ritsuko.xware.cx  Mon Feb 11 19:40:57 2002
From: andrew at ritsuko.xware.cx (Andrew Bennetts)
Date: Tue, 12 Feb 2002 11:40:57 +1100
Subject: [Twisted-Python] Documentation.. On a wiki!?
In-Reply-To: <1013456803.5847.3.camel@radii>
References: <1013456803.5847.3.camel@radii>
Message-ID: <20020212004057.GA19498@ritsuko.xware.cx>

On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> So, the idea is to use MoinMoin for Twisted's documentation. I have the
> skeleton ported as well as one or two docs (and I'm working on
> transcribing the rest of the docs to fit this framework). So, this is my
> official submission for "what should Twisted use for documentation?". 

Interesting idea.  It's probably the most convenient format for quickly
writing nicely structured docs, and it is structured enough that you could
probably do a sane conversion to something else later, if desired.  In
short, I like it.

Another advantage is you could probably easily link to Teud docs of the
Twisted API.

I've already privately mailed Glyph expressing my interest in helping out
with the documentation; after I get home from work I'll try to remember to
add my twisted.enterprise tutorial to your Wiki.

-Andrew.




From carmstro at twistedmatrix.com  Mon Feb 11 20:55:03 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 20:55:03 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted
	ChangeLog,1.13,1.14
In-Reply-To: <1013475111.1440.3.camel@zelda>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com> 
	<1013475111.1440.3.camel@zelda>
Message-ID: <1013478904.6732.1.camel@radii>

Well, the main reason for that entry was Functions, because that was a
pretty large milestone (at least I was proud of it. :)). I just put in
the other stuff because I happened to do it at the same time.

On Mon, 2002-02-11 at 19:51, Glyph Lefkowitz wrote:
> For those of you who do not subscribe, this is a message in response to
> a CVS commit.  If you're interested in getting CVS commit messages,
> email me privately.
> 
> On Mon, 2002-02-11 at 16:02, Chris Armstrong wrote:
> > Update of /cvs/Twisted
> > In directory zaibach:/tmp/cvs-serv21198
> > 
> > Modified Files:
> > 	ChangeLog 
> > Log Message:
> > updated ChangeLog to reflect stuff on twisted-commits.
> 
> IMHO this is far too fine-grained.  Especially something like:
> 
> > +       * twisted/eco/eco.py: Reverted evaluator state back to functional-ness
> > +       :) And added functions (anonymous and global), and broke various
> > +       interfaces
> 
> Not to mention the fact that the evaluator is hardly functional, even
> though it uses functions :)
> 
> In general, NOTHING that gets changed in CVS and then gets changed
> *back* before the release ought to be documented in ChangeLog.  This is
> confusing enough as is.
> 
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 20:56:32 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 20:56:32 -0500
Subject: [Twisted-Python] Documentation.. On a wiki!?
In-Reply-To: <20020212004057.GA19498@ritsuko.xware.cx>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>
Message-ID: <1013478994.6724.3.camel@radii>

On Mon, 2002-02-11 at 19:40, Andrew Bennetts wrote:

> I've already privately mailed Glyph expressing my interest in helping out
> with the documentation; after I get home from work I'll try to remember to
> add my twisted.enterprise tutorial to your Wiki.
> 
> -Andrew.

Excellent. I was actually planning on doing it myself, so now I can get
on to other things. Thanks for helping out!

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 21:07:48 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 21:07:48 -0500
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013471039.1018.28.camel@troglodyte>
References: <1013404005.3767.18.camel@troglodyte> 
	<1013411649.3645.41.camel@radii>  <1013471039.1018.28.camel@troglodyte>
Message-ID: <1013479672.6724.12.camel@radii>

On Mon, 2002-02-11 at 18:43, Kevin Turner wrote:
> On Sun, 2002-02-10 at 23:14, Christopher Armstrong wrote:
> > On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> > > One central question is "Do queries about a participant get answered by
> > > the server, or by the participant's client?"
> > 
> > Let the server handle user-status queries, but let the client tell the
> > server how to respond to them.
> 
> Does that provide enough flexibility?  Your possible configurations
> would be limited by the things the server can think of.  That means you
> probably can't program a configuration like "If it's during working
> hours and I don't have anything scheduled on my appointment calander and
> I don't have a personal chat session with Cindy open and I'm not
> listening to my deth metal playlist, then let Ross see my status as
> 'available'."

Interesting. Maybe we could have an option to say "let the client
respond to this query", but maybe that would just be a bunch of added
complexity. *shrug*.

[snip...]

> > > Server descriptions.  The best I've seen is something like
> > > self.service.serviceName, which in practice always yields
> > > "twisted.words".  
> > 
> > I'm not sure where you're going with this point,
> 
> I just want to stop seeing "welcome to twisted.quux" on whatever service
> I sign on to, and instead see something that identifies whose service
> I'm connected using.

That probably shouldn't be the service name, but some sort of MOTD
feature.

> > I *definitely* don't want to allow clients to get IPs of other clients
> > without explicit consent. After living on dalnet for a few years, where
> > kiddies DDoS you for looking at them the wrong way, I've been locked
> > into this opinion.
> 
> You're right about client IPs, I think.  There are only two reasons
> those are useful on IRC.  1) to help identify the user, which you have a
> hard time doing due to IRC's non-existant authentication 2) DoS
> attacks.  Since we'll actually have authentication, reason #1 goes away.

Not allowing viewable IPs allows DoS attacks? Hmm. I guess when it comes
to ops trying to ban a join-flood, or something. Of course, you can
always have programmed DoS-stoppers, as well as "wordscops" who can see
the IPs of participants. Or am I way off?

> > And the server thing - I don't see any harm, but why
> > does it matter?
> 
> I can think of two reasons for publishing the server address.  One is
> for advertising, you might be thinking "Gee, my server sucks.  What are
> other people using?"  The other might be to help track down problems. 
> "That server is administered really poorly.  Lets add it to our
> blacklist."

OK. 

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Mon Feb 11 21:26:33 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 20:26:33 -0600
Subject: [Twisted-Python] a proposed extension for pb
Message-ID: <HOEEKPCOKELHCNIJNMAGIEMHCEAA.sean@twistedmatrix.com>

"Publishable" extension to Twisted PB

Publishable is a proposed new type of distributed object for twisted.spread.
It is similar to the Cacheable class (which caches object state information
for the duration of a session), but it adds the capability to cache object
state information on remote nodes across multiple sessions.

Publishable objects would use the local file system on remote nodes to cache
object state information. This "published" state data would include
identifying information that allows the cached objects to re-establish their
relationships with their server-side counterparts the next time that the
object is activated during a session with the same server.

The published data for an object would include:
	- the server that it came from
	- the service that the object was part of
	- the perspective/identity that it was accessed through
	- the identity of the object
	- the date and time of the state snapshot

Some of this data would be shared for multiple objects instances from the
same publishing location and could possibly be embedded in the file names or
directory structure of the local cache.

The timestamp of the snapshot of the object state could be used to allow
auto-refreshing of state of published objects. When a published object is
re-activated, if it's timestamp is before the timestamp of it's server-side
counterpart, the it could be updated with the new state of the server-side
object. (this should happen transparently _before_ the object instance is
available to client-side user code)

Published objects on the client would only be re-activated by the server
"sending" a new instance of the same to the client. Of course, it doesnt
actually send the entire new state for the object, just the identifying
information and timestamp - this initiates a handshake sequence that results
in the full updating and re-activation of the object.


This functionality was originally designed for dealing with persistent world
data for online games - the world state data including houses, terrain,
items on the ground, etc. However, it appears to have much broader
applicability and could be used for fairly generic replication and
clustering of application data.


Issues:

* "stateless" object references could be a generic solution to the server
identification problem. some kind of pb:// URL to identify publishable
objects... (and/or all types of Twisted objects)

* Re-caching or re-publishing of objects through hierarchies of Twisted
servers...

* the overhead of the handshaking process that re-activates published
objects could introduce significant latency. care should be taken to minize
the amount of back-and-forth between client and server



----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From glyph at twistedmatrix.com  Mon Feb 11 21:28:36 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 11 Feb 2002 20:28:36 -0600
Subject: Documentation Standard (was: Re: [Twisted-Python] Documentation..
	On a wiki!?)
In-Reply-To: <20020212004057.GA19498@ritsuko.xware.cx>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>
Message-ID: <1013480917.1440.97.camel@zelda>

There is a place for wiki, but I don't think it's the same as a place
for docs.

However, since I don't think I've said it on the mailing list yet, I'd
like to state that my official position on the issue of documentation
standards is that there is no documentation standard until somebody
decides to make one.

Personally I think I'm going to work in LaTeX or maybe DocBook when I've
got some time.  However, if you want to submit some docs, please submit
them in any format that you feel like: content is more important than
format right now.

Whoever submits the most quality docs the fastest (and this is
essentially an arbitrary decision on my part, I know) will become the
documentation maintainer and I will use whatever format they used for a
standard.

That said, I'd like to recommend against wiki for the following reasons:

1: it's not set in stone.  Users will come to it and it may be different
than what they expected.

2: It tends to collect editorial annotations, and there's no structured
way to remove them easily.  This will be confusing.

3: Partially because of 1: and 2:, Wikis are good for tightly knit
communities, but what we need is external, end-user documentation, that
will be read by people with no knowledge of how the system works

Wiki might be a great way to get the documentation process started, and
a good place to publish drafts, but we already have IRC and cryptic
references to the mailing list -- we need something that's a more
gradual, high-quality introduction.

On Mon, 2002-02-11 at 18:40, Andrew Bennetts wrote:
> On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> > So, the idea is to use MoinMoin for Twisted's documentation. I have the
> > skeleton ported as well as one or two docs (and I'm working on
> > transcribing the rest of the docs to fit this framework). So, this is my
> > official submission for "what should Twisted use for documentation?". 
> 
> Interesting idea.  It's probably the most convenient format for quickly
> writing nicely structured docs, and it is structured enough that you could
> probably do a sane conversion to something else later, if desired.  In
> short, I like it.


-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020211/a1cd152d/attachment.pgp 

From sean at twistedmatrix.com  Mon Feb 11 21:34:01 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 20:34:01 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <15464.5850.340517.261097@cmpu.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>

if you are building a forum-type application, I'd be interested in talking
about why you think twisted.forum is inappropriate. it was intended that it
could be used within an existing site, but that extensibility may not be
apparent (and i know, it has no documentation).

Maybe we could explore ways to make it useful to you - and more useful to
other people moving forward.

The database interaction layer is extremely separate from the presentation
layer - it was intended that different presentation formats could access the
same forum database with the web interface being just the first.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kendall
Clark
Sent: Monday, February 11, 2002 1:09 PM
To: twisted-python
Subject: [Twisted-Python] subclassing twisted.web?


Hi,

I'm playing around with some REST ideas[1], and I want to use this
approach to build a web-forum-like[2] app for one of my busy content
sites. I want to use a standalone, Python-based http server for this
app, so I've been looking at the simple http servers in the Python
lib, Zope's Z3, Medusa, and twisted.web.

For various reasons[3], I'd like to try twisted.web first, but I have a
few qestions --

(1) Is there a 'servlet' or other programming model to use with
    twisted.web? If so, is there any example code? How can I get
    started?

    In other words, how are people building Web apps with twisted.web?

(2) I'm also playing around with the idea of 'ad hoc http servers',
    i.e., lightweight servers that do one thing and one thing well,
    which gets integrated into an existing site using something like
    Apache's mod_rewrite and mod_proxy.

    So if I wanted to build a specialized twisted.web that only did
    one thing, is there a class I can subclass or methods I can
    override?

    In other words, I want to specialize the bit(s) of twisted.web
    which map REQUEST.URI to a local entity; and I want to do so for
    particular HTTP methods (specifically, GET, POST, DELETE) and
    return the appropriate non-implemented HTTP response for
    everything else (i.e., 404 for non-existent URIs and <whatever>
    for the other HTTP methods).

I looked at the twisted.web source briefly, but nothing leapt out at
me, alas.

Thanks,
Kendall Clark

Footnotes:
[1]  http://internet.conveyor.com/RESTwiki/moin.cgi

[2]  Yes, I looked at twisted.forum long enough to know that I can't
     use it; this forum app has to be fairly specialized to fit into
     an existing site.

[3]  If for no other reason, Z3 doesn't seem to have been busted out
     of Zope yet (as has ZODB, yay!), and I don't have the time or
     energy to work on that just to use it cleanly. Plus, I'm looking
     for reasons to use twisted.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bob at redivi.com  Mon Feb 11 21:43:16 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 11 Feb 2002 21:43:16 -0500
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>
Message-ID: <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>

One thing of note is that if you install 0.15.0 via 'python setup.py 
install', it doesn't install either forum or metrics.

Maybe he just didn't see it?

-bob

On Monday, February 11, 2002, at 09:34 PM, Sean Riley wrote:

> if you are building a forum-type application, I'd be interested in 
> talking
> about why you think twisted.forum is inappropriate. it was intended 
> that it
> could be used within an existing site, but that extensibility may not be
> apparent (and i know, it has no documentation).
>
> Maybe we could explore ways to make it useful to you - and more useful 
> to
> other people moving forward.
>
> The database interaction layer is extremely separate from the 
> presentation
> layer - it was intended that different presentation formats could 
> access the
> same forum database with the web interface being just the first.
>
>
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kendall
> Clark
> Sent: Monday, February 11, 2002 1:09 PM
> To: twisted-python
> Subject: [Twisted-Python] subclassing twisted.web?
>
>
> Hi,
>
> I'm playing around with some REST ideas[1], and I want to use this
> approach to build a web-forum-like[2] app for one of my busy content
> sites. I want to use a standalone, Python-based http server for this
> app, so I've been looking at the simple http servers in the Python
> lib, Zope's Z3, Medusa, and twisted.web.
>
> For various reasons[3], I'd like to try twisted.web first, but I have a
> few qestions --
>
> (1) Is there a 'servlet' or other programming model to use with
>     twisted.web? If so, is there any example code? How can I get
>     started?
>
>     In other words, how are people building Web apps with twisted.web?
>
> (2) I'm also playing around with the idea of 'ad hoc http servers',
>     i.e., lightweight servers that do one thing and one thing well,
>     which gets integrated into an existing site using something like
>     Apache's mod_rewrite and mod_proxy.
>
>     So if I wanted to build a specialized twisted.web that only did
>     one thing, is there a class I can subclass or methods I can
>     override?
>
>     In other words, I want to specialize the bit(s) of twisted.web
>     which map REQUEST.URI to a local entity; and I want to do so for
>     particular HTTP methods (specifically, GET, POST, DELETE) and
>     return the appropriate non-implemented HTTP response for
>     everything else (i.e., 404 for non-existent URIs and <whatever>
>     for the other HTTP methods).
>
> I looked at the twisted.web source briefly, but nothing leapt out at
> me, alas.
>
> Thanks,
> Kendall Clark
>
> Footnotes:
> [1]  http://internet.conveyor.com/RESTwiki/moin.cgi
>
> [2]  Yes, I looked at twisted.forum long enough to know that I can't
>      use it; this forum app has to be fairly specialized to fit into
>      an existing site.
>
> [3]  If for no other reason, Z3 doesn't seem to have been busted out
>      of Zope yet (as has ZODB, yay!), and I don't have the time or
>      energy to work on that just to use it cleanly. Plus, I'm looking
>      for reasons to use twisted.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From kendall at monkeyfist.com  Mon Feb 11 22:00:30 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 21:00:30 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>; from Sean Riley on Mon, Feb 11, 2002 at 08:34:01PM -0600
References: <15464.5850.340517.261097@cmpu.net> <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>
Message-ID: <20020211210030.A7848@monkeyfist.com>

On Mon, Feb 11, 2002 at 08:34:01PM -0600, Sean Riley muttered something about:
> if you are building a forum-type application, I'd be interested in talking
> about why you think twisted.forum is inappropriate. it was intended that it
> could be used within an existing site, but that extensibility may not be
> apparent (and i know, it has no documentation).

Don't take what I said as a criticism; it's not. It won't work for what I
need but that's a function of my idiosyncratic needs, not the quality of
twisted.forum.

Further, as I said, I'm *also* experimenting with the REST (and ad hoc httpd
server) ideas, so that I want to build the app out of GET, POST, DELETE, and
HEAD HTTP methods. (In other words, I asked a pointed question because I
know what I want to do, but I don't know how to do it with Twisted.)

But I may steal some ideas from the way you deal with data storage.

Thanks.

Kendall Clark



From kendall at monkeyfist.com  Mon Feb 11 22:02:12 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 21:02:12 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>; from Bob Ippolito on Mon, Feb 11, 2002 at 09:43:16PM -0500
References: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com> <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>
Message-ID: <20020211210212.B7848@monkeyfist.com>

On Mon, Feb 11, 2002 at 09:43:16PM -0500, Bob Ippolito muttered something about:
> One thing of note is that if you install 0.15.0 via 'python setup.py 
> install', it doesn't install either forum or metrics.
> 
> Maybe he just didn't see it?

No, I did. As I said:

> > [2]  Yes, I looked at twisted.forum long enough to know that I can't
> >      use it; this forum app has to be fairly specialized to fit into
> >      an existing site.

Best,
Kendall  Clark



From sean at twistedmatrix.com  Mon Feb 11 22:13:24 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 21:13:24 -0600
Subject: [Twisted-Python] twisted.enterprise / transactions
In-Reply-To: <3C67FF28.6080503@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGCEMJCEAA.sean@twistedmatrix.com>

right. take a look at twisted.forum.manager.py postMessage() and
_messagePoster() for an example.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Monday, February 11, 2002 11:28 AM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted.enterprise / transactions


Bob Ippolito wrote:

> It seems that enterprise expects that you want to commit data for every
> successful query?  This certainly makes things simpler, as with
> PostgreSQL a separate backend (connection) is going to be running for
> every connection to that database, which means the thread pool would
> require some more complicated management.  There ought to be a way to
> set it up such that your callbacks can do more processing and guarantee
> that it happens in the same thread, so you get the same connection, and
> don't have to commit every time.  Committing after every query kinda
> defeats the purpose of having transactions at all, unless you do
> everything in user defined functions (stored procedures) that use
> transactions themselves.


There is support for doing so.


Specifically, adabpi.ConnectionPool.interaction() lets you pass a
callable object  (a function or method). The method you pass will be
called with an instance of adabpi.Transaction, upon which you can run a
series of SQL commands, after which the changes will be commited
automatically (or rollbacked if there's an exception thrown.)

So, write a function that accepts one argument, an instance of
adbapi.Transaction, and does a series of SQL commands on this instance.
Then, pass this function to your connectionpoool's interaction() method.


> One more thing, do you need to do anything with threadable before using
> enterprise?

Nope, it will automatically do that for you, on the assumption
enterprise.adbapi is imported before your program starts, i.e. before
you call your Application's run() method (or t.i.main.run()).


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From carmstro at twistedmatrix.com  Mon Feb 11 22:16:08 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 22:16:08 -0500
Subject: [Twisted-Python] Re: Documentation Standard (was: Re: [Twisted-Python]
 Documentation.. On a wiki!?)
In-Reply-To: <1013480917.1440.97.camel@zelda>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>  <1013480917.1440.97.camel@zelda>
Message-ID: <1013483770.6732.30.camel@radii>

On Mon, 2002-02-11 at 21:28, Glyph Lefkowitz wrote:
> That said, I'd like to recommend against wiki for the following reasons:
> 
> 1: it's not set in stone.  Users will come to it and it may be different
> than what they expected.

I didn't mean for the wiki to be the place for users to go to view the
documentation, only a place for collaborative development. See my
response to point #3 for more info on this.

Also, note that it is possible now to convert Moin to formats such as
DocBook, and once you get to that point, you can basically get to any
format (LaTeX included).

> 2: It tends to collect editorial annotations, and there's no structured
> way to remove them easily.  This will be confusing.

Nafai brought up this point, and I told him it was actually good that
they were there since it would be an incentive to fix stuff like "XXX:
This isn't clear!" before a release. But yeah, it's just not practical -
so if you really think it's ncessary, I'll write a tool to automatically
rip out editorial notes. It shouldn't be hard at all, and I don't think
it would be hard to get people to write editorial notes according to
some convention.

> 3: Partially because of 1: and 2:, Wikis are good for tightly knit
> communities, but what we need is external, end-user documentation, that
> will be read by people with no knowledge of how the system works

I of course would not have the wiki be the actual medium for
distribution/viewing by regular people. It will be released per-version
in the TwistedDocs package, and the API docs will only be a section
inside your main skeleton.

I'm also thinking of adding a user/password protection to the wiki so
only developers (or people we designate as documenters) can work on it.

> Wiki might be a great way to get the documentation process started, and
> a good place to publish drafts, but we already have IRC and cryptic
> references to the mailing list -- we need something that's a more
> gradual, high-quality introduction.

I don't see how wiki doesn't meet this.

And of course, as I probably don't need to mention, I think wiki is
great for this, because it makes documentation easy to work with through
a unified interface...

I'm also planning on putting the data on CVS so people can hack it with
their regular editors. I'll have to work something out where the wiki's
CVS repository will automatically update itself whenever someone commits
through CVS, but it shouldn't be a problem.

So, I'm going to attempt to submit a lot of documentation, to force you
to use the wiki! Then I will be the uber-documentation Twisted guy, and
you will all bow to me!! In the words of Moshe: "Muhahahahahaha!!!"

:-D

> On Mon, 2002-02-11 at 18:40, Andrew Bennetts wrote:
> > On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> > > So, the idea is to use MoinMoin for Twisted's documentation. I have the
> > > skeleton ported as well as one or two docs (and I'm working on
> > > transcribing the rest of the docs to fit this framework). So, this is my
> > > official submission for "what should Twisted use for documentation?". 
> > 
> > Interesting idea.  It's probably the most convenient format for quickly
> > writing nicely structured docs, and it is structured enough that you could
> > probably do a sane conversion to something else later, if desired.  In
> > short, I like it.
> 
> 
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From abo at minkirri.apana.org.au  Mon Feb 11 22:32:33 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 12 Feb 2002 14:32:33 +1100
Subject: Documentation Standard (was: Re: [Twisted-Python] Documentation.. On a wiki!?)
In-Reply-To: <1013480917.1440.97.camel@zelda>
References: <1013456803.5847.3.camel@radii> <20020212004057.GA19498@ritsuko.xware.cx> <1013480917.1440.97.camel@zelda>
Message-ID: <20020212033233.GD20963@minkirri.apana.org.au>

On Mon, Feb 11, 2002 at 08:28:36PM -0600, Glyph Lefkowitz wrote:
> There is a place for wiki, but I don't think it's the same as a place
> for docs.
[...]
> 1: it's not set in stone.  Users will come to it and it may be different
> than what they expected.

Hah! And twisted itself is? :-)

I would think users would come to it, and if it doesn't explain something
they had a problem with, they will add something that does. This is the
reason _not_ to allow only developer contributions.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From jason at crash.org  Mon Feb 11 22:37:56 2002
From: jason at crash.org (Jason Asbahr)
Date: Mon, 11 Feb 2002 21:37:56 -0600
Subject: [Twisted-Python] a proposed extension for pb
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIEMHCEAA.sean@twistedmatrix.com>
Message-ID: <E725D7CB-1F69-11D6-A9F0-000393753460@crash.org>

Great idea, Sean.  Also, some kind of object containment hierarchy could 
be used to offset the handshaking time.  For example, the server would 
compute a checksum of the timestamps of the objects in a given 
hierarchy, transmits the sum, and only if that sum differs from the one 
the client generates for the equivalent hierarchy does the client 
request subsequent sub-hierarchical checking,

Jason





From sean at twistedmatrix.com  Mon Feb 11 22:40:55 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 21:40:55 -0600
Subject: [Twisted-Python] perspective introspection
Message-ID: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>

other remote object APIs such as COM and CORBA have ways of asking a remote
object for it's published interface. SOAP also has this with WSDL
(http://www.w3.org/TR/wsdl).

implementing a way for pb perspectives to tell consumers about their
interface seemed like it would be a trivial undertaking - and it was:

(for twisted.spread.pb):

from twisted.python import reflect

def perspective_getInterface(self):
        """Retrieve the set of perspective methods for this perspective.
        This allows client to retrieve the "published" external interface
        for this perspective/service.

        the result is returned in a dictionary with the keys being the names
        of the methods for the client to call, and the values a tuple of
        the names of the arguments to each method.
        """
        dict = {}
        reflect.addMethodNamesToDict(self.__class__, dict, "perspective_")
        del dict["getInterface"] # remove the perspective_interface method
(THIS method)

        # populate args
        for k in dict.keys():
            func = self.__class__.__dict__["perspective_%s"%k]
            l = func.func_code.co_varnames[1:]
            dict[k] = l
        return dict

it would probably even be possible to wrap this up into WSDL if we wanted
to, for further "enterprise" compatibility...

it isn't possible for clients to do this introspection on their own as they
only have a RemoteReference to the perspective object. does this create any
security holes? is a bad idea for any other reason?


----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From twisted at itamarst.org  Mon Feb 11 17:41:35 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 22:41:35 +0000
Subject: [Twisted-Python] perspective introspection
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <3C68489F.1070308@itamarst.org>

Sean Riley wrote:


> it isn't possible for clients to do this introspection on their own as they
> only have a RemoteReference to the perspective object. does this create any
> security holes? is a bad idea for any other reason?

Well, I want a general idea of interfaces with defined types for 
published objects ("interface Foo := I have a method foo that returns an 
integer and accepts two args, an integer and an object implementing 
interface Bar"). Basically IDL, when you get down to it :)

Introspection would be part of this, as would auto-generation of docs.




From carmstro at twistedmatrix.com  Mon Feb 11 22:51:41 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 22:51:41 -0500
Subject: [Twisted-Python] perspective introspection
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <1013485903.6732.33.camel@radii>

Well, I asked glyph about this earlier, and he said that it's just as
good to have versioned objects instead of publishing interfaces. I'm not
sure what cases versioned objects wouldn't be sufficient enough, so I'm
not sure which is the best route to go.

On Mon, 2002-02-11 at 22:40, Sean Riley wrote:
> other remote object APIs such as COM and CORBA have ways of asking a remote
> object for it's published interface. SOAP also has this with WSDL
> (http://www.w3.org/TR/wsdl).
> 
> implementing a way for pb perspectives to tell consumers about their
> interface seemed like it would be a trivial undertaking - and it was:
> 
> (for twisted.spread.pb):
> 
> from twisted.python import reflect
> 
> def perspective_getInterface(self):
>         """Retrieve the set of perspective methods for this perspective.
>         This allows client to retrieve the "published" external interface
>         for this perspective/service.
> 
>         the result is returned in a dictionary with the keys being the names
>         of the methods for the client to call, and the values a tuple of
>         the names of the arguments to each method.
>         """
>         dict = {}
>         reflect.addMethodNamesToDict(self.__class__, dict, "perspective_")
>         del dict["getInterface"] # remove the perspective_interface method
> (THIS method)
> 
>         # populate args
>         for k in dict.keys():
>             func = self.__class__.__dict__["perspective_%s"%k]
>             l = func.func_code.co_varnames[1:]
>             dict[k] = l
>         return dict
> 
> it would probably even be possible to wrap this up into WSDL if we wanted
> to, for further "enterprise" compatibility...
> 
> it isn't possible for clients to do this introspection on their own as they
> only have a RemoteReference to the perspective object. does this create any
> security holes? is a bad idea for any other reason?
> 
> 
> ----
> "If it's not running programs or fusing atoms, it's just bending space.",
> Ken Macleod
> "That's it, I'm outta here.", Homer Simpson's Brain
> Sean Riley
> sean at ninjaneering.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Mon Feb 11 17:59:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 22:59:12 +0000
Subject: [Twisted-Python] perspective introspection
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com> <3C68489F.1070308@itamarst.org>
Message-ID: <3C684CC0.8050408@itamarst.org>

Itamar Shtull-Trauring wrote:


> 
> Well, I want a general idea of interfaces with defined types for 
> published objects ("interface Foo := I have a method foo that returns an 
> integer and accepts two args, an integer and an object implementing 
> interface Bar"). Basically IDL, when you get down to it :)

Or PEP 245 interfaces with Grouch style docstrings.




From acapnotic at twistedmatrix.com  Mon Feb 11 23:15:43 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 20:15:43 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted
	ChangeLog,1.13,1.14
In-Reply-To: <1013475111.1440.3.camel@zelda>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com> 
	<1013475111.1440.3.camel@zelda>
Message-ID: <1013487344.2219.41.camel@troglodyte>

On Mon, 2002-02-11 at 16:51, Glyph Lefkowitz wrote:
> IMHO this is far too fine-grained.  Especially something like:

I'll say it again.  If you don't want your ChangeLog file to have the
stuff the rest of the world puts in their ChangeLog files, then maybe
you're thinking of a different file.  [Where "rest of the world" is most
everything in the GIMP-based universe, the parts of the Linux kernel
which actually have a ChangeLog, glibc, quadra, etc.]  When I write in a
ChangeLog, I'm writing for other developers, and probably developers who
are working on the code NOW, not necessarily after its release.  If you
want a feature-level overview to refer to from the release announcement,
call it NEWS.  If you want a few more technical details, call it
"release notes" (relnotes).

Yes, this does overlap with CVS commit messages.  But if you're working
with a checked out copy of the code and you're off-line, you may not
have access to the CVS logs or commits-list archives. 
log-edit-insert-changelog gets run by cvs-commit-setup for a reason, and
don't be afraid to use cvs-add-change-log-entry as emacs intended.

-- 
The moon is new, 0.2% illuminated, 29.1 days old.



From acapnotic at twistedmatrix.com  Mon Feb 11 23:45:55 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 20:45:55 -0800
Subject: [Twisted-Python] perspective introspection
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <1013489156.2220.47.camel@troglodyte>

On Mon, 2002-02-11 at 19:40, Sean Riley wrote:
> implementing a way for pb perspectives to tell consumers about their
> interface seemed like it would be a trivial undertaking - and it was:

And this is essentially what python.explorer does, although for a
different purpose.  It exports an object's native interface so it can be
explored/manipulated through manhole.  If you haven't seen this yet,
fire up manhole and try something like

/browse sys.modules['__main__'].application



From twisted at itamarst.org  Mon Feb 11 19:17:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 00:17:07 +0000
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
Message-ID: <3C685F03.1000108@itamarst.org>

I'm going to read this in the morning when I'm more awake. Meanwhile 
someone else may be interested. Shane is discussing a mixed async/sync 
mode where threads can write directly to the socket.
-------------- next part --------------
An embedded message was scrubbed...
From: Shane Hathaway <shane at zope.com>
Subject: Re: [Zope3-dev] Twisted as server
Date: Tue, 12 Feb 2002 00:03:42 -0500 (EST)
Size: 7464
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020212/13582cca/attachment.eml 

From glyph at twistedmatrix.com  Tue Feb 12 11:21:42 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 12 Feb 2002 10:21:42 -0600
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
In-Reply-To: <3C685F03.1000108@itamarst.org>
References: <3C685F03.1000108@itamarst.org>
Message-ID: <1013530903.1733.213.camel@zelda>

On Mon, 2002-02-11 at 18:17, Itamar Shtull-Trauring wrote:
> I'm going to read this in the morning when I'm more awake. Meanwhile 
> someone else may be interested. Shane is discussing a mixed async/sync 
> mode where threads can write directly to the socket.

[snip massive email]

That was quite a bit of text, if I understand properly -- he was saying
that you ought to be able to do proto.transport.write =
proto.transport.socket.makefile().write, with some additional buffering
trickery for optimization?

(It's this sort of communication that makes me want to avoid words like
"handler" and "dispatcher" in Twisted wherever possible.  I feel bad
already for using "Application" and "Scheduler")

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020212/e6c49768/attachment.pgp 

From twisted at itamarst.org  Tue Feb 12 07:02:16 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 12:02:16 +0000
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
References: <3C685F03.1000108@itamarst.org> <1013530903.1733.213.camel@zelda>
Message-ID: <3C690448.1010403@itamarst.org>

Glyph Lefkowitz wrote:


> That was quite a bit of text, if I understand properly -- he was saying
> that you ought to be able to do proto.transport.write =
> proto.transport.socket.makefile().write, with some additional buffering
> trickery for optimization?

I think so, yes. Plus some architectural stuff about how they do 
multiple requests per connection (the task stuff.)

Our current transport code would in fact work with threads without any 
changes (i.e. you could do transport.write in a thread), if not for the 
fact that the event loop integration (addWriter, addReader) isn't thread 
safe.

Since in threaded mode the Selectable doesn't need to be in the event 
loop anyway, we just need a flush method for sync mode and a "switch 
to/from sync mode" method and we could have writing to transports be 
usable from threads (only one thread at a time, of course.)

Another nice thing is the Buffering stuff, which lets you have a buffer 
that is on disk as well - it would make producers less needed when 
sending large amounts of data. It would also improve performance of 
writing large amounts of data on fast connection, since without 
producers we can write-at-once.


See:
http://cvs.zope.org/Zope3/lib/python/Zope/Server/?only_with_tag=Zope-3x-branch

DualModeChannel.DualModeChannel is the sync/async switchable transport.

Also, I'm starting to feel jealous of Zope3's amount of unittests...




From twisted at itamarst.org  Tue Feb 12 07:27:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 12:27:18 +0000
Subject: [Twisted-Python] HotShot vs. Old Profiler
Message-ID: <3C690A26.5020005@itamarst.org>

So, I tried comparing old profiler with HotShot (2.2's new C based 
profiler). I ran a simple twisted web server that serves from memory.

Running with Python 2.2 I got 350 hits/second. time command says it 
takes 11 CPU seconds, and with time the hits/sec is a bit lower.

Running with old profiler: ~70 hits/second, profiler said it took 2-3 
CPU seconds to run (don't ask me why)

Running with HotShot: 290 hits/second, it said it took 15 CPU seconds 
(11 of which were in doSelect on its own).


Conclusions:
HotShot is much much much much much much much better than old profiler
We need to optimize doSelect something wicked
HotShot still has bugs (it would fail occasionally)

I have a command-line interface to hotshot at http://itamarst.org/software/




From twisted at itamarst.org  Wed Feb 13 06:50:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Feb 2002 11:50:33 +0000
Subject: [Twisted-Python] [Fwd: [Zope3-dev] Plans for z3.py]
Message-ID: <3C6A5309.2090601@itamarst.org>

An interesting idea.
-------------- next part --------------
An embedded message was scrubbed...
From: Shane Hathaway <shane at zope.com>
Subject: [Zope3-dev] Plans for z3.py
Date: Wed, 13 Feb 2002 11:31:56 -0500
Size: 3526
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20020213/898bc8c1/attachment.eml 

From moshez at twistedmatrix.com  Thu Feb 14 09:37:32 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Thu, 14 Feb 2002 08:37:32 -0600
Subject: [Twisted-Python] Integrating web.guard and web.twcgi
Message-ID: <E16bN0u-0006u9-00@zaibach.twistedmatrix.com>

OK, here's the deal. 
There's a Whole Lotta (TM) CGIs that use REMOTE_USER which the web
server is supposed to set if the user sent the apppropriate HTTP
authentication headers and the .htaccess (or whatever - in our case
the .cred database) matches. Specifically, that's how roundup
works. No, I'm not in the mood to integrate Roundup with Twisted,
thanks for asking.

So, any idea how to get web.twcgi to properly set REMOTE_USER based
on a parent's .guard? I'm drawing a blank here...
(perhaps a .guard should stamp the Request object as it is passing
it through...)




From drt at un.bewaff.net  Thu Feb 14 19:28:34 2002
From: drt at un.bewaff.net (Doobee R. Tzeck)
Date: 15 Feb 2002 01:28:34 +0100
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
Message-ID: <87it8zy4el.fsf@c0re.bewaff.net>

I'm trying to build a non interactive client app with
twisted. Let's assume it is a webcrawler. I'm not sure how to do
that. Might be like this:

Create a Loop Object which checks if the desired number of
connections are running and if not create new ones an add them as
connectors.

Or should I rip out application.run() and write my own look to
better handle the starting of new crawlers?

Any suggestion would be welcome.


To get a first experience with twisted I hacked a gopher
protocol. Nothing fancy, nothing finished but any comments will
be welcome.  
http://c0re.jp/c0de/misc/twisted-0.15.0-gopher.py

drt

-- 
teenage mutant ninja hero coders from da c0re - http://c0re.jp/
me                                  - http://koeln.ccc.de/~drt/



From twisted at itamarst.org  Thu Feb 14 17:28:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Feb 2002 22:28:33 +0000
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
References: <87it8zy4el.fsf@c0re.bewaff.net>
Message-ID: <3C6C3A11.5000307@itamarst.org>

Doobee R. Tzeck wrote:

> Create a Loop Object which checks if the desired number of
> connections are running and if not create new ones an add them as
> connectors.

This sounds like the right way to do it.




From drt at un.bewaff.net  Fri Feb 15 16:50:09 2002
From: drt at un.bewaff.net (Doobee R. Tzeck)
Date: 15 Feb 2002 22:50:09 +0100
Subject: [Twisted-Python] internet.app reports worng errors on bind()ing
Message-ID: <871yfmxvn2.fsf@c0re.bewaff.net>

internet.app assumed 'port already bound' is the only error which
can happen wen bind()ing. What's about 'premission denied' and
all the others. This patch fixes that.

drt

http://c0re.jp/c0de/misc/twisted-0.15.0-bind-error.patch

app gives a misleading errormessage when a error while binding to
a port occures. This patch logs the error which actually has happended.
 --drt at un.bewaff.net - http://c0re.jp/
diff -u -r Twisted-0.15.0/twisted/internet/app.py Twisted/twisted/internet/app.py
--- Twisted-0.15.0/twisted/internet/app.py      Wed Jan 23
    04:09:39 2002
+++ Twisted/twisted/internet/app.py     Fri Feb 15 22:35:05 2002
@@ -348,8 +348,8 @@
             for port in self.ports:
                 try:
                     port.startListening()
-                except socket.error:
-                    log.msg('port %s already bound' % port.port)
+                except socket.error, msg:
+                    log.msg('port %s: error: %s' % (port.port, msg[1]))
                     return
             for connector in self.connectors:
                 connector.startConnecting()

-- 
teenage mutant ninja hero coders from da c0re - http://c0re.jp/
me                                  - http://koeln.ccc.de/~drt/



From glyph at twistedmatrix.com  Fri Feb 15 18:44:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Feb 2002 17:44:51 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
Message-ID: <1013816691.3613.31.camel@zelda>

While auditing some code that I'd written to use PB, I noticed a class
of bug that I had previously not considered.

When writing a PB remote interface, it's easy to write some code that
looks like this:

class MyObject(Referenceable):
    def remote_IOnlyExpectCopies(self, someCopy):
        someCopy.someOperation(self.somePrivilegedData)

This is, of course, a potential security hole.  Assuming
somePrivilegedData is a basic type (and therefore serializeable), a
hostile client could send a Referenceable of their own to
IOnlyExpectCopies.

A sufficiently vigilant application author would, of course, be able to
protect against this by distrusting any arguments sent to a remote
method and performing type checks on them, but then, application authors
(including myself) are rarely "sufficiently" vigilant :-).

My proposed solution is to change the way remote methods are invoked:
instead of emulating regular Python methods, they would be accessed
through a 'callRemote' method: fairly simply, calling the remote method
'foo' on 'bar' would look like this:

    bar.callRemote("foo", baz, boz=qux)

This way, the above example of a local method call would blow up a
remote object were passed to it.

Pros of this approach:

	* it fixes this potentially common security problem
	* it makes it possible to grep for all places where a method is invoked
remotely
	* it removes some overhead (creation of the RemoteMethod instance)

Cons of this approach:

	* it's no longer possible to treat remote objects and objects that have
methods which return Deferreds identically
	* slightly more typing
	* massive refactoring required, lots of user code might break

I think the pros clearly outweigh the cons, so I'm going to start
changing things over, potentially with a backwards-compatibility release
in the interim.  If anyone has a different idea, let me know.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020215/abb4063d/attachment.pgp 

From acapnotic at twistedmatrix.com  Fri Feb 15 21:11:50 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 18:11:50 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013816691.3613.31.camel@zelda>
References: <1013816691.3613.31.camel@zelda>
Message-ID: <1013825510.2075.78.camel@troglodyte>

On Fri, 2002-02-15 at 15:44, Glyph Lefkowitz wrote:
> My proposed solution is to change the way remote methods are invoked:
> instead of emulating regular Python methods, they would be accessed
> through a 'callRemote' method

It's not "slightly more typing", it's a massive blow to the elegance and
transparency of spreadable object code.  I guess you're saying that the
transparancy has become a liability, as you can't necessarily tell if
you're invoking a local or remote object (...but I thought that was the
point?).  I'm also a little suprised because this is the first time I've
seen you vouch for any sort of "safety" mechanism to protect the
programmer from doing wayward things with eir data.

It also sounds like that this use case is inherently insecure.  You're
passing privledged information to
some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
really anything you can do about that.

-- 
The moon is waxing crescent, 10.3% illuminated, 3.1 days old.



From glyph at twistedmatrix.com  Fri Feb 15 21:39:08 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Feb 2002 20:39:08 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013825510.2075.78.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>
Message-ID: <1013827148.4188.43.camel@zelda>

On Fri, 2002-02-15 at 20:11, Kevin Turner wrote:
> On Fri, 2002-02-15 at 15:44, Glyph Lefkowitz wrote:
> > My proposed solution is to change the way remote methods are invoked:
> > instead of emulating regular Python methods, they would be accessed
> > through a 'callRemote' method
> 
> It's not "slightly more typing", it's a massive blow to the elegance and
> transparency of spreadable object code.  I guess you're saying that the
> transparancy has become a liability, as you can't necessarily tell if
> you're invoking a local or remote object (...but I thought that was the
> point?).  I'm also a little suprised because this is the first time I've
> seen you vouch for any sort of "safety" mechanism to protect the
> programmer from doing wayward things with eir data.

It was never my intention that remote object communication be
transparent, only convenient.  (The party line is "translucent".)  In
fact, one of the use-cases that radix and I discussed on IRC was the
ability to have locally-callable asynchronous objects that behave like
PB references.  Since a PB object's semantics will differ slightly if it
is local or remote if you were to just wrap its results in a deferred
(thanks to serialization, and such) it would be desirable to have a
local interface as well, which could perform the necessary mutations on
the data to make it look as though it'd been serialized.

As it stands now, this wrapper would be pretty thick, creating at least
3 separate instances for a single method invocation.  In the case that
I'm proposing, though, all you'd need is to subclass a mixin that
implements callRemote and dispatches to "async_" prefixed method
instead.  From the user code point of view it would be about the same,
but it would simplify the implementation a lot.

> It also sounds like that this use case is inherently insecure.  You're
> passing privledged information to
> some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
> really anything you can do about that.

Well, what I propose to do about it <0.5 wink> is make it explicit that
the information you're sending *may* be going to a remote source.  This
causes the broken case -- where the client is trying to masquerade a
reference somewhere bad -- blow up, rather than merrily send your
information somewhere it shouldn't go.

If we intend to use this API for a general basis for client<->server
communication, it is desirable that we make it require as *little
thinking as possible* to write secure code.  Buffer overflows are, after
all, something that can be easily prevented in C; it's just that the
fact that it's hard makes it a common mistake.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020215/ca272d98/attachment.pgp 

From carmstro at twistedmatrix.com  Fri Feb 15 22:12:54 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 15 Feb 2002 22:12:54 -0500
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013825510.2075.78.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>
Message-ID: <1013829176.733.6.camel@radii>

On Fri, 2002-02-15 at 21:11, Kevin Turner wrote:
> I guess you're saying that the
> transparancy has become a liability, as you can't necessarily tell if
> you're invoking a local or remote object (...but I thought that was the
> point?).  

For as long as I remember, that was *never* the point. Haven't you ever
heard glyph shouting from on high, "Explicit is better than implicit!"?
:)

> I'm also a little suprised because this is the first time I've
> seen you vouch for any sort of "safety" mechanism to protect the
> programmer from doing wayward things with eir data.

It's a different matter when you're talking about networked-app
security.

> It also sounds like that this use case is inherently insecure.  You're
> passing privledged information to
> some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
> really anything you can do about that.

Well, the point was, the code wasn't *meant* to pass privelaged
information to an object across the wire - notice that it was a Copied.
This could also be done for more things than Copied - imagine a method
that takes a list as one of its arguments and appends some secure data
to it. You could spoof a list with a remote object that has an append()
method.

While I think 'callRemote' is slightly less aesthetic than previously,
this is still a serious issue that needs to be dealt with. I guess I can
live with callRemote if it's the best way to explicit-ize remote
methods.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Fri Feb 15 23:04:38 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 20:04:38 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013829176.733.6.camel@radii>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii>
Message-ID: <1013832278.2075.114.camel@troglodyte>

On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> For as long as I remember, that was *never* the point. Haven't you ever
> heard glyph shouting from on high, "Explicit is better than implicit!"?

Funny words for a sect which celebrates in masqurading objects and
generally deplores strict type checking.

> Well, the point was, the code wasn't *meant* to pass privelaged
> information to an object across the wire - notice that it was a Copied.
> This could also be done for more things than Copied - imagine a method
> that takes a list as one of its arguments and appends some secure data
> to it. You could spoof a list with a remote object that has an append()
> method.

What do you mean, "wasn't meant to pass privledged information"?  Your
example has you appending the "secure data" to a list that's from who
knows where!  You have no idea who holds a reference to that list, or
who will hold references to the list (or certain items on the list) in
the near future.  And, as a happy little object, I don't see why you
should care.  You perform your operation with the given parameters, and
that's all your job is, isn't it?

I guess there's the "Referenceable vs Copyable" facet which I haven't
been paying a lot of attention to in this discussion.  When I choose
between those two spreadable flavours (the module name is spelled wrong,
BTW), I am thinking about what goes over the wire, but only in terms of
how much it will change, how much the states of the objects need to be
synchronized, how much traffic it's generating, etc.  But I've never
seen the use of Copyable as a security option.  If I had data I did not
want getting outside, I do not think I should entrust it to *any* object
which came from Outside, whether it be a RemoteCopy or RemoteCache or a
list-like object with whiskers.

I guess it's only fair to admit that I've written very little
application code with twisted.spread and read even less, so it's
entirely possible that I lack the experience to understand the issues
here...  but some things bein' said just don't ring true to me.

"So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

  Kevin

-- 
The moon is waxing crescent, 10.8% illuminated, 3.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020215/4c63cc42/attachment.pgp 

From washort at twistedmatrix.com  Fri Feb 15 23:29:30 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 15 Feb 2002 22:29:30 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013827148.4188.43.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda>
Message-ID: <1013833770.4167.40.camel@ghostwheel>

On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:

> It was never my intention that remote object communication be
> transparent, only convenient.  (The party line is "translucent".)

Be that as it may, this seems like a rather large loss of convenience in
most cases. surely we can make this behaviour a runtime option on
Broker? Broker.enableParanoia, Broker.disableParanoia methods perhaps?
i leave the question of which is the default up for debate. :)

Allen Short          Programmer-Archaeologist          washort at twistedmatrix.com
`Software Engineering: How to program if you cannot.' --- Dijkstra



From acapnotic at twistedmatrix.com  Fri Feb 15 23:44:13 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 20:44:13 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013833770.4167.40.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>
Message-ID: <1013834653.2096.118.camel@troglodyte>

On Fri, 2002-02-15 at 20:29, Allen Short wrote:
> On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:
> 
> > It was never my intention that remote object communication be
> > transparent, only convenient.  (The party line is "translucent".)
> 
> Be that as it may, this seems like a rather large loss of convenience in
> most cases.

Especially given my angle of approach to Twisted.
"What is it?"
"It's this great stuff that makes network applications super-easy to
write."
"Oh?  How's it do that?"
"Well there's this cool thing called PB [...] and then you can just call
methods on objects [...] internet!"

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020215/e62a7cea/attachment.pgp 

From glyph at twistedmatrix.com  Sat Feb 16 06:42:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 05:42:48 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013832278.2075.114.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>
Message-ID: <1013859768.4603.117.camel@zelda>

On Fri, 2002-02-15 at 22:04, Kevin Turner wrote:
> On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> > For as long as I remember, that was *never* the point. Haven't you ever
> > heard glyph shouting from on high, "Explicit is better than implicit!"?
> 
> Funny words for a sect which celebrates in masqurading objects and
> generally deplores strict type checking.

Dynamic typing is very cool, for reasons I've described in detail
elsewhere.  Hence, I want to make it still be easy to write secure PB
code without mandating the writing of IDLs.  Assuming that whatever code
you write *must* be secure, which is more of a hindrance:
foo.callRemote("bar") or requiring a full interface definition before
you can even publish your object?

The distinction between masquerading locally (fooling yourself) and
masquerading remotely (fooling others) is the difference between having
a vivid imagination and being a con artist...

> > Well, the point was, the code wasn't *meant* to pass privelaged
> > information to an object across the wire - notice that it was a Copied.
> > This could also be done for more things than Copied - imagine a method
> > that takes a list as one of its arguments and appends some secure data
> > to it. You could spoof a list with a remote object that has an append()
> > method.
> 
> What do you mean, "wasn't meant to pass privledged information"?  Your
> example has you appending the "secure data" to a list that's from who
> knows where!  You have no idea who holds a reference to that list, or
> who will hold references to the list (or certain items on the list) in
> the near future.  And, as a happy little object, I don't see why you
> should care.  You perform your operation with the given parameters, and
> that's all your job is, isn't it?

There are two kinds of "who" here.  One "who" is to know the objects
that will have knowledge of your object.  That's encapsulation, which is
all well and good, but we break it sometimes, for various reasons;
python's nifty because it lets us do that when necessary.  The other
"who" is more important, though: it's the actual *people* that will have
access to the information that you're sending through that method call.

> I guess there's the "Referenceable vs Copyable" facet which I haven't
> been paying a lot of attention to in this discussion.  When I choose
> between those two spreadable flavours (the module name is spelled wrong,
> BTW), I am thinking about what goes over the wire, but only in terms of
> how much it will change, how much the states of the objects need to be
> synchronized, how much traffic it's generating, etc.  But I've never
> seen the use of Copyable as a security option.  If I had data I did not
> want getting outside, I do not think I should entrust it to *any* object
> which came from Outside, whether it be a RemoteCopy or RemoteCache or a
> list-like object with whiskers.

RemoteCopy and RemoteCache are both local classes; e.g. any information
you pass to methods that exist on them gets dealt with locally.  At
least in the code I'm writing for work, I'll often want to embed
"privileged" code in a RemoteCopy class, since it is dealing with
*information* from the "outside", but behavior locally.  For mirroring
the view of a simulation on a server, this is a common design pattern,
I'd imagine.

The proposal on the table makes the locality of the behavior much more
explicit -- unless your method begins with 'callRemote', the behavior
you're invoking will *definitely* be local.  Attempts to invoke
(potentially) remote behavior without first saying so will just blow up.

> I guess it's only fair to admit that I've written very little
> application code with twisted.spread and read even less, so it's
> entirely possible that I lack the experience to understand the issues
> here...  but some things bein' said just don't ring true to me.

WELL OF COURSE YOU HAVE NO IDEA WHAT YOU'RE TALKING ABOUT THEN!!!! ;-)

Seriously, thanks for your response; this is exactly the sort of
discussion I wanted to generate.  You haven't convinced me that I was
wrong yet ;-), but I would like it if the motivations for doing this are
clearly understood.

If you haven't read much PB code, the problem I'm describing might seem
a trivial concern, but I've found at least two instances of this problem
"in the wild".  One was a mistake made by me and one was someone else. 
Neither could be made to divulge critical information, but both could be
exploited to give a user an unfair advantage or consume a large
proportion of the server's CPU/bandwidth.

Do you have a solution that's less aesthetically unpleasant?  I think
that this is a good compromise all around (mumble, frotz, I want macros
and promises and continuations so I can say [wait-for [tell obj message
arg arg arg]]).  But then again, I actually find it *more* aesthetically
pleasant to say THIS HERE IS LIKELY TO BE REMOTE.  Despite the other
advantages of moving to PB methods returning Deferreds, I was glad that
I could previously grep for 'pbcallback' and get most of the methods
that would be invoked remotely.

> "So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

Who would want to replace me with another evil robot?

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/9c34ec4d/attachment.pgp 

From glyph at twistedmatrix.com  Sat Feb 16 06:47:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 05:47:35 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013833770.4167.40.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>
Message-ID: <1013860056.4603.123.camel@zelda>

On Fri, 2002-02-15 at 22:29, Allen Short wrote:
> On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:
> 
> > It was never my intention that remote object communication be
> > transparent, only convenient.  (The party line is "translucent".)
> 
> Be that as it may, this seems like a rather large loss of convenience in
> most cases. surely we can make this behaviour a runtime option on
> Broker? Broker.enableParanoia, Broker.disableParanoia methods perhaps?
> i leave the question of which is the default up for debate. :)

The semantics of remote objects will remain identical, the syntax will
change slightly.  It will still be possible to emulate remote objects by
implementing the callRemote method to do local dispatch (which could be
automated).

I guess I'm just being thick here.  What is the convenience being lost? 
The additional 10 characters per remote invocation doesn't seem that
significant to me.  (After all, it is currently still necessary to
emulate the behavior of remote objects, since they're always
asynchronous.)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/47306d8b/attachment.pgp 

From abo at minkirri.apana.org.au  Sat Feb 16 07:39:05 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Sat, 16 Feb 2002 23:39:05 +1100
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013859768.4603.117.camel@zelda>
References: <1013816691.3613.31.camel@zelda> <1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii> <1013832278.2075.114.camel@troglodyte> <1013859768.4603.117.camel@zelda>
Message-ID: <20020216123904.GA13908@minkirri.apana.org.au>

On Sat, Feb 16, 2002 at 05:42:48AM -0600, Glyph Lefkowitz wrote:
> On Fri, 2002-02-15 at 22:04, Kevin Turner wrote:
> > On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
[...]
> > What do you mean, "wasn't meant to pass privledged information"?  Your
> > example has you appending the "secure data" to a list that's from who
> > knows where!  You have no idea who holds a reference to that list, or
> > who will hold references to the list (or certain items on the list) in
> > the near future.  And, as a happy little object, I don't see why you
> > should care.  You perform your operation with the given parameters, and
> > that's all your job is, isn't it?
> 
> There are two kinds of "who" here.  One "who" is to know the objects
> that will have knowledge of your object.  That's encapsulation, which is
> all well and good, but we break it sometimes, for various reasons;
> python's nifty because it lets us do that when necessary.  The other
> "who" is more important, though: it's the actual *people* that will have
> access to the information that you're sending through that method call.

coming completely out of the blue with no experience or understanding to
give me enough qualifications to even comment (but doing it anyway :-).

Just a thought; why is a local object any more trustworthy than a remote
one? To me the local vs remote trust boundary seem to be a bit arbitary. It
is better to think about the trust relationship between the objects than
where they are located. Why and how do the objects trust each other?

Perhaps this _can_ be reduced to "Because it's local and hence I or some
other local object I trust created it". However, I think once you start
going down the path of secure transactions between objects, it's better to
try and provide a generalised solution. There are various ways that
authenticated and secured communications between objects can be implemented,
and perhaps even made "translucent".


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From washort at twistedmatrix.com  Sat Feb 16 12:55:03 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 16 Feb 2002 11:55:03 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013860056.4603.123.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>  <1013860056.4603.123.camel@zelda>
Message-ID: <1013882103.4167.43.camel@ghostwheel>

On Sat, 2002-02-16 at 05:47, Glyph Lefkowitz wrote:
> I guess I'm just being thick here.  What is the convenience being lost? 
> The additional 10 characters per remote invocation doesn't seem that
> significant to me. 

it does to me, if only because of the existing code using it. if you
want to deprecate the current way of doing things, that'd work, i think:
but let's not spawn a massive refactoring frenzy all at once, please?

-- 
Allen Short          Programmer-Archaeologist         
washort at twistedmatrix.com
"TECO was *IT* man,  TECO was more fun than a sendmail.cf file.  TECO
was
a bar you had to clear if you wanted to be a Real Hacker (tm)." - Foobar
in afc



From glyph at twistedmatrix.com  Sat Feb 16 12:59:09 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 11:59:09 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <20020216123904.GA13908@minkirri.apana.org.au>
References: <1013816691.3613.31.camel@zelda>
	<1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii>
	<1013832278.2075.114.camel@troglodyte> <1013859768.4603.117.camel@zelda> 
	<20020216123904.GA13908@minkirri.apana.org.au>
Message-ID: <1013882350.4188.134.camel@zelda>

On Sat, 2002-02-16 at 06:39, Donovan Baarda wrote:
> On Sat, Feb 16, 2002 at 05:42:48AM -0600, Glyph Lefkowitz wrote:

> > There are two kinds of "who" here.  One "who" is to know the objects
> > that will have knowledge of your object.  That's encapsulation, which is
> > all well and good, but we break it sometimes, for various reasons;
> > python's nifty because it lets us do that when necessary.  The other
> > "who" is more important, though: it's the actual *people* that will have
> > access to the information that you're sending through that method call.
> 
> coming completely out of the blue with no experience or understanding to
> give me enough qualifications to even comment (but doing it anyway :-).
> 
> Just a thought; why is a local object any more trustworthy than a remote
> one? To me the local vs remote trust boundary seem to be a bit arbitary. It
> is better to think about the trust relationship between the objects than
> where they are located. Why and how do the objects trust each other?

You're confusing "objects" and "people".

I don't trust the remote objects because (A) the communication to them
is potentially visible over the wire and (B) they don't actually exist
on physical hardware I control, e.g. their behavior might have been
tampered with.  They are under the complete control of another person,
who might as well be speaking the wire-protocol personally.

Thinking from a security viewpoint, they *have* already been tampered
with, and the question is "how do I reduce the impact of that on my
service?".

> Perhaps this _can_ be reduced to "Because it's local and hence I or some
> other local object I trust created it". However, I think once you start
> going down the path of secure transactions between objects, it's better to
> try and provide a generalised solution. There are various ways that
> authenticated and secured communications between objects can be implemented,
> and perhaps even made "translucent".

What gave you the idea we were talking about secure distributed
transactions?  I'm just talking about making our current implementation
of remote communications more secure (by default).

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/41584f64/attachment.pgp 

From glyph at twistedmatrix.com  Sat Feb 16 13:02:34 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 12:02:34 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013882103.4167.43.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>  <1013860056.4603.123.camel@zelda> 
	<1013882103.4167.43.camel@ghostwheel>
Message-ID: <1013882555.3613.139.camel@zelda>

On Sat, 2002-02-16 at 11:55, Allen Short wrote:
> On Sat, 2002-02-16 at 05:47, Glyph Lefkowitz wrote:
> > I guess I'm just being thick here.  What is the convenience being lost? 
> > The additional 10 characters per remote invocation doesn't seem that
> > significant to me. 
> 
> it does to me, if only because of the existing code using it. if you
> want to deprecate the current way of doing things, that'd work, i think:
> but let's not spawn a massive refactoring frenzy all at once, please?

Heh.  I have to deal with a volume of code about 4 times the size that
is publicly visible, so that is not lost on me :).

I do plan to slowly deprecate it, with warning messages printed each
time a "bad" remote method is called.  Otherwise I'd be sure to miss at
least one remote notification on the first pass (after all, part of the
problem is that they're difficult to locate right now since they're not
tagged with anything distinctive...)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/f894b4a1/attachment.pgp 

From sean at twistedmatrix.com  Sat Feb 16 13:04:49 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 16 Feb 2002 12:04:49 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013832278.2075.114.camel@troglodyte>
Message-ID: <HOEEKPCOKELHCNIJNMAGMEOACEAA.sean@twistedmatrix.com>

well, as someone who HAS written a lot of spread code I'd say that the
current interface that assumes method calls on remote objects are remote can
be confusing. In a few cases I have found my code doing strange things on
the network when I was expecting local behavior.

The "callRemote" syntax would make remote operation explicit - which I am in
favor of.

Another observation from writing lots of spread code is that the remote
interfaces for objects tend to be very small.  This reduces the impact of
the "more typing required" argument against this change. In my current
application that uses pb which is 4300 lines of python and about 70 classes,
there are only 19 remote methods defined. Changing my code over to use the
"callRemote" syntax would take a couple of hours at most. (i have unit tests
:) ).

BTW, I was the other person that Glyph mention who had written code
exploitable by this issue.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kevin Turner
Sent: Friday, February 15, 2002 10:05 PM
To: Twisted List
Subject: Re: [Twisted-Python] Potential PB Security Problem (And
Solution)


On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> For as long as I remember, that was *never* the point. Haven't you ever
> heard glyph shouting from on high, "Explicit is better than implicit!"?

Funny words for a sect which celebrates in masqurading objects and
generally deplores strict type checking.

> Well, the point was, the code wasn't *meant* to pass privelaged
> information to an object across the wire - notice that it was a Copied.
> This could also be done for more things than Copied - imagine a method
> that takes a list as one of its arguments and appends some secure data
> to it. You could spoof a list with a remote object that has an append()
> method.

What do you mean, "wasn't meant to pass privledged information"?  Your
example has you appending the "secure data" to a list that's from who
knows where!  You have no idea who holds a reference to that list, or
who will hold references to the list (or certain items on the list) in
the near future.  And, as a happy little object, I don't see why you
should care.  You perform your operation with the given parameters, and
that's all your job is, isn't it?

I guess there's the "Referenceable vs Copyable" facet which I haven't
been paying a lot of attention to in this discussion.  When I choose
between those two spreadable flavours (the module name is spelled wrong,
BTW), I am thinking about what goes over the wire, but only in terms of
how much it will change, how much the states of the objects need to be
synchronized, how much traffic it's generating, etc.  But I've never
seen the use of Copyable as a security option.  If I had data I did not
want getting outside, I do not think I should entrust it to *any* object
which came from Outside, whether it be a RemoteCopy or RemoteCache or a
list-like object with whiskers.

I guess it's only fair to admit that I've written very little
application code with twisted.spread and read even less, so it's
entirely possible that I lack the experience to understand the issues
here...  but some things bein' said just don't ring true to me.

"So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

  Kevin

--
The moon is waxing crescent, 10.8% illuminated, 3.1 days old.




From acapnotic at twistedmatrix.com  Sat Feb 16 14:26:47 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 16 Feb 2002 11:26:47 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013859768.4603.117.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda>
Message-ID: <1013887608.1546.19.camel@troglodyte>

On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> If you haven't read much PB code, the problem I'm describing might seem
> a trivial concern, but I've found at least two instances of this problem
> "in the wild".

Is there a way to fix this?  My lack of education, that is.  There's
more code within the Twisted repository left more me to read, but IIRC
there are actually very few PB interfaces defined there.  (We have Words
and Manhole and...?)   More pertinant here would be other applications
(from the "wilds") which employ Twisted technology.  Are there any such
0775 codebases I should be aware of?  The accusation has been made that
no one actually *uses* Twisted for anything (not to name names, but he's
Canadian and works in Japan), but assuming that's not the case, maybe we
could beef up the "sites using Twisted" list a little.

> Who would want to replace me with another evil robot?

"Do not trust the Shover-robot, he is malfunctioning,"

 - Kevin

-- 
The moon is waxing crescent, 14.8% illuminated, 3.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/6b19ac53/attachment.pgp 

From carmstro at twistedmatrix.com  Sat Feb 16 14:48:14 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 16 Feb 2002 14:48:14 -0500
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <1013888896.1682.3.camel@radii>

On Sat, 2002-02-16 at 14:26, Kevin Turner wrote:
> The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

Ohhh, excellent idea!! Let's break a bunch of interfaces, and then when
everybody who uses Twisted starts complaining to us, we can get them to
tell us where they use it!

> > Who would want to replace me with another evil robot?
> 
> "Do not trust the Shover-robot, he is malfunctioning,"

I wonder if glyph has stairs in his house...

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Sat Feb 16 14:53:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 13:53:30 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <1013889210.3613.156.camel@zelda>

On Sat, 2002-02-16 at 13:26, Kevin Turner wrote:
> On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> > If you haven't read much PB code, the problem I'm describing might seem
> > a trivial concern, but I've found at least two instances of this problem
> > "in the wild".
> 
> Is there a way to fix this?  My lack of education, that is.  There's
> more code within the Twisted repository left more me to read, but IIRC
> there are actually very few PB interfaces defined there.  (We have Words
> and Manhole and...?)

Distributed twisted.web, but you're right, that's about it.

> More pertinant here would be other applications
> (from the "wilds") which employ Twisted technology.  Are there any such
> 0775 codebases I should be aware of?  The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

It is indeed unfortunate that much Twisted-using code is closed.  Not my
decision, I assure you ;).

I believe Itamar is using PB, so you could ask to look at his code -- I
know that Sean was planning on releasing a small demo at some point. 
However, this is a circular problem.  Much of this past week for me has
been spent working on a new website for tm.com and trying to come up
with introductory documentation for PB.  It needs to be documented,
standardized, and released as 1.0 before we can really expect droves of
people to come flocking to it.

Does anyone else on this list have some code to reference?  The other
folks I know of using Twisted are mostly using the other components at
this point.

> > Who would want to replace me with another evil robot?
> 
> "Do not trust the Shover-robot, he is malfunctioning,"

"Do not trust the Pusher-robot, he is doing a little too much of his own
stuff."

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020216/12a34c8a/attachment.pgp 

From itamar at zoteca.com  Sun Feb 17 02:27:31 2002
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Sun, 17 Feb 2002 09:27:31 +0200 (IST)
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013816691.3613.31.camel@zelda>
Message-ID: <Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>

OK,

My first thoughts - I think that this is a good idea. The problem with
pretending to be a regular method call is that, well, it isn't. You may
get disconnected, for example. So we want to encourage people to realize
thjat they can't just use the same code. Of course, this'll make
web.distrib rather more difficult to implement nicely...

However, if we're unto security, some form of static typing on
arguments passed from remote clients to Referenceables methods would
be very useful, some would say necessary, for
secure programming. This would aid documentation as well. Switching to
callRemote still doesn't solve the "passing the wrong objects
maliciously" issue, just one very specialized instance of it. And I ain't
suggesting IDL - I'm sure we could come up with a solution embedded in
python source code that is easy to type (say, using oscar-style
docstrings or some ther form of annotation, and a
enforceInterface(klass) function that parses them and
uses t.p.hook).





From glyph at twistedmatrix.com  Sun Feb 17 02:36:29 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Feb 2002 01:36:29 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: 
	<Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>
References: 
	<Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>
Message-ID: <1013931389.4188.178.camel@zelda>

On Sun, 2002-02-17 at 01:27, Itamar Shtull-Trauring wrote:
> OK,
> 
> My first thoughts - I think that this is a good idea. The problem with
> pretending to be a regular method call is that, well, it isn't. You may
> get disconnected, for example. So we want to encourage people to realize
> thjat they can't just use the same code. Of course, this'll make
> web.distrib rather more difficult to implement nicely...

Nah.  We already have to manually frob the interface -- peeling off
methods of a remote reference and sticking them to a copy.  It would
probably look cleaner if we were more explicit about it, anyway :)  I
suppose each of those one-line assignments would turn into a two-line
method declaration (and gasp!  a newline to separate them) but it would
also provide for more flexible emulation of the request interface.  I
think that the existing code there may be an example of the
"poltergeists" antipattern.

> However, if we're unto security, some form of static typing on
> arguments passed from remote clients to Referenceables methods would
> be very useful, some would say necessary, for
> secure programming. This would aid documentation as well. Switching to
> callRemote still doesn't solve the "passing the wrong objects
> maliciously" issue, just one very specialized instance of it. And I ain't
> suggesting IDL - I'm sure we could come up with a solution embedded in
> python source code that is easy to type (say, using oscar-style
> docstrings or some ther form of annotation, and a
> enforceInterface(klass) function that parses them and
> uses t.p.hook).

Well, yes.  We need a documentation standard for return types (the sound
you hear there is another section of the coding standard being exploded
in a concrete bunker, several miles away) and we might as well use that
to enforce interfaces when we find them.  However -- any sort of
polymorphism is a potential security hole in that regard.  I would like
to see some exploit demonstrations of the sorts of holes that one could
create by passing the wrong serialized data, provided that remote calls
were more explicit.  I don't think it's really serious, or could be
resolved by stricter type-checking.  (After all, any behavior besides
"blow up" pretty much assumes that the client is going to be passing an
object that adheres to a correct interface.)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020217/c612eb3e/attachment.pgp 

From levi at top.monad.net  Sun Feb 17 04:34:26 2002
From: levi at top.monad.net (Levi)
Date: Sun, 17 Feb 2002 04:34:26 -0500
Subject: [Twisted-Python] spread question
Message-ID: <20020217043425.A5633@pest>

I was playing with twisted.spread.pb and was wondering if it is possible
for the server to pass an object to the client, and then call methods on
that object and have the methods run on the client. I know you can (it's
quit easy actually) have the client pass the object to the server which
can then call it's methods, but it'd be easier to impliment what I've
got in mind if the object originates at the server.

-Levi



From glyph at twistedmatrix.com  Sun Feb 17 04:48:22 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Feb 2002 03:48:22 -0600
Subject: [Twisted-Python] spread question
In-Reply-To: <20020217043425.A5633@pest>
References: <20020217043425.A5633@pest>
Message-ID: <1013939303.4188.181.camel@zelda>

Ugh.  I'm writing these docs right now... the answer to your question is
"Cacheable".  Look at the docstrings and I hope they help.  If you have
more questions feel free to ask.

On Sun, 2002-02-17 at 03:34, Levi wrote:
> I was playing with twisted.spread.pb and was wondering if it is possible
> for the server to pass an object to the client, and then call methods on
> that object and have the methods run on the client. I know you can (it's
> quit easy actually) have the client pass the object to the server which
> can then call it's methods, but it'd be easier to impliment what I've
> got in mind if the object originates at the server.
> 
> -Levi
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020217/e7b09551/attachment.pgp 

From tv at twistedmatrix.com  Mon Feb 18 01:56:58 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 18 Feb 2002 08:56:58 +0200
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
In-Reply-To: <87it8zy4el.fsf@c0re.bewaff.net>
References: <87it8zy4el.fsf@c0re.bewaff.net>
Message-ID: <877kpbxop1.fsf@ki.yok.utu.fi>

drt at un.bewaff.net (Doobee R. Tzeck) writes:

> I'm trying to build a non interactive client app with
> twisted. Let's assume it is a webcrawler. I'm not sure how to do
> that. Might be like this:
> 
> Create a Loop Object which checks if the desired number of
> connections are running and if not create new ones an add them as
> connectors.
> 
> Or should I rip out application.run() and write my own look to
> better handle the starting of new crawlers?

	You may want to look at
        twisted/test/interactive/ldap_parallelsearch.py, which is an
        LDAP client that does 5 simultaneous connections, 10
        asynchronous queries (results flow in arbitrary order) per
        connection.

        Of course, it ain't HTTP.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From junkster at rochester.rr.com  Mon Feb 18 18:34:33 2002
From: junkster at rochester.rr.com (Benjamin Schollnick)
Date: Mon, 18 Feb 2002 18:34:33 -0500
Subject: [Twisted-Python] Windows issues...
Message-ID: <B896F9B9.5CE4%junkster@rochester.rr.com>

Folks,

   I've got some questions, with windows usage of Twisted Matrix...

   I'm considering using TM as the framework for a revival of a another
program that I use to write....

   But, I ran into *ALOT* of issues on the PC side...
(I wasn't even able to get it to work on the Mac due to Line-ending issues,
I haven't figured a simple way to convert the entire tree yet).

1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
while building
   something in the twisted.spread.cbanana section...

2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
etc)
   This is a major hindrance, because either I have to rename the file, or
   execute it explicitly "python mktap ....etc....".  I have windows set to
run
   the .py files via python automatically.

3) web.distrib has some issues.  Mainly attempting to use the pwd unit under
   windows.  I was able to add:

       try:
               .....
               .....
       except:
               pass

   to the import statement and the actual PWD / user area, without any
obvious harmful
   problems....

4) Error checking is extremely light....

       mktap web 

   failed, until I fixed #3.  The program didn't report any useful error
messages, it just repeated the help text indicating what types (web, ftp,
etc) could be used for the command line.

5) Even after fixing #3, mktap web --static static, isn't working.

6) Under Windows, the default should be -n for twistd, and the PID file
shouldn't be created.   At least, as it is now.  twistd just "stops", after
it starts up and drops us back to the command line, and examination shows
that the program isn't running.  So at least as a workaround, the -n mode
works....

I guest a better question is, has twistedmatrix been tested under Windows?
It really seems to be unix centric in it's programming...

               - Benjamin 



From andrew-twisted at puzzling.org  Mon Feb 18 19:24:35 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 11:24:35 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B896F9B9.5CE4%junkster@rochester.rr.com>
References: <B896F9B9.5CE4%junkster@rochester.rr.com>
Message-ID: <20020219002435.GA9849@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> Folks,
> 
>    I've got some questions, with windows usage of Twisted Matrix...

I use Twisted under Windows, so I may be able to offer some help..

> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
> while building
>    something in the twisted.spread.cbanana section...

CL.EXE is a command line program that comes with MS Visual C++...  setup.py
is basically trying to compile a C extension module.  I can send you a
binary for that file if you don't have MS VC++ installed, otherwise run
VCVARS32.BAT and try again. 

> 2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
> etc)
>    This is a major hindrance, because either I have to rename the file, or
>    execute it explicitly "python mktap ....etc....".  I have windows set to
> run
>    the .py files via python automatically.

This is easily fixed with short bash script, but I agree, this is annoyed.

I'd suggest the Twisted developers look at how, e.g. PyChecker or Teud does
it (various scripts get installed in %PYTHONPATH%/scripts/<foo>.bat).

> 3) web.distrib has some issues.  Mainly attempting to use the pwd unit under
[snip]
> 4) Error checking is extremely light....
[snip]
> 5) Even after fixing #3, mktap web --static static, isn't working.

I don't use the twisted.web stuff (yet ;), so I can't offer any help here :(

> 6) Under Windows, the default should be -n for twistd, and the PID file
> shouldn't be created.   At least, as it is now.  twistd just "stops", after
> it starts up and drops us back to the command line, and examination shows
> that the program isn't running.  So at least as a workaround, the -n mode
> works....

Yeah, -n uses os.fork, which is not available under Windows.  You probably
need to use NT services instead...

Alternatively, consider using the cygwin version of Python -- it is closer
to the unix version, and so os.fork will work.  Also, it comes with gcc, so
cbanana would compile correctly.  Unfortunately, I don't think it can
interoperate with the Win32 extensions (at least, not that I know of).

> I guest a better question is, has twistedmatrix been tested under Windows?
> It really seems to be unix centric in it's programming...

It basically works.  The other problem to watch out for is that
Protocol.connectionFailed won't trigger unless you specify a timeout for
your tcp.Client, because select works slightly differently on Windows.

Incidentally, I'm not using the twistd stuff *at all* (I don't yet
understand the need for it under Windows, but then I don't even know exactly
what it's meant to do...).  Instead, I'm using this little file:

--- ServerFramework/Service.py ---
import win32serviceutil, win32service

"""Example use of this module:

from ServerFramework.Service import Service, main
import ExampleServer

class ExampleServerService(Service):
    _svc_name_ = "ExampleServerService"
    _svc_display_name_ = "My Example Server Service"
    main = ExampleServer.main

if __name__ == '__main__':
    main(ExampleServerService)
"""


try:
    import twisted
except ImportError:
    print "Twisted Python must be installed to run this service"
    raise

class Service(win32serviceutil.ServiceFramework):
    """I am a template service for ServerFramework servers.
    
    You should subclass me and override the following attributes:
        _svc_name_          -- see win32serviceutil docs
        _svc_display_name_  -- see win32serviceutil docs
        main                -- function that starts your server
    
    You can also override:
        logFile             -- filename for where debug messages will be saved
                               (default: c:/<_svc_name_>.log)
    """
    _svc_name_ = "UnnamedServer"
    _svc_display_name_ = "My UNNAMED Server"
    main = None
    logFile = None

    def __init__(self, *args):
        win32serviceutil.ServiceFramework.__init__(self, *args)
        if not self.logFile:
            self.logFile = 'c:/%s.log' % (self._svc_name_,)

    def SvcDoRun(self):
        from twisted.python.log import startLogging
        startLogging(open(self.logFile,'a'))
        # Call main, note that it is not a method of this class, so we use
        # self.main.im_func() instead of self.main().
        self.main.im_func()

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        from twisted.internet.main import shutDown
        shutDown()

def main(svc):
	win32serviceutil.HandleCommandLine(svc)
    
if __name__ == '__main__':
    print "This is a library module, and should not be executed."
---

It basically wraps up the functionality of the win32serviceutil in a
convenient way for Twisted servers.  Once you've used it as shown in the
example, just run it from the commandline -- it's self explantory (it uses
Mark Hammond's win32serviceutil.HandleCommandLine function to let you
install the service).  I'm not sure if the self.main.im_func trick will work
on older Pythons; I use 2.2.

I hope this is of some use to you.

-Andrew.




From andrew-twisted at puzzling.org  Mon Feb 18 19:28:43 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 11:28:43 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <20020219002843.GA10302@ritsuko.xware.cx>

On Tue, Feb 19, 2002 at 11:24:35AM +1100, Andrew Bennetts wrote:
> Yeah, -n uses os.fork, which is not available under Windows.  You probably
> need to use NT services instead...

I of course meant to say that *without* -n, it uses os.fork...

-Andrew.




From glyph at twistedmatrix.com  Mon Feb 18 19:52:56 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 18 Feb 2002 18:52:56 -0600
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> 
	<20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <1014079976.13000.49.camel@zelda>

On Mon, 2002-02-18 at 18:24, Andrew Bennetts wrote:
> On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> > Folks,
> > 
> >    I've got some questions, with windows usage of Twisted Matrix...
> 
> I use Twisted under Windows, so I may be able to offer some help..
> 

Hey Andrew, thanks for answering that question.  You beat my response,
almost as I was sending it ;)

The Twisted team really needs a dedicated windows person.  Would you be
interested in taking up that mantle and making some of these issues go
away in the central distribution?  It sounds like you've got a smoother
windows work-flow than I have here.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020218/cdcd4952/attachment.pgp 

From andrew-twisted at puzzling.org  Mon Feb 18 20:03:59 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 12:03:59 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <1014079976.13000.49.camel@zelda>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx> <1014079976.13000.49.camel@zelda>
Message-ID: <20020219010359.GA10694@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 06:52:56PM -0600, Glyph Lefkowitz wrote:
> Hey Andrew, thanks for answering that question.  You beat my response,
> almost as I was sending it ;)

Heh.

> The Twisted team really needs a dedicated windows person.  Would you be
> interested in taking up that mantle and making some of these issues go
> away in the central distribution?  It sounds like you've got a smoother
> windows work-flow than I have here.

Most of my time at work is now spent coding Twisted servers, which is why
I'm familiar with all these issues.

I'd love to take up that mantle, but I rarely run Windows at home...  so I
won't commit myself fully yet, but I certainly would like to see how much I
can help.

-Andrew.




From abo at minkirri.apana.org.au  Mon Feb 18 20:26:25 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 19 Feb 2002 12:26:25 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <20020219012625.GG32666@minkirri.apana.org.au>

On Tue, Feb 19, 2002 at 11:24:35AM +1100, Andrew Bennetts wrote:
> On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> > Folks,
> > 
> >    I've got some questions, with windows usage of Twisted Matrix...
[...]
> > 2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
> > etc)
> >    This is a major hindrance, because either I have to rename the file, or
> >    execute it explicitly "python mktap ....etc....".  I have windows set to
> > run
> >    the .py files via python automatically.
> 
> This is easily fixed with short bash script, but I agree, this is annoyed.

Anyone attempting to do anything under windoze should look at the cygwin
tools. the cygwin bash shell automaticly executes things with #!/... lines
for you.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From junkster at rochester.rr.com  Mon Feb 18 21:15:41 2002
From: junkster at rochester.rr.com (Benjamin Schollnick)
Date: Mon, 18 Feb 2002 21:15:41 -0500
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <B8971F7D.5CEF%junkster@rochester.rr.com>

on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:

>> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
>> while building
>> something in the twisted.spread.cbanana section...
> 
> CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> is basically trying to compile a C extension module.  I can send you a
> binary for that file if you don't have MS VC++ installed, otherwise run
> VCVARS32.BAT and try again.

No Visual C++....

If you don't mind sending it, I would appreciate it...

This really needs to be noted.... I admit, I didn't search around too
much, but I didn't see anything mentioning that it required a C/C++
compiler...

(How about a precompiled Windows binary?  Or having Distutils install the
precompiled binary)....

>> 6) Under Windows, the default should be -n for twistd, and the PID file
>> shouldn't be created.   At least, as it is now.  twistd just "stops", after
>> it starts up and drops us back to the command line, and examination shows
>> that the program isn't running.  So at least as a workaround, the -n mode
>> works....
> 
> Yeah, -n uses os.fork, which is not available under Windows.  You probably
> need to use NT services instead...

That's what I figured....

(By NT Services, you mean the services listed from control panels -->
services?)

But I dislike the NT services.... I've never seen a service get installed,
that will "uninstall" properly...  (Usually add/remove program doesn't
uninstall the service)

I prefer to run the console......reminds me a little bit more of a syslog
window... >g<


> Alternatively, consider using the cygwin version of Python -- it is closer
> to the unix version, and so os.fork will work.  Also, it comes with gcc, so
> cbanana would compile correctly.  Unfortunately, I don't think it can
> interoperate with the Win32 extensions (at least, not that I know of).

I use the Win32 services, include ODBC... So that's not really a useable
workaround...

>> I guest a better question is, has twistedmatrix been tested under Windows?
>> It really seems to be unix centric in it's programming...
> 
> It basically works.  The other problem to watch out for is that
> Protocol.connectionFailed won't trigger unless you specify a timeout for
> your tcp.Client, because select works slightly differently on Windows.

> Incidentally, I'm not using the twistd stuff *at all* (I don't yet
> understand the need for it under Windows, but then I don't even know exactly
> what it's meant to do...).  Instead, I'm using this little file:

Is the following code "temporary"....  It's considered a service while
running, but doesn't get installed in the services control panel?

It looks interesting, but I don't want to register the app as a "true"
service... As I mentioned before, I can't find a reliable way to remove
a service, without registry hacking...

            -- Benjamin

> --- ServerFramework/Service.py ---
> import win32serviceutil, win32service
> 
> """Example use of this module:
> 
> from ServerFramework.Service import Service, main
> import ExampleServer
> 
> class ExampleServerService(Service):
> _svc_name_ = "ExampleServerService"
> _svc_display_name_ = "My Example Server Service"
> main = ExampleServer.main
> 
> if __name__ == '__main__':
> main(ExampleServerService)
> """
> 
> 
> try:
> import twisted
> except ImportError:
> print "Twisted Python must be installed to run this service"
> raise
> 
> class Service(win32serviceutil.ServiceFramework):
> """I am a template service for ServerFramework servers.
> 
> You should subclass me and override the following attributes:
> _svc_name_          -- see win32serviceutil docs
> _svc_display_name_  -- see win32serviceutil docs
> main                -- function that starts your server
> 
> You can also override:
> logFile             -- filename for where debug messages will be saved
> (default: c:/<_svc_name_>.log)
> """
> _svc_name_ = "UnnamedServer"
> _svc_display_name_ = "My UNNAMED Server"
> main = None
> logFile = None
> 
> def __init__(self, *args):
> win32serviceutil.ServiceFramework.__init__(self, *args)
> if not self.logFile:
> self.logFile = 'c:/%s.log' % (self._svc_name_,)
> 
> def SvcDoRun(self):
> from twisted.python.log import startLogging
> startLogging(open(self.logFile,'a'))
> # Call main, note that it is not a method of this class, so we use
> # self.main.im_func() instead of self.main().
> self.main.im_func()
> 
> def SvcStop(self):
> self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
> from twisted.internet.main import shutDown
> shutDown()
> 
> def main(svc):
> win32serviceutil.HandleCommandLine(svc)
> 
> if __name__ == '__main__':
> print "This is a library module, and should not be executed."




From carmstro at twistedmatrix.com  Mon Feb 18 21:36:59 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 18 Feb 2002 21:36:59 -0500
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B8971F7D.5CEF%junkster@rochester.rr.com>
References: <B8971F7D.5CEF%junkster@rochester.rr.com>
Message-ID: <1014086221.1000.8.camel@radii>

On Mon, 2002-02-18 at 21:15, Benjamin Schollnick wrote:
> on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:
> 
> >> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
> >> while building
> >> something in the twisted.spread.cbanana section...
> > 
> > CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> > is basically trying to compile a C extension module.  I can send you a
> > binary for that file if you don't have MS VC++ installed, otherwise run
> > VCVARS32.BAT and try again.
> 
> No Visual C++....
> 
> If you don't mind sending it, I would appreciate it...

cBanana is an optional C implementation of the regular pure-python
banana. You don't need it.  I guess for now you can just hack setup.py
and comment out the section that looks like this:

setup_args['ext_modules'] = [
    Extension("twisted.spread.cBanana",
[extpath("twisted/spread/cBanana.c")]),
    ]

> This really needs to be noted.... I admit, I didn't search around too
> much, but I didn't see anything mentioning that it required a C/C++
> compiler...

It doesn't require one, but apparently the setup scripts barf if you
don't have one.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Mon Feb 18 21:55:43 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 13:55:43 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B8971F7D.5CEF%junkster@rochester.rr.com>
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com>
Message-ID: <20020219025543.GA11470@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 09:15:41PM -0500, Benjamin Schollnick wrote:
> on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:
> > CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> > is basically trying to compile a C extension module.  I can send you a
> > binary for that file if you don't have MS VC++ installed, otherwise run
> > VCVARS32.BAT and try again.
> 
> No Visual C++....
> 
> If you don't mind sending it, I would appreciate it...

I'll send it in a private mail.  It's compiled for Python 2.2 on Win2k; it
should be portable to any Win32, but I'm just guessing about that.

> This really needs to be noted.... I admit, I didn't search around too
> much, but I didn't see anything mentioning that it required a C/C++
> compiler...
> 
> (How about a precompiled Windows binary?  Or having Distutils install the
> precompiled binary)....

I *think* what's supposed to happen is for it to fallback to a pure Python
implementation.  It's part of the twisted.spread package; if you're not
using spreadable computing, it doesn't really matter anyway.

> > Yeah, -n uses os.fork, which is not available under Windows.  You probably
> > need to use NT services instead...
> 
> That's what I figured....
> 
> (By NT Services, you mean the services listed from control panels -->
> services?)

Yep.

> But I dislike the NT services.... I've never seen a service get installed,
> that will "uninstall" properly...  (Usually add/remove program doesn't
> uninstall the service)

These ones will :)

If you've got an ExampleService.py which contains the example below, you can
do:
  ExampleService.py install
  ExampleService.py start
  ExampleService.py stop
  ExampleService.py remove

As well as the usual stuff in the control panel... see the docs for the
win32serviceutil module for details.

> I prefer to run the console......reminds me a little bit more of a syslog
> window... >g<

Yeah, but that requires you to be logged in for your server to run.  But I
know what you mean.

Have you seen simpleserv.py in the docs/example directory that came with
Twisted?  It doesn't require mktap or twistd, it just runs standalone -- my
servers all run like that, or optionally as a service via that module I
posted below.  I generally debug them by running them at the command line,
and then install them as a service when I think they're ready to run without
me needing to watch them :)

> > Alternatively, consider using the cygwin version of Python -- it is closer
> > to the unix version, and so os.fork will work.  Also, it comes with gcc, so
> > cbanana would compile correctly.  Unfortunately, I don't think it can
> > interoperate with the Win32 extensions (at least, not that I know of).
> 
> I use the Win32 services, include ODBC... So that's not really a useable
> workaround...

Yeah.  Are you using ODBC via COM (i.e. by calling
win32com.client.Dispatch("ADODB.Connection"))?  If so, you will probably
want to use the mx.ODBC library with Twisted instead, as it can
automatically work with the twisted.enterprise stuff (with a tiny amount of
hackery).

> > Incidentally, I'm not using the twistd stuff *at all* (I don't yet
> > understand the need for it under Windows, but then I don't even know exactly
> > what it's meant to do...).  Instead, I'm using this little file:
> 
> Is the following code "temporary"....  It's considered a service while
> running, but doesn't get installed in the services control panel?

No, it's a full-blown service.  It can be installed as a service, it can be
set to start a startup, etc.

> It looks interesting, but I don't want to register the app as a "true"
> service... As I mentioned before, I can't find a reliable way to remove
> a service, without registry hacking...

Don't worry, that's already taken care of... this is Python, it plays nice
:)

I'll be happy to elaborate further on any of this if you like.  Perhaps I
should whip up an example of installing and using simpleserv.py as a
service?

-Andrew.




From andrew-twisted at puzzling.org  Tue Feb 19 01:19:38 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 17:19:38 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219025543.GA11470@ritsuko.xware.cx>
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com> <20020219025543.GA11470@ritsuko.xware.cx>
Message-ID: <20020219061938.GA14657@ritsuko.xware.cx>

On Tue, Feb 19, 2002 at 01:55:43PM +1100, Andrew Bennetts wrote:
> I'll send it in a private mail.  It's compiled for Python 2.2 on Win2k; it
> should be portable to any Win32, but I'm just guessing about that.

In fact, better than private mail:
    http://poetry.puzzling.org/cBanana.pyd

-Andrew.




From andrew-twisted at puzzling.org  Tue Feb 19 10:34:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Feb 2002 02:34:49 +1100
Subject: [Twisted-Python] twisted.enterprise docs suck
In-Reply-To: <20020201012133.GA19968@ritsuko.xware.cx>
References: <20020130152108.GA6098@ritsuko.xware.cx> <1012519400.15360.40.camel@zelda> <20020201012133.GA19968@ritsuko.xware.cx>
Message-ID: <20020219153449.GA948@frobozz.local>

On Fri, Feb 01, 2002 at 12:21:33PM +1100, Andrew Bennetts wrote:
> If this looks sane to you, I'll update the example and the surrounding text at
> poetry.puzzling.org/twisted_db.html.

Ok, so I finally did this update, but not there.

http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/Introduction_20to_20twisted_2eenterprise

-Andrew.




From carmstro at twistedmatrix.com  Tue Feb 19 11:24:30 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 19 Feb 2002 11:24:30 -0500
Subject: [Twisted-Python] twisted.enterprise docs suck
In-Reply-To: <20020219153449.GA948@frobozz.local>
References: <20020130152108.GA6098@ritsuko.xware.cx>
	<1012519400.15360.40.camel@zelda> <20020201012133.GA19968@ritsuko.xware.cx>
	 <20020219153449.GA948@frobozz.local>
Message-ID: <1014135871.2928.2.camel@radii>

Great! Thanks a lot for putting it on the wiki. My plan to wikify the
documentation is coming together! muahahahahaha!

Anyway, I'm going to be implementing a PB interface to Moin. the
server-side stuff looks to be really easy (despite the MoinMoin code
being a pain - I only need to use a tiny bit of it). I was inspired
yesterday by Emacs' Wiki-mode when Nafai showed it to be, and proclaimed
"I *need* to interface this to a remote moin!" So, hopefully Allen will
help me out in that area ;)

On Tue, 2002-02-19 at 10:34, Andrew Bennetts wrote:
> On Fri, Feb 01, 2002 at 12:21:33PM +1100, Andrew Bennetts wrote:
> > If this looks sane to you, I'll update the example and the surrounding text at
> > poetry.puzzling.org/twisted_db.html.
> 
> Ok, so I finally did this update, but not there.
> 
> http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/Introduction_20to_20twisted_2eenterprise
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From moshez at twistedmatrix.com  Tue Feb 19 08:30:26 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Tue, 19 Feb 2002 07:30:26 -0600
Subject: [Twisted-Python] New HOWTO
Message-ID: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>

I've rewritten my Server HOWTO, and the new version is at
http://twistedmatrix.com/users/moshez/WritingServers.html
Please let me know what you think. In particular, is it better
then the old one?



From tv at twistedmatrix.com  Tue Feb 19 12:25:11 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 19 Feb 2002 19:25:11 +0200
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda>
	<1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii>
	<1013832278.2075.114.camel@troglodyte>
	<1013859768.4603.117.camel@zelda>
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <87pu31wfig.fsf@ki.yok.utu.fi>

Kevin Turner <acapnotic at twistedmatrix.com> writes:

> On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> Is there a way to fix this?  My lack of education, that is.  There's
> more code within the Twisted repository left more me to read, but IIRC
> there are actually very few PB interfaces defined there.  (We have Words
> and Manhole and...?)   More pertinant here would be other applications
> (from the "wilds") which employ Twisted technology.  Are there any such
> 0775 codebases I should be aware of?  The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

        http://mc-foo.sourceforge.net/

        (note that parts of it are sick, but not twisted)

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From sean at twistedmatrix.com  Tue Feb 19 18:35:45 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 19 Feb 2002 17:35:45 -0600
Subject: [Twisted-Python] New HOWTO
In-Reply-To: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEOMCEAA.sean@twistedmatrix.com>

this is a big improvement over the old version!
maybe this should be named something different such as "Implementing a new
protocol using Twisted"?

I wonder how many of the userbase of Twisted are actually going to write
their own protocols and how many are going to use the existing services and
protocols?

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Tuesday, February 19, 2002 7:30 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] New HOWTO


I've rewritten my Server HOWTO, and the new version is at
http://twistedmatrix.com/users/moshez/WritingServers.html
Please let me know what you think. In particular, is it better
then the old one?

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Tue Feb 19 14:47:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:47:08 +0000
Subject: [Twisted-Python] Windows issues...
References: <B896F9B9.5CE4%junkster@rochester.rr.com>
Message-ID: <3C72ABBC.5070704@itamarst.org>

Benjamin Schollnick wrote:


 > 1) setup.py install    died....It stopped when it couldn't find
 > "CL.EXE", while building something in the twisted.spread.cbanana
 > section...

It's trying to compile cBanana and failing since you don't have Visual 
C++. However, cBanana is currently broken and will not be used by 
Twisted in any case, so this doesn't matter.

We really out to distribute win32 .exe installers generated by distutils...




From twisted at itamarst.org  Tue Feb 19 14:48:16 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:48:16 +0000
Subject: [Twisted-Python] Windows issues...
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com> <20020219025543.GA11470@ritsuko.xware.cx> <20020219061938.GA14657@ritsuko.xware.cx>
Message-ID: <3C72AC00.3010207@itamarst.org>

Andrew Bennetts wrote:


> In fact, better than private mail:
>     http://poetry.puzzling.org/cBanana.pyd

Don't bother - cBanana is not used by Twisted at all at this time, since 
we changed the banana protocol in 0.14, and haven't yet updated cBanana.




From twisted at itamarst.org  Tue Feb 19 14:50:21 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:50:21 +0000
Subject: [Twisted-Python] New HOWTO
References: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <3C72AC7D.3090207@itamarst.org>

Moshe Zadka wrote:

> I've rewritten my Server HOWTO, and the new version is at
> http://twistedmatrix.com/users/moshez/WritingServers.html
> Please let me know what you think. In particular, is it better
> then the old one?

Looks good - maybe just add an example of using listenTCP on an app, and 
then showing how to run an app (like simpleserv in the examples) so 
people can have a complete running example.




From twisted at itamarst.org  Tue Feb 19 14:52:49 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:52:49 +0000
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
References: <1013816691.3613.31.camel@zelda> 	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 	<1013887608.1546.19.camel@troglodyte> <1013889210.3613.156.camel@zelda>
Message-ID: <3C72AD11.5000606@itamarst.org>

Glyph Lefkowitz wrote:

 > However, this is a circular problem.  Much of this past week for me
 > has been spent working on a new website for tm.com and trying to
 > come up with introductory documentation for PB.  It needs to be
 > documented, standardized, and released as 1.0 before we can really
 > expect droves of people to come flocking to it.

Yep. However, for clarity, lets not forget twisted.spread the 
implementation is not the same as the PB the protocol. E.g. Perspectives 
are an implementation choice, not part of the protocol. Or how to call 
remote methods - this is an implementation choice, in Java the 
__getattr__ eay isn't even relevant.






From twisted at itamarst.org  Tue Feb 19 15:26:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 20:26:32 +0000
Subject: [Twisted-Python] Object Oriented Database Library For Persistent Storage in Python
Message-ID: <3C72B4F8.4080907@itamarst.org>

Comments?

<http://pyobjfs.sourceforge.net/index.html>




From andrew-twisted at puzzling.org  Wed Feb 20 00:45:08 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Feb 2002 16:45:08 +1100
Subject: [Twisted-Python] Waiting for multiple events
Message-ID: <20020220054508.GA29769@ritsuko.xware.cx>

I have a collection of Deferreds.  When they all complete, I want to trigger
a "all complete" callback (probably via a Deferred).  Alternatively, upon an
error from any of the callbacks, I want to trigger the errback of that
"all complete" Deferred.

Is there something already written to do this?  Or do I need to write it
myself?

-Andrew.




From jlehmann at nsw.bigpond.net.au  Wed Feb 20 05:31:59 2002
From: jlehmann at nsw.bigpond.net.au (John Lehmann)
Date: Wed, 20 Feb 2002 21:31:59 +1100
Subject: [Twisted-Python] New HOWTO
References: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <3C737B1F.93AC41E0@nsw.bigpond.net.au>

I like it but I think you are missing a closing brace on the last
line...

  def getPorts(app, config):
    factory = makeQOTDFactory(config.quote)
    return [(int(config.port), factory]


Moshe Zadka wrote:
> 
> I've rewritten my Server HOWTO, and the new version is at
> http://twistedmatrix.com/users/moshez/WritingServers.html
> Please let me know what you think. In particular, is it better
> then the old one?
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Wed Feb 20 06:47:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Feb 2002 11:47:07 +0000
Subject: [Twisted-Python] Waiting for multiple events
References: <20020220054508.GA29769@ritsuko.xware.cx>
Message-ID: <3C738CBB.7030905@itamarst.org>

Andrew Bennetts wrote:

> I have a collection of Deferreds.  When they all complete, I want to trigger
> a "all complete" callback (probably via a Deferred).  Alternatively, upon an
> error from any of the callbacks, I want to trigger the errback of that
> "all complete" Deferred.
> 
> Is there something already written to do this?  Or do I need to write it
> myself?

# this code is untested

class WaitForCallbacks:

    def __init__(self, count, finishedDeferred):
        self.count = count
        self.callbacks = 0
        self.finishedDeferred = finishedDeferred

    def callback(self, result):
        self.callbacks = self.callbacks + 1
        if self.callbacks == self.count:
            self.finishedDeferred.callback(result)
        return result

    def errback(self, err):
        self.finishedDeferred.errback(err)

# then you make an instance of this class:
o = WaitForCallbacks(5, allComplete)

# any deferred D we want to connect, we do:
D.addCallbacks(o.callback, o.errback)




From moshez at twistedmatrix.com  Fri Feb 22 04:48:33 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Fri, 22 Feb 2002 03:48:33 -0600
Subject: [Twisted-Python] A Complicated Twisted App To Show off
Message-ID: <E16eCJd-0000HY-00@zaibach.twistedmatrix.com>

Many of you might now I'm into role playing games. Recently, I got
addicted to the Champions MUSH, and whined and heard others whine about
the technical problems. Here they are, in no particular order:

* Alts (alternate identities, multiple characters) are hard to manage
* No Web interface
* Lots of needed outside internet support is lacking (connection to the
  weather web site)

In case you're not recognizing the theme, these are exactly the things
Twisted is good at. Other almost cost-free benefits:

* People can read VR e-mail on real life clients (pop3)
* People can compose VR e-mail on real life clients (smtp)
* People can connect with IRC clients (important to me, solved
  in an ugly way)
* Management can be done in lotsa ways (coil, manhole, etc.)

Note I did not mention reality. I don't think reality, based on what
glyph said, would be a good match. The Champions MUSH is much more
"if it's IC to have it, pose having it". Because of the way HERO deals
with items, especially in superheroic campaigns, having 'stuff' is not
really important.

I'm thinking of starting to work on this. Anyone feels like join me?
--  
Moshe Zadka <moshez at twistedmatrix.com>



From twisted at itamarst.org  Sat Feb 23 06:28:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 23 Feb 2002 11:28:18 +0000
Subject: [Twisted-Python] internet.app reports worng errors on bind()ing
References: <871yfmxvn2.fsf@c0re.bewaff.net>
Message-ID: <3C777CD2.1080802@itamarst.org>

Doobee R. Tzeck wrote:

> internet.app assumed 'port already bound' is the only error which
> can happen wen bind()ing. What's about 'premission denied' and
> all the others. This patch fixes that.

OK, I checked in this fix. Thanks!




From twisted at itamarst.org  Sat Feb 23 06:42:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 23 Feb 2002 11:42:54 +0000
Subject: [Twisted-Python] some errors twisted does not handle gracefully
References: <20020205092108.76415.qmail@web10006.mail.yahoo.com>
Message-ID: <3C77803E.9030700@itamarst.org>

Cory Dodt wrote:


> 1) cause: Didn't set 'application' in a config.tac.
> 
> results in this message in the log:
> 
> "05/02/2002 00:50 [-] Python file
> '/home/cdodt/TwistedPlugins/dataconda/config.tac' did not produce an
> application."

OK, I fixed this.

 
> 2) cause: Trying to log in as an Identity that never had a password set


OK, fixed - if no password was set, verifyPassword is always false.


> 3) cause: calling a method with the wrong name on a RemoteReferenced
> object (Perspective, Referenceable, etc.)
...
> Well ok, duh, at least this one I can figure out.  But it should still
> be something more specific: 'RemoteMethodNotImplementedError' for
> example.


I'll let glyph deal with this.


Thanks for the bug reports!




From andrew-twisted at puzzling.org  Mon Feb 25 01:32:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 25 Feb 2002 17:32:29 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
Message-ID: <20020225063229.GA23152@ritsuko.xware.cx>

Hi everyone...

I like the twisted.lumberjack module that was recently added, but I think it
has a small buglet.  It checks the size of the existing log file, but then
opens it in mode "w", truncating it.

Thus, I suggest the last line of LogFile._openFile should change from:
        self._file = open(self.path, "w")
to:
        self._file = open(self.path, "a")

-Andrew.




From twisted at itamarst.org  Mon Feb 25 04:50:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 09:50:39 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>
Message-ID: <3C7A08EF.70906@itamarst.org>

Andrew Bennetts wrote:


> I like the twisted.lumberjack module that was recently added, but I think it
> has a small buglet.  It checks the size of the existing log file, but then
> opens it in mode "w", truncating it.
> 
> Thus, I suggest the last line of LogFile._openFile should change from:
>         self._file = open(self.path, "w")
> to:
>         self._file = open(self.path, "a")

Actually, "a" mode is a bad idea, since according to the docs has 
inconsistent behaviour:
"on *some* Unix systems means that *all* writes append to the end of the 
file, regardless of the current seek position)."

But you're write about that. I'll fix it ASAP. Thanks for the bug report!




From twisted at itamarst.org  Mon Feb 25 05:00:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:00:29 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>
Message-ID: <3C7A0B3D.4050407@itamarst.org>

Andrew Bennetts wrote:

> I like the twisted.lumberjack module that was recently added, but I think it
> has a small buglet.

OK, fixed in CVS, plus I wrote a test to check for this bug.





From twisted at itamarst.org  Mon Feb 25 05:29:57 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:29:57 +0000
Subject: [Twisted-Python] Security issue in SOCKS and Webcoil
Message-ID: <3C7A1225.9050004@itamarst.org>

Both of these when setup using mktap or coil listen on all interfaces. 
So running a mktap generated SOCKS on a firewall means anyone can access 
your internal network, and running coil means anyone can setup a telnet 
python shell or SOCKS proxy remotely.

So, changes we need to make:
SOCKS tap should allow configurin interfaces it will run on.
COIL should allow configuring which interfaces a server can run on, not 
jusy which ports.




From twisted at itamarst.org  Mon Feb 25 05:40:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:40:22 +0000
Subject: [Twisted-Python] Security issue in SOCKS and Webcoil
References: <3C7A1225.9050004@itamarst.org>
Message-ID: <3C7A1496.3090202@itamarst.org>

Itamar Shtull-Trauring wrote:

> So, changes we need to make:
> SOCKS tap should allow configurin interfaces it will run on.

As a result, moshez and I agreed a tap module's getPorts function should 
return a list of Ports, instead of the current method of returning a 
list of (portNo, protocolFactory) tuples. That way a tap can also make 
SSL and UDP ports, set interfaces, and so on.





From andrew-twisted at puzzling.org  Mon Feb 25 18:03:58 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Feb 2002 10:03:58 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <3C7A08EF.70906@itamarst.org>
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org>
Message-ID: <20020225230358.GA453@frobozz.local>

On Mon, Feb 25, 2002 at 09:50:39AM +0000, Itamar Shtull-Trauring wrote:
> Actually, "a" mode is a bad idea, since according to the docs has 
> inconsistent behaviour:
> "on *some* Unix systems means that *all* writes append to the end of the 
> file, regardless of the current seek position)."

I considered that, but when would a log file ever want to do otherwise?

I'd be interested to know what a portable way to append to a file is,
though.

-Andrew.




From twisted at itamarst.org  Mon Feb 25 12:27:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 17:27:33 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local>
Message-ID: <3C7A7405.5040909@itamarst.org>

Andrew Bennetts wrote:


> I considered that, but when would a log file ever want to do otherwise?


"a" also screws up seek()s, which I'll need for the remote log viewing

service. In general, "a" seems like a bad idea since its behavior is
inconsistent.


> I'd be interested to know what a portable way to append to a file is,
> though.


# assuming "file" exists

f = open("file", "r+")

f.seek(0, 2)

see the code I checked in for a complete example.




From grolgh at online.no  Tue Feb 26 09:58:17 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Tue, 26 Feb 2002 15:58:17 +0100
Subject: [Twisted-Python] Bug in twisted.web
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local> <3C7A7405.5040909@itamarst.org>
Message-ID: <052e01c1bed6$06036890$7c2e76d9@delhi>

Yepp,

http://www.twistedmatrix.com/foo/ does the exception-dance, but not http://www.twistedmatrix.com/foo obviously. So, this isn't anything terrible and hard, but I just couldn't recreate the situation here (win2k). Probably fixed, but somebody ought to know.

mvh.
Benjamin Bruheim
Teknisk Leder, In/Out Bergen :: www.inout.no




From andrew at puzzling.org  Mon Feb 25 18:08:12 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Feb 2002 10:08:12 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <3C7A7405.5040909@itamarst.org>
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local> <3C7A7405.5040909@itamarst.org>
Message-ID: <20020225230812.GA1658@ritsuko.xware.cx>

On Mon, Feb 25, 2002 at 05:27:33PM +0000, Itamar Shtull-Trauring wrote:
> Andrew Bennetts wrote:
> >I considered that, but when would a log file ever want to do otherwise?
> 
> "a" also screws up seek()s, which I'll need for the remote log viewing
> service. In general, "a" seems like a bad idea since its behavior is
> inconsistent.

Fair enough.

> >I'd be interested to know what a portable way to append to a file is,
> >though.
> 
> 
> # assuming "file" exists
> 
> f = open("file", "r+")
> 
> f.seek(0, 2)
> 
> see the code I checked in for a complete example.

Ah, of course.  Thanks.

-Andrew.




From cpaul at telemetrybox.org  Wed Feb 27 02:58:29 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 26 Feb 2002 21:58:29 -1000
Subject: [Twisted-Python] Aloha, New Member
Message-ID: <20020226215828.A8361@Skaffen.pdchawaii.com>

Aloha,

My name is Charles Paul, and I am interested in learning more about how to use Twisted. 

Aloha,
Charles



From andreas at mtg.co.at  Wed Feb 27 04:22:20 2002
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 27 Feb 2002 10:22:20 +0100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <20020225230812.GA1658@ritsuko.xware.cx>
References: <20020225063229.GA23152@ritsuko.xware.cx>
	<3C7A08EF.70906@itamarst.org>
	<20020225230358.GA453@frobozz.local>
	<3C7A7405.5040909@itamarst.org>
	<20020225230812.GA1658@ritsuko.xware.cx>
Message-ID: <20020227102220.3a762659.andreas@mtg.co.at>

> On Mon, Feb 25, 2002 at 05:27:33PM +0000, Itamar Shtull-Trauring wrote:
> > 
> > 
> > # assuming "file" exists
> > 
> > f = open("file", "r+")
> > 
> > f.seek(0, 2)
> > 
> > see the code I checked in for a complete example.
Well, this assumes that there is only one writer for the file.
O_APPEND OTOH, when implemented in the kernel (and not emulated
with the above code in the library), makes this as ONE atomic call.
(basically, it seeks to the end of the file before any write). 

>From open(2):
       O_APPEND
              The file is opened  in  append  mode.  Before  each
              write, the file pointer is positioned at the end of
              the file, as if with lseek.  O_APPEND may  lead  to
              corrupted  files  on  NFS file systems if more than
              one process appends data to a file at  once.   This
              is  because  NFS  does  not  support appending to a
              file, so the client  kernel  has  to  simulate  it,
              which can't be done without a race condition.

Basically, in the NFS case the kernel is not able to do it atomic
so there might be problems.

Side note: It's quite acceptable to use seek/read with an O_RDWR|O_APPEND file. 
It's just automatically seeks to the end before writing. So O_APPEND is quite useful.


Andreas



From twisted at itamarst.org  Tue Feb 26 15:59:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Feb 2002 15:59:39 -0500
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>	<3C7A08EF.70906@itamarst.org>	<20020225230358.GA453@frobozz.local>	<3C7A7405.5040909@itamarst.org>	<20020225230812.GA1658@ritsuko.xware.cx> <20020227102220.3a762659.andreas@mtg.co.at>
Message-ID: <3C7BF73B.6050705@itamarst.org>

Andreas Kostyrka wrote:


> Well, this assumes that there is only one writer for the file.

The code in twisted.python.log assures that there is only one writer at 
any given time. We want to do this on the Python side, not using OS 
features, in order to make the code as portables as possible.




From glyph at twistedmatrix.com  Thu Feb 28 02:20:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 28 Feb 2002 01:20:06 -0600
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <20020226215828.A8361@Skaffen.pdchawaii.com>
References: <20020226215828.A8361@Skaffen.pdchawaii.com>
Message-ID: <1014880806.7425.74.camel@zelda>

Excellent!  Great to hear it, Charles.

I'm currently in the process of writing documentation and smoothing the
learning curve for new users of the framework, but I've got a lot to do
(and I'm swamped with more mundane things at work right now (and I'll be
heading out of town (back on monday (do you like parenthetic
expressions?  (I sure do. (yay for lisp)))))).

So unfortunately our documentation is far from complete.  Can you give
some clues as to what you want to use Twisted for?  I'll try to answer
any questions you might have; in the meanwhile, poke around the
"Documentation" section on http://twistedmatrix.com/.

On Wed, 2002-02-27 at 01:58, cpaul at telemetrybox.org wrote:
> Aloha,
> 
> My name is Charles Paul, and I am interested in learning more about how to use Twisted. 
> 
> Aloha,
> Charles
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20020228/3fc78764/attachment.pgp 

From andrew-twisted at puzzling.org  Thu Feb 28 19:58:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Mar 2002 11:58:06 +1100
Subject: [Twisted-Python] Unused variables in doSelect
Message-ID: <20020301005806.GA12720@ritsuko.xware.cx>

This is a minor thing, but...

doSelect has the following comment (in 0.15.2):
             # Since this loop should really be as fast as possible,
             # I'm caching these global attributes so the interpreter
             # will hit them in the local namespace.
             reads=reads,
             writes=writes,
             rhk=reads.has_key,
             whk=writes.has_key):

But rhk and whk are unused.

Further on in the function, it does:
    for selectables, method, dict in ((r, "doRead", reads),
                                      (w,"doWrite", writes)):
        hkm = dict.has_key

I suggest that either the rhk and whk variables are removed for clarity, or
that that for loop becomes:

    for selectables, method, dict, hkm in ((r, "doRead", reads, rhk),
                                           (w,"doWrite", writes, whk)):

Incidentally, the reason why I'm looking at doSelect in the first place is that
something seems to have changed in 0.15.2 (since 0.15.0) that (on Windows at
least) prevents Ctrl-C or Ctrl-Break from interrupting the process immediately
-- it can take up to a minute for it to respond.  I haven't yet figured out
why, there's nothing obvious wrong.  This also applies to stopping it when
running as a Win NT service.  On the other hand, it no longer constantly uses
1% of the cpu even when idle.  I can reproduce this behaviour with
simpleserv.py, so it's not my code causing it :)

I wouldn't mind looking over the cvs history to look for relevant changes, but
the CVSWeb link is missing from the new website.

Regards,

-Andrew.




From twisted at itamarst.org  Thu Feb 28 04:00:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2002 04:00:39 -0500
Subject: [Twisted-Python] Unused variables in doSelect
References: <20020301005806.GA12720@ritsuko.xware.cx>
Message-ID: <3C7DF1B7.30701@itamarst.org>

Andrew Bennetts wrote:

 > Incidentally, the reason why I'm looking at doSelect in the first
 > place is that something seems to have changed in 0.15.2 (since
 > 0.15.0) that (on Windows at least) prevents Ctrl-C or Ctrl-Break
 > from interrupting the process immediately -- it can take up to a
 > minute for it to respond.  I haven't yet figured out why, there's
 > nothing obvious wrong.  This also applies to stopping it when running
 > as a Win NT service.  On the other hand, it no longer constantly
 > uses 1% of the cpu even when idle.  I can reproduce this behaviour
 > with simpleserv.py, so it's not my code causing it :)

OK, I figured out what the issue is - glyph changed the selec.tselect() 
so that it doesn't get a timeout, so it basically freezes until it gets 
a connection (unless you have a Delayed). Apparently on Windows the 
select() system call an't be interrupted.

Workaround:
Add a Delayed with a timeout of 0.01 so the select loop doesn't freeze?

Real Solution:
Win32 API event loop. Patches accepted.




From twisted at itamarst.org  Thu Feb 28 19:32:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2002 19:32:12 -0500
Subject: [Twisted-Python] Twisted DNS issues
Message-ID: <3C7ECC0C.2050806@itamarst.org>

<itamar> next, if you fail to connect to a DNS server, you get a traceback
<itamar> something about passing extra args to connectionLost
<moshez> itamar: yeah, I know.
<moshez> itamar: ugh.
<itamar> now, moving onwards
<itamar> consider this code:
<moshez> itamar: I didn't know about that
<itamar> r = dns.ResolveConfResolver()
<itamar> d = defer.Deferred().addCallback(printer).addErrback(printer)
<itamar> d.arm()
<itamar> r.resolve(d, "www.zoteca.com")
<itamar> the result should be that printer() is based the IP, right?
<itamar> but it doesn't
<moshez> itamar: whatis it?
<itamar> because in SentQuery.getAnswer, we do:
<itamar> process = getattr(self, 'processAnswer_%d' % 
message.answers[0].type, None)
<itamar>         if process is None:
<itamar>             self.errback(
<itamar> etc.
<itamar> now, the first of the answers always seems to have type 5
<itamar> answers[1], 2, etc. seem to have the content
<itamar> so it always fails
<itamar> because you don't have processAnswer_5
<moshez> itamar: oh, I see.
<itamar> conclusion: DNS needs a good accepttests suite




From andrew at puzzling.org  Thu Feb 28 21:50:03 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Mar 2002 13:50:03 +1100
Subject: [Twisted-Python] Unused variables in doSelect
In-Reply-To: <3C7DF1B7.30701@itamarst.org>
References: <20020301005806.GA12720@ritsuko.xware.cx> <3C7DF1B7.30701@itamarst.org>
Message-ID: <20020301025003.GA13791@ritsuko.xware.cx>

On Thu, Feb 28, 2002 at 04:00:39AM -0500, Itamar Shtull-Trauring wrote:
> OK, I figured out what the issue is - glyph changed the selec.tselect() 
> so that it doesn't get a timeout, so it basically freezes until it gets 
> a connection (unless you have a Delayed). Apparently on Windows the 
> select() system call an't be interrupted.

Ah!  Thank you, that explains it perfectly.

Incidentally, I haven't yet tested this under cygwin, I suspect its version
of Python would allow select to be interrupted..

> Workaround:
> Add a Delayed with a timeout of 0.01 so the select loop doesn't freeze?

Hmm, 0.5 or 1 is plenty for what I need.

> Real Solution:
> Win32 API event loop. Patches accepted.

Heh :)

I'll look into it, but I'm no Win32 API guru -- maybe it's time I learnt ;).
I've looked at win32event module a little before, so I'll see what I can do.

-Andrew.




From slt5v at cc.usu.edu  Fri Feb  1 02:27:56 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Fri, 1 Feb 2002 02:27:56 -0700
Subject: [Twisted-Python] IM feature requests
Message-ID: <20020201092756.GE13679@nafai.dynodns.net>

Hey all,
  I am excited for the new GTK IM client that is in CVS.  I've been
  happy with its features thus far -- pretty good for a program that is
  so new.  Anyway, since I am in some strange e-mail writing mood, I
  thought I would document for the world (or at least those planning on
  working on GTK IM in the near future) some of my feature requests for
  t-im, so that it becomes very useful for me.  These aren't all high
  priority, and I myself might want to try to add some of these.  But
  it's just a list for the world to see:

  1.  Tabbed interface.  I would prefer that it all be in one window
  instead of all separate.  Especially if I have multiple private
  conversations going on, and am on multiple channels.  Hopefully this
  one won't be too hard, since we have Glade at our disposal.

  2.  Tab completion.  This one actually doesn't look too hard to add,
  and if no one is planning on this one, I might try it this weekend,
  with a little help.  I'm so used to my IRC clients completing nicks
  for me when I press tab that I feel deprived without it.

  3.  Nick highlighting.  Highlighting messages directed towards you.

  4.  /me working.  I'm getting used to seeing /me a lot.  That's
  probably a words thing.

  5.  Hi-light tab titles to indicate activity.  IIRC, X-Chat highlights
  with one color for normal activity in a non-active tab, and another if
  your nick was mentioned.

  6.  Keyboard control.  Shortcut keys for everything -- switching tabs,
  etc.

  7.  Integrated contact management.  Okay, this one is my deal.  Should
  be fun.

  8.  The kitchen sink.  I would love for this to be the ultimate
  communication tool for me.  Does words support file transfer?
  Something akin to /dcc?  What about the whiteboard thingy that somone
  (was it Acap?) was working on a long time ago?  Just the ultimate!

  Good work and I will try to contribute how I can!

Nafai



From twisted at itamarst.org  Fri Feb  1 04:52:31 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Feb 2002 13:52:31 +0200
Subject: [Twisted-Python] IM feature requests
References: <20020201092756.GE13679@nafai.dynodns.net>
Message-ID: <3C5A817F.90606@itamarst.org>

Travis B. Hartwell wrote:


>   2.  Tab completion.  This one actually doesn't look too hard to add,
>   and if no one is planning on this one, I might try it this weekend,
>   with a little help.  I'm so used to my IRC clients completing nicks
>   for me when I press tab that I feel deprived without it.

And if we could have ry support, so it does autocomplete for e at ircnet, 
that'd be even better ;)




From twisted at itamarst.org  Fri Feb  1 12:11:09 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 01 Feb 2002 21:11:09 +0200
Subject: [Twisted-Python] RFC: Dropping support for Python versions prior to 2.1
Message-ID: <3C5AE84D.6010907@itamarst.org>

Hi,

We've been discussing dropping support in Twisted for versions of Python 
prior to 2.1. There will be a number of limitation for people developing 
Twisted itself, though not, of course for people *using* Twisted - the 
coding standard will probably disallow list comprehensions, print>>, and 
import X as Y.

On the plus side, 2.1 will allow use of new features such as weak 
references, string object methods and so on. Additionaly, pyOpenSSL does 
not run on Python 1.5.2. On the other hand, 2.1 is less commonly 
installed than 1.5.2.

So, do any of you (users and developers) mind if 1.5.2 is no longer 
supported? If so, this is the time to speak out and say so.




From ivo at amaze.nl  Sat Feb  2 02:54:28 2002
From: ivo at amaze.nl (Ivo van der Wijk)
Date: Sat, 2 Feb 2002 10:54:28 +0100
Subject: [Twisted-Python] RFC: Dropping support for Python versions prior to 2.1
In-Reply-To: <3C5AE84D.6010907@itamarst.org>; from twisted@itamarst.org on Fri, Feb 01, 2002 at 09:11:09PM +0200
References: <3C5AE84D.6010907@itamarst.org>
Message-ID: <20020202105428.B30432@amaze.nl>

On Fri, Feb 01, 2002 at 09:11:09PM +0200, Itamar Shtull-Trauring wrote:
> Hi,
> 
> We've been discussing dropping support in Twisted for versions of Python 
> prior to 2.1. There will be a number of limitation for people developing 
> Twisted itself, though not, of course for people *using* Twisted - the 
> coding standard will probably disallow list comprehensions, print>>, and 
> import X as Y.
> 
> On the plus side, 2.1 will allow use of new features such as weak 
> references, string object methods and so on. Additionaly, pyOpenSSL does 
> not run on Python 1.5.2. On the other hand, 2.1 is less commonly 
> installed than 1.5.2.
> 
> So, do any of you (users and developers) mind if 1.5.2 is no longer 
> supported? If so, this is the time to speak out and say so.
> 

I would. Unfortunately, 1.5.2 is still the default install with redhat
systems (which are quite alot). I'm using Twisted to write gtk network
applications (such as an irc / msn client), and it's very usefull that
people can use the default pytgtk/glade packages that come with their
distribution. Requiring that people upgrade to 2.1, along with pygtk, 
pyglade (and of course install Twisted on top of that) may prevent 
people from using my applications at all.

I wouldn't mind parts of twisted being 2.x only - I only use the 
protocol/tcp parts of Twisted at this moment.

With regards,

	Ivo

-- 
Drs. I.R. van der Wijk                              -=-
Brouwersgracht 132                      Amaze Internet Services V.O.F.
1013 HA Amsterdam, NL                               -=-
Tel: +31-20-4688336                       Linux/Web/Zope/SQL/MMBase
Fax: +31-20-4688337                           Network Solutions
Web:     http://www.amaze.nl/                    Consultancy
Email:   ivo at amaze.nl                               -=-



From twisted at itamarst.org  Sat Feb  2 07:05:27 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 02 Feb 2002 16:05:27 +0200
Subject: [Twisted-Python] Call Profiler - profile your Zope website
Message-ID: <3C5BF227.2060302@itamarst.org>

This sounds like a useful functionality for us:
<http://www.zope.org/Members/richard/CallProfiler/>

This is infrastructure for profiling specific requests, as opposed to 
the whole server, so it's much more useful for figuring out why your PB 
or web request is slow.




From jason at crash.org  Sat Feb  2 12:12:41 2002
From: jason at crash.org (Jason Asbahr)
Date: Sat, 2 Feb 2002 13:12:41 -0600
Subject: [Twisted-Python] Behold: Shirts
In-Reply-To: <7F71ABFE-1462-11D6-9D26-000393753460@crash.org>
Message-ID: <D40EACE0-1810-11D6-B119-000393753460@crash.org>

FYI, my shirt arrived on Jan 31.  If you haven't ordered yet, and still 
want to, consider having it shipped 2-day to your hotel....

J

On Monday, January 28, 2002, at 08:47 PM, Jason Asbahr wrote:

>
> Glyph has set up a CafePress storefront -- now you too can be proudly 
> emblazoned with the Twisted Logo!
>
> http://www.cafepress.com/twistedlabs
>
>
> Jason
>
> (I went ahead and paid the outrageous 2nd day air shipping to make sure 
> my shirt arrives before IPC 10...)
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From corydodt at yahoo.com  Mon Feb  4 12:57:52 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Mon, 4 Feb 2002 11:57:52 -0800 (PST)
Subject: [Twisted-Python] twistd-debug doesn't ken plugins
Message-ID: <20020204195752.85420.qmail@web10001.mail.yahoo.com>

$ ./twistd dataconda (with a plugin named dataconda) ... starts twistd
$ ./twistd-debug dataconda
Traceback (most recent call last):
  File "/usr/bin/twistd-debug", line 43, in ?
    app = cPickle.load(open(sys.argv[1]))
IOError: [Errno 2] No such file or directory: 'dataconda'

Nuff said :)

__________________________________________________
Do You Yahoo!?
Great stuff seeking new owners in Yahoo! Auctions! 
http://auctions.yahoo.com



From slt5v at cc.usu.edu  Mon Feb  4 20:16:28 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Mon, 4 Feb 2002 20:16:28 -0700
Subject: [Twisted-Python] IM: Design ideas
Message-ID: <20020205031628.GA13029@nafai.dynodns.net>

Hey all,

  I hope y'all at IPC10 are having enough fun for the lot of us.
  Also, I hope y'all don't get annoyed with my constant feature
  requests and ideas and no code (as of yet).  I hope to change that.
  But, in the meantime, I'm going to continue to throw out my ideas.
  Please tear it apart, kill it, praise it, or whatever you wish!

  As many of you know, I'm primarily a text-mode (console/xterm/ssh)
  and screen kind of guy, though I do live in X when I'm at home.
  (Gotta love the maximaxed, borderless xterms!)  Anyway, I also am
  really enjoying the new GTK IM and the possibilities that it can
  offer.  I am willing to shift to it as my primary communication
  client, ditching epic4 for IRC.  But, I really need to be able to
  connect to my client from ssh -- using VNC really doesn't work that
  well from my cable modem to campus.  I could just disconnect from
  GTK IM when I leave in the morning and connect via epic under screen
  and then reconnect via GTK IM at night.  But that is a hassle.

  This is what I propose, and ask if this is possible or plausible:
  Add another layer between GTK IM and the [twisted.words/TOC/IRC]
  supports.  This layer will have no UI, but will act as an abstract
  client for those support services.  It will keep track of all
  activity on your joined channels, any /msgs, etc.  Then, a UI client
  will connect to this layer thingamajig.  It will be able to display
  all of the activity that has taken place while disconnected and then
  will communicate with the twisted.words server via the layer
  thingamajig.  Then, I need to write a text-mode client for this
  (grrr, the annoying part) so I can just re-connect with that when I
  ssh into my box, but then later re-attach the GTK client, taking me
  back to where it was in the text-mode client.

  I don't think I'm being very clear, so I hope y'all understand.
  Either one of the clients can automatically start the layer
  thingamajig if it isn't already running, so those who don't want the
  detachable capability will use the client unawares.

  Good, bad, ugly, dumb?  How hard?

Nafai

  



From corydodt at yahoo.com  Tue Feb  5 02:21:08 2002
From: corydodt at yahoo.com (Cory Dodt)
Date: Tue, 5 Feb 2002 01:21:08 -0800 (PST)
Subject: [Twisted-Python] some errors twisted does not handle gracefully
Message-ID: <20020205092108.76415.qmail@web10006.mail.yahoo.com>

I'm trying to make a catalog of these.  Twisted needs to have
better-defined exceptions for certain conditions instead of relying on
Python to report the error via tracebacks.  More specific errors would
allow the developer to more quickly track down the problem. 
Furthermore,
programmatic handling of exceptions in the client should be feasible. 
Handling a TypeError that could be a bug in your code the same as an
unauthorized-client-action style error means you have to accept that
bugs
in your code will be masked if you catch these.

Here's the list:


1) cause: Didn't set 'application' in a config.tac.

results in this message in the log:

"05/02/2002 00:50 [-] Python file
'/home/cdodt/TwistedPlugins/dataconda/config.tac' did not produce an
application."

This isn't gross, but there's no reason not to give more information
here.
 Even though I knew about this requirement, I had forgotten about it and
renamed a variable, resulting in this situation.  The log message wasn't
helpful in reminding me.  It should be just a little more specific:
"config.tac must set a variable named 'application'.  No application was
produced."


2) cause: Trying to log in as an Identity that never had a password set

Traceback! exceptions.TypeError, argument must be string or read-only
buffer, not None
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:759:_recvMessage
/usr/lib/python2.1/site-packages/twisted/spread/flavors.py:155:remoteMessageReceived
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:958:remote_respond
/usr/lib/python2.1/site-packages/twisted/cred/identity.py:123:verifyPassword

This one is pretty ugly.  It's valid to have an Identity with no password.
(If it isn't, then you shouldn't be able to create one.)  In my case,
it just means that user can't log in.  If we must throw an exception
here,
throw "IdentityWithNullPasswordError" or something like that, and better
yet, name the identity with the problem.


3) cause: calling a method with the wrong name on a RemoteReferenced
object (Perspective, Referenceable, etc.)

Traceback! exceptions.AttributeError, LobbyUser instance has no
attribute 'perspective_xxx'
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:759:_recvMessage
/usr/lib/python2.1/site-packages/twisted/spread/pb.py:194:perspectiveMessageReceived

Well ok, duh, at least this one I can figure out.  But it should still
be something more specific: 'RemoteMethodNotImplementedError' for
example.

I will send more as I find them.

Thanks!
C


__________________________________________________
Do You Yahoo!?
Send FREE Valentine eCards with Yahoo! Greetings!
http://greetings.yahoo.com



From acapnotic at twistedmatrix.com  Tue Feb  5 14:46:20 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 05 Feb 2002 13:46:20 -0800
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <20020205031628.GA13029@nafai.dynodns.net>
References: <20020205031628.GA13029@nafai.dynodns.net>
Message-ID: <1012945580.1645.36.camel@troglodyte>

On Mon, 2002-02-04 at 19:16, Travis B. Hartwell wrote:
>   This is what I propose, and ask if this is possible or plausible:
>   Add another layer between GTK IM and the [twisted.words/TOC/IRC]
>   supports.  This layer will have no UI, but will act as an abstract
>   client for those support services.  It will keep track of all
>   activity on your joined channels, any /msgs, etc.  Then, a UI client
>   will connect to this layer thingamajig.

What I'm thinking is that this layer could be a local, personal Words
service.  It has pretty much the interface you need, as it keeps track
of what channels you're on, receives messages, etc.  You'd set this
words service up as a client (or perhaps a peer) to the shared server,
and then your front-end would connect to your personal server.  It
certainly makes the clients easy enough to write =) and you can plug in
other capabilities by having other agent-programs log in to your
personal server too.

I'm still a bit under the weather, so I don't know how lucid I'm being,
but does this spark anything for you?




From slt5v at cc.usu.edu  Tue Feb  5 15:01:54 2002
From: slt5v at cc.usu.edu (Travis B. Hartwell)
Date: Tue, 5 Feb 2002 15:01:54 -0700
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <1012945580.1645.36.camel@troglodyte>
References: <20020205031628.GA13029@nafai.dynodns.net> <1012945580.1645.36.camel@troglodyte>
Message-ID: <20020205220154.GA1769@nafai.dynodns.net>

On Tue, Feb 05, 2002 at 01:46:20PM -0800, Kevin Turner wrote:
> What I'm thinking is that this layer could be a local, personal Words
> service.  It has pretty much the interface you need, as it keeps track
> of what channels you're on, receives messages, etc.  You'd set this
> words service up as a client (or perhaps a peer) to the shared server,
> and then your front-end would connect to your personal server.  It
> certainly makes the clients easy enough to write =) and you can plug in
> other capabilities by having other agent-programs log in to your
> personal server too.
> 
> I'm still a bit under the weather, so I don't know how lucid I'm being,
> but does this spark anything for you?

This is roughly what I was thinking.  Part of the reason I was somewhat
hazy in my mail is that I don't really know how words works.  If this
can cache all events and messages for me, it would be great.  Now if we
can just get the word from the big wigs.

Naf



From acapnotic at twistedmatrix.com  Tue Feb  5 22:21:59 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 05 Feb 2002 21:21:59 -0800
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <20020205220154.GA1769@nafai.dynodns.net>
References: <20020205031628.GA13029@nafai.dynodns.net>
	<1012945580.1645.36.camel@troglodyte> 
	<20020205220154.GA1769@nafai.dynodns.net>
Message-ID: <1012972919.2143.12.camel@troglodyte>

On Tue, 2002-02-05 at 14:01, Travis B. Hartwell wrote:
> On Tue, Feb 05, 2002 at 01:46:20PM -0800, Kevin Turner wrote:
> > What I'm thinking is that this layer could be a local, personal Words
> > service.
...]
> If this
> can cache all events and messages for me, it would be great.

Well, of course, there are a few things standing between this concept of
the personal Words server and using it in reality.  One thing is that
nobody's done a Words service to Words service connection yet, whether
it be oriented towards linking several public servers, or using a
personal server as a Words client.

The other is that no, there's no cacheing or spooling done by the Words
service, so you'd have to add that in too.

One question I might ask here is, what is it that you really want to
do?  I currently leave an IRC client running under 'screen' in some
places, but I think that if I had access to full logs of that channel, I
wouldn't need to leave a personal client connected.  Thus the desire for
the stenobot.

What other needs does this Words personal proxy serve?

 - Kevin




From z3p at twistedmatrix.com  Tue Feb  5 21:43:44 2002
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Tue, 5 Feb 2002 23:43:44 -0500
Subject: [Twisted-Python] IM: Design ideas
In-Reply-To: <1012945580.1645.36.camel@troglodyte>
References: <20020205031628.GA13029@nafai.dynodns.net>
Message-ID: <3C606E30.27727.1F259F1@localhost>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On 5 Feb 2002 at 13:46, Kevin Turner wrote:

> On Mon, 2002-02-04 at 19:16, Travis B. Hartwell wrote:
> >   This is what I propose, and ask if this is possible or plausible:
> >   Add another layer between GTK IM and the [twisted.words/TOC/IRC]
> >   supports.  This layer will have no UI, but will act as an abstract
> >   client for those support services.  It will keep track of all
> >   activity on your joined channels, any /msgs, etc.  Then, a UI client
> >   will connect to this layer thingamajig.
> 
> What I'm thinking is that this layer could be a local, personal Words
> service.  It has pretty much the interface you need, as it keeps track
> of what channels you're on, receives messages, etc.  You'd set this
> words service up as a client (or perhaps a peer) to the shared server,
> and then your front-end would connect to your personal server.  It
> certainly makes the clients easy enough to write =) and you can plug in
> other capabilities by having other agent-programs log in to your
> personal server too.
> 
> I'm still a bit under the weather, so I don't know how lucid I'm being,
> but does this spark anything for you?

The problem with just having a local Words service is that it doesn't 
deal with other protocols.  Running a local service for every protocol 
you want to connect to would be a pain.  Another idea (perhaps closer to 
what Nafai wanted) is to have an "Instance Messenger" PB service, with 
methods like addAccount(), signOnAccount(), sendMessage(), joinGroup(), 
etc.  The PB service would call back with methods like gotMessage() and 
joinedGroup().  When the UI is disconnected from the service, it logs 
messages, and when a UI reconnects, it sends the log messages so the UI 
is caught up.
	The only issue I see with this is configuration.  Perhaps all 
configuration could be just only with GTK-IM?  Writing complex UI-
indepdent anything is hard, and it would probably be easiest to restrict 
it to GTK-IM with the Glade Account Manager.
- -p
- --
       Paul Swartz
(o_    http://www.twistedmatrix.com/users/z3p.twistd/  _o)
//\    z3p at twistedmatrix.com                           /\\
V_/_   AIM: z3penguin                                 _\_V->

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (MingW32)
Comment: For info see http://www.gnupg.org

iEYEARECAAYFAjxgtIEACgkQ/0FqBhns6q3IhACfYx8vZxWwK0xk6tzufOsS7SWa
TgsAn1SmSf9+7Gd2aCBooIiiZAwCXEdN
=Tbdv
-----END PGP SIGNATURE-----




From shandy at geeky.net  Fri Feb  8 02:23:58 2002
From: shandy at geeky.net (Shandy Brown)
Date: 08 Feb 2002 04:23:58 -0500
Subject: [Twisted-Python] Documentation
Message-ID: <1013160238.25156.25.camel@shitbox>

Hi.

Glyph invited me to share my thoughts about the state of Twisted
Documentation, and why I chose not to use Twisted in my project,
Metagame-Sector ( http://sjbrown.geeky.net/metagame-sector/ ).  I guess
the best way to explain why I didn't choose Twisted is to look at what I
did choose, SimpleXMLRPCServer (
http://www.python.org/doc/current/lib/simple-xmlrpc-servers.html ).

My project and my attitudes are such that I don't want to spend a lot of
time on client-server implementation.  I already  had a working
'standalone' implementation, and I wanted to add on the client-server
"Feature".  And for this, XMLRPCServer was great.  To make my Game
object listen for requests on the internet, all i had to do was call
register_instance( myGame )  (ok, it was a little more complicated than
that -- i had to resolve threading and pickling issues, but that got me
started )  I was able to read this article:

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81549

and the SimpleXMLRPCServer docs linked above, and I was good to go. 
Some say a picture is worth a thousand words;  When learning APIs, an
example (as above) is worth a thousand help()s.

In comparison, Twisted offerred me this as documentation:

http://www.twistedmatrix.com/page.epy/docs/writing-servers.html

In a *subjective* nutshell, this is hard to read.  Also, coming from my
background, it doesn't tell me how do do what I want to do, which is:
extend my already existing class to make it listen to the internet for
requests.  An ***example*** would really help out here.

Hope this helps let you understand one outsider's view of the
documentation.

sjbrown


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020208/63ae9d91/attachment.sig>

From glyph at twistedmatrix.com  Sun Feb 10 19:17:14 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 10 Feb 2002 20:17:14 -0600
Subject: [Twisted-Python] International Python Conspiracy 10
Message-ID: <1013393835.427.1.camel@zelda>

Some members of the Twisted development team, including myself, attended
IPC10 this last week.  ( http://www.python10.com/ )

In general, the conference was a huge success.  The talk that Moshe
Zadka and I gave was heavily attended.  Various materials related to the
conference, including photos, the paper, and erratta are available at:

        http://twistedmatrix.com/users/glyph/ipc10

There will probably be a few more additions, since I've been really busy
after getting back from the conference.

Also, most of the Twisted development team met in meatspace for the first time.

If you were there, either at the paper presentation or at the Birds of a
Feather session, thanks for dropping by!  We got some good feedback from the
people who attended both of these, and that was mainly that our key problem is
(surprise) documentation.

It was hard to decide what features of the conference to describe in detail
here, since I had a lot of fun and met a lot of people, so I'll focus on what
impact these things will have on the future development of Twisted itself.

There was an incredible amount of interest in Twisted; I found that often,
rather than trying to generate interest, I was having to keep people's
expectations low.  The chief reason was that Twisted doesn't have very good
documentation, and so it's difficult for end-users to get into it.  I had
underestimated how useful something like Twisted could be to the average web
developer.

Currently I'm trying to develop a documentation strategy, and I'm still not
sure what form it will take.  If you are interested in writing documentation,
but don't understand Twisted well enough to do so, please contact me and let me
know what information you need to get started.  The file doc/index.html in the
distribution is an outline of the docs we need -- there is nobody signed up to
work on them yet.  A few people have mentioned their interest, and if we're
lucky, enough time will clear up in all of our schedules to permit working on
that.

While Developer Day was going on, the Twisted team met outside the conference
to talk about the Version 1.0 release strategy.  I'd like to get to 1.0 by
about april, since I think we've already got a lot of functionality, and one of
the things that's making it difficult to document is that it changes all the
time.

It is easiest to define release criterea when your test suites are written by
someone else.  We hope to leverage that by using use-cases derived from other
sorts of server software for those parts of Twisted which are not really
integrated: we can tell when twisted.mail is at the postfix/qmail level of mail
application, when twisted.web can compete with apache, and when twisted.names
can replace BIND.  Those are all going to be release criterea, but we also need
some way to decide when our integration between services is good enough.  Since
including them in this email was making it rediculously long, I've put up a
webpage that is a first draft at figuring out what we need for 1.0:

        http://twistedmatrix.com/users/glyph/twisted/one-point-oh.html

Twisted Developers (especially those not at IPC10), your comments are
appreciated.

Hope to see you all there next year!


-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020210/968849d5/attachment.sig>

From acapnotic at twistedmatrix.com  Sun Feb 10 22:06:45 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 10 Feb 2002 21:06:45 -0800
Subject: [Twisted-Python] Words.Participant capabilities
Message-ID: <1013404005.3767.18.camel@troglodyte>

So, I was looking at doing /whois for words.ircservice, and found that
lots of accessors weren't available, and there may be a bunch of
questions as to whether they should be.

One central question is "Do queries about a participant get answered by
the server, or by the participant's client?"  Having the server answer
the questions is faster and cuts down on traffic, particularly if it's a
question that everyone is frequently going to be asking about everyone
else.  But letting the client provide the answers gives the client more
freedom to protect their privacy by refusing to answer, or lying, etc. 
("No...  she's not home.  Really.  You just missed her.  No, that's not
her voice in the background, that's just the TV.")

More specific points:

There's no way for a Words client to determine the online status of
another Participant without adding that person to their contact list. 
Should there be?  Almost definately.  Unless for some reason you *want*
them to have to go through the hurdle of getting you added to their
contact list.

More user information.  Should a Words client be able to look up another
Participant and maybe find out what their Identity is, and maybe get a
few bits of meta-data out of that?  Anything from a single IRCNAME-style
string to a contact-manager VCard.

Server descriptions.  The best I've seen is something like
self.service.serviceName, which in practice always yields
"twisted.words".  How can we get something more descriptive, like "The
Official Words Service Of The 2002 Olympics" or
"pb://192.168.0.2/twisted.words/"?

When we get inter-server connections going, do we want to disclose which
server a participant initially signed on to?  Do we want to disclose the
internet address of the participant's client?

Away messages and idle times.  Words doesn't have these.  Should it?

That's all for now,

 - Kevin, 
   (who is still NOT wasting coding time on IRC servers.)

-- 
The moon is new, 1.9% illuminated, 28.2 days old.




From carmstro at twistedmatrix.com  Mon Feb 11 00:14:07 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 02:14:07 -0500
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013404005.3767.18.camel@troglodyte>
References: <1013404005.3767.18.camel@troglodyte>
Message-ID: <1013411649.3645.41.camel@radii>

Some quick notes. They're really ideas and opinions, even though it
sounds like I'm telling you what to do. :D

On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> One central question is "Do queries about a participant get answered by
> the server, or by the participant's client?"

Let the server handle user-status queries, but let the client tell the
server how to respond to them.

> More specific points:
> 
> There's no way for a Words client to determine the online status of
> another Participant without adding that person to their contact list. 
> Should there be?  Almost definately.  Unless for some reason you *want*
> them to have to go through the hurdle of getting you added to their
> contact list.

Let the user-who-is-being-queried specify how they want this to be
answered.

> More user information.  Should a Words client be able to look up another
> Participant and maybe find out what their Identity is, and maybe get a
> few bits of meta-data out of that?  Anything from a single IRCNAME-style
> string to a contact-manager VCard.

Again, let the client specify.

OK, I'm noticing a pattern here. This "capabilities" issue has been
popping up a *lot* recently, so maybe some sort of generalized
"capability system" might crop up out of this (ie, a way to grant or
deny capabilities between perspectives (or identities?)). something to
think about.

> Server descriptions.  The best I've seen is something like
> self.service.serviceName, which in practice always yields
> "twisted.words".  How can we get something more descriptive, like "The
> Official Words Service Of The 2002 Olympics" or
> "pb://192.168.0.2/twisted.words/"?

I'm not sure where you're going with this point, but I get an odd
pleasure out of seeing "pb://". 

> When we get inter-server connections going, do we want to disclose which
> server a participant initially signed on to?  Do we want to disclose the
> internet address of the participant's client?

I *definitely* don't want to allow clients to get IPs of other clients
without explicit consent. After living on dalnet for a few years, where
kiddies DDoS you for looking at them the wrong way, I've been locked
into this opinion. And the server thing - I don't see any harm, but why
does it matter? (that is, if you can think of a reason to do it, I don't
think there's any problem with doing it)

> Away messages and idle times.  Words doesn't have these.  Should it?

Yeah.

> That's all for now,

So yeah, unless there's some reason to give access to information about
a user/server other than "because it's in /whois", then I don't really
see the point.

>  - Kevin, 
>    (who is still NOT wasting coding time on IRC servers.)

We believe you. Keep up the good work on hacking not-IRC, anyhow. :-D

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From moshez at twistedmatrix.com  Mon Feb 11 04:31:20 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Mon, 11 Feb 2002 05:31:20 -0600
Subject: [Twisted-Python] http://www.cs.wustl.edu/~schmidt/patterns-ace.html
Message-ID: <E16aEg4-0001mg-00@zaibach.twistedmatrix.com>

Do we have this in Python?




From kendall at monkeyfist.com  Mon Feb 11 12:09:14 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 13:09:14 -0600
Subject: [Twisted-Python] subclassing twisted.web?
Message-ID: <15464.5850.340517.261097@cmpu.net>

Hi,

I'm playing around with some REST ideas[1], and I want to use this
approach to build a web-forum-like[2] app for one of my busy content
sites. I want to use a standalone, Python-based http server for this
app, so I've been looking at the simple http servers in the Python
lib, Zope's Z3, Medusa, and twisted.web.

For various reasons[3], I'd like to try twisted.web first, but I have a
few qestions --

(1) Is there a 'servlet' or other programming model to use with
    twisted.web? If so, is there any example code? How can I get
    started?

    In other words, how are people building Web apps with twisted.web?

(2) I'm also playing around with the idea of 'ad hoc http servers',
    i.e., lightweight servers that do one thing and one thing well,
    which gets integrated into an existing site using something like
    Apache's mod_rewrite and mod_proxy.

    So if I wanted to build a specialized twisted.web that only did
    one thing, is there a class I can subclass or methods I can
    override? 

    In other words, I want to specialize the bit(s) of twisted.web
    which map REQUEST.URI to a local entity; and I want to do so for
    particular HTTP methods (specifically, GET, POST, DELETE) and
    return the appropriate non-implemented HTTP response for
    everything else (i.e., 404 for non-existent URIs and <whatever>
    for the other HTTP methods).

I looked at the twisted.web source briefly, but nothing leapt out at
me, alas.

Thanks,
Kendall Clark

Footnotes: 
[1]  http://internet.conveyor.com/RESTwiki/moin.cgi

[2]  Yes, I looked at twisted.forum long enough to know that I can't
     use it; this forum app has to be fairly specialized to fit into
     an existing site.

[3]  If for no other reason, Z3 doesn't seem to have been busted out
     of Zope yet (as has ZODB, yay!), and I don't have the time or
     energy to work on that just to use it cleanly. Plus, I'm looking
     for reasons to use twisted.




From carmstro at twistedmatrix.com  Mon Feb 11 12:46:39 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 14:46:39 -0500
Subject: [Twisted-Python] Documentation.. On a wiki!?
Message-ID: <1013456803.5847.3.camel@radii>

Yes, that's right.
http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/ (ok, yeah, it's a long URL. deal.)

So, the idea is to use MoinMoin for Twisted's documentation. I have the
skeleton ported as well as one or two docs (and I'm working on
transcribing the rest of the docs to fit this framework). So, this is my
official submission for "what should Twisted use for documentation?". 

Yes, I do realize that I'll probably need to make lots of customizations
for this to work well, and maybe even some tools for dealing with the
wiki without using the web. (ie, CLI tools etc).
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 12:57:10 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 14:57:10 -0500
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <15464.5850.340517.261097@cmpu.net>
References: <15464.5850.340517.261097@cmpu.net>
Message-ID: <1013457432.5848.10.camel@radii>

On Mon, 2002-02-11 at 14:09, Kendall Clark wrote:
> Hi,
> 
> I'm playing around with some REST ideas[1], and I want to use this
> approach to build a web-forum-like[2] app for one of my busy content
> sites. I want to use a standalone, Python-based http server for this
> app, so I've been looking at the simple http servers in the Python
> lib, Zope's Z3, Medusa, and twisted.web.
> 
> For various reasons[3], I'd like to try twisted.web first, but I have a
> few qestions --
> 
> (1) Is there a 'servlet' or other programming model to use with
>     twisted.web? If so, is there any example code? How can I get
>     started?

There are two levels of abstraction for web apps once you get past the
low-level stuff: Resources, and WebWidgets, which are built on
Resources. Resources are a 1:1 mapping with Requests (ie, a web request
causes a single Resource to render itself). WebWidgets are more
fine-grained - you can have multiple Widgets on a Page, etc. WebWidgets
is the recommended tool for writing most web apps, and Resources are
mainly a framework thing.

>     In other words, how are people building Web apps with twisted.web?

Widgets.

> (2) I'm also playing around with the idea of 'ad hoc http servers',
>     i.e., lightweight servers that do one thing and one thing well,
>     which gets integrated into an existing site using something like
>     Apache's mod_rewrite and mod_proxy.
> 
>     So if I wanted to build a specialized twisted.web that only did
>     one thing, is there a class I can subclass or methods I can
>     override? 

If you want, you can subclass twisted.protocols.http.HTTP directly, but
I'm not sure if this would be the best way to go for you or not. I'd
need to know more about what you're doing. twisted.web.server.Site
subclasses the base HTTP class to add some more functionality, like
"Request" objects etc, maybe take a look at that too. But like I said
before, most most apps, you probably want to use WebWidgets. If you
think that WebWidgets is too high-level and server.Site is too
low-level, take a look at Resources.

>     In other words, I want to specialize the bit(s) of twisted.web
>     which map REQUEST.URI to a local entity; and I want to do so for
>     particular HTTP methods (specifically, GET, POST, DELETE) and
>     return the appropriate non-implemented HTTP response for
>     everything else (i.e., 404 for non-existent URIs and <whatever>
>     for the other HTTP methods).

Yeah, take a look at twisted.protocols.http.HTTP and
twisted.web.server.Site

Any more questions, feel free to respond or ask me on IRC.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From bob at redivi.com  Mon Feb 11 13:40:56 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 11 Feb 2002 15:40:56 -0500
Subject: [Twisted-Python] twisted.enterprise / transactions
Message-ID: <A6138838-1F2F-11D6-9842-0003938210D6@redivi.com>

I've been looking into twisted.enterprise.. and I have a few questions

It seems that enterprise expects that you want to commit data for every 
successful query?  This certainly makes things simpler, as with 
PostgreSQL a separate backend (connection) is going to be running for 
every connection to that database, which means the thread pool would 
require some more complicated management.  There ought to be a way to 
set it up such that your callbacks can do more processing and guarantee 
that it happens in the same thread, so you get the same connection, and 
don't have to commit every time.  Committing after every query kinda 
defeats the purpose of having transactions at all, unless you do 
everything in user defined functions (stored procedures) that use 
transactions themselves.

Similarly, what's the point of rolling back on error if you can't use 
transactions anyways?  If it errored, it didn't do anything anyways.

One more thing, do you need to do anything with threadable before using 
enterprise?

-bob




From twisted at itamarst.org  Mon Feb 11 10:21:20 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 17:21:20 +0000
Subject: [Twisted-Python] http://www.cs.wustl.edu/~schmidt/patterns-ace.html
References: <E16aEg4-0001mg-00@zaibach.twistedmatrix.com>
Message-ID: <3C67FD90.5020800@itamarst.org>

Moshe Zadka wrote:

> Do we have this in Python?

I wrote an email a while back explaining how some of these patterns are 
used in Twisted - check out the archives.




From twisted at itamarst.org  Mon Feb 11 10:28:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 17:28:08 +0000
Subject: [Twisted-Python] twisted.enterprise / transactions
References: <A6138838-1F2F-11D6-9842-0003938210D6@redivi.com>
Message-ID: <3C67FF28.6080503@itamarst.org>

Bob Ippolito wrote:

> It seems that enterprise expects that you want to commit data for every 
> successful query?  This certainly makes things simpler, as with 
> PostgreSQL a separate backend (connection) is going to be running for 
> every connection to that database, which means the thread pool would 
> require some more complicated management.  There ought to be a way to 
> set it up such that your callbacks can do more processing and guarantee 
> that it happens in the same thread, so you get the same connection, and 
> don't have to commit every time.  Committing after every query kinda 
> defeats the purpose of having transactions at all, unless you do 
> everything in user defined functions (stored procedures) that use 
> transactions themselves.


There is support for doing so.


Specifically, adabpi.ConnectionPool.interaction() lets you pass a 
callable object  (a function or method). The method you pass will be 
called with an instance of adabpi.Transaction, upon which you can run a 
series of SQL commands, after which the changes will be commited 
automatically (or rollbacked if there's an exception thrown.)

So, write a function that accepts one argument, an instance of 
adbapi.Transaction, and does a series of SQL commands on this instance. 
Then, pass this function to your connectionpoool's interaction() method.


> One more thing, do you need to do anything with threadable before using 
> enterprise?

Nope, it will automatically do that for you, on the assumption 
enterprise.adbapi is imported before your program starts, i.e. before 
you call your Application's run() method (or t.i.main.run()).




From acapnotic at twistedmatrix.com  Mon Feb 11 16:43:59 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 15:43:59 -0800
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013411649.3645.41.camel@radii>
References: <1013404005.3767.18.camel@troglodyte> 
	<1013411649.3645.41.camel@radii>
Message-ID: <1013471039.1018.28.camel@troglodyte>

On Sun, 2002-02-10 at 23:14, Christopher Armstrong wrote:
> On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> > One central question is "Do queries about a participant get answered by
> > the server, or by the participant's client?"
> 
> Let the server handle user-status queries, but let the client tell the
> server how to respond to them.

Does that provide enough flexibility?  Your possible configurations
would be limited by the things the server can think of.  That means you
probably can't program a configuration like "If it's during working
hours and I don't have anything scheduled on my appointment calander and
I don't have a personal chat session with Cindy open and I'm not
listening to my deth metal playlist, then let Ross see my status as
'available'."

> > There's no way for a Words client to determine the online status of
> > another Participant without adding that person to their contact list. 
>
> Let the user-who-is-being-queried specify how they want this to be
> answered.
>
> > More user information.  Should a Words client be able to look up another
> > Participant and maybe find out what their Identity is [...]
>
> Again, let the client specify.

Ok, that at least means "Yes, we need to add this to Participant's
remote interface" for each of those features.

> OK, I'm noticing a pattern here. This "capabilities" issue has been
> popping up a *lot* recently, so maybe some sort of generalized
> "capability system" might crop up out of this (ie, a way to grant or
> deny capabilities between perspectives (or identities?)). something to
> think about.
> 
> > Server descriptions.  The best I've seen is something like
> > self.service.serviceName, which in practice always yields
> > "twisted.words".  
> 
> I'm not sure where you're going with this point,

I just want to stop seeing "welcome to twisted.quux" on whatever service
I sign on to, and instead see something that identifies whose service
I'm connected using.

> I *definitely* don't want to allow clients to get IPs of other clients
> without explicit consent. After living on dalnet for a few years, where
> kiddies DDoS you for looking at them the wrong way, I've been locked
> into this opinion.

You're right about client IPs, I think.  There are only two reasons
those are useful on IRC.  1) to help identify the user, which you have a
hard time doing due to IRC's non-existant authentication 2) DoS
attacks.  Since we'll actually have authentication, reason #1 goes away.

> And the server thing - I don't see any harm, but why
> does it matter?

I can think of two reasons for publishing the server address.  One is
for advertising, you might be thinking "Gee, my server sucks.  What are
other people using?"  The other might be to help track down problems. 
"That server is administered really poorly.  Lets add it to our
blacklist."

> > Away messages and idle times.  Words doesn't have these.  Should it?
> 
> Yeah.




From glyph at twistedmatrix.com  Mon Feb 11 17:51:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 11 Feb 2002 18:51:51 -0600
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted ChangeLog,1.13,1.14
In-Reply-To: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com>
Message-ID: <1013475111.1440.3.camel@zelda>

For those of you who do not subscribe, this is a message in response to
a CVS commit.  If you're interested in getting CVS commit messages,
email me privately.

On Mon, 2002-02-11 at 16:02, Chris Armstrong wrote:
> Update of /cvs/Twisted
> In directory zaibach:/tmp/cvs-serv21198
> 
> Modified Files:
> 	ChangeLog 
> Log Message:
> updated ChangeLog to reflect stuff on twisted-commits.

IMHO this is far too fine-grained.  Especially something like:

> +       * twisted/eco/eco.py: Reverted evaluator state back to functional-ness
> +       :) And added functions (anonymous and global), and broke various
> +       interfaces

Not to mention the fact that the evaluator is hardly functional, even
though it uses functions :)

In general, NOTHING that gets changed in CVS and then gets changed
*back* before the release ought to be documented in ChangeLog.  This is
confusing enough as is.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020211/d57bb08d/attachment.sig>

From andrew at ritsuko.xware.cx  Mon Feb 11 17:40:57 2002
From: andrew at ritsuko.xware.cx (Andrew Bennetts)
Date: Tue, 12 Feb 2002 11:40:57 +1100
Subject: [Twisted-Python] Documentation.. On a wiki!?
In-Reply-To: <1013456803.5847.3.camel@radii>
References: <1013456803.5847.3.camel@radii>
Message-ID: <20020212004057.GA19498@ritsuko.xware.cx>

On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> So, the idea is to use MoinMoin for Twisted's documentation. I have the
> skeleton ported as well as one or two docs (and I'm working on
> transcribing the rest of the docs to fit this framework). So, this is my
> official submission for "what should Twisted use for documentation?". 

Interesting idea.  It's probably the most convenient format for quickly
writing nicely structured docs, and it is structured enough that you could
probably do a sane conversion to something else later, if desired.  In
short, I like it.

Another advantage is you could probably easily link to Teud docs of the
Twisted API.

I've already privately mailed Glyph expressing my interest in helping out
with the documentation; after I get home from work I'll try to remember to
add my twisted.enterprise tutorial to your Wiki.

-Andrew.




From carmstro at twistedmatrix.com  Mon Feb 11 18:55:03 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 20:55:03 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted
	ChangeLog,1.13,1.14
In-Reply-To: <1013475111.1440.3.camel@zelda>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com> 
	<1013475111.1440.3.camel@zelda>
Message-ID: <1013478904.6732.1.camel@radii>

Well, the main reason for that entry was Functions, because that was a
pretty large milestone (at least I was proud of it. :)). I just put in
the other stuff because I happened to do it at the same time.

On Mon, 2002-02-11 at 19:51, Glyph Lefkowitz wrote:
> For those of you who do not subscribe, this is a message in response to
> a CVS commit.  If you're interested in getting CVS commit messages,
> email me privately.
> 
> On Mon, 2002-02-11 at 16:02, Chris Armstrong wrote:
> > Update of /cvs/Twisted
> > In directory zaibach:/tmp/cvs-serv21198
> > 
> > Modified Files:
> > 	ChangeLog 
> > Log Message:
> > updated ChangeLog to reflect stuff on twisted-commits.
> 
> IMHO this is far too fine-grained.  Especially something like:
> 
> > +       * twisted/eco/eco.py: Reverted evaluator state back to functional-ness
> > +       :) And added functions (anonymous and global), and broke various
> > +       interfaces
> 
> Not to mention the fact that the evaluator is hardly functional, even
> though it uses functions :)
> 
> In general, NOTHING that gets changed in CVS and then gets changed
> *back* before the release ought to be documented in ChangeLog.  This is
> confusing enough as is.
> 
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 18:56:32 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 20:56:32 -0500
Subject: [Twisted-Python] Documentation.. On a wiki!?
In-Reply-To: <20020212004057.GA19498@ritsuko.xware.cx>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>
Message-ID: <1013478994.6724.3.camel@radii>

On Mon, 2002-02-11 at 19:40, Andrew Bennetts wrote:

> I've already privately mailed Glyph expressing my interest in helping out
> with the documentation; after I get home from work I'll try to remember to
> add my twisted.enterprise tutorial to your Wiki.
> 
> -Andrew.

Excellent. I was actually planning on doing it myself, so now I can get
on to other things. Thanks for helping out!

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From carmstro at twistedmatrix.com  Mon Feb 11 19:07:48 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 21:07:48 -0500
Subject: [Twisted-Python] Words.Participant capabilities
In-Reply-To: <1013471039.1018.28.camel@troglodyte>
References: <1013404005.3767.18.camel@troglodyte> 
	<1013411649.3645.41.camel@radii>  <1013471039.1018.28.camel@troglodyte>
Message-ID: <1013479672.6724.12.camel@radii>

On Mon, 2002-02-11 at 18:43, Kevin Turner wrote:
> On Sun, 2002-02-10 at 23:14, Christopher Armstrong wrote:
> > On Mon, 2002-02-11 at 00:06, Kevin Turner wrote:
> > > One central question is "Do queries about a participant get answered by
> > > the server, or by the participant's client?"
> > 
> > Let the server handle user-status queries, but let the client tell the
> > server how to respond to them.
> 
> Does that provide enough flexibility?  Your possible configurations
> would be limited by the things the server can think of.  That means you
> probably can't program a configuration like "If it's during working
> hours and I don't have anything scheduled on my appointment calander and
> I don't have a personal chat session with Cindy open and I'm not
> listening to my deth metal playlist, then let Ross see my status as
> 'available'."

Interesting. Maybe we could have an option to say "let the client
respond to this query", but maybe that would just be a bunch of added
complexity. *shrug*.

[snip...]

> > > Server descriptions.  The best I've seen is something like
> > > self.service.serviceName, which in practice always yields
> > > "twisted.words".  
> > 
> > I'm not sure where you're going with this point,
> 
> I just want to stop seeing "welcome to twisted.quux" on whatever service
> I sign on to, and instead see something that identifies whose service
> I'm connected using.

That probably shouldn't be the service name, but some sort of MOTD
feature.

> > I *definitely* don't want to allow clients to get IPs of other clients
> > without explicit consent. After living on dalnet for a few years, where
> > kiddies DDoS you for looking at them the wrong way, I've been locked
> > into this opinion.
> 
> You're right about client IPs, I think.  There are only two reasons
> those are useful on IRC.  1) to help identify the user, which you have a
> hard time doing due to IRC's non-existant authentication 2) DoS
> attacks.  Since we'll actually have authentication, reason #1 goes away.

Not allowing viewable IPs allows DoS attacks? Hmm. I guess when it comes
to ops trying to ban a join-flood, or something. Of course, you can
always have programmed DoS-stoppers, as well as "wordscops" who can see
the IPs of participants. Or am I way off?

> > And the server thing - I don't see any harm, but why
> > does it matter?
> 
> I can think of two reasons for publishing the server address.  One is
> for advertising, you might be thinking "Gee, my server sucks.  What are
> other people using?"  The other might be to help track down problems. 
> "That server is administered really poorly.  Lets add it to our
> blacklist."

OK. 

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From sean at twistedmatrix.com  Mon Feb 11 19:26:33 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 20:26:33 -0600
Subject: [Twisted-Python] a proposed extension for pb
Message-ID: <HOEEKPCOKELHCNIJNMAGIEMHCEAA.sean@twistedmatrix.com>

"Publishable" extension to Twisted PB

Publishable is a proposed new type of distributed object for twisted.spread.
It is similar to the Cacheable class (which caches object state information
for the duration of a session), but it adds the capability to cache object
state information on remote nodes across multiple sessions.

Publishable objects would use the local file system on remote nodes to cache
object state information. This "published" state data would include
identifying information that allows the cached objects to re-establish their
relationships with their server-side counterparts the next time that the
object is activated during a session with the same server.

The published data for an object would include:
	- the server that it came from
	- the service that the object was part of
	- the perspective/identity that it was accessed through
	- the identity of the object
	- the date and time of the state snapshot

Some of this data would be shared for multiple objects instances from the
same publishing location and could possibly be embedded in the file names or
directory structure of the local cache.

The timestamp of the snapshot of the object state could be used to allow
auto-refreshing of state of published objects. When a published object is
re-activated, if it's timestamp is before the timestamp of it's server-side
counterpart, the it could be updated with the new state of the server-side
object. (this should happen transparently _before_ the object instance is
available to client-side user code)

Published objects on the client would only be re-activated by the server
"sending" a new instance of the same to the client. Of course, it doesnt
actually send the entire new state for the object, just the identifying
information and timestamp - this initiates a handshake sequence that results
in the full updating and re-activation of the object.


This functionality was originally designed for dealing with persistent world
data for online games - the world state data including houses, terrain,
items on the ground, etc. However, it appears to have much broader
applicability and could be used for fairly generic replication and
clustering of application data.


Issues:

* "stateless" object references could be a generic solution to the server
identification problem. some kind of pb:// URL to identify publishable
objects... (and/or all types of Twisted objects)

* Re-caching or re-publishing of objects through hierarchies of Twisted
servers...

* the overhead of the handshaking process that re-activates published
objects could introduce significant latency. care should be taken to minize
the amount of back-and-forth between client and server



----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From glyph at twistedmatrix.com  Mon Feb 11 19:28:36 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 11 Feb 2002 20:28:36 -0600
Subject: Documentation Standard (was: Re: [Twisted-Python] Documentation..
	On a wiki!?)
In-Reply-To: <20020212004057.GA19498@ritsuko.xware.cx>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>
Message-ID: <1013480917.1440.97.camel@zelda>

There is a place for wiki, but I don't think it's the same as a place
for docs.

However, since I don't think I've said it on the mailing list yet, I'd
like to state that my official position on the issue of documentation
standards is that there is no documentation standard until somebody
decides to make one.

Personally I think I'm going to work in LaTeX or maybe DocBook when I've
got some time.  However, if you want to submit some docs, please submit
them in any format that you feel like: content is more important than
format right now.

Whoever submits the most quality docs the fastest (and this is
essentially an arbitrary decision on my part, I know) will become the
documentation maintainer and I will use whatever format they used for a
standard.

That said, I'd like to recommend against wiki for the following reasons:

1: it's not set in stone.  Users will come to it and it may be different
than what they expected.

2: It tends to collect editorial annotations, and there's no structured
way to remove them easily.  This will be confusing.

3: Partially because of 1: and 2:, Wikis are good for tightly knit
communities, but what we need is external, end-user documentation, that
will be read by people with no knowledge of how the system works

Wiki might be a great way to get the documentation process started, and
a good place to publish drafts, but we already have IRC and cryptic
references to the mailing list -- we need something that's a more
gradual, high-quality introduction.

On Mon, 2002-02-11 at 18:40, Andrew Bennetts wrote:
> On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> > So, the idea is to use MoinMoin for Twisted's documentation. I have the
> > skeleton ported as well as one or two docs (and I'm working on
> > transcribing the rest of the docs to fit this framework). So, this is my
> > official submission for "what should Twisted use for documentation?". 
> 
> Interesting idea.  It's probably the most convenient format for quickly
> writing nicely structured docs, and it is structured enough that you could
> probably do a sane conversion to something else later, if desired.  In
> short, I like it.


-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020211/a1cd152d/attachment.sig>

From sean at twistedmatrix.com  Mon Feb 11 19:34:01 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 20:34:01 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <15464.5850.340517.261097@cmpu.net>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>

if you are building a forum-type application, I'd be interested in talking
about why you think twisted.forum is inappropriate. it was intended that it
could be used within an existing site, but that extensibility may not be
apparent (and i know, it has no documentation).

Maybe we could explore ways to make it useful to you - and more useful to
other people moving forward.

The database interaction layer is extremely separate from the presentation
layer - it was intended that different presentation formats could access the
same forum database with the web interface being just the first.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kendall
Clark
Sent: Monday, February 11, 2002 1:09 PM
To: twisted-python
Subject: [Twisted-Python] subclassing twisted.web?


Hi,

I'm playing around with some REST ideas[1], and I want to use this
approach to build a web-forum-like[2] app for one of my busy content
sites. I want to use a standalone, Python-based http server for this
app, so I've been looking at the simple http servers in the Python
lib, Zope's Z3, Medusa, and twisted.web.

For various reasons[3], I'd like to try twisted.web first, but I have a
few qestions --

(1) Is there a 'servlet' or other programming model to use with
    twisted.web? If so, is there any example code? How can I get
    started?

    In other words, how are people building Web apps with twisted.web?

(2) I'm also playing around with the idea of 'ad hoc http servers',
    i.e., lightweight servers that do one thing and one thing well,
    which gets integrated into an existing site using something like
    Apache's mod_rewrite and mod_proxy.

    So if I wanted to build a specialized twisted.web that only did
    one thing, is there a class I can subclass or methods I can
    override?

    In other words, I want to specialize the bit(s) of twisted.web
    which map REQUEST.URI to a local entity; and I want to do so for
    particular HTTP methods (specifically, GET, POST, DELETE) and
    return the appropriate non-implemented HTTP response for
    everything else (i.e., 404 for non-existent URIs and <whatever>
    for the other HTTP methods).

I looked at the twisted.web source briefly, but nothing leapt out at
me, alas.

Thanks,
Kendall Clark

Footnotes:
[1]  http://internet.conveyor.com/RESTwiki/moin.cgi

[2]  Yes, I looked at twisted.forum long enough to know that I can't
     use it; this forum app has to be fairly specialized to fit into
     an existing site.

[3]  If for no other reason, Z3 doesn't seem to have been busted out
     of Zope yet (as has ZODB, yay!), and I don't have the time or
     energy to work on that just to use it cleanly. Plus, I'm looking
     for reasons to use twisted.


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From bob at redivi.com  Mon Feb 11 19:43:16 2002
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 11 Feb 2002 21:43:16 -0500
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>
Message-ID: <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>

One thing of note is that if you install 0.15.0 via 'python setup.py 
install', it doesn't install either forum or metrics.

Maybe he just didn't see it?

-bob

On Monday, February 11, 2002, at 09:34 PM, Sean Riley wrote:

> if you are building a forum-type application, I'd be interested in 
> talking
> about why you think twisted.forum is inappropriate. it was intended 
> that it
> could be used within an existing site, but that extensibility may not be
> apparent (and i know, it has no documentation).
>
> Maybe we could explore ways to make it useful to you - and more useful 
> to
> other people moving forward.
>
> The database interaction layer is extremely separate from the 
> presentation
> layer - it was intended that different presentation formats could 
> access the
> same forum database with the web interface being just the first.
>
>
> -----Original Message-----
> From: twisted-python-admin at twistedmatrix.com
> [mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kendall
> Clark
> Sent: Monday, February 11, 2002 1:09 PM
> To: twisted-python
> Subject: [Twisted-Python] subclassing twisted.web?
>
>
> Hi,
>
> I'm playing around with some REST ideas[1], and I want to use this
> approach to build a web-forum-like[2] app for one of my busy content
> sites. I want to use a standalone, Python-based http server for this
> app, so I've been looking at the simple http servers in the Python
> lib, Zope's Z3, Medusa, and twisted.web.
>
> For various reasons[3], I'd like to try twisted.web first, but I have a
> few qestions --
>
> (1) Is there a 'servlet' or other programming model to use with
>     twisted.web? If so, is there any example code? How can I get
>     started?
>
>     In other words, how are people building Web apps with twisted.web?
>
> (2) I'm also playing around with the idea of 'ad hoc http servers',
>     i.e., lightweight servers that do one thing and one thing well,
>     which gets integrated into an existing site using something like
>     Apache's mod_rewrite and mod_proxy.
>
>     So if I wanted to build a specialized twisted.web that only did
>     one thing, is there a class I can subclass or methods I can
>     override?
>
>     In other words, I want to specialize the bit(s) of twisted.web
>     which map REQUEST.URI to a local entity; and I want to do so for
>     particular HTTP methods (specifically, GET, POST, DELETE) and
>     return the appropriate non-implemented HTTP response for
>     everything else (i.e., 404 for non-existent URIs and <whatever>
>     for the other HTTP methods).
>
> I looked at the twisted.web source briefly, but nothing leapt out at
> me, alas.
>
> Thanks,
> Kendall Clark
>
> Footnotes:
> [1]  http://internet.conveyor.com/RESTwiki/moin.cgi
>
> [2]  Yes, I looked at twisted.forum long enough to know that I can't
>      use it; this forum app has to be fairly specialized to fit into
>      an existing site.
>
> [3]  If for no other reason, Z3 doesn't seem to have been busted out
>      of Zope yet (as has ZODB, yay!), and I don't have the time or
>      energy to work on that just to use it cleanly. Plus, I'm looking
>      for reasons to use twisted.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From kendall at monkeyfist.com  Mon Feb 11 20:00:30 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 21:00:30 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>; from Sean Riley on Mon, Feb 11, 2002 at 08:34:01PM -0600
References: <15464.5850.340517.261097@cmpu.net> <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com>
Message-ID: <20020211210030.A7848@monkeyfist.com>

On Mon, Feb 11, 2002 at 08:34:01PM -0600, Sean Riley muttered something about:
> if you are building a forum-type application, I'd be interested in talking
> about why you think twisted.forum is inappropriate. it was intended that it
> could be used within an existing site, but that extensibility may not be
> apparent (and i know, it has no documentation).

Don't take what I said as a criticism; it's not. It won't work for what I
need but that's a function of my idiosyncratic needs, not the quality of
twisted.forum.

Further, as I said, I'm *also* experimenting with the REST (and ad hoc httpd
server) ideas, so that I want to build the app out of GET, POST, DELETE, and
HEAD HTTP methods. (In other words, I asked a pointed question because I
know what I want to do, but I don't know how to do it with Twisted.)

But I may steal some ideas from the way you deal with data storage.

Thanks.

Kendall Clark



From kendall at monkeyfist.com  Mon Feb 11 20:02:12 2002
From: kendall at monkeyfist.com (Kendall Clark)
Date: Mon, 11 Feb 2002 21:02:12 -0600
Subject: [Twisted-Python] subclassing twisted.web?
In-Reply-To: <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>; from Bob Ippolito on Mon, Feb 11, 2002 at 09:43:16PM -0500
References: <HOEEKPCOKELHCNIJNMAGAEMICEAA.sean@twistedmatrix.com> <443F0C5B-1F62-11D6-A3B6-0003938210D6@redivi.com>
Message-ID: <20020211210212.B7848@monkeyfist.com>

On Mon, Feb 11, 2002 at 09:43:16PM -0500, Bob Ippolito muttered something about:
> One thing of note is that if you install 0.15.0 via 'python setup.py 
> install', it doesn't install either forum or metrics.
> 
> Maybe he just didn't see it?

No, I did. As I said:

> > [2]  Yes, I looked at twisted.forum long enough to know that I can't
> >      use it; this forum app has to be fairly specialized to fit into
> >      an existing site.

Best,
Kendall  Clark



From sean at twistedmatrix.com  Mon Feb 11 20:13:24 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 21:13:24 -0600
Subject: [Twisted-Python] twisted.enterprise / transactions
In-Reply-To: <3C67FF28.6080503@itamarst.org>
Message-ID: <HOEEKPCOKELHCNIJNMAGCEMJCEAA.sean@twistedmatrix.com>

right. take a look at twisted.forum.manager.py postMessage() and
_messagePoster() for an example.

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Itamar
Shtull-Trauring
Sent: Monday, February 11, 2002 11:28 AM
To: twisted-python at twistedmatrix.com
Subject: Re: [Twisted-Python] twisted.enterprise / transactions


Bob Ippolito wrote:

> It seems that enterprise expects that you want to commit data for every
> successful query?  This certainly makes things simpler, as with
> PostgreSQL a separate backend (connection) is going to be running for
> every connection to that database, which means the thread pool would
> require some more complicated management.  There ought to be a way to
> set it up such that your callbacks can do more processing and guarantee
> that it happens in the same thread, so you get the same connection, and
> don't have to commit every time.  Committing after every query kinda
> defeats the purpose of having transactions at all, unless you do
> everything in user defined functions (stored procedures) that use
> transactions themselves.


There is support for doing so.


Specifically, adabpi.ConnectionPool.interaction() lets you pass a
callable object  (a function or method). The method you pass will be
called with an instance of adabpi.Transaction, upon which you can run a
series of SQL commands, after which the changes will be commited
automatically (or rollbacked if there's an exception thrown.)

So, write a function that accepts one argument, an instance of
adbapi.Transaction, and does a series of SQL commands on this instance.
Then, pass this function to your connectionpoool's interaction() method.


> One more thing, do you need to do anything with threadable before using
> enterprise?

Nope, it will automatically do that for you, on the assumption
enterprise.adbapi is imported before your program starts, i.e. before
you call your Application's run() method (or t.i.main.run()).


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From carmstro at twistedmatrix.com  Mon Feb 11 20:16:08 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 22:16:08 -0500
Subject: [Twisted-Python] Re: Documentation Standard (was: Re: [Twisted-Python]
 Documentation.. On a wiki!?)
In-Reply-To: <1013480917.1440.97.camel@zelda>
References: <1013456803.5847.3.camel@radii> 
	<20020212004057.GA19498@ritsuko.xware.cx>  <1013480917.1440.97.camel@zelda>
Message-ID: <1013483770.6732.30.camel@radii>

On Mon, 2002-02-11 at 21:28, Glyph Lefkowitz wrote:
> That said, I'd like to recommend against wiki for the following reasons:
> 
> 1: it's not set in stone.  Users will come to it and it may be different
> than what they expected.

I didn't mean for the wiki to be the place for users to go to view the
documentation, only a place for collaborative development. See my
response to point #3 for more info on this.

Also, note that it is possible now to convert Moin to formats such as
DocBook, and once you get to that point, you can basically get to any
format (LaTeX included).

> 2: It tends to collect editorial annotations, and there's no structured
> way to remove them easily.  This will be confusing.

Nafai brought up this point, and I told him it was actually good that
they were there since it would be an incentive to fix stuff like "XXX:
This isn't clear!" before a release. But yeah, it's just not practical -
so if you really think it's ncessary, I'll write a tool to automatically
rip out editorial notes. It shouldn't be hard at all, and I don't think
it would be hard to get people to write editorial notes according to
some convention.

> 3: Partially because of 1: and 2:, Wikis are good for tightly knit
> communities, but what we need is external, end-user documentation, that
> will be read by people with no knowledge of how the system works

I of course would not have the wiki be the actual medium for
distribution/viewing by regular people. It will be released per-version
in the TwistedDocs package, and the API docs will only be a section
inside your main skeleton.

I'm also thinking of adding a user/password protection to the wiki so
only developers (or people we designate as documenters) can work on it.

> Wiki might be a great way to get the documentation process started, and
> a good place to publish drafts, but we already have IRC and cryptic
> references to the mailing list -- we need something that's a more
> gradual, high-quality introduction.

I don't see how wiki doesn't meet this.

And of course, as I probably don't need to mention, I think wiki is
great for this, because it makes documentation easy to work with through
a unified interface...

I'm also planning on putting the data on CVS so people can hack it with
their regular editors. I'll have to work something out where the wiki's
CVS repository will automatically update itself whenever someone commits
through CVS, but it shouldn't be a problem.

So, I'm going to attempt to submit a lot of documentation, to force you
to use the wiki! Then I will be the uber-documentation Twisted guy, and
you will all bow to me!! In the words of Moshe: "Muhahahahahaha!!!"

:-D

> On Mon, 2002-02-11 at 18:40, Andrew Bennetts wrote:
> > On Mon, Feb 11, 2002 at 02:46:39PM -0500, Christopher Armstrong wrote:
> > > So, the idea is to use MoinMoin for Twisted's documentation. I have the
> > > skeleton ported as well as one or two docs (and I'm working on
> > > transcribing the rest of the docs to fit this framework). So, this is my
> > > official submission for "what should Twisted use for documentation?". 
> > 
> > Interesting idea.  It's probably the most convenient format for quickly
> > writing nicely structured docs, and it is structured enough that you could
> > probably do a sane conversion to something else later, if desired.  In
> > short, I like it.
> 
> 
> -- 
> "Cannot stand to be one of many -- I'm not what they are."
>         -Guster, "Rocketship"
>                 glyph lefkowitz; ninjaneer, freelance demiurge
>     glyph @ [ninjaneering|twistedmatrix].com
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From abo at minkirri.apana.org.au  Mon Feb 11 20:32:33 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 12 Feb 2002 14:32:33 +1100
Subject: Documentation Standard (was: Re: [Twisted-Python] Documentation.. On a wiki!?)
In-Reply-To: <1013480917.1440.97.camel@zelda>
References: <1013456803.5847.3.camel@radii> <20020212004057.GA19498@ritsuko.xware.cx> <1013480917.1440.97.camel@zelda>
Message-ID: <20020212033233.GD20963@minkirri.apana.org.au>

On Mon, Feb 11, 2002 at 08:28:36PM -0600, Glyph Lefkowitz wrote:
> There is a place for wiki, but I don't think it's the same as a place
> for docs.
[...]
> 1: it's not set in stone.  Users will come to it and it may be different
> than what they expected.

Hah! And twisted itself is? :-)

I would think users would come to it, and if it doesn't explain something
they had a problem with, they will add something that does. This is the
reason _not_ to allow only developer contributions.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From jason at crash.org  Mon Feb 11 20:37:56 2002
From: jason at crash.org (Jason Asbahr)
Date: Mon, 11 Feb 2002 21:37:56 -0600
Subject: [Twisted-Python] a proposed extension for pb
In-Reply-To: <HOEEKPCOKELHCNIJNMAGIEMHCEAA.sean@twistedmatrix.com>
Message-ID: <E725D7CB-1F69-11D6-A9F0-000393753460@crash.org>

Great idea, Sean.  Also, some kind of object containment hierarchy could 
be used to offset the handshaking time.  For example, the server would 
compute a checksum of the timestamps of the objects in a given 
hierarchy, transmits the sum, and only if that sum differs from the one 
the client generates for the equivalent hierarchy does the client 
request subsequent sub-hierarchical checking,

Jason





From sean at twistedmatrix.com  Mon Feb 11 20:40:55 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Mon, 11 Feb 2002 21:40:55 -0600
Subject: [Twisted-Python] perspective introspection
Message-ID: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>

other remote object APIs such as COM and CORBA have ways of asking a remote
object for it's published interface. SOAP also has this with WSDL
(http://www.w3.org/TR/wsdl).

implementing a way for pb perspectives to tell consumers about their
interface seemed like it would be a trivial undertaking - and it was:

(for twisted.spread.pb):

from twisted.python import reflect

def perspective_getInterface(self):
        """Retrieve the set of perspective methods for this perspective.
        This allows client to retrieve the "published" external interface
        for this perspective/service.

        the result is returned in a dictionary with the keys being the names
        of the methods for the client to call, and the values a tuple of
        the names of the arguments to each method.
        """
        dict = {}
        reflect.addMethodNamesToDict(self.__class__, dict, "perspective_")
        del dict["getInterface"] # remove the perspective_interface method
(THIS method)

        # populate args
        for k in dict.keys():
            func = self.__class__.__dict__["perspective_%s"%k]
            l = func.func_code.co_varnames[1:]
            dict[k] = l
        return dict

it would probably even be possible to wrap this up into WSDL if we wanted
to, for further "enterprise" compatibility...

it isn't possible for clients to do this introspection on their own as they
only have a RemoteReference to the perspective object. does this create any
security holes? is a bad idea for any other reason?


----
"If it's not running programs or fusing atoms, it's just bending space.",
Ken Macleod
"That's it, I'm outta here.", Homer Simpson's Brain
Sean Riley
sean at ninjaneering.com




From twisted at itamarst.org  Mon Feb 11 15:41:35 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 22:41:35 +0000
Subject: [Twisted-Python] perspective introspection
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <3C68489F.1070308@itamarst.org>

Sean Riley wrote:


> it isn't possible for clients to do this introspection on their own as they
> only have a RemoteReference to the perspective object. does this create any
> security holes? is a bad idea for any other reason?

Well, I want a general idea of interfaces with defined types for 
published objects ("interface Foo := I have a method foo that returns an 
integer and accepts two args, an integer and an object implementing 
interface Bar"). Basically IDL, when you get down to it :)

Introspection would be part of this, as would auto-generation of docs.




From carmstro at twistedmatrix.com  Mon Feb 11 20:51:41 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 11 Feb 2002 22:51:41 -0500
Subject: [Twisted-Python] perspective introspection
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <1013485903.6732.33.camel@radii>

Well, I asked glyph about this earlier, and he said that it's just as
good to have versioned objects instead of publishing interfaces. I'm not
sure what cases versioned objects wouldn't be sufficient enough, so I'm
not sure which is the best route to go.

On Mon, 2002-02-11 at 22:40, Sean Riley wrote:
> other remote object APIs such as COM and CORBA have ways of asking a remote
> object for it's published interface. SOAP also has this with WSDL
> (http://www.w3.org/TR/wsdl).
> 
> implementing a way for pb perspectives to tell consumers about their
> interface seemed like it would be a trivial undertaking - and it was:
> 
> (for twisted.spread.pb):
> 
> from twisted.python import reflect
> 
> def perspective_getInterface(self):
>         """Retrieve the set of perspective methods for this perspective.
>         This allows client to retrieve the "published" external interface
>         for this perspective/service.
> 
>         the result is returned in a dictionary with the keys being the names
>         of the methods for the client to call, and the values a tuple of
>         the names of the arguments to each method.
>         """
>         dict = {}
>         reflect.addMethodNamesToDict(self.__class__, dict, "perspective_")
>         del dict["getInterface"] # remove the perspective_interface method
> (THIS method)
> 
>         # populate args
>         for k in dict.keys():
>             func = self.__class__.__dict__["perspective_%s"%k]
>             l = func.func_code.co_varnames[1:]
>             dict[k] = l
>         return dict
> 
> it would probably even be possible to wrap this up into WSDL if we wanted
> to, for further "enterprise" compatibility...
> 
> it isn't possible for clients to do this introspection on their own as they
> only have a RemoteReference to the perspective object. does this create any
> security holes? is a bad idea for any other reason?
> 
> 
> ----
> "If it's not running programs or fusing atoms, it's just bending space.",
> Ken Macleod
> "That's it, I'm outta here.", Homer Simpson's Brain
> Sean Riley
> sean at ninjaneering.com
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From twisted at itamarst.org  Mon Feb 11 15:59:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 11 Feb 2002 22:59:12 +0000
Subject: [Twisted-Python] perspective introspection
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com> <3C68489F.1070308@itamarst.org>
Message-ID: <3C684CC0.8050408@itamarst.org>

Itamar Shtull-Trauring wrote:


> 
> Well, I want a general idea of interfaces with defined types for 
> published objects ("interface Foo := I have a method foo that returns an 
> integer and accepts two args, an integer and an object implementing 
> interface Bar"). Basically IDL, when you get down to it :)

Or PEP 245 interfaces with Grouch style docstrings.




From acapnotic at twistedmatrix.com  Mon Feb 11 21:15:43 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 20:15:43 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] CVS: Twisted
	ChangeLog,1.13,1.14
In-Reply-To: <1013475111.1440.3.camel@zelda>
References: <E16aOX0-0005WX-00@zaibach.twistedmatrix.com> 
	<1013475111.1440.3.camel@zelda>
Message-ID: <1013487344.2219.41.camel@troglodyte>

On Mon, 2002-02-11 at 16:51, Glyph Lefkowitz wrote:
> IMHO this is far too fine-grained.  Especially something like:

I'll say it again.  If you don't want your ChangeLog file to have the
stuff the rest of the world puts in their ChangeLog files, then maybe
you're thinking of a different file.  [Where "rest of the world" is most
everything in the GIMP-based universe, the parts of the Linux kernel
which actually have a ChangeLog, glibc, quadra, etc.]  When I write in a
ChangeLog, I'm writing for other developers, and probably developers who
are working on the code NOW, not necessarily after its release.  If you
want a feature-level overview to refer to from the release announcement,
call it NEWS.  If you want a few more technical details, call it
"release notes" (relnotes).

Yes, this does overlap with CVS commit messages.  But if you're working
with a checked out copy of the code and you're off-line, you may not
have access to the CVS logs or commits-list archives. 
log-edit-insert-changelog gets run by cvs-commit-setup for a reason, and
don't be afraid to use cvs-add-change-log-entry as emacs intended.

-- 
The moon is new, 0.2% illuminated, 29.1 days old.



From acapnotic at twistedmatrix.com  Mon Feb 11 21:45:55 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 11 Feb 2002 20:45:55 -0800
Subject: [Twisted-Python] perspective introspection
In-Reply-To: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
References: <HOEEKPCOKELHCNIJNMAGOEMJCEAA.sean@twistedmatrix.com>
Message-ID: <1013489156.2220.47.camel@troglodyte>

On Mon, 2002-02-11 at 19:40, Sean Riley wrote:
> implementing a way for pb perspectives to tell consumers about their
> interface seemed like it would be a trivial undertaking - and it was:

And this is essentially what python.explorer does, although for a
different purpose.  It exports an object's native interface so it can be
explored/manipulated through manhole.  If you haven't seen this yet,
fire up manhole and try something like

/browse sys.modules['__main__'].application



From twisted at itamarst.org  Mon Feb 11 17:17:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 00:17:07 +0000
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
Message-ID: <3C685F03.1000108@itamarst.org>

I'm going to read this in the morning when I'm more awake. Meanwhile 
someone else may be interested. Shane is discussing a mixed async/sync 
mode where threads can write directly to the socket.
-------------- next part --------------
An embedded message was scrubbed...
From: Shane Hathaway <shane at zope.com>
Subject: Re: [Zope3-dev] Twisted as server
Date: Tue, 12 Feb 2002 00:03:42 -0500 (EST)
Size: 7464
URL: </pipermail/twisted-python/attachments/20020212/13582cca/attachment.mht>

From glyph at twistedmatrix.com  Tue Feb 12 09:21:42 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 12 Feb 2002 10:21:42 -0600
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
In-Reply-To: <3C685F03.1000108@itamarst.org>
References: <3C685F03.1000108@itamarst.org>
Message-ID: <1013530903.1733.213.camel@zelda>

On Mon, 2002-02-11 at 18:17, Itamar Shtull-Trauring wrote:
> I'm going to read this in the morning when I'm more awake. Meanwhile 
> someone else may be interested. Shane is discussing a mixed async/sync 
> mode where threads can write directly to the socket.

[snip massive email]

That was quite a bit of text, if I understand properly -- he was saying
that you ought to be able to do proto.transport.write =
proto.transport.socket.makefile().write, with some additional buffering
trickery for optimization?

(It's this sort of communication that makes me want to avoid words like
"handler" and "dispatcher" in Twisted wherever possible.  I feel bad
already for using "Application" and "Scheduler")

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020212/e6c49768/attachment.sig>

From twisted at itamarst.org  Tue Feb 12 05:02:16 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 12:02:16 +0000
Subject: [Twisted-Python] [Fwd: Re: [Zope3-dev] Twisted as server]
References: <3C685F03.1000108@itamarst.org> <1013530903.1733.213.camel@zelda>
Message-ID: <3C690448.1010403@itamarst.org>

Glyph Lefkowitz wrote:


> That was quite a bit of text, if I understand properly -- he was saying
> that you ought to be able to do proto.transport.write =
> proto.transport.socket.makefile().write, with some additional buffering
> trickery for optimization?

I think so, yes. Plus some architectural stuff about how they do 
multiple requests per connection (the task stuff.)

Our current transport code would in fact work with threads without any 
changes (i.e. you could do transport.write in a thread), if not for the 
fact that the event loop integration (addWriter, addReader) isn't thread 
safe.

Since in threaded mode the Selectable doesn't need to be in the event 
loop anyway, we just need a flush method for sync mode and a "switch 
to/from sync mode" method and we could have writing to transports be 
usable from threads (only one thread at a time, of course.)

Another nice thing is the Buffering stuff, which lets you have a buffer 
that is on disk as well - it would make producers less needed when 
sending large amounts of data. It would also improve performance of 
writing large amounts of data on fast connection, since without 
producers we can write-at-once.


See:
http://cvs.zope.org/Zope3/lib/python/Zope/Server/?only_with_tag=Zope-3x-branch

DualModeChannel.DualModeChannel is the sync/async switchable transport.

Also, I'm starting to feel jealous of Zope3's amount of unittests...




From twisted at itamarst.org  Tue Feb 12 05:27:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 12 Feb 2002 12:27:18 +0000
Subject: [Twisted-Python] HotShot vs. Old Profiler
Message-ID: <3C690A26.5020005@itamarst.org>

So, I tried comparing old profiler with HotShot (2.2's new C based 
profiler). I ran a simple twisted web server that serves from memory.

Running with Python 2.2 I got 350 hits/second. time command says it 
takes 11 CPU seconds, and with time the hits/sec is a bit lower.

Running with old profiler: ~70 hits/second, profiler said it took 2-3 
CPU seconds to run (don't ask me why)

Running with HotShot: 290 hits/second, it said it took 15 CPU seconds 
(11 of which were in doSelect on its own).


Conclusions:
HotShot is much much much much much much much better than old profiler
We need to optimize doSelect something wicked
HotShot still has bugs (it would fail occasionally)

I have a command-line interface to hotshot at http://itamarst.org/software/




From twisted at itamarst.org  Wed Feb 13 04:50:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 13 Feb 2002 11:50:33 +0000
Subject: [Twisted-Python] [Fwd: [Zope3-dev] Plans for z3.py]
Message-ID: <3C6A5309.2090601@itamarst.org>

An interesting idea.
-------------- next part --------------
An embedded message was scrubbed...
From: Shane Hathaway <shane at zope.com>
Subject: [Zope3-dev] Plans for z3.py
Date: Wed, 13 Feb 2002 11:31:56 -0500
Size: 3526
URL: </pipermail/twisted-python/attachments/20020213/898bc8c1/attachment.mht>

From moshez at twistedmatrix.com  Thu Feb 14 07:37:32 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Thu, 14 Feb 2002 08:37:32 -0600
Subject: [Twisted-Python] Integrating web.guard and web.twcgi
Message-ID: <E16bN0u-0006u9-00@zaibach.twistedmatrix.com>

OK, here's the deal. 
There's a Whole Lotta (TM) CGIs that use REMOTE_USER which the web
server is supposed to set if the user sent the apppropriate HTTP
authentication headers and the .htaccess (or whatever - in our case
the .cred database) matches. Specifically, that's how roundup
works. No, I'm not in the mood to integrate Roundup with Twisted,
thanks for asking.

So, any idea how to get web.twcgi to properly set REMOTE_USER based
on a parent's .guard? I'm drawing a blank here...
(perhaps a .guard should stamp the Request object as it is passing
it through...)




From drt at un.bewaff.net  Thu Feb 14 17:28:34 2002
From: drt at un.bewaff.net (Doobee R. Tzeck)
Date: 15 Feb 2002 01:28:34 +0100
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
Message-ID: <87it8zy4el.fsf@c0re.bewaff.net>

I'm trying to build a non interactive client app with
twisted. Let's assume it is a webcrawler. I'm not sure how to do
that. Might be like this:

Create a Loop Object which checks if the desired number of
connections are running and if not create new ones an add them as
connectors.

Or should I rip out application.run() and write my own look to
better handle the starting of new crawlers?

Any suggestion would be welcome.


To get a first experience with twisted I hacked a gopher
protocol. Nothing fancy, nothing finished but any comments will
be welcome.  
http://c0re.jp/c0de/misc/twisted-0.15.0-gopher.py

drt

-- 
teenage mutant ninja hero coders from da c0re - http://c0re.jp/
me                                  - http://koeln.ccc.de/~drt/



From twisted at itamarst.org  Thu Feb 14 15:28:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 14 Feb 2002 22:28:33 +0000
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
References: <87it8zy4el.fsf@c0re.bewaff.net>
Message-ID: <3C6C3A11.5000307@itamarst.org>

Doobee R. Tzeck wrote:

> Create a Loop Object which checks if the desired number of
> connections are running and if not create new ones an add them as
> connectors.

This sounds like the right way to do it.




From drt at un.bewaff.net  Fri Feb 15 14:50:09 2002
From: drt at un.bewaff.net (Doobee R. Tzeck)
Date: 15 Feb 2002 22:50:09 +0100
Subject: [Twisted-Python] internet.app reports worng errors on bind()ing
Message-ID: <871yfmxvn2.fsf@c0re.bewaff.net>

internet.app assumed 'port already bound' is the only error which
can happen wen bind()ing. What's about 'premission denied' and
all the others. This patch fixes that.

drt

http://c0re.jp/c0de/misc/twisted-0.15.0-bind-error.patch

app gives a misleading errormessage when a error while binding to
a port occures. This patch logs the error which actually has happended.
 --drt at un.bewaff.net - http://c0re.jp/
diff -u -r Twisted-0.15.0/twisted/internet/app.py Twisted/twisted/internet/app.py
--- Twisted-0.15.0/twisted/internet/app.py      Wed Jan 23
    04:09:39 2002
+++ Twisted/twisted/internet/app.py     Fri Feb 15 22:35:05 2002
@@ -348,8 +348,8 @@
             for port in self.ports:
                 try:
                     port.startListening()
-                except socket.error:
-                    log.msg('port %s already bound' % port.port)
+                except socket.error, msg:
+                    log.msg('port %s: error: %s' % (port.port, msg[1]))
                     return
             for connector in self.connectors:
                 connector.startConnecting()

-- 
teenage mutant ninja hero coders from da c0re - http://c0re.jp/
me                                  - http://koeln.ccc.de/~drt/



From glyph at twistedmatrix.com  Fri Feb 15 16:44:51 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Feb 2002 17:44:51 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
Message-ID: <1013816691.3613.31.camel@zelda>

While auditing some code that I'd written to use PB, I noticed a class
of bug that I had previously not considered.

When writing a PB remote interface, it's easy to write some code that
looks like this:

class MyObject(Referenceable):
    def remote_IOnlyExpectCopies(self, someCopy):
        someCopy.someOperation(self.somePrivilegedData)

This is, of course, a potential security hole.  Assuming
somePrivilegedData is a basic type (and therefore serializeable), a
hostile client could send a Referenceable of their own to
IOnlyExpectCopies.

A sufficiently vigilant application author would, of course, be able to
protect against this by distrusting any arguments sent to a remote
method and performing type checks on them, but then, application authors
(including myself) are rarely "sufficiently" vigilant :-).

My proposed solution is to change the way remote methods are invoked:
instead of emulating regular Python methods, they would be accessed
through a 'callRemote' method: fairly simply, calling the remote method
'foo' on 'bar' would look like this:

    bar.callRemote("foo", baz, boz=qux)

This way, the above example of a local method call would blow up a
remote object were passed to it.

Pros of this approach:

	* it fixes this potentially common security problem
	* it makes it possible to grep for all places where a method is invoked
remotely
	* it removes some overhead (creation of the RemoteMethod instance)

Cons of this approach:

	* it's no longer possible to treat remote objects and objects that have
methods which return Deferreds identically
	* slightly more typing
	* massive refactoring required, lots of user code might break

I think the pros clearly outweigh the cons, so I'm going to start
changing things over, potentially with a backwards-compatibility release
in the interim.  If anyone has a different idea, let me know.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020215/abb4063d/attachment.sig>

From acapnotic at twistedmatrix.com  Fri Feb 15 19:11:50 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 18:11:50 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013816691.3613.31.camel@zelda>
References: <1013816691.3613.31.camel@zelda>
Message-ID: <1013825510.2075.78.camel@troglodyte>

On Fri, 2002-02-15 at 15:44, Glyph Lefkowitz wrote:
> My proposed solution is to change the way remote methods are invoked:
> instead of emulating regular Python methods, they would be accessed
> through a 'callRemote' method

It's not "slightly more typing", it's a massive blow to the elegance and
transparency of spreadable object code.  I guess you're saying that the
transparancy has become a liability, as you can't necessarily tell if
you're invoking a local or remote object (...but I thought that was the
point?).  I'm also a little suprised because this is the first time I've
seen you vouch for any sort of "safety" mechanism to protect the
programmer from doing wayward things with eir data.

It also sounds like that this use case is inherently insecure.  You're
passing privledged information to
some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
really anything you can do about that.

-- 
The moon is waxing crescent, 10.3% illuminated, 3.1 days old.



From glyph at twistedmatrix.com  Fri Feb 15 19:39:08 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 15 Feb 2002 20:39:08 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013825510.2075.78.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>
Message-ID: <1013827148.4188.43.camel@zelda>

On Fri, 2002-02-15 at 20:11, Kevin Turner wrote:
> On Fri, 2002-02-15 at 15:44, Glyph Lefkowitz wrote:
> > My proposed solution is to change the way remote methods are invoked:
> > instead of emulating regular Python methods, they would be accessed
> > through a 'callRemote' method
> 
> It's not "slightly more typing", it's a massive blow to the elegance and
> transparency of spreadable object code.  I guess you're saying that the
> transparancy has become a liability, as you can't necessarily tell if
> you're invoking a local or remote object (...but I thought that was the
> point?).  I'm also a little suprised because this is the first time I've
> seen you vouch for any sort of "safety" mechanism to protect the
> programmer from doing wayward things with eir data.

It was never my intention that remote object communication be
transparent, only convenient.  (The party line is "translucent".)  In
fact, one of the use-cases that radix and I discussed on IRC was the
ability to have locally-callable asynchronous objects that behave like
PB references.  Since a PB object's semantics will differ slightly if it
is local or remote if you were to just wrap its results in a deferred
(thanks to serialization, and such) it would be desirable to have a
local interface as well, which could perform the necessary mutations on
the data to make it look as though it'd been serialized.

As it stands now, this wrapper would be pretty thick, creating at least
3 separate instances for a single method invocation.  In the case that
I'm proposing, though, all you'd need is to subclass a mixin that
implements callRemote and dispatches to "async_" prefixed method
instead.  From the user code point of view it would be about the same,
but it would simplify the implementation a lot.

> It also sounds like that this use case is inherently insecure.  You're
> passing privledged information to
> some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
> really anything you can do about that.

Well, what I propose to do about it <0.5 wink> is make it explicit that
the information you're sending *may* be going to a remote source.  This
causes the broken case -- where the client is trying to masquerade a
reference somewhere bad -- blow up, rather than merrily send your
information somewhere it shouldn't go.

If we intend to use this API for a general basis for client<->server
communication, it is desirable that we make it require as *little
thinking as possible* to write secure code.  Buffer overflows are, after
all, something that can be easily prevented in C; it's just that the
fact that it's hard makes it a common mistake.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020215/ca272d98/attachment.sig>

From carmstro at twistedmatrix.com  Fri Feb 15 20:12:54 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 15 Feb 2002 22:12:54 -0500
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013825510.2075.78.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>
Message-ID: <1013829176.733.6.camel@radii>

On Fri, 2002-02-15 at 21:11, Kevin Turner wrote:
> I guess you're saying that the
> transparancy has become a liability, as you can't necessarily tell if
> you're invoking a local or remote object (...but I thought that was the
> point?).  

For as long as I remember, that was *never* the point. Haven't you ever
heard glyph shouting from on high, "Explicit is better than implicit!"?
:)

> I'm also a little suprised because this is the first time I've
> seen you vouch for any sort of "safety" mechanism to protect the
> programmer from doing wayward things with eir data.

It's a different matter when you're talking about networked-app
security.

> It also sounds like that this use case is inherently insecure.  You're
> passing privledged information to
> some-object-passed-to-you-from-who-knows-what.  I'm not sure there's
> really anything you can do about that.

Well, the point was, the code wasn't *meant* to pass privelaged
information to an object across the wire - notice that it was a Copied.
This could also be done for more things than Copied - imagine a method
that takes a list as one of its arguments and appends some secure data
to it. You could spoof a list with a remote object that has an append()
method.

While I think 'callRemote' is slightly less aesthetic than previously,
this is still a serious issue that needs to be dealt with. I guess I can
live with callRemote if it's the best way to explicit-ize remote
methods.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From acapnotic at twistedmatrix.com  Fri Feb 15 21:04:38 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 20:04:38 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013829176.733.6.camel@radii>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii>
Message-ID: <1013832278.2075.114.camel@troglodyte>

On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> For as long as I remember, that was *never* the point. Haven't you ever
> heard glyph shouting from on high, "Explicit is better than implicit!"?

Funny words for a sect which celebrates in masqurading objects and
generally deplores strict type checking.

> Well, the point was, the code wasn't *meant* to pass privelaged
> information to an object across the wire - notice that it was a Copied.
> This could also be done for more things than Copied - imagine a method
> that takes a list as one of its arguments and appends some secure data
> to it. You could spoof a list with a remote object that has an append()
> method.

What do you mean, "wasn't meant to pass privledged information"?  Your
example has you appending the "secure data" to a list that's from who
knows where!  You have no idea who holds a reference to that list, or
who will hold references to the list (or certain items on the list) in
the near future.  And, as a happy little object, I don't see why you
should care.  You perform your operation with the given parameters, and
that's all your job is, isn't it?

I guess there's the "Referenceable vs Copyable" facet which I haven't
been paying a lot of attention to in this discussion.  When I choose
between those two spreadable flavours (the module name is spelled wrong,
BTW), I am thinking about what goes over the wire, but only in terms of
how much it will change, how much the states of the objects need to be
synchronized, how much traffic it's generating, etc.  But I've never
seen the use of Copyable as a security option.  If I had data I did not
want getting outside, I do not think I should entrust it to *any* object
which came from Outside, whether it be a RemoteCopy or RemoteCache or a
list-like object with whiskers.

I guess it's only fair to admit that I've written very little
application code with twisted.spread and read even less, so it's
entirely possible that I lack the experience to understand the issues
here...  but some things bein' said just don't ring true to me.

"So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

  Kevin

-- 
The moon is waxing crescent, 10.8% illuminated, 3.1 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020215/4c63cc42/attachment.sig>

From washort at twistedmatrix.com  Fri Feb 15 21:29:30 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 15 Feb 2002 22:29:30 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013827148.4188.43.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda>
Message-ID: <1013833770.4167.40.camel@ghostwheel>

On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:

> It was never my intention that remote object communication be
> transparent, only convenient.  (The party line is "translucent".)

Be that as it may, this seems like a rather large loss of convenience in
most cases. surely we can make this behaviour a runtime option on
Broker? Broker.enableParanoia, Broker.disableParanoia methods perhaps?
i leave the question of which is the default up for debate. :)

Allen Short          Programmer-Archaeologist          washort at twistedmatrix.com
`Software Engineering: How to program if you cannot.' --- Dijkstra



From acapnotic at twistedmatrix.com  Fri Feb 15 21:44:13 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 15 Feb 2002 20:44:13 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013833770.4167.40.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>
Message-ID: <1013834653.2096.118.camel@troglodyte>

On Fri, 2002-02-15 at 20:29, Allen Short wrote:
> On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:
> 
> > It was never my intention that remote object communication be
> > transparent, only convenient.  (The party line is "translucent".)
> 
> Be that as it may, this seems like a rather large loss of convenience in
> most cases.

Especially given my angle of approach to Twisted.
"What is it?"
"It's this great stuff that makes network applications super-easy to
write."
"Oh?  How's it do that?"
"Well there's this cool thing called PB [...] and then you can just call
methods on objects [...] internet!"

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020215/e62a7cea/attachment.sig>

From glyph at twistedmatrix.com  Sat Feb 16 04:42:48 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 05:42:48 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013832278.2075.114.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>
Message-ID: <1013859768.4603.117.camel@zelda>

On Fri, 2002-02-15 at 22:04, Kevin Turner wrote:
> On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> > For as long as I remember, that was *never* the point. Haven't you ever
> > heard glyph shouting from on high, "Explicit is better than implicit!"?
> 
> Funny words for a sect which celebrates in masqurading objects and
> generally deplores strict type checking.

Dynamic typing is very cool, for reasons I've described in detail
elsewhere.  Hence, I want to make it still be easy to write secure PB
code without mandating the writing of IDLs.  Assuming that whatever code
you write *must* be secure, which is more of a hindrance:
foo.callRemote("bar") or requiring a full interface definition before
you can even publish your object?

The distinction between masquerading locally (fooling yourself) and
masquerading remotely (fooling others) is the difference between having
a vivid imagination and being a con artist...

> > Well, the point was, the code wasn't *meant* to pass privelaged
> > information to an object across the wire - notice that it was a Copied.
> > This could also be done for more things than Copied - imagine a method
> > that takes a list as one of its arguments and appends some secure data
> > to it. You could spoof a list with a remote object that has an append()
> > method.
> 
> What do you mean, "wasn't meant to pass privledged information"?  Your
> example has you appending the "secure data" to a list that's from who
> knows where!  You have no idea who holds a reference to that list, or
> who will hold references to the list (or certain items on the list) in
> the near future.  And, as a happy little object, I don't see why you
> should care.  You perform your operation with the given parameters, and
> that's all your job is, isn't it?

There are two kinds of "who" here.  One "who" is to know the objects
that will have knowledge of your object.  That's encapsulation, which is
all well and good, but we break it sometimes, for various reasons;
python's nifty because it lets us do that when necessary.  The other
"who" is more important, though: it's the actual *people* that will have
access to the information that you're sending through that method call.

> I guess there's the "Referenceable vs Copyable" facet which I haven't
> been paying a lot of attention to in this discussion.  When I choose
> between those two spreadable flavours (the module name is spelled wrong,
> BTW), I am thinking about what goes over the wire, but only in terms of
> how much it will change, how much the states of the objects need to be
> synchronized, how much traffic it's generating, etc.  But I've never
> seen the use of Copyable as a security option.  If I had data I did not
> want getting outside, I do not think I should entrust it to *any* object
> which came from Outside, whether it be a RemoteCopy or RemoteCache or a
> list-like object with whiskers.

RemoteCopy and RemoteCache are both local classes; e.g. any information
you pass to methods that exist on them gets dealt with locally.  At
least in the code I'm writing for work, I'll often want to embed
"privileged" code in a RemoteCopy class, since it is dealing with
*information* from the "outside", but behavior locally.  For mirroring
the view of a simulation on a server, this is a common design pattern,
I'd imagine.

The proposal on the table makes the locality of the behavior much more
explicit -- unless your method begins with 'callRemote', the behavior
you're invoking will *definitely* be local.  Attempts to invoke
(potentially) remote behavior without first saying so will just blow up.

> I guess it's only fair to admit that I've written very little
> application code with twisted.spread and read even less, so it's
> entirely possible that I lack the experience to understand the issues
> here...  but some things bein' said just don't ring true to me.

WELL OF COURSE YOU HAVE NO IDEA WHAT YOU'RE TALKING ABOUT THEN!!!! ;-)

Seriously, thanks for your response; this is exactly the sort of
discussion I wanted to generate.  You haven't convinced me that I was
wrong yet ;-), but I would like it if the motivations for doing this are
clearly understood.

If you haven't read much PB code, the problem I'm describing might seem
a trivial concern, but I've found at least two instances of this problem
"in the wild".  One was a mistake made by me and one was someone else. 
Neither could be made to divulge critical information, but both could be
exploited to give a user an unfair advantage or consume a large
proportion of the server's CPU/bandwidth.

Do you have a solution that's less aesthetically unpleasant?  I think
that this is a good compromise all around (mumble, frotz, I want macros
and promises and continuations so I can say [wait-for [tell obj message
arg arg arg]]).  But then again, I actually find it *more* aesthetically
pleasant to say THIS HERE IS LIKELY TO BE REMOTE.  Despite the other
advantages of moving to PB methods returning Deferreds, I was glad that
I could previously grep for 'pbcallback' and get most of the methods
that would be invoked remotely.

> "So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

Who would want to replace me with another evil robot?

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/9c34ec4d/attachment.sig>

From glyph at twistedmatrix.com  Sat Feb 16 04:47:35 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 05:47:35 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013833770.4167.40.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>
Message-ID: <1013860056.4603.123.camel@zelda>

On Fri, 2002-02-15 at 22:29, Allen Short wrote:
> On Fri, 2002-02-15 at 20:39, Glyph Lefkowitz wrote:
> 
> > It was never my intention that remote object communication be
> > transparent, only convenient.  (The party line is "translucent".)
> 
> Be that as it may, this seems like a rather large loss of convenience in
> most cases. surely we can make this behaviour a runtime option on
> Broker? Broker.enableParanoia, Broker.disableParanoia methods perhaps?
> i leave the question of which is the default up for debate. :)

The semantics of remote objects will remain identical, the syntax will
change slightly.  It will still be possible to emulate remote objects by
implementing the callRemote method to do local dispatch (which could be
automated).

I guess I'm just being thick here.  What is the convenience being lost? 
The additional 10 characters per remote invocation doesn't seem that
significant to me.  (After all, it is currently still necessary to
emulate the behavior of remote objects, since they're always
asynchronous.)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/47306d8b/attachment.sig>

From abo at minkirri.apana.org.au  Sat Feb 16 05:39:05 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Sat, 16 Feb 2002 23:39:05 +1100
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013859768.4603.117.camel@zelda>
References: <1013816691.3613.31.camel@zelda> <1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii> <1013832278.2075.114.camel@troglodyte> <1013859768.4603.117.camel@zelda>
Message-ID: <20020216123904.GA13908@minkirri.apana.org.au>

On Sat, Feb 16, 2002 at 05:42:48AM -0600, Glyph Lefkowitz wrote:
> On Fri, 2002-02-15 at 22:04, Kevin Turner wrote:
> > On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
[...]
> > What do you mean, "wasn't meant to pass privledged information"?  Your
> > example has you appending the "secure data" to a list that's from who
> > knows where!  You have no idea who holds a reference to that list, or
> > who will hold references to the list (or certain items on the list) in
> > the near future.  And, as a happy little object, I don't see why you
> > should care.  You perform your operation with the given parameters, and
> > that's all your job is, isn't it?
> 
> There are two kinds of "who" here.  One "who" is to know the objects
> that will have knowledge of your object.  That's encapsulation, which is
> all well and good, but we break it sometimes, for various reasons;
> python's nifty because it lets us do that when necessary.  The other
> "who" is more important, though: it's the actual *people* that will have
> access to the information that you're sending through that method call.

coming completely out of the blue with no experience or understanding to
give me enough qualifications to even comment (but doing it anyway :-).

Just a thought; why is a local object any more trustworthy than a remote
one? To me the local vs remote trust boundary seem to be a bit arbitary. It
is better to think about the trust relationship between the objects than
where they are located. Why and how do the objects trust each other?

Perhaps this _can_ be reduced to "Because it's local and hence I or some
other local object I trust created it". However, I think once you start
going down the path of secure transactions between objects, it's better to
try and provide a generalised solution. There are various ways that
authenticated and secured communications between objects can be implemented,
and perhaps even made "translucent".


-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From washort at twistedmatrix.com  Sat Feb 16 10:55:03 2002
From: washort at twistedmatrix.com (Allen Short)
Date: 16 Feb 2002 11:55:03 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013860056.4603.123.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>  <1013860056.4603.123.camel@zelda>
Message-ID: <1013882103.4167.43.camel@ghostwheel>

On Sat, 2002-02-16 at 05:47, Glyph Lefkowitz wrote:
> I guess I'm just being thick here.  What is the convenience being lost? 
> The additional 10 characters per remote invocation doesn't seem that
> significant to me. 

it does to me, if only because of the existing code using it. if you
want to deprecate the current way of doing things, that'd work, i think:
but let's not spawn a massive refactoring frenzy all at once, please?

-- 
Allen Short          Programmer-Archaeologist         
washort at twistedmatrix.com
"TECO was *IT* man,  TECO was more fun than a sendmail.cf file.  TECO
was
a bar you had to clear if you wanted to be a Real Hacker (tm)." - Foobar
in afc



From glyph at twistedmatrix.com  Sat Feb 16 10:59:09 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 11:59:09 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <20020216123904.GA13908@minkirri.apana.org.au>
References: <1013816691.3613.31.camel@zelda>
	<1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii>
	<1013832278.2075.114.camel@troglodyte> <1013859768.4603.117.camel@zelda> 
	<20020216123904.GA13908@minkirri.apana.org.au>
Message-ID: <1013882350.4188.134.camel@zelda>

On Sat, 2002-02-16 at 06:39, Donovan Baarda wrote:
> On Sat, Feb 16, 2002 at 05:42:48AM -0600, Glyph Lefkowitz wrote:

> > There are two kinds of "who" here.  One "who" is to know the objects
> > that will have knowledge of your object.  That's encapsulation, which is
> > all well and good, but we break it sometimes, for various reasons;
> > python's nifty because it lets us do that when necessary.  The other
> > "who" is more important, though: it's the actual *people* that will have
> > access to the information that you're sending through that method call.
> 
> coming completely out of the blue with no experience or understanding to
> give me enough qualifications to even comment (but doing it anyway :-).
> 
> Just a thought; why is a local object any more trustworthy than a remote
> one? To me the local vs remote trust boundary seem to be a bit arbitary. It
> is better to think about the trust relationship between the objects than
> where they are located. Why and how do the objects trust each other?

You're confusing "objects" and "people".

I don't trust the remote objects because (A) the communication to them
is potentially visible over the wire and (B) they don't actually exist
on physical hardware I control, e.g. their behavior might have been
tampered with.  They are under the complete control of another person,
who might as well be speaking the wire-protocol personally.

Thinking from a security viewpoint, they *have* already been tampered
with, and the question is "how do I reduce the impact of that on my
service?".

> Perhaps this _can_ be reduced to "Because it's local and hence I or some
> other local object I trust created it". However, I think once you start
> going down the path of secure transactions between objects, it's better to
> try and provide a generalised solution. There are various ways that
> authenticated and secured communications between objects can be implemented,
> and perhaps even made "translucent".

What gave you the idea we were talking about secure distributed
transactions?  I'm just talking about making our current implementation
of remote communications more secure (by default).

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/41584f64/attachment.sig>

From glyph at twistedmatrix.com  Sat Feb 16 11:02:34 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 12:02:34 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013882103.4167.43.camel@ghostwheel>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013827148.4188.43.camel@zelda> 
	<1013833770.4167.40.camel@ghostwheel>  <1013860056.4603.123.camel@zelda> 
	<1013882103.4167.43.camel@ghostwheel>
Message-ID: <1013882555.3613.139.camel@zelda>

On Sat, 2002-02-16 at 11:55, Allen Short wrote:
> On Sat, 2002-02-16 at 05:47, Glyph Lefkowitz wrote:
> > I guess I'm just being thick here.  What is the convenience being lost? 
> > The additional 10 characters per remote invocation doesn't seem that
> > significant to me. 
> 
> it does to me, if only because of the existing code using it. if you
> want to deprecate the current way of doing things, that'd work, i think:
> but let's not spawn a massive refactoring frenzy all at once, please?

Heh.  I have to deal with a volume of code about 4 times the size that
is publicly visible, so that is not lost on me :).

I do plan to slowly deprecate it, with warning messages printed each
time a "bad" remote method is called.  Otherwise I'd be sure to miss at
least one remote notification on the first pass (after all, part of the
problem is that they're difficult to locate right now since they're not
tagged with anything distinctive...)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/f894b4a1/attachment.sig>

From sean at twistedmatrix.com  Sat Feb 16 11:04:49 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Sat, 16 Feb 2002 12:04:49 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013832278.2075.114.camel@troglodyte>
Message-ID: <HOEEKPCOKELHCNIJNMAGMEOACEAA.sean@twistedmatrix.com>

well, as someone who HAS written a lot of spread code I'd say that the
current interface that assumes method calls on remote objects are remote can
be confusing. In a few cases I have found my code doing strange things on
the network when I was expecting local behavior.

The "callRemote" syntax would make remote operation explicit - which I am in
favor of.

Another observation from writing lots of spread code is that the remote
interfaces for objects tend to be very small.  This reduces the impact of
the "more typing required" argument against this change. In my current
application that uses pb which is 4300 lines of python and about 70 classes,
there are only 19 remote methods defined. Changing my code over to use the
"callRemote" syntax would take a couple of hours at most. (i have unit tests
:) ).

BTW, I was the other person that Glyph mention who had written code
exploitable by this issue.


-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Kevin Turner
Sent: Friday, February 15, 2002 10:05 PM
To: Twisted List
Subject: Re: [Twisted-Python] Potential PB Security Problem (And
Solution)


On Fri, 2002-02-15 at 19:12, Christopher Armstrong wrote:
> For as long as I remember, that was *never* the point. Haven't you ever
> heard glyph shouting from on high, "Explicit is better than implicit!"?

Funny words for a sect which celebrates in masqurading objects and
generally deplores strict type checking.

> Well, the point was, the code wasn't *meant* to pass privelaged
> information to an object across the wire - notice that it was a Copied.
> This could also be done for more things than Copied - imagine a method
> that takes a list as one of its arguments and appends some secure data
> to it. You could spoof a list with a remote object that has an append()
> method.

What do you mean, "wasn't meant to pass privledged information"?  Your
example has you appending the "secure data" to a list that's from who
knows where!  You have no idea who holds a reference to that list, or
who will hold references to the list (or certain items on the list) in
the near future.  And, as a happy little object, I don't see why you
should care.  You perform your operation with the given parameters, and
that's all your job is, isn't it?

I guess there's the "Referenceable vs Copyable" facet which I haven't
been paying a lot of attention to in this discussion.  When I choose
between those two spreadable flavours (the module name is spelled wrong,
BTW), I am thinking about what goes over the wire, but only in terms of
how much it will change, how much the states of the objects need to be
synchronized, how much traffic it's generating, etc.  But I've never
seen the use of Copyable as a security option.  If I had data I did not
want getting outside, I do not think I should entrust it to *any* object
which came from Outside, whether it be a RemoteCopy or RemoteCache or a
list-like object with whiskers.

I guess it's only fair to admit that I've written very little
application code with twisted.spread and read even less, so it's
entirely possible that I lack the experience to understand the issues
here...  but some things bein' said just don't ring true to me.

"So-at-least-ONE-of-us-has-been-replaced-by-an-evil-robot"-ly yours,

  Kevin

--
The moon is waxing crescent, 10.8% illuminated, 3.1 days old.




From acapnotic at twistedmatrix.com  Sat Feb 16 12:26:47 2002
From: acapnotic at twistedmatrix.com (Kevin Turner)
Date: 16 Feb 2002 11:26:47 -0800
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013859768.4603.117.camel@zelda>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda>
Message-ID: <1013887608.1546.19.camel@troglodyte>

On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> If you haven't read much PB code, the problem I'm describing might seem
> a trivial concern, but I've found at least two instances of this problem
> "in the wild".

Is there a way to fix this?  My lack of education, that is.  There's
more code within the Twisted repository left more me to read, but IIRC
there are actually very few PB interfaces defined there.  (We have Words
and Manhole and...?)   More pertinant here would be other applications
(from the "wilds") which employ Twisted technology.  Are there any such
0775 codebases I should be aware of?  The accusation has been made that
no one actually *uses* Twisted for anything (not to name names, but he's
Canadian and works in Japan), but assuming that's not the case, maybe we
could beef up the "sites using Twisted" list a little.

> Who would want to replace me with another evil robot?

"Do not trust the Shover-robot, he is malfunctioning,"

 - Kevin

-- 
The moon is waxing crescent, 14.8% illuminated, 3.7 days old.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 240 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/6b19ac53/attachment.sig>

From carmstro at twistedmatrix.com  Sat Feb 16 12:48:14 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 16 Feb 2002 14:48:14 -0500
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <1013888896.1682.3.camel@radii>

On Sat, 2002-02-16 at 14:26, Kevin Turner wrote:
> The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

Ohhh, excellent idea!! Let's break a bunch of interfaces, and then when
everybody who uses Twisted starts complaining to us, we can get them to
tell us where they use it!

> > Who would want to replace me with another evil robot?
> 
> "Do not trust the Shover-robot, he is malfunctioning,"

I wonder if glyph has stairs in his house...

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From glyph at twistedmatrix.com  Sat Feb 16 12:53:30 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 16 Feb 2002 13:53:30 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda> 
	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 
	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <1013889210.3613.156.camel@zelda>

On Sat, 2002-02-16 at 13:26, Kevin Turner wrote:
> On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> > If you haven't read much PB code, the problem I'm describing might seem
> > a trivial concern, but I've found at least two instances of this problem
> > "in the wild".
> 
> Is there a way to fix this?  My lack of education, that is.  There's
> more code within the Twisted repository left more me to read, but IIRC
> there are actually very few PB interfaces defined there.  (We have Words
> and Manhole and...?)

Distributed twisted.web, but you're right, that's about it.

> More pertinant here would be other applications
> (from the "wilds") which employ Twisted technology.  Are there any such
> 0775 codebases I should be aware of?  The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

It is indeed unfortunate that much Twisted-using code is closed.  Not my
decision, I assure you ;).

I believe Itamar is using PB, so you could ask to look at his code -- I
know that Sean was planning on releasing a small demo at some point. 
However, this is a circular problem.  Much of this past week for me has
been spent working on a new website for tm.com and trying to come up
with introductory documentation for PB.  It needs to be documented,
standardized, and released as 1.0 before we can really expect droves of
people to come flocking to it.

Does anyone else on this list have some code to reference?  The other
folks I know of using Twisted are mostly using the other components at
this point.

> > Who would want to replace me with another evil robot?
> 
> "Do not trust the Shover-robot, he is malfunctioning,"

"Do not trust the Pusher-robot, he is doing a little too much of his own
stuff."

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020216/12a34c8a/attachment.sig>

From itamar at zoteca.com  Sun Feb 17 00:27:31 2002
From: itamar at zoteca.com (Itamar Shtull-Trauring)
Date: Sun, 17 Feb 2002 09:27:31 +0200 (IST)
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013816691.3613.31.camel@zelda>
Message-ID: <Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>

OK,

My first thoughts - I think that this is a good idea. The problem with
pretending to be a regular method call is that, well, it isn't. You may
get disconnected, for example. So we want to encourage people to realize
thjat they can't just use the same code. Of course, this'll make
web.distrib rather more difficult to implement nicely...

However, if we're unto security, some form of static typing on
arguments passed from remote clients to Referenceables methods would
be very useful, some would say necessary, for
secure programming. This would aid documentation as well. Switching to
callRemote still doesn't solve the "passing the wrong objects
maliciously" issue, just one very specialized instance of it. And I ain't
suggesting IDL - I'm sure we could come up with a solution embedded in
python source code that is easy to type (say, using oscar-style
docstrings or some ther form of annotation, and a
enforceInterface(klass) function that parses them and
uses t.p.hook).





From glyph at twistedmatrix.com  Sun Feb 17 00:36:29 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Feb 2002 01:36:29 -0600
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: 	<Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>
References: 	<Pine.LNX.4.21.0202170911420.8329-100000@female.israel.maxnm.com>
Message-ID: <1013931389.4188.178.camel@zelda>

On Sun, 2002-02-17 at 01:27, Itamar Shtull-Trauring wrote:
> OK,
> 
> My first thoughts - I think that this is a good idea. The problem with
> pretending to be a regular method call is that, well, it isn't. You may
> get disconnected, for example. So we want to encourage people to realize
> thjat they can't just use the same code. Of course, this'll make
> web.distrib rather more difficult to implement nicely...

Nah.  We already have to manually frob the interface -- peeling off
methods of a remote reference and sticking them to a copy.  It would
probably look cleaner if we were more explicit about it, anyway :)  I
suppose each of those one-line assignments would turn into a two-line
method declaration (and gasp!  a newline to separate them) but it would
also provide for more flexible emulation of the request interface.  I
think that the existing code there may be an example of the
"poltergeists" antipattern.

> However, if we're unto security, some form of static typing on
> arguments passed from remote clients to Referenceables methods would
> be very useful, some would say necessary, for
> secure programming. This would aid documentation as well. Switching to
> callRemote still doesn't solve the "passing the wrong objects
> maliciously" issue, just one very specialized instance of it. And I ain't
> suggesting IDL - I'm sure we could come up with a solution embedded in
> python source code that is easy to type (say, using oscar-style
> docstrings or some ther form of annotation, and a
> enforceInterface(klass) function that parses them and
> uses t.p.hook).

Well, yes.  We need a documentation standard for return types (the sound
you hear there is another section of the coding standard being exploded
in a concrete bunker, several miles away) and we might as well use that
to enforce interfaces when we find them.  However -- any sort of
polymorphism is a potential security hole in that regard.  I would like
to see some exploit demonstrations of the sorts of holes that one could
create by passing the wrong serialized data, provided that remote calls
were more explicit.  I don't think it's really serious, or could be
resolved by stricter type-checking.  (After all, any behavior besides
"blow up" pretty much assumes that the client is going to be passing an
object that adheres to a correct interface.)

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020217/c612eb3e/attachment.sig>

From levi at top.monad.net  Sun Feb 17 02:34:26 2002
From: levi at top.monad.net (Levi)
Date: Sun, 17 Feb 2002 04:34:26 -0500
Subject: [Twisted-Python] spread question
Message-ID: <20020217043425.A5633@pest>

I was playing with twisted.spread.pb and was wondering if it is possible
for the server to pass an object to the client, and then call methods on
that object and have the methods run on the client. I know you can (it's
quit easy actually) have the client pass the object to the server which
can then call it's methods, but it'd be easier to impliment what I've
got in mind if the object originates at the server.

-Levi



From glyph at twistedmatrix.com  Sun Feb 17 02:48:22 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 17 Feb 2002 03:48:22 -0600
Subject: [Twisted-Python] spread question
In-Reply-To: <20020217043425.A5633@pest>
References: <20020217043425.A5633@pest>
Message-ID: <1013939303.4188.181.camel@zelda>

Ugh.  I'm writing these docs right now... the answer to your question is
"Cacheable".  Look at the docstrings and I hope they help.  If you have
more questions feel free to ask.

On Sun, 2002-02-17 at 03:34, Levi wrote:
> I was playing with twisted.spread.pb and was wondering if it is possible
> for the server to pass an object to the client, and then call methods on
> that object and have the methods run on the client. I know you can (it's
> quit easy actually) have the client pass the object to the server which
> can then call it's methods, but it'd be easier to impliment what I've
> got in mind if the object originates at the server.
> 
> -Levi
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020217/e7b09551/attachment.sig>

From tv at twistedmatrix.com  Sun Feb 17 23:56:58 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 18 Feb 2002 08:56:58 +0200
Subject: [Twisted-Python] Building Clients with Twisted ... and a gopher protocol.
In-Reply-To: <87it8zy4el.fsf@c0re.bewaff.net>
References: <87it8zy4el.fsf@c0re.bewaff.net>
Message-ID: <877kpbxop1.fsf@ki.yok.utu.fi>

drt at un.bewaff.net (Doobee R. Tzeck) writes:

> I'm trying to build a non interactive client app with
> twisted. Let's assume it is a webcrawler. I'm not sure how to do
> that. Might be like this:
> 
> Create a Loop Object which checks if the desired number of
> connections are running and if not create new ones an add them as
> connectors.
> 
> Or should I rip out application.run() and write my own look to
> better handle the starting of new crawlers?

	You may want to look at
        twisted/test/interactive/ldap_parallelsearch.py, which is an
        LDAP client that does 5 simultaneous connections, 10
        asynchronous queries (results flow in arbitrary order) per
        connection.

        Of course, it ain't HTTP.

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From junkster at rochester.rr.com  Mon Feb 18 16:34:33 2002
From: junkster at rochester.rr.com (Benjamin Schollnick)
Date: Mon, 18 Feb 2002 18:34:33 -0500
Subject: [Twisted-Python] Windows issues...
Message-ID: <B896F9B9.5CE4%junkster@rochester.rr.com>

Folks,

   I've got some questions, with windows usage of Twisted Matrix...

   I'm considering using TM as the framework for a revival of a another
program that I use to write....

   But, I ran into *ALOT* of issues on the PC side...
(I wasn't even able to get it to work on the Mac due to Line-ending issues,
I haven't figured a simple way to convert the entire tree yet).

1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
while building
   something in the twisted.spread.cbanana section...

2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
etc)
   This is a major hindrance, because either I have to rename the file, or
   execute it explicitly "python mktap ....etc....".  I have windows set to
run
   the .py files via python automatically.

3) web.distrib has some issues.  Mainly attempting to use the pwd unit under
   windows.  I was able to add:

       try:
               .....
               .....
       except:
               pass

   to the import statement and the actual PWD / user area, without any
obvious harmful
   problems....

4) Error checking is extremely light....

       mktap web 

   failed, until I fixed #3.  The program didn't report any useful error
messages, it just repeated the help text indicating what types (web, ftp,
etc) could be used for the command line.

5) Even after fixing #3, mktap web --static static, isn't working.

6) Under Windows, the default should be -n for twistd, and the PID file
shouldn't be created.   At least, as it is now.  twistd just "stops", after
it starts up and drops us back to the command line, and examination shows
that the program isn't running.  So at least as a workaround, the -n mode
works....

I guest a better question is, has twistedmatrix been tested under Windows?
It really seems to be unix centric in it's programming...

               - Benjamin 



From andrew-twisted at puzzling.org  Mon Feb 18 17:24:35 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 11:24:35 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B896F9B9.5CE4%junkster@rochester.rr.com>
References: <B896F9B9.5CE4%junkster@rochester.rr.com>
Message-ID: <20020219002435.GA9849@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> Folks,
> 
>    I've got some questions, with windows usage of Twisted Matrix...

I use Twisted under Windows, so I may be able to offer some help..

> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
> while building
>    something in the twisted.spread.cbanana section...

CL.EXE is a command line program that comes with MS Visual C++...  setup.py
is basically trying to compile a C extension module.  I can send you a
binary for that file if you don't have MS VC++ installed, otherwise run
VCVARS32.BAT and try again. 

> 2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
> etc)
>    This is a major hindrance, because either I have to rename the file, or
>    execute it explicitly "python mktap ....etc....".  I have windows set to
> run
>    the .py files via python automatically.

This is easily fixed with short bash script, but I agree, this is annoyed.

I'd suggest the Twisted developers look at how, e.g. PyChecker or Teud does
it (various scripts get installed in %PYTHONPATH%/scripts/<foo>.bat).

> 3) web.distrib has some issues.  Mainly attempting to use the pwd unit under
[snip]
> 4) Error checking is extremely light....
[snip]
> 5) Even after fixing #3, mktap web --static static, isn't working.

I don't use the twisted.web stuff (yet ;), so I can't offer any help here :(

> 6) Under Windows, the default should be -n for twistd, and the PID file
> shouldn't be created.   At least, as it is now.  twistd just "stops", after
> it starts up and drops us back to the command line, and examination shows
> that the program isn't running.  So at least as a workaround, the -n mode
> works....

Yeah, -n uses os.fork, which is not available under Windows.  You probably
need to use NT services instead...

Alternatively, consider using the cygwin version of Python -- it is closer
to the unix version, and so os.fork will work.  Also, it comes with gcc, so
cbanana would compile correctly.  Unfortunately, I don't think it can
interoperate with the Win32 extensions (at least, not that I know of).

> I guest a better question is, has twistedmatrix been tested under Windows?
> It really seems to be unix centric in it's programming...

It basically works.  The other problem to watch out for is that
Protocol.connectionFailed won't trigger unless you specify a timeout for
your tcp.Client, because select works slightly differently on Windows.

Incidentally, I'm not using the twistd stuff *at all* (I don't yet
understand the need for it under Windows, but then I don't even know exactly
what it's meant to do...).  Instead, I'm using this little file:

--- ServerFramework/Service.py ---
import win32serviceutil, win32service

"""Example use of this module:

from ServerFramework.Service import Service, main
import ExampleServer

class ExampleServerService(Service):
    _svc_name_ = "ExampleServerService"
    _svc_display_name_ = "My Example Server Service"
    main = ExampleServer.main

if __name__ == '__main__':
    main(ExampleServerService)
"""


try:
    import twisted
except ImportError:
    print "Twisted Python must be installed to run this service"
    raise

class Service(win32serviceutil.ServiceFramework):
    """I am a template service for ServerFramework servers.
    
    You should subclass me and override the following attributes:
        _svc_name_          -- see win32serviceutil docs
        _svc_display_name_  -- see win32serviceutil docs
        main                -- function that starts your server
    
    You can also override:
        logFile             -- filename for where debug messages will be saved
                               (default: c:/<_svc_name_>.log)
    """
    _svc_name_ = "UnnamedServer"
    _svc_display_name_ = "My UNNAMED Server"
    main = None
    logFile = None

    def __init__(self, *args):
        win32serviceutil.ServiceFramework.__init__(self, *args)
        if not self.logFile:
            self.logFile = 'c:/%s.log' % (self._svc_name_,)

    def SvcDoRun(self):
        from twisted.python.log import startLogging
        startLogging(open(self.logFile,'a'))
        # Call main, note that it is not a method of this class, so we use
        # self.main.im_func() instead of self.main().
        self.main.im_func()

    def SvcStop(self):
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
        from twisted.internet.main import shutDown
        shutDown()

def main(svc):
	win32serviceutil.HandleCommandLine(svc)
    
if __name__ == '__main__':
    print "This is a library module, and should not be executed."
---

It basically wraps up the functionality of the win32serviceutil in a
convenient way for Twisted servers.  Once you've used it as shown in the
example, just run it from the commandline -- it's self explantory (it uses
Mark Hammond's win32serviceutil.HandleCommandLine function to let you
install the service).  I'm not sure if the self.main.im_func trick will work
on older Pythons; I use 2.2.

I hope this is of some use to you.

-Andrew.




From andrew-twisted at puzzling.org  Mon Feb 18 17:28:43 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 11:28:43 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <20020219002843.GA10302@ritsuko.xware.cx>

On Tue, Feb 19, 2002 at 11:24:35AM +1100, Andrew Bennetts wrote:
> Yeah, -n uses os.fork, which is not available under Windows.  You probably
> need to use NT services instead...

I of course meant to say that *without* -n, it uses os.fork...

-Andrew.




From glyph at twistedmatrix.com  Mon Feb 18 17:52:56 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 18 Feb 2002 18:52:56 -0600
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> 
	<20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <1014079976.13000.49.camel@zelda>

On Mon, 2002-02-18 at 18:24, Andrew Bennetts wrote:
> On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> > Folks,
> > 
> >    I've got some questions, with windows usage of Twisted Matrix...
> 
> I use Twisted under Windows, so I may be able to offer some help..
> 

Hey Andrew, thanks for answering that question.  You beat my response,
almost as I was sending it ;)

The Twisted team really needs a dedicated windows person.  Would you be
interested in taking up that mantle and making some of these issues go
away in the central distribution?  It sounds like you've got a smoother
windows work-flow than I have here.

-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020218/cdcd4952/attachment.sig>

From andrew-twisted at puzzling.org  Mon Feb 18 18:03:59 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 12:03:59 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <1014079976.13000.49.camel@zelda>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx> <1014079976.13000.49.camel@zelda>
Message-ID: <20020219010359.GA10694@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 06:52:56PM -0600, Glyph Lefkowitz wrote:
> Hey Andrew, thanks for answering that question.  You beat my response,
> almost as I was sending it ;)

Heh.

> The Twisted team really needs a dedicated windows person.  Would you be
> interested in taking up that mantle and making some of these issues go
> away in the central distribution?  It sounds like you've got a smoother
> windows work-flow than I have here.

Most of my time at work is now spent coding Twisted servers, which is why
I'm familiar with all these issues.

I'd love to take up that mantle, but I rarely run Windows at home...  so I
won't commit myself fully yet, but I certainly would like to see how much I
can help.

-Andrew.




From abo at minkirri.apana.org.au  Mon Feb 18 18:26:25 2002
From: abo at minkirri.apana.org.au (Donovan Baarda)
Date: Tue, 19 Feb 2002 12:26:25 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
References: <B896F9B9.5CE4%junkster@rochester.rr.com> <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <20020219012625.GG32666@minkirri.apana.org.au>

On Tue, Feb 19, 2002 at 11:24:35AM +1100, Andrew Bennetts wrote:
> On Mon, Feb 18, 2002 at 06:34:33PM -0500, Benjamin Schollnick wrote:
> > Folks,
> > 
> >    I've got some questions, with windows usage of Twisted Matrix...
[...]
> > 2) A lot of the files, don't have a .py extension.  (i.e. mktap, twistd,
> > etc)
> >    This is a major hindrance, because either I have to rename the file, or
> >    execute it explicitly "python mktap ....etc....".  I have windows set to
> > run
> >    the .py files via python automatically.
> 
> This is easily fixed with short bash script, but I agree, this is annoyed.

Anyone attempting to do anything under windoze should look at the cygwin
tools. the cygwin bash shell automaticly executes things with #!/... lines
for you.

-- 
----------------------------------------------------------------------
ABO: finger abo at minkirri.apana.org.au for more info, including pgp key
----------------------------------------------------------------------



From junkster at rochester.rr.com  Mon Feb 18 19:15:41 2002
From: junkster at rochester.rr.com (Benjamin Schollnick)
Date: Mon, 18 Feb 2002 21:15:41 -0500
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219002435.GA9849@ritsuko.xware.cx>
Message-ID: <B8971F7D.5CEF%junkster@rochester.rr.com>

on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:

>> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
>> while building
>> something in the twisted.spread.cbanana section...
> 
> CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> is basically trying to compile a C extension module.  I can send you a
> binary for that file if you don't have MS VC++ installed, otherwise run
> VCVARS32.BAT and try again.

No Visual C++....

If you don't mind sending it, I would appreciate it...

This really needs to be noted.... I admit, I didn't search around too
much, but I didn't see anything mentioning that it required a C/C++
compiler...

(How about a precompiled Windows binary?  Or having Distutils install the
precompiled binary)....

>> 6) Under Windows, the default should be -n for twistd, and the PID file
>> shouldn't be created.   At least, as it is now.  twistd just "stops", after
>> it starts up and drops us back to the command line, and examination shows
>> that the program isn't running.  So at least as a workaround, the -n mode
>> works....
> 
> Yeah, -n uses os.fork, which is not available under Windows.  You probably
> need to use NT services instead...

That's what I figured....

(By NT Services, you mean the services listed from control panels -->
services?)

But I dislike the NT services.... I've never seen a service get installed,
that will "uninstall" properly...  (Usually add/remove program doesn't
uninstall the service)

I prefer to run the console......reminds me a little bit more of a syslog
window... >g<


> Alternatively, consider using the cygwin version of Python -- it is closer
> to the unix version, and so os.fork will work.  Also, it comes with gcc, so
> cbanana would compile correctly.  Unfortunately, I don't think it can
> interoperate with the Win32 extensions (at least, not that I know of).

I use the Win32 services, include ODBC... So that's not really a useable
workaround...

>> I guest a better question is, has twistedmatrix been tested under Windows?
>> It really seems to be unix centric in it's programming...
> 
> It basically works.  The other problem to watch out for is that
> Protocol.connectionFailed won't trigger unless you specify a timeout for
> your tcp.Client, because select works slightly differently on Windows.

> Incidentally, I'm not using the twistd stuff *at all* (I don't yet
> understand the need for it under Windows, but then I don't even know exactly
> what it's meant to do...).  Instead, I'm using this little file:

Is the following code "temporary"....  It's considered a service while
running, but doesn't get installed in the services control panel?

It looks interesting, but I don't want to register the app as a "true"
service... As I mentioned before, I can't find a reliable way to remove
a service, without registry hacking...

            -- Benjamin

> --- ServerFramework/Service.py ---
> import win32serviceutil, win32service
> 
> """Example use of this module:
> 
> from ServerFramework.Service import Service, main
> import ExampleServer
> 
> class ExampleServerService(Service):
> _svc_name_ = "ExampleServerService"
> _svc_display_name_ = "My Example Server Service"
> main = ExampleServer.main
> 
> if __name__ == '__main__':
> main(ExampleServerService)
> """
> 
> 
> try:
> import twisted
> except ImportError:
> print "Twisted Python must be installed to run this service"
> raise
> 
> class Service(win32serviceutil.ServiceFramework):
> """I am a template service for ServerFramework servers.
> 
> You should subclass me and override the following attributes:
> _svc_name_          -- see win32serviceutil docs
> _svc_display_name_  -- see win32serviceutil docs
> main                -- function that starts your server
> 
> You can also override:
> logFile             -- filename for where debug messages will be saved
> (default: c:/<_svc_name_>.log)
> """
> _svc_name_ = "UnnamedServer"
> _svc_display_name_ = "My UNNAMED Server"
> main = None
> logFile = None
> 
> def __init__(self, *args):
> win32serviceutil.ServiceFramework.__init__(self, *args)
> if not self.logFile:
> self.logFile = 'c:/%s.log' % (self._svc_name_,)
> 
> def SvcDoRun(self):
> from twisted.python.log import startLogging
> startLogging(open(self.logFile,'a'))
> # Call main, note that it is not a method of this class, so we use
> # self.main.im_func() instead of self.main().
> self.main.im_func()
> 
> def SvcStop(self):
> self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)
> from twisted.internet.main import shutDown
> shutDown()
> 
> def main(svc):
> win32serviceutil.HandleCommandLine(svc)
> 
> if __name__ == '__main__':
> print "This is a library module, and should not be executed."




From carmstro at twistedmatrix.com  Mon Feb 18 19:36:59 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 18 Feb 2002 21:36:59 -0500
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B8971F7D.5CEF%junkster@rochester.rr.com>
References: <B8971F7D.5CEF%junkster@rochester.rr.com>
Message-ID: <1014086221.1000.8.camel@radii>

On Mon, 2002-02-18 at 21:15, Benjamin Schollnick wrote:
> on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:
> 
> >> 1) setup.py install    died....It stopped when it couldn't find "CL.EXE",
> >> while building
> >> something in the twisted.spread.cbanana section...
> > 
> > CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> > is basically trying to compile a C extension module.  I can send you a
> > binary for that file if you don't have MS VC++ installed, otherwise run
> > VCVARS32.BAT and try again.
> 
> No Visual C++....
> 
> If you don't mind sending it, I would appreciate it...

cBanana is an optional C implementation of the regular pure-python
banana. You don't need it.  I guess for now you can just hack setup.py
and comment out the section that looks like this:

setup_args['ext_modules'] = [
    Extension("twisted.spread.cBanana",
[extpath("twisted/spread/cBanana.c")]),
    ]

> This really needs to be noted.... I admit, I didn't search around too
> much, but I didn't see anything mentioning that it required a C/C++
> compiler...

It doesn't require one, but apparently the setup scripts barf if you
don't have one.

-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From andrew at puzzling.org  Mon Feb 18 19:55:43 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 13:55:43 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <B8971F7D.5CEF%junkster@rochester.rr.com>
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com>
Message-ID: <20020219025543.GA11470@ritsuko.xware.cx>

On Mon, Feb 18, 2002 at 09:15:41PM -0500, Benjamin Schollnick wrote:
> on 2/18/02 7:24 PM, Andrew Bennetts at andrew-twisted at puzzling.org wrote:
> > CL.EXE is a command line program that comes with MS Visual C++...  setup.py
> > is basically trying to compile a C extension module.  I can send you a
> > binary for that file if you don't have MS VC++ installed, otherwise run
> > VCVARS32.BAT and try again.
> 
> No Visual C++....
> 
> If you don't mind sending it, I would appreciate it...

I'll send it in a private mail.  It's compiled for Python 2.2 on Win2k; it
should be portable to any Win32, but I'm just guessing about that.

> This really needs to be noted.... I admit, I didn't search around too
> much, but I didn't see anything mentioning that it required a C/C++
> compiler...
> 
> (How about a precompiled Windows binary?  Or having Distutils install the
> precompiled binary)....

I *think* what's supposed to happen is for it to fallback to a pure Python
implementation.  It's part of the twisted.spread package; if you're not
using spreadable computing, it doesn't really matter anyway.

> > Yeah, -n uses os.fork, which is not available under Windows.  You probably
> > need to use NT services instead...
> 
> That's what I figured....
> 
> (By NT Services, you mean the services listed from control panels -->
> services?)

Yep.

> But I dislike the NT services.... I've never seen a service get installed,
> that will "uninstall" properly...  (Usually add/remove program doesn't
> uninstall the service)

These ones will :)

If you've got an ExampleService.py which contains the example below, you can
do:
  ExampleService.py install
  ExampleService.py start
  ExampleService.py stop
  ExampleService.py remove

As well as the usual stuff in the control panel... see the docs for the
win32serviceutil module for details.

> I prefer to run the console......reminds me a little bit more of a syslog
> window... >g<

Yeah, but that requires you to be logged in for your server to run.  But I
know what you mean.

Have you seen simpleserv.py in the docs/example directory that came with
Twisted?  It doesn't require mktap or twistd, it just runs standalone -- my
servers all run like that, or optionally as a service via that module I
posted below.  I generally debug them by running them at the command line,
and then install them as a service when I think they're ready to run without
me needing to watch them :)

> > Alternatively, consider using the cygwin version of Python -- it is closer
> > to the unix version, and so os.fork will work.  Also, it comes with gcc, so
> > cbanana would compile correctly.  Unfortunately, I don't think it can
> > interoperate with the Win32 extensions (at least, not that I know of).
> 
> I use the Win32 services, include ODBC... So that's not really a useable
> workaround...

Yeah.  Are you using ODBC via COM (i.e. by calling
win32com.client.Dispatch("ADODB.Connection"))?  If so, you will probably
want to use the mx.ODBC library with Twisted instead, as it can
automatically work with the twisted.enterprise stuff (with a tiny amount of
hackery).

> > Incidentally, I'm not using the twistd stuff *at all* (I don't yet
> > understand the need for it under Windows, but then I don't even know exactly
> > what it's meant to do...).  Instead, I'm using this little file:
> 
> Is the following code "temporary"....  It's considered a service while
> running, but doesn't get installed in the services control panel?

No, it's a full-blown service.  It can be installed as a service, it can be
set to start a startup, etc.

> It looks interesting, but I don't want to register the app as a "true"
> service... As I mentioned before, I can't find a reliable way to remove
> a service, without registry hacking...

Don't worry, that's already taken care of... this is Python, it plays nice
:)

I'll be happy to elaborate further on any of this if you like.  Perhaps I
should whip up an example of installing and using simpleserv.py as a
service?

-Andrew.




From andrew-twisted at puzzling.org  Mon Feb 18 23:19:38 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 19 Feb 2002 17:19:38 +1100
Subject: [Twisted-Python] Windows issues...
In-Reply-To: <20020219025543.GA11470@ritsuko.xware.cx>
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com> <20020219025543.GA11470@ritsuko.xware.cx>
Message-ID: <20020219061938.GA14657@ritsuko.xware.cx>

On Tue, Feb 19, 2002 at 01:55:43PM +1100, Andrew Bennetts wrote:
> I'll send it in a private mail.  It's compiled for Python 2.2 on Win2k; it
> should be portable to any Win32, but I'm just guessing about that.

In fact, better than private mail:
    http://poetry.puzzling.org/cBanana.pyd

-Andrew.




From andrew-twisted at puzzling.org  Tue Feb 19 08:34:49 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Feb 2002 02:34:49 +1100
Subject: [Twisted-Python] twisted.enterprise docs suck
In-Reply-To: <20020201012133.GA19968@ritsuko.xware.cx>
References: <20020130152108.GA6098@ritsuko.xware.cx> <1012519400.15360.40.camel@zelda> <20020201012133.GA19968@ritsuko.xware.cx>
Message-ID: <20020219153449.GA948@frobozz.local>

On Fri, Feb 01, 2002 at 12:21:33PM +1100, Andrew Bennetts wrote:
> If this looks sane to you, I'll update the example and the surrounding text at
> poetry.puzzling.org/twisted_db.html.

Ok, so I finally did this update, but not there.

http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/Introduction_20to_20twisted_2eenterprise

-Andrew.




From carmstro at twistedmatrix.com  Tue Feb 19 09:24:30 2002
From: carmstro at twistedmatrix.com (Christopher Armstrong)
Date: 19 Feb 2002 11:24:30 -0500
Subject: [Twisted-Python] twisted.enterprise docs suck
In-Reply-To: <20020219153449.GA948@frobozz.local>
References: <20020130152108.GA6098@ritsuko.xware.cx>
	<1012519400.15360.40.camel@zelda> <20020201012133.GA19968@ritsuko.xware.cx>
	 <20020219153449.GA948@frobozz.local>
Message-ID: <1014135871.2928.2.camel@radii>

Great! Thanks a lot for putting it on the wiki. My plan to wikify the
documentation is coming together! muahahahahaha!

Anyway, I'm going to be implementing a PB interface to Moin. the
server-side stuff looks to be really easy (despite the MoinMoin code
being a pain - I only need to use a tiny bit of it). I was inspired
yesterday by Emacs' Wiki-mode when Nafai showed it to be, and proclaimed
"I *need* to interface this to a remote moin!" So, hopefully Allen will
help me out in that area ;)

On Tue, 2002-02-19 at 10:34, Andrew Bennetts wrote:
> On Fri, Feb 01, 2002 at 12:21:33PM +1100, Andrew Bennetts wrote:
> > If this looks sane to you, I'll update the example and the surrounding text at
> > poetry.puzzling.org/twisted_db.html.
> 
> Ok, so I finally did this update, but not there.
> 
> http://twistedmatrix.com/users/carmstro.twistd/static/moin/wiki/cgi-bin/moin.cgi/Introduction_20to_20twisted_2eenterprise
> 
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
                                Chris Armstrong
                         << radix at twistedmatrix.com >>
                http://twistedmatrix.com/users/carmstro.twistd/




From moshez at twistedmatrix.com  Tue Feb 19 06:30:26 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Tue, 19 Feb 2002 07:30:26 -0600
Subject: [Twisted-Python] New HOWTO
Message-ID: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>

I've rewritten my Server HOWTO, and the new version is at
http://twistedmatrix.com/users/moshez/WritingServers.html
Please let me know what you think. In particular, is it better
then the old one?



From tv at twistedmatrix.com  Tue Feb 19 10:25:11 2002
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: 19 Feb 2002 19:25:11 +0200
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
In-Reply-To: <1013887608.1546.19.camel@troglodyte>
References: <1013816691.3613.31.camel@zelda>
	<1013825510.2075.78.camel@troglodyte> <1013829176.733.6.camel@radii>
	<1013832278.2075.114.camel@troglodyte>
	<1013859768.4603.117.camel@zelda>
	<1013887608.1546.19.camel@troglodyte>
Message-ID: <87pu31wfig.fsf@ki.yok.utu.fi>

Kevin Turner <acapnotic at twistedmatrix.com> writes:

> On Sat, 2002-02-16 at 03:42, Glyph Lefkowitz wrote:
> Is there a way to fix this?  My lack of education, that is.  There's
> more code within the Twisted repository left more me to read, but IIRC
> there are actually very few PB interfaces defined there.  (We have Words
> and Manhole and...?)   More pertinant here would be other applications
> (from the "wilds") which employ Twisted technology.  Are there any such
> 0775 codebases I should be aware of?  The accusation has been made that
> no one actually *uses* Twisted for anything (not to name names, but he's
> Canadian and works in Japan), but assuming that's not the case, maybe we
> could beef up the "sites using Twisted" list a little.

        http://mc-foo.sourceforge.net/

        (note that parts of it are sick, but not twisted)

-- 
tv@{{hq.yok.utu,havoc,gaeshido}.fi,{debian,wanderer}.org,stonesoft.com}
double a,b=4,c;main(){for(;++a<2e6;c-=(b=-b)/a++);printf("%f\n",c);}



From sean at twistedmatrix.com  Tue Feb 19 16:35:45 2002
From: sean at twistedmatrix.com (Sean Riley)
Date: Tue, 19 Feb 2002 17:35:45 -0600
Subject: [Twisted-Python] New HOWTO
In-Reply-To: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <HOEEKPCOKELHCNIJNMAGAEOMCEAA.sean@twistedmatrix.com>

this is a big improvement over the old version!
maybe this should be named something different such as "Implementing a new
protocol using Twisted"?

I wonder how many of the userbase of Twisted are actually going to write
their own protocols and how many are going to use the existing services and
protocols?

-----Original Message-----
From: twisted-python-admin at twistedmatrix.com
[mailto:twisted-python-admin at twistedmatrix.com]On Behalf Of Moshe Zadka
Sent: Tuesday, February 19, 2002 7:30 AM
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] New HOWTO


I've rewritten my Server HOWTO, and the new version is at
http://twistedmatrix.com/users/moshez/WritingServers.html
Please let me know what you think. In particular, is it better
then the old one?

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From twisted at itamarst.org  Tue Feb 19 12:47:08 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:47:08 +0000
Subject: [Twisted-Python] Windows issues...
References: <B896F9B9.5CE4%junkster@rochester.rr.com>
Message-ID: <3C72ABBC.5070704@itamarst.org>

Benjamin Schollnick wrote:


 > 1) setup.py install    died....It stopped when it couldn't find
 > "CL.EXE", while building something in the twisted.spread.cbanana
 > section...

It's trying to compile cBanana and failing since you don't have Visual 
C++. However, cBanana is currently broken and will not be used by 
Twisted in any case, so this doesn't matter.

We really out to distribute win32 .exe installers generated by distutils...




From twisted at itamarst.org  Tue Feb 19 12:48:16 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:48:16 +0000
Subject: [Twisted-Python] Windows issues...
References: <20020219002435.GA9849@ritsuko.xware.cx> <B8971F7D.5CEF%junkster@rochester.rr.com> <20020219025543.GA11470@ritsuko.xware.cx> <20020219061938.GA14657@ritsuko.xware.cx>
Message-ID: <3C72AC00.3010207@itamarst.org>

Andrew Bennetts wrote:


> In fact, better than private mail:
>     http://poetry.puzzling.org/cBanana.pyd

Don't bother - cBanana is not used by Twisted at all at this time, since 
we changed the banana protocol in 0.14, and haven't yet updated cBanana.




From twisted at itamarst.org  Tue Feb 19 12:50:21 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:50:21 +0000
Subject: [Twisted-Python] New HOWTO
References: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <3C72AC7D.3090207@itamarst.org>

Moshe Zadka wrote:

> I've rewritten my Server HOWTO, and the new version is at
> http://twistedmatrix.com/users/moshez/WritingServers.html
> Please let me know what you think. In particular, is it better
> then the old one?

Looks good - maybe just add an example of using listenTCP on an app, and 
then showing how to run an app (like simpleserv in the examples) so 
people can have a complete running example.




From twisted at itamarst.org  Tue Feb 19 12:52:49 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 19:52:49 +0000
Subject: [Twisted-Python] Potential PB Security Problem (And Solution)
References: <1013816691.3613.31.camel@zelda> 	<1013825510.2075.78.camel@troglodyte>  <1013829176.733.6.camel@radii> 	<1013832278.2075.114.camel@troglodyte>  <1013859768.4603.117.camel@zelda> 	<1013887608.1546.19.camel@troglodyte> <1013889210.3613.156.camel@zelda>
Message-ID: <3C72AD11.5000606@itamarst.org>

Glyph Lefkowitz wrote:

 > However, this is a circular problem.  Much of this past week for me
 > has been spent working on a new website for tm.com and trying to
 > come up with introductory documentation for PB.  It needs to be
 > documented, standardized, and released as 1.0 before we can really
 > expect droves of people to come flocking to it.

Yep. However, for clarity, lets not forget twisted.spread the 
implementation is not the same as the PB the protocol. E.g. Perspectives 
are an implementation choice, not part of the protocol. Or how to call 
remote methods - this is an implementation choice, in Java the 
__getattr__ eay isn't even relevant.






From twisted at itamarst.org  Tue Feb 19 13:26:32 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 19 Feb 2002 20:26:32 +0000
Subject: [Twisted-Python] Object Oriented Database Library For Persistent Storage in Python
Message-ID: <3C72B4F8.4080907@itamarst.org>

Comments?

<http://pyobjfs.sourceforge.net/index.html>




From andrew-twisted at puzzling.org  Tue Feb 19 22:45:08 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 20 Feb 2002 16:45:08 +1100
Subject: [Twisted-Python] Waiting for multiple events
Message-ID: <20020220054508.GA29769@ritsuko.xware.cx>

I have a collection of Deferreds.  When they all complete, I want to trigger
a "all complete" callback (probably via a Deferred).  Alternatively, upon an
error from any of the callbacks, I want to trigger the errback of that
"all complete" Deferred.

Is there something already written to do this?  Or do I need to write it
myself?

-Andrew.




From jlehmann at nsw.bigpond.net.au  Wed Feb 20 03:31:59 2002
From: jlehmann at nsw.bigpond.net.au (John Lehmann)
Date: Wed, 20 Feb 2002 21:31:59 +1100
Subject: [Twisted-Python] New HOWTO
References: <E16dALi-0001X6-00@zaibach.twistedmatrix.com>
Message-ID: <3C737B1F.93AC41E0@nsw.bigpond.net.au>

I like it but I think you are missing a closing brace on the last
line...

  def getPorts(app, config):
    factory = makeQOTDFactory(config.quote)
    return [(int(config.port), factory]


Moshe Zadka wrote:
> 
> I've rewritten my Server HOWTO, and the new version is at
> http://twistedmatrix.com/users/moshez/WritingServers.html
> Please let me know what you think. In particular, is it better
> then the old one?
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at itamarst.org  Wed Feb 20 04:47:07 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 20 Feb 2002 11:47:07 +0000
Subject: [Twisted-Python] Waiting for multiple events
References: <20020220054508.GA29769@ritsuko.xware.cx>
Message-ID: <3C738CBB.7030905@itamarst.org>

Andrew Bennetts wrote:

> I have a collection of Deferreds.  When they all complete, I want to trigger
> a "all complete" callback (probably via a Deferred).  Alternatively, upon an
> error from any of the callbacks, I want to trigger the errback of that
> "all complete" Deferred.
> 
> Is there something already written to do this?  Or do I need to write it
> myself?

# this code is untested

class WaitForCallbacks:

    def __init__(self, count, finishedDeferred):
        self.count = count
        self.callbacks = 0
        self.finishedDeferred = finishedDeferred

    def callback(self, result):
        self.callbacks = self.callbacks + 1
        if self.callbacks == self.count:
            self.finishedDeferred.callback(result)
        return result

    def errback(self, err):
        self.finishedDeferred.errback(err)

# then you make an instance of this class:
o = WaitForCallbacks(5, allComplete)

# any deferred D we want to connect, we do:
D.addCallbacks(o.callback, o.errback)




From moshez at twistedmatrix.com  Fri Feb 22 02:48:33 2002
From: moshez at twistedmatrix.com (Moshe Zadka)
Date: Fri, 22 Feb 2002 03:48:33 -0600
Subject: [Twisted-Python] A Complicated Twisted App To Show off
Message-ID: <E16eCJd-0000HY-00@zaibach.twistedmatrix.com>

Many of you might now I'm into role playing games. Recently, I got
addicted to the Champions MUSH, and whined and heard others whine about
the technical problems. Here they are, in no particular order:

* Alts (alternate identities, multiple characters) are hard to manage
* No Web interface
* Lots of needed outside internet support is lacking (connection to the
  weather web site)

In case you're not recognizing the theme, these are exactly the things
Twisted is good at. Other almost cost-free benefits:

* People can read VR e-mail on real life clients (pop3)
* People can compose VR e-mail on real life clients (smtp)
* People can connect with IRC clients (important to me, solved
  in an ugly way)
* Management can be done in lotsa ways (coil, manhole, etc.)

Note I did not mention reality. I don't think reality, based on what
glyph said, would be a good match. The Champions MUSH is much more
"if it's IC to have it, pose having it". Because of the way HERO deals
with items, especially in superheroic campaigns, having 'stuff' is not
really important.

I'm thinking of starting to work on this. Anyone feels like join me?
--  
Moshe Zadka <moshez at twistedmatrix.com>



From twisted at itamarst.org  Sat Feb 23 04:28:18 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 23 Feb 2002 11:28:18 +0000
Subject: [Twisted-Python] internet.app reports worng errors on bind()ing
References: <871yfmxvn2.fsf@c0re.bewaff.net>
Message-ID: <3C777CD2.1080802@itamarst.org>

Doobee R. Tzeck wrote:

> internet.app assumed 'port already bound' is the only error which
> can happen wen bind()ing. What's about 'premission denied' and
> all the others. This patch fixes that.

OK, I checked in this fix. Thanks!




From twisted at itamarst.org  Sat Feb 23 04:42:54 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Sat, 23 Feb 2002 11:42:54 +0000
Subject: [Twisted-Python] some errors twisted does not handle gracefully
References: <20020205092108.76415.qmail@web10006.mail.yahoo.com>
Message-ID: <3C77803E.9030700@itamarst.org>

Cory Dodt wrote:


> 1) cause: Didn't set 'application' in a config.tac.
> 
> results in this message in the log:
> 
> "05/02/2002 00:50 [-] Python file
> '/home/cdodt/TwistedPlugins/dataconda/config.tac' did not produce an
> application."

OK, I fixed this.

 
> 2) cause: Trying to log in as an Identity that never had a password set


OK, fixed - if no password was set, verifyPassword is always false.


> 3) cause: calling a method with the wrong name on a RemoteReferenced
> object (Perspective, Referenceable, etc.)
...
> Well ok, duh, at least this one I can figure out.  But it should still
> be something more specific: 'RemoteMethodNotImplementedError' for
> example.


I'll let glyph deal with this.


Thanks for the bug reports!




From andrew-twisted at puzzling.org  Sun Feb 24 23:32:29 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Mon, 25 Feb 2002 17:32:29 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
Message-ID: <20020225063229.GA23152@ritsuko.xware.cx>

Hi everyone...

I like the twisted.lumberjack module that was recently added, but I think it
has a small buglet.  It checks the size of the existing log file, but then
opens it in mode "w", truncating it.

Thus, I suggest the last line of LogFile._openFile should change from:
        self._file = open(self.path, "w")
to:
        self._file = open(self.path, "a")

-Andrew.




From twisted at itamarst.org  Mon Feb 25 02:50:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 09:50:39 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>
Message-ID: <3C7A08EF.70906@itamarst.org>

Andrew Bennetts wrote:


> I like the twisted.lumberjack module that was recently added, but I think it
> has a small buglet.  It checks the size of the existing log file, but then
> opens it in mode "w", truncating it.
> 
> Thus, I suggest the last line of LogFile._openFile should change from:
>         self._file = open(self.path, "w")
> to:
>         self._file = open(self.path, "a")

Actually, "a" mode is a bad idea, since according to the docs has 
inconsistent behaviour:
"on *some* Unix systems means that *all* writes append to the end of the 
file, regardless of the current seek position)."

But you're write about that. I'll fix it ASAP. Thanks for the bug report!




From twisted at itamarst.org  Mon Feb 25 03:00:29 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:00:29 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>
Message-ID: <3C7A0B3D.4050407@itamarst.org>

Andrew Bennetts wrote:

> I like the twisted.lumberjack module that was recently added, but I think it
> has a small buglet.

OK, fixed in CVS, plus I wrote a test to check for this bug.





From twisted at itamarst.org  Mon Feb 25 03:29:57 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:29:57 +0000
Subject: [Twisted-Python] Security issue in SOCKS and Webcoil
Message-ID: <3C7A1225.9050004@itamarst.org>

Both of these when setup using mktap or coil listen on all interfaces. 
So running a mktap generated SOCKS on a firewall means anyone can access 
your internal network, and running coil means anyone can setup a telnet 
python shell or SOCKS proxy remotely.

So, changes we need to make:
SOCKS tap should allow configurin interfaces it will run on.
COIL should allow configuring which interfaces a server can run on, not 
jusy which ports.




From twisted at itamarst.org  Mon Feb 25 03:40:22 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 10:40:22 +0000
Subject: [Twisted-Python] Security issue in SOCKS and Webcoil
References: <3C7A1225.9050004@itamarst.org>
Message-ID: <3C7A1496.3090202@itamarst.org>

Itamar Shtull-Trauring wrote:

> So, changes we need to make:
> SOCKS tap should allow configurin interfaces it will run on.

As a result, moshez and I agreed a tap module's getPorts function should 
return a list of Ports, instead of the current method of returning a 
list of (portNo, protocolFactory) tuples. That way a tap can also make 
SSL and UDP ports, set interfaces, and so on.





From andrew-twisted at puzzling.org  Mon Feb 25 16:03:58 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Feb 2002 10:03:58 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <3C7A08EF.70906@itamarst.org>
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org>
Message-ID: <20020225230358.GA453@frobozz.local>

On Mon, Feb 25, 2002 at 09:50:39AM +0000, Itamar Shtull-Trauring wrote:
> Actually, "a" mode is a bad idea, since according to the docs has 
> inconsistent behaviour:
> "on *some* Unix systems means that *all* writes append to the end of the 
> file, regardless of the current seek position)."

I considered that, but when would a log file ever want to do otherwise?

I'd be interested to know what a portable way to append to a file is,
though.

-Andrew.




From twisted at itamarst.org  Mon Feb 25 10:27:33 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 25 Feb 2002 17:27:33 +0000
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local>
Message-ID: <3C7A7405.5040909@itamarst.org>

Andrew Bennetts wrote:


> I considered that, but when would a log file ever want to do otherwise?


"a" also screws up seek()s, which I'll need for the remote log viewing

service. In general, "a" seems like a bad idea since its behavior is
inconsistent.


> I'd be interested to know what a portable way to append to a file is,
> though.


# assuming "file" exists

f = open("file", "r+")

f.seek(0, 2)

see the code I checked in for a complete example.




From grolgh at online.no  Tue Feb 26 07:58:17 2002
From: grolgh at online.no (Benjamin Bruheim)
Date: Tue, 26 Feb 2002 15:58:17 +0100
Subject: [Twisted-Python] Bug in twisted.web
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local> <3C7A7405.5040909@itamarst.org>
Message-ID: <052e01c1bed6$06036890$7c2e76d9@delhi>

Yepp,

http://www.twistedmatrix.com/foo/ does the exception-dance, but not http://www.twistedmatrix.com/foo obviously. So, this isn't anything terrible and hard, but I just couldn't recreate the situation here (win2k). Probably fixed, but somebody ought to know.

mvh.
Benjamin Bruheim
Teknisk Leder, In/Out Bergen :: www.inout.no




From andrew at puzzling.org  Mon Feb 25 16:08:12 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Tue, 26 Feb 2002 10:08:12 +1100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <3C7A7405.5040909@itamarst.org>
References: <20020225063229.GA23152@ritsuko.xware.cx> <3C7A08EF.70906@itamarst.org> <20020225230358.GA453@frobozz.local> <3C7A7405.5040909@itamarst.org>
Message-ID: <20020225230812.GA1658@ritsuko.xware.cx>

On Mon, Feb 25, 2002 at 05:27:33PM +0000, Itamar Shtull-Trauring wrote:
> Andrew Bennetts wrote:
> >I considered that, but when would a log file ever want to do otherwise?
> 
> "a" also screws up seek()s, which I'll need for the remote log viewing
> service. In general, "a" seems like a bad idea since its behavior is
> inconsistent.

Fair enough.

> >I'd be interested to know what a portable way to append to a file is,
> >though.
> 
> 
> # assuming "file" exists
> 
> f = open("file", "r+")
> 
> f.seek(0, 2)
> 
> see the code I checked in for a complete example.

Ah, of course.  Thanks.

-Andrew.




From cpaul at telemetrybox.org  Wed Feb 27 00:58:29 2002
From: cpaul at telemetrybox.org (cpaul at telemetrybox.org)
Date: Tue, 26 Feb 2002 21:58:29 -1000
Subject: [Twisted-Python] Aloha, New Member
Message-ID: <20020226215828.A8361@Skaffen.pdchawaii.com>

Aloha,

My name is Charles Paul, and I am interested in learning more about how to use Twisted. 

Aloha,
Charles



From andreas at mtg.co.at  Wed Feb 27 02:22:20 2002
From: andreas at mtg.co.at (Andreas Kostyrka)
Date: Wed, 27 Feb 2002 10:22:20 +0100
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
In-Reply-To: <20020225230812.GA1658@ritsuko.xware.cx>
References: <20020225063229.GA23152@ritsuko.xware.cx>
	<3C7A08EF.70906@itamarst.org>
	<20020225230358.GA453@frobozz.local>
	<3C7A7405.5040909@itamarst.org>
	<20020225230812.GA1658@ritsuko.xware.cx>
Message-ID: <20020227102220.3a762659.andreas@mtg.co.at>

> On Mon, Feb 25, 2002 at 05:27:33PM +0000, Itamar Shtull-Trauring wrote:
> > 
> > 
> > # assuming "file" exists
> > 
> > f = open("file", "r+")
> > 
> > f.seek(0, 2)
> > 
> > see the code I checked in for a complete example.
Well, this assumes that there is only one writer for the file.
O_APPEND OTOH, when implemented in the kernel (and not emulated
with the above code in the library), makes this as ONE atomic call.
(basically, it seeks to the end of the file before any write). 

>From open(2):
       O_APPEND
              The file is opened  in  append  mode.  Before  each
              write, the file pointer is positioned at the end of
              the file, as if with lseek.  O_APPEND may  lead  to
              corrupted  files  on  NFS file systems if more than
              one process appends data to a file at  once.   This
              is  because  NFS  does  not  support appending to a
              file, so the client  kernel  has  to  simulate  it,
              which can't be done without a race condition.

Basically, in the NFS case the kernel is not able to do it atomic
so there might be problems.

Side note: It's quite acceptable to use seek/read with an O_RDWR|O_APPEND file. 
It's just automatically seeks to the end before writing. So O_APPEND is quite useful.


Andreas



From twisted at itamarst.org  Tue Feb 26 13:59:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 26 Feb 2002 15:59:39 -0500
Subject: [Twisted-Python] twisted.lumberjack clobbers existing logs
References: <20020225063229.GA23152@ritsuko.xware.cx>	<3C7A08EF.70906@itamarst.org>	<20020225230358.GA453@frobozz.local>	<3C7A7405.5040909@itamarst.org>	<20020225230812.GA1658@ritsuko.xware.cx> <20020227102220.3a762659.andreas@mtg.co.at>
Message-ID: <3C7BF73B.6050705@itamarst.org>

Andreas Kostyrka wrote:


> Well, this assumes that there is only one writer for the file.

The code in twisted.python.log assures that there is only one writer at 
any given time. We want to do this on the Python side, not using OS 
features, in order to make the code as portables as possible.




From glyph at twistedmatrix.com  Thu Feb 28 00:20:06 2002
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: 28 Feb 2002 01:20:06 -0600
Subject: [Twisted-Python] Aloha, New Member
In-Reply-To: <20020226215828.A8361@Skaffen.pdchawaii.com>
References: <20020226215828.A8361@Skaffen.pdchawaii.com>
Message-ID: <1014880806.7425.74.camel@zelda>

Excellent!  Great to hear it, Charles.

I'm currently in the process of writing documentation and smoothing the
learning curve for new users of the framework, but I've got a lot to do
(and I'm swamped with more mundane things at work right now (and I'll be
heading out of town (back on monday (do you like parenthetic
expressions?  (I sure do. (yay for lisp)))))).

So unfortunately our documentation is far from complete.  Can you give
some clues as to what you want to use Twisted for?  I'll try to answer
any questions you might have; in the meanwhile, poke around the
"Documentation" section on http://twistedmatrix.com/.

On Wed, 2002-02-27 at 01:58, cpaul at telemetrybox.org wrote:
> Aloha,
> 
> My name is Charles Paul, and I am interested in learning more about how to use Twisted. 
> 
> Aloha,
> Charles
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
"Cannot stand to be one of many -- I'm not what they are."
        -Guster, "Rocketship"
                glyph lefkowitz; ninjaneer, freelance demiurge
    glyph @ [ninjaneering|twistedmatrix].com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 232 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20020228/3fc78764/attachment.sig>

From andrew-twisted at puzzling.org  Thu Feb 28 17:58:06 2002
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Mar 2002 11:58:06 +1100
Subject: [Twisted-Python] Unused variables in doSelect
Message-ID: <20020301005806.GA12720@ritsuko.xware.cx>

This is a minor thing, but...

doSelect has the following comment (in 0.15.2):
             # Since this loop should really be as fast as possible,
             # I'm caching these global attributes so the interpreter
             # will hit them in the local namespace.
             reads=reads,
             writes=writes,
             rhk=reads.has_key,
             whk=writes.has_key):

But rhk and whk are unused.

Further on in the function, it does:
    for selectables, method, dict in ((r, "doRead", reads),
                                      (w,"doWrite", writes)):
        hkm = dict.has_key

I suggest that either the rhk and whk variables are removed for clarity, or
that that for loop becomes:

    for selectables, method, dict, hkm in ((r, "doRead", reads, rhk),
                                           (w,"doWrite", writes, whk)):

Incidentally, the reason why I'm looking at doSelect in the first place is that
something seems to have changed in 0.15.2 (since 0.15.0) that (on Windows at
least) prevents Ctrl-C or Ctrl-Break from interrupting the process immediately
-- it can take up to a minute for it to respond.  I haven't yet figured out
why, there's nothing obvious wrong.  This also applies to stopping it when
running as a Win NT service.  On the other hand, it no longer constantly uses
1% of the cpu even when idle.  I can reproduce this behaviour with
simpleserv.py, so it's not my code causing it :)

I wouldn't mind looking over the cvs history to look for relevant changes, but
the CVSWeb link is missing from the new website.

Regards,

-Andrew.




From twisted at itamarst.org  Thu Feb 28 02:00:39 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2002 04:00:39 -0500
Subject: [Twisted-Python] Unused variables in doSelect
References: <20020301005806.GA12720@ritsuko.xware.cx>
Message-ID: <3C7DF1B7.30701@itamarst.org>

Andrew Bennetts wrote:

 > Incidentally, the reason why I'm looking at doSelect in the first
 > place is that something seems to have changed in 0.15.2 (since
 > 0.15.0) that (on Windows at least) prevents Ctrl-C or Ctrl-Break
 > from interrupting the process immediately -- it can take up to a
 > minute for it to respond.  I haven't yet figured out why, there's
 > nothing obvious wrong.  This also applies to stopping it when running
 > as a Win NT service.  On the other hand, it no longer constantly
 > uses 1% of the cpu even when idle.  I can reproduce this behaviour
 > with simpleserv.py, so it's not my code causing it :)

OK, I figured out what the issue is - glyph changed the selec.tselect() 
so that it doesn't get a timeout, so it basically freezes until it gets 
a connection (unless you have a Delayed). Apparently on Windows the 
select() system call an't be interrupted.

Workaround:
Add a Delayed with a timeout of 0.01 so the select loop doesn't freeze?

Real Solution:
Win32 API event loop. Patches accepted.




From twisted at itamarst.org  Thu Feb 28 17:32:12 2002
From: twisted at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 28 Feb 2002 19:32:12 -0500
Subject: [Twisted-Python] Twisted DNS issues
Message-ID: <3C7ECC0C.2050806@itamarst.org>

<itamar> next, if you fail to connect to a DNS server, you get a traceback
<itamar> something about passing extra args to connectionLost
<moshez> itamar: yeah, I know.
<moshez> itamar: ugh.
<itamar> now, moving onwards
<itamar> consider this code:
<moshez> itamar: I didn't know about that
<itamar> r = dns.ResolveConfResolver()
<itamar> d = defer.Deferred().addCallback(printer).addErrback(printer)
<itamar> d.arm()
<itamar> r.resolve(d, "www.zoteca.com")
<itamar> the result should be that printer() is based the IP, right?
<itamar> but it doesn't
<moshez> itamar: whatis it?
<itamar> because in SentQuery.getAnswer, we do:
<itamar> process = getattr(self, 'processAnswer_%d' % 
message.answers[0].type, None)
<itamar>         if process is None:
<itamar>             self.errback(
<itamar> etc.
<itamar> now, the first of the answers always seems to have type 5
<itamar> answers[1], 2, etc. seem to have the content
<itamar> so it always fails
<itamar> because you don't have processAnswer_5
<moshez> itamar: oh, I see.
<itamar> conclusion: DNS needs a good accepttests suite




From andrew at puzzling.org  Thu Feb 28 19:50:03 2002
From: andrew at puzzling.org (Andrew Bennetts)
Date: Fri, 1 Mar 2002 13:50:03 +1100
Subject: [Twisted-Python] Unused variables in doSelect
In-Reply-To: <3C7DF1B7.30701@itamarst.org>
References: <20020301005806.GA12720@ritsuko.xware.cx> <3C7DF1B7.30701@itamarst.org>
Message-ID: <20020301025003.GA13791@ritsuko.xware.cx>

On Thu, Feb 28, 2002 at 04:00:39AM -0500, Itamar Shtull-Trauring wrote:
> OK, I figured out what the issue is - glyph changed the selec.tselect() 
> so that it doesn't get a timeout, so it basically freezes until it gets 
> a connection (unless you have a Delayed). Apparently on Windows the 
> select() system call an't be interrupted.

Ah!  Thank you, that explains it perfectly.

Incidentally, I haven't yet tested this under cygwin, I suspect its version
of Python would allow select to be interrupted..

> Workaround:
> Add a Delayed with a timeout of 0.01 so the select loop doesn't freeze?

Hmm, 0.5 or 1 is plenty for what I need.

> Real Solution:
> Win32 API event loop. Patches accepted.

Heh :)

I'll look into it, but I'm no Win32 API guru -- maybe it's time I learnt ;).
I've looked at win32event module a little before, so I'll see what I can do.

-Andrew.




