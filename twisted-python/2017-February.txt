From romanmescheryakov at yandex.ru  Thu Feb  2 02:17:37 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Thu, 02 Feb 2017 12:17:37 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
Message-ID: <1754891486027057@web35j.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170202/23924d95/attachment.html>

From adi at roiban.ro  Thu Feb  2 03:00:34 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Feb 2017 10:00:34 +0000
Subject: [Twisted-Python] conch.ssh.SSHFactory publicKeys and getPublicKeys
Message-ID: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>

Hi,

I am writing to ask about the reason why t.conch.ssh.Factory has both
the getPublicKeys and getPrivateKeys methods ?

The public keys should be string while private keys should be
twisted.conch.ssh.keys.Key

Based on my understanding if you have a private key object you can
extract the public key from it.

Are there any SSH key formats which will store a private key without
the public components ?

Or this is just a legacy code from the time when
twisted.conch.ssh.keys.Key was not there... and getPublicKeys should
be deprecated?

Thanks!

-- 
Adi Roiban


From adi at roiban.ro  Thu Feb  2 03:43:12 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Feb 2017 10:43:12 +0000
Subject: [Twisted-Python] Hanging SFTP client operations on server
	disconnection
Message-ID: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>

Hi,

t.conch.ssh.filetransfer.FileTransferClient._sendRequest keeps a
mapping with active SFTP requests in self.openRequests

The self.openRequests is only updated when the server is responding
for that request.

They are not cleared/cancelled on connection lost.

In the case in which the client send a request in the exact same time
in which the server closes the connect , the client will send the
request as there is no way to know that the server is gone... but
since the server is gone it will not reply to the response... and the
deferred is never called.

To solve this issue, I went for cancelling the open requests when the
connection is close.

I assume that this is also an issue with bad behaved servers which
will just ignore a request... so instead of a simple deferred, there
is the need to use a timeout deferred.

Is this a bug?
I am wondering if I am doing something wrong and these type of errors
should be handled in a different way.

Thanks!

PS: There is a stray release notes fragment in conch
https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature

-- 
Adi Roiban


From trac at twistedmatrix.com  Sun Feb  5 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Feb 2017 07:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1486278320.67.8793222737387053955@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170205/a374c907/attachment.html>

From exarkun at twistedmatrix.com  Tue Feb  7 07:59:32 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 7 Feb 2017 09:59:32 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
Message-ID: <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>

On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> Thanks for highlighting those.  I've put the link in the other direction
> as well.
>
>
Craig seems eager to go ahead with reverting this change in behavior.

https://github.com/twisted/twisted/pull/672#issuecomment-275956265

As far as I can tell, no one has weighed in on the other side.  So I'm
inclined to go along with the reversion.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170207/c6a7d2c8/attachment.html>

From glyph at twistedmatrix.com  Tue Feb  7 12:29:28 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Feb 2017 11:29:28 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
Message-ID: <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>


> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> Thanks for highlighting those.  I've put the link in the other direction as well.
> 
> 
> Craig seems eager to go ahead with reverting this change in behavior.
> 
> https://github.com/twisted/twisted/pull/672#issuecomment-275956265 <https://github.com/twisted/twisted/pull/672#issuecomment-275956265>
> 
> As far as I can tell, no one has weighed in on the other side.  So I'm inclined to go along with the reversion.

My 2? for the other side is: if trial does this, but twist and twistd don't, then it will be possible to get a passing test run for a plugin that doesn't get loaded.  I think it would be simpler and easier to debug to leave these consistent.

(I really don't think we should put this behavior back into twist or twistd, because "cd malware; twist web --path ." should not pwn your machine.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170207/5dce8d31/attachment.html>

From tp4 at a.ygyrm.com  Wed Feb  8 18:23:04 2017
From: tp4 at a.ygyrm.com (Sunsesoft.Du)
Date: Thu, 9 Feb 2017 09:23:04 +0800
Subject: [Twisted-Python] =?gb2312?b?xPq1xLL6xrfEx8O0usOjrLn6zeK1xL/Nu6c=?=
 =?gb2312?b?yse38daqtcDE2KO/17zIt822td21vb/Nu6fK1snPo6zH68Gqz7U=?=
Message-ID: <201702090923045390122@a.ygyrm.com>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170209/a343153b/attachment.html>

From anthonylukach at gmail.com  Thu Feb  9 10:29:21 2017
From: anthonylukach at gmail.com (Anthony Lukach)
Date: Thu, 09 Feb 2017 17:29:21 +0000
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
Message-ID: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>

I am working on putting together an SMTP server implemented within
Twisted.  This will act as a conduit to my API, where there are two basic
flows:

1) A device that supports sending email can "send" an email through the
SMTP server. This is, in effect, the SMTP server handling the message as an
outbound request.  The device would authenticate with the server and then
provide it the message to be sent (which in reality will be uploaded to my
API).

2) A device can send an email to my SMTP server via their own SMTP server.
My server would receive the incoming message, parse its contents, and then
upload the data to my API. Naturally, these incoming messages would not be
required to authenticate with the server.

I'm having trouble constructing the server in a way that outbound messages
require authentication but incoming messages do not.

My service currently looks more or less like below:

from twisted.cred.portal import Portal

from twisted.mail import smtpfrom twisted.mail.imap4 import
LOGINCredentials, PLAINCredentialsclass SMTPFactory(smtp.SMTPFactory):
   protocol = smtp.ESMTP    def buildProtocol(self, addr):        #
Add authentication to SMTP server        p =
smtp.SMTPFactory.buildProtocol(self, addr)        p.challengers = {
        "LOGIN": LOGINCredentials,            "PLAIN":
PLAINCredentials        }        # Set a timeout for the connection
message to be processed        p.timeout = 200        return p

provider = Provider('localhost', settings)

# Multiple checkers that for backwards compatibilitycascade =
CascadeChecker()cascade.registerChecker(FilePasswordDB(pw_file))

# ... some other checks


portal = Portal(SimpleRealm(options, provider))

portal.registerChecker(cascade) internet.TCPServer(2500, SMTPFactory(portal
))



The problem is that, as currently written, I need to authenticate with the
server upon connection. Naturally, this doesn't make sense for the inbound
emails. It seems that a common pattern is to analyze the "to" address of
the emails and to allow any incoming emails (without authentication) that
have a matching domain, however this seems difficult to configure with
Twisted as I don't have the context of the email at the time the
authentication check is done.

Can anyone direct me to an example of an SMTP server that is both accepting
inbound and outbound emails and authenticates only on outbound emails?

PS, I'm not super familiar with the inner workings of email or the SMTP
protocol, please let me know if I'm heading in the wrong direction

Best,

Anthony
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170209/d869b1c6/attachment-0001.html>

From exarkun at twistedmatrix.com  Thu Feb  9 11:36:10 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 9 Feb 2017 13:36:10 -0500
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
In-Reply-To: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
References: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
Message-ID: <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>

On Thu, Feb 9, 2017 at 12:29 PM, Anthony Lukach <anthonylukach at gmail.com>
wrote:

> I am working on putting together an SMTP server implemented within
> Twisted.  This will act as a conduit to my API, where there are two basic
> flows:
>
> 1) A device that supports sending email can "send" an email through the
> SMTP server. This is, in effect, the SMTP server handling the message as an
> outbound request.  The device would authenticate with the server and then
> provide it the message to be sent (which in reality will be uploaded to my
> API).
>
> 2) A device can send an email to my SMTP server via their own SMTP server.
> My server would receive the incoming message, parse its contents, and then
> upload the data to my API. Naturally, these incoming messages would not be
> required to authenticate with the server.
>
> I'm having trouble constructing the server in a way that outbound messages
> require authentication but incoming messages do not.
>

twisted.mail and cred support anonymous access.  I think that what you want
is to implement an avatar that can only accept messages for local delivery
and use that for anonymous users.  If an anonymous user tries to send mail
to a non-local user, they get back an error.  Either they made a mistake
and they should try again after authenticating or they're trying to abuse
the service and that's what you want.  That's case (2).  Then implement the
relay logic in another avatar and use that for authenticated users.  That's
case (1).

This relies on the fact that the realm you supply is responsible for
creating avatars and the realm gets told the avatarId for which it should
create an avatar - and the anonymous user can be differentiated from other
users by the avatarId.

Does that help?


> Can anyone direct me to an example of an SMTP server that is both
> accepting inbound and outbound emails and authenticates only on outbound
> emails?
>
>
As it happens, yes...

This avatar supports local-only delivery:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L51
This one supports relaying:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L528
Here's the factory and portal setup code:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L302

The realm is a bit spread out and involves some Axiom-specific concepts
that you probably don't need to know... But let me know if the above three
links don't make things clear.

 Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170209/1449c70c/attachment.html>

From hawkowl at atleastfornow.net  Sat Feb 11 03:03:19 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sat, 11 Feb 2017 21:03:19 +1100
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
Message-ID: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 17.1!

The highlights of this release are:

- twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
- twisted.web.server has had many cleanups revolving around timing out inactive clients.
- twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
- twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
- You can now call the new twist runner with `python -m twisted`.
- twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
- Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
- More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
- Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
- 60+ closed tickets.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170211/b40690d7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170211/b40690d7/attachment.pgp>

From mithrandi at mithrandi.net  Sat Feb 11 10:28:36 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 11 Feb 2017 17:28:36 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
Message-ID: <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>

On Sat, 11 Feb 2017 at 12:04 Amber Hawkie Brown <hawkowl at atleastfornow.net>
wrote:

> - Lots of deprecated code removals, to make a sleeker, less confusing
> Twisted.
>

Something perhaps not obvious from the release notes:

String endpoint descriptions, as used by twist/twistd among other things,
for listening on tcp ports now require the "tcp:": that is, "80" is no
longer accepted, you need to use "tcp:80".

This functionality has been deprecated for a while, but as it is unlikely
that many people run twist/twistd with DeprecationWarnings enabled, most
people relying on this behaviour have unfortunately probably never seen the
warning.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170211/286aa83e/attachment.html>

From p.mayers at imperial.ac.uk  Sat Feb 11 11:12:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2017 18:12:08 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
Message-ID: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>

On 11/02/2017 17:28, Tristan Seligmann wrote:

> String endpoint descriptions, as used by twist/twistd among other
> things, for listening on tcp ports now require the "tcp:": that is, "80"
> is no longer accepted, you need to use "tcp:80".

In which case there's a regression in the "portforward" twistd plugin:

$ v/bin/twistd portforward
Traceback (most recent call last):
...
ValueError: Unknown endpoint type: '6666'

$ v/bin/twistd portforward -p tcp:6666 -d tcp:6665
...
ValueError: invalid literal for int() with base 10: 'tcp:6665'

:o(


From p.mayers at imperial.ac.uk  Sat Feb 11 16:14:15 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2017 23:14:15 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
Message-ID: <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>

On 11/02/17 18:12, Phil Mayers wrote:
> On 11/02/2017 17:28, Tristan Seligmann wrote:
>
>> String endpoint descriptions, as used by twist/twistd among other
>> things, for listening on tcp ports now require the "tcp:": that is, "80"
>> is no longer accepted, you need to use "tcp:80".
>
> In which case there's a regression in the "portforward" twistd plugin:

Actually this works:

twistd portforward -p tcp:6666 -d 6665

Odd but meh, I'll take it


From glyph at twistedmatrix.com  Sat Feb 11 18:44:43 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 11 Feb 2017 17:44:43 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
Message-ID: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>


> On Feb 11, 2017, at 3:14 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 11/02/17 18:12, Phil Mayers wrote:
>> On 11/02/2017 17:28, Tristan Seligmann wrote:
>> 
>>> String endpoint descriptions, as used by twist/twistd among other
>>> things, for listening on tcp ports now require the "tcp:": that is, "80"
>>> is no longer accepted, you need to use "tcp:80".
>> 
>> In which case there's a regression in the "portforward" twistd plugin:
> 
> Actually this works:
> 
> twistd portforward -p tcp:6666 -d 6665
> 
> Odd but meh, I'll take it

Yeah, this is a lack of test coverage for the 'default' case.  Technically it is a regression, but it's probably pretty unusual to use the default; point being, I don't think we need an emergency release here.

There's also a huge problem here with documentation, where `-d? is a TCP port but `-p? is a strport, and it's hard for end-users to get from the command line to the relevant documentation that explains what strports are available.

Nevertheless - please file a ticket!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170211/161a46bb/attachment.html>

From exarkun at twistedmatrix.com  Sat Feb 11 18:54:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 11 Feb 2017 20:54:57 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
Message-ID: <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>

On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <
hawkowl at atleastfornow.net> wrote:

> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 17.1!
>
> The highlights of this release are:
>
> - twisted.web.client.Agent now supports IPv6! It's also now the primary
> web client in Twisted, with twisted.web.client.getPage being deprecated in
> favour of it and Treq.
> - twisted.web.server has had many cleanups revolving around timing out
> inactive clients.
> - twisted.internet.ssl.CertificateOptions has had its `method` argument
> deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo,
> and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments.
> This allows you to better give a range of versions of TLS you wish to
> negotiate, rather than forcing yourself to any one version.
> - twisted.internet.ssl.CertificateOptions will use OpenSSL's
> MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by
> idle TLS connections.
> - You can now call the new twist runner with `python -m twisted`.
> - twisted.conch.ssh now has some ECDH key exchange support and supports
> `hmac-sha2-384`.
> - Better Unicode support in twisted.internet.reactor.spawnProcess,
> especially on Windows on Python 3.6.
> - More Python 3 porting in Conch, and more under-the-hood changes to
> facilitate a Twisted-wide jump to new-style classes only on Python 2 in
> 2018/2019. This release has also been tested on Python 3.6 on Linux.
> - Lots of deprecated code removals, to make a sleeker, less confusing
> Twisted.
> - 60+ closed tickets.
>
> For more information, check the NEWS file (link provided below).
>
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or
> alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS
> file is also available at <https://github.com/twisted/
> twisted/blob/twisted-17.1.0/NEWS>.
>
> Many thanks to everyone who had a part in this release - the supporters of
> the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
>
>
Thanks all!  Great to see the troubles of 16.7 mostly behind us.

I do hope there will be at 17.1.1 soon for <
https://twistedmatrix.com/trac/ticket/9031> and particularly <
https://twistedmatrix.com/trac/ticket/9032>.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170211/5fedfe2e/attachment.html>

From trac at twistedmatrix.com  Sun Feb 12 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Feb 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1486883118.85.1877632589352386773@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170212/725a3ba3/attachment.html>

From p.mayers at imperial.ac.uk  Sun Feb 12 05:10:09 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 12 Feb 2017 12:10:09 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
Message-ID: <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>

On 12/02/2017 01:44, Glyph Lefkowitz wrote:

> Yeah, this is a lack of test coverage for the 'default' case.
>  Technically it /is/ a regression, but it's probably pretty unusual to
> use the default; point being, I don't think we need an emergency release
> here.

Agreed. It's completely tolerable.

> Nevertheless - please file a ticket!

#9033 done


From mithrandi at mithrandi.net  Sun Feb 12 06:00:02 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 12 Feb 2017 13:00:02 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
Message-ID: <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>

On Sun, 12 Feb 2017 at 03:45 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Yeah, this is a lack of test coverage for the 'default' case.  Technically
> it *is* a regression, but it's probably pretty unusual to use the
> default; point being, I don't think we need an emergency release here.
>

The functionality that was removed was previously deprecated, so I don't
think it counts as a regression. However, the fact that most people
wouldn't ever have seen the DeprecationWarning, and?

There's also a huge problem here with documentation, where `-d? is a TCP
> port but `-p? is a strport, and it's hard for end-users to get from the
> command line to the relevant documentation that explains what strports are
> available.
>

?the documentation issue does make things more awkward than they needed to
be.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170212/881cb540/attachment.html>

From exarkun at twistedmatrix.com  Sun Feb 12 08:10:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 12 Feb 2017 10:10:53 -0500
Subject: [Twisted-Python] deprecate using paths with trial
Message-ID: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>

Hello,

Since trial has stopped adding the working directory to sys.path, it seems
very sensible to also stop accepting paths as a way to specify what tests
to run.  Instead, only package, module, class, or test method names should
be accepted.

Please add your thoughts (reasoned arguments, not +1s and -1s) to this
ticket:

    https://twistedmatrix.com/trac/ticket/9035

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170212/fb1305c3/attachment.html>

From anthonylukach at gmail.com  Sun Feb 12 09:50:32 2017
From: anthonylukach at gmail.com (Anthony Lukach)
Date: Sun, 12 Feb 2017 16:50:32 +0000
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
In-Reply-To: <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>
References: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
 <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>
Message-ID: <CAMcYFALvhzAq67iNCe_rJjZwvA3_VKA=UvaeuztY8w_4PHVi=g@mail.gmail.com>

Thanks Jean-Paul, that indeed did help!  To restate what you said, we're
now allowing both authenticated and unauthenticated (anonymous)
connections, each returning a different type of Avatar.  We then take a
look at what the connection is trying to do (handle outbound email vs.
handle inbound email) and either permit/deny the action based on what
avatar is being used.

I appreciate the help!

Anthony

On Thu, Feb 9, 2017 at 11:39 AM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Thu, Feb 9, 2017 at 12:29 PM, Anthony Lukach <anthonylukach at gmail.com>
> wrote:
>
> I am working on putting together an SMTP server implemented within
> Twisted.  This will act as a conduit to my API, where there are two basic
> flows:
>
> 1) A device that supports sending email can "send" an email through the
> SMTP server. This is, in effect, the SMTP server handling the message as an
> outbound request.  The device would authenticate with the server and then
> provide it the message to be sent (which in reality will be uploaded to my
> API).
>
> 2) A device can send an email to my SMTP server via their own SMTP server.
> My server would receive the incoming message, parse its contents, and then
> upload the data to my API. Naturally, these incoming messages would not be
> required to authenticate with the server.
>
> I'm having trouble constructing the server in a way that outbound messages
> require authentication but incoming messages do not.
>
>
> twisted.mail and cred support anonymous access.  I think that what you
> want is to implement an avatar that can only accept messages for local
> delivery and use that for anonymous users.  If an anonymous user tries to
> send mail to a non-local user, they get back an error.  Either they made a
> mistake and they should try again after authenticating or they're trying to
> abuse the service and that's what you want.  That's case (2).  Then
> implement the relay logic in another avatar and use that for authenticated
> users.  That's case (1).
>
> This relies on the fact that the realm you supply is responsible for
> creating avatars and the realm gets told the avatarId for which it should
> create an avatar - and the anonymous user can be differentiated from other
> users by the avatarId.
>
> Does that help?
>
>
> Can anyone direct me to an example of an SMTP server that is both
> accepting inbound and outbound emails and authenticates only on outbound
> emails?
>
>
> As it happens, yes...
>
> This avatar supports local-only delivery:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L51
> This one supports relaying:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L528
> Here's the factory and portal setup code:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L302
>
> The realm is a bit spread out and involves some Axiom-specific concepts
> that you probably don't need to know... But let me know if the above three
> links don't make things clear.
>
>  Jean-Paul
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170212/db9b92c2/attachment.html>

From rodrigc at crodrigues.org  Sun Feb 12 12:08:37 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 12 Feb 2017 11:08:37 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
 <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
Message-ID: <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>

On Tue, Feb 7, 2017 at 11:29 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> Thanks for highlighting those.  I've put the link in the other direction
>> as well.
>>
>>
> Craig seems eager to go ahead with reverting this change in behavior.
>
> https://github.com/twisted/twisted/pull/672#issuecomment-275956265
>
> As far as I can tell, no one has weighed in on the other side.  So I'm
> inclined to go along with the reversion.
>
>
> My 2? for the other side is: if trial does this, but twist and twistd
> don't, then it will be possible to get a passing test run for a plugin that
> doesn't get loaded.  I think it would be simpler and easier to debug to
> leave these consistent.
>
>

This is an interesting corner case, but I think the twistd and twist issues
should be pursued in
separate discussions and tickets.

For trial, I would like to proceed with
https://github.com/twisted/twisted/pull/672/ .  With my conversion
of trial to a console script, the new behavior was unintentional on my
part.  Since all the unit tests
passed, I did not notice.  In this ticket:
https://twistedmatrix.com/trac/ticket/8978
Job-Evers-Meltzer provided a use-case where the new behavior of trial
broke existing usage.

trial can be used as a general-purpose tool for running unittest-style
tests,
much like pytest or nose.  The new behavior is disruptive, for minimal
benefit,
so I would like to restore the old behavior.

I added a unit test for this, so in future, if this breaks again, we will
catch it.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170212/57c610be/attachment.html>

From tp3 at a.easydong.net  Sun Feb 12 20:12:52 2017
From: tp3 at a.easydong.net (Sunsesoft.Du)
Date: Mon, 13 Feb 2017 11:12:52 +0800
Subject: [Twisted-Python] =?gb2312?b?1ve2r8q906rP+rPJzeLDs8bz0rXQwsC2uqM=?=
Message-ID: <201702131112525213444@a.easydong.net>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170213/47ef0d7f/attachment.html>

From commercials24 at yahoo.de  Mon Feb 13 08:22:54 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 13 Feb 2017 16:22:54 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
Message-ID: <1486999374.5873.2.camel@yahoo.de>

hi,


there is a abvious error in the code at the end.
since i know next to nothing about threads i thought maybe a print
statement in the code that is actually doing the work would give me
some pointers.

if im not mistaken, it is:
def callWithContext in python/context.py


as it turns out it does output nothing so i went back the call chain
until it prints something.
now im in:
internet/threads.py  def deferToThreadPool

but even there, printing the argument f prints nothing?
isnt that the first method that is called from my code?

im on linux with python 3.x and twisted 17





from twisted.internet import reactor, task, threads
import datetime

def aSillyBlockingMethod(x):
????import time
????time.sleep(4)
????return x


def runEverySecond():
????print('x')
????
????print(datetime.now().strftime('%H:%M:%S'))????#WRONG, ERROR:
AttributeError: 'module' object has no attribute 'now'
????# that error gets eaten by twisted....why?
????#print(datetime.datetime.now().strftime('%H:%M:%S'))????#WORKS


def printResult(result):
????print("printResult:", result)

def printError(failure):
????print(failure)


# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument')
d.addCallback(printResult)
d.addErrback(printError)

# but this will still run, not getting blocked
l = task.LoopingCall(runEverySecond)
l.start(1.0)

reactor.run()


From ldanielburr at me.com  Mon Feb 13 09:56:53 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 13 Feb 2017 10:56:53 -0600
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <1486999374.5873.2.camel@yahoo.de>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de>
Message-ID: <etPan.58a1e555.6d20c965.8c82@me.com>

Hi Steven,

On February 13, 2017 at 9:24:03 AM, steven meiers (commercials24 at yahoo.de) wrote:

hi,


there is a abvious error in the code at the end.
since i know next to nothing about threads i thought maybe a print
statement in the code that is actually doing the work would give me
some pointers.

if im not mistaken, it is:
def callWithContext in python/context.py


as it turns out it does output nothing so i went back the call chain
until it prints something.
now im in:
internet/threads.py def deferToThreadPool

but even there, printing the argument f prints nothing?
isnt that the first method that is called from my code?


Sorry, your code example and your explanation don?t make clear what you expect to happen, and when. ?When you say ?the first method that is called from my code?, are you referring to ?aSillyBlockingMethod, or runEverySecond? ?In the deferToThread case, you are calling the former; in the task.LoopingCall case, you are calling the latter.

If your intent is to trigger the strftime exception as a consequence of your call to deferToThread, then you would need to either add runEverySecond to the callback chain, or move the call to strftime into the aSillyBlockingMethod call.

Example:

# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument?)
d.addCallback(runEverySecond)
d.addCallback(printResult)
d.addErrback(printError)

Hope this helps,

L. Daniel Burr

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170213/ae101b51/attachment.html>

From commercials24 at yahoo.de  Mon Feb 13 11:00:58 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 13 Feb 2017 19:00:58 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <etPan.58a1e555.6d20c965.8c82@me.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
Message-ID: <1487008858.20524.1.camel@yahoo.de>


> Sorry, your code example and your explanation don?t make clear what
> you expect to happen, and when. ?When you say ?the first method that
> is called from my code?, are you referring to ?aSillyBlockingMethod,
> or runEverySecond? ?In the deferToThread case, you are calling the
> former; in the task.LoopingCall case, you are calling the latter.

Ah youre right, i forgot to write about the most important part.
if the datetime line is wrong you get 
Unhandled Error 

i was looking for a way to get the original error message that:
print(datetime.now().strftime('%H:%M:%S'))

throws if used outside of twisted code.

i know how to correct the code but i would like to know why i dont get
that error on the console.

> If your intent is to trigger the strftime exception as a consequence
> of your call to deferToThread, then you would need to either add
> runEverySecond to the callback chain, or move the call to strftime
> into the aSillyBlockingMethod call.
> 
> Example:
> 
> # this will "sleep" for x seconds
> d = threads.deferToThread(aSillyBlockingMethod, 'some argument?)
> d.addCallback(runEverySecond)
> d.addCallback(printResult)
> d.addErrback(printError)
> 

i tried that one, code looks like this. but i dont get the error
message...still Unhandled error in Deferred

from twisted.internet import reactor, task, threads
import datetime

def aSillyBlockingMethod(x):
????import time
????time.sleep(4)
????return x


def runEverySecond(ignored):

????print(datetime.now().strftime('%H:%M:%S'))????#WRONG, ERROR:
AttributeError: 'module' object has no attribute 'now'
????# that error gets eaten by twisted....why?
????#print(datetime.datetime.now().strftime('%H:%M:%S'))????#WORKS


def printResult(result):
????print("printResult:", result)

def printError(failure):
????print(failure)


# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument')
d.addCallback(runEverySecond)
d.addCallback(printResult)
d.addErrback(printError)

# but this will still run, not getting blocked
l = task.LoopingCall(runEverySecond, 'lala')
l.start(1.0)

reactor.callLater(5, reactor.stop)
reactor.run()



From ldanielburr at me.com  Mon Feb 13 11:35:07 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 13 Feb 2017 12:35:07 -0600
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <1487008858.20524.1.camel@yahoo.de>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
 <1487008858.20524.1.camel@yahoo.de>
Message-ID: <etPan.58a1fc5b.3bfa4c16.8c82@me.com>

Hi Steven,

On February 13, 2017 at 12:01:49 PM, steven meiers (commercials24 at yahoo.de) wrote:


> Sorry, your code example and your explanation don?t make clear what
> you expect to happen, and when. ?When you say ?the first method that
> is called from my code?, are you referring to ?aSillyBlockingMethod,
> or runEverySecond? ?In the deferToThread case, you are calling the
> former; in the task.LoopingCall case, you are calling the latter.

Ah youre right, i forgot to write about the most important part.
if the datetime line is wrong you get  
Unhandled Error  

i was looking for a way to get the original error message that:
print(datetime.now().strftime('%H:%M:%S'))

throws if used outside of twisted code.

i know how to correct the code but i would like to know why i dont get
that error on the console.


[SNIP]

The ?Unhanded error in Deferred? isn?t coming from your call to deferToThread, it is coming from your task.LoopingCall. ?When you invoke .start() on your LoopingCall instance, it returns a Deferred, which fires its assigned callback handler when you call .stop() on the LoopingCall instance, and which fires its assigned errback handler if an exception occurs while running the function (in this case runEverySecond) passed to the LoopingCall.

In other words, you need this:

l = task.LoopingCall(runEverySecond, ?lala?)
l.addErrback(printError)

Hope this helps,

L. Daniel Burr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170213/6ff6bddf/attachment.html>

From commercials24 at yahoo.de  Mon Feb 13 16:45:37 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 14 Feb 2017 00:45:37 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <etPan.58a1fc5b.3bfa4c16.8c82@me.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
 <1487008858.20524.1.camel@yahoo.de> <etPan.58a1fc5b.3bfa4c16.8c82@me.com>
Message-ID: <1487029537.20524.3.camel@yahoo.de>


> 
> [SNIP]
> 
> The ?Unhanded error in Deferred? isn?t coming from your call to
> deferToThread, it is coming from your task.LoopingCall. ?When you
> invoke .start() on your LoopingCall instance, it returns a Deferred,
> which fires its assigned callback handler when you call .stop() on
> the LoopingCall instance, and which fires its assigned errback
> handler if an exception occurs while running the function (in this
> case runEverySecond) passed to the LoopingCall.
> 
> In other words, you need this:
> 
> l = task.LoopingCall(runEverySecond, ?lala?)
> l.addErrback(printError)
> 

you probably meant:
l = task.LoopingCall(runEverySecond, 'lala')
d = l.start(1.0)
d.addErrback(printError)


your version gives me a attribute error, thanks for clarifying that.


From glyph at twistedmatrix.com  Tue Feb 14 15:31:53 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:31:53 -0800
Subject: [Twisted-Python] deprecate using paths with trial
In-Reply-To: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>
References: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>
Message-ID: <091F0A2E-1045-4CC5-814C-9A96A66DA7D6@twistedmatrix.com>


> On Feb 12, 2017, at 7:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> Since trial has stopped adding the working directory to sys.path, it seems very sensible to also stop accepting paths as a way to specify what tests to run.  Instead, only package, module, class, or test method names should be accepted.
> 
> Please add your thoughts (reasoned arguments, not +1s and -1s) to this ticket:
> 
>     https://twistedmatrix.com/trac/ticket/9035 <https://twistedmatrix.com/trac/ticket/9035>
Thanks for bringing this up, JP.  As it happens I disagree right now (comments on the ticket as requested) but this is something we should try to make a coherent decision on to ensure the command-line tooling is as consistent as possible :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170214/bc6390fb/attachment.html>

From glyph at twistedmatrix.com  Tue Feb 14 15:37:06 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:37:06 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
 <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>
Message-ID: <86FB9574-CCAB-4B1D-8FE8-2EBE42439743@twistedmatrix.com>


> On Feb 12, 2017, at 5:00 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Sun, 12 Feb 2017 at 03:45 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Yeah, this is a lack of test coverage for the 'default' case.  Technically it is a regression, but it's probably pretty unusual to use the default; point being, I don't think we need an emergency release here.
> 
> The functionality that was removed was previously deprecated, so I don't think it counts as a regression.

The regression is that the default is wrong; we're effectively the one "calling" the deprecated API by supplying that data.

The fact that users won't see this in this context suggests that our deprecation process for user-facing command-line arguments is broken; we need to fix this for future iterations.

> However, the fact that most people wouldn't ever have seen the DeprecationWarning, and? 
> 
> There's also a huge problem here with documentation, where `-d? is a TCP port but `-p? is a strport, and it's hard for end-users to get from the command line to the relevant documentation that explains what strports are available.
> 
> ?the documentation issue does make things more awkward than they needed to be.

I think the documentation issue may require code changes to be addressed.  Particularly, a command-line interface to say "hey, what endpoint description plugins are available, and what do they do" would be very helpful to packages like txtorcon and txacme.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170214/02f2de84/attachment.html>

From glyph at twistedmatrix.com  Tue Feb 14 15:37:30 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:37:30 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
 <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>
Message-ID: <A373CFA6-85DE-4B72-A294-A72C1DEBF809@twistedmatrix.com>


> On Feb 12, 2017, at 4:10 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 12/02/2017 01:44, Glyph Lefkowitz wrote:
> 
>> Yeah, this is a lack of test coverage for the 'default' case.
>> Technically it /is/ a regression, but it's probably pretty unusual to
>> use the default; point being, I don't think we need an emergency release
>> here.
> 
> Agreed. It's completely tolerable.
> 
>> Nevertheless - please file a ticket!
> 
> #9033 done

Thanks for filing this!

-glyph



From glyph at twistedmatrix.com  Tue Feb 14 15:44:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:44:16 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
 <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
 <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>
Message-ID: <523C84B5-2963-41DF-A60C-3E966A27DEF9@twistedmatrix.com>


> On Feb 12, 2017, at 11:08 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> On Tue, Feb 7, 2017 at 11:29 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> Thanks for highlighting those.  I've put the link in the other direction as well.
>> 
>> 
>> Craig seems eager to go ahead with reverting this change in behavior.
>> 
>> https://github.com/twisted/twisted/pull/672#issuecomment-275956265 <https://github.com/twisted/twisted/pull/672#issuecomment-275956265>
>> 
>> As far as I can tell, no one has weighed in on the other side.  So I'm inclined to go along with the reversion.
> 
> My 2? for the other side is: if trial does this, but twist and twistd don't, then it will be possible to get a passing test run for a plugin that doesn't get loaded.  I think it would be simpler and easier to debug to leave these consistent.
> 
> 
> 
> This is an interesting corner case, but I think the twistd and twist issues should be pursued in
> separate discussions and tickets.
> 
> For trial, I would like to proceed with https://github.com/twisted/twisted/pull/672/ <https://github.com/twisted/twisted/pull/672/> .  With my conversion
> of trial to a console script, the new behavior was unintentional on my part.  Since all the unit tests
> passed, I did not notice.  In this ticket: https://twistedmatrix.com/trac/ticket/8978 <https://twistedmatrix.com/trac/ticket/8978>
> Job-Evers-Meltzer provided a use-case where the new behavior of trial
> broke existing usage.
> 
> trial can be used as a general-purpose tool for running unittest-style tests,
> much like pytest or nose.  The new behavior is disruptive, for minimal benefit,
> so I would like to restore the old behavior.
> 
> I added a unit test for this, so in future, if this breaks again, we will catch it.

There's a lot of controversy around this type of organization of tests; personally, I believe it is a horrible antipattern, others, notably Donald Stufft, (wrongly) regard it as a best practice.

Apropos of the comment I put on 9035, https://twistedmatrix.com/trac/ticket/9035#comment:4 <https://twistedmatrix.com/trac/ticket/9035#comment:4>, would it be acceptable for Job Evers?Meltzer if the syntax were simply 'trial ./tests/' instead?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170214/fdae8a7f/attachment.html>

From glyph at twistedmatrix.com  Tue Feb 14 23:54:42 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 22:54:42 -0800
Subject: [Twisted-Python] conch.ssh.SSHFactory publicKeys and
 getPublicKeys
In-Reply-To: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>
References: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>
Message-ID: <17812501-5CF3-4594-A581-9421B7CE7260@twistedmatrix.com>


> On Feb 2, 2017, at 2:00 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I am writing to ask about the reason why t.conch.ssh.Factory has both
> the getPublicKeys and getPrivateKeys methods ?

As with most things in Conch, the structure of these APIs was probably developed many years ago without any specific thought to how they would be exposed as a public API, and instead were just set up to make implementing the protocol logic more convenient.

> The public keys should be string while private keys should be
> twisted.conch.ssh.keys.Key

By "should be" you mean "is"?

> Based on my understanding if you have a private key object you can
> extract the public key from it.

Yes, via Key.public().

> Are there any SSH key formats which will store a private key without
> the public components ?

I don't think that's possible?

> Or this is just a legacy code from the time when
> twisted.conch.ssh.keys.Key was not there... and getPublicKeys should
> be deprecated?


Rather than thinking of this as "getPublicKeys should be deprecated", the first thing to work on would be "what's the right structure for this"?  How would you prefer this be exposed as an interface?

-glyph

From glyph at twistedmatrix.com  Tue Feb 14 23:56:29 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 22:56:29 -0800
Subject: [Twisted-Python] Hanging SFTP client operations on server
 disconnection
In-Reply-To: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
Message-ID: <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>


> On Feb 2, 2017, at 2:43 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> t.conch.ssh.filetransfer.FileTransferClient._sendRequest keeps a
> mapping with active SFTP requests in self.openRequests
> 
> The self.openRequests is only updated when the server is responding
> for that request.
> 
> They are not cleared/cancelled on connection lost.
> 
> In the case in which the client send a request in the exact same time
> in which the server closes the connect , the client will send the
> request as there is no way to know that the server is gone... but
> since the server is gone it will not reply to the response... and the
> deferred is never called.
> 
> To solve this issue, I went for cancelling the open requests when the
> connection is close.

That sounds correct.  Is there a ticket for this?

> I assume that this is also an issue with bad behaved servers which
> will just ignore a request... so instead of a simple deferred, there
> is the need to use a timeout deferred.
> 
> Is this a bug?
> I am wondering if I am doing something wrong and these type of errors
> should be handled in a different way.

Generally speaking, any Deferred attached to a connection object (regardless of protocol) should be failed with a connection failure error of some kind when the connection is dropped.

> Thanks!
> 
> PS: There is a stray release notes fragment in conch
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature <https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature>

Oops!

Wait; why do you say this is "stray"?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170214/74d388d7/attachment.html>

From cyli at twistedmatrix.com  Wed Feb 15 00:13:38 2017
From: cyli at twistedmatrix.com (Ying Li)
Date: Tue, 14 Feb 2017 23:13:38 -0800
Subject: [Twisted-Python] Trying out Detectify on twistedmatrix.com
Message-ID: <29E7E35C-5746-4F6F-9A62-6F15BF299022@twistedmatrix.com>

Hey all,

I recently heard about https://detectify.com/ <https://detectify.com/> , which is a service which does automatic pen testing, scanning for OWASP top 10 vulnerabilities (https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project <https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project>).

I thought this would be a useful thing to try to run against https://twistedmatrix.com.  They offer non-commercial accounts, and have approved us for a non-commercial account should we want to run automated scans.

I?m going to try running the scan once tonight (post midnight PST), or alternately tomorrow (again post midnight PST) if tonight goes wrong.

Any vulnerabilities discovered will be shared with twisted admins only.  

Just wanted to warn everyone in case alerts start going off or if it happens to knock anything over (which is unlikely, but just in case Glyph has volunteered to look into it if it happens).

Thanks!
-Ying
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170214/df0d7c02/attachment.html>

From glyph at twistedmatrix.com  Wed Feb 15 01:39:22 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 00:39:22 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
Message-ID: <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>


> On Feb 11, 2017, at 5:54 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 17.1!
> 
> The highlights of this release are:
> 
> - twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
> - twisted.web.server has had many cleanups revolving around timing out inactive clients.
> - twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
> - twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
> - You can now call the new twist runner with `python -m twisted`.
> - twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
> - Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
> - More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
> - Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
> - 60+ closed tickets.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS>>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> 
> Thanks all!  Great to see the troubles of 16.7 mostly behind us.

Yes, thanks!  Lots of good stuff in this release!

> I do hope there will be at 17.1.1 soon for <https://twistedmatrix.com/trac/ticket/9031 <https://twistedmatrix.com/trac/ticket/9031>> and particularly <https://twistedmatrix.com/trac/ticket/9032 <https://twistedmatrix.com/trac/ticket/9032>>.

This is a little outside the normal process, but I added a milestone for these just so we have a thing to track when they're fixed and we should roll them up (and in case anything new appears):

https://twistedmatrix.com/trac/milestone/17.1.1 <https://twistedmatrix.com/trac/milestone/17.1.1>

Something I should note about these regressions; they showed up as soon as Mimic upgraded its dependency: https://github.com/rackerlabs/mimic/pull/734 <https://github.com/rackerlabs/mimic/pull/734>

This suggests to me that we really ought to have a more "active" phase of the release process where someone - let's say, the reviewer of the release ticket - goes out to check a select list of other projects' smoke tests to ensure that the prerelease is at least passing their CI.  For example, I would normally have tested Mimic myself, but I was out of commission with a nasty flu-like thing for a good chunk of the prerelease period, but since I happened to miss that window, well-known projects (heck, treq has its own tests for .testing, and those broke, and it's in the twisted org!) managed to break without getting noticed.

So, while it would be good if user projects reported breakages, we should be checking at least the most obvious parts of the integration ecosystem ourselves as part of the release process.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/ae506a3d/attachment.html>

From mithrandi at mithrandi.net  Wed Feb 15 01:39:33 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 15 Feb 2017 08:39:33 +0000
Subject: [Twisted-Python] Hanging SFTP client operations on server
	disconnection
In-Reply-To: <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
 <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
Message-ID: <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>

On Wed, 15 Feb 2017 at 08:56 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> PS: There is a stray release notes fragment in conch
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature
>
>
> Oops!
>
> Wait; why do you say this is "stray"?
>

It appears to be in the wrong directory (should be in
src/twisted/conch/topfiles/).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/a8e7b07b/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Feb 15 01:43:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 00:43:59 -0800
Subject: [Twisted-Python] Hanging SFTP client operations on server
 disconnection
In-Reply-To: <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
 <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
 <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>
Message-ID: <F9725C9F-1248-42BC-B73F-0537AD35C920@twistedmatrix.com>


> On Feb 15, 2017, at 12:39 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Wed, 15 Feb 2017 at 08:56 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
> 
>> PS: There is a stray release notes fragment in conch
>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature <https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature>
> 
> Oops!
> 
> Wait; why do you say this is "stray"?
> 
> It appears to be in the wrong directory (should be in src/twisted/conch/topfiles/). 

Oh, whoops.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/a2d9d6c6/attachment.html>

From exarkun at twistedmatrix.com  Wed Feb 15 06:23:24 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 08:23:24 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
Message-ID: <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>

On Wed, Feb 15, 2017 at 3:39 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 11, 2017, at 5:54 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
>
>> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
>> release of Twisted 17.1!
>>
>> The highlights of this release are:
>>
>> - twisted.web.client.Agent now supports IPv6! It's also now the primary
>> web client in Twisted, with twisted.web.client.getPage being deprecated in
>> favour of it and Treq.
>> - twisted.web.server has had many cleanups revolving around timing out
>> inactive clients.
>> - twisted.internet.ssl.CertificateOptions has had its `method` argument
>> deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo,
>> and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments.
>> This allows you to better give a range of versions of TLS you wish to
>> negotiate, rather than forcing yourself to any one version.
>> - twisted.internet.ssl.CertificateOptions will use OpenSSL's
>> MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by
>> idle TLS connections.
>> - You can now call the new twist runner with `python -m twisted`.
>> - twisted.conch.ssh now has some ECDH key exchange support and supports
>> `hmac-sha2-384`.
>> - Better Unicode support in twisted.internet.reactor.spawnProcess,
>> especially on Windows on Python 3.6.
>> - More Python 3 porting in Conch, and more under-the-hood changes to
>> facilitate a Twisted-wide jump to new-style classes only on Python 2 in
>> 2018/2019. This release has also been tested on Python 3.6 on Linux.
>> - Lots of deprecated code removals, to make a sleeker, less confusing
>> Twisted.
>> - 60+ closed tickets.
>>
>> For more information, check the NEWS file (link provided below).
>>
>> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or
>> alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS
>> file is also available at <https://github.com/twisted/tw
>> isted/blob/twisted-17.1.0/NEWS>.
>>
>> Many thanks to everyone who had a part in this release - the supporters
>> of the Twisted Software Foundation, the developers who contributed code as
>> well as documentation, and all the people building great things with
>> Twisted!
>>
>>
> Thanks all!  Great to see the troubles of 16.7 mostly behind us.
>
>
> Yes, thanks!  Lots of good stuff in this release!
>
> I do hope there will be at 17.1.1 soon for <https://twistedmatrix.com/
> trac/ticket/9031> and particularly <https://twistedmatrix.com/
> trac/ticket/9032>.
>
>
> This is a little outside the normal process, but I added a milestone for
> these just so we have a thing to track when they're fixed and we should
> roll them up (and in case anything new appears):
>
> https://twistedmatrix.com/trac/milestone/17.1.1
>
> Something I should note about these regressions; they showed up as soon as
> Mimic upgraded its dependency: https://github.
> com/rackerlabs/mimic/pull/734
>
> This suggests to me that we really ought to have a more "active" phase of
> the release process where someone - let's say, the reviewer of the release
> ticket - goes out to check a select list of other projects' smoke tests to
> ensure that the prerelease is at least passing their CI.  For example, I
> would normally have tested Mimic myself, but I was out of commission with a
> nasty flu-like thing for a good chunk of the prerelease period, but since I
> happened to miss that window, well-known projects (heck, treq has its own
> tests for .testing, and those broke, and it's in the twisted org!) managed
> to break without getting noticed.
>

I wonder about the details of how treq's failures went unnoticed.  Is
development sufficiently inactive that no one looked at CI between the
breakage and the release?  Wasn't that a period of several months?  Or does
it have a Twisted trunk at HEAD build that none of the contributors really pay
attention to?

If the problem is attention, maybe some kind of alerting could be set up so
the folks who are actually working on Twisted have a direct feed of
information that might be related to that work creating regressions?  I
know there are problems with false positives from CI but the dial for
information flow seems to be set a bit too low right now.  Maybe turning it
up for a while and then re-evaluating makes sense.


> So, while it would be good if user projects reported breakages, we should
> be checking at least the *most* obvious parts of the integration
> ecosystem ourselves as part of the release process.
>
>
All other things being equal, it would be better to learn about the
breakage at the time of the breakage rather than at release time (for the
usual reasons).  So I think something like a mailing list for external CI
failures against Twisted trunk at HEAD is a better thing to try than telling
the RM to go look at a bunch of CIs.

Maybe we could even double down on this and host the new list solely on
txlists? :)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/5cdbc79a/attachment.html>

From mithrandi at mithrandi.net  Wed Feb 15 07:11:38 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 15 Feb 2017 14:11:38 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
Message-ID: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>

On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <exarkun at twistedmatrix.com>
wrote:

>
> I wonder about the details of how treq's failures went unnoticed.  Is
> development sufficiently inactive that no one looked at CI between the
> breakage and the release?  Wasn't that a period of several months?  Or does
> it have a Twisted trunk at HEAD build that none of the contributors really
> pay attention to?
>

The latter is the case; there are Twisted trunk builds, but they're flagged
as "failures allowed" to avoid disrupting development with transient
breakage. Unfortunately this means that basically nobody ever notices when
they fail. For example, here's a failing build:

https://travis-ci.org/twisted/treq/builds/194691849

I haven't found a good solution to this problem yet in my own projects; I'm
hoping someone else has some ideas?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/d9a112d6/attachment.html>

From exarkun at twistedmatrix.com  Wed Feb 15 07:51:36 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 09:51:36 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
Message-ID: <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>

On Wed, Feb 15, 2017 at 9:11 AM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>>
>> I wonder about the details of how treq's failures went unnoticed.  Is
>> development sufficiently inactive that no one looked at CI between the
>> breakage and the release?  Wasn't that a period of several months?  Or does
>> it have a Twisted trunk at HEAD build that none of the contributors really
>> pay attention to?
>>
>
> The latter is the case; there are Twisted trunk builds, but they're
> flagged as "failures allowed" to avoid disrupting development with
> transient breakage. Unfortunately this means that basically nobody ever
> notices when they fail. For example, here's a failing build:
>
> https://travis-ci.org/twisted/treq/builds/194691849
>
> I haven't found a good solution to this problem yet in my own projects;
> I'm hoping someone else has some ideas?
>

Given an arbitrarily powerful CI system, you could do something.

Assume two projects, A and B, with a dependency between them (doesn't
matter which direction, I think; doesn't even have to be one-way though
obviously it should be).

When A changes, do a build of B.  Use the new A and the newest version of B
which had a successful build.  If this build succeeds, A and B are probably
still working well together.  If this build fails, there's a good chance A
just introduced a regression.

Apply the same logic with A and B reversed.

I expect you could implement this on BuildBot.  It might be more realistic
to do something slightly simpler - like pinning the version of B in the
A-changed builds (and vice versa).  This would miss regressions relating to
changes in B introduced after the pinned version - but maybe that's okay
(you could update pinned versions with each release of B or once every few
months or something).  I think you could implement this on something like
travis-ci without *much* difficulty.  Just duplicate (some of) the treq
(for example) travis-ci configuration in Twisted's travis-ci
configuration.  It doesn't sound crazy to say "treq 16.12.0 test suite
should be required to pass for Twisted trunk at HEAD (at least until around
Twisted 17.12, probably?).

And of course there's bound to be noise out of this system, too.  I'd guess
it would be little enough that the result is still valuable but hard to say
for sure without trying...

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/88c67fef/attachment-0001.html>

From exarkun at twistedmatrix.com  Wed Feb 15 11:30:35 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 13:30:35 -0500
Subject: [Twisted-Python] Trial & Hypothesis
Message-ID: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>

Hey all,

A few folks had an IRC discussion about improving the trial & hypothesis
experience.  I took some notes and thought I'd share them here in case
anyone else is interested.

We're planning to pick up the discussion next Wednesday.  Feel free to join
in #twisted-dev on Freenode (we might set up a Google Hangout, details will
be on IRC if so).

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/994b7e39/attachment.html>
-------------- next part --------------
* Goals
** Make Twisted / Hypothesis as convenient as Anything Else / Hypothesis.

*** trial doesn't discover "runTest" so Hypothesis stateful tests aren't discovery
**** Make trial discover "runTest"
***** This might break things
***** Also TestLoader.getTestCaseNames is incompatible with test methods without a test_ prefix (so we need a new interface)

**** Make Hypothesis name its test "test_something"
***** Name could be an argument to a stateful TestCase factory

*** trial TestCases have extra helper methods not availabe to Hypothesis stateful tests
**** Make base TestCase class an argument to a stateful TestCase factory

*** setUp / tearDown are called just once even though test body might be called many times; and
*** tests that return Deferred are simply incompatible with Hypothesis
**** Hypothesis has an "executor" hook (eg new_style_executor) that might be a good place to hang reactor knowledge
**** this could also be a place to hang better setUp / tearDown handling
***** this would be incompatible with current operation which has separate setup_example/teardown_example hooks
***** and there's still only a single TestCase instance having methods called on it repeatedly which could be surprising
****** `trial -u` does this already though, so maybe less so for trial users
***** but it might be better, anyway

*** Hypothesis does a lot of work within a single test method.
**** A consequence is a ton of log data mixed together from runs with different values.
***** It would be nice to be able to see minimal logging from just the most shrunk iteration.
**** Maybe there could be a custom HypothesisSuite that knows how repeatedly instantiate a TestCase and run it more normally
***** This replaces the loop inside a test_ method with a loop around something more like TestCase().run()
****** might solve many problems at once
****** confuses things like `trial -j`
****** causes each test run to have a different number of tests, which is weird

From glyph at twistedmatrix.com  Wed Feb 15 22:47:17 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:47:17 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
Message-ID: <15EEA9D1-9FC3-41D1-9F47-9BAB01415959@twistedmatrix.com>


> On Feb 15, 2017, at 6:11 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> 
> I wonder about the details of how treq's failures went unnoticed.  Is development sufficiently inactive that no one looked at CI between the breakage and the release?  Wasn't that a period of several months?  Or does it have a Twisted trunk at HEAD build that none of the contributors really pay attention to?
> 
> The latter is the case; there are Twisted trunk builds, but they're flagged as "failures allowed" to avoid disrupting development with transient breakage. Unfortunately this means that basically nobody ever notices when they fail. For example, here's a failing build:
> 
> https://travis-ci.org/twisted/treq/builds/194691849 <https://travis-ci.org/twisted/treq/builds/194691849>
> 
> I haven't found a good solution to this problem yet in my own projects; I'm hoping someone else has some ideas?

Indeed, I probably saw these failures myself; the issue is that there's no point in the process where someone has to care.  When you're trying to merge a PR, you care that the tests are failing for that PR, because making them pass is a part of the process.  But, other stuff that's changed upstream is ancillary, even if you sort of abstractly know it's a problem.  I suspect even our release manager, who also maintains treq on occasion, might have seen the failures at some point, but not managed to connect them.

If we could get requires.io <http://requires.io/> to send "--pre" requirements PRs, that might be enough; I notice immediately when dependencies actually break on production PyPI for Mimic, but there's no PR for prerelease dependency versions.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/e6d4b07f/attachment.html>

From glyph at twistedmatrix.com  Wed Feb 15 22:47:44 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:47:44 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
Message-ID: <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>


> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> It doesn't sound crazy to say "treq 16.12.0 test suite should be required to pass for Twisted trunk at HEAD (at least until around Twisted 17.12, probably?).

That seems like a reasonable requirement, yes.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170215/1d5741d6/attachment.html>

From glyph at twistedmatrix.com  Wed Feb 15 22:49:21 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:49:21 -0800
Subject: [Twisted-Python] Trial & Hypothesis
In-Reply-To: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>
References: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>
Message-ID: <F2A4237D-59FE-4108-A5AF-944A1A67217E@twistedmatrix.com>


> On Feb 15, 2017, at 10:30 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hey all,
> 
> A few folks had an IRC discussion about improving the trial & hypothesis experience.  I took some notes and thought I'd share them here in case anyone else is interested.
> 
> We're planning to pick up the discussion next Wednesday.  Feel free to join in #twisted-dev on Freenode (we might set up a Google Hangout, details will be on IRC if so).

I don't have much to add here but I just want to say I'm super excited that this work is ongoing and look forward to using Twisted + Hyptothesis on something in the near future.

-g




From tobias.oberstein at crossbario.com  Thu Feb 16 14:02:22 2017
From: tobias.oberstein at crossbario.com (Tobias Oberstein)
Date: Thu, 16 Feb 2017 22:02:22 +0100
Subject: [Twisted-Python] ANN: txaio-etcd
Message-ID: <6bb26dfe-e642-1cf3-8b6a-357adb644e3f@crossbario.com>

Hi,

txaio-etcd is a etcd3 client library for Twisted that is fully 
asynchronous and pure Python:

https://github.com/crossbario/txaio-etcd

It also exposes advanced features like watching keys, transactions and 
leases:

https://github.com/crossbario/txaio-etcd/tree/master/examples

Releases are on PyPI

https://pypi.python.org/pypi/txaioetcd

The library is reasonably complete and working, but definitely alpha 
status as it hasn't seen much use from app code still.

Hence, any usage and testing feedback, API change requests or PRs are 
welcome!

Cheers,
/Tobias


From exarkun at twistedmatrix.com  Fri Feb 17 10:48:43 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 17 Feb 2017 12:48:43 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
 <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
Message-ID: <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>

On Thu, Feb 16, 2017 at 12:47 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> It doesn't sound crazy to say "treq 16.12.0 test suite should be required
> to pass for Twisted trunk at HEAD (at least until around Twisted 17.12,
> probably?).
>
>
> That seems like a reasonable requirement, yes.
>
>
Here's *a* take on that: https://tm.tl/#9042 /
https://github.com/twisted/twisted/pull/710

I didn't pin treq to 16.12.0 but instead let it float on the most recent
release.  That seems safe as long as treq takes care not to issue a release
that contains changes that makes it incompatible with Twisted trunk at HEAD.
 treq CI tests against Twisted trunk at HEAD so I think this is low risk.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170217/ac50d646/attachment.html>

From glyph at twistedmatrix.com  Fri Feb 17 19:27:17 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Feb 2017 18:27:17 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
 <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
 <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>
Message-ID: <64A04964-9302-4A2E-B1DD-07DE4359119D@twistedmatrix.com>


> On Feb 17, 2017, at 9:48 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Feb 16, 2017 at 12:47 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> It doesn't sound crazy to say "treq 16.12.0 test suite should be required to pass for Twisted trunk at HEAD (at least until around Twisted 17.12, probably?).
> 
> That seems like a reasonable requirement, yes.
> 
> 
> Here's a take on that: https://tm.tl/#9042 <https://tm.tl/#9042> / https://github.com/twisted/twisted/pull/710 <https://github.com/twisted/twisted/pull/710>
> 
> I didn't pin treq to 16.12.0 but instead let it float on the most recent release.  That seems safe as long as treq takes care not to issue a release that contains changes that makes it incompatible with Twisted trunk at HEAD.  treq CI tests against Twisted trunk at HEAD so I think this is low risk.

Yes.  This sounds good to me.  We might want to add one or two other downstream projects as well (starting with Klein), but Treq is a really good start.  Perhaps we should ask other projects (Scrapy? Matrix?) to send us PRs to add some subset of their tests to this smoke test.

Frankly if this integrated a fix for the MemoryReactor behavior and was therefore passing I'd just land it :). Do you want to make it allow_fail?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170217/5b2a68c9/attachment.html>

From glyph at twistedmatrix.com  Sat Feb 18 12:25:47 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 11:25:47 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <1754891486027057@web35j.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
Message-ID: <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>


> On Feb 2, 2017, at 1:17 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Hello everyone! I wrote Twisted-based TCP server which is capable of running in several relatively different modes. When mode switch is needed, I would like the server to restart itself by some means, for it to read new mode from configuration file and create corresponding implementation. Also I wanted the restart to occur without re-running twistd process, because it seems to me more appropriate for Linux daemon.

Hi Roman,

Sorry it took a while to get to this one :).

If your solution is working for you, then it's fine.  You've correctly understood the API associated with IServiceCollection and your implementation (at least at first glance, I don't have time to test it exhaustively :)) is correct.

However, there's a more philosophical question as well: if you really want to re-start from scratch, what exactly are you shutting down and starting up again?  Wouldn't you want to be able to load new code?  Simply stopping and starting objects won't re-initialize the process from the beginning, only from some indeterminate middle state where parts of the program are already set up; this doesn't have the usual desired effect of a "restart" where potentially unknown or buggy state is cleared away.

You may want to consider simply calling execv https://docs.python.org/2.7/library/os.html#os.execv <https://docs.python.org/2.7/library/os.html#os.execv> with [sys.executable] + sys.argv rather than trying to do this in terms of Twisted's APIs.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170218/6f8c1db3/attachment.html>

From exarkun at twistedmatrix.com  Sat Feb 18 16:19:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 18 Feb 2017 18:19:33 -0500
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
Message-ID: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>

On Sat, Feb 18, 2017 at 2:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 2, 2017, at 1:17 AM, ????? ????????? <romanmescheryakov at yandex.ru>
> wrote:
>
> *Hello everyone! I wrote Twisted-based TCP server which is capable of
> running in several relatively different modes. When mode switch is needed,
> I would like the server to restart itself by some means, for it to read new
> mode from configuration file and create corresponding implementation. Also
> I wanted the restart to occur without re-running twistd process, because it
> seems to me more appropriate for Linux daemon.*
>
>
> Hi Roman,
>
> Sorry it took a while to get to this one :).
>
> If your solution is working for you, then it's fine.  You've correctly
> understood the API associated with IServiceCollection and your
> implementation (at least at first glance, I don't have time to test it
> exhaustively :)) is correct.
>
> However, there's a more philosophical question as well: if you really want
> to *re-start* from scratch, what exactly are you shutting down and
> starting up again?  Wouldn't you want to be able to load new code?  Simply
> stopping and starting objects won't re-initialize the process from the
> beginning, only from some indeterminate middle state where parts of the
> program are already set up; this doesn't have the usual desired effect of a
> "restart" where potentially unknown or buggy state is cleared away.
>
> You may want to consider simply calling execv https://docs.python.org/
> 2.7/library/os.html#os.execv with [sys.executable] + sys.argv rather than
> trying to do this in terms of Twisted's APIs.
>

Or better yet.  Don't be afraid to just exit.  Your process is being
managed by a supervisor with a rich feature set - like easily controlled
re-restart behavior, right (If not, what do you do when your daemon simply
*crashes*)?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170218/e9ce5e7e/attachment.html>

From glyph at twistedmatrix.com  Sat Feb 18 16:32:12 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 15:32:12 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
Message-ID: <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>


> On Feb 18, 2017, at 3:19 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
>  (If not, what do you do when your daemon simply crashes)?


Twisted programs can crash!??!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170218/0b837ec1/attachment.html>

From exarkun at twistedmatrix.com  Sat Feb 18 16:33:41 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 18 Feb 2017 18:33:41 -0500
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>
Message-ID: <CAEeXt4OiToHEp2_21bm1OAAmnAEKAqBDf56Qo+i8KK_4pe9T9A@mail.gmail.com>

On Sat, Feb 18, 2017 at 6:32 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 18, 2017, at 3:19 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>  (If not, what do you do when your daemon simply *crashes*)?
>
>
>
> Twisted programs can crash!??!
>

The Linux OOM killer is pretty crazy, man.

Jean-Paul


>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170218/4a912dcb/attachment.html>

From glyph at twistedmatrix.com  Sat Feb 18 16:35:09 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 15:35:09 -0800
Subject: [Twisted-Python] (Potential) Twisted sprint in San Francisco -
 anyone want to help organize?
Message-ID: <BC5BC218-2999-47AF-A49E-76A724AEF00E@twistedmatrix.com>

Hi all,

For those of you that live in the SF bay area, the SF Python Meetup is holding a sprint in almost exactly one month from today: https://www.meetup.com/sfpython/events/234926664/ <https://www.meetup.com/sfpython/events/234926664/>

Personally, I'm a bit tapped out at the moment in terms of spare time and brainpower to help organize things, but I do hope some enterprising member of the project can pick this up and help us have a great sprint there.  I can probably show up and write some code :-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170218/73b63690/attachment-0001.html>

From trac at twistedmatrix.com  Sun Feb 19 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Feb 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1487487918.89.8849560237410878033@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170219/3ac989fe/attachment.html>

From dstainton415 at gmail.com  Sun Feb 19 13:56:36 2017
From: dstainton415 at gmail.com (David Stainton)
Date: Sun, 19 Feb 2017 20:56:36 +0000
Subject: [Twisted-Python] announcing: txmix, a twisted python mixnet library
Message-ID: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>

Hi. I'd like to announce txmix, a library for writing mixnets in python.

https://github.com/applied-mixnetworks/txmix

txmix is GPL3 licensed and currently depends on:
sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
and Tor Project's chutney (for integration tests).

txmix allows you to write mixnets with reduced code complexity and
transport agnosticism... however I've choosen to focus my development
efforts on the Tor onion transport for several reasons, the onion
transport has some properties which the UDP transport does not:

- reliability
- forward secrecy
- NAT penetration

Additionally the Tor anonymity properties are a welcome bonus since
they aren't really overlapping with those of the mixnet, they are
vulnerable to different types of attacks and accomodate for totally
different threat models.

Currently txmix has some integration tests that use chutney to spin up
a local 25 relay tor network; builds a mixnet using onion services
as the transport and then tests functionality by sending and receiving
messages on the mixnet.


future development
------------------

- txmix could certainly be used to write various kinds of mixnets,
however, we are missing a PKI. Without some kind of public key
infrastructure how will mix clients learn about mix public keys?

- sphixmixcrypto library needs improvements that would allow us
to specify more message types such as dummy/cover traffic message
and heartbeat messages. These of course are essential for the defense
against certain known active attacks against some mix types.


questions, code review and pull requests welcome.


David Stainton


From glyph at twistedmatrix.com  Sun Feb 19 19:03:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Feb 2017 18:03:36 -0800
Subject: [Twisted-Python] announcing: txmix,
 a twisted python mixnet library
In-Reply-To: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
References: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
Message-ID: <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>

> On Feb 19, 2017, at 12:56, David Stainton <dstainton415 at gmail.com> wrote:
> 
> Hi. I'd like to announce txmix, a library for writing mixnets in python.
> 
> https://github.com/applied-mixnetworks/txmix
> 
> txmix is GPL3 licensed and currently depends on:
> sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
> and Tor Project's chutney (for integration tests).
> 
> txmix allows you to write mixnets with reduced code complexity and
> transport agnosticism... however I've choosen to focus my development
> efforts on the Tor onion transport for several reasons, the onion
> transport has some properties which the UDP transport does not:
> 
> - reliability
> - forward secrecy
> - NAT penetration
> 
> Additionally the Tor anonymity properties are a welcome bonus since
> they aren't really overlapping with those of the mixnet, they are
> vulnerable to different types of attacks and accomodate for totally
> different threat models.
> 
> Currently txmix has some integration tests that use chutney to spin up
> a local 25 relay tor network; builds a mixnet using onion services
> as the transport and then tests functionality by sending and receiving
> messages on the mixnet.
> 
> 
> future development
> ------------------
> 
> - txmix could certainly be used to write various kinds of mixnets,
> however, we are missing a PKI. Without some kind of public key
> infrastructure how will mix clients learn about mix public keys?
> 
> - sphixmixcrypto library needs improvements that would allow us
> to specify more message types such as dummy/cover traffic message
> and heartbeat messages. These of course are essential for the defense
> against certain known active attacks against some mix types.
> 
> 
> questions, code review and pull requests welcome.
> 
> 
> David Stainton

Very cool.  To be perfectly honest I don't understand most of this in a lot of detail (starting with what a "mixnet" is), but thanks for using Twisted to do it :).

-glyph

From dstainton415 at gmail.com  Sun Feb 19 22:15:41 2017
From: dstainton415 at gmail.com (David Stainton)
Date: Mon, 20 Feb 2017 05:15:41 +0000
Subject: [Twisted-Python] announcing: txmix,
	a twisted python mixnet library
In-Reply-To: <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>
References: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
 <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>
Message-ID: <CAFN1edqn=ycqde=6ByfLeuFtvt=_u6pk4=66yB6PDLjW9DTu9A@mail.gmail.com>

Hi Glyph,

Yeah hopefully I'll be using Automat soon as well :-)

A mixnet is an anonymity network which means it provides sender and
receiver anonymity (location hiding).
Mixnets have some very interesting properties such as:
- message oriented
- high latency
- not vulnerable to global passive adversary

Unlike tor which is stream oriented, low latency and most definitely
vulnerable to global passive adversaries.
(Mixnets were invented in 1981 by David Chaum, there's a lot of
research papers but not a lot of examples we can use.)

It's funny that anonymity properties make writing txmix easier because
there is no addressing information for received mixnet messages ;-p
whereas core twisted is built very carefully to preserve the address
of received connections and datagrams.

My favorite mixnet introductions include:
- https://crypto.is/blog/mix_and_onion_networks
- "Why I'm not an Entropist"
https://www.freehaven.net/anonbib/cache/entropist.pdf
- "Sleeping dogs lie on a bed of onions but wake when mixed"
https://petsymposium.org/2011/papers/hotpets11-final10Syverson.pdf


Cheers,

David


On Mon, Feb 20, 2017 at 2:03 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>> On Feb 19, 2017, at 12:56, David Stainton <dstainton415 at gmail.com> wrote:
>>
>> Hi. I'd like to announce txmix, a library for writing mixnets in python.
>>
>> https://github.com/applied-mixnetworks/txmix
>>
>> txmix is GPL3 licensed and currently depends on:
>> sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
>> and Tor Project's chutney (for integration tests).
>>
>> txmix allows you to write mixnets with reduced code complexity and
>> transport agnosticism... however I've choosen to focus my development
>> efforts on the Tor onion transport for several reasons, the onion
>> transport has some properties which the UDP transport does not:
>>
>> - reliability
>> - forward secrecy
>> - NAT penetration
>>
>> Additionally the Tor anonymity properties are a welcome bonus since
>> they aren't really overlapping with those of the mixnet, they are
>> vulnerable to different types of attacks and accomodate for totally
>> different threat models.
>>
>> Currently txmix has some integration tests that use chutney to spin up
>> a local 25 relay tor network; builds a mixnet using onion services
>> as the transport and then tests functionality by sending and receiving
>> messages on the mixnet.
>>
>>
>> future development
>> ------------------
>>
>> - txmix could certainly be used to write various kinds of mixnets,
>> however, we are missing a PKI. Without some kind of public key
>> infrastructure how will mix clients learn about mix public keys?
>>
>> - sphixmixcrypto library needs improvements that would allow us
>> to specify more message types such as dummy/cover traffic message
>> and heartbeat messages. These of course are essential for the defense
>> against certain known active attacks against some mix types.
>>
>>
>> questions, code review and pull requests welcome.
>>
>>
>> David Stainton
>
> Very cool.  To be perfectly honest I don't understand most of this in a lot of detail (starting with what a "mixnet" is), but thanks for using Twisted to do it :).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From romanmescheryakov at yandex.ru  Mon Feb 20 01:58:29 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 20 Feb 2017 11:58:29 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
Message-ID: <18715221487581109@web25h.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/44217824/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 20 02:02:14 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 01:02:14 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <18715221487581109@web25h.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
Message-ID: <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>


> On Feb 20, 2017, at 00:58, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
>  
> Hi everyone,
>  
> The answers are below
>  
> -- 
> Kind regards, Roman Mescheryakov
>  
>  
> 19.02.2017, 02:21, "Jean-Paul Calderone" <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>>:
>> On Sat, Feb 18, 2017 at 2:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>  
>>> On Feb 2, 2017, at 1:17 AM, ????? ????????? <romanmescheryakov at yandex.ru <mailto:romanmescheryakov at yandex.ru>> wrote:
>>>  
>>> Hello everyone! I wrote Twisted-based TCP server which is capable of running in several relatively different modes. When mode switch is needed, I would like the server to restart itself by some means, for it to read new mode from configuration file and create corresponding implementation. Also I wanted the restart to occur without re-running twistd process, because it seems to me more appropriate for Linux daemon.
>> 
>> Hi Roman,
>>  
>> Sorry it took a while to get to this one :).
>>  
>> If your solution is working for you, then it's fine.  You've correctly understood the API associated with IServiceCollection and your implementation (at least at first glance, I don't have time to test it exhaustively :)) is correct.
>>  
>> However, there's a more philosophical question as well: if you really want to re-start from scratch, what exactly are you shutting down and starting up again?  Wouldn't you want to be able to load new code?  Simply stopping and starting objects won't re-initialize the process from the beginning, only from some indeterminate middle state where parts of the program are already set up; this doesn't have the usual desired effect of a "restart" where potentially unknown or buggy state is cleared away.
>>  
>> You may want to consider simply calling execv https://docs.python.org/2.7/library/os.html#os.execv <https://docs.python.org/2.7/library/os.html#os.execv> with [sys.executable] + sys.argv rather than trying to do this in terms of Twisted's APIs.
>  
> You are right, Glyph, using os.execv would be more simple, reliable and straightforward way of achieving my goal. The only thing that bothers me due to lack of Linux experience: is it OK to os.execv inside daemon process? Because I run my process using twistd, not python directly.

If you're actually daemonizing ('twistd' without '-n') then there might be a small issue.  However, a modern best practice is to never daemonize; this is why the new `twist` runner (which you should probably switch to) doesn't daemonize and expects your supervisor to handle backgrounding.

>>  
>> Or better yet.  Don't be afraid to just exit.  Your process is being managed by a supervisor with a rich feature set - like easily controlled re-restart behavior, right (If not, what do you do when your daemon simply crashes)?
>>  
> 
> Well, in fact I'm in the development stage now and did't have time to deal with this question yet :) As of now I understand very little about daemons and their supervisors (I belive it is systemd for Raspbian...).

Yes, systemd will do this.

> Jean-Paul and Glyph, thank you for guiding me in the right direction! :)
>  
>  

Happy to help!

-g

>> Jean-Paul
>>  
>> ,
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/02518b85/attachment-0001.html>

From commercials24 at yahoo.de  Mon Feb 20 06:02:14 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 20 Feb 2017 14:02:14 +0100
Subject: [Twisted-Python] trial cant find my class, example from twisted docs
Message-ID: <1487595734.4573.13.camel@yahoo.de>

hi,


up to now ive only used the python unittest for my code, but now i
would also like to test the twisted part.


so i followed:
http://twistedmatrix.com/documents/current/core/howto/trial.html


but i get this error:
(venv) julius at t560:~/code/python/twisted/basics$ trial calculus
calculus
...????????????????????????????????????????????????????????????[ERROR]

=======================================================================
========
[ERROR]
Traceback (most recent call last):
? File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/trial/runner.py", line 781, in loadByName
????return self.suiteFactory([self.findByName(name, recurse=recurse)])
? File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/trial/runner.py", line 710, in findByName
????obj = reflect.namedAny(name)
? File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/python/reflect.py", line 306, in namedAny
????raise ModuleNotFound("No module named %r" % (name,))
twisted.python.reflect.ModuleNotFound: No module named 'calculus'

calculus
---------------------------------------------------------------------
----------
Ran 1 tests in 0.024s

FAILED (errors=1)





heres how my calculus directory looks like:
find . | grep -v './venv/'
.
./__pycache__
./__pycache__/__init__.cpython-35.pyc
./test
./test/test_base_1.py
./test/__init__.py
./venv
./__init__.py
./base_1.py
./__init__.pyc



venv contains the virtualenv created by "virtualenv -p /usr/bin/python3
venv"


the __init__.py files are empty and test_base_1.py / base_1.py contains
what is shown in the tutorial.


any idea why this does not work?


From hawkowl at atleastfornow.net  Mon Feb 20 14:46:51 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Tue, 21 Feb 2017 08:46:51 +1100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
Message-ID: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>

Hi everyone!

Currently, Twisted supports five Python versions. These are 2.7, 3.3, 3.4,
3.5, and now 3.6. This is more Python versions than Twisted has ever really
supported in the past, and even though it is great to support a lot of
runtimes, it is becoming a greater burden on Twisted to support so many.

The major reasons for this is that newer Python 3 versions include useful
features (such as % formatting for bytes) that earlier ones do not. This
leads us to having two, or sometimes three, ways of doing something - the
Python 2 way, the early Python 3 way, and the new Python 3 way. This
introduces complexity (and bugs!) and means we can't really take advantage
of anything nice Python 3 gives us in the future, as we still remain
compatible with 3.3 and 3.4.

As such, I would like to remove support for these Python versions. Using
recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/) we
can infer that Python 3.3 is on the whole uncommon, despite it being the
default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption
of new major versions of Python 3 (Python 3.5 was barely a year old by the
time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the
latest two or so are worth supporting.

The other rationale I have for this is that we no longer have the problem
of CentOS 6-style Python 2.6 being put into new production because it's
what people ran -- the Brave New World of Docker and containerisation puts
us in a different position than we were with Python 2.6. Although this is
purely anecdotal, it appears lots of Python 3 installations are not through
the operating system (due to how slow the cycles are, and the proliferation
of PPAs and Docker containers), and therefore being tied to whatever
current OSs support is not doing any Python 3 users a real service.

With this rationale, I propose that the next version of Twisted (most
likely 17.3) will be the last to support Python 3.3. The question of Python
3.4 support is something that will need further discussion (where 3.3 just
plain has the writing on the wall), but I believe a removal of support not
long after is reasonable, considering the 3.4 installed base is smaller
than that of 2.6.

Thoughts?

- Amber Brown, Release Owl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/41838b2d/attachment.html>

From donald at stufft.io  Mon Feb 20 15:03:03 2017
From: donald at stufft.io (Donald Stufft)
Date: Mon, 20 Feb 2017 17:03:03 -0500
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>


> On Feb 20, 2017, at 4:46 PM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. 
> 


FWIW, we?ve considered dropping support for 3.3 in pip and basically the only reason we didn?t was because it was still technically supported by upstream. I very much doubt that Twisted is going to have a problem dropping 3.3.

?
Donald Stufft



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/e8aa3b1f/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 20 19:16:31 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 18:16:31 -0800
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <1487595734.4573.13.camel@yahoo.de>
References: <1487595734.4573.13.camel@yahoo.de>
Message-ID: <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>


> On Feb 20, 2017, at 5:02 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> any idea why this does not work?

Most likely you are being bitten by the recent change to not add '.' to sys.path automatically.

Does `PYTHONPATH=. trial ...` run your code as expected?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/0cee150f/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 20 19:21:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 18:21:15 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>
Message-ID: <0C933050-8E4D-4BA0-A611-B33A1D51DFC5@twistedmatrix.com>


> On Feb 20, 2017, at 2:03 PM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Feb 20, 2017, at 4:46 PM, Amber Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
>> 
>> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. 
>> 
> 
> 
> FWIW, we?ve considered dropping support for 3.3 in pip and basically the only reason we didn?t was because it was still technically supported by upstream. I very much doubt that Twisted is going to have a problem dropping 3.3.

Thanks for this data point, Donald.

Personally I think we should drop 3.3 pretty soon.  The only reason it's even remotely interesting is that it is the only supported pypy version of py3, but from what I've heard it's already better to just use the nightly builds of the 3.5 branch.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/592e1881/attachment.html>

From rodrigc at crodrigues.org  Mon Feb 20 19:32:21 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 20 Feb 2017 18:32:21 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <CAG=rPVe6TUxBSAN3woagcN43-+M_0Ocs_d8HpCoWuaqZ5OW5dQ@mail.gmail.com>

On Mon, Feb 20, 2017 at 1:46 PM, Amber Brown <hawkowl at atleastfornow.net>
wrote:

>
> With this rationale, I propose that the next version of Twisted (most
> likely 17.3) will be the last to support Python 3.3. The question of Python
> 3.4 support is something that will need further discussion (where 3.3 just
> plain has the writing on the wall), but I believe a removal of support not
> long after is reasonable, considering the 3.4 installed base is smaller
> than that of 2.6.
>
>
This sounds OK to me.
Up until this year, large parts of Twisted didn't work with Python 3 at all,
so I don't think there are many Python 3.3 Twisted users out there.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170220/5f8bb390/attachment-0001.html>

From hs at ox.cx  Tue Feb 21 01:27:19 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 21 Feb 2017 09:27:19 +0100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>

In general I'd say we should take into account LTS releases. 

OTOH Python 3 adoption is still rather low and tends toward newer versions with fast upgrading.

There's deadsnakes and there's SC and there's Docker.  I think it's totally fair to drop everything before 3.5 since that gives us nice goodies that make a lot of sense for Twisted.

A volunteer driven project gets to choose their own priorities and there's no entitlement to shiny new features on old Pythons. 

3.3 should die immediately.  3.4 should follow ASAP.

Sent from my phone apologies for top posting.

> Am 20.02.2017 um 22:46 schrieb Amber Brown <hawkowl at atleastfornow.net>:
> 
> Hi everyone!
> 
> Currently, Twisted supports five Python versions. These are 2.7, 3.3, 3.4, 3.5, and now 3.6. This is more Python versions than Twisted has ever really supported in the past, and even though it is great to support a lot of runtimes, it is becoming a greater burden on Twisted to support so many.
> 
> The major reasons for this is that newer Python 3 versions include useful features (such as % formatting for bytes) that earlier ones do not. This leads us to having two, or sometimes three, ways of doing something - the Python 2 way, the early Python 3 way, and the new Python 3 way. This introduces complexity (and bugs!) and means we can't really take advantage of anything nice Python 3 gives us in the future, as we still remain compatible with 3.3 and 3.4.
> 
> As such, I would like to remove support for these Python versions. Using recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/) we can infer that Python 3.3 is on the whole uncommon, despite it being the default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption of new major versions of Python 3 (Python 3.5 was barely a year old by the time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the latest two or so are worth supporting.
> 
> The other rationale I have for this is that we no longer have the problem of CentOS 6-style Python 2.6 being put into new production because it's what people ran -- the Brave New World of Docker and containerisation puts us in a different position than we were with Python 2.6. Although this is purely anecdotal, it appears lots of Python 3 installations are not through the operating system (due to how slow the cycles are, and the proliferation of PPAs and Docker containers), and therefore being tied to whatever current OSs support is not doing any Python 3 users a real service.
> 
> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. The question of Python 3.4 support is something that will need further discussion (where 3.3 just plain has the writing on the wall), but I believe a removal of support not long after is reasonable, considering the 3.4 installed base is smaller than that of 2.6. 
> 
> Thoughts?
> 
> - Amber Brown, Release Owl
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/a0ca46ab/attachment.html>

From commercials24 at yahoo.de  Tue Feb 21 03:08:33 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 21 Feb 2017 11:08:33 +0100
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
References: <1487595734.4573.13.camel@yahoo.de>
 <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
Message-ID: <1487671713.4573.15.camel@yahoo.de>

Am Montag, den 20.02.2017, 18:16 -0800 schrieb Glyph Lefkowitz:
> > On Feb 20, 2017, at 5:02 AM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > any idea why this does not work?
> 
> Most likely you are being bitten by the recent change to not add '.'
> to sys.path automatically.
> 
> Does `PYTHONPATH=. trial ...` run your code as expected?
> 
> 

Yes, thanks very much. this kind of change really makes one doubt ones
abilities.

Should i write a ticket for this?



greetings


From hs at ox.cx  Tue Feb 21 03:34:05 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 21 Feb 2017 11:34:05 +0100
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <1487671713.4573.15.camel@yahoo.de>
References: <1487595734.4573.13.camel@yahoo.de>
 <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
 <1487671713.4573.15.camel@yahoo.de>
Message-ID: <E70DDC50-9E9C-4CD9-A2D6-89AA98148999@ox.cx>

>>> any idea why this does not work?
>> 
>> Most likely you are being bitten by the recent change to not add '.'
>> to sys.path automatically.
>> 
>> Does `PYTHONPATH=. trial ...` run your code as expected?
>> 
> Yes, thanks very much. this kind of change really makes one doubt ones
> abilities.
> 
> Should i write a ticket for this?

No, you should start installing your packages and  applications in dev lest packaging errors come back in prod and bite you. :)

More on that: https://hynek.me/articles/testing-packaging/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/9eeb846b/attachment.html>

From twisted-python at 2xlp.com  Tue Feb 21 09:31:10 2017
From: twisted-python at 2xlp.com (jonathan vanasco)
Date: Tue, 21 Feb 2017 11:31:10 -0500
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=
 -bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>

Dropping 3.3 makes sense, as does deprecating 3.4

The only thing I suggest/request is a webpage (and possibly txtfile in the source) that lists the supported Python versions.  When people runs into issues, finding this info quickly is just so useful.

e.g.
	Version			Python2			Python3
	Twisted 17.3  	2.x+				3.x+
	Twisted 17.1  	2.x+				3.x+

I helped build the first version of a similar grid for sqlalchemy - http://www.sqlalchemy.org/download.html

Mike rewrote most of it over time, but the concept is the same -- as part of the build/deploy process, the grid is automatically generated by querying PyPI for the raw data ( https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default )


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/00f8627b/attachment-0001.html>

From dcurtis at savioke.com  Tue Feb 21 10:28:27 2017
From: dcurtis at savioke.com (Dave Curtis)
Date: Tue, 21 Feb 2017 09:28:27 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04 alternatives
Message-ID: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>

Hi, so for my first post to the list I am going to ask a somewhat lame
question.  Apologies if this is not the right list -- clues welcome.

I am doing a deploy of a server written in Python3 on Ubuntu 14.04.  (14.04
for various reasons that are uninteresting to the list but DevOps has
good/historical/hysterical reasons...)

So my problem is that while my protocol stack spins up very nicely and
trivially easy using the twistd daemon, the standard python3-twisted
package for 14.04 is waaaay behind and doesn't include twistd (!), and I
haven't found a good backport.  I'd also like to avoid doing things that
make life hard for DevOps, such as pip3 installing and risking a package
manager fight.

So some options:
- Is there a reliable backport of the python3-twisted package for 14.04?
Google is failing me on that one.
- All I need is the most basic twistd functionality.  Perhaps I should spin
up my own by snarfing the code out of the twisted source repo.  I can
package this with my stuff temporarily and get on with life.  Clues to the
relevant parts of the repo welcome, I haven't poked around much in Twisted
sources so need a road map.
- Perhaps I should create my own backport for Ubuntu 14.04 of the current
python3-twisted .deb.  (This is probably not the right list to ask, but I'm
happy to dereference a pointer.)

This is a short-term problem for me, we are transitioning to 16.04 soon,
but the process is driven by other parts of the software stack. So I don't
want to over-invest.  I'm looking for a reasonable band-aid.

Thanks!
-dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/143ecddc/attachment.html>

From glyph at twistedmatrix.com  Tue Feb 21 13:46:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Feb 2017 12:46:59 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV= -bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>
Message-ID: <45FFE2EE-A914-4E84-8C57-EA9CBC7CFFA8@twistedmatrix.com>

> On Feb 21, 2017, at 8:31 AM, jonathan vanasco <twisted-python at 2xlp.com> wrote:
> 
> Dropping 3.3 makes sense, as does deprecating 3.4
> 
> The only thing I suggest/request is a webpage (and possibly txtfile in the source) that lists the supported Python versions.  When people runs into issues, finding this info quickly is just so useful.
> 
> e.g.
> 	Version			Python2			Python3
> 	Twisted 17.3  	2.x+				3.x+
> 	Twisted 17.1  	2.x+				3.x+
> 
> I helped build the first version of a similar grid for sqlalchemy - http://www.sqlalchemy.org/download.html <http://www.sqlalchemy.org/download.html>
> 
> Mike rewrote most of it over time, but the concept is the same -- as part of the build/deploy process, the grid is automatically generated by querying PyPI for the raw data ( https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default <https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default> )

This kinda seems like a separate issue.  If you want to build the same code for Twisted, we can probably find a place to run it, though - this does look like useful information :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170221/a20a08bf/attachment.html>

From glyph at twistedmatrix.com  Wed Feb 22 04:12:26 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 22 Feb 2017 03:12:26 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
Message-ID: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>


> On Feb 21, 2017, at 9:28 AM, Dave Curtis <dcurtis at savioke.com> wrote:
> 
> Hi, so for my first post to the list I am going to ask a somewhat lame question.  Apologies if this is not the right list -- clues welcome.

This is totally the right list.  All discussion of Twisted is welcome!

> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.

The general solution to this problem is "don't use the system Python environment to deploy your applications".

This is what virtualenv is for.

> So some options:
> - Is there a reliable backport of the python3-twisted package for 14.04?  Google is failing me on that one.
> [...]
> - Perhaps I should create my own backport for Ubuntu 14.04 of the current python3-twisted .deb.  (This is probably not the right list to ask, but I'm happy to dereference a pointer.)

Both of these options are bad.  Installing or creating a backport will break any system tools that depend on the python3-twisted package.  This is better than `sudo pip3 install`, but only a little.

> - All I need is the most basic twistd functionality.  Perhaps I should spin up my own by snarfing the code out of the twisted source repo.  I can package this with my stuff temporarily and get on with life.  Clues to the relevant parts of the repo welcome, I haven't poked around much in Twisted sources so need a road map.

If you have the ability to ship parts of the Twisted stack, there's a tool that can automate the "snarfing": pip :-).

> This is a short-term problem for me, we are transitioning to 16.04 soon, but the process is driven by other parts of the software stack. So I don't want to over-invest.  I'm looking for a reasonable band-aid.

16.04 will also be out of date.

I'm tempted to launch into a diatribe about namespacing, containers, and application isolation generally, but before I do - why is it that you want to use the system Python environment?  Had you just not considered the option of virtual environments?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/ba512317/attachment.html>

From commercials24 at yahoo.de  Wed Feb 22 04:32:41 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 22 Feb 2017 12:32:41 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <1487763161.4573.34.camel@yahoo.de>

i could be totally wrong, and please correct me if i am, but try this:

target: this will give you a current twisted / python installation and
keep the packages seperate from the system ones



# 1. install a package called virtualenv and pip on your system
apt install virtualenv pip

# 2. create a directory for your project, if you dont have one already,
#    to keep it seperate from other code
mkdir yourproject

# 3. create a virtualenv for your project, -p sets the python version
#    to use and "venv" is just the directory virtualenv installs the
#    python environment to
virtualenv -p /usr/bin/python3 venv


# 4. activate that environment (your command prompt will
#    change to:  (venv)...?
source venv/bin/activate


# 5. install twisted (while still being in the same terminal window
#    and directory with your activated virtual environment
pip install twisted


now you can code as usuall and run your code with python mycode.py, try
python --version


# 6. if you want to use trial for testing run:
hash -r

#to update the path settings, because trial is installed by the system
twisted package as well and without the hash -r your env will still
find the system trial first






From p.mayers at imperial.ac.uk  Wed Feb 22 05:08:11 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 12:08:11 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>

On 22/02/17 11:12, Glyph Lefkowitz wrote:

> I'm tempted to launch into a diatribe about namespacing, containers, and
> application isolation generally, but before I do - why is it that you
> /want/ to use the system Python environment?  Had you just not
> considered the option of virtual environments?

Awesome though it is, virtualenv can be very tedious if you need to 
install hundreds of megabytes of compiler and -devel packages. System 
packages are attractive precisely because you can avoid this.

I've had to do all sorts of tedious things with containers where I spin 
up a temporary container to build a bunch of .whl files, then actually 
install them in the final container - all to avoid bloating the 
container image with the build tools.

It's a real shame that binary wheels on Linux/PyPI aren't a thing. I 
understand the reasons why, but TBH it substantially reduces the value 
of the Python ecosystem for me.

Go is looking like a more and more attractive competitor to Python, 
frankly, having sidestepped this problem entirely.


From hs at ox.cx  Wed Feb 22 05:49:47 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 13:49:47 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>


>> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
> Awesome though it is, virtualenv can be very tedious if you need to install hundreds of megabytes of compiler and -devel packages. System packages are attractive precisely because you can avoid this.

That?s why you should use a build server and not ship build environments.

> I've had to do all sorts of tedious things with containers where I spin up a temporary container to build a bunch of .whl files, then actually install them in the final container - all to avoid bloating the container image with the build tools.

I don?t see how that?s tedious since a compute does that for me.  Although I don?t see any value at wheeling them (and some packages cannot be wheeled); my CI builds a venv and puts it into a container.  There?s nothing tedious about it at all.

> It's a real shame that binary wheels on Linux/PyPI aren't a thing.

This is incorrect.

From exarkun at twistedmatrix.com  Wed Feb 22 06:06:17 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 22 Feb 2017 08:06:17 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>

On Wed, Feb 22, 2017 at 7:08 AM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

> On 22/02/17 11:12, Glyph Lefkowitz wrote:
>
> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
>>
>
> Awesome though it is, virtualenv can be very tedious if you need to
> install hundreds of megabytes of compiler and -devel packages. System
> packages are attractive precisely because you can avoid this.
>

I guess this is a big part of the motivation for Twisted itself to shed its
C extensions - to avoid 100% of these extra dependencies.  And presumably
also a big part of the motivation behind the development of support for
distributable binary wheels for Linux (which seems to have largely
succeeded at this point, though their use is not as widespread as one would
hope).


>
> I've had to do all sorts of tedious things with containers where I spin up
> a temporary container to build a bunch of .whl files, then actually install
> them in the final container - all to avoid bloating the container image
> with the build tools.
>
>
And I've been meaning to really dig in to the Nix toolchain for image
creation.  That seems like another thing that should be more widely used
(but it's hard to beat the "batteries included" tools Docker has, even if
those tools are awful).


> It's a real shame that binary wheels on Linux/PyPI aren't a thing. I
> understand the reasons why, but TBH it substantially reduces the value of
> the Python ecosystem for me.
>
>
Ah!  They are now, maybe you haven't seen them?

Check out https://github.com/pypa/manylinux and
https://github.com/pypa/python-manylinux-demo

Go is looking like a more and more attractive competitor to Python,
> frankly, having sidestepped this problem entirely.
>
>
A lot of people seem to be thinking that way.  *Personally*, with my
experience with Go (about five months solid at previous employer), I
wouldn't go anywhere near that stack.  There are plenty of *other *things
with appealing features that Python lacks which would seem to make a better
move. :)

But check out the story for binary wheels.  The state of things in Python
may not be *quite* as bad as you think.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/791c7418/attachment-0001.html>

From waterbug at pangalactic.us  Wed Feb 22 08:00:38 2017
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 22 Feb 2017 10:00:38 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>

On 02/22/2017 07:08 AM, Phil Mayers wrote:
> On 22/02/17 11:12, Glyph Lefkowitz wrote:
>
>> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
>
> Awesome though it is, virtualenv can be very tedious if you need to
> install hundreds of megabytes of compiler and -devel packages. System
> packages are attractive precisely because you can avoid this.

Have you considered the 'conda' package manager?
https://conda.io/docs/index.html

If not, and for the benefit of others (I'm amazed it's not
mentioned on this list) here is my conda rant:

TL;DR:  use conda.

IMO, conda is superior to pip/wheels.  The Python packaging
orthodoxy's story is "oh, yes, conda -- that solves a different
problem ..." which seems disingenuous to me.  Conda
was originally created by Continuum Analytics to solve the
Numpy/SciPy packaging problem(s), which it has done with
brilliant success.

Conda has its own kind of packages, but they are relatively
easy to create (I can do it, proving that anyone can ;)
both for your own packages and for PyPI packages -- see:
https://conda.io/docs/build_tutorials/pkgs.html

Conda is a system-level package manager in the sense that it
can install any package, including Python itself, and
creates its own type of 'virtual environments' with their
own Python versions (which it will install).  Conda does
a great job of keeping non-Python libraries that Python
packages depend on isolated from system libraries.  If
the version of a Python package you want to use depends
on a later version of a library that exists on your
system, conda will install the required version of the
library in the virtual environment, keeping it separate
from other versions of that library on your system.

The latest version of Twisted is available from the main
conda package repository and is well supported.  I am
developing an application with many dependencies, including
Twisted, PyQt5, pythonOCC (a massive python-wrapped C++ 3D
CAD library), and many scientific libraries, and conda is
the only Python packaging and distribution technology that
can support my app -- I would not even begin to attempt it
using pip.

I've also used conda to manage large Django applications.
After I showed conda to my sysadmins at work, they jumped
on it and now use it for all Python installations on our
servers.  They will never have to compile Python again!

I do all my development on an Ubuntu 14.04 laptop and use
conda for everything Python on my machine.

Cheers,
Steve


From p.mayers at imperial.ac.uk  Wed Feb 22 10:17:25 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:17:25 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
Message-ID: <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>

On 22/02/17 13:06, Jean-Paul Calderone wrote:

> Ah!  They are now, maybe you haven't seen them?
>
> Check out https://github.com/pypa/manylinux and
> https://github.com/pypa/python-manylinux-demo

I had not seen this. Thanks, this looks like a big leap forward.

> A lot of people seem to be thinking that way.  /Personally/, with my
> experience with Go (about five months solid at previous employer), I
> wouldn't go anywhere near that stack.  There are plenty of
> /other /things with appealing features that Python lacks which would
> seem to make a better move. :)

Very possibly!

Go as a language leaves me cold, and there are downsides to the 
one-big-binary approach. But it's undeniably easy to deploy in a 
container, and the concurrency is very attractive.

> But check out the story for binary wheels.  The state of things in
> Python may not be /quite/ as bad as you think.

Indeed, it does look like a promising improvement.


From dcurtis at savioke.com  Wed Feb 22 10:17:26 2017
From: dcurtis at savioke.com (Dave Curtis)
Date: Wed, 22 Feb 2017 09:17:26 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>

> 
>> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.
> 
> The general solution to this problem is "don't use the system Python environment to deploy your applications".
> 
> This is what virtualenv is for.
> 

Yes, well, the standard practice around here is to wrap up deliverables in a .deb so that the DevOps tools can do automated deploys.  I suppose it is possible to wrap up a venv in a .deb, but I?ve never done looked into it. Pointers welcome.

>> So some options:
>> - Is there a reliable backport of the python3-twisted package for 14.04?  Google is failing me on that one.
>> [...]
>> - Perhaps I should create my own backport for Ubuntu 14.04 of the current python3-twisted .deb.  (This is probably not the right list to ask, but I'm happy to dereference a pointer.)
> 
> Both of these options are bad.  Installing or creating a backport will break any system tools that depend on the python3-twisted package.  This is better than `sudo pip3 install`, but only a little.
> 
>> - All I need is the most basic twistd functionality.  Perhaps I should spin up my own by snarfing the code out of the twisted source repo.  I can package this with my stuff temporarily and get on with life.  Clues to the relevant parts of the repo welcome, I haven't poked around much in Twisted sources so need a road map.
> 
> If you have the ability to ship parts of the Twisted stack, there's a tool that can automate the "snarfing": pip :-).
> 
>> This is a short-term problem for me, we are transitioning to 16.04 soon, but the process is driven by other parts of the software stack. So I don't want to over-invest.  I'm looking for a reasonable band-aid.
> 
> 16.04 will also be out of date.

So? If you would like to dive into reasons? we do robots.  We use ROS, the Robot Operating System.  LTS versions of ROS are tied to LTS versions of Ubuntu.  Transitioning from one LTS version of ROS to another is, as they say, ?non-trivial?.  Being on a stale version of Ubuntu is part of the price for using ROS, because ROS just can?t move that fast.  No one likes it.  A lot of people (in many ROS-based companies, and the OSRF) are working to improve the situation.  That doesn?t help me this week.  Now, why are the DevOps people here so conservative?  Because doing a remote update on a robot in the field, and having it fail, has two impacts: 1) we stop billing the customer until the robot is running again, and 2) we put someone on an airplane to make the robot run again.  

> 
> I'm tempted to launch into a diatribe about namespacing, containers, and application isolation generally, but before I do - why is it that you want to use the system Python environment?  Had you just not considered the option of virtual environments?

Legitimate questions.  Fitting into the existing deployment flow, and ummm? can I wrap a venv in a .deb? ?Cuz that would be cool.

Another poster mentioned Anaconda?. I?m not a huge fan.  I am using it extensively as part of the Udacity self-driving car class, and I will admit that it would be nearly impossible for Udacity to deploy the project environment any other way.  But I see Anaconda as a very heavy-weight solution for projects requiring a huge infrastructure, and my problem is no where near large enough that the benefits justifies the cost.  A simple venv is more in line.

> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/56484f8f/attachment.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 10:20:16 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:20:16 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
Message-ID: <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>

On 22/02/17 12:49, Hynek Schlawack wrote:

> That?s why you should use a build server and not ship build
> environments.

Which we do.

> I don?t see how that?s tedious since a compute does that for me.
> Although I don?t see any value at wheeling them (and some packages
> cannot be wheeled); my CI builds a venv and puts it into a container.
> There?s nothing tedious about it at all.

I find the idea of running throwaway environments to generate a big blob 
of tarball'd python+libs, then copying said tarball to actual 
containers, a rather retrograde step by comparison with established 
package/build infrastructure tools.

>> It's a real shame that binary wheels on Linux/PyPI aren't a thing.
>
> This is incorrect

Apparently so. The info JP provided was very useful.


From p.mayers at imperial.ac.uk  Wed Feb 22 10:23:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:23:08 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
Message-ID: <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>

On 22/02/17 15:00, Steve Waterbury wrote:

> Have you considered the 'conda' package manager?

I've never come across it. It looks too big for me to give a quick 
opinion on, but I'll bear it in mind. Thanks for the pointer.


From waterbug at pangalactic.us  Wed Feb 22 10:35:40 2017
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 22 Feb 2017 12:35:40 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
Message-ID: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>

On 02/22/2017 12:23 PM, Phil Mayers wrote:
> On 22/02/17 15:00, Steve Waterbury wrote:
>
>> Have you considered the 'conda' package manager?
>
> I've never come across it. It looks too big for me to give a quick
> opinion on, but I'll bear it in mind. Thanks for the pointer.

"Anaconda" is huge; conda is not.  You can get conda
by installing "Miniconda":

https://conda.io/miniconda.html

The 64-bit bash Miniconda installer for Linux, for example, is
about 28 MB, and includes just Python (either 2 or 3) with
conda and its dependencies, and includes pip in case you want
to use a package that is not yet available in the conda
package channels -- 'pip install' works in a conda environment.

(The only reason to install Anaconda, which includes over 100
scientific Python packages, is if you are developing an app
that requires a lot of Numpy or SciPy libraries.)

Steve


From hs at ox.cx  Wed Feb 22 10:38:20 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 18:38:20 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>
Message-ID: <B3E1E7D4-7FC0-44D2-A53D-4D25E8AE41EC@ox.cx>


>>> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.
>> 
>> The general solution to this problem is "don't use the system Python environment to deploy your applications".
>> 
>> This is what virtualenv is for.
> 
> Yes, well, the standard practice around here is to wrap up deliverables in a .deb so that the DevOps tools can do automated deploys.  I suppose it is possible to wrap up a venv in a .deb, but I?ve never done looked into it. Pointers welcome.

https://github.com/spotify/dh-virtualenv <https://github.com/spotify/dh-virtualenv> and https://hynek.me/articles/python-app-deployment-with-native-packages/ <https://hynek.me/articles/python-app-deployment-with-native-packages/> come to mind.

N.B. the article is by me and I?m currently migrating to Docker/Nomad.  But it served us very well for many years.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/79d99202/attachment.html>

From hs at ox.cx  Wed Feb 22 10:42:43 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 18:42:43 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
Message-ID: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>

>> I don?t see how that?s tedious since a compute does that for me.
>> Although I don?t see any value at wheeling them (and some packages
>> cannot be wheeled); my CI builds a venv and puts it into a container.
>> There?s nothing tedious about it at all.
> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.

I have to disagree here:  I don?t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python ? as much as I?d like Go-style single binaries too ? is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.

?h

From jeff at ocjtech.us  Wed Feb 22 10:50:01 2017
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 22 Feb 2017 11:50:01 -0600
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
Message-ID: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>

On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx> wrote:

>
> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two
> or so are worth supporting.
>

Debian Jessie (which also means Raspbian Jessie, which is my primary
concern) uses Python 3.4, so I would hope that Python 3.4 support in
Twisted would not be dropped for a while.

-- 
Jeff Ollie
The majestik m??se is one of the m?ni interesting furry animals in Sweden.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/457bd15f/attachment.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 11:16:29 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 18:16:29 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
Message-ID: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>

On 22/02/17 17:42, Hynek Schlawack wrote:

> I have to disagree here:  I don?t want build tools of any kind in my
> final containers therefore I build my artifacts separately no matter
> what language.  Of course you can just build the venv on your build

Agreed, 100%. Apologies if I gave you the impression I was advocating 
otherwise.

> server without wheeling up a temporary container and then package it
> using Docker or DEB or whatever.  You should be separating building
> and running anyway so Python ? as much as I?d like Go-style single
> binaries too ? is in no way special here.  The nice thing about
> temporary containers though is that I can do all of that on my Mac.

I agree that you need to separate building and installation, and I've 
got no particular beef with using a container, chroot, throwaway VM or 
whatever works for people in doing the build phase.

(What people do with the resultant build output - and in particular 
whether there is a lot of ignoring of the hard-learned lessons of system 
package managers going on now - I will not comment on ;o)

What I was trying to say - badly, apparently - was that the system 
python *could* be attractive to someone because many dependencies may 
exist in the OS package list in suitable form, but conversely may not 
exist in PyPI in binary form for Linux.

As a very simple example: if you have a traditional (non-container) 
Linux system hosting a Python application in a virtualenv, and you 
deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you 
either need to:

1. Use no C extensions
2. Hope there's a manylinux1 binary wheel
3. Use the OS package and --system-site-packages
4. Compile the C extensions and make them available to pip

#2 seems useful now that I know about it but - correct me if I'm wrong - 
the manylinux1 permitted C dependencies are super-tiny, and would not 
permit e.g. cryptography or psycopg2?

#4 is what you are advocating for I believe? But can we agree that for 
smaller projects, that might seem like a lot of repeated work if the 
package is already available in the OS repos?

Wondering out loud, I guess it would be possible for OS-compiled python 
extensions to be somehow virtualenv or relocation-compatible. One could 
envisage something like:

virtualenv t
. t/bin/activate
pip syspkg-install python-psycopg2

...and this going off and grabbing the OS-provided dependency of that 
name, extracting it, and deploying it into the virtualenv, rather than 
the system Python.

There are doubtless all sorts of reasons that is not practical.

Anyway, to be clear - I'm not advocating using the system Python. I'm 
trying to explain why, based on the efforts we expend locally, it could 
seem attractive to smaller sites.

Cheers,
Phil


From p.mayers at imperial.ac.uk  Wed Feb 22 11:17:20 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 18:17:20 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
 <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
Message-ID: <05feca65-f6b2-61ab-0c80-c4584aa12ab6@imperial.ac.uk>

On 22/02/17 17:35, Steve Waterbury wrote:
> On 02/22/2017 12:23 PM, Phil Mayers wrote:
>> On 22/02/17 15:00, Steve Waterbury wrote:
>>
>>> Have you considered the 'conda' package manager?
>>
>> I've never come across it. It looks too big for me to give a quick
>> opinion on, but I'll bear it in mind. Thanks for the pointer.
>
> "Anaconda" is huge; conda is not.  You can get conda

I was referring to scope as opposed to size in bytes, but it's entirely 
possible I've misunderstood how it works.


From cory at lukasa.co.uk  Wed Feb 22 13:59:46 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Wed, 22 Feb 2017 20:59:46 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>


> On 22 Feb 2017, at 18:16, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?

Depends.

The permitted C dependencies *for dynamic linking* are tiny, sure. But those libraries may statically link as they please. The likely scenario for most such packages is that they statically link whatever they need. This is the approach taken by some that I ship.

Cory



From hawkowl at atleastfornow.net  Wed Feb 22 14:11:35 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Thu, 23 Feb 2017 08:11:35 +1100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
Message-ID: <CAMxb2isnwWkSpy107vRXv=s4jnN8fxWxV7AvXS0WAnkFDUC4Lg@mail.gmail.com>

Debian 9 (Stretch) is in final freeze and will become the new stable
release very soon (a month or so?). By the time we drop 3.4 support,
Stretch will be current stable, so my recommendation would be to upgrade to
Stretch when it comes available, and use the Python 3.5 it ships with.
Alternatively, you could install 3.6 through pyenv or some other source on
Jessie.

- Amber

On 23 Feb 2017 4:50 AM, "Jeffrey Ollie" <jeff at ocjtech.us> wrote:

> On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx> wrote:
>
>>
>> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two
>> or so are worth supporting.
>>
>
> Debian Jessie (which also means Raspbian Jessie, which is my primary
> concern) uses Python 3.4, so I would hope that Python 3.4 support in
> Twisted would not be dropped for a while.
>
> --
> Jeff Ollie
> The majestik m??se is one of the m?ni interesting furry animals in Sweden.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/263c4844/attachment.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 14:47:12 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 21:47:12 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>
Message-ID: <c290d000-9f56-c31e-6f02-0d0ef038d4b5@imperial.ac.uk>

On 22/02/17 20:59, Cory Benfield wrote:

> The permitted C dependencies *for dynamic linking* are tiny, sure.
> But those libraries may statically link as they please. The likely
> scenario for most such packages is that they statically link whatever
> they need. This is the approach taken by some that I ship.

Excellent point, I hadn't considered that.

Tangentially I see there's also no-manylinux and associated github/pip 
issues w.r.t. people who *do* want to build local binary wheels on a 
local PyPI server...

All in all, not a simple area.


From tommost at gmail.com  Wed Feb 22 15:09:43 2017
From: tommost at gmail.com (Tom Most)
Date: Wed, 22 Feb 2017 14:09:43 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <CAK4RBD-pCSxDZMP0FnUfAcUc2RD5Z0A5Eqrh8Q=f02qxyOs3cw@mail.gmail.com>

On Mon, Feb 20, 2017 at 1:46 PM, Amber Brown <hawkowl at atleastfornow.net>
wrote:

> As such, I would like to remove support for these Python versions. Using
> recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/)
> we can infer that Python 3.3 is on the whole uncommon, despite it being the
> default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption
> of new major versions of Python 3 (Python 3.5 was barely a year old by the
> time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the
> latest two or so are worth supporting.
>

The default in Ubuntu 14.04 is actually Python 3.4.  (12.04 shipped with
3.2, and 16.04 has 3.5.)

Due to this, I am writing new Twisted code which targets 2.7 + 3.4 right
now.  I'm not opposed to deprecating Python 3.4, though. Ubuntu 14.04 ships
with a version of Python 2.7 that lacks SNI, so I want to shift to 16.04
ASAP anyway.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170222/1d9de266/attachment.html>

From glyph at twistedmatrix.com  Thu Feb 23 01:31:58 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:31:58 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
 <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>
Message-ID: <EF7CF042-8196-41A5-ACD1-E1A4F3BCFF77@twistedmatrix.com>


> On Feb 22, 2017, at 9:17 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 22/02/17 13:06, Jean-Paul Calderone wrote:
> 
>> Ah!  They are now, maybe you haven't seen them?
>> 
>> Check out https://github.com/pypa/manylinux and
>> https://github.com/pypa/python-manylinux-demo
> 
> I had not seen this. Thanks, this looks like a big leap forward.
> 
>> A lot of people seem to be thinking that way.  /Personally/, with my
>> experience with Go (about five months solid at previous employer), I
>> wouldn't go anywhere near that stack.  There are plenty of
>> /other /things with appealing features that Python lacks which would
>> seem to make a better move. :)
> 
> Very possibly!
> 
> Go as a language leaves me cold, and there are downsides to the one-big-binary approach. But it's undeniably easy to deploy in a container, and the concurrency is very attractive.

Python is easier to deploy in a container than you might think.  Check out this three-line Dockerfile from Moshe Zadka (which, by the way, deploys Twisted...):

https://moshez.wordpress.com/2016/11/19/belt-suspenders-why-put-a-pex-file-inside-a-docker-container/ <https://moshez.wordpress.com/2016/11/19/belt-suspenders-why-put-a-pex-file-inside-a-docker-container/>

-glyph

> 
>> But check out the story for binary wheels.  The state of things in
>> Python may not be /quite/ as bad as you think.
> 
> Indeed, it does look like a promising improvement.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/8a03ce7a/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Feb 23 01:34:08 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:34:08 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
 <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
Message-ID: <4843B326-7341-4CB6-B8FD-2DD9062323DA@twistedmatrix.com>


> On Feb 22, 2017, at 9:35 AM, Steve Waterbury <waterbug at pangalactic.us> wrote:
> 
> On 02/22/2017 12:23 PM, Phil Mayers wrote:
>> On 22/02/17 15:00, Steve Waterbury wrote:
>> 
>>> Have you considered the 'conda' package manager?
>> 
>> I've never come across it. It looks too big for me to give a quick
>> opinion on, but I'll bear it in mind. Thanks for the pointer.
> 
> "Anaconda" is huge; conda is not.  You can get conda
> by installing "Miniconda":
> 
> https://conda.io/miniconda.html
> 
> The 64-bit bash Miniconda installer for Linux, for example, is
> about 28 MB, and includes just Python (either 2 or 3) with
> conda and its dependencies, and includes pip in case you want
> to use a package that is not yet available in the conda
> package channels -- 'pip install' works in a conda environment.
> 
> (The only reason to install Anaconda, which includes over 100
> scientific Python packages, is if you are developing an app
> that requires a lot of Numpy or SciPy libraries.)


It is "huge" in the sense that it is a parallel universe to your normal Linux distribution though; you need to install duplicate versions of various C libraries in multiple locations, whereas pip & virtualenv allow you the flexibility of "package everything as a static generic manylinux1 wheel for portability" or "depend on dynamically linked libraries in your operating system" depending on your deployment preferences.

-glyph

From glyph at twistedmatrix.com  Thu Feb 23 01:36:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:36:59 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
Message-ID: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>


> On Feb 22, 2017, at 9:42 AM, Hynek Schlawack <hs at ox.cx> wrote:
> 
>>> I don?t see how that?s tedious since a compute does that for me.
>>> Although I don?t see any value at wheeling them (and some packages
>>> cannot be wheeled); my CI builds a venv and puts it into a container.
>>> There?s nothing tedious about it at all.
>> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.
> 
> I have to disagree here:  I don?t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python ? as much as I?d like Go-style single binaries too ? is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.

It's worth pointing out that if you don't want a Go build toolchain in your container, you have exactly the same problem.  And a Go build toolchain (read: dependency/vendoring management toolchain) actually requires _more_ care and feeding than the analogous Python in my experience; the reason it's superficially appealing is that you can "cheat" and copy the binary over from a development environment, but this is not a robust CI solution.

Go's build toolchain has many features worth envying but most of its advantages have to do with deployments _outside_ of containers, where you have to ship to customer environments with fraught and unknown system configurations.  If you have any level of control over your deployment target, Go and, say, Python with PEX are ~equivalent.

-glyph

From glyph at twistedmatrix.com  Thu Feb 23 02:11:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 01:11:00 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>


> On Feb 22, 2017, at 10:16 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 22/02/17 17:42, Hynek Schlawack wrote:
> 
>> I have to disagree here:  I don?t want build tools of any kind in my
>> final containers therefore I build my artifacts separately no matter
>> what language.  Of course you can just build the venv on your build
> 
> Agreed, 100%. Apologies if I gave you the impression I was advocating otherwise.
> 
>> server without wheeling up a temporary container and then package it
>> using Docker or DEB or whatever.  You should be separating building
>> and running anyway so Python ? as much as I?d like Go-style single
>> binaries too ? is in no way special here.  The nice thing about
>> temporary containers though is that I can do all of that on my Mac.
> 
> I agree that you need to separate building and installation, and I've got no particular beef with using a container, chroot, throwaway VM or whatever works for people in doing the build phase.
> 
> (What people do with the resultant build output - and in particular whether there is a lot of ignoring of the hard-learned lessons of system package managers going on now - I will not comment on ;o)
> 
> What I was trying to say - badly, apparently - was that the system python *could* be attractive to someone because many dependencies may exist in the OS package list in suitable form, but conversely may not exist in PyPI in binary form for Linux.

Yes, and building these binary artifacts is often harder than some people (cough, alpine, cough) seem to think.  But there are better ways to square this circle than restricting yourself to the versions of python libraries that happen to be available in your distro.

> As a very simple example: if you have a traditional (non-container) Linux system hosting a Python application in a virtualenv, and you deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you either need to:
> 
> 1. Use no C extensions
> 2. Hope there's a manylinux1 binary wheel
> 3. Use the OS package and --system-site-packages
> 4. Compile the C extensions and make them available to pip
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?

Cory already pointed this out tangentially, but I should emphasize: 'cryptography' and 'psycopg2' are things that you depend on at the Python level.  The things you depend on at the C level are libssl, libcrypto, and libpq.  If you want to build a manylinux wheel, you need to take this into account and statically link those C dependencies, which some projects are beginning to do.  (Cryptography _could_ do this today, they already have the infrastructure for doing it on macOS and Windows, the reason they're not shipping manylinux1 wheels right now has to do with the political implications of auto-shipping a second copy of openssl to Linux distros that expect to manage security upgrades centrally).

> #4 is what you are advocating for I believe? But can we agree that for smaller projects, that might seem like a lot of repeated work if the package is already available in the OS 

If you're going to do #4 with dh_virtualenv, your .deb can depend on the relevant packages that contain the relevant C libraries, and build linux wheels, which are vendor-specific and can dynamically link to whatever you want (i.e. not manylinux wheels, which are vendor-neutral and must statically link everything).  Manylinux wheels are required for uploading to PyPI, where you don't know who may be downloading - on your own infrastructure, where you are shipping inside an artifact (like a .deb) that specifically has metadata describing its dependencies, "linux" wheels are fine.  Alone, hanging around on PyPI as .whl files rather than as .debs in your infrastructure, they'd be mystery meat, but that is not the case if they have proper dependency metadata.

It might seem weird to use Python-specific tooling and per-application vendoring for Python dependencies, and yet use distro-global dynamic linking for C dependencies.  But, this is actually a perfectly cromulent strategy, and I think this bears a more in-depth explanation.

C, and particularly the ecosystem of weird dynamic linker ceremony around C, has an extremely robust side-by-side installation ecosystem, which distros leverage to great effect.  For example, on the Ubuntu machine sitting next to me as I write this, I have libasan0 (4.8.5) libasan1 (4.9.4) libasan2 (5.4.1) *and* libasan3 (6.2.0) installed, and this isn't even a computer with a particularly significant amount of stuff going on!  Nothing ever breaks and loads the wrong libasan.N.

Python, by contrast, tried to do this in a C-ish way, but that attempt resulted in this mess: https://packaging.python.org/multi_version_install/ <https://packaging.python.org/multi_version_install/>, which almost nobody uses.  Right at the top of that document, "For many use cases, virtual environments address this need without the complication ...".

Even if you are 100%, completely bought into a distro-style way of life, no containers at all, everything has to be in a system package to get installed, virtualenvs still make more sense than trying to sync up the whole system's Python library versions.

The reason nobody ever went back and tried to do multi-version installs "right" with Python is that the Python and C library ecosystems are fundamentally different in a bunch of important ways.  For one thing, Python libraries have no such thing as an enforceable ABI, so coupling between libraries and applications is much closer than in C.  For another, no SOVERSION.  Also, many small C utilities (the ones that would be some of the smaller entries in requirements.txt in a Python app) are vendored in or statically linked in applications, so the "dependency management" happens prior to the container build, in the source repo of the upstream, where it is hidden.  Python dependencies often have a far higher rate of churn than C dependencies because of the ease of development, which means both more divergence between required versions for different applications, and more benefits to being up-to-date for the applications that do rev faster.

Finally, the build process for Python packages is much simpler, since they're usually treated as archives of files that move around, rather than elaborate pre-build steps that are often required for C libraries to make sure everything is smashed into the .so at build time.

So think of your Python libraries as "vendored in" to your package for these reasons, rather than depended upon in the OS, and then participate in the broader distro (i.e. "C") ecosystem by building wheels that dynamically link whatever distro-level dependencies they need to.

> Wondering out loud, I guess it would be possible for OS-compiled python extensions to be somehow virtualenv or relocation-compatible. One could envisage something like:
> 
> virtualenv t
> . t/bin/activate
> pip syspkg-install python-psycopg2
> 
> ...and this going off and grabbing the OS-provided dependency of that name, extracting it, and deploying it into the virtualenv, rather than the system Python.

This is sort of what dh_virtualenv is.  It doesn't set up the mapping for you automatically, but you can pretty quickly figure out that python-psycopg2 build-depends: libpq-dev.

> There are doubtless all sorts of reasons that is not practical.

The main thing is just that you have to decide on a standard format for distro-specific metadata, and then go encode it everywhere.  I'm pretty sure that distutils-sig would be open to codifying such an extension to the list of standardized metadata fields, so that tools can use it.

> Anyway, to be clear - I'm not advocating using the system Python. I'm trying to explain why, based on the efforts we expend locally, it could seem attractive to smaller sites.

To be even clearer, using the system python is fine - it's using the global python environment that has the most significant problem.

(Although, of course, the "system python" is probably CPython, and in most cases you want to be using PyPy, right?  So yeah don't use the system Python.)

I hope this explanation was helpful to those of you deploying with distro tooling!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/39b815b7/attachment-0001.html>

From glyph at twistedmatrix.com  Thu Feb 23 02:30:01 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 01:30:01 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
Message-ID: <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>


> On Feb 22, 2017, at 9:50 AM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
> 
> On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> 
> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two or so are worth supporting.
> 
> Debian Jessie (which also means Raspbian Jessie, which is my primary concern) uses Python 3.4, so I would hope that Python 3.4 support in Twisted would not be dropped for a while.

Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/782aaa10/attachment.html>

From hs at ox.cx  Thu Feb 23 03:27:22 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 23 Feb 2017 11:27:22 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
Message-ID: <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>

>>>> I don?t see how that?s tedious since a compute does that for me.
>>>> Although I don?t see any value at wheeling them (and some packages
>>>> cannot be wheeled); my CI builds a venv and puts it into a container.
>>>> There?s nothing tedious about it at all.
>>> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.
>> 
>> I have to disagree here:  I don?t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python ? as much as I?d like Go-style single binaries too ? is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.
> 
> It's worth pointing out that if you don't want a Go build toolchain in your container, you have exactly the same problem.  

I thought I pointed that out in my very first sentence. :D

What I don't quite understand is how people can be in love with Go?s static linking but complaining about Virtualenvs in deployments.   Unwieldy as virtualenvs are: *for Python code* they are exactly that: statically linked build artifacts.  The principles are very similar, the execution is arguably better for Go.

From hs at ox.cx  Thu Feb 23 03:37:02 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 23 Feb 2017 11:37:02 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>

> As a very simple example: if you have a traditional (non-container) Linux system hosting a Python application in a virtualenv, and you deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you either need to:
> 
> 1. Use no C extensions
> 2. Hope there's a manylinux1 binary wheel
> 3. Use the OS package and --system-site-packages
> 4. Compile the C extensions and make them available to pip
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?
> 
> #4 is what you are advocating for I believe? But can we agree that for smaller projects, that might seem like a lot of repeated work if the package is already available in the OS repos?

You always say ?repeated work? but I hear ?small Python script?. :)  We have a few Python projects (not written/maintained by me :)) that did rely on system packages ?because it?s easier?.  Guess what!  The other day Ubuntu upgraded PyCrypto (needed Ubuntu Trusty?s ancient Paramiko) under our butts, introduced a regressing and everything blew up: https://www.ubuntu.com/usn/usn-3199-2/ <https://www.ubuntu.com/usn/usn-3199-2/> . That particular project is a virtualenv now too.

The Python build chain got so good on Linux by now that I really don?t even think about C extensions anymore.  Windows is a different story entirely of course. :|

> I'm trying to explain why, based on the efforts we expend locally, it could seem attractive to smaller sites.

Honestly, in the years I?ve been running Python services of different sizes, I have found that distro-provided system packages ? unless you are writing software *for* a distribution ? are loaded with so many downsides that they?re almost never worth it.  They?re a shortcut and shortcuts usually bite back *eventually*.

?h
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/7389631e/attachment.html>

From p.mayers at imperial.ac.uk  Thu Feb 23 03:51:15 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 23 Feb 2017 10:51:15 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
Message-ID: <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>

On 23/02/17 10:27, Hynek Schlawack wrote:

> What I don't quite understand is how people can be in love with Go?s
> static linking but complaining about Virtualenvs in deployments.
> Unwieldy as virtualenvs are: *for Python code* they are exactly that:
> statically linked build artifacts.  The principles are very similar,
> the execution is arguably better for Go.

Well, for one thing, Python virtualenv are problematic w.r.t. being 
relocatable. That alone makes them harder to use than a Go binary.

But honestly I think we're talking at cross purposes. I'm not 
complaining about virtualenv. We use them quite successfully.

I'm trying to point out that *some* might find the system Python 
attractive because they can use OS-supplied python packages in lieu of 
the effort of setting up a binary build infrastructure.

But I'm clearly not getting my point across, so I'm going to stop now.


From jamesbroadhead at gmail.com  Thu Feb 23 05:04:35 2017
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Thu, 23 Feb 2017 12:04:35 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
Message-ID: <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>

On 23 February 2017 at 08:36, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:
>
>
> Go's build toolchain has many features worth envying but most of its
> advantages have to do with deployments _outside_ of containers, where you
> have to ship to customer environments with fraught and unknown system
> configurations.  If you have any level of control over your deployment
> target, Go and, say, Python with PEX are ~equivalent .


I was going to chime in about pex earlier - but since you need to provide
your own interpreter, I didn't think it solved his whole issue.

Otherwise, pex is a great format for deploying python easily.
At Twitter, we deployed the (Twisted) TweetDeck API using it for years,
with a ton of dependencies, both c-libs and pure python.

Really nice to be able to produce a deployable artefact, which can be
hashed & stored for re-deploy later if needed (and ideally
integration-tested & staged by passing different args on the cli).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/54c82dea/attachment.html>

From p.mayers at imperial.ac.uk  Thu Feb 23 05:12:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 23 Feb 2017 12:12:08 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
Message-ID: <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>

On 23/02/17 09:11, Glyph Lefkowitz wrote:

> Yes, and building these binary artifacts is often harder than some
> people (cough, alpine, cough) seem to think.  But there are better ways
> to square this circle than restricting yourself to the versions of
> /python/ libraries that happen to be available in your distro.

I don't disagree. I'm not defending the practice. But it is *clearly* a 
thing people do, and understanding the reasons is, IMO, important.

> Windows, the reason they're not shipping manylinux1 wheels right now has
> to do with the political implications of auto-shipping a second copy of
> openssl to Linux distros that expect to manage security upgrades centrally).

Understandable. I'm sure anyone who was around at the time remembers the 
zlib fiasco.

> It might seem weird to use Python-specific tooling and per-application
> vendoring for Python dependencies, and yet use distro-global dynamic
> linking for C dependencies.  But, this is actually a perfectly cromulent
> strategy, and I think this bears a more in-depth explanation.

It's not at all weird. It's exactly what we do, and I agree with your 
rationale.


From glyph at twistedmatrix.com  Thu Feb 23 15:24:06 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:06 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
Message-ID: <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>


> On Feb 23, 2017, at 2:51 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 23/02/17 10:27, Hynek Schlawack wrote:
> 
>> What I don't quite understand is how people can be in love with Go?s
>> static linking but complaining about Virtualenvs in deployments.
>> Unwieldy as virtualenvs are: *for Python code* they are exactly that:
>> statically linked build artifacts.  The principles are very similar,
>> the execution is arguably better for Go.
> 
> Well, for one thing, Python virtualenv are problematic w.r.t. being relocatable. That alone makes them harder to use than a Go binary.

Yeah, this is the big issue.  Hence: pex ;-).  Or, 'pile of wheels' and 'venv on the fly (without dev tools)' as the installation mechanism on the target environment.

> But honestly I think we're talking at cross purposes. I'm not complaining about virtualenv. We use them quite successfully.

I think this has been a super useful discussion, not at cross purposes at all!  There's been a little bit of back-and-forth and repeating certain things, but not useless.

> I'm trying to point out that *some* might find the system Python attractive because they can use OS-supplied python packages in lieu of the effort of setting up a binary build infrastructure.

So, I think everyone has a different perspective here; Hynek seems to be saying "all containers all the time" ;-).  But from my perspective, linux distros provide a super useful service by providing a gigantic integrated build environment for TONS of C code.  Avoiding the time and cost associated with setting up, i.e., an ImageMagick dev environment is _WELL_ worth the complexity of distro packages.  Multiply this out by dozens of dependencies that a large application or site ends up needing, and distro packaging pays for itself many times over.

However, avoiding having python-dev and a C compiler installed in your build environment seems like a bit of a fool's errand to me.  It's superficially appealing, but I think that our guidance to most people should be "always have a build environment so you can build extension modules, any non-trivial project will eventually need a few".  The work required to have a _python_ dev environment is orders of magnitude below, say, OpenSSL or ImageMagick or Avahi or (et cetera).

> But I'm clearly not getting my point across, so I'm going to stop now.

Really I think that this has been a great exchange of ideas, and though we're veering off topic a little bit, I want there to be more discussion among systems operators how Twisted can and should be deployed, operationalized, monitored, etc.  Twisted even has weird little edge-cases of its own (like the plugin system) which can sometimes complicate things.  So by all means please don't feel like you need to stop sharing your view.

-glyph



From glyph at twistedmatrix.com  Thu Feb 23 15:24:07 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:07 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
 <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>
Message-ID: <73402B55-C204-48D9-B352-80BE16C3BFE2@twistedmatrix.com>


> On Feb 23, 2017, at 4:12 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 23/02/17 09:11, Glyph Lefkowitz wrote:
> 
>> Yes, and building these binary artifacts is often harder than some
>> people (cough, alpine, cough) seem to think.  But there are better ways
>> to square this circle than restricting yourself to the versions of
>> /python/ libraries that happen to be available in your distro.
> 
> I don't disagree. I'm not defending the practice. But it is *clearly* a thing people do, and understanding the reasons is, IMO, important.

Oh, absolutely.  What I'm driving at here - as I said perhaps more clearly in the other message I just sent - is that there are really good reasons to use distro infrastructure (C build toolchain complexity in large, critical dependencies) and not-so-good reasons (there just happen to be preinstalled python packages you could, easily, with zero build configuration, pip install) and the way that we give guidance to those folks should be informed by that.

>> Windows, the reason they're not shipping manylinux1 wheels right now has
>> to do with the political implications of auto-shipping a second copy of
>> openssl to Linux distros that expect to manage security upgrades centrally).
> 
> Understandable. I'm sure anyone who was around at the time remembers the zlib fiasco.

I remember enough zlib fiascos that I am not even sure which one you're referring to :).

>> It might seem weird to use Python-specific tooling and per-application
>> vendoring for Python dependencies, and yet use distro-global dynamic
>> linking for C dependencies.  But, this is actually a perfectly cromulent
>> strategy, and I think this bears a more in-depth explanation.
> 
> It's not at all weird. It's exactly what we do, and I agree with your rationale.

Cool.  Glad to hear that this is being invented in parallel in various places :).

From glyph at twistedmatrix.com  Thu Feb 23 15:24:08 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:08 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>
Message-ID: <E65DF3CE-B2DB-4AB9-8E51-5CB9423A369B@twistedmatrix.com>


> On Feb 23, 2017, at 4:04 AM, James Broadhead <jamesbroadhead at gmail.com> wrote:
> 
> On 23 February 2017 at 08:36, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Go's build toolchain has many features worth envying but most of its advantages have to do with deployments _outside_ of containers, where you have to ship to customer environments with fraught and unknown system configurations.  If you have any level of control over your deployment target, Go and, say, Python with PEX are ~equivalent .
> 
> I was going to chime in about pex earlier - but since you need to provide your own interpreter, I didn't think it solved his whole issue.

Fully static binaries / integrated interpreters would be a good target for build tooling to hit, but I do think that (especially if you know your deployment platform) relying on _nothing_ but a Python interpreter, pex in any specific Linux environment is probably doable.

> Otherwise, pex is a great format for deploying python easily. 

Yep.

> At Twitter, we deployed the (Twisted) TweetDeck API using it for years, with a ton of dependencies, both c-libs and pure python.

This is good to know!

> Really nice to be able to produce a deployable artefact, which can be hashed & stored for re-deploy later if needed (and ideally integration-tested & staged by passing different args on the cli). 

I originally felt like the lack of an interpreter made it useless, and I think I was very much mistaken.  Moshe has been showing me all the problems that pex can address, and I'm slowly starting to adopt it in my own deployments.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170223/3990e33b/attachment.html>

From hs at ox.cx  Fri Feb 24 03:25:10 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 24 Feb 2017 11:25:10 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
Message-ID: <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>

> 
>> I'm trying to point out that *some* might find the system Python attractive because they can use OS-supplied python packages in lieu of the effort of setting up a binary build infrastructure.
> 
> So, I think everyone has a different perspective here; Hynek seems to be saying "all containers all the time" ;-).  But from my perspective, linux distros provide a super useful service by providing a gigantic integrated build environment for TONS of C code.  Avoiding the time and cost associated with setting up, i.e., an ImageMagick dev environment is _WELL_ worth the complexity of distro packages.  Multiply this out by dozens of dependencies that a large application or site ends up needing, and distro packaging pays for itself many times over.

I?m not sure what you mean by me meaning ?all containers all the time? I feel I should rephrase my point:

- You should statically link your Python application so you have always full control over your deployments.
- Don?t ship build tools to prod servers.

The way we can achieve that is by building virtualenvs on build servers.  *How* you get those virtualenvs to the deployments target I don?t care.  Whether you pex them or not, I don?t care either?.  I?ve used .debs with great success in the past and I?m using Docker containers now (and so far we?re not out of business :)).

I consider Linux distributions very nice build environments for my own software. :)  And there?s thing we totally don?t compile ourselves like OpenSSL.  It just doesn?t make any goddam sense to rely on the limited and outdated offer of Python modules from your distribution.  Even if they don?t upgrade them under your butt and introduce regressions.

?h

? For me apps always go to the same location so relocability is not an issue.  Contrary I?m not a super fan of having one opaque blob on server; the transparent structure of a virtualenv is something I learned to appreciate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170224/6527025d/attachment.html>

From tobias.oberstein at crossbario.com  Fri Feb 24 03:25:50 2017
From: tobias.oberstein at crossbario.com (Tobias Oberstein)
Date: Fri, 24 Feb 2017 11:25:50 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>
Message-ID: <cf18a4b4-06f5-6999-8546-b5cddf93ec3b@crossbario.com>

> Honestly, in the years I?ve been running Python services of different sizes, I have found that distro-provided system packages ? unless you are writing software *for* a distribution ? are loaded with so many downsides that they?re almost never worth it.  They?re a shortcut and shortcuts usually bite back *eventually*.

Absolutely.

Distro Python module packages are useless to dangerous most of the time.

Eg Debian jessie is shipping Autobahn in a >3 years old version (0.5.14).

 From my perspective, Debian is hurting Autobahn's users this way - but 
we (upstream) cannot stop them distributing old outdated artifacts.

The whole idea of having a "system wide" Python installation is 
technically wrong and bound to fail IMO.

FWIW, I am in the Go/Rust camp: shipping single executables that are 
statically linked down to and including OpenSSL _and_ the C/C++ stdlibs.

It's just awesome to "scp etcd" from a CentOS 6 to a Ubuntu 16 or 
whatever and it "just works".

I have tried different approaches to get there with larger Python 
projects, but haven't found the equivalent to Go/Rust yet.

Apart from that: Ubuntu has broken new ground with snapcraft - this is 
much better than debs .. it puts upstream into power gain. Let upstream 
talk directly to users, kicking out distro package "maintainers".

Anway, just my 2cts

/Tobias

>
> ?h
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From tommost at gmail.com  Fri Feb 24 16:29:03 2017
From: tommost at gmail.com (Tom Most)
Date: Fri, 24 Feb 2017 15:29:03 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
Message-ID: <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>

On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Is there a "pre-installed on hardware that's hard to change" issue here?
> Do Raspbian users generally upgrade to new stable releases?
>
> -g
>

There's also a substantial lag after a Debian release before the
corresponding version of Raspbian becomes generally available. Debian
Jessie was released April 2015, but Raspbian Jessie looks to have gone GA
in September[1] (though you could get it sooner by adjusting your apt
sources).

[1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/

---Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170224/6aa7d71c/attachment.html>

From glyph at twistedmatrix.com  Fri Feb 24 19:01:31 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 24 Feb 2017 18:01:31 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
Message-ID: <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>


> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com> wrote:
> 
> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?
> 
> -g
> 
> There's also a substantial lag after a Debian release before the corresponding version of Raspbian becomes generally available. Debian Jessie was released April 2015, but Raspbian Jessie looks to have gone GA in September[1] (though you could get it sooner by adjusting your apt sources).
> 
> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/ <https://www.raspberrypi.org/blog/raspbian-jessie-is-here/>

So Jesse (== CPython 3.4) is still what's current for Raspbian users?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170224/b6c0cc61/attachment.html>

From jamesbroadhead at gmail.com  Sat Feb 25 02:09:21 2017
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Sat, 25 Feb 2017 09:09:21 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
Message-ID: <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>

On 24 February 2017 at 10:25, Hynek Schlawack <hs at ox.cx> wrote:
>
> ...  Contrary I?m not a super fan of having one opaque blob on server; the
> transparent structure of a virtualenv is something I learned to appreciate.
> ...
>

A zipfile containing a virtualenv (pex) isn't all that opaque -- with the
right editor plugins, you can even *cough* edit the contained source inside
one.

Back when pex was a lot younger, this was handy for quick debugging as we
were migrating from source-in-venvs-on-bare-metal-chroots to
pexed-in-mesos-containers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/f1066605/attachment.html>

From hs at ox.cx  Sat Feb 25 02:19:09 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 25 Feb 2017 10:19:09 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
Message-ID: <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>

> ...  Contrary I?m not a super fan of having one opaque blob on server; the transparent structure of a virtualenv is something I learned to appreciate. ... 
> 
> A zipfile containing a virtualenv (pex) isn't all that opaque -- with the right editor plugins, you can even *cough* edit the contained source inside one. 
> 
> Back when pex was a lot younger, this was handy for quick debugging as we were migrating from source-in-venvs-on-bare-metal-chroots to pexed-in-mesos-containers

To be clear: I?m not trying to talk anybody out of using pex. :)  I?m just saying there?s a slight downside (+ another tool) and no tangible upsides in Docker for me so it?s not a good fit for me.

That said, I?m gonna try it out in my deb-based deployments (contrary to popular believe, you can?t/shouldn?t put *everything* into containers) because we run ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/839d4b43/attachment.html>

From clayton.daley at gmail.com  Sat Feb 25 10:03:34 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Sat, 25 Feb 2017 11:03:34 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
Message-ID: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>

Are you talking about building Docker containers on the fly?  We use Docker
extensively, but our build machine makes images that we push to Dockerhub
(private repos).  This has a lot of advantages:

   - Our images (on the hub) are effectively pinned at the version they
   were built
   - Our test and production servers (can, if we want) always get exactly
   the same image (even if we need to rebuild a server months later)
   - We test all our servers so we only have to manually pin packages
   (python or apt) if we run into regressions or other incompatibilities (i.e.
   an upgraded package that is no longer compatible with a manually pinned
   package)
   - Our build machine caches all the intermediate images (i.e. after each
   docker step).  We intentionally sequence our images to place oft-changing
   items at the end.
      - Unless I change the list of apt packages, that layer is never
      rebuilt.
      - We have an extra step that uploads *just* the requirements files
      before pip installing
      - Our last step is the app code so changes to this layer are just a
      cached layer + PUT (i.e. seconds)
      - This optimization also makes our containers super efficient to
      upgrade because we only download the changed layers

This sounds like it covers a lot of the PEX advantages plus the added
benefits of containerization.

Clayton Daley

On Sat, Feb 25, 2017 at 3:19 AM, Hynek Schlawack <hs at ox.cx> wrote:

> ...  Contrary I?m not a super fan of having one opaque blob on server; the
>> transparent structure of a virtualenv is something I learned to appreciate.
>> ...
>>
>
> A zipfile containing a virtualenv (pex) isn't all that opaque -- with the
> right editor plugins, you can even *cough* edit the contained source inside
> one.
>
> Back when pex was a lot younger, this was handy for quick debugging as we
> were migrating from source-in-venvs-on-bare-metal-chroots to
> pexed-in-mesos-containers
>
>
> To be clear: I?m not trying to talk anybody out of using pex. :)  I?m just
> saying there?s a slight downside (+ another tool) and no tangible upsides
> in Docker for me so it?s not a good fit for me.
>
> That said, I?m gonna try it out in my deb-based deployments (contrary to
> popular believe, you can?t/shouldn?t put *everything* into containers)
> because we run ZFS and apt-get + lots of files in a deb =
> omgiwannamurdersomeone.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/b37372b0/attachment-0001.html>

From glyph at twistedmatrix.com  Sat Feb 25 16:50:58 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 15:50:58 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
Message-ID: <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>


> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> Are you talking about building Docker containers on the fly?

Pretty sure Hynek has proper build-server/production separation.

> We use Docker extensively, but our build machine makes images that we push to Dockerhub (private repos).  This has a lot of advantages:
> Our images (on the hub) are effectively pinned at the version they were built
> Our test and production servers (can, if we want) always get exactly the same image (even if we need to rebuild a server months later)
> We test all our servers so we only have to manually pin packages (python or apt) if we run into regressions or other incompatibilities (i.e. an upgraded package that is no longer compatible with a manually pinned package)
> Our build machine caches all the intermediate images (i.e. after each docker step).  We intentionally sequence our images to place oft-changing items at the end.  
> Unless I change the list of apt packages, that layer is never rebuilt.
> We have an extra step that uploads *just* the requirements files before pip installing
> Our last step is the app code so changes to this layer are just a cached layer + PUT (i.e. seconds)
> This optimization also makes our containers super efficient to upgrade because we only download the changed layers
> This sounds like it covers a lot of the PEX advantages plus the added benefits of containerization.

Pex and containerization are completely orthogonal. You can use pex inside or outside of a container, and you can use a container with or without pex.

Hynek lays out a good case against pex inside containers, but the blog post from Moshe that I linked to earlier lays out a good reason to use them together.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/d072dd3d/attachment.html>

From clayton.daley at gmail.com  Sat Feb 25 16:57:40 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Sat, 25 Feb 2017 17:57:40 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
Message-ID: <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>

On Sat, Feb 25, 2017 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com>
> wrote:
>
> Are you talking about building Docker containers on the fly?
>
>
> Pretty sure Hynek has proper build-server/production separation.
>

Pretty sure Hynek can speak for himself.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/3cae1059/attachment.html>

From kebin70 at gmail.com  Sat Feb 25 17:41:03 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Sat, 25 Feb 2017 16:41:03 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
Message-ID: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>

I have a long running twisted pyqt process which occasionally throws a
Received signal 11.

I believe it's in the underlying QtWebEngineView since the twisted process
continues to run.  Whatever the reason I would like to figure out a way to
catch this and stop the reactor either in process, or by another process
monitor.  Any suggestions either twisted or otherwise would be greatly
appreciated.

Below is a bit of the stack trace dumped to /var/log/syslog

0x7fd855447a8f
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 2   0x7fd855447c74
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 3   0x7fd8555d6a82
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 4   0x7fd8556ababd
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 5   0x7fd8556af2f6
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 6   0x7fd85586e52d
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 7   0x7fd85586f511
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 8   0x7fd85570dbc3
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 9   0x7fd85570dd92
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 10  0x7fd855516c0c
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 11  0x7fd85551dacd
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 12  0x7fd85596c5d3
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 13  0x35946920c1fb
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: Received signal 11 SEGV_MAPERR
0000fbadbeef
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #0 0x7fd856d5ca2e <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #1 0x7fd856d5cdeb <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #2 0x7fd8526d3390 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #3 0x7fd858404408 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #4 0x7fd855447a8f <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #5 0x7fd855447c74 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #6 0x7fd8555d6a82 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #7 0x7fd8556ababd <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #8 0x7fd8556af2f6 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #9 0x7fd85586e52d <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #10 0x7fd85586f511 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #11 0x7fd85570dbc3 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #12 0x7fd85570dd92 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #13 0x7fd855516c0c <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #14 0x7fd85551dacd <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #15 0x7fd85596c5d3 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #16 0x35946920c1fb <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   r8: 00007fd85a2f38c0  r9:
0000000000000013 r10: 0000000000000000 r11:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:  r12: 00007fd858aa25c8 r13:
00007fd858ab91ee r14: 00007fd85a0c9848 r15:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   di: 0000000000000000  si:
0000000000000013  bp: 00007fd858ab91ee  bx:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   dx: 00007fd851e1d770  ax:
00000000fbadbeef  cx: 00007fd851b4e6fd  sp:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   ip: 00007fd858404408 efl:
0000000000010246 cgf: 0000000000000033 erf:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:  trp: 000000000000000e msk:
0000000000000000 cr2: 00000000fbadbeef
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: [end of stack trace]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/857c32f1/attachment.html>

From glyph at twistedmatrix.com  Sat Feb 25 17:57:44 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 16:57:44 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
 <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>
Message-ID: <E8D70D5A-182F-4198-865B-FB2386613008@twistedmatrix.com>


> On Feb 25, 2017, at 3:57 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> On Sat, Feb 25, 2017 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com <mailto:clayton.daley at gmail.com>> wrote:
>> 
>> Are you talking about building Docker containers on the fly?
> 
> Pretty sure Hynek has proper build-server/production separation.
> 
> Pretty sure Hynek can speak for himself. 

I didn't mean to suggest he couldn't :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170225/3538ea5a/attachment-0001.html>

From trac at twistedmatrix.com  Sun Feb 26 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Feb 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1488092719.2.2576151210906702062@twistedmatrix.com

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170226/29201ce9/attachment.html>

From hs at ox.cx  Sun Feb 26 00:08:50 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 26 Feb 2017 08:08:50 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
Message-ID: <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>


> Are you talking about building Docker containers on the fly? 

I?m a bit baffled what gave you that idea after I?ve spent days arguing for strict build/runtime separation?

> We use Docker extensively, but our build machine makes images that we push to Dockerhub (private repos).  This has a lot of advantages:
> Our images (on the hub) are effectively pinned at the version they were built
> Our test and production servers (can, if we want) always get exactly the same image (even if we need to rebuild a server months later)
> We test all our servers so we only have to manually pin packages (python or apt) if we run into regressions or other incompatibilities (i.e. an upgraded package that is no longer compatible with a manually pinned package)
> Our build machine caches all the intermediate images (i.e. after each docker step).  We intentionally sequence our images to place oft-changing items at the end.  
> Unless I change the list of apt packages, that layer is never rebuilt.
> We have an extra step that uploads *just* the requirements files before pip installing
> Our last step is the app code so changes to this layer are just a cached layer + PUT (i.e. seconds)
> This optimization also makes our containers super efficient to upgrade because we only download the changed layers
> This sounds like it covers a lot of the PEX advantages plus the added benefits of containerization.

I don?t see anything that contradicts anything that I (or glyph) have written.  At this point we were merely discussing what kind of isolated build artifact goes into the container/deb: a pex (= single file) or a vanilla venv (= directory structure).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170226/2521bc9a/attachment.html>

From glyph at twistedmatrix.com  Sun Feb 26 00:59:52 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 23:59:52 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
Message-ID: <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>


> On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> I have a long running twisted pyqt process which occasionally throws a Received signal 11.  
> 
> I believe it's in the underlying QtWebEngineView since the twisted process continues to run.  Whatever the reason I would like to figure out a way to catch this and stop the reactor either in process, or by another process monitor.  Any suggestions either twisted or otherwise would be greatly appreciated.

Presumably the QtWebEngineView is running a subprocess, then?  This is really a Qt question rather than a Twisted question, because the QtWebEngineView should be emitting some kind of signal when its rendering process crashes.  (If it doesn't I imagine you're just out of luck here and you should report a bug to the Qt developers...)

-glyph

From kebin70 at gmail.com  Sun Feb 26 12:16:09 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Sun, 26 Feb 2017 11:16:09 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
 <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
Message-ID: <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>

Thanks glyph - really appreciate all the times you've answered my questions!

QtWebEngineView is running a subprocess.

/home/ubuntu/Qt5.8.0/5.8/gcc_64/libexec/QtWebEngineProcess --type=renderer
--disable-accelerated-video-decode --disable-gpu-memory-buffer-video-frames
--enable-threaded-compositing --use-gl=desktop --disable-webrtc-hw-encoding
--primordial-pipe-token=032B94B57A61DAE34BD0F90551F9ABB6 --lang=en-US
--enable-pinch --num-raster-threads=2 --content-image-texture-target=3553

QT can sometimes be helpful, but bug resolution can take a while.

Any suggestions outside of twisted for detecting segfaults?  I'm thinking
just to monitor /var/log/syslog





On Sat, Feb 25, 2017 at 11:59 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> >
> > I have a long running twisted pyqt process which occasionally throws a
> Received signal 11.
> >
> > I believe it's in the underlying QtWebEngineView since the twisted
> process continues to run.  Whatever the reason I would like to figure out a
> way to catch this and stop the reactor either in process, or by another
> process monitor.  Any suggestions either twisted or otherwise would be
> greatly appreciated.
>
> Presumably the QtWebEngineView is running a subprocess, then?  This is
> really a Qt question rather than a Twisted question, because the
> QtWebEngineView should be emitting some kind of signal when its rendering
> process crashes.  (If it doesn't I imagine you're just out of luck here and
> you should report a bug to the Qt developers...)
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170226/2a08fab0/attachment.html>

From exarkun at twistedmatrix.com  Sun Feb 26 16:51:54 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 26 Feb 2017 18:51:54 -0500
Subject: [Twisted-Python] Test coverage requirements
Message-ID: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>

Hi,

I'm looking at some <https://codecov.io/gh/twisted/twisted/pull/509> recent
<https://codecov.io/gh/twisted/twisted/pull/432> trunk
<https://codecov.io/gh/twisted/twisted/pull/652> commits
<https://codecov.io/gh/twisted/twisted/pull/695> (also, others) that seem
to have non-trivial untested code at at ReviewProcess
<https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Thingsyourbranchorpatchmustcontain>.
I can't tell if the codecov reports are wrong or if the development process
documentation is wrong or if the commits just violate policy or (I guess)
some mix of the three.

Can anyone shed any light on this?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170226/3adb35f1/attachment.html>

From ex.vitorino at gmail.com  Sun Feb 26 18:28:44 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Mon, 27 Feb 2017 01:28:44 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <1670B171-E10F-4000-B396-503FCA63EEE2@gmail.com>


On 2017-02-26, at 23:51, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:

> I'm looking at some recent trunk commits (also, others) that seem to have non-trivial untested code at at ReviewProcess.  I can't tell if the codecov reports are wrong or if the development process documentation is wrong or if the commits just violate policy or (I guess) some mix of the three.
> 
> Can anyone shed any light on this?

Jean-Paul,

I'm the author of PR 652, one of the ones you pointed out.

Starting with https://codecov.io/gh/twisted/twisted/pull/652 and navigating to https://codecov.io/gh/twisted/twisted/pulls/652/src/src/twisted/internet/unix.py I'm not sure I understand what it is representing -- lines of code that tests did not cover, I guess. :)

However, the diff for that file in the PR, at https://github.com/twisted/twisted/pull/652/files#diff-32f19fc001798d7ea33686492428bdf2 does not touch any of the lines highlighted by the those codecov links.

Does this make any sense? (plain honest question, I'm not familiar with codecov other that using its output to guide missing test scenarios)

At some point, like I commented in https://github.com/twisted/twisted/pull/652#issuecomment-276334447, codecov tests were failing, complaining that a single non-changed line within the -3/+3 line diff boundaries wasn't being covered. I found that strange then.

One other thing I find strange is that trying to access any previous codecov test results from within that PR -- say the first run on Dec 30th -- ends up showing the same (or very similar?) report as the one you pointed out initially; in other words, complaining about lines that were not changed in any commit within that PR.

Again, I'm not aware of the details of codecov's operation, but it certainly is no longer reporting the same things it did back when the PR was being worked on. Whatever it is reporting now, at least with regards to PR 652, does not seem to match the associated diff.

Regards,
--
exvito

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/7383be4f/attachment.html>

From adi at roiban.ro  Mon Feb 27 02:06:33 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Feb 2017 09:06:33 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <CAFycZ9csLME4uZUcvt06dPx5KGRbJRXfq2qUZGZBuixZJ-7QMQ@mail.gmail.com>

On 26 February 2017 at 23:51, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> Hi,
>
> I'm looking at some recent trunk commits (also, others) that seem to have
> non-trivial untested code at at ReviewProcess.  I can't tell if the codecov
> reports are wrong or if the development process documentation is wrong or if
> the commits just violate policy or (I guess) some mix of the three.
>
> Can anyone shed any light on this?

Besise https://codecov.io/gh/twisted/twisted/pulls/509/diff, the other
PRs looks OK and with good coverage.

In terms of codecov.io coverage I am using the "diff" view as I find
it less confusing.

The strong red lines are the ones which codecov considered that were
part of the patch and were not covered.
The yellow lines are for missing branch coverage in this patch... and
they will decrease the coverage percentage.

In summary:

For PR 509 - The diff coverage is 74.39%. ... this looks bad
For PR 652 -  The diff coverage is 98.7% ... not perfect, but pretty
good as the missing lines are in the test code area :)

--------

At some point we had a commit status check for 100% diff coverage, but
I remember that it was not popular.

If we are not aiming for the ultimate quality dev process we can still
consider having a lower barer of something like 75% or 95% diff
coverage... For PR less of this value, you will see a big warning...
but people from the Twisted admin team can still commit them. Simple
(non-admin) collaborators can only merge them of the diff coverage is
above that limit.

I am for a check for 100% coverage as many times it helped me get out
of comfort zone and "forced" to write better tests  and better code
... I know that libertarians might not like being forced to do things
so I understand why the hard check was not popular.

----------

For the good PRs which were mentioned here

For https://codecov.io/gh/twisted/twisted/pulls/695/diff the only line
without a coverage is the one in which the exception is raised if the
reactor is installed twice.

For https://codecov.io/gh/twisted/twisted/pulls/652/diff the uncovered
lines are the case in which a tests is is not skipped on OSX (this is
strange ... but maybe osx coverage are no longer published) ... and
the other one is the self.fail which is expected not be be called.

I think there was a discussion about covering self.fail() calls by
extracting them into assertion helper and making sure we have tests
for those assertion helpers.... so that we can ask all changes to also
have 100% test code coverage :)

For https://codecov.io/gh/twisted/twisted/pulls/432/diff there were
some changes in formatting (some parenthesis) which were indented and
that code was not previously covered ... so now it is considered code
on which someone made a change without having the tests to cover the
changes.

-- 
Adi Roiban


From exarkun at twistedmatrix.com  Mon Feb 27 05:59:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 07:59:25 -0500
Subject: [Twisted-Python] trac spam
Message-ID: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>

Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
clear from the UI how (actually I clicked a "delete" button in the UI but
the tickets are there so I guess "delete" doesn't mean what I think).

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/06520d2d/attachment.html>

From adi at roiban.ro  Mon Feb 27 06:41:12 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Feb 2017 13:41:12 +0000
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
Message-ID: <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>

On 27 February 2017 at 12:59, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
> clear from the UI how (actually I clicked a "delete" button in the UI but
> the tickets are there so I guess "delete" doesn't mean what I think).

I have removed the first one.

After you click delete, you need to scroll and to confirm the action.

I left the other one there as an exercise :)

> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban


From exarkun at twistedmatrix.com  Mon Feb 27 06:49:45 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 08:49:45 -0500
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
 <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
Message-ID: <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>

On Mon, Feb 27, 2017 at 8:41 AM, Adi Roiban <adi at roiban.ro> wrote:

> On 27 February 2017 at 12:59, Jean-Paul Calderone
> <exarkun at twistedmatrix.com> wrote:
> > Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's
> not
> > clear from the UI how (actually I clicked a "delete" button in the UI but
> > the tickets are there so I guess "delete" doesn't mean what I think).
>
> I have removed the first one.
>
> After you click delete, you need to scroll and to confirm the action.
>
> I left the other one there as an exercise :)
>

Hm I thought I clicked the button at the bottom.  Maybe I was on the wrong
page?  Which admin page should I be on?

Jean-Paul



>
> > Jean-Paul
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/4ed7bcc0/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 12:17:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 11:17:32 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
 <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
 <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>
Message-ID: <D035E315-A760-4F65-BFEC-DACB6C5CC354@twistedmatrix.com>

In general, detecting segfaults in arbitrary processes on the system probably isn't possible.

Specifically, I looked up the docs for you ;).

Attach a handler to the QWebEngineView::renderProcessTerminated signal :).

https://doc.qt.io/qt-5/qwebengineview.html#renderProcessTerminated <https://doc.qt.io/qt-5/qwebengineview.html#renderProcessTerminated>

Hope this helps,

-glyph

> On Feb 26, 2017, at 11:16 AM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> Thanks glyph - really appreciate all the times you've answered my questions!
> 
> QtWebEngineView is running a subprocess.
> 
> /home/ubuntu/Qt5.8.0/5.8/gcc_64/libexec/QtWebEngineProcess --type=renderer --disable-accelerated-video-decode --disable-gpu-memory-buffer-video-frames --enable-threaded-compositing --use-gl=desktop --disable-webrtc-hw-encoding --primordial-pipe-token=032B94B57A61DAE34BD0F90551F9ABB6 --lang=en-US --enable-pinch --num-raster-threads=2 --content-image-texture-target=3553
> 
> QT can sometimes be helpful, but bug resolution can take a while.
> 
> Any suggestions outside of twisted for detecting segfaults?  I'm thinking just to monitor /var/log/syslog 
> 
> 
> 
> 
> 
> On Sat, Feb 25, 2017 at 11:59 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> > On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com <mailto:kebin70 at gmail.com>> wrote:
> >
> > I have a long running twisted pyqt process which occasionally throws a Received signal 11.
> >
> > I believe it's in the underlying QtWebEngineView since the twisted process continues to run.  Whatever the reason I would like to figure out a way to catch this and stop the reactor either in process, or by another process monitor.  Any suggestions either twisted or otherwise would be greatly appreciated.
> 
> Presumably the QtWebEngineView is running a subprocess, then?  This is really a Qt question rather than a Twisted question, because the QtWebEngineView should be emitting some kind of signal when its rendering process crashes.  (If it doesn't I imagine you're just out of luck here and you should report a bug to the Qt developers...)
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/e5b2e59a/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 12:54:07 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 11:54:07 -0800
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>

> On Feb 26, 2017, at 3:51 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hi,
> 
> I'm looking at some <https://codecov.io/gh/twisted/twisted/pull/509> recent <https://codecov.io/gh/twisted/twisted/pull/432> trunk <https://codecov.io/gh/twisted/twisted/pull/652> commits <https://codecov.io/gh/twisted/twisted/pull/695> (also, others) that seem to have non-trivial untested code at at ReviewProcess <https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Thingsyourbranchorpatchmustcontain>.  I can't tell if the codecov reports are wrong or if the development process documentation is wrong or if the commits just violate policy or (I guess) some mix of the three.
> 
> Can anyone shed any light on this?

Thanks, JP.  Your habit of post-hoc commit review really helps keep the process honest - I wish more folks (myself included) had more time for it!

I wasn't party to most of these changes, except for 432, where I can say based on local testing I was very clear that coverage was not in fact an issue, and codecov was misreporting it.  So I can't comment on most of them specifically.

Generally though, I can say that Codecov, while more reliable than coveralls, is unfortunately really flaky.  (Case in point, right now, clicking on all the URLs you posted here, I just see "AccessDeniedAccess Denied" followed by a long 64-bit identifier which I'm not pasting here for fear that it's some kind of github credential.)  Its general unreliability is the main reason we removed the hard coverage requirement that blocked merging.

That said, it has been improving and if it keeps improving at the rate it has been, I expect that we'd be able to put that coverage blocker back in in another 3-4 months.  Perhaps something to talk about at PyCon.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/ba74d304/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 13:33:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 12:33:16 -0800
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
 <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
 <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>
Message-ID: <B249B0E8-7413-4FEB-A355-4B922A2F5952@twistedmatrix.com>


> On Feb 27, 2017, at 5:49 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Feb 27, 2017 at 8:41 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
> On 27 February 2017 at 12:59, Jean-Paul Calderone
> <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> > Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
> > clear from the UI how (actually I clicked a "delete" button in the UI but
> > the tickets are there so I guess "delete" doesn't mean what I think).
> 
> I have removed the first one.
> 
> After you click delete, you need to scroll and to confirm the action.
> 
> I left the other one there as an exercise :)
> 
> Hm I thought I clicked the button at the bottom.  Maybe I was on the wrong page?  Which admin page should I be on?

For now, I've deleted the offending ticket.

You shouldn't be on an "admin" page, per se - if you have the relevant permissions, you should see the "delete" button on the ticket itself, and then there's a confirmation page.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/7664cbdb/attachment.html>

From mithrandi at mithrandi.net  Mon Feb 27 16:00:17 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 27 Feb 2017 23:00:17 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
Message-ID: <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>

On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> That said, it has been *improving* and if it keeps improving at the rate
> it has been, I expect that we'd be able to put that coverage blocker back
> in in another 3-4 months.  Perhaps something to talk about at PyCon.
>

I think at least one problem that we're suffering from here is our fault,
rather than Codecov's: the coverage of the test suite is not stable due to
non-determinism in the test suite. That is, the lines executed during a
test run are not the same every time due to things like ordering / timing
races / etc. This means that "changes" to coverage may show up for a
particular PReven though nothing in that PR is actually responsible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/c55c92b6/attachment.html>

From exarkun at twistedmatrix.com  Mon Feb 27 16:33:44 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 18:33:44 -0500
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
 <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
Message-ID: <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>

On Mon, Feb 27, 2017 at 6:00 PM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> That said, it has been *improving* and if it keeps improving at the rate
>> it has been, I expect that we'd be able to put that coverage blocker back
>> in in another 3-4 months.  Perhaps something to talk about at PyCon.
>>
>
> I think at least one problem that we're suffering from here is our fault,
> rather than Codecov's: the coverage of the test suite is not stable due to
> non-determinism in the test suite. That is, the lines executed during a
> test run are not the same every time due to things like ordering / timing
> races / etc. This means that "changes" to coverage may show up for a
> particular PReven though nothing in that PR is actually responsible.
>
>
Changes to Twisted code which are only sometimes covered by the test suite
sound like they would violate a 100% coverage rule.  But I guess the
experience of looking at a codecov report is so bad/confusing that it's not
surprising authors/reviewers might fail to see what's going on and fix the
non-deterministic.

Particularly for code that requires coverage measurements on multiple
platforms (ie, you basically *can't* do it locally), it seems like it would
be easier (though, to be clear, *bad*) to just forget about it and hope
everything is covered...

A tool that pointed out coverage differences between multiple runs of the
same version of the code would be a useful thing to start pointing out
where these flaws in the Twisted test suite lie, right?  And then each area
could be given deterministic test coverage instead...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/b41b4b82/attachment-0001.html>

From tommost at gmail.com  Mon Feb 27 16:38:29 2017
From: tommost at gmail.com (Tom Most)
Date: Mon, 27 Feb 2017 15:38:29 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
 <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
Message-ID: <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>

Yes, this is what my Raspbian system reports:

Python 3.4.2 (default, Oct 19 2014, 13:31:11)
[GCC 4.9.1] on linux

---Tom

On Fri, Feb 24, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com> wrote:
>
> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> Is there a "pre-installed on hardware that's hard to change" issue here?
>> Do Raspbian users generally upgrade to new stable releases?
>>
>> -g
>>
>
> There's also a substantial lag after a Debian release before the
> corresponding version of Raspbian becomes generally available. Debian
> Jessie was released April 2015, but Raspbian Jessie looks to have gone GA
> in September[1] (though you could get it sooner by adjusting your apt
> sources).
>
> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/
>
>
> So Jesse (== CPython 3.4) is still what's current for Raspbian users?
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/80c94f4f/attachment.html>

From clayton.daley at gmail.com  Mon Feb 27 17:05:48 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Mon, 27 Feb 2017 18:05:48 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
Message-ID: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>

On Sun, Feb 26, 2017 at 1:08 AM, Hynek Schlawack <hs at ox.cx> wrote:

>
> Are you talking about building Docker containers on the fly?
>
>
> I?m a bit baffled what gave you that idea after I?ve spent days arguing
> for strict build/runtime separation?
>

I was just trying to figure out where you were having this problem:

> ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone

I heard the opposite of what you meant by this comment -- that you were
deploying apt-gets + debs using docker and the combination had you wanting
to murder someone. A really sharp dev wrote our software, but did a poor
job sequencing Dockerfiles... and I had that exact same reaction.  My
question had nothing to do with build-runtime separation... just docker
optimization. On a dev (not ops) list, it didn't seem like a crazy question.

Obviously Glyph couldn't answer this question so his interjection came off
as condescendingly unhelpful.  Perhaps it's not an impression he deserves,
but he got off to a horrible start when he responded to my first ever
Twisted question (http://stackoverflow.com/questions/22896993/persisting-
data-in-a-twisted-app) without bothering to add anything (sound familiar?).

I rarely interject because I'm no developer... just an entrepreneurial
jack-of-all-trades (masters in business, bachelors in business, minor in CS
-- albeit from Carnegie Mellon) that sometimes contributes to our
partly-Twisted product.  However, you've succeeded in making my unusual
perspective feel most unwelcome... so you'll be glad to know that you're
never going to have to suffer me again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/e8ee12d8/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 17:46:11 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 16:46:11 -0800
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
 <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
 <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>
Message-ID: <DDD3859F-7AD0-4F35-9044-786A009DD308@twistedmatrix.com>


> On Feb 27, 2017, at 3:33 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Feb 27, 2017 at 6:00 PM, Tristan Seligmann <mithrandi at mithrandi.net <mailto:mithrandi at mithrandi.net>> wrote:
> On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> That said, it has been improving and if it keeps improving at the rate it has been, I expect that we'd be able to put that coverage blocker back in in another 3-4 months.  Perhaps something to talk about at PyCon.
> 
> I think at least one problem that we're suffering from here is our fault, rather than Codecov's: the coverage of the test suite is not stable due to non-determinism in the test suite. That is, the lines executed during a test run are not the same every time due to things like ordering / timing races / etc. This means that "changes" to coverage may show up for a particular PReven though nothing in that PR is actually responsible.
> 
> 
> Changes to Twisted code which are only sometimes covered by the test suite sound like they would violate a 100% coverage rule.  But I guess the experience of looking at a codecov report is so bad/confusing that it's not surprising authors/reviewers might fail to see what's going on and fix the non-deterministic.
> 
> Particularly for code that requires coverage measurements on multiple platforms (ie, you basically can't do it locally), it seems like it would be easier (though, to be clear, bad) to just forget about it and hope everything is covered...
> 
> A tool that pointed out coverage differences between multiple runs of the same version of the code would be a useful thing to start pointing out where these flaws in the Twisted test suite lie, right?  And then each area could be given deterministic test coverage instead...

While this is certainly an issue, I don't think it's the issue we're discussing here.  Unreliability of coverage is largely mitigated by the fact that the main thing we pay attention to is "patch coverage", which can be seen to fluctuate from commit to commit on a branch if the new test coverage is non-deterministic (and rarely is a PR an individual commit).  This is opposed to "coverage delta", which only looks at coverage before / coverage after and is indeed somewhat unpredictable due to old / bad tests.

So I can say when I've had to overrule codecov, it's almost never been because of flapping coverage lines outside of the patch under consideration (and the patches in consideration either have deterministic tests, or I ask the author to add them).

General improvements to build reliability often reduce coverage unreliability as well, so as we've been using Github more, which surfaces status visibility / mergeability to reviewers more, we've been fixing lots of little build-reliability issues and this problem continues to get smaller.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/2236d86e/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 17:46:57 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 16:46:57 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
 <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
 <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>
Message-ID: <D12AB87F-878C-4B77-9AA6-56E25C3BAF98@twistedmatrix.com>

Perhaps we should add a Raspbian builder if this is a platform of interest to Twisted users.  (And I do think it should be.)

Are there big / fast raspberry pi emulators so we don't need to wait for the test suite to run on such a slow / small machine?

> On Feb 27, 2017, at 3:38 PM, Tom Most <tommost at gmail.com> wrote:
> 
> Yes, this is what my Raspbian system reports:
> 
> Python 3.4.2 (default, Oct 19 2014, 13:31:11) 
> [GCC 4.9.1] on linux
> 
> ---Tom
> 
> On Fri, Feb 24, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com <mailto:tommost at gmail.com>> wrote:
>> 
>> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?
>> 
>> -g
>> 
>> There's also a substantial lag after a Debian release before the corresponding version of Raspbian becomes generally available. Debian Jessie was released April 2015, but Raspbian Jessie looks to have gone GA in September[1] (though you could get it sooner by adjusting your apt sources).
>> 
>> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/ <https://www.raspberrypi.org/blog/raspbian-jessie-is-here/>
> 
> So Jesse (== CPython 3.4) is still what's current for Raspbian users?
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/bc273168/attachment-0001.html>

From ldanielburr at me.com  Mon Feb 27 18:16:50 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 27 Feb 2017 19:16:50 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <etPan.58b4cf82.7da42065.b3f@me.com>

Hi Clayton,

On February 27, 2017 at 6:07:14 PM, Clayton Daley (clayton.daley at gmail.com) wrote:

[SNIP]


Obviously Glyph couldn't answer this question so his interjection came off as condescendingly unhelpful.? Perhaps it's not an impression he deserves, but he got off to a horrible start when he responded to my first ever Twisted question (http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app) without bothering to add anything (sound familiar?).

I rarely interject because I'm no developer... just an entrepreneurial jack-of-all-trades (masters in business, bachelors in business, minor in CS -- albeit from Carnegie Mellon) that sometimes contributes to our partly-Twisted product.? However, you've succeeded in making my unusual perspective feel most unwelcome... so you'll be glad to know that you're never going to have to suffer me again.


I think your characterization various parties involved in this thread is unfair, and that you are expressing an inappropriate sense of entitlement. ?Enumerating your academic degrees in no way enhances any point you are trying to make here, and strikes me as argument from authority. ?It is a shame that some miscommunication has occurred, and I think a more positive outcome could be achieved if you?d walk back a few of these remarks and re-engage.

L. Daniel Burr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/1e8fe56c/attachment.html>

From glyph at twistedmatrix.com  Mon Feb 27 18:30:46 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 17:30:46 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <A533EEEB-52A8-4B8A-878A-68067C9BC2E2@twistedmatrix.com>

> On Feb 27, 2017, at 4:05 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> On Sun, Feb 26, 2017 at 1:08 AM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> 
>> Are you talking about building Docker containers on the fly? 
> 
> I?m a bit baffled what gave you that idea after I?ve spent days arguing for strict build/runtime separation?
> 
> I was just trying to figure out where you were having this problem:
> 
> > ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone
> 
> I heard the opposite of what you meant by this comment -- that you were deploying apt-gets + debs using docker and the combination had you wanting to murder someone. A really sharp dev wrote our software, but did a poor job sequencing Dockerfiles... and I had that exact same reaction.  My question had nothing to do with build-runtime separation... just docker optimization. On a dev (not ops) list, it didn't seem like a crazy question.

The question as such is not crazy at all, but rather, Hynek has been, both in general and repeatedly in this specific thread, a strong proponent of strict build & run container separation.  What made the question confusing was that to ask it of him, in this way, implied that you weren't following his earlier suggestions, and it's not clear what you were reading into them if not "don't build containers on the fly".

> Obviously Glyph couldn't answer this question so his interjection came off as condescendingly unhelpful.

It was not my intention to condescend, and I'm sorry that I did; my intention was to express a similar sort of bafflement that Hynek did.  My intention was for it to be read more like "you must have read the same commitment to build and runtime separation that I did in Hynek's posts, so I'm not sure what you're referring to".

(Plus, this response was a quip in a longer reply mainly about Pex.)

> Perhaps it's not an impression he deserves, but he got off to a horrible start when he responded to my first ever Twisted question (http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app <http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app>) without bothering to add anything (sound familiar?).

The right thing to have done (with respect to the site's guidelines) would have been to vote to close (as "too broad" or perhaps "primarily opinion based") rather than to make that comment.  However, I find that closing users' questions, especially relatively those asked by users without much experience on the site (i.e.: sub-1k reputation), is often interpreted as a hostile dismissal, so I ask for an SSCCE which can guide the asker to a more narrowly-constrained question that hews more closely to the guidelines set forth on the site.  It really saddens me that a comment is taken as equally condescending; short of writing multiple paragraphs of apologetic preface for every piece of feedback, it's not clear what a regular answerer on the site ought to do.

The fact that nobody else bothered to answer this question, comment on it, or even upvote it (one of the 2 upvotes was mine; I tend to upvote questions which are otherwise well-asked but need editing for specificity) in the intervening two years suggests that my "not appropriate for SO" assessment was accurate.  What I was trying to tell you was "you aren't going to get any answers with a question phrased like this".

One of the reasons I'm responding to this throwaway comment in such detail is that this category of misunderstanding - that attempting to be helpful in a volunteer endeavor like answering strangers' questions can be interpreted as arrogance, dismissal, or hostility (and the grudge nursed for years after the fact!), is a significant emotional cost for anyone involved in any form of volunteer support for open source.  I'm in the middle of taking a year off from answering questions on SO for this exact reason.

So, if you're reading this message, and you're ever mad at someone rejecting your question (or your PR or your bug report or whatever), please take a moment to consider the transaction from their perspective.  They're commenting in an attempt to be helpful, and they've probably just answered 5 (or 10 or 50 or 100) similar questions, and so they may not be including the full context of their feedback.

Ironically, the question you asked on SO would have been great mailing list fodder, it just doesn't fit the format stipulated by Stack Overflow's guidelines.  The intersection of persistence and Twisted _is_ a subtle and non-obvious issue, one that I've personally been trying to help address recently (for example) by taking over maintenance of http://alchimia.readthedocs.io <http://alchimia.readthedocs.io/>.

> I rarely interject because I'm no developer... just an entrepreneurial jack-of-all-trades (masters in business, bachelors in business, minor in CS -- albeit from Carnegie Mellon) that sometimes contributes to our partly-Twisted product.  However, you've succeeded in making my unusual perspective feel most unwelcome... so you'll be glad to know that you're never going to have to suffer me again.

I'm very sorry to hear that's your impression of me, and sorrier still that it seems to extend to the community in general.  Certainly, making people feel welcome is an explicit part of our mission here.

Your perspective has been valuable over your substantial history with Twisted and I do hope you'll reconsider.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170227/4c7d3ded/attachment.html>

From hs at ox.cx  Tue Feb 28 04:41:03 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 28 Feb 2017 12:41:03 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <336C78C8-C143-4688-8997-8B57481DD37D@ox.cx>


>> Are you talking about building Docker containers on the fly? 
> 
> I?m a bit baffled what gave you that idea after I?ve spent days arguing for strict build/runtime separation?
> 
> I was just trying to figure out where you were having this problem:
> 
> > ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone
> 
> I heard the opposite of what you meant by this comment -- that you were deploying apt-gets + debs using docker and the combination had you wanting to murder someone.

It was not clear to me you were referring to that line in particular.  Especially because you were talking about Docker and not about debs.

The problem is a long-standing ?bug? (scare quotes because it?s more of a performance regression) in ZFS-on-Linux: https://github.com/zfsonlinux/zfs/issues/3857 <https://github.com/zfsonlinux/zfs/issues/3857> (I believe there are more related tickets but I don?t have the time to investigate).  It?s related to excessive sync calls for every single file that accumulate very fast if you put a virtualenv with many files into a deb.  Basically I have to run containers with Python debs in YOLO mode (sync=False) if I don?t want installs to take more than a minute while it takes almost no time on ext4 or XFS.

That said, our Docker containers run on ext4 because our Docker daemon runs in an LXC and you cannot access the pool from within containers (yet, as I?ve hear).  Which makes it run in VFS mode which is even slower (I?ve measured factor 3x vs overlay2 in our CI) because it means it has to create a physical copy of each layer.

I suppose we were talking about different things because I don?t quite understand why you?re upset.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170228/5244c74b/attachment-0001.html>

From romanmescheryakov at yandex.ru  Tue Feb 28 09:11:16 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 28 Feb 2017 19:11:16 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
 <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
Message-ID: <72921488298276@web9j.yandex.ru>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170228/a3a0a028/attachment.html>

From glyph at twistedmatrix.com  Tue Feb 28 19:52:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Feb 2017 18:52:16 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <72921488298276@web9j.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
 <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
 <72921488298276@web9j.yandex.ru>
Message-ID: <341541A6-C553-4CBA-85C5-016BEB4CBA8C@twistedmatrix.com>


> On Feb 28, 2017, at 8:11 AM, ????? ????????? <romanmescheryakov at yandex.ru> wrote:
> 
> Hello everyone,
> today I tried restarting twisted service using sys.execv, and it fails with the following message:
>  
> > 2017-02-28T18:39:47+0300 [ready_to_setup#debug] Before os.execv: sys.executable is /usr/bin/python and sys.argv are ['/usr/local/bin/twistd', '-ny', 'master_player.tac']
> > Another twistd server is running, PID 1939
>  
> > This could either be a previously started instance of your application or a
> > different application entirely. To start a new one, either run it in some other
> > directory, or use the --pidfile and --logfile parameters to avoid clashes.
>  
> My service is started in the following way:
>  
> PYTHONPATH=. twistd -ny master_player.tac
>  
> (i.e. without daemonization)
> Code to restart is:
>  
> > d = task.deferLater(self._reactor, seconds,
> >                     shared_code.restart_script, self._log, self._reactor)
> > # _restart_script_done should never be called
> > d.addCallback(self._restart_script_done).addErrback(self._restart_script_failure)
>  
> where shared_code.restart_script is:
>  
> > def restart_script(logger, reactor):
> >     logger.info("Restarting script...")
> >     reactor.stop()
> >     sys.stdout.flush()
> >     #TODO: force logging system to flush all log files
> >     logger.debug("Before os.execv: sys.executable is {sysexec} and sys.argv are {argv}",
> >                 sysexec = sys.executable, argv = sys.argv)
> >     os.execv(sys.executable, [sys.executable] + sys.argv)
>  
> Could someone explain to me why does the "Another twistd server is running" error occur and how can I avoid it?

twistd writes a .pid file and then attempts to check whether another process on the system has the same PID contained in that file while starting up, to avoid conflicts.

Yours is an odd case, because the process with that process-ID is the _current_ process, and perhaps the check ought to even be modified to account for this.

Two other options you have are:

switch to `twist`, which doesn't write a pidfile
use the option "--pidfile ''" to disable writing a pidfile.

I strongly suggest the first option :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20170228/4daee793/attachment.html>

From romanmescheryakov at yandex.ru  Thu Feb  2 02:17:37 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Thu, 02 Feb 2017 12:17:37 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
Message-ID: <1754891486027057@web35j.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170202/23924d95/attachment-0002.html>

From adi at roiban.ro  Thu Feb  2 03:00:34 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Feb 2017 10:00:34 +0000
Subject: [Twisted-Python] conch.ssh.SSHFactory publicKeys and getPublicKeys
Message-ID: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>

Hi,

I am writing to ask about the reason why t.conch.ssh.Factory has both
the getPublicKeys and getPrivateKeys methods ?

The public keys should be string while private keys should be
twisted.conch.ssh.keys.Key

Based on my understanding if you have a private key object you can
extract the public key from it.

Are there any SSH key formats which will store a private key without
the public components ?

Or this is just a legacy code from the time when
twisted.conch.ssh.keys.Key was not there... and getPublicKeys should
be deprecated?

Thanks!

-- 
Adi Roiban



From adi at roiban.ro  Thu Feb  2 03:43:12 2017
From: adi at roiban.ro (Adi Roiban)
Date: Thu, 2 Feb 2017 10:43:12 +0000
Subject: [Twisted-Python] Hanging SFTP client operations on server
	disconnection
Message-ID: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>

Hi,

t.conch.ssh.filetransfer.FileTransferClient._sendRequest keeps a
mapping with active SFTP requests in self.openRequests

The self.openRequests is only updated when the server is responding
for that request.

They are not cleared/cancelled on connection lost.

In the case in which the client send a request in the exact same time
in which the server closes the connect , the client will send the
request as there is no way to know that the server is gone... but
since the server is gone it will not reply to the response... and the
deferred is never called.

To solve this issue, I went for cancelling the open requests when the
connection is close.

I assume that this is also an issue with bad behaved servers which
will just ignore a request... so instead of a simple deferred, there
is the need to use a timeout deferred.

Is this a bug?
I am wondering if I am doing something wrong and these type of errors
should be handled in a different way.

Thanks!

PS: There is a stray release notes fragment in conch
https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature

-- 
Adi Roiban



From trac at twistedmatrix.com  Sun Feb  5 00:05:20 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 05 Feb 2017 07:05:20 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1486278320.67.8793222737387053955@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170205/a374c907/attachment-0002.html>

From exarkun at twistedmatrix.com  Tue Feb  7 07:59:32 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Tue, 7 Feb 2017 09:59:32 -0500
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
Message-ID: <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>

On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> Thanks for highlighting those.  I've put the link in the other direction
> as well.
>
>
Craig seems eager to go ahead with reverting this change in behavior.

https://github.com/twisted/twisted/pull/672#issuecomment-275956265

As far as I can tell, no one has weighed in on the other side.  So I'm
inclined to go along with the reversion.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170207/c6a7d2c8/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb  7 12:29:28 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 7 Feb 2017 11:29:28 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
Message-ID: <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>


> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> Thanks for highlighting those.  I've put the link in the other direction as well.
> 
> 
> Craig seems eager to go ahead with reverting this change in behavior.
> 
> https://github.com/twisted/twisted/pull/672#issuecomment-275956265 <https://github.com/twisted/twisted/pull/672#issuecomment-275956265>
> 
> As far as I can tell, no one has weighed in on the other side.  So I'm inclined to go along with the reversion.

My 2¢ for the other side is: if trial does this, but twist and twistd don't, then it will be possible to get a passing test run for a plugin that doesn't get loaded.  I think it would be simpler and easier to debug to leave these consistent.

(I really don't think we should put this behavior back into twist or twistd, because "cd malware; twist web --path ." should not pwn your machine.)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170207/5dce8d31/attachment-0002.html>

From tp4 at a.ygyrm.com  Wed Feb  8 18:23:04 2017
From: tp4 at a.ygyrm.com (Sunsesoft.Du)
Date: Thu, 9 Feb 2017 09:23:04 +0800
Subject: [Twisted-Python] =?gb2312?b?xPq1xLL6xrfEx8O0usOjrLn6zeK1xL/Nu6c=?=
 =?gb2312?b?yse38daqtcDE2KO/17zIt822td21vb/Nu6fK1snPo6zH68Gqz7U=?=
Message-ID: <201702090923045390122@a.ygyrm.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170209/a343153b/attachment-0002.html>

From anthonylukach at gmail.com  Thu Feb  9 10:29:21 2017
From: anthonylukach at gmail.com (Anthony Lukach)
Date: Thu, 09 Feb 2017 17:29:21 +0000
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
Message-ID: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>

I am working on putting together an SMTP server implemented within
Twisted.  This will act as a conduit to my API, where there are two basic
flows:

1) A device that supports sending email can "send" an email through the
SMTP server. This is, in effect, the SMTP server handling the message as an
outbound request.  The device would authenticate with the server and then
provide it the message to be sent (which in reality will be uploaded to my
API).

2) A device can send an email to my SMTP server via their own SMTP server.
My server would receive the incoming message, parse its contents, and then
upload the data to my API. Naturally, these incoming messages would not be
required to authenticate with the server.

I'm having trouble constructing the server in a way that outbound messages
require authentication but incoming messages do not.

My service currently looks more or less like below:

from twisted.cred.portal import Portal

from twisted.mail import smtpfrom twisted.mail.imap4 import
LOGINCredentials, PLAINCredentialsclass SMTPFactory(smtp.SMTPFactory):
   protocol = smtp.ESMTP    def buildProtocol(self, addr):        #
Add authentication to SMTP server        p =
smtp.SMTPFactory.buildProtocol(self, addr)        p.challengers = {
        "LOGIN": LOGINCredentials,            "PLAIN":
PLAINCredentials        }        # Set a timeout for the connection
message to be processed        p.timeout = 200        return p

provider = Provider('localhost', settings)

# Multiple checkers that for backwards compatibilitycascade =
CascadeChecker()cascade.registerChecker(FilePasswordDB(pw_file))

# ... some other checks


portal = Portal(SimpleRealm(options, provider))

portal.registerChecker(cascade) internet.TCPServer(2500, SMTPFactory(portal
))



The problem is that, as currently written, I need to authenticate with the
server upon connection. Naturally, this doesn't make sense for the inbound
emails. It seems that a common pattern is to analyze the "to" address of
the emails and to allow any incoming emails (without authentication) that
have a matching domain, however this seems difficult to configure with
Twisted as I don't have the context of the email at the time the
authentication check is done.

Can anyone direct me to an example of an SMTP server that is both accepting
inbound and outbound emails and authenticates only on outbound emails?

PS, I'm not super familiar with the inner workings of email or the SMTP
protocol, please let me know if I'm heading in the wrong direction

Best,

Anthony
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170209/d869b1c6/attachment-0002.html>

From exarkun at twistedmatrix.com  Thu Feb  9 11:36:10 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Thu, 9 Feb 2017 13:36:10 -0500
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
In-Reply-To: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
References: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
Message-ID: <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>

On Thu, Feb 9, 2017 at 12:29 PM, Anthony Lukach <anthonylukach at gmail.com>
wrote:

> I am working on putting together an SMTP server implemented within
> Twisted.  This will act as a conduit to my API, where there are two basic
> flows:
>
> 1) A device that supports sending email can "send" an email through the
> SMTP server. This is, in effect, the SMTP server handling the message as an
> outbound request.  The device would authenticate with the server and then
> provide it the message to be sent (which in reality will be uploaded to my
> API).
>
> 2) A device can send an email to my SMTP server via their own SMTP server.
> My server would receive the incoming message, parse its contents, and then
> upload the data to my API. Naturally, these incoming messages would not be
> required to authenticate with the server.
>
> I'm having trouble constructing the server in a way that outbound messages
> require authentication but incoming messages do not.
>

twisted.mail and cred support anonymous access.  I think that what you want
is to implement an avatar that can only accept messages for local delivery
and use that for anonymous users.  If an anonymous user tries to send mail
to a non-local user, they get back an error.  Either they made a mistake
and they should try again after authenticating or they're trying to abuse
the service and that's what you want.  That's case (2).  Then implement the
relay logic in another avatar and use that for authenticated users.  That's
case (1).

This relies on the fact that the realm you supply is responsible for
creating avatars and the realm gets told the avatarId for which it should
create an avatar - and the anonymous user can be differentiated from other
users by the avatarId.

Does that help?


> Can anyone direct me to an example of an SMTP server that is both
> accepting inbound and outbound emails and authenticates only on outbound
> emails?
>
>
As it happens, yes...

This avatar supports local-only delivery:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L51
This one supports relaying:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L528
Here's the factory and portal setup code:
https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L302

The realm is a bit spread out and involves some Axiom-specific concepts
that you probably don't need to know... But let me know if the above three
links don't make things clear.

 Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170209/1449c70c/attachment-0002.html>

From hawkowl at atleastfornow.net  Sat Feb 11 03:03:19 2017
From: hawkowl at atleastfornow.net (Amber Hawkie Brown)
Date: Sat, 11 Feb 2017 21:03:19 +1100
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
Message-ID: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 17.1!

The highlights of this release are:

- twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
- twisted.web.server has had many cleanups revolving around timing out inactive clients.
- twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
- twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
- You can now call the new twist runner with `python -m twisted`.
- twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
- Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
- More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
- Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
- 60+ closed tickets.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS>>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,
Amber Brown (HawkOwl)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170211/b40690d7/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP
URL: </pipermail/twisted-python/attachments/20170211/b40690d7/attachment.sig>

From mithrandi at mithrandi.net  Sat Feb 11 10:28:36 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 11 Feb 2017 17:28:36 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
Message-ID: <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>

On Sat, 11 Feb 2017 at 12:04 Amber Hawkie Brown <hawkowl at atleastfornow.net>
wrote:

> - Lots of deprecated code removals, to make a sleeker, less confusing
> Twisted.
>

Something perhaps not obvious from the release notes:

String endpoint descriptions, as used by twist/twistd among other things,
for listening on tcp ports now require the "tcp:": that is, "80" is no
longer accepted, you need to use "tcp:80".

This functionality has been deprecated for a while, but as it is unlikely
that many people run twist/twistd with DeprecationWarnings enabled, most
people relying on this behaviour have unfortunately probably never seen the
warning.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170211/286aa83e/attachment-0002.html>

From p.mayers at imperial.ac.uk  Sat Feb 11 11:12:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2017 18:12:08 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
Message-ID: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>

On 11/02/2017 17:28, Tristan Seligmann wrote:

> String endpoint descriptions, as used by twist/twistd among other
> things, for listening on tcp ports now require the "tcp:": that is, "80"
> is no longer accepted, you need to use "tcp:80".

In which case there's a regression in the "portforward" twistd plugin:

$ v/bin/twistd portforward
Traceback (most recent call last):
...
ValueError: Unknown endpoint type: '6666'

$ v/bin/twistd portforward -p tcp:6666 -d tcp:6665
...
ValueError: invalid literal for int() with base 10: 'tcp:6665'

:o(



From p.mayers at imperial.ac.uk  Sat Feb 11 16:14:15 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 11 Feb 2017 23:14:15 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
Message-ID: <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>

On 11/02/17 18:12, Phil Mayers wrote:
> On 11/02/2017 17:28, Tristan Seligmann wrote:
>
>> String endpoint descriptions, as used by twist/twistd among other
>> things, for listening on tcp ports now require the "tcp:": that is, "80"
>> is no longer accepted, you need to use "tcp:80".
>
> In which case there's a regression in the "portforward" twistd plugin:

Actually this works:

twistd portforward -p tcp:6666 -d 6665

Odd but meh, I'll take it



From glyph at twistedmatrix.com  Sat Feb 11 18:44:43 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 11 Feb 2017 17:44:43 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
Message-ID: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>


> On Feb 11, 2017, at 3:14 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 11/02/17 18:12, Phil Mayers wrote:
>> On 11/02/2017 17:28, Tristan Seligmann wrote:
>> 
>>> String endpoint descriptions, as used by twist/twistd among other
>>> things, for listening on tcp ports now require the "tcp:": that is, "80"
>>> is no longer accepted, you need to use "tcp:80".
>> 
>> In which case there's a regression in the "portforward" twistd plugin:
> 
> Actually this works:
> 
> twistd portforward -p tcp:6666 -d 6665
> 
> Odd but meh, I'll take it

Yeah, this is a lack of test coverage for the 'default' case.  Technically it is a regression, but it's probably pretty unusual to use the default; point being, I don't think we need an emergency release here.

There's also a huge problem here with documentation, where `-d´ is a TCP port but `-p´ is a strport, and it's hard for end-users to get from the command line to the relevant documentation that explains what strports are available.

Nevertheless - please file a ticket!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170211/161a46bb/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Feb 11 18:54:57 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 11 Feb 2017 20:54:57 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
Message-ID: <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>

On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <
hawkowl at atleastfornow.net> wrote:

> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 17.1!
>
> The highlights of this release are:
>
> - twisted.web.client.Agent now supports IPv6! It's also now the primary
> web client in Twisted, with twisted.web.client.getPage being deprecated in
> favour of it and Treq.
> - twisted.web.server has had many cleanups revolving around timing out
> inactive clients.
> - twisted.internet.ssl.CertificateOptions has had its `method` argument
> deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo,
> and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments.
> This allows you to better give a range of versions of TLS you wish to
> negotiate, rather than forcing yourself to any one version.
> - twisted.internet.ssl.CertificateOptions will use OpenSSL's
> MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by
> idle TLS connections.
> - You can now call the new twist runner with `python -m twisted`.
> - twisted.conch.ssh now has some ECDH key exchange support and supports
> `hmac-sha2-384`.
> - Better Unicode support in twisted.internet.reactor.spawnProcess,
> especially on Windows on Python 3.6.
> - More Python 3 porting in Conch, and more under-the-hood changes to
> facilitate a Twisted-wide jump to new-style classes only on Python 2 in
> 2018/2019. This release has also been tested on Python 3.6 on Linux.
> - Lots of deprecated code removals, to make a sleeker, less confusing
> Twisted.
> - 60+ closed tickets.
>
> For more information, check the NEWS file (link provided below).
>
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or
> alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS
> file is also available at <https://github.com/twisted/
> twisted/blob/twisted-17.1.0/NEWS>.
>
> Many thanks to everyone who had a part in this release - the supporters of
> the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
>
>
Thanks all!  Great to see the troubles of 16.7 mostly behind us.

I do hope there will be at 17.1.1 soon for <
https://twistedmatrix.com/trac/ticket/9031> and particularly <
https://twistedmatrix.com/trac/ticket/9032>.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170211/5fedfe2e/attachment-0002.html>

From trac at twistedmatrix.com  Sun Feb 12 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 12 Feb 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1486883118.85.1877632589352386773@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170212/725a3ba3/attachment-0002.html>

From p.mayers at imperial.ac.uk  Sun Feb 12 05:10:09 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sun, 12 Feb 2017 12:10:09 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
Message-ID: <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>

On 12/02/2017 01:44, Glyph Lefkowitz wrote:

> Yeah, this is a lack of test coverage for the 'default' case.
>  Technically it /is/ a regression, but it's probably pretty unusual to
> use the default; point being, I don't think we need an emergency release
> here.

Agreed. It's completely tolerable.

> Nevertheless - please file a ticket!

#9033 done



From mithrandi at mithrandi.net  Sun Feb 12 06:00:02 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 12 Feb 2017 13:00:02 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
Message-ID: <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>

On Sun, 12 Feb 2017 at 03:45 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Yeah, this is a lack of test coverage for the 'default' case.  Technically
> it *is* a regression, but it's probably pretty unusual to use the
> default; point being, I don't think we need an emergency release here.
>

The functionality that was removed was previously deprecated, so I don't
think it counts as a regression. However, the fact that most people
wouldn't ever have seen the DeprecationWarning, and…

There's also a huge problem here with documentation, where `-d´ is a TCP
> port but `-p´ is a strport, and it's hard for end-users to get from the
> command line to the relevant documentation that explains what strports are
> available.
>

…the documentation issue does make things more awkward than they needed to
be.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170212/881cb540/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Feb 12 08:10:53 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 12 Feb 2017 10:10:53 -0500
Subject: [Twisted-Python] deprecate using paths with trial
Message-ID: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>

Hello,

Since trial has stopped adding the working directory to sys.path, it seems
very sensible to also stop accepting paths as a way to specify what tests
to run.  Instead, only package, module, class, or test method names should
be accepted.

Please add your thoughts (reasoned arguments, not +1s and -1s) to this
ticket:

    https://twistedmatrix.com/trac/ticket/9035

Thanks,
Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170212/fb1305c3/attachment-0002.html>

From anthonylukach at gmail.com  Sun Feb 12 09:50:32 2017
From: anthonylukach at gmail.com (Anthony Lukach)
Date: Sun, 12 Feb 2017 16:50:32 +0000
Subject: [Twisted-Python] SMTP: Authenticating on Outbound emails only
In-Reply-To: <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>
References: <CAMcYFA+4qjh9RHY24UcUs5KNJvy3oPwXNMUbrm8Vyzu5SbqkYg@mail.gmail.com>
 <CAEeXt4MyuNdfMO4_YJHeuZe2NeXmcYNZiA_kE6Hcbh27SY95RA@mail.gmail.com>
Message-ID: <CAMcYFALvhzAq67iNCe_rJjZwvA3_VKA=UvaeuztY8w_4PHVi=g@mail.gmail.com>

Thanks Jean-Paul, that indeed did help!  To restate what you said, we're
now allowing both authenticated and unauthenticated (anonymous)
connections, each returning a different type of Avatar.  We then take a
look at what the connection is trying to do (handle outbound email vs.
handle inbound email) and either permit/deny the action based on what
avatar is being used.

I appreciate the help!

Anthony

On Thu, Feb 9, 2017 at 11:39 AM Jean-Paul Calderone <
exarkun at twistedmatrix.com> wrote:

> On Thu, Feb 9, 2017 at 12:29 PM, Anthony Lukach <anthonylukach at gmail.com>
> wrote:
>
> I am working on putting together an SMTP server implemented within
> Twisted.  This will act as a conduit to my API, where there are two basic
> flows:
>
> 1) A device that supports sending email can "send" an email through the
> SMTP server. This is, in effect, the SMTP server handling the message as an
> outbound request.  The device would authenticate with the server and then
> provide it the message to be sent (which in reality will be uploaded to my
> API).
>
> 2) A device can send an email to my SMTP server via their own SMTP server.
> My server would receive the incoming message, parse its contents, and then
> upload the data to my API. Naturally, these incoming messages would not be
> required to authenticate with the server.
>
> I'm having trouble constructing the server in a way that outbound messages
> require authentication but incoming messages do not.
>
>
> twisted.mail and cred support anonymous access.  I think that what you
> want is to implement an avatar that can only accept messages for local
> delivery and use that for anonymous users.  If an anonymous user tries to
> send mail to a non-local user, they get back an error.  Either they made a
> mistake and they should try again after authenticating or they're trying to
> abuse the service and that's what you want.  That's case (2).  Then
> implement the relay logic in another avatar and use that for authenticated
> users.  That's case (1).
>
> This relies on the fact that the realm you supply is responsible for
> creating avatars and the realm gets told the avatarId for which it should
> create an avatar - and the anonymous user can be differentiated from other
> users by the avatarId.
>
> Does that help?
>
>
> Can anyone direct me to an example of an SMTP server that is both
> accepting inbound and outbound emails and authenticates only on outbound
> emails?
>
>
> As it happens, yes...
>
> This avatar supports local-only delivery:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L51
> This one supports relaying:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L528
> Here's the factory and portal setup code:
> https://github.com/twisted/quotient/blob/master/xquotient/mail.py#L302
>
> The realm is a bit spread out and involves some Axiom-specific concepts
> that you probably don't need to know... But let me know if the above three
> links don't make things clear.
>
>  Jean-Paul
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170212/db9b92c2/attachment-0002.html>

From rodrigc at crodrigues.org  Sun Feb 12 12:08:37 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Sun, 12 Feb 2017 11:08:37 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
 <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
Message-ID: <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>

On Tue, Feb 7, 2017 at 11:29 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com>
> wrote:
>
> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> Thanks for highlighting those.  I've put the link in the other direction
>> as well.
>>
>>
> Craig seems eager to go ahead with reverting this change in behavior.
>
> https://github.com/twisted/twisted/pull/672#issuecomment-275956265
>
> As far as I can tell, no one has weighed in on the other side.  So I'm
> inclined to go along with the reversion.
>
>
> My 2¢ for the other side is: if trial does this, but twist and twistd
> don't, then it will be possible to get a passing test run for a plugin that
> doesn't get loaded.  I think it would be simpler and easier to debug to
> leave these consistent.
>
>

This is an interesting corner case, but I think the twistd and twist issues
should be pursued in
separate discussions and tickets.

For trial, I would like to proceed with
https://github.com/twisted/twisted/pull/672/ .  With my conversion
of trial to a console script, the new behavior was unintentional on my
part.  Since all the unit tests
passed, I did not notice.  In this ticket:
https://twistedmatrix.com/trac/ticket/8978
Job-Evers-Meltzer provided a use-case where the new behavior of trial
broke existing usage.

trial can be used as a general-purpose tool for running unittest-style
tests,
much like pytest or nose.  The new behavior is disruptive, for minimal
benefit,
so I would like to restore the old behavior.

I added a unit test for this, so in future, if this breaks again, we will
catch it.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170212/57c610be/attachment-0002.html>

From tp3 at a.easydong.net  Sun Feb 12 20:12:52 2017
From: tp3 at a.easydong.net (Sunsesoft.Du)
Date: Mon, 13 Feb 2017 11:12:52 +0800
Subject: [Twisted-Python] =?gb2312?b?1ve2r8q906rP+rPJzeLDs8bz0rXQwsC2uqM=?=
Message-ID: <201702131112525213444@a.easydong.net>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170213/47ef0d7f/attachment-0002.html>

From commercials24 at yahoo.de  Mon Feb 13 08:22:54 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 13 Feb 2017 16:22:54 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
Message-ID: <1486999374.5873.2.camel@yahoo.de>

hi,


there is a abvious error in the code at the end.
since i know next to nothing about threads i thought maybe a print
statement in the code that is actually doing the work would give me
some pointers.

if im not mistaken, it is:
def callWithContext in python/context.py


as it turns out it does output nothing so i went back the call chain
until it prints something.
now im in:
internet/threads.py  def deferToThreadPool

but even there, printing the argument f prints nothing?
isnt that the first method that is called from my code?

im on linux with python 3.x and twisted 17





from twisted.internet import reactor, task, threads
import datetime

def aSillyBlockingMethod(x):
    import time
    time.sleep(4)
    return x


def runEverySecond():
    print('x')
    
    print(datetime.now().strftime('%H:%M:%S'))    #WRONG, ERROR:
AttributeError: 'module' object has no attribute 'now'
    # that error gets eaten by twisted....why?
    #print(datetime.datetime.now().strftime('%H:%M:%S'))    #WORKS


def printResult(result):
    print("printResult:", result)

def printError(failure):
    print(failure)


# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument')
d.addCallback(printResult)
d.addErrback(printError)

# but this will still run, not getting blocked
l = task.LoopingCall(runEverySecond)
l.start(1.0)

reactor.run()



From ldanielburr at me.com  Mon Feb 13 09:56:53 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 13 Feb 2017 10:56:53 -0600
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <1486999374.5873.2.camel@yahoo.de>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de>
Message-ID: <etPan.58a1e555.6d20c965.8c82@me.com>

Hi Steven,

On February 13, 2017 at 9:24:03 AM, steven meiers (commercials24 at yahoo.de) wrote:

hi,


there is a abvious error in the code at the end.
since i know next to nothing about threads i thought maybe a print
statement in the code that is actually doing the work would give me
some pointers.

if im not mistaken, it is:
def callWithContext in python/context.py


as it turns out it does output nothing so i went back the call chain
until it prints something.
now im in:
internet/threads.py def deferToThreadPool

but even there, printing the argument f prints nothing?
isnt that the first method that is called from my code?


Sorry, your code example and your explanation don’t make clear what you expect to happen, and when.  When you say “the first method that is called from my code”, are you referring to  aSillyBlockingMethod, or runEverySecond?  In the deferToThread case, you are calling the former; in the task.LoopingCall case, you are calling the latter.

If your intent is to trigger the strftime exception as a consequence of your call to deferToThread, then you would need to either add runEverySecond to the callback chain, or move the call to strftime into the aSillyBlockingMethod call.

Example:

# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument’)
d.addCallback(runEverySecond)
d.addCallback(printResult)
d.addErrback(printError)

Hope this helps,

L. Daniel Burr

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170213/ae101b51/attachment-0002.html>

From commercials24 at yahoo.de  Mon Feb 13 11:00:58 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 13 Feb 2017 19:00:58 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <etPan.58a1e555.6d20c965.8c82@me.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
Message-ID: <1487008858.20524.1.camel@yahoo.de>


> Sorry, your code example and your explanation don’t make clear what
> you expect to happen, and when.  When you say “the first method that
> is called from my code”, are you referring to  aSillyBlockingMethod,
> or runEverySecond?  In the deferToThread case, you are calling the
> former; in the task.LoopingCall case, you are calling the latter.

Ah youre right, i forgot to write about the most important part.
if the datetime line is wrong you get 
Unhandled Error 

i was looking for a way to get the original error message that:
print(datetime.now().strftime('%H:%M:%S'))

throws if used outside of twisted code.

i know how to correct the code but i would like to know why i dont get
that error on the console.

> If your intent is to trigger the strftime exception as a consequence
> of your call to deferToThread, then you would need to either add
> runEverySecond to the callback chain, or move the call to strftime
> into the aSillyBlockingMethod call.
> 
> Example:
> 
> # this will "sleep" for x seconds
> d = threads.deferToThread(aSillyBlockingMethod, 'some argument’)
> d.addCallback(runEverySecond)
> d.addCallback(printResult)
> d.addErrback(printError)
> 

i tried that one, code looks like this. but i dont get the error
message...still Unhandled error in Deferred

from twisted.internet import reactor, task, threads
import datetime

def aSillyBlockingMethod(x):
    import time
    time.sleep(4)
    return x


def runEverySecond(ignored):

    print(datetime.now().strftime('%H:%M:%S'))    #WRONG, ERROR:
AttributeError: 'module' object has no attribute 'now'
    # that error gets eaten by twisted....why?
    #print(datetime.datetime.now().strftime('%H:%M:%S'))    #WORKS


def printResult(result):
    print("printResult:", result)

def printError(failure):
    print(failure)


# this will "sleep" for x seconds
d = threads.deferToThread(aSillyBlockingMethod, 'some argument')
d.addCallback(runEverySecond)
d.addCallback(printResult)
d.addErrback(printError)

# but this will still run, not getting blocked
l = task.LoopingCall(runEverySecond, 'lala')
l.start(1.0)

reactor.callLater(5, reactor.stop)
reactor.run()




From ldanielburr at me.com  Mon Feb 13 11:35:07 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 13 Feb 2017 12:35:07 -0600
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <1487008858.20524.1.camel@yahoo.de>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
 <1487008858.20524.1.camel@yahoo.de>
Message-ID: <etPan.58a1fc5b.3bfa4c16.8c82@me.com>

Hi Steven,

On February 13, 2017 at 12:01:49 PM, steven meiers (commercials24 at yahoo.de) wrote:


> Sorry, your code example and your explanation don’t make clear what
> you expect to happen, and when.  When you say “the first method that
> is called from my code”, are you referring to  aSillyBlockingMethod,
> or runEverySecond?  In the deferToThread case, you are calling the
> former; in the task.LoopingCall case, you are calling the latter.

Ah youre right, i forgot to write about the most important part.
if the datetime line is wrong you get  
Unhandled Error  

i was looking for a way to get the original error message that:
print(datetime.now().strftime('%H:%M:%S'))

throws if used outside of twisted code.

i know how to correct the code but i would like to know why i dont get
that error on the console.


[SNIP]

The “Unhanded error in Deferred” isn’t coming from your call to deferToThread, it is coming from your task.LoopingCall.  When you invoke .start() on your LoopingCall instance, it returns a Deferred, which fires its assigned callback handler when you call .stop() on the LoopingCall instance, and which fires its assigned errback handler if an exception occurs while running the function (in this case runEverySecond) passed to the LoopingCall.

In other words, you need this:

l = task.LoopingCall(runEverySecond, ‘lala’)
l.addErrback(printError)

Hope this helps,

L. Daniel Burr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170213/6ff6bddf/attachment-0002.html>

From commercials24 at yahoo.de  Mon Feb 13 16:45:37 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 14 Feb 2017 00:45:37 +0100
Subject: [Twisted-Python] twisted eats the error
In-Reply-To: <etPan.58a1fc5b.3bfa4c16.8c82@me.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <1486999374.5873.2.camel@yahoo.de> <etPan.58a1e555.6d20c965.8c82@me.com>
 <1487008858.20524.1.camel@yahoo.de> <etPan.58a1fc5b.3bfa4c16.8c82@me.com>
Message-ID: <1487029537.20524.3.camel@yahoo.de>


> 
> [SNIP]
> 
> The “Unhanded error in Deferred” isn’t coming from your call to
> deferToThread, it is coming from your task.LoopingCall.  When you
> invoke .start() on your LoopingCall instance, it returns a Deferred,
> which fires its assigned callback handler when you call .stop() on
> the LoopingCall instance, and which fires its assigned errback
> handler if an exception occurs while running the function (in this
> case runEverySecond) passed to the LoopingCall.
> 
> In other words, you need this:
> 
> l = task.LoopingCall(runEverySecond, ‘lala’)
> l.addErrback(printError)
> 

you probably meant:
l = task.LoopingCall(runEverySecond, 'lala')
d = l.start(1.0)
d.addErrback(printError)


your version gives me a attribute error, thanks for clarifying that.



From glyph at twistedmatrix.com  Tue Feb 14 15:31:53 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:31:53 -0800
Subject: [Twisted-Python] deprecate using paths with trial
In-Reply-To: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>
References: <CAEeXt4MD8D9-p1Bs-cOsT_AWUSDgQsW7j5B0MNiXFsXtub_9yg@mail.gmail.com>
Message-ID: <091F0A2E-1045-4CC5-814C-9A96A66DA7D6@twistedmatrix.com>


> On Feb 12, 2017, at 7:10 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hello,
> 
> Since trial has stopped adding the working directory to sys.path, it seems very sensible to also stop accepting paths as a way to specify what tests to run.  Instead, only package, module, class, or test method names should be accepted.
> 
> Please add your thoughts (reasoned arguments, not +1s and -1s) to this ticket:
> 
>     https://twistedmatrix.com/trac/ticket/9035 <https://twistedmatrix.com/trac/ticket/9035>
Thanks for bringing this up, JP.  As it happens I disagree right now (comments on the ticket as requested) but this is something we should try to make a coherent decision on to ensure the command-line tooling is as consistent as possible :-).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170214/bc6390fb/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb 14 15:37:06 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:37:06 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
 <CAMcKhMTYRmMLmi4op4-GCKWFM9JWLWRFX1_WtGCpJeDgBOQqGg@mail.gmail.com>
Message-ID: <86FB9574-CCAB-4B1D-8FE8-2EBE42439743@twistedmatrix.com>


> On Feb 12, 2017, at 5:00 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Sun, 12 Feb 2017 at 03:45 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Yeah, this is a lack of test coverage for the 'default' case.  Technically it is a regression, but it's probably pretty unusual to use the default; point being, I don't think we need an emergency release here.
> 
> The functionality that was removed was previously deprecated, so I don't think it counts as a regression.

The regression is that the default is wrong; we're effectively the one "calling" the deprecated API by supplying that data.

The fact that users won't see this in this context suggests that our deprecation process for user-facing command-line arguments is broken; we need to fix this for future iterations.

> However, the fact that most people wouldn't ever have seen the DeprecationWarning, and… 
> 
> There's also a huge problem here with documentation, where `-d´ is a TCP port but `-p´ is a strport, and it's hard for end-users to get from the command line to the relevant documentation that explains what strports are available.
> 
> …the documentation issue does make things more awkward than they needed to be.

I think the documentation issue may require code changes to be addressed.  Particularly, a command-line interface to say "hey, what endpoint description plugins are available, and what do they do" would be very helpful to packages like txtorcon and txacme.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170214/02f2de84/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb 14 15:37:30 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:37:30 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAMcKhMSa5tA7POATQuJRY31F89R5ppULKstoWcg-bo8=YwL7cg@mail.gmail.com>
 <5952c3d2-682d-8142-240b-e9bc13caaefe@imperial.ac.uk>
 <2ea40a5d-5e26-a174-5ae7-4329e046c1a0@imperial.ac.uk>
 <F2DBD3FD-5F35-4B9A-95D2-E293B3B87B86@twistedmatrix.com>
 <1f3dec80-84d0-2ea5-158f-f4da0c893237@imperial.ac.uk>
Message-ID: <A373CFA6-85DE-4B72-A294-A72C1DEBF809@twistedmatrix.com>


> On Feb 12, 2017, at 4:10 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 12/02/2017 01:44, Glyph Lefkowitz wrote:
> 
>> Yeah, this is a lack of test coverage for the 'default' case.
>> Technically it /is/ a regression, but it's probably pretty unusual to
>> use the default; point being, I don't think we need an emergency release
>> here.
> 
> Agreed. It's completely tolerable.
> 
>> Nevertheless - please file a ticket!
> 
> #9033 done

Thanks for filing this!

-glyph




From glyph at twistedmatrix.com  Tue Feb 14 15:44:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 14:44:16 -0800
Subject: [Twisted-Python] "twistd" in Twisted 16.4.0 can't import
 modules/packages from current working directory
In-Reply-To: <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>
References: <57C8302A.1050703@fastmail.fm>
 <C6F37597-5AF5-4AC7-80BB-07153F4D4824@atleastfornow.net>
 <CAEeXt4M=VhWoG7-7j+_EJQPvLR0pKqRq_gSR1OoGTc+AX77-yw@mail.gmail.com>
 <D47EB0F0-B4A5-4D3B-93BC-F2A9CE434C27@twistedmatrix.com>
 <C573618E-011F-40F0-91AD-F0578624C709@atleastfornow.net>
 <CAEeXt4MojaQn=HUcebcu3mEHWKFHfg=6q5duP9xQNW65A6YjCA@mail.gmail.com>
 <CAEeXt4OYCDL6kaByxVeTgzOMr9HuvJ6+NXGmQHEs+P9xwiEwjg@mail.gmail.com>
 <E62CF201-D102-431A-B839-08DE882F8E24@twistedmatrix.com>
 <CAEeXt4PF7En=nbGu7LbPiUktqvNJ7_UP2cLxe2EAqwFzFsF=jA@mail.gmail.com>
 <88B369E9-E7CB-4491-B80E-4845270BE7BC@twistedmatrix.com>
 <CAG=rPVfgi8pYszAGnwW=1+90rkt4ATEtf6=wKbVdzW9qCv8mgw@mail.gmail.com>
Message-ID: <523C84B5-2963-41DF-A60C-3E966A27DEF9@twistedmatrix.com>


> On Feb 12, 2017, at 11:08 AM, Craig Rodrigues <rodrigc at crodrigues.org> wrote:
> 
> On Tue, Feb 7, 2017 at 11:29 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 7, 2017, at 6:59 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> On Fri, Jan 13, 2017 at 1:13 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> Thanks for highlighting those.  I've put the link in the other direction as well.
>> 
>> 
>> Craig seems eager to go ahead with reverting this change in behavior.
>> 
>> https://github.com/twisted/twisted/pull/672#issuecomment-275956265 <https://github.com/twisted/twisted/pull/672#issuecomment-275956265>
>> 
>> As far as I can tell, no one has weighed in on the other side.  So I'm inclined to go along with the reversion.
> 
> My 2¢ for the other side is: if trial does this, but twist and twistd don't, then it will be possible to get a passing test run for a plugin that doesn't get loaded.  I think it would be simpler and easier to debug to leave these consistent.
> 
> 
> 
> This is an interesting corner case, but I think the twistd and twist issues should be pursued in
> separate discussions and tickets.
> 
> For trial, I would like to proceed with https://github.com/twisted/twisted/pull/672/ <https://github.com/twisted/twisted/pull/672/> .  With my conversion
> of trial to a console script, the new behavior was unintentional on my part.  Since all the unit tests
> passed, I did not notice.  In this ticket: https://twistedmatrix.com/trac/ticket/8978 <https://twistedmatrix.com/trac/ticket/8978>
> Job-Evers-Meltzer provided a use-case where the new behavior of trial
> broke existing usage.
> 
> trial can be used as a general-purpose tool for running unittest-style tests,
> much like pytest or nose.  The new behavior is disruptive, for minimal benefit,
> so I would like to restore the old behavior.
> 
> I added a unit test for this, so in future, if this breaks again, we will catch it.

There's a lot of controversy around this type of organization of tests; personally, I believe it is a horrible antipattern, others, notably Donald Stufft, (wrongly) regard it as a best practice.

Apropos of the comment I put on 9035, https://twistedmatrix.com/trac/ticket/9035#comment:4 <https://twistedmatrix.com/trac/ticket/9035#comment:4>, would it be acceptable for Job Evers‐Meltzer if the syntax were simply 'trial ./tests/' instead?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170214/fdae8a7f/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb 14 23:54:42 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 22:54:42 -0800
Subject: [Twisted-Python] conch.ssh.SSHFactory publicKeys and
 getPublicKeys
In-Reply-To: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>
References: <CAFycZ9djV2JbRm86ZB5chE-diUbk-B1_Ot8r9Ex8PeERb6nDvw@mail.gmail.com>
Message-ID: <17812501-5CF3-4594-A581-9421B7CE7260@twistedmatrix.com>


> On Feb 2, 2017, at 2:00 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> I am writing to ask about the reason why t.conch.ssh.Factory has both
> the getPublicKeys and getPrivateKeys methods ?

As with most things in Conch, the structure of these APIs was probably developed many years ago without any specific thought to how they would be exposed as a public API, and instead were just set up to make implementing the protocol logic more convenient.

> The public keys should be string while private keys should be
> twisted.conch.ssh.keys.Key

By "should be" you mean "is"?

> Based on my understanding if you have a private key object you can
> extract the public key from it.

Yes, via Key.public().

> Are there any SSH key formats which will store a private key without
> the public components ?

I don't think that's possible?

> Or this is just a legacy code from the time when
> twisted.conch.ssh.keys.Key was not there... and getPublicKeys should
> be deprecated?


Rather than thinking of this as "getPublicKeys should be deprecated", the first thing to work on would be "what's the right structure for this"?  How would you prefer this be exposed as an interface?

-glyph


From glyph at twistedmatrix.com  Tue Feb 14 23:56:29 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 14 Feb 2017 22:56:29 -0800
Subject: [Twisted-Python] Hanging SFTP client operations on server
 disconnection
In-Reply-To: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
Message-ID: <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>


> On Feb 2, 2017, at 2:43 AM, Adi Roiban <adi at roiban.ro> wrote:
> 
> Hi,
> 
> t.conch.ssh.filetransfer.FileTransferClient._sendRequest keeps a
> mapping with active SFTP requests in self.openRequests
> 
> The self.openRequests is only updated when the server is responding
> for that request.
> 
> They are not cleared/cancelled on connection lost.
> 
> In the case in which the client send a request in the exact same time
> in which the server closes the connect , the client will send the
> request as there is no way to know that the server is gone... but
> since the server is gone it will not reply to the response... and the
> deferred is never called.
> 
> To solve this issue, I went for cancelling the open requests when the
> connection is close.

That sounds correct.  Is there a ticket for this?

> I assume that this is also an issue with bad behaved servers which
> will just ignore a request... so instead of a simple deferred, there
> is the need to use a timeout deferred.
> 
> Is this a bug?
> I am wondering if I am doing something wrong and these type of errors
> should be handled in a different way.

Generally speaking, any Deferred attached to a connection object (regardless of protocol) should be failed with a connection failure error of some kind when the connection is dropped.

> Thanks!
> 
> PS: There is a stray release notes fragment in conch
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature <https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature>

Oops!

Wait; why do you say this is "stray"?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170214/74d388d7/attachment-0002.html>

From cyli at twistedmatrix.com  Wed Feb 15 00:13:38 2017
From: cyli at twistedmatrix.com (Ying Li)
Date: Tue, 14 Feb 2017 23:13:38 -0800
Subject: [Twisted-Python] Trying out Detectify on twistedmatrix.com
Message-ID: <29E7E35C-5746-4F6F-9A62-6F15BF299022@twistedmatrix.com>

Hey all,

I recently heard about https://detectify.com/ <https://detectify.com/> , which is a service which does automatic pen testing, scanning for OWASP top 10 vulnerabilities (https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project <https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project>).

I thought this would be a useful thing to try to run against https://twistedmatrix.com.  They offer non-commercial accounts, and have approved us for a non-commercial account should we want to run automated scans.

I’m going to try running the scan once tonight (post midnight PST), or alternately tomorrow (again post midnight PST) if tonight goes wrong.

Any vulnerabilities discovered will be shared with twisted admins only.  

Just wanted to warn everyone in case alerts start going off or if it happens to knock anything over (which is unlikely, but just in case Glyph has volunteered to look into it if it happens).

Thanks!
-Ying
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170214/df0d7c02/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Feb 15 01:39:22 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 00:39:22 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
Message-ID: <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>


> On Feb 11, 2017, at 5:54 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 17.1!
> 
> The highlights of this release are:
> 
> - twisted.web.client.Agent now supports IPv6! It's also now the primary web client in Twisted, with twisted.web.client.getPage being deprecated in favour of it and Treq.
> - twisted.web.server has had many cleanups revolving around timing out inactive clients.
> - twisted.internet.ssl.CertificateOptions has had its `method` argument deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo, and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments. This allows you to better give a range of versions of TLS you wish to negotiate, rather than forcing yourself to any one version.
> - twisted.internet.ssl.CertificateOptions will use OpenSSL's MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by idle TLS connections.
> - You can now call the new twist runner with `python -m twisted`.
> - twisted.conch.ssh now has some ECDH key exchange support and supports `hmac-sha2-384`.
> - Better Unicode support in twisted.internet.reactor.spawnProcess, especially on Windows on Python 3.6.
> - More Python 3 porting in Conch, and more under-the-hood changes to facilitate a Twisted-wide jump to new-style classes only on Python 2 in 2018/2019. This release has also been tested on Python 3.6 on Linux.
> - Lots of deprecated code removals, to make a sleeker, less confusing Twisted.
> - 60+ closed tickets.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted <https://pypi.python.org/pypi/Twisted>> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads <http://twistedmatrix.com/trac/wiki/Downloads>>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS <https://github.com/twisted/twisted/blob/twisted-17.1.0/NEWS>>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!
> 
> 
> Thanks all!  Great to see the troubles of 16.7 mostly behind us.

Yes, thanks!  Lots of good stuff in this release!

> I do hope there will be at 17.1.1 soon for <https://twistedmatrix.com/trac/ticket/9031 <https://twistedmatrix.com/trac/ticket/9031>> and particularly <https://twistedmatrix.com/trac/ticket/9032 <https://twistedmatrix.com/trac/ticket/9032>>.

This is a little outside the normal process, but I added a milestone for these just so we have a thing to track when they're fixed and we should roll them up (and in case anything new appears):

https://twistedmatrix.com/trac/milestone/17.1.1 <https://twistedmatrix.com/trac/milestone/17.1.1>

Something I should note about these regressions; they showed up as soon as Mimic upgraded its dependency: https://github.com/rackerlabs/mimic/pull/734 <https://github.com/rackerlabs/mimic/pull/734>

This suggests to me that we really ought to have a more "active" phase of the release process where someone - let's say, the reviewer of the release ticket - goes out to check a select list of other projects' smoke tests to ensure that the prerelease is at least passing their CI.  For example, I would normally have tested Mimic myself, but I was out of commission with a nasty flu-like thing for a good chunk of the prerelease period, but since I happened to miss that window, well-known projects (heck, treq has its own tests for .testing, and those broke, and it's in the twisted org!) managed to break without getting noticed.

So, while it would be good if user projects reported breakages, we should be checking at least the most obvious parts of the integration ecosystem ourselves as part of the release process.

-glyph



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/ae506a3d/attachment-0002.html>

From mithrandi at mithrandi.net  Wed Feb 15 01:39:33 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 15 Feb 2017 08:39:33 +0000
Subject: [Twisted-Python] Hanging SFTP client operations on server
	disconnection
In-Reply-To: <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
 <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
Message-ID: <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>

On Wed, 15 Feb 2017 at 08:56 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> PS: There is a stray release notes fragment in conch
>
> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature
>
>
> Oops!
>
> Wait; why do you say this is "stray"?
>

It appears to be in the wrong directory (should be in
src/twisted/conch/topfiles/).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/a8e7b07b/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Feb 15 01:43:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 00:43:59 -0800
Subject: [Twisted-Python] Hanging SFTP client operations on server
 disconnection
In-Reply-To: <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>
References: <CAFycZ9c=kN0YEjNTJs5N8ZVa-GU=52ZN5H5qTzE29gL=oaFGVw@mail.gmail.com>
 <03EFB0CD-B67A-4698-983F-A85906957436@twistedmatrix.com>
 <CAMcKhMTkY7a6p1NpGFBzUFBnqJ5w7XXyautjTsWkOqf+YbzjSQ@mail.gmail.com>
Message-ID: <F9725C9F-1248-42BC-B73F-0537AD35C920@twistedmatrix.com>


> On Feb 15, 2017, at 12:39 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Wed, 15 Feb 2017 at 08:56 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
> 
>> PS: There is a stray release notes fragment in conch
>> https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature <https://github.com/twisted/twisted/blob/trunk/src/twisted/conch/8791.feature>
> 
> Oops!
> 
> Wait; why do you say this is "stray"?
> 
> It appears to be in the wrong directory (should be in src/twisted/conch/topfiles/). 

Oh, whoops.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/a2d9d6c6/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Feb 15 06:23:24 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 08:23:24 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
Message-ID: <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>

On Wed, Feb 15, 2017 at 3:39 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 11, 2017, at 5:54 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> On Sat, Feb 11, 2017 at 5:03 AM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
>
>> On behalf of Twisted Matrix Laboratories, I am honoured to announce the
>> release of Twisted 17.1!
>>
>> The highlights of this release are:
>>
>> - twisted.web.client.Agent now supports IPv6! It's also now the primary
>> web client in Twisted, with twisted.web.client.getPage being deprecated in
>> favour of it and Treq.
>> - twisted.web.server has had many cleanups revolving around timing out
>> inactive clients.
>> - twisted.internet.ssl.CertificateOptions has had its `method` argument
>> deprecated, in favour of the new raiseMinimumTo, lowerMaximumSecurityTo,
>> and insecurelyLowerMinimumTo arguments, which take TLSVersion arguments.
>> This allows you to better give a range of versions of TLS you wish to
>> negotiate, rather than forcing yourself to any one version.
>> - twisted.internet.ssl.CertificateOptions will use OpenSSL's
>> MODE_RELEASE_BUFFERS, which will let it free unused memory that was held by
>> idle TLS connections.
>> - You can now call the new twist runner with `python -m twisted`.
>> - twisted.conch.ssh now has some ECDH key exchange support and supports
>> `hmac-sha2-384`.
>> - Better Unicode support in twisted.internet.reactor.spawnProcess,
>> especially on Windows on Python 3.6.
>> - More Python 3 porting in Conch, and more under-the-hood changes to
>> facilitate a Twisted-wide jump to new-style classes only on Python 2 in
>> 2018/2019. This release has also been tested on Python 3.6 on Linux.
>> - Lots of deprecated code removals, to make a sleeker, less confusing
>> Twisted.
>> - 60+ closed tickets.
>>
>> For more information, check the NEWS file (link provided below).
>>
>> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or
>> alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS
>> file is also available at <https://github.com/twisted/tw
>> isted/blob/twisted-17.1.0/NEWS>.
>>
>> Many thanks to everyone who had a part in this release - the supporters
>> of the Twisted Software Foundation, the developers who contributed code as
>> well as documentation, and all the people building great things with
>> Twisted!
>>
>>
> Thanks all!  Great to see the troubles of 16.7 mostly behind us.
>
>
> Yes, thanks!  Lots of good stuff in this release!
>
> I do hope there will be at 17.1.1 soon for <https://twistedmatrix.com/
> trac/ticket/9031> and particularly <https://twistedmatrix.com/
> trac/ticket/9032>.
>
>
> This is a little outside the normal process, but I added a milestone for
> these just so we have a thing to track when they're fixed and we should
> roll them up (and in case anything new appears):
>
> https://twistedmatrix.com/trac/milestone/17.1.1
>
> Something I should note about these regressions; they showed up as soon as
> Mimic upgraded its dependency: https://github.
> com/rackerlabs/mimic/pull/734
>
> This suggests to me that we really ought to have a more "active" phase of
> the release process where someone - let's say, the reviewer of the release
> ticket - goes out to check a select list of other projects' smoke tests to
> ensure that the prerelease is at least passing their CI.  For example, I
> would normally have tested Mimic myself, but I was out of commission with a
> nasty flu-like thing for a good chunk of the prerelease period, but since I
> happened to miss that window, well-known projects (heck, treq has its own
> tests for .testing, and those broke, and it's in the twisted org!) managed
> to break without getting noticed.
>

I wonder about the details of how treq's failures went unnoticed.  Is
development sufficiently inactive that no one looked at CI between the
breakage and the release?  Wasn't that a period of several months?  Or does
it have a Twisted trunk at HEAD build that none of the contributors really pay
attention to?

If the problem is attention, maybe some kind of alerting could be set up so
the folks who are actually working on Twisted have a direct feed of
information that might be related to that work creating regressions?  I
know there are problems with false positives from CI but the dial for
information flow seems to be set a bit too low right now.  Maybe turning it
up for a while and then re-evaluating makes sense.


> So, while it would be good if user projects reported breakages, we should
> be checking at least the *most* obvious parts of the integration
> ecosystem ourselves as part of the release process.
>
>
All other things being equal, it would be better to learn about the
breakage at the time of the breakage rather than at release time (for the
usual reasons).  So I think something like a mailing list for external CI
failures against Twisted trunk at HEAD is a better thing to try than telling
the RM to go look at a bunch of CIs.

Maybe we could even double down on this and host the new list solely on
txlists? :)

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/5cdbc79a/attachment-0002.html>

From mithrandi at mithrandi.net  Wed Feb 15 07:11:38 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 15 Feb 2017 14:11:38 +0000
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
Message-ID: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>

On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <exarkun at twistedmatrix.com>
wrote:

>
> I wonder about the details of how treq's failures went unnoticed.  Is
> development sufficiently inactive that no one looked at CI between the
> breakage and the release?  Wasn't that a period of several months?  Or does
> it have a Twisted trunk at HEAD build that none of the contributors really
> pay attention to?
>

The latter is the case; there are Twisted trunk builds, but they're flagged
as "failures allowed" to avoid disrupting development with transient
breakage. Unfortunately this means that basically nobody ever notices when
they fail. For example, here's a failing build:

https://travis-ci.org/twisted/treq/builds/194691849

I haven't found a good solution to this problem yet in my own projects; I'm
hoping someone else has some ideas?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/d9a112d6/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Feb 15 07:51:36 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 09:51:36 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
Message-ID: <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>

On Wed, Feb 15, 2017 at 9:11 AM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>>
>> I wonder about the details of how treq's failures went unnoticed.  Is
>> development sufficiently inactive that no one looked at CI between the
>> breakage and the release?  Wasn't that a period of several months?  Or does
>> it have a Twisted trunk at HEAD build that none of the contributors really
>> pay attention to?
>>
>
> The latter is the case; there are Twisted trunk builds, but they're
> flagged as "failures allowed" to avoid disrupting development with
> transient breakage. Unfortunately this means that basically nobody ever
> notices when they fail. For example, here's a failing build:
>
> https://travis-ci.org/twisted/treq/builds/194691849
>
> I haven't found a good solution to this problem yet in my own projects;
> I'm hoping someone else has some ideas?
>

Given an arbitrarily powerful CI system, you could do something.

Assume two projects, A and B, with a dependency between them (doesn't
matter which direction, I think; doesn't even have to be one-way though
obviously it should be).

When A changes, do a build of B.  Use the new A and the newest version of B
which had a successful build.  If this build succeeds, A and B are probably
still working well together.  If this build fails, there's a good chance A
just introduced a regression.

Apply the same logic with A and B reversed.

I expect you could implement this on BuildBot.  It might be more realistic
to do something slightly simpler - like pinning the version of B in the
A-changed builds (and vice versa).  This would miss regressions relating to
changes in B introduced after the pinned version - but maybe that's okay
(you could update pinned versions with each release of B or once every few
months or something).  I think you could implement this on something like
travis-ci without *much* difficulty.  Just duplicate (some of) the treq
(for example) travis-ci configuration in Twisted's travis-ci
configuration.  It doesn't sound crazy to say "treq 16.12.0 test suite
should be required to pass for Twisted trunk at HEAD (at least until around
Twisted 17.12, probably?).

And of course there's bound to be noise out of this system, too.  I'd guess
it would be little enough that the result is still valuable but hard to say
for sure without trying...

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/88c67fef/attachment-0002.html>

From exarkun at twistedmatrix.com  Wed Feb 15 11:30:35 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2017 13:30:35 -0500
Subject: [Twisted-Python] Trial & Hypothesis
Message-ID: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>

Hey all,

A few folks had an IRC discussion about improving the trial & hypothesis
experience.  I took some notes and thought I'd share them here in case
anyone else is interested.

We're planning to pick up the discussion next Wednesday.  Feel free to join
in #twisted-dev on Freenode (we might set up a Google Hangout, details will
be on IRC if so).

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/994b7e39/attachment-0002.html>
-------------- next part --------------
* Goals
** Make Twisted / Hypothesis as convenient as Anything Else / Hypothesis.

*** trial doesn't discover "runTest" so Hypothesis stateful tests aren't discovery
**** Make trial discover "runTest"
***** This might break things
***** Also TestLoader.getTestCaseNames is incompatible with test methods without a test_ prefix (so we need a new interface)

**** Make Hypothesis name its test "test_something"
***** Name could be an argument to a stateful TestCase factory

*** trial TestCases have extra helper methods not availabe to Hypothesis stateful tests
**** Make base TestCase class an argument to a stateful TestCase factory

*** setUp / tearDown are called just once even though test body might be called many times; and
*** tests that return Deferred are simply incompatible with Hypothesis
**** Hypothesis has an "executor" hook (eg new_style_executor) that might be a good place to hang reactor knowledge
**** this could also be a place to hang better setUp / tearDown handling
***** this would be incompatible with current operation which has separate setup_example/teardown_example hooks
***** and there's still only a single TestCase instance having methods called on it repeatedly which could be surprising
****** `trial -u` does this already though, so maybe less so for trial users
***** but it might be better, anyway

*** Hypothesis does a lot of work within a single test method.
**** A consequence is a ton of log data mixed together from runs with different values.
***** It would be nice to be able to see minimal logging from just the most shrunk iteration.
**** Maybe there could be a custom HypothesisSuite that knows how repeatedly instantiate a TestCase and run it more normally
***** This replaces the loop inside a test_ method with a loop around something more like TestCase().run()
****** might solve many problems at once
****** confuses things like `trial -j`
****** causes each test run to have a different number of tests, which is weird

From glyph at twistedmatrix.com  Wed Feb 15 22:47:17 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:47:17 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
Message-ID: <15EEA9D1-9FC3-41D1-9F47-9BAB01415959@twistedmatrix.com>


> On Feb 15, 2017, at 6:11 AM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> On Wed, 15 Feb 2017 at 15:23 Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> 
> I wonder about the details of how treq's failures went unnoticed.  Is development sufficiently inactive that no one looked at CI between the breakage and the release?  Wasn't that a period of several months?  Or does it have a Twisted trunk at HEAD build that none of the contributors really pay attention to?
> 
> The latter is the case; there are Twisted trunk builds, but they're flagged as "failures allowed" to avoid disrupting development with transient breakage. Unfortunately this means that basically nobody ever notices when they fail. For example, here's a failing build:
> 
> https://travis-ci.org/twisted/treq/builds/194691849 <https://travis-ci.org/twisted/treq/builds/194691849>
> 
> I haven't found a good solution to this problem yet in my own projects; I'm hoping someone else has some ideas?

Indeed, I probably saw these failures myself; the issue is that there's no point in the process where someone has to care.  When you're trying to merge a PR, you care that the tests are failing for that PR, because making them pass is a part of the process.  But, other stuff that's changed upstream is ancillary, even if you sort of abstractly know it's a problem.  I suspect even our release manager, who also maintains treq on occasion, might have seen the failures at some point, but not managed to connect them.

If we could get requires.io <http://requires.io/> to send "--pre" requirements PRs, that might be enough; I notice immediately when dependencies actually break on production PyPI for Mimic, but there's no PR for prerelease dependency versions.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/e6d4b07f/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Feb 15 22:47:44 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:47:44 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
Message-ID: <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>


> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> It doesn't sound crazy to say "treq 16.12.0 test suite should be required to pass for Twisted trunk at HEAD (at least until around Twisted 17.12, probably?).

That seems like a reasonable requirement, yes.

-g

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170215/1d5741d6/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Feb 15 22:49:21 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2017 21:49:21 -0800
Subject: [Twisted-Python] Trial & Hypothesis
In-Reply-To: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>
References: <CAEeXt4PRCLic9vhOGZJ6WXeE-KB5AM5JV1CmBdE0tsd5AG6GGA@mail.gmail.com>
Message-ID: <F2A4237D-59FE-4108-A5AF-944A1A67217E@twistedmatrix.com>


> On Feb 15, 2017, at 10:30 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hey all,
> 
> A few folks had an IRC discussion about improving the trial & hypothesis experience.  I took some notes and thought I'd share them here in case anyone else is interested.
> 
> We're planning to pick up the discussion next Wednesday.  Feel free to join in #twisted-dev on Freenode (we might set up a Google Hangout, details will be on IRC if so).

I don't have much to add here but I just want to say I'm super excited that this work is ongoing and look forward to using Twisted + Hyptothesis on something in the near future.

-g





From tobias.oberstein at crossbario.com  Thu Feb 16 14:02:22 2017
From: tobias.oberstein at crossbario.com (Tobias Oberstein)
Date: Thu, 16 Feb 2017 22:02:22 +0100
Subject: [Twisted-Python] ANN: txaio-etcd
Message-ID: <6bb26dfe-e642-1cf3-8b6a-357adb644e3f@crossbario.com>

Hi,

txaio-etcd is a etcd3 client library for Twisted that is fully 
asynchronous and pure Python:

https://github.com/crossbario/txaio-etcd

It also exposes advanced features like watching keys, transactions and 
leases:

https://github.com/crossbario/txaio-etcd/tree/master/examples

Releases are on PyPI

https://pypi.python.org/pypi/txaioetcd

The library is reasonably complete and working, but definitely alpha 
status as it hasn't seen much use from app code still.

Hence, any usage and testing feedback, API change requests or PRs are 
welcome!

Cheers,
/Tobias



From exarkun at twistedmatrix.com  Fri Feb 17 10:48:43 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Fri, 17 Feb 2017 12:48:43 -0500
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
 <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
Message-ID: <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>

On Thu, Feb 16, 2017 at 12:47 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
> It doesn't sound crazy to say "treq 16.12.0 test suite should be required
> to pass for Twisted trunk at HEAD (at least until around Twisted 17.12,
> probably?).
>
>
> That seems like a reasonable requirement, yes.
>
>
Here's *a* take on that: https://tm.tl/#9042 /
https://github.com/twisted/twisted/pull/710

I didn't pin treq to 16.12.0 but instead let it float on the most recent
release.  That seems safe as long as treq takes care not to issue a release
that contains changes that makes it incompatible with Twisted trunk at HEAD.
 treq CI tests against Twisted trunk at HEAD so I think this is low risk.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170217/ac50d646/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Feb 17 19:27:17 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 17 Feb 2017 18:27:17 -0800
Subject: [Twisted-Python] Twisted 17.1 Release Announcement
In-Reply-To: <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>
References: <6EDCD2D6-C17E-46A6-8C80-71E4C0D0AC8C@atleastfornow.net>
 <CAEeXt4Mzq6XpE+aSP6D=MzRtYtpUoezOqBNrLhj9yrg0J1z6uw@mail.gmail.com>
 <42F826B7-2644-4159-9AF3-2E1623A76778@twistedmatrix.com>
 <CAEeXt4PcfyCpF=4vn60vVVfnAO0yn2Wveaz+k0804CPy1=KOZw@mail.gmail.com>
 <CAMcKhMTkaUwT8q75_wxL41mU-BUCAc=qVFgvo5_Z3qWr_Bu-bQ@mail.gmail.com>
 <CAEeXt4PinfD6GvwHRr1+s51eo6mVsvF--+Q6KvSubAHWXq0bcA@mail.gmail.com>
 <B557C20E-5B5C-437D-8793-51193D049750@twistedmatrix.com>
 <CAEeXt4M2=QX6nB4g8stXG7h_oXFVnsG2JfdpMVWtxSLVdsqyXw@mail.gmail.com>
Message-ID: <64A04964-9302-4A2E-B1DD-07DE4359119D@twistedmatrix.com>


> On Feb 17, 2017, at 9:48 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Thu, Feb 16, 2017 at 12:47 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 15, 2017, at 6:51 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
>> 
>> It doesn't sound crazy to say "treq 16.12.0 test suite should be required to pass for Twisted trunk at HEAD (at least until around Twisted 17.12, probably?).
> 
> That seems like a reasonable requirement, yes.
> 
> 
> Here's a take on that: https://tm.tl/#9042 <https://tm.tl/#9042> / https://github.com/twisted/twisted/pull/710 <https://github.com/twisted/twisted/pull/710>
> 
> I didn't pin treq to 16.12.0 but instead let it float on the most recent release.  That seems safe as long as treq takes care not to issue a release that contains changes that makes it incompatible with Twisted trunk at HEAD.  treq CI tests against Twisted trunk at HEAD so I think this is low risk.

Yes.  This sounds good to me.  We might want to add one or two other downstream projects as well (starting with Klein), but Treq is a really good start.  Perhaps we should ask other projects (Scrapy? Matrix?) to send us PRs to add some subset of their tests to this smoke test.

Frankly if this integrated a fix for the MemoryReactor behavior and was therefore passing I'd just land it :). Do you want to make it allow_fail?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170217/5b2a68c9/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Feb 18 12:25:47 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 11:25:47 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <1754891486027057@web35j.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
Message-ID: <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>


> On Feb 2, 2017, at 1:17 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Hello everyone! I wrote Twisted-based TCP server which is capable of running in several relatively different modes. When mode switch is needed, I would like the server to restart itself by some means, for it to read new mode from configuration file and create corresponding implementation. Also I wanted the restart to occur without re-running twistd process, because it seems to me more appropriate for Linux daemon.

Hi Roman,

Sorry it took a while to get to this one :).

If your solution is working for you, then it's fine.  You've correctly understood the API associated with IServiceCollection and your implementation (at least at first glance, I don't have time to test it exhaustively :)) is correct.

However, there's a more philosophical question as well: if you really want to re-start from scratch, what exactly are you shutting down and starting up again?  Wouldn't you want to be able to load new code?  Simply stopping and starting objects won't re-initialize the process from the beginning, only from some indeterminate middle state where parts of the program are already set up; this doesn't have the usual desired effect of a "restart" where potentially unknown or buggy state is cleared away.

You may want to consider simply calling execv https://docs.python.org/2.7/library/os.html#os.execv <https://docs.python.org/2.7/library/os.html#os.execv> with [sys.executable] + sys.argv rather than trying to do this in terms of Twisted's APIs.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170218/6f8c1db3/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Feb 18 16:19:33 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 18 Feb 2017 18:19:33 -0500
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
Message-ID: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>

On Sat, Feb 18, 2017 at 2:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 2, 2017, at 1:17 AM, Роман Мещеряков <romanmescheryakov at yandex.ru>
> wrote:
>
> *Hello everyone! I wrote Twisted-based TCP server which is capable of
> running in several relatively different modes. When mode switch is needed,
> I would like the server to restart itself by some means, for it to read new
> mode from configuration file and create corresponding implementation. Also
> I wanted the restart to occur without re-running twistd process, because it
> seems to me more appropriate for Linux daemon.*
>
>
> Hi Roman,
>
> Sorry it took a while to get to this one :).
>
> If your solution is working for you, then it's fine.  You've correctly
> understood the API associated with IServiceCollection and your
> implementation (at least at first glance, I don't have time to test it
> exhaustively :)) is correct.
>
> However, there's a more philosophical question as well: if you really want
> to *re-start* from scratch, what exactly are you shutting down and
> starting up again?  Wouldn't you want to be able to load new code?  Simply
> stopping and starting objects won't re-initialize the process from the
> beginning, only from some indeterminate middle state where parts of the
> program are already set up; this doesn't have the usual desired effect of a
> "restart" where potentially unknown or buggy state is cleared away.
>
> You may want to consider simply calling execv https://docs.python.org/
> 2.7/library/os.html#os.execv with [sys.executable] + sys.argv rather than
> trying to do this in terms of Twisted's APIs.
>

Or better yet.  Don't be afraid to just exit.  Your process is being
managed by a supervisor with a rich feature set - like easily controlled
re-restart behavior, right (If not, what do you do when your daemon simply
*crashes*)?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170218/e9ce5e7e/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Feb 18 16:32:12 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 15:32:12 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
Message-ID: <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>


> On Feb 18, 2017, at 3:19 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
>  (If not, what do you do when your daemon simply crashes)?


Twisted programs can crash!??!

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170218/0b837ec1/attachment-0002.html>

From exarkun at twistedmatrix.com  Sat Feb 18 16:33:41 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sat, 18 Feb 2017 18:33:41 -0500
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <E7BA47FA-8302-4E36-9CB8-52766BFF1D4D@twistedmatrix.com>
Message-ID: <CAEeXt4OiToHEp2_21bm1OAAmnAEKAqBDf56Qo+i8KK_4pe9T9A@mail.gmail.com>

On Sat, Feb 18, 2017 at 6:32 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 18, 2017, at 3:19 PM, Jean-Paul Calderone <
> exarkun at twistedmatrix.com> wrote:
>
>  (If not, what do you do when your daemon simply *crashes*)?
>
>
>
> Twisted programs can crash!??!
>

The Linux OOM killer is pretty crazy, man.

Jean-Paul


>
> -g
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170218/4a912dcb/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Feb 18 16:35:09 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 18 Feb 2017 15:35:09 -0800
Subject: [Twisted-Python] (Potential) Twisted sprint in San Francisco -
 anyone want to help organize?
Message-ID: <BC5BC218-2999-47AF-A49E-76A724AEF00E@twistedmatrix.com>

Hi all,

For those of you that live in the SF bay area, the SF Python Meetup is holding a sprint in almost exactly one month from today: https://www.meetup.com/sfpython/events/234926664/ <https://www.meetup.com/sfpython/events/234926664/>

Personally, I'm a bit tapped out at the moment in terms of spare time and brainpower to help organize things, but I do hope some enterprising member of the project can pick this up and help us have a great sprint there.  I can probably show up and write some code :-).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170218/73b63690/attachment-0002.html>

From trac at twistedmatrix.com  Sun Feb 19 00:05:18 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 19 Feb 2017 07:05:18 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1487487918.89.8849560237410878033@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170219/3ac989fe/attachment-0002.html>

From dstainton415 at gmail.com  Sun Feb 19 13:56:36 2017
From: dstainton415 at gmail.com (David Stainton)
Date: Sun, 19 Feb 2017 20:56:36 +0000
Subject: [Twisted-Python] announcing: txmix, a twisted python mixnet library
Message-ID: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>

Hi. I'd like to announce txmix, a library for writing mixnets in python.

https://github.com/applied-mixnetworks/txmix

txmix is GPL3 licensed and currently depends on:
sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
and Tor Project's chutney (for integration tests).

txmix allows you to write mixnets with reduced code complexity and
transport agnosticism... however I've choosen to focus my development
efforts on the Tor onion transport for several reasons, the onion
transport has some properties which the UDP transport does not:

- reliability
- forward secrecy
- NAT penetration

Additionally the Tor anonymity properties are a welcome bonus since
they aren't really overlapping with those of the mixnet, they are
vulnerable to different types of attacks and accomodate for totally
different threat models.

Currently txmix has some integration tests that use chutney to spin up
a local 25 relay tor network; builds a mixnet using onion services
as the transport and then tests functionality by sending and receiving
messages on the mixnet.


future development
------------------

- txmix could certainly be used to write various kinds of mixnets,
however, we are missing a PKI. Without some kind of public key
infrastructure how will mix clients learn about mix public keys?

- sphixmixcrypto library needs improvements that would allow us
to specify more message types such as dummy/cover traffic message
and heartbeat messages. These of course are essential for the defense
against certain known active attacks against some mix types.


questions, code review and pull requests welcome.


David Stainton



From glyph at twistedmatrix.com  Sun Feb 19 19:03:36 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sun, 19 Feb 2017 18:03:36 -0800
Subject: [Twisted-Python] announcing: txmix,
 a twisted python mixnet library
In-Reply-To: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
References: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
Message-ID: <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>

> On Feb 19, 2017, at 12:56, David Stainton <dstainton415 at gmail.com> wrote:
> 
> Hi. I'd like to announce txmix, a library for writing mixnets in python.
> 
> https://github.com/applied-mixnetworks/txmix
> 
> txmix is GPL3 licensed and currently depends on:
> sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
> and Tor Project's chutney (for integration tests).
> 
> txmix allows you to write mixnets with reduced code complexity and
> transport agnosticism... however I've choosen to focus my development
> efforts on the Tor onion transport for several reasons, the onion
> transport has some properties which the UDP transport does not:
> 
> - reliability
> - forward secrecy
> - NAT penetration
> 
> Additionally the Tor anonymity properties are a welcome bonus since
> they aren't really overlapping with those of the mixnet, they are
> vulnerable to different types of attacks and accomodate for totally
> different threat models.
> 
> Currently txmix has some integration tests that use chutney to spin up
> a local 25 relay tor network; builds a mixnet using onion services
> as the transport and then tests functionality by sending and receiving
> messages on the mixnet.
> 
> 
> future development
> ------------------
> 
> - txmix could certainly be used to write various kinds of mixnets,
> however, we are missing a PKI. Without some kind of public key
> infrastructure how will mix clients learn about mix public keys?
> 
> - sphixmixcrypto library needs improvements that would allow us
> to specify more message types such as dummy/cover traffic message
> and heartbeat messages. These of course are essential for the defense
> against certain known active attacks against some mix types.
> 
> 
> questions, code review and pull requests welcome.
> 
> 
> David Stainton

Very cool.  To be perfectly honest I don't understand most of this in a lot of detail (starting with what a "mixnet" is), but thanks for using Twisted to do it :).

-glyph


From dstainton415 at gmail.com  Sun Feb 19 22:15:41 2017
From: dstainton415 at gmail.com (David Stainton)
Date: Mon, 20 Feb 2017 05:15:41 +0000
Subject: [Twisted-Python] announcing: txmix,
	a twisted python mixnet library
In-Reply-To: <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>
References: <CAFN1edrjhRHko1J3f1RYuc6cD5A=0rvoW+H__5aV3D0EnDh06A@mail.gmail.com>
 <4DD040C2-2926-4860-8AB9-FE262520246A@twistedmatrix.com>
Message-ID: <CAFN1edqn=ycqde=6ByfLeuFtvt=_u6pk4=66yB6PDLjW9DTu9A@mail.gmail.com>

Hi Glyph,

Yeah hopefully I'll be using Automat soon as well :-)

A mixnet is an anonymity network which means it provides sender and
receiver anonymity (location hiding).
Mixnets have some very interesting properties such as:
- message oriented
- high latency
- not vulnerable to global passive adversary

Unlike tor which is stream oriented, low latency and most definitely
vulnerable to global passive adversaries.
(Mixnets were invented in 1981 by David Chaum, there's a lot of
research papers but not a lot of examples we can use.)

It's funny that anonymity properties make writing txmix easier because
there is no addressing information for received mixnet messages ;-p
whereas core twisted is built very carefully to preserve the address
of received connections and datagrams.

My favorite mixnet introductions include:
- https://crypto.is/blog/mix_and_onion_networks
- "Why I'm not an Entropist"
https://www.freehaven.net/anonbib/cache/entropist.pdf
- "Sleeping dogs lie on a bed of onions but wake when mixed"
https://petsymposium.org/2011/papers/hotpets11-final10Syverson.pdf


Cheers,

David


On Mon, Feb 20, 2017 at 2:03 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>> On Feb 19, 2017, at 12:56, David Stainton <dstainton415 at gmail.com> wrote:
>>
>> Hi. I'd like to announce txmix, a library for writing mixnets in python.
>>
>> https://github.com/applied-mixnetworks/txmix
>>
>> txmix is GPL3 licensed and currently depends on:
>> sphinxmixcrypto, Twisted, txtorcon, attrs, eliot
>> and Tor Project's chutney (for integration tests).
>>
>> txmix allows you to write mixnets with reduced code complexity and
>> transport agnosticism... however I've choosen to focus my development
>> efforts on the Tor onion transport for several reasons, the onion
>> transport has some properties which the UDP transport does not:
>>
>> - reliability
>> - forward secrecy
>> - NAT penetration
>>
>> Additionally the Tor anonymity properties are a welcome bonus since
>> they aren't really overlapping with those of the mixnet, they are
>> vulnerable to different types of attacks and accomodate for totally
>> different threat models.
>>
>> Currently txmix has some integration tests that use chutney to spin up
>> a local 25 relay tor network; builds a mixnet using onion services
>> as the transport and then tests functionality by sending and receiving
>> messages on the mixnet.
>>
>>
>> future development
>> ------------------
>>
>> - txmix could certainly be used to write various kinds of mixnets,
>> however, we are missing a PKI. Without some kind of public key
>> infrastructure how will mix clients learn about mix public keys?
>>
>> - sphixmixcrypto library needs improvements that would allow us
>> to specify more message types such as dummy/cover traffic message
>> and heartbeat messages. These of course are essential for the defense
>> against certain known active attacks against some mix types.
>>
>>
>> questions, code review and pull requests welcome.
>>
>>
>> David Stainton
>
> Very cool.  To be perfectly honest I don't understand most of this in a lot of detail (starting with what a "mixnet" is), but thanks for using Twisted to do it :).
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From romanmescheryakov at yandex.ru  Mon Feb 20 01:58:29 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Mon, 20 Feb 2017 11:58:29 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
Message-ID: <18715221487581109@web25h.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/44217824/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 20 02:02:14 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 01:02:14 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <18715221487581109@web25h.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
Message-ID: <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>


> On Feb 20, 2017, at 00:58, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
>  
> Hi everyone,
>  
> The answers are below
>  
> -- 
> Kind regards, Roman Mescheryakov
>  
>  
> 19.02.2017, 02:21, "Jean-Paul Calderone" <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>>:
>> On Sat, Feb 18, 2017 at 2:25 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>>  
>>> On Feb 2, 2017, at 1:17 AM, Роман Мещеряков <romanmescheryakov at yandex.ru <mailto:romanmescheryakov at yandex.ru>> wrote:
>>>  
>>> Hello everyone! I wrote Twisted-based TCP server which is capable of running in several relatively different modes. When mode switch is needed, I would like the server to restart itself by some means, for it to read new mode from configuration file and create corresponding implementation. Also I wanted the restart to occur without re-running twistd process, because it seems to me more appropriate for Linux daemon.
>> 
>> Hi Roman,
>>  
>> Sorry it took a while to get to this one :).
>>  
>> If your solution is working for you, then it's fine.  You've correctly understood the API associated with IServiceCollection and your implementation (at least at first glance, I don't have time to test it exhaustively :)) is correct.
>>  
>> However, there's a more philosophical question as well: if you really want to re-start from scratch, what exactly are you shutting down and starting up again?  Wouldn't you want to be able to load new code?  Simply stopping and starting objects won't re-initialize the process from the beginning, only from some indeterminate middle state where parts of the program are already set up; this doesn't have the usual desired effect of a "restart" where potentially unknown or buggy state is cleared away.
>>  
>> You may want to consider simply calling execv https://docs.python.org/2.7/library/os.html#os.execv <https://docs.python.org/2.7/library/os.html#os.execv> with [sys.executable] + sys.argv rather than trying to do this in terms of Twisted's APIs.
>  
> You are right, Glyph, using os.execv would be more simple, reliable and straightforward way of achieving my goal. The only thing that bothers me due to lack of Linux experience: is it OK to os.execv inside daemon process? Because I run my process using twistd, not python directly.

If you're actually daemonizing ('twistd' without '-n') then there might be a small issue.  However, a modern best practice is to never daemonize; this is why the new `twist` runner (which you should probably switch to) doesn't daemonize and expects your supervisor to handle backgrounding.

>>  
>> Or better yet.  Don't be afraid to just exit.  Your process is being managed by a supervisor with a rich feature set - like easily controlled re-restart behavior, right (If not, what do you do when your daemon simply crashes)?
>>  
> 
> Well, in fact I'm in the development stage now and did't have time to deal with this question yet :) As of now I understand very little about daemons and their supervisors (I belive it is systemd for Raspbian...).

Yes, systemd will do this.

> Jean-Paul and Glyph, thank you for guiding me in the right direction! :)
>  
>  

Happy to help!

-g

>> Jean-Paul
>>  
>> ,
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>_______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/02518b85/attachment-0002.html>

From commercials24 at yahoo.de  Mon Feb 20 06:02:14 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Mon, 20 Feb 2017 14:02:14 +0100
Subject: [Twisted-Python] trial cant find my class, example from twisted docs
Message-ID: <1487595734.4573.13.camel@yahoo.de>

hi,


up to now ive only used the python unittest for my code, but now i
would also like to test the twisted part.


so i followed:
http://twistedmatrix.com/documents/current/core/howto/trial.html


but i get this error:
(venv) julius at t560:~/code/python/twisted/basics$ trial calculus
calculus
...                                                            [ERROR]

=======================================================================
========
[ERROR]
Traceback (most recent call last):
  File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/trial/runner.py", line 781, in loadByName
    return self.suiteFactory([self.findByName(name, recurse=recurse)])
  File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/trial/runner.py", line 710, in findByName
    obj = reflect.namedAny(name)
  File
"/home/julius/code/python/twisted/basics/calculus/venv/lib/python3.5/si
te-packages/twisted/python/reflect.py", line 306, in namedAny
    raise ModuleNotFound("No module named %r" % (name,))
twisted.python.reflect.ModuleNotFound: No module named 'calculus'

calculus
---------------------------------------------------------------------
----------
Ran 1 tests in 0.024s

FAILED (errors=1)





heres how my calculus directory looks like:
find . | grep -v './venv/'
.
./__pycache__
./__pycache__/__init__.cpython-35.pyc
./test
./test/test_base_1.py
./test/__init__.py
./venv
./__init__.py
./base_1.py
./__init__.pyc



venv contains the virtualenv created by "virtualenv -p /usr/bin/python3
venv"


the __init__.py files are empty and test_base_1.py / base_1.py contains
what is shown in the tutorial.


any idea why this does not work?



From hawkowl at atleastfornow.net  Mon Feb 20 14:46:51 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Tue, 21 Feb 2017 08:46:51 +1100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
Message-ID: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>

Hi everyone!

Currently, Twisted supports five Python versions. These are 2.7, 3.3, 3.4,
3.5, and now 3.6. This is more Python versions than Twisted has ever really
supported in the past, and even though it is great to support a lot of
runtimes, it is becoming a greater burden on Twisted to support so many.

The major reasons for this is that newer Python 3 versions include useful
features (such as % formatting for bytes) that earlier ones do not. This
leads us to having two, or sometimes three, ways of doing something - the
Python 2 way, the early Python 3 way, and the new Python 3 way. This
introduces complexity (and bugs!) and means we can't really take advantage
of anything nice Python 3 gives us in the future, as we still remain
compatible with 3.3 and 3.4.

As such, I would like to remove support for these Python versions. Using
recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/) we
can infer that Python 3.3 is on the whole uncommon, despite it being the
default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption
of new major versions of Python 3 (Python 3.5 was barely a year old by the
time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the
latest two or so are worth supporting.

The other rationale I have for this is that we no longer have the problem
of CentOS 6-style Python 2.6 being put into new production because it's
what people ran -- the Brave New World of Docker and containerisation puts
us in a different position than we were with Python 2.6. Although this is
purely anecdotal, it appears lots of Python 3 installations are not through
the operating system (due to how slow the cycles are, and the proliferation
of PPAs and Docker containers), and therefore being tied to whatever
current OSs support is not doing any Python 3 users a real service.

With this rationale, I propose that the next version of Twisted (most
likely 17.3) will be the last to support Python 3.3. The question of Python
3.4 support is something that will need further discussion (where 3.3 just
plain has the writing on the wall), but I believe a removal of support not
long after is reasonable, considering the 3.4 installed base is smaller
than that of 2.6.

Thoughts?

- Amber Brown, Release Owl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/41838b2d/attachment-0002.html>

From donald at stufft.io  Mon Feb 20 15:03:03 2017
From: donald at stufft.io (Donald Stufft)
Date: Mon, 20 Feb 2017 17:03:03 -0500
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>


> On Feb 20, 2017, at 4:46 PM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. 
> 


FWIW, we’ve considered dropping support for 3.3 in pip and basically the only reason we didn’t was because it was still technically supported by upstream. I very much doubt that Twisted is going to have a problem dropping 3.3.

—
Donald Stufft



-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/e8aa3b1f/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 20 19:16:31 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 18:16:31 -0800
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <1487595734.4573.13.camel@yahoo.de>
References: <1487595734.4573.13.camel@yahoo.de>
Message-ID: <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>


> On Feb 20, 2017, at 5:02 AM, steven meiers <commercials24 at yahoo.de> wrote:
> 
> any idea why this does not work?

Most likely you are being bitten by the recent change to not add '.' to sys.path automatically.

Does `PYTHONPATH=. trial ...` run your code as expected?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/0cee150f/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 20 19:21:15 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 20 Feb 2017 18:21:15 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <7F779CA2-2182-424E-916D-0C87E5496112@stufft.io>
Message-ID: <0C933050-8E4D-4BA0-A611-B33A1D51DFC5@twistedmatrix.com>


> On Feb 20, 2017, at 2:03 PM, Donald Stufft <donald at stufft.io> wrote:
> 
> 
>> On Feb 20, 2017, at 4:46 PM, Amber Brown <hawkowl at atleastfornow.net <mailto:hawkowl at atleastfornow.net>> wrote:
>> 
>> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. 
>> 
> 
> 
> FWIW, we’ve considered dropping support for 3.3 in pip and basically the only reason we didn’t was because it was still technically supported by upstream. I very much doubt that Twisted is going to have a problem dropping 3.3.

Thanks for this data point, Donald.

Personally I think we should drop 3.3 pretty soon.  The only reason it's even remotely interesting is that it is the only supported pypy version of py3, but from what I've heard it's already better to just use the nightly builds of the 3.5 branch.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/592e1881/attachment-0002.html>

From rodrigc at crodrigues.org  Mon Feb 20 19:32:21 2017
From: rodrigc at crodrigues.org (Craig Rodrigues)
Date: Mon, 20 Feb 2017 18:32:21 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <CAG=rPVe6TUxBSAN3woagcN43-+M_0Ocs_d8HpCoWuaqZ5OW5dQ@mail.gmail.com>

On Mon, Feb 20, 2017 at 1:46 PM, Amber Brown <hawkowl at atleastfornow.net>
wrote:

>
> With this rationale, I propose that the next version of Twisted (most
> likely 17.3) will be the last to support Python 3.3. The question of Python
> 3.4 support is something that will need further discussion (where 3.3 just
> plain has the writing on the wall), but I believe a removal of support not
> long after is reasonable, considering the 3.4 installed base is smaller
> than that of 2.6.
>
>
This sounds OK to me.
Up until this year, large parts of Twisted didn't work with Python 3 at all,
so I don't think there are many Python 3.3 Twisted users out there.

--
Craig
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170220/5f8bb390/attachment-0002.html>

From hs at ox.cx  Tue Feb 21 01:27:19 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 21 Feb 2017 09:27:19 +0100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>

In general I'd say we should take into account LTS releases. 

OTOH Python 3 adoption is still rather low and tends toward newer versions with fast upgrading.

There's deadsnakes and there's SC and there's Docker.  I think it's totally fair to drop everything before 3.5 since that gives us nice goodies that make a lot of sense for Twisted.

A volunteer driven project gets to choose their own priorities and there's no entitlement to shiny new features on old Pythons. 

3.3 should die immediately.  3.4 should follow ASAP.

Sent from my phone apologies for top posting.

> Am 20.02.2017 um 22:46 schrieb Amber Brown <hawkowl at atleastfornow.net>:
> 
> Hi everyone!
> 
> Currently, Twisted supports five Python versions. These are 2.7, 3.3, 3.4, 3.5, and now 3.6. This is more Python versions than Twisted has ever really supported in the past, and even though it is great to support a lot of runtimes, it is becoming a greater burden on Twisted to support so many.
> 
> The major reasons for this is that newer Python 3 versions include useful features (such as % formatting for bytes) that earlier ones do not. This leads us to having two, or sometimes three, ways of doing something - the Python 2 way, the early Python 3 way, and the new Python 3 way. This introduces complexity (and bugs!) and means we can't really take advantage of anything nice Python 3 gives us in the future, as we still remain compatible with 3.3 and 3.4.
> 
> As such, I would like to remove support for these Python versions. Using recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/) we can infer that Python 3.3 is on the whole uncommon, despite it being the default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption of new major versions of Python 3 (Python 3.5 was barely a year old by the time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the latest two or so are worth supporting.
> 
> The other rationale I have for this is that we no longer have the problem of CentOS 6-style Python 2.6 being put into new production because it's what people ran -- the Brave New World of Docker and containerisation puts us in a different position than we were with Python 2.6. Although this is purely anecdotal, it appears lots of Python 3 installations are not through the operating system (due to how slow the cycles are, and the proliferation of PPAs and Docker containers), and therefore being tied to whatever current OSs support is not doing any Python 3 users a real service.
> 
> With this rationale, I propose that the next version of Twisted (most likely 17.3) will be the last to support Python 3.3. The question of Python 3.4 support is something that will need further discussion (where 3.3 just plain has the writing on the wall), but I believe a removal of support not long after is reasonable, considering the 3.4 installed base is smaller than that of 2.6. 
> 
> Thoughts?
> 
> - Amber Brown, Release Owl
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/a0ca46ab/attachment-0002.html>

From commercials24 at yahoo.de  Tue Feb 21 03:08:33 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Tue, 21 Feb 2017 11:08:33 +0100
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
References: <1487595734.4573.13.camel@yahoo.de>
 <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
Message-ID: <1487671713.4573.15.camel@yahoo.de>

Am Montag, den 20.02.2017, 18:16 -0800 schrieb Glyph Lefkowitz:
> > On Feb 20, 2017, at 5:02 AM, steven meiers <commercials24 at yahoo.de>
> > wrote:
> > 
> > any idea why this does not work?
> 
> Most likely you are being bitten by the recent change to not add '.'
> to sys.path automatically.
> 
> Does `PYTHONPATH=. trial ...` run your code as expected?
> 
> 

Yes, thanks very much. this kind of change really makes one doubt ones
abilities.

Should i write a ticket for this?



greetings



From hs at ox.cx  Tue Feb 21 03:34:05 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 21 Feb 2017 11:34:05 +0100
Subject: [Twisted-Python] trial cant find my class,
 example from twisted docs
In-Reply-To: <1487671713.4573.15.camel@yahoo.de>
References: <1487595734.4573.13.camel@yahoo.de>
 <DFB62EA4-57CA-4770-9C7E-E40FED3D4349@twistedmatrix.com>
 <1487671713.4573.15.camel@yahoo.de>
Message-ID: <E70DDC50-9E9C-4CD9-A2D6-89AA98148999@ox.cx>

>>> any idea why this does not work?
>> 
>> Most likely you are being bitten by the recent change to not add '.'
>> to sys.path automatically.
>> 
>> Does `PYTHONPATH=. trial ...` run your code as expected?
>> 
> Yes, thanks very much. this kind of change really makes one doubt ones
> abilities.
> 
> Should i write a ticket for this?

No, you should start installing your packages and  applications in dev lest packaging errors come back in prod and bite you. :)

More on that: https://hynek.me/articles/testing-packaging/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/9eeb846b/attachment-0002.html>

From twisted-python at 2xlp.com  Tue Feb 21 09:31:10 2017
From: twisted-python at 2xlp.com (jonathan vanasco)
Date: Tue, 21 Feb 2017 11:31:10 -0500
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=
 -bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>

Dropping 3.3 makes sense, as does deprecating 3.4

The only thing I suggest/request is a webpage (and possibly txtfile in the source) that lists the supported Python versions.  When people runs into issues, finding this info quickly is just so useful.

e.g.
	Version			Python2			Python3
	Twisted 17.3  	2.x+				3.x+
	Twisted 17.1  	2.x+				3.x+

I helped build the first version of a similar grid for sqlalchemy - http://www.sqlalchemy.org/download.html

Mike rewrote most of it over time, but the concept is the same -- as part of the build/deploy process, the grid is automatically generated by querying PyPI for the raw data ( https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default )


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/00f8627b/attachment-0002.html>

From dcurtis at savioke.com  Tue Feb 21 10:28:27 2017
From: dcurtis at savioke.com (Dave Curtis)
Date: Tue, 21 Feb 2017 09:28:27 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04 alternatives
Message-ID: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>

Hi, so for my first post to the list I am going to ask a somewhat lame
question.  Apologies if this is not the right list -- clues welcome.

I am doing a deploy of a server written in Python3 on Ubuntu 14.04.  (14.04
for various reasons that are uninteresting to the list but DevOps has
good/historical/hysterical reasons...)

So my problem is that while my protocol stack spins up very nicely and
trivially easy using the twistd daemon, the standard python3-twisted
package for 14.04 is waaaay behind and doesn't include twistd (!), and I
haven't found a good backport.  I'd also like to avoid doing things that
make life hard for DevOps, such as pip3 installing and risking a package
manager fight.

So some options:
- Is there a reliable backport of the python3-twisted package for 14.04?
Google is failing me on that one.
- All I need is the most basic twistd functionality.  Perhaps I should spin
up my own by snarfing the code out of the twisted source repo.  I can
package this with my stuff temporarily and get on with life.  Clues to the
relevant parts of the repo welcome, I haven't poked around much in Twisted
sources so need a road map.
- Perhaps I should create my own backport for Ubuntu 14.04 of the current
python3-twisted .deb.  (This is probably not the right list to ask, but I'm
happy to dereference a pointer.)

This is a short-term problem for me, we are transitioning to 16.04 soon,
but the process is driven by other parts of the software stack. So I don't
want to over-invest.  I'm looking for a reasonable band-aid.

Thanks!
-dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/143ecddc/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb 21 13:46:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 21 Feb 2017 12:46:59 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV= -bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <C579C4E1-F5CB-4B5E-8B8F-8C90E6280885@2xlp.com>
Message-ID: <45FFE2EE-A914-4E84-8C57-EA9CBC7CFFA8@twistedmatrix.com>

> On Feb 21, 2017, at 8:31 AM, jonathan vanasco <twisted-python at 2xlp.com> wrote:
> 
> Dropping 3.3 makes sense, as does deprecating 3.4
> 
> The only thing I suggest/request is a webpage (and possibly txtfile in the source) that lists the supported Python versions.  When people runs into issues, finding this info quickly is just so useful.
> 
> e.g.
> 	Version			Python2			Python3
> 	Twisted 17.3  	2.x+				3.x+
> 	Twisted 17.1  	2.x+				3.x+
> 
> I helped build the first version of a similar grid for sqlalchemy - http://www.sqlalchemy.org/download.html <http://www.sqlalchemy.org/download.html>
> 
> Mike rewrote most of it over time, but the concept is the same -- as part of the build/deploy process, the grid is automatically generated by querying PyPI for the raw data ( https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default <https://bitbucket.org/zzzeek/sqlalchemyorg/src/6d7045b6096c43a6b0f243cbd2b90bff01e5a5ed/_controllers/gen_releases.py?at=master&fileviewer=file-view-default> )

This kinda seems like a separate issue.  If you want to build the same code for Twisted, we can probably find a place to run it, though - this does look like useful information :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170221/a20a08bf/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Feb 22 04:12:26 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 22 Feb 2017 03:12:26 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
Message-ID: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>


> On Feb 21, 2017, at 9:28 AM, Dave Curtis <dcurtis at savioke.com> wrote:
> 
> Hi, so for my first post to the list I am going to ask a somewhat lame question.  Apologies if this is not the right list -- clues welcome.

This is totally the right list.  All discussion of Twisted is welcome!

> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.

The general solution to this problem is "don't use the system Python environment to deploy your applications".

This is what virtualenv is for.

> So some options:
> - Is there a reliable backport of the python3-twisted package for 14.04?  Google is failing me on that one.
> [...]
> - Perhaps I should create my own backport for Ubuntu 14.04 of the current python3-twisted .deb.  (This is probably not the right list to ask, but I'm happy to dereference a pointer.)

Both of these options are bad.  Installing or creating a backport will break any system tools that depend on the python3-twisted package.  This is better than `sudo pip3 install`, but only a little.

> - All I need is the most basic twistd functionality.  Perhaps I should spin up my own by snarfing the code out of the twisted source repo.  I can package this with my stuff temporarily and get on with life.  Clues to the relevant parts of the repo welcome, I haven't poked around much in Twisted sources so need a road map.

If you have the ability to ship parts of the Twisted stack, there's a tool that can automate the "snarfing": pip :-).

> This is a short-term problem for me, we are transitioning to 16.04 soon, but the process is driven by other parts of the software stack. So I don't want to over-invest.  I'm looking for a reasonable band-aid.

16.04 will also be out of date.

I'm tempted to launch into a diatribe about namespacing, containers, and application isolation generally, but before I do - why is it that you want to use the system Python environment?  Had you just not considered the option of virtual environments?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/ba512317/attachment-0002.html>

From commercials24 at yahoo.de  Wed Feb 22 04:32:41 2017
From: commercials24 at yahoo.de (steven meiers)
Date: Wed, 22 Feb 2017 12:32:41 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <1487763161.4573.34.camel@yahoo.de>

i could be totally wrong, and please correct me if i am, but try this:

target: this will give you a current twisted / python installation and
keep the packages seperate from the system ones



# 1. install a package called virtualenv and pip on your system
apt install virtualenv pip

# 2. create a directory for your project, if you dont have one already,
#    to keep it seperate from other code
mkdir yourproject

# 3. create a virtualenv for your project, -p sets the python version
#    to use and "venv" is just the directory virtualenv installs the
#    python environment to
virtualenv -p /usr/bin/python3 venv


# 4. activate that environment (your command prompt will
#    change to:  (venv)... 
source venv/bin/activate


# 5. install twisted (while still being in the same terminal window
#    and directory with your activated virtual environment
pip install twisted


now you can code as usuall and run your code with python mycode.py, try
python --version


# 6. if you want to use trial for testing run:
hash -r

#to update the path settings, because trial is installed by the system
twisted package as well and without the hash -r your env will still
find the system trial first







From p.mayers at imperial.ac.uk  Wed Feb 22 05:08:11 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 12:08:11 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>

On 22/02/17 11:12, Glyph Lefkowitz wrote:

> I'm tempted to launch into a diatribe about namespacing, containers, and
> application isolation generally, but before I do - why is it that you
> /want/ to use the system Python environment?  Had you just not
> considered the option of virtual environments?

Awesome though it is, virtualenv can be very tedious if you need to 
install hundreds of megabytes of compiler and -devel packages. System 
packages are attractive precisely because you can avoid this.

I've had to do all sorts of tedious things with containers where I spin 
up a temporary container to build a bunch of .whl files, then actually 
install them in the final container - all to avoid bloating the 
container image with the build tools.

It's a real shame that binary wheels on Linux/PyPI aren't a thing. I 
understand the reasons why, but TBH it substantially reduces the value 
of the Python ecosystem for me.

Go is looking like a more and more attractive competitor to Python, 
frankly, having sidestepped this problem entirely.



From hs at ox.cx  Wed Feb 22 05:49:47 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 13:49:47 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>


>> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
> Awesome though it is, virtualenv can be very tedious if you need to install hundreds of megabytes of compiler and -devel packages. System packages are attractive precisely because you can avoid this.

That’s why you should use a build server and not ship build environments.

> I've had to do all sorts of tedious things with containers where I spin up a temporary container to build a bunch of .whl files, then actually install them in the final container - all to avoid bloating the container image with the build tools.

I don’t see how that’s tedious since a compute does that for me.  Although I don’t see any value at wheeling them (and some packages cannot be wheeled); my CI builds a venv and puts it into a container.  There’s nothing tedious about it at all.

> It's a real shame that binary wheels on Linux/PyPI aren't a thing.

This is incorrect.


From exarkun at twistedmatrix.com  Wed Feb 22 06:06:17 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Wed, 22 Feb 2017 08:06:17 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>

On Wed, Feb 22, 2017 at 7:08 AM, Phil Mayers <p.mayers at imperial.ac.uk>
wrote:

> On 22/02/17 11:12, Glyph Lefkowitz wrote:
>
> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
>>
>
> Awesome though it is, virtualenv can be very tedious if you need to
> install hundreds of megabytes of compiler and -devel packages. System
> packages are attractive precisely because you can avoid this.
>

I guess this is a big part of the motivation for Twisted itself to shed its
C extensions - to avoid 100% of these extra dependencies.  And presumably
also a big part of the motivation behind the development of support for
distributable binary wheels for Linux (which seems to have largely
succeeded at this point, though their use is not as widespread as one would
hope).


>
> I've had to do all sorts of tedious things with containers where I spin up
> a temporary container to build a bunch of .whl files, then actually install
> them in the final container - all to avoid bloating the container image
> with the build tools.
>
>
And I've been meaning to really dig in to the Nix toolchain for image
creation.  That seems like another thing that should be more widely used
(but it's hard to beat the "batteries included" tools Docker has, even if
those tools are awful).


> It's a real shame that binary wheels on Linux/PyPI aren't a thing. I
> understand the reasons why, but TBH it substantially reduces the value of
> the Python ecosystem for me.
>
>
Ah!  They are now, maybe you haven't seen them?

Check out https://github.com/pypa/manylinux and
https://github.com/pypa/python-manylinux-demo

Go is looking like a more and more attractive competitor to Python,
> frankly, having sidestepped this problem entirely.
>
>
A lot of people seem to be thinking that way.  *Personally*, with my
experience with Go (about five months solid at previous employer), I
wouldn't go anywhere near that stack.  There are plenty of *other *things
with appealing features that Python lacks which would seem to make a better
move. :)

But check out the story for binary wheels.  The state of things in Python
may not be *quite* as bad as you think.

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/791c7418/attachment-0002.html>

From waterbug at pangalactic.us  Wed Feb 22 08:00:38 2017
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 22 Feb 2017 10:00:38 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
Message-ID: <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>

On 02/22/2017 07:08 AM, Phil Mayers wrote:
> On 22/02/17 11:12, Glyph Lefkowitz wrote:
>
>> I'm tempted to launch into a diatribe about namespacing, containers, and
>> application isolation generally, but before I do - why is it that you
>> /want/ to use the system Python environment?  Had you just not
>> considered the option of virtual environments?
>
> Awesome though it is, virtualenv can be very tedious if you need to
> install hundreds of megabytes of compiler and -devel packages. System
> packages are attractive precisely because you can avoid this.

Have you considered the 'conda' package manager?
https://conda.io/docs/index.html

If not, and for the benefit of others (I'm amazed it's not
mentioned on this list) here is my conda rant:

TL;DR:  use conda.

IMO, conda is superior to pip/wheels.  The Python packaging
orthodoxy's story is "oh, yes, conda -- that solves a different
problem ..." which seems disingenuous to me.  Conda
was originally created by Continuum Analytics to solve the
Numpy/SciPy packaging problem(s), which it has done with
brilliant success.

Conda has its own kind of packages, but they are relatively
easy to create (I can do it, proving that anyone can ;)
both for your own packages and for PyPI packages -- see:
https://conda.io/docs/build_tutorials/pkgs.html

Conda is a system-level package manager in the sense that it
can install any package, including Python itself, and
creates its own type of 'virtual environments' with their
own Python versions (which it will install).  Conda does
a great job of keeping non-Python libraries that Python
packages depend on isolated from system libraries.  If
the version of a Python package you want to use depends
on a later version of a library that exists on your
system, conda will install the required version of the
library in the virtual environment, keeping it separate
from other versions of that library on your system.

The latest version of Twisted is available from the main
conda package repository and is well supported.  I am
developing an application with many dependencies, including
Twisted, PyQt5, pythonOCC (a massive python-wrapped C++ 3D
CAD library), and many scientific libraries, and conda is
the only Python packaging and distribution technology that
can support my app -- I would not even begin to attempt it
using pip.

I've also used conda to manage large Django applications.
After I showed conda to my sysadmins at work, they jumped
on it and now use it for all Python installations on our
servers.  They will never have to compile Python again!

I do all my development on an Ubuntu 14.04 laptop and use
conda for everything Python on my machine.

Cheers,
Steve



From p.mayers at imperial.ac.uk  Wed Feb 22 10:17:25 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:17:25 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
Message-ID: <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>

On 22/02/17 13:06, Jean-Paul Calderone wrote:

> Ah!  They are now, maybe you haven't seen them?
>
> Check out https://github.com/pypa/manylinux and
> https://github.com/pypa/python-manylinux-demo

I had not seen this. Thanks, this looks like a big leap forward.

> A lot of people seem to be thinking that way.  /Personally/, with my
> experience with Go (about five months solid at previous employer), I
> wouldn't go anywhere near that stack.  There are plenty of
> /other /things with appealing features that Python lacks which would
> seem to make a better move. :)

Very possibly!

Go as a language leaves me cold, and there are downsides to the 
one-big-binary approach. But it's undeniably easy to deploy in a 
container, and the concurrency is very attractive.

> But check out the story for binary wheels.  The state of things in
> Python may not be /quite/ as bad as you think.

Indeed, it does look like a promising improvement.



From dcurtis at savioke.com  Wed Feb 22 10:17:26 2017
From: dcurtis at savioke.com (Dave Curtis)
Date: Wed, 22 Feb 2017 09:17:26 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
Message-ID: <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>

> 
>> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.
> 
> The general solution to this problem is "don't use the system Python environment to deploy your applications".
> 
> This is what virtualenv is for.
> 

Yes, well, the standard practice around here is to wrap up deliverables in a .deb so that the DevOps tools can do automated deploys.  I suppose it is possible to wrap up a venv in a .deb, but I’ve never done looked into it. Pointers welcome.

>> So some options:
>> - Is there a reliable backport of the python3-twisted package for 14.04?  Google is failing me on that one.
>> [...]
>> - Perhaps I should create my own backport for Ubuntu 14.04 of the current python3-twisted .deb.  (This is probably not the right list to ask, but I'm happy to dereference a pointer.)
> 
> Both of these options are bad.  Installing or creating a backport will break any system tools that depend on the python3-twisted package.  This is better than `sudo pip3 install`, but only a little.
> 
>> - All I need is the most basic twistd functionality.  Perhaps I should spin up my own by snarfing the code out of the twisted source repo.  I can package this with my stuff temporarily and get on with life.  Clues to the relevant parts of the repo welcome, I haven't poked around much in Twisted sources so need a road map.
> 
> If you have the ability to ship parts of the Twisted stack, there's a tool that can automate the "snarfing": pip :-).
> 
>> This is a short-term problem for me, we are transitioning to 16.04 soon, but the process is driven by other parts of the software stack. So I don't want to over-invest.  I'm looking for a reasonable band-aid.
> 
> 16.04 will also be out of date.

So… If you would like to dive into reasons… we do robots.  We use ROS, the Robot Operating System.  LTS versions of ROS are tied to LTS versions of Ubuntu.  Transitioning from one LTS version of ROS to another is, as they say, “non-trivial”.  Being on a stale version of Ubuntu is part of the price for using ROS, because ROS just can’t move that fast.  No one likes it.  A lot of people (in many ROS-based companies, and the OSRF) are working to improve the situation.  That doesn’t help me this week.  Now, why are the DevOps people here so conservative?  Because doing a remote update on a robot in the field, and having it fail, has two impacts: 1) we stop billing the customer until the robot is running again, and 2) we put someone on an airplane to make the robot run again.  

> 
> I'm tempted to launch into a diatribe about namespacing, containers, and application isolation generally, but before I do - why is it that you want to use the system Python environment?  Had you just not considered the option of virtual environments?

Legitimate questions.  Fitting into the existing deployment flow, and ummm… can I wrap a venv in a .deb? ‘Cuz that would be cool.

Another poster mentioned Anaconda…. I’m not a huge fan.  I am using it extensively as part of the Udacity self-driving car class, and I will admit that it would be nearly impossible for Udacity to deploy the project environment any other way.  But I see Anaconda as a very heavy-weight solution for projects requiring a huge infrastructure, and my problem is no where near large enough that the benefits justifies the cost.  A simple venv is more in line.

> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/56484f8f/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 10:20:16 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:20:16 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
Message-ID: <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>

On 22/02/17 12:49, Hynek Schlawack wrote:

> That’s why you should use a build server and not ship build
> environments.

Which we do.

> I don’t see how that’s tedious since a compute does that for me.
> Although I don’t see any value at wheeling them (and some packages
> cannot be wheeled); my CI builds a venv and puts it into a container.
> There’s nothing tedious about it at all.

I find the idea of running throwaway environments to generate a big blob 
of tarball'd python+libs, then copying said tarball to actual 
containers, a rather retrograde step by comparison with established 
package/build infrastructure tools.

>> It's a real shame that binary wheels on Linux/PyPI aren't a thing.
>
> This is incorrect

Apparently so. The info JP provided was very useful.



From p.mayers at imperial.ac.uk  Wed Feb 22 10:23:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 17:23:08 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
Message-ID: <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>

On 22/02/17 15:00, Steve Waterbury wrote:

> Have you considered the 'conda' package manager?

I've never come across it. It looks too big for me to give a quick 
opinion on, but I'll bear it in mind. Thanks for the pointer.



From waterbug at pangalactic.us  Wed Feb 22 10:35:40 2017
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 22 Feb 2017 12:35:40 -0500
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
Message-ID: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>

On 02/22/2017 12:23 PM, Phil Mayers wrote:
> On 22/02/17 15:00, Steve Waterbury wrote:
>
>> Have you considered the 'conda' package manager?
>
> I've never come across it. It looks too big for me to give a quick
> opinion on, but I'll bear it in mind. Thanks for the pointer.

"Anaconda" is huge; conda is not.  You can get conda
by installing "Miniconda":

https://conda.io/miniconda.html

The 64-bit bash Miniconda installer for Linux, for example, is
about 28 MB, and includes just Python (either 2 or 3) with
conda and its dependencies, and includes pip in case you want
to use a package that is not yet available in the conda
package channels -- 'pip install' works in a conda environment.

(The only reason to install Anaconda, which includes over 100
scientific Python packages, is if you are developing an app
that requires a lot of Numpy or SciPy libraries.)

Steve



From hs at ox.cx  Wed Feb 22 10:38:20 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 18:38:20 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <29F37A4C-839E-4DE1-9697-986D90E600E6@savioke.com>
Message-ID: <B3E1E7D4-7FC0-44D2-A53D-4D25E8AE41EC@ox.cx>


>>> So my problem is that while my protocol stack spins up very nicely and trivially easy using the twistd daemon, the standard python3-twisted package for 14.04 is waaaay behind and doesn't include twistd (!), and I haven't found a good backport.  I'd also like to avoid doing things that make life hard for DevOps, such as pip3 installing and risking a package manager fight.
>> 
>> The general solution to this problem is "don't use the system Python environment to deploy your applications".
>> 
>> This is what virtualenv is for.
> 
> Yes, well, the standard practice around here is to wrap up deliverables in a .deb so that the DevOps tools can do automated deploys.  I suppose it is possible to wrap up a venv in a .deb, but I’ve never done looked into it. Pointers welcome.

https://github.com/spotify/dh-virtualenv <https://github.com/spotify/dh-virtualenv> and https://hynek.me/articles/python-app-deployment-with-native-packages/ <https://hynek.me/articles/python-app-deployment-with-native-packages/> come to mind.

N.B. the article is by me and I’m currently migrating to Docker/Nomad.  But it served us very well for many years.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/79d99202/attachment-0002.html>

From hs at ox.cx  Wed Feb 22 10:42:43 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Wed, 22 Feb 2017 18:42:43 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
Message-ID: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>

>> I don’t see how that’s tedious since a compute does that for me.
>> Although I don’t see any value at wheeling them (and some packages
>> cannot be wheeled); my CI builds a venv and puts it into a container.
>> There’s nothing tedious about it at all.
> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.

I have to disagree here:  I don’t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python – as much as I’d like Go-style single binaries too – is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.

—h


From jeff at ocjtech.us  Wed Feb 22 10:50:01 2017
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Wed, 22 Feb 2017 11:50:01 -0600
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
Message-ID: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>

On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx> wrote:

>
> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two
> or so are worth supporting.
>

Debian Jessie (which also means Raspbian Jessie, which is my primary
concern) uses Python 3.4, so I would hope that Python 3.4 support in
Twisted would not be dropped for a while.

-- 
Jeff Ollie
The majestik møøse is one of the mäni interesting furry animals in Sweden.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/457bd15f/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 11:16:29 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 18:16:29 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
Message-ID: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>

On 22/02/17 17:42, Hynek Schlawack wrote:

> I have to disagree here:  I don’t want build tools of any kind in my
> final containers therefore I build my artifacts separately no matter
> what language.  Of course you can just build the venv on your build

Agreed, 100%. Apologies if I gave you the impression I was advocating 
otherwise.

> server without wheeling up a temporary container and then package it
> using Docker or DEB or whatever.  You should be separating building
> and running anyway so Python – as much as I’d like Go-style single
> binaries too – is in no way special here.  The nice thing about
> temporary containers though is that I can do all of that on my Mac.

I agree that you need to separate building and installation, and I've 
got no particular beef with using a container, chroot, throwaway VM or 
whatever works for people in doing the build phase.

(What people do with the resultant build output - and in particular 
whether there is a lot of ignoring of the hard-learned lessons of system 
package managers going on now - I will not comment on ;o)

What I was trying to say - badly, apparently - was that the system 
python *could* be attractive to someone because many dependencies may 
exist in the OS package list in suitable form, but conversely may not 
exist in PyPI in binary form for Linux.

As a very simple example: if you have a traditional (non-container) 
Linux system hosting a Python application in a virtualenv, and you 
deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you 
either need to:

1. Use no C extensions
2. Hope there's a manylinux1 binary wheel
3. Use the OS package and --system-site-packages
4. Compile the C extensions and make them available to pip

#2 seems useful now that I know about it but - correct me if I'm wrong - 
the manylinux1 permitted C dependencies are super-tiny, and would not 
permit e.g. cryptography or psycopg2?

#4 is what you are advocating for I believe? But can we agree that for 
smaller projects, that might seem like a lot of repeated work if the 
package is already available in the OS repos?

Wondering out loud, I guess it would be possible for OS-compiled python 
extensions to be somehow virtualenv or relocation-compatible. One could 
envisage something like:

virtualenv t
. t/bin/activate
pip syspkg-install python-psycopg2

...and this going off and grabbing the OS-provided dependency of that 
name, extracting it, and deploying it into the virtualenv, rather than 
the system Python.

There are doubtless all sorts of reasons that is not practical.

Anyway, to be clear - I'm not advocating using the system Python. I'm 
trying to explain why, based on the efforts we expend locally, it could 
seem attractive to smaller sites.

Cheers,
Phil



From p.mayers at imperial.ac.uk  Wed Feb 22 11:17:20 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 18:17:20 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
 <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
Message-ID: <05feca65-f6b2-61ab-0c80-c4584aa12ab6@imperial.ac.uk>

On 22/02/17 17:35, Steve Waterbury wrote:
> On 02/22/2017 12:23 PM, Phil Mayers wrote:
>> On 22/02/17 15:00, Steve Waterbury wrote:
>>
>>> Have you considered the 'conda' package manager?
>>
>> I've never come across it. It looks too big for me to give a quick
>> opinion on, but I'll bear it in mind. Thanks for the pointer.
>
> "Anaconda" is huge; conda is not.  You can get conda

I was referring to scope as opposed to size in bytes, but it's entirely 
possible I've misunderstood how it works.



From cory at lukasa.co.uk  Wed Feb 22 13:59:46 2017
From: cory at lukasa.co.uk (Cory Benfield)
Date: Wed, 22 Feb 2017 20:59:46 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>


> On 22 Feb 2017, at 18:16, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?

Depends.

The permitted C dependencies *for dynamic linking* are tiny, sure. But those libraries may statically link as they please. The likely scenario for most such packages is that they statically link whatever they need. This is the approach taken by some that I ship.

Cory




From hawkowl at atleastfornow.net  Wed Feb 22 14:11:35 2017
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Thu, 23 Feb 2017 08:11:35 +1100
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
Message-ID: <CAMxb2isnwWkSpy107vRXv=s4jnN8fxWxV7AvXS0WAnkFDUC4Lg@mail.gmail.com>

Debian 9 (Stretch) is in final freeze and will become the new stable
release very soon (a month or so?). By the time we drop 3.4 support,
Stretch will be current stable, so my recommendation would be to upgrade to
Stretch when it comes available, and use the Python 3.5 it ships with.
Alternatively, you could install 3.6 through pyenv or some other source on
Jessie.

- Amber

On 23 Feb 2017 4:50 AM, "Jeffrey Ollie" <jeff at ocjtech.us> wrote:

> On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx> wrote:
>
>>
>> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two
>> or so are worth supporting.
>>
>
> Debian Jessie (which also means Raspbian Jessie, which is my primary
> concern) uses Python 3.4, so I would hope that Python 3.4 support in
> Twisted would not be dropped for a while.
>
> --
> Jeff Ollie
> The majestik møøse is one of the mäni interesting furry animals in Sweden.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/263c4844/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Feb 22 14:47:12 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 22 Feb 2017 21:47:12 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <CCAD7D3D-0C4D-4F3B-8EA9-75F2F3097867@lukasa.co.uk>
Message-ID: <c290d000-9f56-c31e-6f02-0d0ef038d4b5@imperial.ac.uk>

On 22/02/17 20:59, Cory Benfield wrote:

> The permitted C dependencies *for dynamic linking* are tiny, sure.
> But those libraries may statically link as they please. The likely
> scenario for most such packages is that they statically link whatever
> they need. This is the approach taken by some that I ship.

Excellent point, I hadn't considered that.

Tangentially I see there's also no-manylinux and associated github/pip 
issues w.r.t. people who *do* want to build local binary wheels on a 
local PyPI server...

All in all, not a simple area.



From tommost at gmail.com  Wed Feb 22 15:09:43 2017
From: tommost at gmail.com (Tom Most)
Date: Wed, 22 Feb 2017 14:09:43 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
Message-ID: <CAK4RBD-pCSxDZMP0FnUfAcUc2RD5Z0A5Eqrh8Q=f02qxyOs3cw@mail.gmail.com>

On Mon, Feb 20, 2017 at 1:46 PM, Amber Brown <hawkowl at atleastfornow.net>
wrote:

> As such, I would like to remove support for these Python versions. Using
> recent statistics (https://langui.sh/2016/12/09/data-driven-decisions/)
> we can infer that Python 3.3 is on the whole uncommon, despite it being the
> default Python 3 for Ubuntu 14.04 LTS. We can further infer that adoption
> of new major versions of Python 3 (Python 3.5 was barely a year old by the
> time of these stats and yet dwarfed 3.4) is rapid, and so it seems only the
> latest two or so are worth supporting.
>

The default in Ubuntu 14.04 is actually Python 3.4.  (12.04 shipped with
3.2, and 16.04 has 3.5.)

Due to this, I am writing new Twisted code which targets 2.7 + 3.4 right
now.  I'm not opposed to deprecating Python 3.4, though. Ubuntu 14.04 ships
with a version of Python 2.7 that lacks SNI, so I want to shift to 16.04
ASAP anyway.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170222/1d9de266/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Feb 23 01:31:58 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:31:58 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <CAEeXt4OStXyw2GhQ+5hSdG25STFEOPgBAcYfDdaN0vG0a8gU5g@mail.gmail.com>
 <2ec00d32-6dcd-7737-ccff-d2b9894fd82e@imperial.ac.uk>
Message-ID: <EF7CF042-8196-41A5-ACD1-E1A4F3BCFF77@twistedmatrix.com>


> On Feb 22, 2017, at 9:17 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 22/02/17 13:06, Jean-Paul Calderone wrote:
> 
>> Ah!  They are now, maybe you haven't seen them?
>> 
>> Check out https://github.com/pypa/manylinux and
>> https://github.com/pypa/python-manylinux-demo
> 
> I had not seen this. Thanks, this looks like a big leap forward.
> 
>> A lot of people seem to be thinking that way.  /Personally/, with my
>> experience with Go (about five months solid at previous employer), I
>> wouldn't go anywhere near that stack.  There are plenty of
>> /other /things with appealing features that Python lacks which would
>> seem to make a better move. :)
> 
> Very possibly!
> 
> Go as a language leaves me cold, and there are downsides to the one-big-binary approach. But it's undeniably easy to deploy in a container, and the concurrency is very attractive.

Python is easier to deploy in a container than you might think.  Check out this three-line Dockerfile from Moshe Zadka (which, by the way, deploys Twisted...):

https://moshez.wordpress.com/2016/11/19/belt-suspenders-why-put-a-pex-file-inside-a-docker-container/ <https://moshez.wordpress.com/2016/11/19/belt-suspenders-why-put-a-pex-file-inside-a-docker-container/>

-glyph

> 
>> But check out the story for binary wheels.  The state of things in
>> Python may not be /quite/ as bad as you think.
> 
> Indeed, it does look like a promising improvement.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/8a03ce7a/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Feb 23 01:34:08 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:34:08 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <54b3af21-5d6c-aeec-cee4-2d5e3cf2054e@pangalactic.us>
 <d4e07d59-691c-d7da-762f-b8c4b49f4e4d@imperial.ac.uk>
 <a5778705-4250-71bf-2ea9-d30a2b5d2cac@pangalactic.us>
Message-ID: <4843B326-7341-4CB6-B8FD-2DD9062323DA@twistedmatrix.com>


> On Feb 22, 2017, at 9:35 AM, Steve Waterbury <waterbug at pangalactic.us> wrote:
> 
> On 02/22/2017 12:23 PM, Phil Mayers wrote:
>> On 22/02/17 15:00, Steve Waterbury wrote:
>> 
>>> Have you considered the 'conda' package manager?
>> 
>> I've never come across it. It looks too big for me to give a quick
>> opinion on, but I'll bear it in mind. Thanks for the pointer.
> 
> "Anaconda" is huge; conda is not.  You can get conda
> by installing "Miniconda":
> 
> https://conda.io/miniconda.html
> 
> The 64-bit bash Miniconda installer for Linux, for example, is
> about 28 MB, and includes just Python (either 2 or 3) with
> conda and its dependencies, and includes pip in case you want
> to use a package that is not yet available in the conda
> package channels -- 'pip install' works in a conda environment.
> 
> (The only reason to install Anaconda, which includes over 100
> scientific Python packages, is if you are developing an app
> that requires a lot of Numpy or SciPy libraries.)


It is "huge" in the sense that it is a parallel universe to your normal Linux distribution though; you need to install duplicate versions of various C libraries in multiple locations, whereas pip & virtualenv allow you the flexibility of "package everything as a static generic manylinux1 wheel for portability" or "depend on dynamically linked libraries in your operating system" depending on your deployment preferences.

-glyph


From glyph at twistedmatrix.com  Thu Feb 23 01:36:59 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 00:36:59 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
Message-ID: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>


> On Feb 22, 2017, at 9:42 AM, Hynek Schlawack <hs at ox.cx> wrote:
> 
>>> I don’t see how that’s tedious since a compute does that for me.
>>> Although I don’t see any value at wheeling them (and some packages
>>> cannot be wheeled); my CI builds a venv and puts it into a container.
>>> There’s nothing tedious about it at all.
>> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.
> 
> I have to disagree here:  I don’t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python – as much as I’d like Go-style single binaries too – is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.

It's worth pointing out that if you don't want a Go build toolchain in your container, you have exactly the same problem.  And a Go build toolchain (read: dependency/vendoring management toolchain) actually requires _more_ care and feeding than the analogous Python in my experience; the reason it's superficially appealing is that you can "cheat" and copy the binary over from a development environment, but this is not a robust CI solution.

Go's build toolchain has many features worth envying but most of its advantages have to do with deployments _outside_ of containers, where you have to ship to customer environments with fraught and unknown system configurations.  If you have any level of control over your deployment target, Go and, say, Python with PEX are ~equivalent.

-glyph


From glyph at twistedmatrix.com  Thu Feb 23 02:11:00 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 01:11:00 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>


> On Feb 22, 2017, at 10:16 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 22/02/17 17:42, Hynek Schlawack wrote:
> 
>> I have to disagree here:  I don’t want build tools of any kind in my
>> final containers therefore I build my artifacts separately no matter
>> what language.  Of course you can just build the venv on your build
> 
> Agreed, 100%. Apologies if I gave you the impression I was advocating otherwise.
> 
>> server without wheeling up a temporary container and then package it
>> using Docker or DEB or whatever.  You should be separating building
>> and running anyway so Python – as much as I’d like Go-style single
>> binaries too – is in no way special here.  The nice thing about
>> temporary containers though is that I can do all of that on my Mac.
> 
> I agree that you need to separate building and installation, and I've got no particular beef with using a container, chroot, throwaway VM or whatever works for people in doing the build phase.
> 
> (What people do with the resultant build output - and in particular whether there is a lot of ignoring of the hard-learned lessons of system package managers going on now - I will not comment on ;o)
> 
> What I was trying to say - badly, apparently - was that the system python *could* be attractive to someone because many dependencies may exist in the OS package list in suitable form, but conversely may not exist in PyPI in binary form for Linux.

Yes, and building these binary artifacts is often harder than some people (cough, alpine, cough) seem to think.  But there are better ways to square this circle than restricting yourself to the versions of python libraries that happen to be available in your distro.

> As a very simple example: if you have a traditional (non-container) Linux system hosting a Python application in a virtualenv, and you deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you either need to:
> 
> 1. Use no C extensions
> 2. Hope there's a manylinux1 binary wheel
> 3. Use the OS package and --system-site-packages
> 4. Compile the C extensions and make them available to pip
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?

Cory already pointed this out tangentially, but I should emphasize: 'cryptography' and 'psycopg2' are things that you depend on at the Python level.  The things you depend on at the C level are libssl, libcrypto, and libpq.  If you want to build a manylinux wheel, you need to take this into account and statically link those C dependencies, which some projects are beginning to do.  (Cryptography _could_ do this today, they already have the infrastructure for doing it on macOS and Windows, the reason they're not shipping manylinux1 wheels right now has to do with the political implications of auto-shipping a second copy of openssl to Linux distros that expect to manage security upgrades centrally).

> #4 is what you are advocating for I believe? But can we agree that for smaller projects, that might seem like a lot of repeated work if the package is already available in the OS 

If you're going to do #4 with dh_virtualenv, your .deb can depend on the relevant packages that contain the relevant C libraries, and build linux wheels, which are vendor-specific and can dynamically link to whatever you want (i.e. not manylinux wheels, which are vendor-neutral and must statically link everything).  Manylinux wheels are required for uploading to PyPI, where you don't know who may be downloading - on your own infrastructure, where you are shipping inside an artifact (like a .deb) that specifically has metadata describing its dependencies, "linux" wheels are fine.  Alone, hanging around on PyPI as .whl files rather than as .debs in your infrastructure, they'd be mystery meat, but that is not the case if they have proper dependency metadata.

It might seem weird to use Python-specific tooling and per-application vendoring for Python dependencies, and yet use distro-global dynamic linking for C dependencies.  But, this is actually a perfectly cromulent strategy, and I think this bears a more in-depth explanation.

C, and particularly the ecosystem of weird dynamic linker ceremony around C, has an extremely robust side-by-side installation ecosystem, which distros leverage to great effect.  For example, on the Ubuntu machine sitting next to me as I write this, I have libasan0 (4.8.5) libasan1 (4.9.4) libasan2 (5.4.1) *and* libasan3 (6.2.0) installed, and this isn't even a computer with a particularly significant amount of stuff going on!  Nothing ever breaks and loads the wrong libasan.N.

Python, by contrast, tried to do this in a C-ish way, but that attempt resulted in this mess: https://packaging.python.org/multi_version_install/ <https://packaging.python.org/multi_version_install/>, which almost nobody uses.  Right at the top of that document, "For many use cases, virtual environments address this need without the complication ...".

Even if you are 100%, completely bought into a distro-style way of life, no containers at all, everything has to be in a system package to get installed, virtualenvs still make more sense than trying to sync up the whole system's Python library versions.

The reason nobody ever went back and tried to do multi-version installs "right" with Python is that the Python and C library ecosystems are fundamentally different in a bunch of important ways.  For one thing, Python libraries have no such thing as an enforceable ABI, so coupling between libraries and applications is much closer than in C.  For another, no SOVERSION.  Also, many small C utilities (the ones that would be some of the smaller entries in requirements.txt in a Python app) are vendored in or statically linked in applications, so the "dependency management" happens prior to the container build, in the source repo of the upstream, where it is hidden.  Python dependencies often have a far higher rate of churn than C dependencies because of the ease of development, which means both more divergence between required versions for different applications, and more benefits to being up-to-date for the applications that do rev faster.

Finally, the build process for Python packages is much simpler, since they're usually treated as archives of files that move around, rather than elaborate pre-build steps that are often required for C libraries to make sure everything is smashed into the .so at build time.

So think of your Python libraries as "vendored in" to your package for these reasons, rather than depended upon in the OS, and then participate in the broader distro (i.e. "C") ecosystem by building wheels that dynamically link whatever distro-level dependencies they need to.

> Wondering out loud, I guess it would be possible for OS-compiled python extensions to be somehow virtualenv or relocation-compatible. One could envisage something like:
> 
> virtualenv t
> . t/bin/activate
> pip syspkg-install python-psycopg2
> 
> ...and this going off and grabbing the OS-provided dependency of that name, extracting it, and deploying it into the virtualenv, rather than the system Python.

This is sort of what dh_virtualenv is.  It doesn't set up the mapping for you automatically, but you can pretty quickly figure out that python-psycopg2 build-depends: libpq-dev.

> There are doubtless all sorts of reasons that is not practical.

The main thing is just that you have to decide on a standard format for distro-specific metadata, and then go encode it everywhere.  I'm pretty sure that distutils-sig would be open to codifying such an extension to the list of standardized metadata fields, so that tools can use it.

> Anyway, to be clear - I'm not advocating using the system Python. I'm trying to explain why, based on the efforts we expend locally, it could seem attractive to smaller sites.

To be even clearer, using the system python is fine - it's using the global python environment that has the most significant problem.

(Although, of course, the "system python" is probably CPython, and in most cases you want to be using PyPy, right?  So yeah don't use the system Python.)

I hope this explanation was helpful to those of you deploying with distro tooling!

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/39b815b7/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Feb 23 02:30:01 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 01:30:01 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
Message-ID: <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>


> On Feb 22, 2017, at 9:50 AM, Jeffrey Ollie <jeff at ocjtech.us> wrote:
> 
> On Tue, Feb 21, 2017 at 2:27 AM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> 
> 3.3 should die immediately.  3.4 should follow ASAP.only the latest two or so are worth supporting.
> 
> Debian Jessie (which also means Raspbian Jessie, which is my primary concern) uses Python 3.4, so I would hope that Python 3.4 support in Twisted would not be dropped for a while.

Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/782aaa10/attachment-0002.html>

From hs at ox.cx  Thu Feb 23 03:27:22 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 23 Feb 2017 11:27:22 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
Message-ID: <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>

>>>> I don’t see how that’s tedious since a compute does that for me.
>>>> Although I don’t see any value at wheeling them (and some packages
>>>> cannot be wheeled); my CI builds a venv and puts it into a container.
>>>> There’s nothing tedious about it at all.
>>> I find the idea of running throwaway environments to generate a big blob of tarball'd python+libs, then copying said tarball to actual containers, a rather retrograde step by comparison with established package/build infrastructure tools.
>> 
>> I have to disagree here:  I don’t want build tools of any kind in my final containers therefore I build my artifacts separately no matter what language.  Of course you can just build the venv on your build server without wheeling up a temporary container and then package it using Docker or DEB or whatever.  You should be separating building and running anyway so Python – as much as I’d like Go-style single binaries too – is in no way special here.  The nice thing about temporary containers though is that I can do all of that on my Mac.
> 
> It's worth pointing out that if you don't want a Go build toolchain in your container, you have exactly the same problem.  

I thought I pointed that out in my very first sentence. :D

What I don't quite understand is how people can be in love with Go’s static linking but complaining about Virtualenvs in deployments.   Unwieldy as virtualenvs are: *for Python code* they are exactly that: statically linked build artifacts.  The principles are very similar, the execution is arguably better for Go.


From hs at ox.cx  Thu Feb 23 03:37:02 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Thu, 23 Feb 2017 11:37:02 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
Message-ID: <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>

> As a very simple example: if you have a traditional (non-container) Linux system hosting a Python application in a virtualenv, and you deploy a Python app to a virtualenv e.g. using Puppet or Ansible, you either need to:
> 
> 1. Use no C extensions
> 2. Hope there's a manylinux1 binary wheel
> 3. Use the OS package and --system-site-packages
> 4. Compile the C extensions and make them available to pip
> 
> #2 seems useful now that I know about it but - correct me if I'm wrong - the manylinux1 permitted C dependencies are super-tiny, and would not permit e.g. cryptography or psycopg2?
> 
> #4 is what you are advocating for I believe? But can we agree that for smaller projects, that might seem like a lot of repeated work if the package is already available in the OS repos?

You always say “repeated work” but I hear “small Python script”. :)  We have a few Python projects (not written/maintained by me :)) that did rely on system packages “because it’s easier”.  Guess what!  The other day Ubuntu upgraded PyCrypto (needed Ubuntu Trusty’s ancient Paramiko) under our butts, introduced a regressing and everything blew up: https://www.ubuntu.com/usn/usn-3199-2/ <https://www.ubuntu.com/usn/usn-3199-2/> . That particular project is a virtualenv now too.

The Python build chain got so good on Linux by now that I really don’t even think about C extensions anymore.  Windows is a different story entirely of course. :|

> I'm trying to explain why, based on the efforts we expend locally, it could seem attractive to smaller sites.

Honestly, in the years I’ve been running Python services of different sizes, I have found that distro-provided system packages – unless you are writing software *for* a distribution – are loaded with so many downsides that they’re almost never worth it.  They’re a shortcut and shortcuts usually bite back *eventually*.

—h
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/7389631e/attachment-0002.html>

From p.mayers at imperial.ac.uk  Thu Feb 23 03:51:15 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 23 Feb 2017 10:51:15 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
Message-ID: <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>

On 23/02/17 10:27, Hynek Schlawack wrote:

> What I don't quite understand is how people can be in love with Go’s
> static linking but complaining about Virtualenvs in deployments.
> Unwieldy as virtualenvs are: *for Python code* they are exactly that:
> statically linked build artifacts.  The principles are very similar,
> the execution is arguably better for Go.

Well, for one thing, Python virtualenv are problematic w.r.t. being 
relocatable. That alone makes them harder to use than a Go binary.

But honestly I think we're talking at cross purposes. I'm not 
complaining about virtualenv. We use them quite successfully.

I'm trying to point out that *some* might find the system Python 
attractive because they can use OS-supplied python packages in lieu of 
the effort of setting up a binary build infrastructure.

But I'm clearly not getting my point across, so I'm going to stop now.



From jamesbroadhead at gmail.com  Thu Feb 23 05:04:35 2017
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Thu, 23 Feb 2017 12:04:35 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
Message-ID: <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>

On 23 February 2017 at 08:36, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:
>
>
> Go's build toolchain has many features worth envying but most of its
> advantages have to do with deployments _outside_ of containers, where you
> have to ship to customer environments with fraught and unknown system
> configurations.  If you have any level of control over your deployment
> target, Go and, say, Python with PEX are ~equivalent .


I was going to chime in about pex earlier - but since you need to provide
your own interpreter, I didn't think it solved his whole issue.

Otherwise, pex is a great format for deploying python easily.
At Twitter, we deployed the (Twisted) TweetDeck API using it for years,
with a ton of dependencies, both c-libs and pure python.

Really nice to be able to produce a deployable artefact, which can be
hashed & stored for re-deploy later if needed (and ideally
integration-tested & staged by passing different args on the cli).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/54c82dea/attachment-0002.html>

From p.mayers at imperial.ac.uk  Thu Feb 23 05:12:08 2017
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Thu, 23 Feb 2017 12:12:08 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
Message-ID: <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>

On 23/02/17 09:11, Glyph Lefkowitz wrote:

> Yes, and building these binary artifacts is often harder than some
> people (cough, alpine, cough) seem to think.  But there are better ways
> to square this circle than restricting yourself to the versions of
> /python/ libraries that happen to be available in your distro.

I don't disagree. I'm not defending the practice. But it is *clearly* a 
thing people do, and understanding the reasons is, IMO, important.

> Windows, the reason they're not shipping manylinux1 wheels right now has
> to do with the political implications of auto-shipping a second copy of
> openssl to Linux distros that expect to manage security upgrades centrally).

Understandable. I'm sure anyone who was around at the time remembers the 
zlib fiasco.

> It might seem weird to use Python-specific tooling and per-application
> vendoring for Python dependencies, and yet use distro-global dynamic
> linking for C dependencies.  But, this is actually a perfectly cromulent
> strategy, and I think this bears a more in-depth explanation.

It's not at all weird. It's exactly what we do, and I agree with your 
rationale.



From glyph at twistedmatrix.com  Thu Feb 23 15:24:06 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:06 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
Message-ID: <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>


> On Feb 23, 2017, at 2:51 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 23/02/17 10:27, Hynek Schlawack wrote:
> 
>> What I don't quite understand is how people can be in love with Go’s
>> static linking but complaining about Virtualenvs in deployments.
>> Unwieldy as virtualenvs are: *for Python code* they are exactly that:
>> statically linked build artifacts.  The principles are very similar,
>> the execution is arguably better for Go.
> 
> Well, for one thing, Python virtualenv are problematic w.r.t. being relocatable. That alone makes them harder to use than a Go binary.

Yeah, this is the big issue.  Hence: pex ;-).  Or, 'pile of wheels' and 'venv on the fly (without dev tools)' as the installation mechanism on the target environment.

> But honestly I think we're talking at cross purposes. I'm not complaining about virtualenv. We use them quite successfully.

I think this has been a super useful discussion, not at cross purposes at all!  There's been a little bit of back-and-forth and repeating certain things, but not useless.

> I'm trying to point out that *some* might find the system Python attractive because they can use OS-supplied python packages in lieu of the effort of setting up a binary build infrastructure.

So, I think everyone has a different perspective here; Hynek seems to be saying "all containers all the time" ;-).  But from my perspective, linux distros provide a super useful service by providing a gigantic integrated build environment for TONS of C code.  Avoiding the time and cost associated with setting up, i.e., an ImageMagick dev environment is _WELL_ worth the complexity of distro packages.  Multiply this out by dozens of dependencies that a large application or site ends up needing, and distro packaging pays for itself many times over.

However, avoiding having python-dev and a C compiler installed in your build environment seems like a bit of a fool's errand to me.  It's superficially appealing, but I think that our guidance to most people should be "always have a build environment so you can build extension modules, any non-trivial project will eventually need a few".  The work required to have a _python_ dev environment is orders of magnitude below, say, OpenSSL or ImageMagick or Avahi or (et cetera).

> But I'm clearly not getting my point across, so I'm going to stop now.

Really I think that this has been a great exchange of ideas, and though we're veering off topic a little bit, I want there to be more discussion among systems operators how Twisted can and should be deployed, operationalized, monitored, etc.  Twisted even has weird little edge-cases of its own (like the plugin system) which can sometimes complicate things.  So by all means please don't feel like you need to stop sharing your view.

-glyph




From glyph at twistedmatrix.com  Thu Feb 23 15:24:07 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:07 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <E3F7A5E2-BDD1-4AE2-898E-A0A61F31A354@twistedmatrix.com>
 <34c50de3-c21d-95ba-d3a9-c64299ae8b23@imperial.ac.uk>
Message-ID: <73402B55-C204-48D9-B352-80BE16C3BFE2@twistedmatrix.com>


> On Feb 23, 2017, at 4:12 AM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 23/02/17 09:11, Glyph Lefkowitz wrote:
> 
>> Yes, and building these binary artifacts is often harder than some
>> people (cough, alpine, cough) seem to think.  But there are better ways
>> to square this circle than restricting yourself to the versions of
>> /python/ libraries that happen to be available in your distro.
> 
> I don't disagree. I'm not defending the practice. But it is *clearly* a thing people do, and understanding the reasons is, IMO, important.

Oh, absolutely.  What I'm driving at here - as I said perhaps more clearly in the other message I just sent - is that there are really good reasons to use distro infrastructure (C build toolchain complexity in large, critical dependencies) and not-so-good reasons (there just happen to be preinstalled python packages you could, easily, with zero build configuration, pip install) and the way that we give guidance to those folks should be informed by that.

>> Windows, the reason they're not shipping manylinux1 wheels right now has
>> to do with the political implications of auto-shipping a second copy of
>> openssl to Linux distros that expect to manage security upgrades centrally).
> 
> Understandable. I'm sure anyone who was around at the time remembers the zlib fiasco.

I remember enough zlib fiascos that I am not even sure which one you're referring to :).

>> It might seem weird to use Python-specific tooling and per-application
>> vendoring for Python dependencies, and yet use distro-global dynamic
>> linking for C dependencies.  But, this is actually a perfectly cromulent
>> strategy, and I think this bears a more in-depth explanation.
> 
> It's not at all weird. It's exactly what we do, and I agree with your rationale.

Cool.  Glad to hear that this is being invented in parallel in various places :).


From glyph at twistedmatrix.com  Thu Feb 23 15:24:08 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 23 Feb 2017 14:24:08 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <CA+hid6E7V71fkzozMGBXzCQWB5RBmn1xfJGLoBXaequZdpMyQQ@mail.gmail.com>
Message-ID: <E65DF3CE-B2DB-4AB9-8E51-5CB9423A369B@twistedmatrix.com>


> On Feb 23, 2017, at 4:04 AM, James Broadhead <jamesbroadhead at gmail.com> wrote:
> 
> On 23 February 2017 at 08:36, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Go's build toolchain has many features worth envying but most of its advantages have to do with deployments _outside_ of containers, where you have to ship to customer environments with fraught and unknown system configurations.  If you have any level of control over your deployment target, Go and, say, Python with PEX are ~equivalent .
> 
> I was going to chime in about pex earlier - but since you need to provide your own interpreter, I didn't think it solved his whole issue.

Fully static binaries / integrated interpreters would be a good target for build tooling to hit, but I do think that (especially if you know your deployment platform) relying on _nothing_ but a Python interpreter, pex in any specific Linux environment is probably doable.

> Otherwise, pex is a great format for deploying python easily. 

Yep.

> At Twitter, we deployed the (Twisted) TweetDeck API using it for years, with a ton of dependencies, both c-libs and pure python.

This is good to know!

> Really nice to be able to produce a deployable artefact, which can be hashed & stored for re-deploy later if needed (and ideally integration-tested & staged by passing different args on the cli). 

I originally felt like the lack of an interpreter made it useless, and I think I was very much mistaken.  Moshe has been showing me all the problems that pex can address, and I'm slowly starting to adopt it in my own deployments.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170223/3990e33b/attachment-0002.html>

From hs at ox.cx  Fri Feb 24 03:25:10 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Fri, 24 Feb 2017 11:25:10 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
Message-ID: <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>

> 
>> I'm trying to point out that *some* might find the system Python attractive because they can use OS-supplied python packages in lieu of the effort of setting up a binary build infrastructure.
> 
> So, I think everyone has a different perspective here; Hynek seems to be saying "all containers all the time" ;-).  But from my perspective, linux distros provide a super useful service by providing a gigantic integrated build environment for TONS of C code.  Avoiding the time and cost associated with setting up, i.e., an ImageMagick dev environment is _WELL_ worth the complexity of distro packages.  Multiply this out by dozens of dependencies that a large application or site ends up needing, and distro packaging pays for itself many times over.

I’m not sure what you mean by me meaning “all containers all the time” I feel I should rephrase my point:

- You should statically link your Python application so you have always full control over your deployments.
- Don’t ship build tools to prod servers.

The way we can achieve that is by building virtualenvs on build servers.  *How* you get those virtualenvs to the deployments target I don’t care.  Whether you pex them or not, I don’t care either¹.  I’ve used .debs with great success in the past and I’m using Docker containers now (and so far we’re not out of business :)).

I consider Linux distributions very nice build environments for my own software. :)  And there’s thing we totally don’t compile ourselves like OpenSSL.  It just doesn’t make any goddam sense to rely on the limited and outdated offer of Python modules from your distribution.  Even if they don’t upgrade them under your butt and introduce regressions.

—h

¹ For me apps always go to the same location so relocability is not an issue.  Contrary I’m not a super fan of having one opaque blob on server; the transparent structure of a virtualenv is something I learned to appreciate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170224/6527025d/attachment-0002.html>

From tobias.oberstein at crossbario.com  Fri Feb 24 03:25:50 2017
From: tobias.oberstein at crossbario.com (Tobias Oberstein)
Date: Fri, 24 Feb 2017 11:25:50 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <dbb0ce82-7286-99b6-4a56-398626e55d86@imperial.ac.uk>
 <EF6166C6-6D5A-4F56-BECA-AA938D25B796@ox.cx>
Message-ID: <cf18a4b4-06f5-6999-8546-b5cddf93ec3b@crossbario.com>

> Honestly, in the years I’ve been running Python services of different sizes, I have found that distro-provided system packages – unless you are writing software *for* a distribution – are loaded with so many downsides that they’re almost never worth it.  They’re a shortcut and shortcuts usually bite back *eventually*.

Absolutely.

Distro Python module packages are useless to dangerous most of the time.

Eg Debian jessie is shipping Autobahn in a >3 years old version (0.5.14).

 From my perspective, Debian is hurting Autobahn's users this way - but 
we (upstream) cannot stop them distributing old outdated artifacts.

The whole idea of having a "system wide" Python installation is 
technically wrong and bound to fail IMO.

FWIW, I am in the Go/Rust camp: shipping single executables that are 
statically linked down to and including OpenSSL _and_ the C/C++ stdlibs.

It's just awesome to "scp etcd" from a CentOS 6 to a Ubuntu 16 or 
whatever and it "just works".

I have tried different approaches to get there with larger Python 
projects, but haven't found the equivalent to Go/Rust yet.

Apart from that: Ubuntu has broken new ground with snapcraft - this is 
much better than debs .. it puts upstream into power gain. Let upstream 
talk directly to users, kicking out distro package "maintainers".

Anway, just my 2cts

/Tobias

>
> —h
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From tommost at gmail.com  Fri Feb 24 16:29:03 2017
From: tommost at gmail.com (Tom Most)
Date: Fri, 24 Feb 2017 15:29:03 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
Message-ID: <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>

On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> Is there a "pre-installed on hardware that's hard to change" issue here?
> Do Raspbian users generally upgrade to new stable releases?
>
> -g
>

There's also a substantial lag after a Debian release before the
corresponding version of Raspbian becomes generally available. Debian
Jessie was released April 2015, but Raspbian Jessie looks to have gone GA
in September[1] (though you could get it sooner by adjusting your apt
sources).

[1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/

---Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170224/6aa7d71c/attachment-0002.html>

From glyph at twistedmatrix.com  Fri Feb 24 19:01:31 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 24 Feb 2017 18:01:31 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
Message-ID: <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>


> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com> wrote:
> 
> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?
> 
> -g
> 
> There's also a substantial lag after a Debian release before the corresponding version of Raspbian becomes generally available. Debian Jessie was released April 2015, but Raspbian Jessie looks to have gone GA in September[1] (though you could get it sooner by adjusting your apt sources).
> 
> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/ <https://www.raspberrypi.org/blog/raspbian-jessie-is-here/>

So Jesse (== CPython 3.4) is still what's current for Raspbian users?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170224/b6c0cc61/attachment-0002.html>

From jamesbroadhead at gmail.com  Sat Feb 25 02:09:21 2017
From: jamesbroadhead at gmail.com (James Broadhead)
Date: Sat, 25 Feb 2017 09:09:21 +0000
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
Message-ID: <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>

On 24 February 2017 at 10:25, Hynek Schlawack <hs at ox.cx> wrote:
>
> ...  Contrary I’m not a super fan of having one opaque blob on server; the
> transparent structure of a virtualenv is something I learned to appreciate.
> ...
>

A zipfile containing a virtualenv (pex) isn't all that opaque -- with the
right editor plugins, you can even *cough* edit the contained source inside
one.

Back when pex was a lot younger, this was handy for quick debugging as we
were migrating from source-in-venvs-on-bare-metal-chroots to
pexed-in-mesos-containers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/f1066605/attachment-0002.html>

From hs at ox.cx  Sat Feb 25 02:19:09 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 25 Feb 2017 10:19:09 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
Message-ID: <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>

> ...  Contrary I’m not a super fan of having one opaque blob on server; the transparent structure of a virtualenv is something I learned to appreciate. ... 
> 
> A zipfile containing a virtualenv (pex) isn't all that opaque -- with the right editor plugins, you can even *cough* edit the contained source inside one. 
> 
> Back when pex was a lot younger, this was handy for quick debugging as we were migrating from source-in-venvs-on-bare-metal-chroots to pexed-in-mesos-containers

To be clear: I’m not trying to talk anybody out of using pex. :)  I’m just saying there’s a slight downside (+ another tool) and no tangible upsides in Docker for me so it’s not a good fit for me.

That said, I’m gonna try it out in my deb-based deployments (contrary to popular believe, you can’t/shouldn’t put *everything* into containers) because we run ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/839d4b43/attachment-0002.html>

From clayton.daley at gmail.com  Sat Feb 25 10:03:34 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Sat, 25 Feb 2017 11:03:34 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
Message-ID: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>

Are you talking about building Docker containers on the fly?  We use Docker
extensively, but our build machine makes images that we push to Dockerhub
(private repos).  This has a lot of advantages:

   - Our images (on the hub) are effectively pinned at the version they
   were built
   - Our test and production servers (can, if we want) always get exactly
   the same image (even if we need to rebuild a server months later)
   - We test all our servers so we only have to manually pin packages
   (python or apt) if we run into regressions or other incompatibilities (i.e.
   an upgraded package that is no longer compatible with a manually pinned
   package)
   - Our build machine caches all the intermediate images (i.e. after each
   docker step).  We intentionally sequence our images to place oft-changing
   items at the end.
      - Unless I change the list of apt packages, that layer is never
      rebuilt.
      - We have an extra step that uploads *just* the requirements files
      before pip installing
      - Our last step is the app code so changes to this layer are just a
      cached layer + PUT (i.e. seconds)
      - This optimization also makes our containers super efficient to
      upgrade because we only download the changed layers

This sounds like it covers a lot of the PEX advantages plus the added
benefits of containerization.

Clayton Daley

On Sat, Feb 25, 2017 at 3:19 AM, Hynek Schlawack <hs at ox.cx> wrote:

> ...  Contrary I’m not a super fan of having one opaque blob on server; the
>> transparent structure of a virtualenv is something I learned to appreciate.
>> ...
>>
>
> A zipfile containing a virtualenv (pex) isn't all that opaque -- with the
> right editor plugins, you can even *cough* edit the contained source inside
> one.
>
> Back when pex was a lot younger, this was handy for quick debugging as we
> were migrating from source-in-venvs-on-bare-metal-chroots to
> pexed-in-mesos-containers
>
>
> To be clear: I’m not trying to talk anybody out of using pex. :)  I’m just
> saying there’s a slight downside (+ another tool) and no tangible upsides
> in Docker for me so it’s not a good fit for me.
>
> That said, I’m gonna try it out in my deb-based deployments (contrary to
> popular believe, you can’t/shouldn’t put *everything* into containers)
> because we run ZFS and apt-get + lots of files in a deb =
> omgiwannamurdersomeone.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/b37372b0/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Feb 25 16:50:58 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 15:50:58 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
Message-ID: <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>


> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> Are you talking about building Docker containers on the fly?

Pretty sure Hynek has proper build-server/production separation.

> We use Docker extensively, but our build machine makes images that we push to Dockerhub (private repos).  This has a lot of advantages:
> Our images (on the hub) are effectively pinned at the version they were built
> Our test and production servers (can, if we want) always get exactly the same image (even if we need to rebuild a server months later)
> We test all our servers so we only have to manually pin packages (python or apt) if we run into regressions or other incompatibilities (i.e. an upgraded package that is no longer compatible with a manually pinned package)
> Our build machine caches all the intermediate images (i.e. after each docker step).  We intentionally sequence our images to place oft-changing items at the end.  
> Unless I change the list of apt packages, that layer is never rebuilt.
> We have an extra step that uploads *just* the requirements files before pip installing
> Our last step is the app code so changes to this layer are just a cached layer + PUT (i.e. seconds)
> This optimization also makes our containers super efficient to upgrade because we only download the changed layers
> This sounds like it covers a lot of the PEX advantages plus the added benefits of containerization.

Pex and containerization are completely orthogonal. You can use pex inside or outside of a container, and you can use a container with or without pex.

Hynek lays out a good case against pex inside containers, but the blog post from Moshe that I linked to earlier lays out a good reason to use them together.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/d072dd3d/attachment-0002.html>

From clayton.daley at gmail.com  Sat Feb 25 16:57:40 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Sat, 25 Feb 2017 17:57:40 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
Message-ID: <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>

On Sat, Feb 25, 2017 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com>
> wrote:
>
> Are you talking about building Docker containers on the fly?
>
>
> Pretty sure Hynek has proper build-server/production separation.
>

Pretty sure Hynek can speak for himself.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/3cae1059/attachment-0002.html>

From kebin70 at gmail.com  Sat Feb 25 17:41:03 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Sat, 25 Feb 2017 16:41:03 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
Message-ID: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>

I have a long running twisted pyqt process which occasionally throws a
Received signal 11.

I believe it's in the underlying QtWebEngineView since the twisted process
continues to run.  Whatever the reason I would like to figure out a way to
catch this and stop the reactor either in process, or by another process
monitor.  Any suggestions either twisted or otherwise would be greatly
appreciated.

Below is a bit of the stack trace dumped to /var/log/syslog

0x7fd855447a8f
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 2   0x7fd855447c74
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 3   0x7fd8555d6a82
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 4   0x7fd8556ababd
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 5   0x7fd8556af2f6
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 6   0x7fd85586e52d
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 7   0x7fd85586f511
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 8   0x7fd85570dbc3
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 9   0x7fd85570dd92
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 10  0x7fd855516c0c
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 11  0x7fd85551dacd
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 12  0x7fd85596c5d3
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: 13  0x35946920c1fb
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: Received signal 11 SEGV_MAPERR
0000fbadbeef
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #0 0x7fd856d5ca2e <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #1 0x7fd856d5cdeb <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #2 0x7fd8526d3390 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #3 0x7fd858404408 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #4 0x7fd855447a8f <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #5 0x7fd855447c74 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #6 0x7fd8555d6a82 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #7 0x7fd8556ababd <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #8 0x7fd8556af2f6 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #9 0x7fd85586e52d <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #10 0x7fd85586f511 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #11 0x7fd85570dbc3 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #12 0x7fd85570dd92 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #13 0x7fd855516c0c <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #14 0x7fd85551dacd <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #15 0x7fd85596c5d3 <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: #16 0x35946920c1fb <unknown>
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   r8: 00007fd85a2f38c0  r9:
0000000000000013 r10: 0000000000000000 r11:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:  r12: 00007fd858aa25c8 r13:
00007fd858ab91ee r14: 00007fd85a0c9848 r15:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   di: 0000000000000000  si:
0000000000000013  bp: 00007fd858ab91ee  bx:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   dx: 00007fd851e1d770  ax:
00000000fbadbeef  cx: 00007fd851b4e6fd  sp:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:   ip: 00007fd858404408 efl:
0000000000010246 cgf: 0000000000000033 erf:
Feb 25 22:01:32 ip-10-0-0-116 python[1836]:  trp: 000000000000000e msk:
0000000000000000 cr2: 00000000fbadbeef
Feb 25 22:01:32 ip-10-0-0-116 python[1836]: [end of stack trace]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/857c32f1/attachment-0002.html>

From glyph at twistedmatrix.com  Sat Feb 25 17:57:44 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 16:57:44 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <EA9F58DD-D2AF-4B79-A5C9-3986AC96A0E6@twistedmatrix.com>
 <CACKEAnXXWA6hxJSi6i2_mRnOVyKGOYqJi7bY9enEym-9LwPUHA@mail.gmail.com>
Message-ID: <E8D70D5A-182F-4198-865B-FB2386613008@twistedmatrix.com>


> On Feb 25, 2017, at 3:57 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> On Sat, Feb 25, 2017 at 5:50 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 25, 2017, at 9:03 AM, Clayton Daley <clayton.daley at gmail.com <mailto:clayton.daley at gmail.com>> wrote:
>> 
>> Are you talking about building Docker containers on the fly?
> 
> Pretty sure Hynek has proper build-server/production separation.
> 
> Pretty sure Hynek can speak for himself. 

I didn't mean to suggest he couldn't :).

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170225/3538ea5a/attachment-0002.html>

From trac at twistedmatrix.com  Sun Feb 26 00:05:19 2017
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 26 Feb 2017 07:05:19 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1488092719.2.2576151210906702062@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170226/29201ce9/attachment-0002.html>

From hs at ox.cx  Sun Feb 26 00:08:50 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Sun, 26 Feb 2017 08:08:50 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
Message-ID: <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>


> Are you talking about building Docker containers on the fly? 

I’m a bit baffled what gave you that idea after I’ve spent days arguing for strict build/runtime separation?

> We use Docker extensively, but our build machine makes images that we push to Dockerhub (private repos).  This has a lot of advantages:
> Our images (on the hub) are effectively pinned at the version they were built
> Our test and production servers (can, if we want) always get exactly the same image (even if we need to rebuild a server months later)
> We test all our servers so we only have to manually pin packages (python or apt) if we run into regressions or other incompatibilities (i.e. an upgraded package that is no longer compatible with a manually pinned package)
> Our build machine caches all the intermediate images (i.e. after each docker step).  We intentionally sequence our images to place oft-changing items at the end.  
> Unless I change the list of apt packages, that layer is never rebuilt.
> We have an extra step that uploads *just* the requirements files before pip installing
> Our last step is the app code so changes to this layer are just a cached layer + PUT (i.e. seconds)
> This optimization also makes our containers super efficient to upgrade because we only download the changed layers
> This sounds like it covers a lot of the PEX advantages plus the added benefits of containerization.

I don’t see anything that contradicts anything that I (or glyph) have written.  At this point we were merely discussing what kind of isolated build artifact goes into the container/deb: a pex (= single file) or a vanilla venv (= directory structure).

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170226/2521bc9a/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Feb 26 00:59:52 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Sat, 25 Feb 2017 23:59:52 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
Message-ID: <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>


> On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> I have a long running twisted pyqt process which occasionally throws a Received signal 11.  
> 
> I believe it's in the underlying QtWebEngineView since the twisted process continues to run.  Whatever the reason I would like to figure out a way to catch this and stop the reactor either in process, or by another process monitor.  Any suggestions either twisted or otherwise would be greatly appreciated.

Presumably the QtWebEngineView is running a subprocess, then?  This is really a Qt question rather than a Twisted question, because the QtWebEngineView should be emitting some kind of signal when its rendering process crashes.  (If it doesn't I imagine you're just out of luck here and you should report a bug to the Qt developers...)

-glyph


From kebin70 at gmail.com  Sun Feb 26 12:16:09 2017
From: kebin70 at gmail.com (Kevin Mcintyre)
Date: Sun, 26 Feb 2017 11:16:09 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
 <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
Message-ID: <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>

Thanks glyph - really appreciate all the times you've answered my questions!

QtWebEngineView is running a subprocess.

/home/ubuntu/Qt5.8.0/5.8/gcc_64/libexec/QtWebEngineProcess --type=renderer
--disable-accelerated-video-decode --disable-gpu-memory-buffer-video-frames
--enable-threaded-compositing --use-gl=desktop --disable-webrtc-hw-encoding
--primordial-pipe-token=032B94B57A61DAE34BD0F90551F9ABB6 --lang=en-US
--enable-pinch --num-raster-threads=2 --content-image-texture-target=3553

QT can sometimes be helpful, but bug resolution can take a while.

Any suggestions outside of twisted for detecting segfaults?  I'm thinking
just to monitor /var/log/syslog





On Sat, Feb 25, 2017 at 11:59 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> >
> > I have a long running twisted pyqt process which occasionally throws a
> Received signal 11.
> >
> > I believe it's in the underlying QtWebEngineView since the twisted
> process continues to run.  Whatever the reason I would like to figure out a
> way to catch this and stop the reactor either in process, or by another
> process monitor.  Any suggestions either twisted or otherwise would be
> greatly appreciated.
>
> Presumably the QtWebEngineView is running a subprocess, then?  This is
> really a Qt question rather than a Twisted question, because the
> QtWebEngineView should be emitting some kind of signal when its rendering
> process crashes.  (If it doesn't I imagine you're just out of luck here and
> you should report a bug to the Qt developers...)
>
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170226/2a08fab0/attachment-0002.html>

From exarkun at twistedmatrix.com  Sun Feb 26 16:51:54 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Sun, 26 Feb 2017 18:51:54 -0500
Subject: [Twisted-Python] Test coverage requirements
Message-ID: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>

Hi,

I'm looking at some <https://codecov.io/gh/twisted/twisted/pull/509> recent
<https://codecov.io/gh/twisted/twisted/pull/432> trunk
<https://codecov.io/gh/twisted/twisted/pull/652> commits
<https://codecov.io/gh/twisted/twisted/pull/695> (also, others) that seem
to have non-trivial untested code at at ReviewProcess
<https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Thingsyourbranchorpatchmustcontain>.
I can't tell if the codecov reports are wrong or if the development process
documentation is wrong or if the commits just violate policy or (I guess)
some mix of the three.

Can anyone shed any light on this?

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170226/3adb35f1/attachment-0002.html>

From ex.vitorino at gmail.com  Sun Feb 26 18:28:44 2017
From: ex.vitorino at gmail.com (ex vito)
Date: Mon, 27 Feb 2017 01:28:44 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <1670B171-E10F-4000-B396-503FCA63EEE2@gmail.com>


On 2017-02-26, at 23:51, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:

> I'm looking at some recent trunk commits (also, others) that seem to have non-trivial untested code at at ReviewProcess.  I can't tell if the codecov reports are wrong or if the development process documentation is wrong or if the commits just violate policy or (I guess) some mix of the three.
> 
> Can anyone shed any light on this?

Jean-Paul,

I'm the author of PR 652, one of the ones you pointed out.

Starting with https://codecov.io/gh/twisted/twisted/pull/652 and navigating to https://codecov.io/gh/twisted/twisted/pulls/652/src/src/twisted/internet/unix.py I'm not sure I understand what it is representing -- lines of code that tests did not cover, I guess. :)

However, the diff for that file in the PR, at https://github.com/twisted/twisted/pull/652/files#diff-32f19fc001798d7ea33686492428bdf2 does not touch any of the lines highlighted by the those codecov links.

Does this make any sense? (plain honest question, I'm not familiar with codecov other that using its output to guide missing test scenarios)

At some point, like I commented in https://github.com/twisted/twisted/pull/652#issuecomment-276334447, codecov tests were failing, complaining that a single non-changed line within the -3/+3 line diff boundaries wasn't being covered. I found that strange then.

One other thing I find strange is that trying to access any previous codecov test results from within that PR -- say the first run on Dec 30th -- ends up showing the same (or very similar?) report as the one you pointed out initially; in other words, complaining about lines that were not changed in any commit within that PR.

Again, I'm not aware of the details of codecov's operation, but it certainly is no longer reporting the same things it did back when the PR was being worked on. Whatever it is reporting now, at least with regards to PR 652, does not seem to match the associated diff.

Regards,
--
exvito

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/7383be4f/attachment-0002.html>

From adi at roiban.ro  Mon Feb 27 02:06:33 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Feb 2017 09:06:33 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <CAFycZ9csLME4uZUcvt06dPx5KGRbJRXfq2qUZGZBuixZJ-7QMQ@mail.gmail.com>

On 26 February 2017 at 23:51, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> Hi,
>
> I'm looking at some recent trunk commits (also, others) that seem to have
> non-trivial untested code at at ReviewProcess.  I can't tell if the codecov
> reports are wrong or if the development process documentation is wrong or if
> the commits just violate policy or (I guess) some mix of the three.
>
> Can anyone shed any light on this?

Besise https://codecov.io/gh/twisted/twisted/pulls/509/diff, the other
PRs looks OK and with good coverage.

In terms of codecov.io coverage I am using the "diff" view as I find
it less confusing.

The strong red lines are the ones which codecov considered that were
part of the patch and were not covered.
The yellow lines are for missing branch coverage in this patch... and
they will decrease the coverage percentage.

In summary:

For PR 509 - The diff coverage is 74.39%. ... this looks bad
For PR 652 -  The diff coverage is 98.7% ... not perfect, but pretty
good as the missing lines are in the test code area :)

--------

At some point we had a commit status check for 100% diff coverage, but
I remember that it was not popular.

If we are not aiming for the ultimate quality dev process we can still
consider having a lower barer of something like 75% or 95% diff
coverage... For PR less of this value, you will see a big warning...
but people from the Twisted admin team can still commit them. Simple
(non-admin) collaborators can only merge them of the diff coverage is
above that limit.

I am for a check for 100% coverage as many times it helped me get out
of comfort zone and "forced" to write better tests  and better code
... I know that libertarians might not like being forced to do things
so I understand why the hard check was not popular.

----------

For the good PRs which were mentioned here

For https://codecov.io/gh/twisted/twisted/pulls/695/diff the only line
without a coverage is the one in which the exception is raised if the
reactor is installed twice.

For https://codecov.io/gh/twisted/twisted/pulls/652/diff the uncovered
lines are the case in which a tests is is not skipped on OSX (this is
strange ... but maybe osx coverage are no longer published) ... and
the other one is the self.fail which is expected not be be called.

I think there was a discussion about covering self.fail() calls by
extracting them into assertion helper and making sure we have tests
for those assertion helpers.... so that we can ask all changes to also
have 100% test code coverage :)

For https://codecov.io/gh/twisted/twisted/pulls/432/diff there were
some changes in formatting (some parenthesis) which were indented and
that code was not previously covered ... so now it is considered code
on which someone made a change without having the tests to cover the
changes.

-- 
Adi Roiban



From exarkun at twistedmatrix.com  Mon Feb 27 05:59:25 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 07:59:25 -0500
Subject: [Twisted-Python] trac spam
Message-ID: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>

Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
clear from the UI how (actually I clicked a "delete" button in the UI but
the tickets are there so I guess "delete" doesn't mean what I think).

Jean-Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/06520d2d/attachment-0002.html>

From adi at roiban.ro  Mon Feb 27 06:41:12 2017
From: adi at roiban.ro (Adi Roiban)
Date: Mon, 27 Feb 2017 13:41:12 +0000
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
Message-ID: <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>

On 27 February 2017 at 12:59, Jean-Paul Calderone
<exarkun at twistedmatrix.com> wrote:
> Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
> clear from the UI how (actually I clicked a "delete" button in the UI but
> the tickets are there so I guess "delete" doesn't mean what I think).

I have removed the first one.

After you click delete, you need to scroll and to confirm the action.

I left the other one there as an exercise :)

> Jean-Paul
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Adi Roiban



From exarkun at twistedmatrix.com  Mon Feb 27 06:49:45 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 08:49:45 -0500
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
 <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
Message-ID: <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>

On Mon, Feb 27, 2017 at 8:41 AM, Adi Roiban <adi at roiban.ro> wrote:

> On 27 February 2017 at 12:59, Jean-Paul Calderone
> <exarkun at twistedmatrix.com> wrote:
> > Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's
> not
> > clear from the UI how (actually I clicked a "delete" button in the UI but
> > the tickets are there so I guess "delete" doesn't mean what I think).
>
> I have removed the first one.
>
> After you click delete, you need to scroll and to confirm the action.
>
> I left the other one there as an exercise :)
>

Hm I thought I clicked the button at the bottom.  Maybe I was on the wrong
page?  Which admin page should I be on?

Jean-Paul



>
> > Jean-Paul
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>
>
>
> --
> Adi Roiban
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/4ed7bcc0/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 12:17:32 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 11:17:32 -0800
Subject: [Twisted-Python] catching twisted pyqt segmentation fault
In-Reply-To: <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>
References: <CAA-sNEYLj+v7ufyghOmf=7FZN9-apv24tBrAj-TjN9X9Y+P6yQ@mail.gmail.com>
 <927C23C1-288B-4D76-A848-BC5F885BA917@twistedmatrix.com>
 <CAA-sNEY5tYQ=Bit1zOfBZwcwoGNKaRtdtsi4BwgSBXzio9n+vg@mail.gmail.com>
Message-ID: <D035E315-A760-4F65-BFEC-DACB6C5CC354@twistedmatrix.com>

In general, detecting segfaults in arbitrary processes on the system probably isn't possible.

Specifically, I looked up the docs for you ;).

Attach a handler to the QWebEngineView::renderProcessTerminated signal :).

https://doc.qt.io/qt-5/qwebengineview.html#renderProcessTerminated <https://doc.qt.io/qt-5/qwebengineview.html#renderProcessTerminated>

Hope this helps,

-glyph

> On Feb 26, 2017, at 11:16 AM, Kevin Mcintyre <kebin70 at gmail.com> wrote:
> 
> Thanks glyph - really appreciate all the times you've answered my questions!
> 
> QtWebEngineView is running a subprocess.
> 
> /home/ubuntu/Qt5.8.0/5.8/gcc_64/libexec/QtWebEngineProcess --type=renderer --disable-accelerated-video-decode --disable-gpu-memory-buffer-video-frames --enable-threaded-compositing --use-gl=desktop --disable-webrtc-hw-encoding --primordial-pipe-token=032B94B57A61DAE34BD0F90551F9ABB6 --lang=en-US --enable-pinch --num-raster-threads=2 --content-image-texture-target=3553
> 
> QT can sometimes be helpful, but bug resolution can take a while.
> 
> Any suggestions outside of twisted for detecting segfaults?  I'm thinking just to monitor /var/log/syslog 
> 
> 
> 
> 
> 
> On Sat, Feb 25, 2017 at 11:59 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
> > On Feb 25, 2017, at 4:41 PM, Kevin Mcintyre <kebin70 at gmail.com <mailto:kebin70 at gmail.com>> wrote:
> >
> > I have a long running twisted pyqt process which occasionally throws a Received signal 11.
> >
> > I believe it's in the underlying QtWebEngineView since the twisted process continues to run.  Whatever the reason I would like to figure out a way to catch this and stop the reactor either in process, or by another process monitor.  Any suggestions either twisted or otherwise would be greatly appreciated.
> 
> Presumably the QtWebEngineView is running a subprocess, then?  This is really a Qt question rather than a Twisted question, because the QtWebEngineView should be emitting some kind of signal when its rendering process crashes.  (If it doesn't I imagine you're just out of luck here and you should report a bug to the Qt developers...)
> 
> -glyph
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/e5b2e59a/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 12:54:07 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 11:54:07 -0800
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
Message-ID: <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>

> On Feb 26, 2017, at 3:51 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> Hi,
> 
> I'm looking at some <https://codecov.io/gh/twisted/twisted/pull/509> recent <https://codecov.io/gh/twisted/twisted/pull/432> trunk <https://codecov.io/gh/twisted/twisted/pull/652> commits <https://codecov.io/gh/twisted/twisted/pull/695> (also, others) that seem to have non-trivial untested code at at ReviewProcess <https://twistedmatrix.com/trac/wiki/ReviewProcess#Authors:Thingsyourbranchorpatchmustcontain>.  I can't tell if the codecov reports are wrong or if the development process documentation is wrong or if the commits just violate policy or (I guess) some mix of the three.
> 
> Can anyone shed any light on this?

Thanks, JP.  Your habit of post-hoc commit review really helps keep the process honest - I wish more folks (myself included) had more time for it!

I wasn't party to most of these changes, except for 432, where I can say based on local testing I was very clear that coverage was not in fact an issue, and codecov was misreporting it.  So I can't comment on most of them specifically.

Generally though, I can say that Codecov, while more reliable than coveralls, is unfortunately really flaky.  (Case in point, right now, clicking on all the URLs you posted here, I just see "AccessDeniedAccess Denied" followed by a long 64-bit identifier which I'm not pasting here for fear that it's some kind of github credential.)  Its general unreliability is the main reason we removed the hard coverage requirement that blocked merging.

That said, it has been improving and if it keeps improving at the rate it has been, I expect that we'd be able to put that coverage blocker back in in another 3-4 months.  Perhaps something to talk about at PyCon.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/ba74d304/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 13:33:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 12:33:16 -0800
Subject: [Twisted-Python] trac spam
In-Reply-To: <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>
References: <CAEeXt4NrPpREzM0y06BtMysrb0vsj1Pwt3TRMdmdGQ1_WZRTdw@mail.gmail.com>
 <CAFycZ9c4byAoj-5C44hZVZ0DeVWXzm_cEdorkNe5MGYryB4iPg@mail.gmail.com>
 <CAEeXt4OO8kiXAuzDdMg29gnh7nK8mLfwJtLHo5yRUuHaoHu0fw@mail.gmail.com>
Message-ID: <B249B0E8-7413-4FEB-A355-4B922A2F5952@twistedmatrix.com>


> On Feb 27, 2017, at 5:49 AM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Feb 27, 2017 at 8:41 AM, Adi Roiban <adi at roiban.ro <mailto:adi at roiban.ro>> wrote:
> On 27 February 2017 at 12:59, Jean-Paul Calderone
> <exarkun at twistedmatrix.com <mailto:exarkun at twistedmatrix.com>> wrote:
> > Tickets 9058 and 9059 are spam.  I would have cleaned them up but it's not
> > clear from the UI how (actually I clicked a "delete" button in the UI but
> > the tickets are there so I guess "delete" doesn't mean what I think).
> 
> I have removed the first one.
> 
> After you click delete, you need to scroll and to confirm the action.
> 
> I left the other one there as an exercise :)
> 
> Hm I thought I clicked the button at the bottom.  Maybe I was on the wrong page?  Which admin page should I be on?

For now, I've deleted the offending ticket.

You shouldn't be on an "admin" page, per se - if you have the relevant permissions, you should see the "delete" button on the ticket itself, and then there's a confirmation page.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/7664cbdb/attachment-0002.html>

From mithrandi at mithrandi.net  Mon Feb 27 16:00:17 2017
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 27 Feb 2017 23:00:17 +0000
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
Message-ID: <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>

On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> That said, it has been *improving* and if it keeps improving at the rate
> it has been, I expect that we'd be able to put that coverage blocker back
> in in another 3-4 months.  Perhaps something to talk about at PyCon.
>

I think at least one problem that we're suffering from here is our fault,
rather than Codecov's: the coverage of the test suite is not stable due to
non-determinism in the test suite. That is, the lines executed during a
test run are not the same every time due to things like ordering / timing
races / etc. This means that "changes" to coverage may show up for a
particular PReven though nothing in that PR is actually responsible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/c55c92b6/attachment-0002.html>

From exarkun at twistedmatrix.com  Mon Feb 27 16:33:44 2017
From: exarkun at twistedmatrix.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2017 18:33:44 -0500
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
 <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
Message-ID: <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>

On Mon, Feb 27, 2017 at 6:00 PM, Tristan Seligmann <mithrandi at mithrandi.net>
wrote:

> On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>> That said, it has been *improving* and if it keeps improving at the rate
>> it has been, I expect that we'd be able to put that coverage blocker back
>> in in another 3-4 months.  Perhaps something to talk about at PyCon.
>>
>
> I think at least one problem that we're suffering from here is our fault,
> rather than Codecov's: the coverage of the test suite is not stable due to
> non-determinism in the test suite. That is, the lines executed during a
> test run are not the same every time due to things like ordering / timing
> races / etc. This means that "changes" to coverage may show up for a
> particular PReven though nothing in that PR is actually responsible.
>
>
Changes to Twisted code which are only sometimes covered by the test suite
sound like they would violate a 100% coverage rule.  But I guess the
experience of looking at a codecov report is so bad/confusing that it's not
surprising authors/reviewers might fail to see what's going on and fix the
non-deterministic.

Particularly for code that requires coverage measurements on multiple
platforms (ie, you basically *can't* do it locally), it seems like it would
be easier (though, to be clear, *bad*) to just forget about it and hope
everything is covered...

A tool that pointed out coverage differences between multiple runs of the
same version of the code would be a useful thing to start pointing out
where these flaws in the Twisted test suite lie, right?  And then each area
could be given deterministic test coverage instead...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/b41b4b82/attachment-0002.html>

From tommost at gmail.com  Mon Feb 27 16:38:29 2017
From: tommost at gmail.com (Tom Most)
Date: Mon, 27 Feb 2017 15:38:29 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
 <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
Message-ID: <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>

Yes, this is what my Raspbian system reports:

Python 3.4.2 (default, Oct 19 2014, 13:31:11)
[GCC 4.9.1] on linux

---Tom

On Fri, Feb 24, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com> wrote:
>
> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
> wrote:
>
>>
>> Is there a "pre-installed on hardware that's hard to change" issue here?
>> Do Raspbian users generally upgrade to new stable releases?
>>
>> -g
>>
>
> There's also a substantial lag after a Debian release before the
> corresponding version of Raspbian becomes generally available. Debian
> Jessie was released April 2015, but Raspbian Jessie looks to have gone GA
> in September[1] (though you could get it sooner by adjusting your apt
> sources).
>
> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/
>
>
> So Jesse (== CPython 3.4) is still what's current for Raspbian users?
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/80c94f4f/attachment-0002.html>

From clayton.daley at gmail.com  Mon Feb 27 17:05:48 2017
From: clayton.daley at gmail.com (Clayton Daley)
Date: Mon, 27 Feb 2017 18:05:48 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
	alternatives
In-Reply-To: <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
Message-ID: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>

On Sun, Feb 26, 2017 at 1:08 AM, Hynek Schlawack <hs at ox.cx> wrote:

>
> Are you talking about building Docker containers on the fly?
>
>
> I’m a bit baffled what gave you that idea after I’ve spent days arguing
> for strict build/runtime separation?
>

I was just trying to figure out where you were having this problem:

> ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone

I heard the opposite of what you meant by this comment -- that you were
deploying apt-gets + debs using docker and the combination had you wanting
to murder someone. A really sharp dev wrote our software, but did a poor
job sequencing Dockerfiles... and I had that exact same reaction.  My
question had nothing to do with build-runtime separation... just docker
optimization. On a dev (not ops) list, it didn't seem like a crazy question.

Obviously Glyph couldn't answer this question so his interjection came off
as condescendingly unhelpful.  Perhaps it's not an impression he deserves,
but he got off to a horrible start when he responded to my first ever
Twisted question (http://stackoverflow.com/questions/22896993/persisting-
data-in-a-twisted-app) without bothering to add anything (sound familiar?).

I rarely interject because I'm no developer... just an entrepreneurial
jack-of-all-trades (masters in business, bachelors in business, minor in CS
-- albeit from Carnegie Mellon) that sometimes contributes to our
partly-Twisted product.  However, you've succeeded in making my unusual
perspective feel most unwelcome... so you'll be glad to know that you're
never going to have to suffer me again.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/e8ee12d8/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 17:46:11 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 16:46:11 -0800
Subject: [Twisted-Python] Test coverage requirements
In-Reply-To: <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>
References: <CAEeXt4MnOoxFUs5BgEb84cHY5Cn7Y7Re6qHTJ=2=28V3oiy5Bw@mail.gmail.com>
 <5F8BA78E-3244-489E-AA01-320A2490B345@twistedmatrix.com>
 <CAMcKhMTcu_jyKYuDNxTgfS0jcAvAxPNKibo1=3X1+okpYz87Rw@mail.gmail.com>
 <CAEeXt4O6c=1UcT32GPNc0T5YH8dBFDDspqJbSBg+G+OqEc+yiw@mail.gmail.com>
Message-ID: <DDD3859F-7AD0-4F35-9044-786A009DD308@twistedmatrix.com>


> On Feb 27, 2017, at 3:33 PM, Jean-Paul Calderone <exarkun at twistedmatrix.com> wrote:
> 
> On Mon, Feb 27, 2017 at 6:00 PM, Tristan Seligmann <mithrandi at mithrandi.net <mailto:mithrandi at mithrandi.net>> wrote:
> On Mon, 27 Feb 2017 at 21:54 Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> That said, it has been improving and if it keeps improving at the rate it has been, I expect that we'd be able to put that coverage blocker back in in another 3-4 months.  Perhaps something to talk about at PyCon.
> 
> I think at least one problem that we're suffering from here is our fault, rather than Codecov's: the coverage of the test suite is not stable due to non-determinism in the test suite. That is, the lines executed during a test run are not the same every time due to things like ordering / timing races / etc. This means that "changes" to coverage may show up for a particular PReven though nothing in that PR is actually responsible.
> 
> 
> Changes to Twisted code which are only sometimes covered by the test suite sound like they would violate a 100% coverage rule.  But I guess the experience of looking at a codecov report is so bad/confusing that it's not surprising authors/reviewers might fail to see what's going on and fix the non-deterministic.
> 
> Particularly for code that requires coverage measurements on multiple platforms (ie, you basically can't do it locally), it seems like it would be easier (though, to be clear, bad) to just forget about it and hope everything is covered...
> 
> A tool that pointed out coverage differences between multiple runs of the same version of the code would be a useful thing to start pointing out where these flaws in the Twisted test suite lie, right?  And then each area could be given deterministic test coverage instead...

While this is certainly an issue, I don't think it's the issue we're discussing here.  Unreliability of coverage is largely mitigated by the fact that the main thing we pay attention to is "patch coverage", which can be seen to fluctuate from commit to commit on a branch if the new test coverage is non-deterministic (and rarely is a PR an individual commit).  This is opposed to "coverage delta", which only looks at coverage before / coverage after and is indeed somewhat unpredictable due to old / bad tests.

So I can say when I've had to overrule codecov, it's almost never been because of flapping coverage lines outside of the patch under consideration (and the patches in consideration either have deterministic tests, or I ask the author to add them).

General improvements to build reliability often reduce coverage unreliability as well, so as we've been using Github more, which surfaces status visibility / mergeability to reviewers more, we've been fixing lots of little build-reliability issues and this problem continues to get smaller.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/2236d86e/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 17:46:57 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 16:46:57 -0800
Subject: [Twisted-Python] Removing support for old Python 3 versions
In-Reply-To: <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>
References: <CAMxb2isCPwEv4m6e24dyMuMCuWe9O6bsm602n6_6fXC4OtuE-Q@mail.gmail.com>
 <CAMxb2isRrXGeR2BXAnWWhM9mUTw8A4U4vgtAjCt62HFD3sHGEA@mail.gmail.com>
 <CAMxb2isp2y7Dny7T0Lp=0ZW_=4PsBUq8Yt=_+0QmLUxAYzb8Ww@mail.gmail.com>
 <CAMxb2iuHWgzQC4r9yc=5FQE_de1RipkX-JQNKzmm6H41unTcvA@mail.gmail.com>
 <CAMxb2iuY81_2vnWoJVk=H6rCgpQVfsER7uv6wnDZoGVDw7CcnA@mail.gmail.com>
 <CAMxb2ivS-SxZGabr8jrYuAJ2Dox4OgExFegbTef6X591f2uPvA@mail.gmail.com>
 <CAMxb2ivW3Xgsd+7NRCd_EfLsfdO7rf3MOrqsZB=ABt77Vm2Vag@mail.gmail.com>
 <CAMxb2ivzZWZnFPy02kyEnhVG72kD-gj-PqQ5KVYSumsDobJ2OA@mail.gmail.com>
 <CAMxb2ius360_=8tkxKe+aC7MOu2F2eQ9FUC8CdRojVSBFRJnyQ@mail.gmail.com>
 <CAMxb2itt3GmZPSOqSqg5E6pbxWghEKCpC2RW8cJKjUgu15kyCg@mail.gmail.com>
 <CAMxb2ivGN7xs7v74rHK0U-4QotD_omnF3trT-izXrJ0sFkhw-Q@mail.gmail.com>
 <CAMxb2ivcoLm+o_AFrAgXCU1eWuTAnLK8TCFqo=sr0stEs2xxNQ@mail.gmail.com>
 <CAMxb2isfuomGAH905ybMyqv8RviBqfWQqcTcCCrQHmrLaQ82XQ@mail.gmail.com>
 <CAMxb2isbL8tbOz-OreumaNGaNHj6ZkBLUXZCeSWQ1czHeghkwg@mail.gmail.com>
 <CAMxb2ivdVSsPNL_iV=-bwMF=GJNOt8Ut0_EOjsHa+SVdkSCzfg@mail.gmail.com>
 <CAMxb2iuvZKne_AzMeJcqnHZ51OticndLyH70_9eNfr2R2QjLeA@mail.gmail.com>
 <CAMxb2iuMvHtvEpmA38A+aFe=YCb0esgPJd3Tyd=pYTAc7dwKmg@mail.gmail.com>
 <CAMxb2iv2W_m3UyO=mLhL_6aVNNNHVPMx1Bps9jYhq04pUChxog@mail.gmail.com>
 <CAMxb2iv56D4m2FTEkBc+NVjLz_s49k7uWr1ZFKPkFWeyfpk-7g@mail.gmail.com>
 <6BE88578-8259-418D-B9A0-E1CA92249124@ox.cx>
 <CAD-DQxQU6iirO6MiMn=JH0Ujqo7ZMUZFhsmH6w2S+Le1yEUQTg@mail.gmail.com>
 <275E80BB-FE69-40A1-9711-FB41F756B9C2@twistedmatrix.com>
 <CAK4RBD8m5NRz7=h_ExOhiQynsNTxDfSR_SvY-LMFtRJ_QSQ+GA@mail.gmail.com>
 <13A635B1-ACCB-4F03-AF2F-9EDE881B58EE@twistedmatrix.com>
 <CAK4RBD_myPOb+9+Q=pfL6b8royXZTtQ93kN2fe3pUAa14s2uHg@mail.gmail.com>
Message-ID: <D12AB87F-878C-4B77-9AA6-56E25C3BAF98@twistedmatrix.com>

Perhaps we should add a Raspbian builder if this is a platform of interest to Twisted users.  (And I do think it should be.)

Are there big / fast raspberry pi emulators so we don't need to wait for the test suite to run on such a slow / small machine?

> On Feb 27, 2017, at 3:38 PM, Tom Most <tommost at gmail.com> wrote:
> 
> Yes, this is what my Raspbian system reports:
> 
> Python 3.4.2 (default, Oct 19 2014, 13:31:11) 
> [GCC 4.9.1] on linux
> 
> ---Tom
> 
> On Fri, Feb 24, 2017 at 6:01 PM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
> 
>> On Feb 24, 2017, at 3:29 PM, Tom Most <tommost at gmail.com <mailto:tommost at gmail.com>> wrote:
>> 
>> On Thu, Feb 23, 2017 at 1:30 AM, Glyph Lefkowitz <glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>> wrote:
>> 
>> Is there a "pre-installed on hardware that's hard to change" issue here?  Do Raspbian users generally upgrade to new stable releases?
>> 
>> -g
>> 
>> There's also a substantial lag after a Debian release before the corresponding version of Raspbian becomes generally available. Debian Jessie was released April 2015, but Raspbian Jessie looks to have gone GA in September[1] (though you could get it sooner by adjusting your apt sources).
>> 
>> [1]: https://www.raspberrypi.org/blog/raspbian-jessie-is-here/ <https://www.raspberrypi.org/blog/raspbian-jessie-is-here/>
> 
> So Jesse (== CPython 3.4) is still what's current for Raspbian users?
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com <mailto:Twisted-Python at twistedmatrix.com>
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python <http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python>
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/bc273168/attachment-0002.html>

From ldanielburr at me.com  Mon Feb 27 18:16:50 2017
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 27 Feb 2017 19:16:50 -0600
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <etPan.58b4cf82.7da42065.b3f@me.com>

Hi Clayton,

On February 27, 2017 at 6:07:14 PM, Clayton Daley (clayton.daley at gmail.com) wrote:

[SNIP]


Obviously Glyph couldn't answer this question so his interjection came off as condescendingly unhelpful.  Perhaps it's not an impression he deserves, but he got off to a horrible start when he responded to my first ever Twisted question (http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app) without bothering to add anything (sound familiar?).

I rarely interject because I'm no developer... just an entrepreneurial jack-of-all-trades (masters in business, bachelors in business, minor in CS -- albeit from Carnegie Mellon) that sometimes contributes to our partly-Twisted product.  However, you've succeeded in making my unusual perspective feel most unwelcome... so you'll be glad to know that you're never going to have to suffer me again.


I think your characterization various parties involved in this thread is unfair, and that you are expressing an inappropriate sense of entitlement.  Enumerating your academic degrees in no way enhances any point you are trying to make here, and strikes me as argument from authority.  It is a shame that some miscommunication has occurred, and I think a more positive outcome could be achieved if you’d walk back a few of these remarks and re-engage.

L. Daniel Burr
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/1e8fe56c/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Feb 27 18:30:46 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 27 Feb 2017 17:30:46 -0800
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <A533EEEB-52A8-4B8A-878A-68067C9BC2E2@twistedmatrix.com>

> On Feb 27, 2017, at 4:05 PM, Clayton Daley <clayton.daley at gmail.com> wrote:
> 
> On Sun, Feb 26, 2017 at 1:08 AM, Hynek Schlawack <hs at ox.cx <mailto:hs at ox.cx>> wrote:
> 
>> Are you talking about building Docker containers on the fly? 
> 
> I’m a bit baffled what gave you that idea after I’ve spent days arguing for strict build/runtime separation?
> 
> I was just trying to figure out where you were having this problem:
> 
> > ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone
> 
> I heard the opposite of what you meant by this comment -- that you were deploying apt-gets + debs using docker and the combination had you wanting to murder someone. A really sharp dev wrote our software, but did a poor job sequencing Dockerfiles... and I had that exact same reaction.  My question had nothing to do with build-runtime separation... just docker optimization. On a dev (not ops) list, it didn't seem like a crazy question.

The question as such is not crazy at all, but rather, Hynek has been, both in general and repeatedly in this specific thread, a strong proponent of strict build & run container separation.  What made the question confusing was that to ask it of him, in this way, implied that you weren't following his earlier suggestions, and it's not clear what you were reading into them if not "don't build containers on the fly".

> Obviously Glyph couldn't answer this question so his interjection came off as condescendingly unhelpful.

It was not my intention to condescend, and I'm sorry that I did; my intention was to express a similar sort of bafflement that Hynek did.  My intention was for it to be read more like "you must have read the same commitment to build and runtime separation that I did in Hynek's posts, so I'm not sure what you're referring to".

(Plus, this response was a quip in a longer reply mainly about Pex.)

> Perhaps it's not an impression he deserves, but he got off to a horrible start when he responded to my first ever Twisted question (http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app <http://stackoverflow.com/questions/22896993/persisting-data-in-a-twisted-app>) without bothering to add anything (sound familiar?).

The right thing to have done (with respect to the site's guidelines) would have been to vote to close (as "too broad" or perhaps "primarily opinion based") rather than to make that comment.  However, I find that closing users' questions, especially relatively those asked by users without much experience on the site (i.e.: sub-1k reputation), is often interpreted as a hostile dismissal, so I ask for an SSCCE which can guide the asker to a more narrowly-constrained question that hews more closely to the guidelines set forth on the site.  It really saddens me that a comment is taken as equally condescending; short of writing multiple paragraphs of apologetic preface for every piece of feedback, it's not clear what a regular answerer on the site ought to do.

The fact that nobody else bothered to answer this question, comment on it, or even upvote it (one of the 2 upvotes was mine; I tend to upvote questions which are otherwise well-asked but need editing for specificity) in the intervening two years suggests that my "not appropriate for SO" assessment was accurate.  What I was trying to tell you was "you aren't going to get any answers with a question phrased like this".

One of the reasons I'm responding to this throwaway comment in such detail is that this category of misunderstanding - that attempting to be helpful in a volunteer endeavor like answering strangers' questions can be interpreted as arrogance, dismissal, or hostility (and the grudge nursed for years after the fact!), is a significant emotional cost for anyone involved in any form of volunteer support for open source.  I'm in the middle of taking a year off from answering questions on SO for this exact reason.

So, if you're reading this message, and you're ever mad at someone rejecting your question (or your PR or your bug report or whatever), please take a moment to consider the transaction from their perspective.  They're commenting in an attempt to be helpful, and they've probably just answered 5 (or 10 or 50 or 100) similar questions, and so they may not be including the full context of their feedback.

Ironically, the question you asked on SO would have been great mailing list fodder, it just doesn't fit the format stipulated by Stack Overflow's guidelines.  The intersection of persistence and Twisted _is_ a subtle and non-obvious issue, one that I've personally been trying to help address recently (for example) by taking over maintenance of http://alchimia.readthedocs.io <http://alchimia.readthedocs.io/>.

> I rarely interject because I'm no developer... just an entrepreneurial jack-of-all-trades (masters in business, bachelors in business, minor in CS -- albeit from Carnegie Mellon) that sometimes contributes to our partly-Twisted product.  However, you've succeeded in making my unusual perspective feel most unwelcome... so you'll be glad to know that you're never going to have to suffer me again.

I'm very sorry to hear that's your impression of me, and sorrier still that it seems to extend to the community in general.  Certainly, making people feel welcome is an explicit part of our mission here.

Your perspective has been valuable over your substantial history with Twisted and I do hope you'll reconsider.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170227/4c7d3ded/attachment-0002.html>

From hs at ox.cx  Tue Feb 28 04:41:03 2017
From: hs at ox.cx (Hynek Schlawack)
Date: Tue, 28 Feb 2017 12:41:03 +0100
Subject: [Twisted-Python] Python3 twistd daemon for Ubuntu 14.04
 alternatives
In-Reply-To: <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
References: <CALJD01hsw=foPRKbE+KR5FK0geys=qhAYSRru1k90FYbQ5jhOg@mail.gmail.com>
 <71D89577-D50A-446C-87F1-A13A29A8FE2C@twistedmatrix.com>
 <812e9c38-dd6b-fee1-96ff-f01bc4534013@imperial.ac.uk>
 <7CE2FB75-C138-439E-A1E3-0E706495E15B@ox.cx>
 <1e666759-4f32-3b1b-233c-86ad099711b3@imperial.ac.uk>
 <FADDA4C0-BA8D-4388-AD60-58E1CC3689F7@ox.cx>
 <AB9E058A-B4A6-420F-951A-3B515242A489@twistedmatrix.com>
 <D5AC4DEC-5C16-405A-B473-5D7A4A02E63C@ox.cx>
 <e33fcf27-1be5-ecf0-468c-70c5b6989329@imperial.ac.uk>
 <4A46C013-DCA1-4053-8AA7-B06046B1B541@twistedmatrix.com>
 <E3D64DF2-1AD7-4A80-8FDF-39BEEEE26D79@ox.cx>
 <CA+hid6HunNTS5t8OoZ=hY9D6L7V3OywqYbkoCneAGsC6tUh3kg@mail.gmail.com>
 <9E44898A-B189-44FB-B194-2AC4A1D1D1D7@ox.cx>
 <CACKEAnVoBfbXEn1h4NBXrc4heCqbLrGyFKzk24FMvAo-FLN1Ew@mail.gmail.com>
 <274D35FC-CAE7-4660-BDF8-EE8DBE20352D@ox.cx>
 <CACKEAnW1uejbm8SgYMx862hRwiFcsS9XXzkBUbQP1G8VenK6OQ@mail.gmail.com>
Message-ID: <336C78C8-C143-4688-8997-8B57481DD37D@ox.cx>


>> Are you talking about building Docker containers on the fly? 
> 
> I’m a bit baffled what gave you that idea after I’ve spent days arguing for strict build/runtime separation?
> 
> I was just trying to figure out where you were having this problem:
> 
> > ZFS and apt-get + lots of files in a deb = omgiwannamurdersomeone
> 
> I heard the opposite of what you meant by this comment -- that you were deploying apt-gets + debs using docker and the combination had you wanting to murder someone.

It was not clear to me you were referring to that line in particular.  Especially because you were talking about Docker and not about debs.

The problem is a long-standing “bug” (scare quotes because it’s more of a performance regression) in ZFS-on-Linux: https://github.com/zfsonlinux/zfs/issues/3857 <https://github.com/zfsonlinux/zfs/issues/3857> (I believe there are more related tickets but I don’t have the time to investigate).  It’s related to excessive sync calls for every single file that accumulate very fast if you put a virtualenv with many files into a deb.  Basically I have to run containers with Python debs in YOLO mode (sync=False) if I don’t want installs to take more than a minute while it takes almost no time on ext4 or XFS.

That said, our Docker containers run on ext4 because our Docker daemon runs in an LXC and you cannot access the pool from within containers (yet, as I’ve hear).  Which makes it run in VFS mode which is even slower (I’ve measured factor 3x vs overlay2 in our CI) because it means it has to create a physical copy of each layer.

I suppose we were talking about different things because I don’t quite understand why you’re upset.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170228/5244c74b/attachment-0002.html>

From romanmescheryakov at yandex.ru  Tue Feb 28 09:11:16 2017
From: romanmescheryakov at yandex.ru (=?utf-8?B?0KDQvtC80LDQvSDQnNC10YnQtdGA0Y/QutC+0LI=?=)
Date: Tue, 28 Feb 2017 19:11:16 +0300
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
 <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
Message-ID: <72921488298276@web9j.yandex.ru>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170228/a3a0a028/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Feb 28 19:52:16 2017
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 28 Feb 2017 18:52:16 -0800
Subject: [Twisted-Python] How to restart Twisted service in-process
In-Reply-To: <72921488298276@web9j.yandex.ru>
References: <1754891486027057@web35j.yandex.ru>
 <0DA1D2CA-1DC6-4B85-AD85-3C8AD995633A@twistedmatrix.com>
 <CAEeXt4M+MNEx4PkFMQ-fseRZb1OhAgPbrM1ED9z=wwhphfrz_g@mail.gmail.com>
 <18715221487581109@web25h.yandex.ru>
 <D4EEEDFF-7F58-4E0A-8378-727041D146D0@twistedmatrix.com>
 <72921488298276@web9j.yandex.ru>
Message-ID: <341541A6-C553-4CBA-85C5-016BEB4CBA8C@twistedmatrix.com>


> On Feb 28, 2017, at 8:11 AM, Роман Мещеряков <romanmescheryakov at yandex.ru> wrote:
> 
> Hello everyone,
> today I tried restarting twisted service using sys.execv, and it fails with the following message:
>  
> > 2017-02-28T18:39:47+0300 [ready_to_setup#debug] Before os.execv: sys.executable is /usr/bin/python and sys.argv are ['/usr/local/bin/twistd', '-ny', 'master_player.tac']
> > Another twistd server is running, PID 1939
>  
> > This could either be a previously started instance of your application or a
> > different application entirely. To start a new one, either run it in some other
> > directory, or use the --pidfile and --logfile parameters to avoid clashes.
>  
> My service is started in the following way:
>  
> PYTHONPATH=. twistd -ny master_player.tac
>  
> (i.e. without daemonization)
> Code to restart is:
>  
> > d = task.deferLater(self._reactor, seconds,
> >                     shared_code.restart_script, self._log, self._reactor)
> > # _restart_script_done should never be called
> > d.addCallback(self._restart_script_done).addErrback(self._restart_script_failure)
>  
> where shared_code.restart_script is:
>  
> > def restart_script(logger, reactor):
> >     logger.info("Restarting script...")
> >     reactor.stop()
> >     sys.stdout.flush()
> >     #TODO: force logging system to flush all log files
> >     logger.debug("Before os.execv: sys.executable is {sysexec} and sys.argv are {argv}",
> >                 sysexec = sys.executable, argv = sys.argv)
> >     os.execv(sys.executable, [sys.executable] + sys.argv)
>  
> Could someone explain to me why does the "Another twistd server is running" error occur and how can I avoid it?

twistd writes a .pid file and then attempts to check whether another process on the system has the same PID contained in that file while starting up, to avoid conflicts.

Yours is an odd case, because the process with that process-ID is the _current_ process, and perhaps the check ought to even be modified to account for this.

Two other options you have are:

switch to `twist`, which doesn't write a pidfile
use the option "--pidfile ''" to disable writing a pidfile.

I strongly suggest the first option :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20170228/4daee793/attachment-0002.html>

