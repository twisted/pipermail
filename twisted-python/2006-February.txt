From foom at fuhm.net  Wed Feb  1 01:00:22 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 01 Feb 2006 00:00:22 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1F4B2U-0006bN-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-01-25 06:00:01.760000:
 Bugs opened: 14   Bugs closed: 19   Total open bugs: 545 (-5)
  Urgent: 3 (-6)
  Bug: 264 (+0)
  Feature: 187 (+0)
  Wish: 91 (+1)

New / Reopened Bugs
______________________
                    ==== Urgent ====
[WEB, WIN32] twisted.web2 problems on Windows.  (3 months ago)
CLOSED http://twistedmatrix.com/bugs/issue1270 opened by mkerrin

                    ==== Bug ====
[CORE, TRIAL] When using "trial -u", old trial log observers are not removed  (5 days ago)
       http://twistedmatrix.com/bugs/issue1453 opened by exarkun

ProducerConsumerProxy won't transfer data: "Writing fresh data to consumer before my buffer is empty!"  (6 hours ago)
       http://twistedmatrix.com/bugs/issue1461 opened by ghazel

[CORE] Reimplement twisted.protocols.policies.ThrottlingFactory  (yesterday)
       http://twistedmatrix.com/bugs/issue1460 opened by exarkun

[LORE] Fix latex formatting of man pages  (2 days ago)
       http://twistedmatrix.com/bugs/issue1459 opened by exarkun

[CORE, WIN32] spawnProcess in default reactor for win32 is broken  (4 days ago)
       http://twistedmatrix.com/bugs/issue1457 opened by justinj

[TRIAL] .timeout is not enforced for Deferred-chain test cases  (4 days ago)
       http://twistedmatrix.com/bugs/issue1456 opened by warner

[BACKPORT, WEB2] twisted.web2.wsgi - readline method doesn't behave like a file object  (5 days ago)
       http://twistedmatrix.com/bugs/issue1451 opened by mkerrin

web page left pane layout is broken (patch included)  (1 week ago)
       http://twistedmatrix.com/bugs/issue1429 opened by ghazel

[TRIAL] test failures during chained methods are not reported well  (4 days ago)
       http://twistedmatrix.com/bugs/issue1454 opened by warner

[WEB2] Two failures in WebDAV on Win32  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1452 opened by exarkun

                    ==== Feature ====
Need TodoTest  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1450 opened by wsanchez

                    ==== Wish ====
[DOCUMENTATION] Write a howto for Deferred timeouts  (2 days ago)
       http://twistedmatrix.com/bugs/issue1458 opened by exarkun

[TRIAL] misusing SkipTest can make trial explode in unhelpful ways  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1455 opened by warner

Bugs Closed
______________________
                    ==== Urgent ====
[TRIAL] TypeError in trial  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1422 opened by zooko, closed by jml

[TRIAL] trial's minimal reporter is broken  (1 week ago)
       http://twistedmatrix.com/bugs/issue1426 opened by itamarst, closed by jml

[WEB, WIN32] twisted.web2 problems on Windows.  (3 months ago)
       http://twistedmatrix.com/bugs/issue1270 opened by mkerrin, closed by moonfallen

[CORE, TESTS] Intermitent failure in tcp unit tests  (1 month ago)
       http://twistedmatrix.com/bugs/issue1392 opened by exarkun, closed by exarkun

[TESTS, TRIAL, WIN32] t.trial.test.test_output tests fail on win32 select reactor  (1 month ago)
       http://twistedmatrix.com/bugs/issue1380 opened by jml, closed by exarkun

                    ==== Bug ====
[CORE, DOCUMENTATION, TRIAL] trial docs suggest obsolete timeout idiom  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1420 opened by zooko, closed by jml

[TRIAL, WIN32] Trial bombs on Wndows when attempting to move/delete temp directories  (1 month ago)
       http://twistedmatrix.com/bugs/issue1387 opened by moof, closed by jml

[WEB] HTTPClientFactory leaks memory  (7 months ago)
       http://twistedmatrix.com/bugs/issue1079 opened by jojo, closed by jknight

[MAIL] [imap4] Literals need not to be preceeded by space  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1417 opened by jojo, closed by exarkun

[WEB] [PATCH] microdom is not case sensitive when doing laterClosers  (1 month ago)
       http://twistedmatrix.com/bugs/issue1358 opened by Tv, closed by jknight

[DOCUMENTATION, LORE, WEB] Lore emits warnings when processing new web howto doc  (10 months ago)
       http://twistedmatrix.com/bugs/issue956 opened by exarkun, closed by jknight

wprocess is broken  (15 months ago)
       http://twistedmatrix.com/bugs/issue760 opened by slyphon, closed by jknight

[WEB] Refactor http support for file uploads  (31 months ago)
       http://twistedmatrix.com/bugs/issue77 opened by itamarst, closed by jknight

[WEB2] Two failures in WebDAV on Win32  (5 days ago)
       http://twistedmatrix.com/bugs/issue1452 opened by exarkun, closed by wsanchez

[CORE] twisted.internet.udp.Port doesn't notice being disconnected  (7 days ago)
       http://twistedmatrix.com/bugs/issue1448 opened by exarkun, closed by exarkun

[WEB2] main.CONNECTION_LOST is not error.ConnectionLost().  (1 week ago)
       http://twistedmatrix.com/bugs/issue1435 opened by andrea, closed by exarkun

z.i.Interface interfaces should not have "self" in method signatures  (1 week ago)
       http://twistedmatrix.com/bugs/issue1428 opened by marienz, closed by exarkun

                    ==== Feature ====
Need TodoTest  (6 days ago)
       http://twistedmatrix.com/bugs/issue1450 opened by wsanchez, closed by jml

                    ==== Wish ====
[TRIAL] misusing SkipTest can make trial explode in unhelpful ways  (4 days ago)
       http://twistedmatrix.com/bugs/issue1455 opened by warner, closed by exarkun




From christian.simms at gmail.com  Wed Feb  1 12:03:20 2006
From: christian.simms at gmail.com (christian simms)
Date: Wed, 1 Feb 2006 12:03:20 -0500
Subject: [Twisted-Python] Twisted success story
Message-ID: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>

As a happy (if that's possible :-) user of Twisted and Nevow, please add the
snippet below to the Success Stories page if you'd like.

Since I'm delurking now, I might as well 'fess up that I run Twisted on
Windows for development (I'm part of the silent mass of Windows users that
Glyph was looking for), but I use Linux for production.  And since the
performance of PostgreSQL sucks on Windows (at least up through PostgreSQL
8.0), I only do heavy duty testing on Linux.  I have looked at the skipped
Twisted tests on Windows, but have not yet found any that I could fix
myself.  Though if anyone has suggestions I'd be welcome to devote a little
time to helping out.

Here's some general feedback:
1. Core of Twisted is really solid.  Design is excellent, and almost all
problems I encounter have already been taken into account in API.
2. I've gotten burned when trying to keep synchronous-style code
synchronous, like by using the naughty deferredResult.  I did it (just in my
admin tool) even though you guys say not too.  The only way to learn not to
do it is to touch the flame and get burned.
3. Nevow is still moving a lot, but you guys know that.  Parts of it are as
good as Twisted.  Even though I initially loved stan, I got wacked by its
performance and had to move to more string based rendering, since my app is
really dynamic I can't use standard type templates at all.

Keep up the good work!

Cheers,
Christian


--Begin--
Botonomy LLC is a small software firm in the Philadelphia area.  We
help small teams solve large problems.

Our first application, ProjectPipe (http://www.projectpipe.com), is a
hosted project management solution that provides midsize teams with
everything that they need to manage IT projects.  We have built our
hosted application infrastructure atop Twisted, Nevow, PostgreSQL, and
Jabber/XMPP.   Twisted's multi-protocol support has been one of the
key enablers of the unique technical architecture that we employ in
our product offerings.

The core Twisted development team consistently demonstrates a strong
commitment to delivering robust, high quality software.  Twisted's
documentation is accurate and concise, and the expertise and
helpfulness of the larger developer community is second-to-none.

When evaluating the technologies on which you are staking your
business, you need to evaluate both the code and the community that
surrounds it.  Twisted passes with flying colors in both regards.
--End--
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060201/2e51d195/attachment.htm 

From Wolfgang.W.Eichler at gmx.de  Wed Feb  1 13:38:42 2006
From: Wolfgang.W.Eichler at gmx.de (Wolfgang Eichler)
Date: Wed, 1 Feb 2006 19:38:42 +0100
Subject: [Twisted-Python] (no subject)
Message-ID: <E1F4MsP-0005hj-00@pyramid.twistedmatrix.com>

I don't get the docu for class TcpServer when I do:
pydoc.py -w base

The class Echo is well documented.

For TcpServer I only get:

TcpServer = <class base.TcpServer>

base.py:
--------------
import twisted.protocols.basic
from twisted.internet.protocol import DatagramProtocol, Protocol,
Factory

class TcpServer(twisted.protocols.basic.LineReceiver):
    """ central class for incoming tcp messages
    """
    def connectionMade(self):
        """ new connection
        """

class Echo(DatagramProtocol):
    """ Handles incoming datagrams (udp, traps)
    """ 
    def datagramReceived(self, data, (host, port)):
        """ contains some standard prints tbd
        """
---------------

Thanks for any hint ...




From leszczynscy at yahoo.com  Wed Feb  1 14:29:55 2006
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 1 Feb 2006 11:29:55 -0800 (PST)
Subject: [Twisted-Python] small error in the documentation/howto
Message-ID: <20060201192955.44471.qmail@web30009.mail.mud.yahoo.com>

Hi,

I am not sure where to post it, but there is a small
error standin out in the:

http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Basically I believe that in the first frame following
change is needed:

-def getDummyData(self, x):
+def getDummyData(x):


A.



From glyph at divmod.com  Wed Feb  1 16:05:14 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 1 Feb 2006 16:05:14 -0500
Subject: [Twisted-Python] small error in the documentation/howto
In-Reply-To: <20060201192955.44471.qmail@web30009.mail.mud.yahoo.com>
Message-ID: <20060201210514.2697.1318248922.divmod.quotient.3760@ohm>



On Wed, 1 Feb 2006 11:29:55 -0800 (PST), Andy Leszczynski <leszczynscy at yahoo.com> wrote:

>I am not sure where to post it

http://twistedmatrix.com/bugs



From leszczynscy at yahoo.com  Wed Feb  1 16:31:00 2006
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 1 Feb 2006 13:31:00 -0800 (PST)
Subject: [Twisted-Python] small error in the documentation/howto
In-Reply-To: <20060201210514.2697.1318248922.divmod.quotient.3760@ohm>
Message-ID: <20060201213100.32439.qmail@web30008.mail.mud.yahoo.com>

> http://twistedmatrix.com/bugs

Done. The only uncertainty was that the password for
the login/account I had to create was not httsd-ed.

A.




From neuzhoundxx at yahoo.com  Thu Feb  2 15:37:17 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Thu, 2 Feb 2006 12:37:17 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
Message-ID: <20060202203717.43461.qmail@web90203.mail.scd.yahoo.com>

i'm writing an app that makes two twisted client connections to the same server.
  After each connection is made, each client connection sends a session
  establishment request to the server (per Netbios over TCP/IP protocol ) in the
  Protocol.connectionMade() method. In the dataReceived method, I check if my
  request was successful. If not successful, I display a failure notice then call self.transport.loseConnection().  if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
  to continually interact with the server in a loop.  this means, however, that i would get
  into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..  would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking.  I'm read the docs on deferreds, but i'm still unsure how to proceed.
   
  thanks in advance for any help/tips

		
---------------------------------
Do you Yahoo!?
 With a free 1 GB, there's more in store with Yahoo! Mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060202/4faec32f/attachment.htm 

From exarkun at divmod.com  Thu Feb  2 16:00:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 2 Feb 2006 16:00:47 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202203717.43461.qmail@web90203.mail.scd.yahoo.com>
Message-ID: <20060202210047.2697.387292346.divmod.quotient.4924@ohm>

On Thu, 2 Feb 2006 12:37:17 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:
>i'm writing an app that makes two twisted client connections to the same server.
>  After each connection is made, each client connection sends a session
>  establishment request to the server (per Netbios over TCP/IP protocol ) in the
>  Protocol.connectionMade() method. In the dataReceived method, I check if my
>  request was successful. If not successful, I display a failure notice then call self.transport.loseConnection().  if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
>  to continually interact with the server in a loop.  this means, however, that i would get
>  into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..

This is not the case.  When you wish to send data, you call write on a transport.  When data is received, your protocol's dataReceived method will be invoked with it.  These actions are fairly common in all Twisted programs.  They work just fine.

> would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking.  I'm read the docs on deferreds, but i'm still unsure how to proceed.

Why would sendDataToServer block?  It should simply call write on a transport and then return.

Jean-Paul



From michele.petrazzo at unipex.it  Thu Feb  2 16:14:39 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 02 Feb 2006 22:14:39 +0100
Subject: [Twisted-Python] callback and errback
Message-ID: <43E2763F.90707@unipex.it>

Hi list,
I have a "stupid" problem with the adbapi (deferred):

d = self._db.runQuery("SELECT * FROM not_exists_table")

d.addCallback(self._back_getTables, callBack)
d.addErrback(self._errBack, errBack)


File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
294, in _startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
307, in _runCallbacks
     self.result = callback(self.result, *args, **kw)
exceptions.TypeError: passthru() takes exactly 1 argument (2 given)

Why with addCallback I can pass my values and with addErrback no?

And if I use:

d.addCallbacks(self._back_getTables, self._errBack,
                callbackArgs=callBack, errbackArgs=errBack)

   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
294, in _startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
307, in _runCallbacks
     self.result = callback(self.result, *args, **kw)
exceptions.TypeError: passthru() argument after * must be a sequence

What this mean?


OS: win2k/debian 3.1
py: 2.3.5
twisted: 2.1.0

The error happen on both OS

Thanks,
Michele




From neuzhoundxx at yahoo.com  Thu Feb  2 16:43:17 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Thu, 2 Feb 2006 13:43:17 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202210047.2697.387292346.divmod.quotient.4924@ohm>
Message-ID: <20060202214317.28944.qmail@web90206.mail.scd.yahoo.com>

hmmm... this was the trace output i got:
   
   
  conn1 connection made. requesting session establishment ...
conn2 connection made. requesting session establishment ...
conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
  ...
conn1 connection lost
Connection lost - goodbye!
numPorts = 1
   
  looks like connection 2 never got a response from the server, connection 1 completed its work (i did not put it into a continuous loop), but connection 2 seems to be hanged.
  i'm running twist on windows XP.  any hypothesis regarding connection 2?

Jean-Paul Calderone <exarkun at divmod.com> wrote:
  On Thu, 2 Feb 2006 12:37:17 -0800 (PST), john peter wrote:
>i'm writing an app that makes two twisted client connections to the same server.
> After each connection is made, each client connection sends a session
> establishment request to the server (per Netbios over TCP/IP protocol ) in the
> Protocol.connectionMade() method. In the dataReceived method, I check if my
> request was successful. If not successful, I display a failure notice then call self.transport.loseConnection(). if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
> to continually interact with the server in a loop. this means, however, that i would get
> into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..

This is not the case. When you wish to send data, you call write on a transport. When data is received, your protocol's dataReceived method will be invoked with it. These actions are fairly common in all Twisted programs. They work just fine.

> would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking. I'm read the docs on deferreds, but i'm still unsure how to proceed.

Why would sendDataToServer block? It should simply call write on a transport and then return.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  


			
---------------------------------
 Yahoo! Autos. Looking for a sweet ride? Get pricing, reviews, & more on new and used cars.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060202/1e7fbf51/attachment.htm 

From glyph at divmod.com  Thu Feb  2 17:53:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 2 Feb 2006 17:53:15 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202214317.28944.qmail@web90206.mail.scd.yahoo.com>
Message-ID: <20060202225315.2697.1402602399.divmod.quotient.5032@ohm>



On Thu, 2 Feb 2006 13:43:17 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:
>  i'm running twist on windows XP.  any hypothesis regarding connection 2?

In the absence of any code, I'd have to say that your server is broken and the connection didn't get a response.

Perhaps you could write a small client/server pair and see if you still have the problem?  If you do, you could submit a minimal example to the list.



From michele.petrazzo at unipex.it  Fri Feb  3 06:14:14 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Fri, 03 Feb 2006 12:14:14 +0100
Subject: [Twisted-Python] callback and errback
In-Reply-To: <43E2763F.90707@unipex.it>
References: <43E2763F.90707@unipex.it>
Message-ID: <43E33B06.4050604@unipex.it>

Michele Petrazzo wrote:
> Hi list, I have a "stupid" problem with the adbapi (deferred):
> 

Yes, very stupid question.
It was a coding problem: errBack=None like class attribute and a method
with the same name!

Thanks,
Michele



From neuzhoundxx at yahoo.com  Fri Feb  3 10:42:27 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Fri, 3 Feb 2006 07:42:27 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202225315.2697.1402602399.divmod.quotient.5032@ohm>
Message-ID: <20060203154227.39968.qmail@web36714.mail.mud.yahoo.com>

  I've attached two files. What I'm trying to do is write some tests simulating devices talking (Netbios over TCP/IP) to a legacy app. The goal is to grow these test scripts into a Load/Stress Testing Framework. 
   
  The script I'm running is dd.py. The other file shows the really simple code for my protocol and factory classes.  Essentially, when I've made a TCP/IP connection, I send an RFC1001/1002-compliant Session Request Packet containing the level-1 encoded netbios names of the caller (client name) and callee (remote name). At this point, I'm really just trying to see if both connections can get a positive response.
   
  I've implemented a version of what I'm trying to do using the threading module, and I have not only been able to establish a Netbios session, but both my connections are
  able to converse with the server in a loop.
   
  With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.
   
  Thank you for any help. 

glyph at divmod.com wrote: 
  

On Thu, 2 Feb 2006 13:43:17 -0800 (PST), john peter wrote:
> i'm running twist on windows XP. any hypothesis regarding connection 2?

In the absence of any code, I'd have to say that your server is broken and the connection didn't get a response.

Perhaps you could write a small client/server pair and see if you still have the problem? If you do, you could submit a minimal example to the list.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  



		
---------------------------------
Brings words and photos together (easily) with
 PhotoMail  - it's free and works with Yahoo! Mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment.htm 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: avsNbtClientProtocol.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dd.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment-0001.txt 

From exarkun at divmod.com  Fri Feb  3 11:55:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 11:55:00 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15819 - Maybe make this
 test more robust. Windows sucks.
In-Reply-To: <E1F4vOz-0003TW-00@wolfwood>
Message-ID: <20060203165500.2697.1861263283.divmod.quotient.6017@ohm>

On Fri, 03 Feb 2006 00:30:41 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Fri Feb  3 00:30:40 2006
>New Revision: 15819
>
>Modified:
>   trunk/twisted/trial/test/test_reporter.py
>Log:
>Maybe make this test more robust. Windows sucks.
>
>
>
>Modified: trunk/twisted/trial/test/test_reporter.py
>==============================================================================
>--- trunk/twisted/trial/test/test_reporter.py	(original)
>+++ trunk/twisted/trial/test/test_reporter.py	Fri Feb  3 00:30:40 2006
>@@ -42,6 +42,7 @@
>     def test_timing(self):
>         the_reporter = reporter.Reporter()
>         the_reporter._somethingStarted()
>+        time.sleep(0.01)
>         the_reporter._somethingStarted()
>         time.sleep(0.01)
>         time1 = the_reporter._somethingStopped()

I think robustness is inversely correlated with number of time-related calls.

What are these sleeps for?  Maybe the reporter's timing function should be parameterized so this can be deterministic, instead of relying on a clock that is guaranteed to say something nasty from time to time?

Jean-Paul



From alengarbage at yahoo.com  Fri Feb  3 15:18:56 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 3 Feb 2006 12:18:56 -0800 (PST)
Subject: [Twisted-Python] Making DeferredList look like Deferred
Message-ID: <20060203201856.44596.qmail@web31507.mail.mud.yahoo.com>

I have a need to return a DeferredList or a Deferred
from a function, but I don't want the caller to be
aware of this distinction -- the caller should just
assume that they got a regular Deferred.

The way I'm currently accomplishing this is to 1)
ensure that each Deferred in the List has its own
callback/errback pair hooked up, and 2) add a callback
to the Deferred list from within the called function
which either returns the [possibly sanitized] result
if all the Deferreds called their callbacks, or that
raises a failure.DefaultException if any of the
Deferreds called their errbacks.  This seems to give
me the desired result in all cases.

Is this the right way to go about this?  Is there a
cleaner way?

(The reason I can't just return the DeferredList, as I
understand, is that its callback is *always* invoked,
even if we leave each of the Deferred's errbacks
unhooked and let them trickle up into DeferredList's
addErrback callable.  In the case of a caller who
expects the returned deferred to be a regular
deferred, it would not be expected to have *both* its
callback and errback invoked).

thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Fri Feb  3 16:08:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 16:08:54 -0500
Subject: [Twisted-Python] Making DeferredList look like Deferred
In-Reply-To: <20060203201856.44596.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <20060203210854.2697.1887262418.divmod.quotient.6250@ohm>

On Fri, 3 Feb 2006 12:18:56 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>
>(The reason I can't just return the DeferredList, as I
>understand, is that its callback is *always* invoked,
>even if we leave each of the Deferred's errbacks
>unhooked and let them trickle up into DeferredList's
>addErrback callable.  In the case of a caller who
>expects the returned deferred to be a regular
>deferred, it would not be expected to have *both* its
>callback and errback invoked).

DeferredList has *either* callback *or* errback called on it, just like any Deferred.  If you just give it a list of Deferreds, it will always have its callback method invoked and never have its errback method invoked, regardless of whether any of the Deferreds it was constructed with fail.  However, if you pass a true value for fireOnOneErrback when constructing your DeferredList, any Deferred which errbacks will cause the DeferredList to errback; in this case it will never callback.

Does that help?

Jean-Paul



From rudy at goldenhelix.com  Fri Feb  3 17:29:21 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 3 Feb 2006 15:29:21 -0700
Subject: [Twisted-Python] Running callbacks in a non-main thread
Message-ID: <200602031529.22278.rudy@goldenhelix.com>

Hey,
I realize that the point of deferreds is to have process/network intensive 
tasks work on in their own thread and send the results to callback function 
in the main thread, but is there away to have a deferred process it's 
callback in a non-main thread?

I'm sure someone will want to know why, and maybe solving my meta-problem 
would show me the errors in my ways in wanting to warp the purpose of the 
mighty deferred.

Async is great, but I'm slowly replacing some code that uses xmlrpc (blocking) 
with prospect broker objects (returns deferred, hence non-blocking). What I'm 
trying to hack is a method to make a non-blocking call in the main thread 
blocking until the deferred returns a result, hence emulating the blocking 
nature of xmlrpc. This dependency is something I would like to phase out, but 
certain things need it, so work with me eh?

My hack is to simply use a threading.Event to wait for the callback to be 
called in a non-waiting thread, save the value and do the let the main thread 
return the result. Of course this doesn't work when callbacks run in the main 
thread because the main thread is blocked.

#Bits of hack code:
class Block
    def waitFor(self, function, *args, **kwargs):
        if not hasattr(self,'async_done'):
            self.async_done = threading.Event()
        
        self.result = None
        #ceate a thread to wait for callback.
	threads.deferToThread(function, *args, 
**kwargs).addCallback(self._cbWait).addErrback(self._ebWait)

        #block on results of thread to be set
        self.async_done.wait()
        self.async_done.clear()
        return self.result
 
    #This is never called, because main thread is blocked
    def _cbWait(self, deferred):
        #expect original function to return a deferred
        deferred.addBoth(self._cbValue)
        
    def _ebWait(self, reason):
        print "ERROR in getting remote function: ",reason

    def _cbValue(self, v):
        self.result = v
        self.async_done.set()

Any ideas O masters of the twisted?

Gabe Rudy



From jml at mumak.net  Fri Feb  3 18:08:04 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 4 Feb 2006 10:08:04 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15819 - Maybe make this
	test more robust. Windows sucks.
In-Reply-To: <20060203165500.2697.1861263283.divmod.quotient.6017@ohm>
References: <E1F4vOz-0003TW-00@wolfwood>
	<20060203165500.2697.1861263283.divmod.quotient.6017@ohm>
Message-ID: <d06a5cd30602031508n18ada3bei7db185382a7521f5@mail.gmail.com>

On 2/4/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 03 Feb 2006 00:30:41 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Fri Feb  3 00:30:40 2006
> >New Revision: 15819
> >
> >Modified:
> >   trunk/twisted/trial/test/test_reporter.py
> >Log:
> >Maybe make this test more robust. Windows sucks.
> >
> >Modified: trunk/twisted/trial/test/test_reporter.py
> >==============================================================================
> >--- trunk/twisted/trial/test/test_reporter.py  (original)
> >+++ trunk/twisted/trial/test/test_reporter.py  Fri Feb  3 00:30:40 2006
> >@@ -42,6 +42,7 @@
> >     def test_timing(self):
> >         the_reporter = reporter.Reporter()
> >         the_reporter._somethingStarted()
> >+        time.sleep(0.01)
> >         the_reporter._somethingStarted()
> >         time.sleep(0.01)
> >         time1 = the_reporter._somethingStopped()
>
> I think robustness is inversely correlated with number of time-related calls.
>
> What are these sleeps for?  Maybe the reporter's timing function should be parameterized so this can be deterministic, instead of relying on a clock that is guaranteed to say something nasty from time to time?
>

As I understand it, this test is there to check that the reporter
actually does timing, and that the _somethingStarted() fu operates as
a stack _and_ that _somethingStopped() returns a time.

Patches accepted.

jml



From alengarbage at yahoo.com  Fri Feb  3 18:55:34 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 3 Feb 2006 15:55:34 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060203235534.17837.qmail@web31514.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com
Fri Feb 3 14:08:54 MST 2006 wrote:
>
> DeferredList has *either* callback *or* errback
> called on it, just like any Deferred.  If you just
> give it a list of Deferreds, it will always have its
> callback method invoked and never have its errback
> method invoked, regardless of whether any of the
> Deferreds it was constructed with fail.  However, if
> you pass a true value for fireOnOneErrback when
> constructing your DeferredList, any Deferred which
> errbacks will cause the DeferredList to errback; in
> this case it will never callback.
>
> Does that help?


  That definitely helps, but I'm wondering if this
behavior was implemented between 1.3 and 2.0?  I can
provide an example where both the DeferredList's
errback and callback are called on 1.3 when any one of
the DeferredList's Deferreds err -- without setting
fireOnErrback.  I'll grab 2.1 tonight and see if I can
reproduce it there.

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From bob at redivi.com  Fri Feb  3 19:13:04 2006
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 3 Feb 2006 16:13:04 -0800
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031529.22278.rudy@goldenhelix.com>
References: <200602031529.22278.rudy@goldenhelix.com>
Message-ID: <D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>


On Feb 3, 2006, at 2:29 PM, Gabe Rudy wrote:

> I realize that the point of deferreds is to have process/network  
> intensive
> tasks work on in their own thread and send the results to callback  
> function
> in the main thread, but is there away to have a deferred process it's
> callback in a non-main thread?

No, that's not the point of deferreds.  A Deferred is just an  
object.  It doesn't know anything at all about threads, and it sure  
as hell doesn't implement any sort of thread safety.  All it really  
does it encapsulate a call chain.

Technically a Deferred will process its callbacks in the same thread  
that callback or errback was invoked in.  If you feel the need to do  
that, your design is probably fubar though.

... there is *one* function in Twisted that will invoke a callable in  
a thread and return a Deferred, but that's hardly a common usage.

-bob




From p.mayers at imperial.ac.uk  Fri Feb  3 19:31:19 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 04 Feb 2006 00:31:19 +0000
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031529.22278.rudy@goldenhelix.com>
References: <200602031529.22278.rudy@goldenhelix.com>
Message-ID: <43E3F5D7.6010006@imperial.ac.uk>

Gabe Rudy wrote:
> Hey,
> I realize that the point of deferreds is to have process/network intensive 
> tasks work on in their own thread and send the results to callback function 

No. The exact opposite in fact. The purpose of a deferred is to act as a 
placeholder for a result that will be available later, and to call 
callbacks or errbacks that receive that result, in a single threaded 
event-driven system.

> in the main thread, but is there away to have a deferred process it's 
> callback in a non-main thread?

If I understand you, the deferred callback will take a long time. Your 
code is indicative of a misunderstanding of deferreds, which you need 
not feel bad about - they're not an easy concept at first.

Broadly, if you have code that looks like this under synchronous frameworks:

def operation():
   res = blockingCall()
   # the following function takes time
   res2 = doCalc(res)
   return res2.field

...that needs to be turned into:

def asyncOperation():
   deferred = asyncCall()
   deferred.addCallbacks(asyncOperation_2, log.err)
   return deferred

def asyncOperation_2(value):
   # doCalc is still expensive
   deferred = deferToThread(doCalc, value)
   deferred.addCallbacks(asyncOperation_3, log.err)
   # by returning a deferred, the deferred that calls us will be
   # paused until this "INNER" deferred finishes, so it all "just works"
   return deferred

def asyncOperation_3(doCalc_result):
   # this is a trivial reformatting operation
   return doCalc_result.field



From rudy at goldenhelix.com  Fri Feb  3 20:06:52 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 3 Feb 2006 18:06:52 -0700
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>
References: <200602031529.22278.rudy@goldenhelix.com>
	<D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>
Message-ID: <200602031806.52900.rudy@goldenhelix.com>

On Friday 03 February 2006 5:13 pm, Bob Ippolito wrote:
> Technically a Deferred will process its callbacks in the same thread
> that callback or errback was invoked in.  If you feel the need to do
> that, your design is probably fubar though.
>

Ok, thanks for setting me strait. I see that my problem was really I was 
blocking the main thread, and hence the reactor from doing _anything_. I got 
a workable hack now that processes reactor events in a loop until the worker 
thread finishes, then returns from the function with the results (making the 
function appear synchronous to the caller).

--Gabe



From glyph at divmod.com  Fri Feb  3 20:27:35 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 3 Feb 2006 20:27:35 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060203154227.39968.qmail@web36714.mail.mud.yahoo.com>
Message-ID: <20060204012735.2697.148719091.divmod.quotient.6459@ohm>


On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:

>  With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to.  Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times?  Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data.  Depending on which prints are actually commented out or not that might look like hanging :)



From glyph at divmod.com  Fri Feb  3 20:35:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 3 Feb 2006 20:35:00 -0500
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031806.52900.rudy@goldenhelix.com>
Message-ID: <20060204013500.2697.825722951.divmod.quotient.6467@ohm>



On Fri, 3 Feb 2006 18:06:52 -0700, Gabe Rudy <rudy at goldenhelix.com> wrote:
>(making the function appear synchronous to the caller).

I'm not sure *exactly* what you mean by that, but generally trying to make functions look synchronous is a source of problems (*especially* if both threads are running the reactor.  I hope that's not what you mean, is it?)

http://glyf.livejournal.com/40037.html



From exarkun at divmod.com  Fri Feb  3 21:05:29 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 21:05:29 -0500
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031806.52900.rudy@goldenhelix.com>
Message-ID: <20060204020529.2697.1016749634.divmod.quotient.6497@ohm>

On Fri, 3 Feb 2006 18:06:52 -0700, Gabe Rudy <rudy at goldenhelix.com> wrote:
>On Friday 03 February 2006 5:13 pm, Bob Ippolito wrote:
>> Technically a Deferred will process its callbacks in the same thread
>> that callback or errback was invoked in.  If you feel the need to do
>> that, your design is probably fubar though.
>>
>
>Ok, thanks for setting me strait. I see that my problem was really I was
>blocking the main thread, and hence the reactor from doing _anything_. I got
>a workable hack now that processes reactor events in a loop until the worker
>thread finishes, then returns from the function with the results (making the
>function appear synchronous to the caller).

Hack is exactly the right word to describe this.  The only way to implement this is by going behind Twisted's back, using unsupported APIs, and risking having the whole thing fall apart in the next point release (that's assuming you get it to work reliably at all, which is a long shot at best).

I recommend working very hard to eliminate this style of usage from your code, and not introducing any further instances of it.

Jean-Paul



From matusis at matusis.com  Sat Feb  4 02:30:02 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri, 3 Feb 2006 23:30:02 -0800
Subject: [Twisted-Python] What happened with API reference?
Message-ID: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>

When I try going to http://twistedmatrix.com/documents/current/api/ I get a
weird site, not the API reference I used to see.
Am I missing something?
 






From radeex at gmail.com  Sat Feb  4 02:46:58 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 4 Feb 2006 18:46:58 +1100
Subject: [Twisted-Python] What happened with API reference?
In-Reply-To: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>
References: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>
Message-ID: <60ed19d40602032346k9f4a5c7p5499deadcaf9bc2f@mail.gmail.com>

On 2/4/06, Alec Matusis <matusis at matusis.com> wrote:
> When I try going to http://twistedmatrix.com/documents/current/api/ I get a
> weird site, not the API reference I used to see.
> Am I missing something?

The web site is going through some maintenance at the moment. The API
docs will probably be available again when the man in charge wakes up.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From radeex at gmail.com  Sat Feb  4 09:01:57 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 5 Feb 2006 01:01:57 +1100
Subject: [Twisted-Python] Twisted success story
In-Reply-To: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>
References: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>
Message-ID: <60ed19d40602040601m2a31751bx501dbd4870d44bda@mail.gmail.com>

On 2/2/06, christian simms <christian.simms at gmail.com> wrote:
> Botonomy LLC is a small software firm in the Philadelphia area.  We
> help small teams solve large problems.

Sorry for taking so long, but thanks for the success story. It's now
posted to the web site.



--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From jeff at taupro.com  Sun Feb  5 05:16:59 2006
From: jeff at taupro.com (Jeff Rush)
Date: Sun, 05 Feb 2006 04:16:59 -0600
Subject: [Twisted-Python] Booksigning Party at PyCon This Year!
Message-ID: <43E5D09B.6070904@taupro.com>

Because many authors of books related to Python will be in attendance at 
PyCon, we would like to organize a book signing activity.  It seems logical 
to hold it Saturday night at the party at the Nerdbooks.com bookstore. 
Bring your own books or buy new ones in the store!

And if you're an author in attendance who would like to promote your book, 
drop an email to "jeff at taupro.com" or come forward when we call the book 
signing to order in the store.

So that the bookstore can have copies on-hand, we'd like to collect a list 
of titles you'd consider having signed.  Please edit the following wiki page 
and add your choices.  Authors, you can add your books too.

   http://us.pycon.org/TX2006/BookSigning

-Jeff




From gustavo at grahal.net  Sun Feb  5 16:09:06 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Sun, 05 Feb 2006 19:09:06 -0200
Subject: [Twisted-Python] xmlrpc and deferred result doubts
Message-ID: <ds5phm$p3p$1@sea.gmane.org>

Hi All


I have a doubt about how to factor the an xmlrpc server code.
Basicly what happens is:

def xmlrpc_runCmd(self, hostname, command):
    # I call a method that returns a deferred and because of that I
    # don't have anything to return to the xmlrpc client.
    runComm = conn.runCommand(hostname, command)
    # the line below doesn't make much sense because the output needs to
    # return to the xmlrpc client
    runComm.addCallback(self.printOutput)

    return ???? # return what?!?!?!?


What should I do? How should I factor the code?


Thanks
Gustavo




From exarkun at divmod.com  Sun Feb  5 16:44:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 5 Feb 2006 16:44:44 -0500
Subject: [Twisted-Python] xmlrpc and deferred result doubts
In-Reply-To: <ds5phm$p3p$1@sea.gmane.org>
Message-ID: <20060205214444.2697.1559130036.divmod.quotient.8789@ohm>

On Sun, 05 Feb 2006 19:09:06 -0200, Gustavo Rahal <gustavo at grahal.net> wrote:
>Hi All
>
>
>I have a doubt about how to factor the an xmlrpc server code.
>Basicly what happens is:
>
>def xmlrpc_runCmd(self, hostname, command):
>    # I call a method that returns a deferred and because of that I
>    # don't have anything to return to the xmlrpc client.
>    runComm = conn.runCommand(hostname, command)
>    # the line below doesn't make much sense because the output needs to
>    # return to the xmlrpc client
>    runComm.addCallback(self.printOutput)

Return runComm instead.  Also, <mailto:twisted-web at twistedmatrix.com> for web questions.

Jean-Paul



From alengarbage at yahoo.com  Mon Feb  6 00:43:25 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sun, 5 Feb 2006 21:43:25 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com
Fri Feb 3 14:08:54 MST 2006 wrote:
>
> ...However, if
> you pass a true value for fireOnOneErrback when
> constructing your DeferredList, any Deferred which
> errbacks will cause the DeferredList to errback; in
> this case it will never callback.


  I think I must be missing something, but I can't
spot it.  Here's the smallest example I've come up
with:

import random
from twisted.internet import reactor, defer
from twisted.python import failure

def error(err, msg):
    print "failed: %s" % msg
    reactor.stop()

def success(result, msg):
    print "succeeded: %s" % msg
    reactor.stop()

def defer2seconds(prob=0.5):
    d = defer.Deferred()
    if random.random() < prob:
        print "  deferred will succeed in 2s"
        reactor.callLater(2, d.callback, True)
    else:
        print "  deferred will fail in 2s"
        reactor.callLater(2, d.errback, True)
    return d

def deferlist2seconds(prob=0.25, num=2):
    def itersuccess(result, i):
        print "  %i succeeded" % i
        return result

    def iterfail(err, i):
        print "  %i failed" % i

    dlist = []
    for i in range(num):
        d = defer2seconds(prob)
        d.addCallback(itersuccess, i)
        d.addErrback(iterfail, i)
        dlist.append(d)
    dl = defer.DeferredList(dlist,
            fireOnOneErrback=True)
    return dl

def testdlist():
    print "in testdlist"
    #d = defer2seconds(prob=0.5)
    d = deferlist2seconds(prob=0.5)
    d.addCallback(success, "testdlist")
    d.addErrback(error, "testdlist")

if __name__ == "__main__":
    testdlist()
    reactor.run()


The action here is really simple, with each deferred
randomly choosing to succeed or fail.  The testdlist
function can call either the simple, single-deferred
test or the multi-deferredlist test.  The goal here is
that the caller doesn't care what the underlying
function call does, in terms of Deferred v.
DeferredList.  When calling the simple test, the
results are as expected:


in testdlist
  deferred will fail in 2 seconds
failed: testdlist

in testdlist
  deferred will succeed in 2 seconds
succeeded: testdlist


But when calling the DeferredList test, it never gets
into the DeferredList's errback.

in testdlist
  deferred will succeed in 2 seconds
  deferred will succeed in 2 seconds
  0 succeeded
  1 succeeded
succeeded: testdlist

in testdlist
  deferred will fail in 2 seconds
  deferred will succeed in 2 seconds
  0 failed
  1 succeeded
succeeded: testdlist


Why isn't the DeferredList's errback being called in
this case?  It seems that no matter what I do (remove
the individual Deferreds' errbacks, change
fireOnOneErrback, etc), the DeferredList's callback
only is called.  This doesn't sound like what you'd
expect.  What am I doing wrong?  What must I do to get
the DeferredList's errback to fire when any single
Deferred in the list has its errback called?

Tested using twisted 2.1.

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From Brendan at BrendanSimon.com  Mon Feb  6 03:05:09 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Mon, 06 Feb 2006 19:05:09 +1100
Subject: [Twisted-Python] GUI application with Conch
Message-ID: <43E70335.3030406@BrendanSimon.com>

Hi,

I want to write a gui application (wxPython) that runs on MSW and talks 
to a Linux server that has an application that only runs on Posix based 
systems.  The current gui app runs on the Linux server and executes the 
commands directly using popen, but I want to make it flexible enough so 
that MSW users can run a local gui which will execute the commands on 
the Linux server and display the results locally.

My question is one of architectural design.  How is it best to structure 
the program so that it can use a remote shell connect (eg. ssh, or 
possibly other transports such as rsh, or rsh over a vpn, etc) as well 
as using direct calls to the utilities when running directly on the 
server ???

I've managed to get the sshsimpleclient.py going and talking to my linux 
server with my login and rsa keys :)
I notice that this sample is different to the documentation mentioned here:
    
http://twistedmatrix.com/projects/conch/documentation/howto/conch_client.html

The sshsimpleclient.py does not have the following statements:
    factory = protocol.ClientFactory()
    factory.protocol = ClientTransport
    reactor.connectTCP('localhost', 22, factory)
    reactor.run()

Is one better than the other?
Is one method better going forward into the future?

Also, the sshsimpleclient.py seems to have the closed() method called 
when issuing a command (eg. CatChannel, TrueChannel, etc).  How can I 
keep a channel open to run commands when I want ??

Cheers,
Brendan.




From therve at free.fr  Mon Feb  6 03:26:57 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 09:26:57 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>
References: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>
Message-ID: <20060206092657.9o6re5s5xc0gwckk@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  I think I must be missing something, but I can't
> spot it.  Here's the smallest example I've come up
> with:

[snip]

>    def iterfail(err, i):
>        print "  %i failed" % i

The problem is here. You add an errback to your defer, but you stop the error
propagation by not returning err. Either do 'return err' or not
'addErrback(iterfail)'.

-- 
Thomas






From exarkun at divmod.com  Mon Feb  6 10:08:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 6 Feb 2006 10:08:17 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15836 - Start adding
 setMetadata to
 twisted.vfs, including the SFTP adapter and osfs backend.
In-Reply-To: <E1F62a3-0006EF-00@wolfwood>
Message-ID: <20060206150817.2697.1721396245.divmod.quotient.9727@ohm>

On Mon, 06 Feb 2006 02:22:43 -0700, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Mon Feb  6 02:22:43 2006
>New Revision: 15836
>
>Modified:
>   trunk/LICENSE
>   trunk/twisted/vfs/adapters/sftp.py
>   trunk/twisted/vfs/backends/osfs.py
>   trunk/twisted/vfs/ivfs.py
>   trunk/twisted/vfs/test/test_sftp.py
>Log:
>Start adding setMetadata to twisted.vfs, including the SFTP adapter and osfs backend.
>
>This work is contributed by Canonical Ltd -- I've updated the
>list of copyright holders in LICENSE to reflect this.
>

This commit introduced a new failure on the Win32 buildslave.  test_setAttrs fails like so:


[ERROR]: twisted.vfs.test.test_sftp.SFTPAdapterOSFSTest.test_setAttrs

  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\test\test_sftp.py", line 136, in test_setAttrs
    self.sftp.setAttrs('/ned', {'mtime': mtime})
  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\adapters\sftp.py", line 190, in setAttrs
    node.setMetadata(attrs)
  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\backends\osfs.py", line 57, in setMetadata
    os.utime(self.realPath, (atime, mtime))
exceptions.OSError: [Errno 13] Permission denied: 'twisted.vfs.test.test_sftp\\SFTPAdapterOSFSTest\\test_setAttrs\\ynojwi\\temp\\ned'



From alengarbage at yahoo.com  Mon Feb  6 10:39:35 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 07:39:35 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
>>    def iterfail(err, i):
>>        print "  %i failed" % i
>
> The problem is here. You add an errback to your
defer,
> but you stop the error propagation by not returning
> err. Either do 'return err' or not
> 'addErrback(iterfail)'.


  Thomas, thanks for the response.  I thought that
might be it, but no avail.  If I 'return err' in
iterfail, I get:

in testdlist
  deferred will fail in 2s
  deferred will succeed in 2s
  0 failed
failed: testdlist
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: <type 'bool'>: True
  1 succeeded


  If I instead comment out 'addErrback(iterfail,i)', I
get:

in testdlist
  deferred will fail in 2s
  deferred will succeed in 2s
failed: testdlist
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: <type 'bool'>: True
  1 succeeded


  I don't know why the error is unhandled in either
case -- the DeferredList has an errback set.  (If I
raise a new error in iterfail, the same result occurs,
naturally).  It also doesn't seem to matter whether I
add 'fireOnOneErrBack' to the DeferredList constructor
or not.  Any ideas?  Does this code behave differently
on your machine?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 12:07:45 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 18:07:45 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>
References: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <20060206180745.lu5fbaty4g08c4oo@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  Thomas, thanks for the response.

You're welcome :).

> I thought that
> might be it, but no avail.  If I 'return err' in
> iterfail, I get:
>
[snip]
> Unhandled error in Deferred:

That's expected behaviour.

>  I don't know why the error is unhandled in either
> case -- the DeferredList has an errback set.  (If I
> raise a new error in iterfail, the same result occurs,
> naturally).  It also doesn't seem to matter whether I
> add 'fireOnOneErrBack' to the DeferredList constructor
> or not.  Any ideas?  Does this code behave differently
> on your machine?

The behaviour you want is provided by the option 'consumeErrors' of 
DeferredList
(you can see why here :
http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto8).

-- 
Thomas





From rudy at goldenhelix.com  Mon Feb  6 12:46:11 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Mon, 6 Feb 2006 10:46:11 -0700
Subject: [Twisted-Python] mx.DateTime jellyable?
Message-ID: <200602061046.11624.rudy@goldenhelix.com>

I see the support of the python datetime class, and read through the 
pb-copyable howto, but am still curious if there is a way to make a module 
classes jellyable (specifically mx.DateTime) without writting a wrapper 
class? My postgres database wrapper returns mx.DateTime and a lib on the 
client side expects mx.DateTime so it makes sense to keep it in that format.

I saw a message back in 2004 about working on the ability to register external 
serialization functions for new types.  Is that in place now?

I have seen some chatter in previous posts about mx.DateTime but could not 
find a definitive answer. i.e. "don't hack it, make it work without 
mx.DateTime", or "philosophically, what your doing would be insecure and not 
cross-language compatible (which pb is), hence your question is void.", or 
hopefully "check out xxx for external serialization"

Thanks
--gabe



From alengarbage at yahoo.com  Mon Feb  6 13:05:01 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 10:05:01 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
> The behaviour you want is provided by the
> option 'consumeErrors' of DeferredList
> (you can see why here :
>
http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto8).


  Aha, that's the piece I was missing!  Thank you for
pointing it out.

  Now, though, this leads me to one more question:
what if I want to wait until all the Deferreds have
fired (either err or callback), and only then call the
callback if all callbacks were fired, otherwise call
the errback?
  To accomplish this, I'm currently just 'wrapping'
the DeferredList in a regular Deferred.  It's callback
is always called on completion, so when it fires I
look at all the results given to the callback, and if
any have failed, raise an exception.  Otherwise I
return a result.
  This feels a little bit clunky, but I don't have a
good suggestion for improving it --
'fireOnErrbackAfterAllCompleted=True'?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 15:35:27 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 21:35:27 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>
References: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <20060206213527.nz17opmy0wowogk4@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  Now, though, this leads me to one more question:
> what if I want to wait until all the Deferreds have
> fired (either err or callback), and only then call the
> callback if all callbacks were fired, otherwise call
> the errback?
>  To accomplish this, I'm currently just 'wrapping'
> the DeferredList in a regular Deferred.  It's callback
> is always called on completion, so when it fires I
> look at all the results given to the callback, and if
> any have failed, raise an exception.  Otherwise I
> return a result.
>  This feels a little bit clunky, but I don't have a
> good suggestion for improving it --
> 'fireOnErrbackAfterAllCompleted=True'?

Well that's near the default behaviour with fireOnOneErrback=False. 
Don't forget
you have the status of each requests in the result list. You could something
like this :

d = DeferredList(myList)
d.addCallback(mycb)

def mycb(results):
    ret = []
    # Warning clumsy code
    for code, res in results:
        if code == defer.FAILURE: # or 'not code'
             return failure.Failure(res)
        else: # defer.SUCCESS
             ret.append(res)
     return ret

But really, I don't see the point of this. If you want to have an exception
somewhere, use fireOnOneErrback. Else there's no need to build the 
result list,
if you're actually raising an Exception for *one* error.

-- 
Thomas





From davidh at ilm.com  Mon Feb  6 16:04:49 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:04:49 -0800
Subject: [Twisted-Python] Help: how to run something at shutdown time
Message-ID: <43E7B9F1.4090909@ilm.com>

I'm running an xmlrpc server using twisted xmlrpc. I use 
reactor.callWhenRunning() to do some setup when the server is started, 
but I need to also do some special shutdown steps when the server is 
stopped.

I don't see any callWhenStopped() or something to that effect...so is 
there a way to call specific methods when shutdown happens?
Any help is appreciated,
-David

-- 
Presenting:
mediocre nebula.




From alengarbage at yahoo.com  Mon Feb  6 16:23:39 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 13:23:39 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
>
> But really, I don't see the point of this. 
> If you want to have an exception somewhere,
> use fireOnOneErrback. Else there's no need
> to build the result list, if you're
> actually raising an Exception for *one*
> error.

  What if the desired exception handling should occur
*after* all the Deferreds have fired, regardless of
whether they fired err or callback?

  This is particularly useful for p2p-style apps.  For
example, suppose I want to maintain a maximum of 20
outstanding requests for a given operation -- I don't
want to spin off another 20 (or another X) until I
know exactly how many of the original 20 failed and
how many succeeded.  (This type of operation is
common, for instance, when you are doing erasure
coding or shamir secret sharing, where you really only
need Y out of Z requests to succeed, but where you do
need to respawn W new requests if you didn't get Y
after the first round.)
  fireOnOneErrback doesn't seem to give me that
functionality -- it gets fired only once, for the
first failure.  I don't know which other of the 20
requests failed or will fail, and there may be
outstanding requests that will yet succeed that I'll
never learn about.

  I think I'm beginning to see, though, that this is
all accounted for by just letting the DeferredList's
callback get invoked, and wrapping it similarly to
what you posted.  My only complaint, as you pointed
out, is that this seems a bit clumsy.

  However, cluttering up the API with another special
flag to handle my border case where I want the
DeferredList's errback to be invoked just like the
callback, but only if => 1 of its Deferreds
errback'ed, may be even worse.  It sure would be handy
for me, however, so I'll likely create my own
SpecialDeferredList that does the wrapping behind the
scenes and fires the back() that I expect.

  Unless, of course, there is a better way.  Here's
what I'm currently using to wrap:

def DeferredListToDeferred(result):
    print " result was: %s" % result
    for code, res in result:
        if code == False:
            # assumes failed results have 
            # (False, failure) pairs, and
            # only returns the first of
            # these.
            return res
    return result



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 16:43:59 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 22:43:59 +0100
Subject: [Twisted-Python] Help: how to run something at shutdown time
In-Reply-To: <43E7B9F1.4090909@ilm.com>
References: <43E7B9F1.4090909@ilm.com>
Message-ID: <20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>

Quoting David Hirschfield <davidh at ilm.com>:

> I don't see any callWhenStopped() or something to that effect...so is 
> there a way to call specific methods when shutdown happens?

Yes : reactor.addSystemEventTrigger('before', 'shutdown', func, args) 
(actually
callWhenRunning calls this method if reactor is not running).

-- 
Thomas




From davidh at ilm.com  Mon Feb  6 16:50:24 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:50:24 -0800
Subject: [Twisted-Python] Help: how to run something at shutdown time
In-Reply-To: <20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>
References: <43E7B9F1.4090909@ilm.com>
	<20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>
Message-ID: <43E7C4A0.4040401@ilm.com>

As you might have guessed, I'm something of a twisted newbie here.
That seems perfect.
Thanks much!
-Dave

Thomas HERVE wrote:

> Quoting David Hirschfield <davidh at ilm.com>:
>
>> I don't see any callWhenStopped() or something to that effect...so is 
>> there a way to call specific methods when shutdown happens?
>
>
> Yes : reactor.addSystemEventTrigger('before', 'shutdown', func, args) 
> (actually
> callWhenRunning calls this method if reactor is not running).
>

-- 
Presenting:
mediocre nebula.




From alengarbage at yahoo.com  Mon Feb  6 16:51:09 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 13:51:09 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206215109.67683.qmail@web31502.mail.mud.yahoo.com>

Actually, I suppose that,

        if code == False:
            # assumes failed results have 
            # (False, failure) pairs, and
            # only returns the first of
            # these.
            return res

could better be,

        if code == False:
            raise failure.DefaultException(result)

(so that the errback gets the full list).

Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From davidh at ilm.com  Mon Feb  6 16:58:09 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:58:09 -0800
Subject: [Twisted-Python] Threading and twisted
Message-ID: <43E7C671.7050800@ilm.com>

I have some old server code that runs in multiple threads, and I'm in 
the process of converting the server to a twisted xmlrpc server.

The code basically has multiple worker threads all pulling from a 
thread-safe queue of requests to process. Threads pull requests at will 
from the queue and process them, placing results in a thread-safe object 
which is used to deliver results to clients. The request processing will 
often block doing I/O or sleep while waiting for processes to complete, 
which is why they run in threads.

My question is: can I keep the threaded system as-is and just use the 
xmlrpc system to add requests to the queue and pull results from it to 
deliver to clients, as long as the xmlrpc calls maintain thread safety 
when dealing with the shared queue and results object? Or, is it 
generally unsafe to use non-twisted threading in conjunction with a 
twisted app? Should I be using twisted's own thread pool and 
runInThread() system to do the request processing work?

It probably won't be too much work to change over the current code to 
use twisted's threading framework...but I'm just wondering where I might 
run into trouble if I use the current setup instead. Am I endangering 
the xmlrpc server's ability to respond to requests if I have threads 
that aren't under twisted's control?

Thanks for your help,
-Dave

-- 
Presenting:
mediocre nebula.




From itamar at itamarst.org  Mon Feb  6 17:27:53 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 06 Feb 2006 17:27:53 -0500
Subject: [Twisted-Python] Threading and twisted
In-Reply-To: <43E7C671.7050800@ilm.com>
References: <43E7C671.7050800@ilm.com>
Message-ID: <1139264874.9162.33.camel@localhost.localdomain>

On Mon, 2006-02-06 at 13:58 -0800, David Hirschfield wrote:

> My question is: can I keep the threaded system as-is and just use the 
> xmlrpc system to add requests to the queue and pull results from it to 
> deliver to clients, as long as the xmlrpc calls maintain thread safety 
> when dealing with the shared queue and results object? Or, is it 
> generally unsafe to use non-twisted threading in conjunction with a 
> twisted app? Should I be using twisted's own thread pool and 
> runInThread() system to do the request processing work?

Twisted has a built-in thread pool. Lets say you have a function called
runTask(t) which is supposed to run on a specific task, and is known to
be thread-safe (e.g. doesn't call into Twisted). You can then do:

def xmlrpc_runtask(self, t):
    return twisted.internet.threads.deferToThread(runTask, t)

See
http://twistedmatrix.com/projects/core/documentation/howto/threading.html

You can do something similar with your own thread pool. The key is that
threads can schedule callables to run in Twisted thread using
reactor.callFromThread(). You don't want to do anything blocking (e.g.
reading from Queue) in the Twisted thread.




From nico at tekNico.net  Tue Feb  7 03:17:05 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 07 Feb 2006 09:17:05 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>
References: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <ds9l22$8ng$1@sea.gmane.org>

>   This is particularly useful for p2p-style apps.  For
> example, suppose I want to maintain a maximum of 20
> outstanding requests for a given operation -- I don't
> want to spin off another 20 (or another X) until I
> know exactly how many of the original 20 failed and
> how many succeeded.

You may want to use twisted.internet.defer.DeferredQueue for this.

-- 
Nicola Larosa - http://www.tekNico.net/

How do we "make poverty history"? We make naivety history.
We make ignorance of the forces manipulating the world history.
We make ignorance of their agenda history. Without that,
nothing can change. -- David Icke, November 2005




From neuzhoundxx at yahoo.com  Tue Feb  7 09:59:54 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Tue, 7 Feb 2006 06:59:54 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060204012735.2697.148719091.divmod.quotient.6459@ohm>
Message-ID: <20060207145954.31194.qmail@web36709.mail.mud.yahoo.com>

This client code is making connections to a legacy app.  I do have Java code that simulates what the server side essentially does and this client code does seem to
  work as expected when run against that server code:
   
  commandline=python dd.py localhost 140 W04FSRV W04PS01 2
   
  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
conn1 TRANS CODE= 998
  conn1 sending server data ...
conn1 finished sending server data
conn1 connection lost
conn1 Connection lost - goodbye!
conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  -------------------------------------------------------------------
  When run against the legacy app on <ip address>, only one connection seems to be 
  working (see output below).  Also, when I run the code one connection at a time, 
  the code works.
   
  Any suggestion what I can do on the client side to help me debug?
  I noticed there's log.msg()'s in the twisted code.  Would they have printed out
  on the dos console (i'm using windows xp as the client machine) if they had
  occurred?
   
  Also, one difference between the two "invocations" (connecting to java server code vs connecting to legacy app) is the port. For connecting to the java server code on localhost, the "remote" port is 140; for connecting  to the legacy app, the remote port
  is the usual NBT port 139. i don't think this should matter; just thought i'd mention it...
   
  commandline= python dd.py <ip address> 139 W04FSRV W04PS01 2

  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  glyph at divmod.com wrote:
  
On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter wrote:

> With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to. Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times? Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data. Depending on which prints are actually commented out or not that might look like hanging :)

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  


			
---------------------------------
 Yahoo! Mail - Helps protect you from nasty viruses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060207/9e4c57ea/attachment.htm 

From neuzhoundxx at yahoo.com  Tue Feb  7 10:52:22 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Tue, 7 Feb 2006 07:52:22 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060207145954.31194.qmail@web36709.mail.mud.yahoo.com>
Message-ID: <20060207155222.96627.qmail@web36712.mail.mud.yahoo.com>

Hi all!  After I asked someone to take a look at our legacy app setup, this code seems to work now!

john peter <neuzhoundxx at yahoo.com> wrote:    This client code is making connections to a legacy app.  I do have Java code that simulates what the server side essentially does and this client code does seem to
  work as expected when run against that server code:
   
  commandline=python dd.py localhost 140 W04FSRV W04PS01 2
   
  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
conn1 TRANS CODE= 998
  conn1 sending server data ...
conn1 finished sending server data
conn1 connection lost
conn1 Connection lost - goodbye!
conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  -------------------------------------------------------------------
  When run against the legacy app on <ip address>, only one connection seems to be 
  working (see output below).  Also, when I run the code one connection at a time, 
  the code works.
   
  Any suggestion what I can do on the client side to help me debug?
  I noticed there's log.msg()'s in the twisted code.  Would they have printed out
  on the dos console (i'm using windows xp as the client machine) if they had
  occurred?
   
  Also, one difference between the two "invocations" (connecting to java server code vs connecting to legacy app) is the port. For connecting to the java server code on localhost, the "remote" port is 140; for connecting  to the legacy app, the remote port
  is the usual NBT port 139. i don't think this should matter; just thought i'd mention it...
   
  commandline= python dd.py <ip address> 139 W04FSRV W04PS01 2

  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  glyph at divmod.com wrote:
  
On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter wrote:

> With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to. Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times? Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data. Depending on which prints are actually commented out or not that might look like hanging :)

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  

    
---------------------------------
  Yahoo! Mail - Helps protect you from nasty viruses._______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



			
---------------------------------
 Yahoo! Mail - Helps protect you from nasty viruses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060207/ef741aa4/attachment.htm 

From foom at fuhm.net  Wed Feb  8 01:00:07 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 08 Feb 2006 00:00:07 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1F6iN4-0007Jg-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-01 06:00:02.340000:
 Bugs opened: 13   Bugs closed: 5   Total open bugs: 553 (+8)
  Urgent: 3 (+0)
  Bug: 268 (+4)
  Feature: 188 (+1)
  Wish: 94 (+3)

New / Reopened Bugs
______________________
                    ==== Bug ====
iocpreactor ignores pauseProducing from inside dataReceived  (3 hours ago)
       http://twistedmatrix.com/bugs/issue1473 opened by ghazel

[TESTS, TRIAL] test_reporter.TestErrorReporting.test_timing uses clock and tests many things  (4 days ago)
       http://twistedmatrix.com/bugs/issue1470 opened by jml

fix twisted.web2 log format to comply with apache  (4 days ago)
       http://twistedmatrix.com/bugs/issue1469 opened by andrea

[CONCH] Conch FileTransferClient breaks on STATUS packet without message  (6 days ago)
       http://twistedmatrix.com/bugs/issue1463 opened by bwh

fix exception in twisted.web2 makeUnsatisfiable  (5 days ago)
       http://twistedmatrix.com/bugs/issue1465 opened by andrea

[DOCUMENTATION] small bug in the example in documentation/howto  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1464 opened by andyl

[WEB2] static.Data fix  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1462 opened by andrea

win32reactor spawnProcess incorrectly escapes cmd line  (6 months ago)
       http://twistedmatrix.com/bugs/issue1123 opened by justinj

                    ==== Feature ====
[WEB2] Additional address(es) in access.log  (4 days ago)
       http://twistedmatrix.com/bugs/issue1468 opened by jwashin

                    ==== Wish ====
[CORE, WIN32] Consistent cross-platform handling of connectTCP(INADDR_ANY, ...)  (yesterday)
       http://twistedmatrix.com/bugs/issue1472 opened by glyph

replace StopTraversal with () or []  (yesterday)
       http://twistedmatrix.com/bugs/issue1471 opened by andrea

[WEBSITE] TwistedWeb2 version mismatch (0.1 / 0.1.0)  (4 days ago)
       http://twistedmatrix.com/bugs/issue1467 opened by doko

[WEBSITE] one html page to get an overview of current released versions  (4 days ago)
       http://twistedmatrix.com/bugs/issue1466 opened by doko

Bugs Closed
______________________
                    ==== Bug ====
[CORE, WIN32] spawnProcess in default reactor for win32 is broken  (1 week ago)
       http://twistedmatrix.com/bugs/issue1457 opened by justinj, closed by glyph

[CORE, WIN32] twisted.internet.process.Process and twisted.internet.win32eventreactor.Process do not implement IConsumer - also they don't work  (19 months ago)
       http://twistedmatrix.com/bugs/issue654 opened by glyph, closed by exarkun

[DEFERRED, DOCUMENTATION] Error in documentation (deferred timeout example) at http://twistedmatrix.com/projects/core/documentation/howto/deferrecipes.html  (3 months ago)
       http://twistedmatrix.com/bugs/issue1289 opened by szumo, closed by exarkun

[DOCUMENTATION] small bug in the example in documentation/howto  (6 days ago)
       http://twistedmatrix.com/bugs/issue1464 opened by andyl, closed by spiv

[WEB2] static.Data fix  (6 days ago)
       http://twistedmatrix.com/bugs/issue1462 opened by andrea, closed by wsanchez




From alengarbage at yahoo.com  Wed Feb  8 13:23:30 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 8 Feb 2006 10:23:30 -0800 (PST)
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
Message-ID: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>

I think I'm seeing a difference between when a
deferred's callback is invoked and when the .called
member variable is set, and was hoping someone might
be able to explain.

(And let me apologize in advance if what I'm trying to
do is hairbrained or in some way abusive to the
methodology...)

First, a little context.  I have some code that I use
to test with, and it follows the standard deferred
chaining pattern, i.e.,

def alldone(res):
    pass

def trial3(res, ...):
    ...
    d.addCallback(alldone)
    ...

def trial2(res, ...):
    ...
    d.addCallback(trial3)
    ...

def trial1(...):
    ...
    d = someFunc1(...)
    d.addCallback(trial2)
    ...

def maintest():
    trial1(...)


...and I wanted to try putting all the trial
invocations down in maintest, but still wait for the
result of a preceeding test before invoking the next,
so I made up a little function that does, basically,

def waitForDeferredResult(d):
    while not d.called:
        reactor.iteratoe(0.1)
    return d.result


...and then,

def maintest():
    d1 = trial1()
    res1 = waitForDeferredResult(d1)
    d2 = trial2(res1)
    res2 = waitForDeferredResult(d2)
    ...


Perhaps this is hairbrained, as the first strategy
works perfectly, but it sure would make it easier to
comment out one or two (or all but one or two) tests
when I just want to focus on hacking on that
functionality.

However, the while loop in waitForDeferredResult ends
(.called == True) before the callback is actually
called in the case where the the Deferred in the trial
is also chained.  For example, if someFunc1() is set
up something like this:

someFunc1():
    d = someFunc1-1()
    return d

someFunc1-1():
    d = threads.deferToThread(someThing)
    d.addCallback(someFunc1-2)
    return d

someFunc1-2():
    d = threads.deferToThread(someOtherThing)
    return d

...then it appears that .called becomes true after the
deferred in someFunc1-1() returns, but before
someFunc1-2() is invoked.  If, on the other hand, I
chain from one trialX() to the next (as in the top
example) the callback isn't invoked until after
someFunc1-2() returns.  Anyone know why?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From itamar at itamarst.org  Wed Feb  8 13:45:11 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Feb 2006 13:45:11 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
References: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
Message-ID: <1139424311.9309.17.camel@localhost.localdomain>

On Wed, 2006-02-08 at 10:23 -0800, Lenny G Arbage wrote:

> def waitForDeferredResult(d):
>     while not d.called:
>         reactor.iteratoe(0.1)
>     return d.result

Don't do that. Trial tests support returning Deferreds, and if necessary
used with deferredGenerator you can make tests that don't involve
defining a lot of callback functions. Do not reactor.iterate() yourself.

Deferred.result and Deferred.called are private if I'm not mistaken.
Don't use them.





From exarkun at divmod.com  Wed Feb  8 13:53:35 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Feb 2006 13:53:35 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
Message-ID: <20060208185335.2697.1824416698.divmod.quotient.12580@ohm>

On Wed, 8 Feb 2006 10:23:30 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>I think I'm seeing a difference between when a
>deferred's callback is invoked and when the .called
>member variable is set, and was hoping someone might
>be able to explain.
>
>(And let me apologize in advance if what I'm trying to
>do is hairbrained or in some way abusive to the
>methodology...)
>
>First, a little context.  I have some code that I use
>to test with, and it follows the standard deferred
>chaining pattern, i.e.,

Are you using trial?  If you use trial, testing Deferreds gets a lot easier.  If you're not using trial, you probably want to be using trial.

>
> [snip - some things that look like unit tests but don't use trial]
>
>...and I wanted to try putting all the trial
>invocations down in maintest, but still wait for the
>result of a preceeding test before invoking the next,
>so I made up a little function that does, basically,

Fortunately, waiting on things is what Deferreds do best.  Your maintest function (should you choose not to use trial, which there is basically no reason to do, so use trial) might look like this:

def maintest():
    tests = [test1, test2, test3]

    def runATest():
        if tests:
            d = tests.pop(0)()
            d.addCallback(lambda _: runATest())
            return d
    return runATest()

Now you can wait on the Deferred maintest returns.  Of course, you should really just use trial, since it handles all this for you, and with quite a few extra handy features as well.

>
>def waitForDeferredResult(d):
>    while not d.called:
>        reactor.iteratoe(0.1)
>    return d.result
>

This function is broken.  d.called isn't really public.  d.result isn't really public.  reactor.iterate() isn't really public.  You cannot poll a Deferred like this and expect it to work.  Lots of people have tried.  It just can't be done.

>
> [snip - description of why waitForDeferredResult doesn't work]
>

When you want to run some code after a Deferred has fired, put the code in a function, add the function as a callback.  That's the only supported way to do this.  It's the entire purpose of Deferreds.  It works wonderfully. :)

Jean-Paul



From Brendan at BrendanSimon.com  Thu Feb  9 07:37:11 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Thu, 09 Feb 2006 23:37:11 +1100
Subject: [Twisted-Python] Conch: multiple commands
Message-ID: <43EB3777.4010400@BrendanSimon.com>

I'm trying to use and understand the latest Twisted and Conch (I'm a 
newbie).  I can get teh sample apps going fine but they all seem to send 
one command and then exit.  I'm trying to workout how to send multiple 
commands to the server from the same client application.

The sshsimpleclient.py does send multiple commands (false, true, cat) 
with separate channels.
Is that the preferred way to send multiple commands?
Doesn't that require some setup overhead every time I want to issue a 
command to the server?

Is it possible to open _one_ channel, and send commands in a 
synchronously?  ie. wait for commands to return output and then issue 
other commands if necesary??
Maybe this goes against the grain of the Twisted Asynchronous Framework ???

If I assume that I have to open a new channel for each command, and I 
have a 100 different commands, I could have 100 classes for each command 
(seems a bit extreme) or have one class that gets the command passed to 
it.  The problem I see with the latter is that I don't know how to wait 
until the first command has got a reply and is finished.  It seems that 
the channelOpen method returns straight away.  How can I control the 
program execution to wait for the response, error or timeout?  Example:
    def servicesStarted(self):
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
        # how do I wait for list of dir1 to finish?
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
        # how do I wait for list of dir2 to finish?
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
        # how do I wait for list of dir3 to finish?

Thanks,
Brendan.




From paulswartz at gmail.com  Thu Feb  9 10:14:20 2006
From: paulswartz at gmail.com (Paul Swartz)
Date: Thu, 09 Feb 2006 10:14:20 -0500
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EB3777.4010400@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
Message-ID: <43EB5C4C.4030900@gmail.com>

Brendan Simon wrote:
> I'm trying to use and understand the latest Twisted and Conch (I'm a 
> newbie).  I can get teh sample apps going fine but they all seem to send 
> one command and then exit.  I'm trying to workout how to send multiple 
> commands to the server from the same client application.
> 
> The sshsimpleclient.py does send multiple commands (false, true, cat) 
> with separate channels.
> Is that the preferred way to send multiple commands?
> Doesn't that require some setup overhead every time I want to issue a 
> command to the server?

That's the way SSH requires sending multiple commands.  It does require 
some server overhead, but there's no way around that.

> Is it possible to open _one_ channel, and send commands in a 
> synchronously?  ie. wait for commands to return output and then issue 
> other commands if necesary??
> Maybe this goes against the grain of the Twisted Asynchronous Framework ???

You can send one command at a time, but you still have to write the code 
asynchronously.

> If I assume that I have to open a new channel for each command, and I 
> have a 100 different commands, I could have 100 classes for each command 
> (seems a bit extreme) or have one class that gets the command passed to 
> it.  The problem I see with the latter is that I don't know how to wait 
> until the first command has got a reply and is finished.  It seems that 
> the channelOpen method returns straight away.  How can I control the 
> program execution to wait for the response, error or timeout?  Example:
>    def servicesStarted(self):
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
>        # how do I wait for list of dir1 to finish?
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
>        # how do I wait for list of dir2 to finish?
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
>        # how do I wait for list of dir3 to finish?
> 

What I'd do is also pass a Deferred to CommandChannel, that is 
call/errbacked when the command finishes.

def servicesStarted(self):
     d = defer.Deferred()
     d.addCallback(self._cbFirstLs)
     d.addErrback(self._ebFirstLs)
     self.openChannel(CommandChannel(d, "ls /tmp/dir1"))

def _cbFirstLs(self, result):
     print 'directory listing', result
     d = defer.Deferred()
     self.openChannel(CommandChannel(d, "ls /tmp/dir2"))

def _ebFirstLs(self, f):
     log.err()

etc., for all the commands you want to run.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin
GPG: 5CF0B1C9



From rudy at goldenhelix.com  Thu Feb  9 11:26:31 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 9 Feb 2006 09:26:31 -0700
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EB3777.4010400@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
Message-ID: <200602090926.32097.rudy@goldenhelix.com>

On Thursday 09 February 2006 5:37 am, Brendan Simon wrote:
> The sshsimpleclient.py does send multiple commands (false, true, cat)
> with separate channels.
> Is that the preferred way to send multiple commands?
> Doesn't that require some setup overhead every time I want to issue a
> command to the server?
>
> Is it possible to open _one_ channel, and send commands in a
> synchronously?  ie. wait for commands to return output and then issue
> other commands if necesary??
> Maybe this goes against the grain of the Twisted Asynchronous Framework ???

The other thing to note is that each time you open a channel, you are getting 
a fresh environment. So if your series of commands depends of env vars or 
directory changes you need to do something to ensure each command is in the 
environment it expects.

So instead of
...
self.openChannel(CommandChannel(d, "svn co blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "make"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "tar -czf ../thing.tar.gz outfile"))

you might want
...
self.openChannel(CommandChannel(d, "svn co blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah; make"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah; tar -czf ../thing.tar.gz 
outfile"))

--gabe




From itamar at itamarst.org  Thu Feb  9 11:48:48 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Feb 2006 11:48:48 -0500
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <200602090926.32097.rudy@goldenhelix.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
Message-ID: <1139503729.9105.19.camel@localhost.localdomain>

On Thu, 2006-02-09 at 09:26 -0700, Gabe Rudy wrote:

> The other thing to note is that each time you open a channel, you are getting 
> a fresh environment. So if your series of commands depends of env vars or 
> directory changes you need to do something to ensure each command is in the 
> environment it expects.

You could also copy over a shell script and run it, if you're not doing
a lot of result parsing.




From alengarbage at yahoo.com  Thu Feb  9 13:09:42 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 9 Feb 2006 10:09:42 -0800 (PST)
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
Message-ID: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com wrote:
>>def waitForDeferredResult(d):
>>    while not d.called:
>>        reactor.iteratoe(0.1)
>>    return d.result
>>
>
> This function is broken.  d.called isn't really
> public.  d.result isn't really public.
> reactor.iterate() isn't really public. 
> You cannot poll a Deferred like this and expect
> it to work.  Lots of people have tried.  It
> just can't be done.


  Okay, I have repented and waitForDeferredResult()
has been terminated.  I will return to saner methods.

  BTW, trial is really nice.  You may find it somewhat
ironic that I actually got the idea for using
reactor.iterate() from the trial howto
(http://twisted.sourceforge.net/TwistedDocs-1.2.0rc3/howto/test-standard.html)

Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From foom at fuhm.net  Thu Feb  9 13:34:29 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 9 Feb 2006 13:34:29 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15860 - Move
	checkPreconditions() from web2.dav.static.DAVFile to
	web2.resource.RenderMixIn.
In-Reply-To: <E1F700I-0000rf-00@wolfwood>
References: <E1F700I-0000rf-00@wolfwood>
Message-ID: <DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>

On Feb 8, 2006, at 7:49 PM, Wilfredo Sanchez wrote:
> Move checkPreconditions() from web2.dav.static.DAVFile to  
> web2.resource.RenderMixIn.
> Add test suite (ported foom's tests for server.checkpreconditions()).
> Fix some bugs found by the tests.  (Holy cow, checkpreconditions  
> are a PITA.)

I don't like this part. You've made the precondition check code much  
longer, IMO harder to understand (figuring out how the return values  
of one method influenced the rest of the execution is not easy), and  
pinned it to being part of Resource, rather than being reusable. I'm  
not sure of the need, given that the previous implementation was  
callable from Resource as it was. Why not just use it...

Nextly, I'm somewhat concerned about the change to calling the  
precondition check before GET rendering instead of afterwards: I  
think your use cases are probably not typical. I believe most people  
will write resources which generate dynamic content, and if they're  
_really good_ about it, they'll simultaneously generate an etag and a  
last-modified time. This is also the only way that such information  
can come out of wsgi, cgi, proxies to other servers, etc.

The way things were set up before made Not Modified responses just  
"magically" show up correctly when you set those headers in your  
response. No more interface was required than that, which means that  
the response could come from anywhere. Now, instead, you force the  
author to implement resource.etag() and resource.lastModified() in  
order to get that behavior. It's really easy for file-like resources  
to do so, but not so much so for most other kinds.

And the thing is, it's OK to check afterwards for the kinds of  
requests a web browser makes: GET/HEAD/POST. GET/HEAD don't change  
things so it's acceptable to do their check at any time, and while  
POST does change things, as a practical matter nobody actually sends  
conditionals on post requests, because what would it be useful for?  
(and nothing would be set up to handle such a thing).

However, I'm currently ignoring conditionals on PostableResource's  
http_POST, which while okay as far as real-world interoperability  
goes, it is certainly not _right_. And to make things worse, the post- 
processing filter doesn't confine itself to checking only GET/HEAD  
requests, so the client will get back a precondition failed message,  
even though the method was executed. At the very least a POST with an  
If-Unmodified-Since/If-Match should return precondition failed. If  
there was code on Resource to handle that automatically, I could not  
have forgetten to do it.

So, um, I dunno what to conclude. :)

James



From foom at fuhm.net  Thu Feb  9 13:45:14 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 9 Feb 2006 13:45:14 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15860 - Move
	checkPreconditions() from web2.dav.static.DAVFile to
	web2.resource.RenderMixIn.
In-Reply-To: <DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
References: <E1F700I-0000rf-00@wolfwood>
	<DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
Message-ID: <737CEC70-C9AF-49FD-9851-687DBDD8CC71@fuhm.net>

Sorry, I meant to send this to twisted-web instead. Plz make any  
reply there, instead.

James

On Feb 9, 2006, at 1:34 PM, James Y Knight wrote:
> On Feb 8, 2006, at 7:49 PM, Wilfredo Sanchez wrote:
>> Move checkPreconditions() from web2.dav.static.DAVFile to  
>> web2.resource.RenderMixIn.
>> Add test suite (ported foom's tests for server.checkpreconditions()).
>> Fix some bugs found by the tests.  (Holy cow, checkpreconditions  
>> are a PITA.)
>
> I don't like this part. You've made the precondition check code  
> much longer, IMO harder to understand (figuring out how the return  
> values of one method influenced the rest of the execution is not  
> easy), and pinned it to being part of Resource, rather than being  
> reusable. I'm not sure of the need, given that the previous  
> implementation was callable from Resource as it was. Why not just  
> use it...
>
> Nextly, I'm somewhat concerned about the change to calling the  
> precondition check before GET rendering instead of afterwards: I  
> think your use cases are probably not typical. I believe most  
> people will write resources which generate dynamic content, and if  
> they're _really good_ about it, they'll simultaneously generate an  
> etag and a last-modified time. This is also the only way that such  
> information can come out of wsgi, cgi, proxies to other servers, etc.
>
> The way things were set up before made Not Modified responses just  
> "magically" show up correctly when you set those headers in your  
> response. No more interface was required than that, which means  
> that the response could come from anywhere. Now, instead, you force  
> the author to implement resource.etag() and resource.lastModified()  
> in order to get that behavior. It's really easy for file-like  
> resources to do so, but not so much so for most other kinds.
>
> And the thing is, it's OK to check afterwards for the kinds of  
> requests a web browser makes: GET/HEAD/POST. GET/HEAD don't change  
> things so it's acceptable to do their check at any time, and while  
> POST does change things, as a practical matter nobody actually  
> sends conditionals on post requests, because what would it be  
> useful for? (and nothing would be set up to handle such a thing).
>
> However, I'm currently ignoring conditionals on PostableResource's  
> http_POST, which while okay as far as real-world interoperability  
> goes, it is certainly not _right_. And to make things worse, the  
> post-processing filter doesn't confine itself to checking only GET/ 
> HEAD requests, so the client will get back a precondition failed  
> message, even though the method was executed. At the very least a  
> POST with an If-Unmodified-Since/If-Match should return  
> precondition failed. If there was code on Resource to handle that  
> automatically, I could not have forgetten to do it.
>
> So, um, I dunno what to conclude. :)
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Thu Feb  9 14:02:18 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Feb 2006 14:02:18 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>
References: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>
Message-ID: <1139511738.9105.47.camel@localhost.localdomain>

On Thu, 2006-02-09 at 10:09 -0800, Lenny G Arbage wrote:

>   BTW, trial is really nice.  You may find it somewhat
> ironic that I actually got the idea for using
> reactor.iterate() from the trial howto
> (http://twisted.sourceforge.net/TwistedDocs-1.2.0rc3/howto/test-standard.html)

Yeah... we used to do it that way too, so we learned why it's a bad idea
the hard way.

Those are really old docs btw, seeing as Twisted is up to version 2.1.




From duncan.mcgreggor at gmail.com  Thu Feb  9 15:16:04 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 9 Feb 2006 13:16:04 -0700
Subject: [Twisted-Python] sprinting at PyCon
Message-ID: <cded6a71e8e3e24a56871392cb360e35@gmail.com>

 From an email exchange with dreid:

> From: David Reid <dreid at dreid.org>
> Date: February 9, 2006 1:04:30 PM MST
> To: Duncan McGreggor <duncan.mcgreggor at gmail.com>
> Subject: Re: t.w.xmlrpc Basic Auth patch
>
>>> Help is always great, unfortunately the web2 client isn't _done_ yet.
>>> It has pretty decent test coverage and works fairly well but doesn't
>>> have any high level api.  I'm not sure when that stuff will get done.
>>> If you're interested in the XML-RPC server side that'd be great. :)
>>
>> Awesome. Perfect for sprinting at pycon.
>
> I don't think foom or I are going to be there. Perhaps some benefit
> might come of organizing a virtual sprint to coincide with pycon's
> sprints. :(

I will be at pycon this year. I had planned on sprinting with some of 
my own projects, but I can do that anytime. I'd much rather do some 
group work, even if it's virtual sprinting with those that can't be 
there.

Is there any interest in a sprint/vsprint? In particular, I want to 
help with t.w2 xmlrpc (server, maybe some client work). Any thoughts? 
What about #twisted.pycon or some such?

d




From Brendan at BrendanSimon.com  Thu Feb  9 16:02:40 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 08:02:40 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
Message-ID: <43EBADF0.6040802@BrendanSimon.com>

Paul Swartz <paulswartz at gmail.com> wrote:
>> Is it possible to open _one_ channel, and send commands in a 
>> synchronously?  ie. wait for commands to return output and then issue 
>> other commands if necesary??
>> Maybe this goes against the grain of the Twisted Asynchronous Framework ???
>>     
> You can send one command at a time, but you still have to write the code 
> asynchronously.
>   
I think this is half my problem, working out how to use the asynchronous 
framework properly ;-)

>>    def servicesStarted(self):
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
>>        # how do I wait for list of dir1 to finish?
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
>>        # how do I wait for list of dir2 to finish?
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
>>        # how do I wait for list of dir3 to finish?
>>     
> What I'd do is also pass a Deferred to CommandChannel, that is 
> call/errbacked when the command finishes.
>
> def servicesStarted(self):
>      d = defer.Deferred()
>      d.addCallback(self._cbFirstLs)
>      d.addErrback(self._ebFirstLs)
>      self.openChannel(CommandChannel(d, "ls /tmp/dir1"))
>
> def _cbFirstLs(self, result):
>      print 'directory listing', result
>      d = defer.Deferred()
>      self.openChannel(CommandChannel(d, "ls /tmp/dir2"))
>
> def _ebFirstLs(self, f):
>      log.err()
>
> etc., for all the commands you want to run.
>   
Thanks.  I'll play with this a little more.  Guess I may need some kind 
of state machine in the callback function if different unrelated 
commands are to be sent at different times based on various application 
events.  Does that sound like a good way to use Twisted???

Thanks,
Brendan.




From Brendan at BrendanSimon.com  Thu Feb  9 16:06:52 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 08:06:52 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <200602090926.32097.rudy@goldenhelix.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
Message-ID: <43EBAEEC.2090701@BrendanSimon.com>

Gabe Rudy wrote:
> On Thursday 09 February 2006 5:37 am, Brendan Simon wrote:
>   
>> The sshsimpleclient.py does send multiple commands (false, true, cat)
>> with separate channels.
>> Is that the preferred way to send multiple commands?
>> Doesn't that require some setup overhead every time I want to issue a
>> command to the server?
>>
>> Is it possible to open _one_ channel, and send commands in a
>> synchronously?  ie. wait for commands to return output and then issue
>> other commands if necesary??
>> Maybe this goes against the grain of the Twisted Asynchronous Framework ???
>>     
>
> The other thing to note is that each time you open a channel, you are getting 
> a fresh environment. So if your series of commands depends of env vars or 
> directory changes you need to do something to ensure each command is in the 
> environment it expects.
>
> So instead of
> ...
> self.openChannel(CommandChannel(d, "svn co blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "make"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "tar -czf ../thing.tar.gz outfile"))
>
> you might want
> ...
> self.openChannel(CommandChannel(d, "svn co blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah; make"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah; tar -czf ../thing.tar.gz 
> outfile"))
>   
Or maybe create a script, send it to the server, (chmod it ???) and then 
run it.  Does that sound reasonable?

Cheers,
Brendan.




From rudy at goldenhelix.com  Thu Feb  9 16:54:26 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 9 Feb 2006 14:54:26 -0700
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EBAEEC.2090701@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
	<43EBAEEC.2090701@BrendanSimon.com>
Message-ID: <200602091454.27188.rudy@goldenhelix.com>

On Thursday 09 February 2006 2:06 pm, Brendan Simon wrote:
>
> Or maybe create a script, send it to the server, (chmod it ???) and then
> run it.  Does that sound reasonable?
>
> Cheers,
> Brendan.

It does, but what would you use to send the script to the server? Conch can 
supposedly to scp but I have yet to see a clear example on how. You could use 
external scp but then you would have to figure out the authentication between 
your box and the remote box (ssh_authorized_hosts or something is what I went 
with, its kind of hard to pass user/pass credentials to command line scp). Or 
you could send the script in the form of 
echo "#!/bin/bash\n script..." > script.sh 
through a ssh channel, but that kind of defeats the purpose.

If you figure how to have Conch easily copy files let me know :)

--gabe



From Brendan at BrendanSimon.com  Thu Feb  9 19:42:26 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 11:42:26 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
Message-ID: <43EBE172.4000500@BrendanSimon.com>

twisted-python-request at twistedmatrix.com wrote:
> Date: Thu, 09 Feb 2006 10:14:20 -0500
> From: Paul Swartz <paulswartz at gmail.com>
>
> Brendan Simon wrote:
>   
>> I'm trying to use and understand the latest Twisted and Conch (I'm a 
>> newbie).  I can get teh sample apps going fine but they all seem to send 
>> one command and then exit.  I'm trying to workout how to send multiple 
>> commands to the server from the same client application.
>>
>> The sshsimpleclient.py does send multiple commands (false, true, cat) 
>> with separate channels.
>> Is that the preferred way to send multiple commands?
>> Doesn't that require some setup overhead every time I want to issue a 
>> command to the server?
>>     
>
> That's the way SSH requires sending multiple commands.  It does require 
> some server overhead, but there's no way around that.
>   
So what does a normal ssh client (eg openssh) do when I connect to an 
sshd server to get to a bash session ???

Maybe I just answered my own question.  The sshd server runs "login" (or 
something) which in turn looks in /etc/passwd for the user and shell, 
and then invokes that shell (eg. bash).  Is that the way it works?  i.e. 
the ssh client only sends _one_ command and as far as it is concerned is 
only invoked one program and it doesn't care that the server has fired 
off many apps.

If that's the case, then maybe I can invoke bash as my command, and just 
write data to the channel and grab the results ???
Is that good or bad???

Thanks,
Brendan.




From p.mayers at imperial.ac.uk  Thu Feb  9 20:33:37 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 10 Feb 2006 01:33:37 +0000
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EBE172.4000500@BrendanSimon.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
	<43EBE172.4000500@BrendanSimon.com>
Message-ID: <43EBED71.1050002@imperial.ac.uk>

Brendan Simon wrote:
> 
> Maybe I just answered my own question.  The sshd server runs "login" (or 
> something) which in turn looks in /etc/passwd for the user and shell, 
> and then invokes that shell (eg. bash).  Is that the way it works?  i.e. 
> the ssh client only sends _one_ command and as far as it is concerned is 
> only invoked one program and it doesn't care that the server has fired 
> off many apps.

Correct

> 
> If that's the case, then maybe I can invoke bash as my command, and just 
> write data to the channel and grab the results ???

It might not be quite that simple. Bash and most shells expect to be 
attached to a TTY with a VT emulation on top, to provide output, 
prompting and so forth. To do it "correctly" you would need some kind of 
TTY client attached to the channel that would present you with prompts.

That said for simple commands that don't cause any complex terminal 
operations, it works fine. I've done it with SSH logins into firewalls 
and routers as an alternative to the (frankly POS) "expect" approach. I 
basically did something like this (though I was talking to an SSH 
process rathern than Twisted's SSH support as I needed SSHv1 - modify as 
appropriate):

class sshSession(TheBases):
   # match "[thing]$" or "[foo at bar]# "
   PROMPT_RE = re.compile(r'[[][^]]+]. ')
   def __init__(self):
     self.stdout = stdout
     self.stdout_lines = []
     self.stderr = stderr
     self.stdin = []
     self.atprompt = False
     self.deferred = None

   def sendCmd(cmd):
     """Queue up the command - returns a deferred callbacked with the
     command stdout or errbacked with stderr if any"""
     d = defer.Deferred()
     self.stdin.append((d, cmd))
     if self.atprompt:
       self.atprompt = False
       self.deferred, cmd = self.stdin.pop(0)
       self.transport.write(cmd+'\r')
     return d

   def errReceived(self, data):
     self.stderr += data

   def outReceived(self, data):
     line = None

     # accumulate stdout
     self.stdout += data
     while self.stdout:
       # look for an end of line in the buffer
       pos = self.stdout.find('\r\n')
       if pos==-1:
         break
       line = self.stdout[:pos]
       self.stdout = self.stdout[pos+2:]
       self.stdout_lines.append(line)

     # ok we've looked at all the complete lines - is whats
     # left in the buffer the prompt?
     if self.PROMPT_RE.match(self.stdout):
       if self.deferred:
         if self.stderr:
           self.deferred.errback(self.stderr)
           self.deferred = None

         if self.stdin:
           # there's another command waiting
           self.atprompt = False
           self.deferred, cmd = self.stdin.pop(0)
           self.transport.write(cmd+'\r\n')
         else:
           self.atprompt = True

...and hopefully that makes sense!

> Is that good or bad???
> 
> Thanks,
> Brendan.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From timheit at netvigator.com  Fri Feb 10 11:22:49 2006
From: timheit at netvigator.com (Timmy)
Date: Sat, 11 Feb 2006 0:22:49 +0800
Subject: [Twisted-Python] What can be pickled in the PB?
Message-ID: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>

Hello,
  I'm new to twisted PB. I would like to know what can be
pickled in PB. Can 'file' and 'binary data' be pickled?
I'm writing a program to send data (including binary data)
to a database via RPC in the server. So I need to know whether PB can do it or not.

Thanks!




From itamar at itamarst.org  Fri Feb 10 11:40:14 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Feb 2006 11:40:14 -0500
Subject: [Twisted-Python] What can be pickled in the PB?
In-Reply-To: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>
References: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>
Message-ID: <1139589615.9107.2.camel@localhost.localdomain>

On Sat, 2006-02-11 at 00:22 +0800, Timmy wrote:
> Hello,
>   I'm new to twisted PB. I would like to know what can be
> pickled in PB. Can 'file' and 'binary data' be pickled?

"Serialized" may be a better word. You can serialize Python strings
(which can contain arbitrary bytes, which I assume is what you mean by
"binary data"). Python file objects can not be directly serialized, but
you can write code to send their contents.




From general at eepatents.com  Tue Feb 14 17:44:31 2006
From: general at eepatents.com (Ed Suominen)
Date: Tue, 14 Feb 2006 14:44:31 -0800
Subject: [Twisted-Python] Sqlalchemy + Twisted Ideas
Message-ID: <43F25D4F.7090600@eepatents.com>

I am a new but very enthusiastic user of sqlalchemy and have been
happily banging out some code to use it. Like Valentino Volonghi (but by
no means in the same league), I am also a big fan of Twisted and want to
integrate my use of sqlalchemy into Twisted apps.

Before I get too deep into unit testing (yes, I wrote the code first,
shame on me), I'd like to get some feedback from both sqlalchemy and
twisted users about what they think of the approach in my module
database.py, which I have posted to http://edsuom.pastebin.com/555036.

A use case, for my persistent graph package that's going to rely on all
this, is posted to http://edsuom.pastebin.com/555040. Note how some
database operations are simply encapsulated into a self.transact() call
while others, involving several lines of code, are put into a local
function and encapsulated into a self.transact(thisTransaction) call at
the end of the method.

Some assorted coolness:

* You can use Twisted's deferred result mechanism or block, even on a
case-by-case basis.

* Engines are defined at the class level, for all tables and contexts.
Tables are defined, also at the class level, for all contexts. Cached
selects are defined, however, on a context-by-context basis.

* In all three cases, thread-local storage permits even cranky databases
like sqlite from complaining about connection objects created in one
thread being used in a different thread.

* Overridden attribute access is used to construct, or retrieve from
cache, the needed goodies on the fly. Advantageously, those goodies are
constructed in the context not only of the current Table (in the case of
cached select() objects) but also in the current thread.

Comments welcome -- positive, critical, or utterly disdainful!

- Ed Suominen






From foom at fuhm.net  Wed Feb 15 01:00:10 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 15 Feb 2006 00:00:10 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1F9Fhy-0001jk-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-08 06:00:02:
 Bugs opened: 15   Bugs closed: 12   Total open bugs: 556 (+3)
  Urgent: 2 (-1)
  Bug: 269 (+1)
  Feature: 190 (+2)
  Wish: 95 (+1)

New / Reopened Bugs
______________________
                    ==== Urgent ====
[CONCH] AttributeError: 'NoneType' object has no attribute 'connectionLost'  (yesterday)
       http://twistedmatrix.com/bugs/issue1486 opened by miro

                    ==== Bug ====
[CORE] Process support sometimes consumes 100% CPU on Linux 2.4.27  (yesterday)
       http://twistedmatrix.com/bugs/issue1488 opened by exarkun

tearDown errors reported strangely  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1483 opened by radix

[CORE] Calling reactor.stop() in shutdown function causes hard-to-understand error message  (yesterday)
       http://twistedmatrix.com/bugs/issue1485 opened by itamarst

[DOCUMENTATION, WORDS] small bug in twisted irc  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1484 opened by inhahe

Make the WebSite repository work again  (2 days ago)
       http://twistedmatrix.com/bugs/issue1480 opened by radix

make setup.py and admin/sumo-setup.py share code  (2 days ago)
       http://twistedmatrix.com/bugs/issue1479 opened by radix

[CORE, WIN32] IReactorProcess and IProcessTransport are wrong  (3 days ago)
       http://twistedmatrix.com/bugs/issue1478 opened by exarkun

[DOCUMENTATION, WEBSITE] SEO: Google searches for docs usually go to out-of-date sourceforge  (2 days ago)
       http://twistedmatrix.com/bugs/issue1481 opened by moonfallen

                    ==== Feature ====
[WEB2] [PATCH] add RedirectResource  (2 days ago)
       http://twistedmatrix.com/bugs/issue1482 opened by andrea

Split the path-manipulation stuff in FilePath out to a separate class  (4 days ago)
       http://twistedmatrix.com/bugs/issue1477 opened by radix

[WEB] [PATCH] Support for Basic Authentication in t.w.xmlrpc  (6 days ago)
       http://twistedmatrix.com/bugs/issue1474 opened by oubiwann

                    ==== Wish ====
Make LoopingCall deal with deferred returning callables  (yesterday)
       http://twistedmatrix.com/bugs/issue1487 opened by ralphm

[CORE] Consolidate and clean up server side HTTP-AUTH implementations  (6 days ago)
       http://twistedmatrix.com/bugs/issue1475 opened by dreid

[CORE, WEB2] Include web2 in main Twisted release  (6 days ago)
       http://twistedmatrix.com/bugs/issue1476 opened by andrea

Bugs Closed
______________________
                    ==== Urgent ====
[CORE] Running 'setup.py all install' inside TwistedSumo-2005-11-06 fails to install subprojects  (1 month ago)
       http://twistedmatrix.com/bugs/issue1418 opened by bdash, closed by radix

[TRIAL, WIN32] trial hangs indefinitely on win32er  (3 weeks ago)
       http://twistedmatrix.com/bugs/issue1449 opened by exarkun, closed by radix

                    ==== Bug ====
tearDown errors reported strangely  (yesterday)
       http://twistedmatrix.com/bugs/issue1483 opened by radix, closed by jml

[DOCUMENTATION, WORDS] small bug in twisted irc  (yesterday)
       http://twistedmatrix.com/bugs/issue1484 opened by inhahe, closed by exarkun

[PATCH] gthreadless.py  (6 months ago)
       http://twistedmatrix.com/bugs/issue1129 opened by stefanomasini, closed by radix

[CORE, TESTS] twisted.test.test_task calls reactor.iterate()  (4 months ago)
       http://twistedmatrix.com/bugs/issue1198 opened by exarkun, closed by exarkun

[TRIAL] .timeout is not enforced for Deferred-chain test cases  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1456 opened by warner, closed by jml

fix twisted.web2 log format to comply with apache  (1 week ago)
       http://twistedmatrix.com/bugs/issue1469 opened by andrea, closed by dreid

fix exception in twisted.web2 makeUnsatisfiable  (1 week ago)
       http://twistedmatrix.com/bugs/issue1465 opened by andrea, closed by dreid

                    ==== Feature ====
[RELEASE MANAGEMENT] document Sumo building  (3 months ago)
       http://twistedmatrix.com/bugs/issue1318 opened by radix, closed by radix

                    ==== Wish ====
[TRIAL] Steal features from datatest for trial  (23 months ago)
       http://twistedmatrix.com/bugs/issue529 opened by itamarst, closed by jml

RFE: Use zipfile to load plugins.tml from zips on sys.path  (31 months ago)
       http://twistedmatrix.com/bugs/issue47 opened by radix, closed by radix




From eric+twisted at trueblade.com  Wed Feb 15 13:58:48 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 13:58:48 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
Message-ID: <43F379E8.2070008@trueblade.com>

I have a non-authenticating, single-threaded, Perspective Broker
application.  I'm running Python 2.3, Twisted 2.0.1 on Fedora Core 2.

I want to run the reactor multiple times, serially.  Essentially I have 
an existing program, and I want to make some PB calls to get some data. 
  The existing program isn't twisted-aware, nor do I want it to be.  I 
just want them to do what's needed to contact a PB server, get some 
data, and disconnect.

To demonstrate the problem,  I took the PB code from chapter 5 of the 
O'Reilly twisted book (pb_client.py and pb_server.py).  In pb_client.py, 
I duplicated the last 3 lines so now it says:

------------------
t = PbTester()
t.runTests()
reactor.run()

t = PbTester()
t.runTests()
reactor.run()
------------------

The code runs twice, but the second call to reactor.run() never returns 
because the getRootObject() deferred never gets called.  If I wait long 
enough, I get a timeout.

While the client is hung, I can connect to the same server with another 
client, and it works normally (at least until the second reactor.run() 
call).  The server seems to be perfectly fine, and keeps responding. 
CPU usage on the box is normal.

Is there something I need to do to run the reactor twice?  I've tried 
changing to Unix domain sockets, but other than not getting a timeout, I 
get the same behavior.

Any hints or debugging tips would be appreciated.

Thanks.

Eric.




From mike at mkp.ca  Wed Feb 15 14:34:00 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 15 Feb 2006 14:34:00 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F379E8.2070008@trueblade.com>
References: <43F379E8.2070008@trueblade.com>
Message-ID: <200602151434.01066.mike@mkp.ca>

What you want is not supported.  If it were, Trial would be a lot simpler.  
There is some pressure to support it, but I think it's low-priority.  (If I 
understand correctly.)  Perhaps you can just block the reactor by calling 
into your app rather than vice-versa?

You're not THE Eric Smith, are you?  From London, Ontario, who brought us 
MiNT?

Mike.



From jml at mumak.net  Wed Feb 15 16:17:42 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 16 Feb 2006 08:17:42 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <200602151434.01066.mike@mkp.ca>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
Message-ID: <d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>

On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> What you want is not supported.  If it were, Trial would be a lot simpler.
> There is some pressure to support it, but I think it's low-priority.  (If I
> understand correctly.)  Perhaps you can just block the reactor by calling
> into your app rather than vice-versa?
>

You understand correctly. It is not supported, Trial would be simpler
and it is never going to be supported.

However I'm not sure how the server could call into Eric's app.

jml



From eric+twisted at trueblade.com  Wed Feb 15 16:40:51 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 16:40:51 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <200602151434.01066.mike@mkp.ca>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
Message-ID: <43F39FE3.6060002@trueblade.com>

Mike Pelletier wrote:
> What you want is not supported.  If it were, Trial would be a lot simpler.  
> There is some pressure to support it, but I think it's low-priority.  (If I 
> understand correctly.)  Perhaps you can just block the reactor by calling 
> into your app rather than vice-versa?

Bummer.  Okay, thanks.  I'll find some way around it, even if I have to 
fire off another executable.  Performance on the client side isn't all 
that critical to me.

> You're not THE Eric Smith, are you?  From London, Ontario, who brought us 
> MiNT?

Apparently, I'm just "a" Eric Smith, not "THE" Eric Smith :)

Eric.



From rudy at goldenhelix.com  Wed Feb 15 18:14:22 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 15 Feb 2006 16:14:22 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <43F39FE3.6060002@trueblade.com>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<43F39FE3.6060002@trueblade.com>
Message-ID: <200602151614.22869.rudy@goldenhelix.com>

I'm trying to freeze a script that uses twisted conch so I can distribute it 
internally easily. It seems to work but I get different behavior out of the 
freezed executable which ends up breaking it. After some hunting I think 
deferreds in threads don't work and I think it's because app.installReactor 
uses reflect.namedModule which imports using __import__ which PyInstaller has 
trouble figuring out or just acts differently when frozen.

Anybody have any luck using cx_Freeze or PyInstaller to freeze a program with 
a threaded reactor?

--gabe



From andrew-twisted at puzzling.org  Wed Feb 15 18:27:27 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Feb 2006 10:27:27 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
Message-ID: <20060215232727.GZ11871@home.puzzling.org>

On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> > What you want is not supported.  If it were, Trial would be a lot simpler.
> > There is some pressure to support it, but I think it's low-priority.  (If I
> > understand correctly.)  Perhaps you can just block the reactor by calling
> > into your app rather than vice-versa?
> >
> 
> You understand correctly. It is not supported, Trial would be simpler
> and it is never going to be supported.

Never is a long time :)

Last time I pestered glyph about this, I got him to agree that it should work.

-Andrew.




From radeex at gmail.com  Wed Feb 15 18:43:25 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 16 Feb 2006 10:43:25 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215232727.GZ11871@home.puzzling.org>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
	<20060215232727.GZ11871@home.puzzling.org>
Message-ID: <60ed19d40602151543u77641816jcb9e310f61422836@mail.gmail.com>

On 2/16/06, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> >
> > You understand correctly. It is not supported, Trial would be simpler
> > and it is never going to be supported.
>
> Never is a long time :)
>
> Last time I pestered glyph about this, I got him to agree that it should work.

I think we may need IRC logs ;)

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Wed Feb 15 18:47:04 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2006 18:47:04 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215232727.GZ11871@home.puzzling.org>
Message-ID: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>

On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>> > What you want is not supported.  If it were, Trial would be a lot simpler.
>> > There is some pressure to support it, but I think it's low-priority.  (If I
>> > understand correctly.)  Perhaps you can just block the reactor by calling
>> > into your app rather than vice-versa?
>> >
>>
>> You understand correctly. It is not supported, Trial would be simpler
>> and it is never going to be supported.
>
>Never is a long time :)
>
>Last time I pestered glyph about this, I got him to agree that it should work.

Now we just need to find someone to implement it for all the reactors :)

Jean-Paul



From rudy at goldenhelix.com  Wed Feb 15 19:01:00 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 15 Feb 2006 17:01:00 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151614.22869.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com> <43F39FE3.6060002@trueblade.com>
	<200602151614.22869.rudy@goldenhelix.com>
Message-ID: <200602151701.00385.rudy@goldenhelix.com>

On Wednesday 15 February 2006 4:14 pm, Gabe Rudy wrote:
>
> Anybody have any luck using cx_Freeze or PyInstaller to freeze a program
> with a threaded reactor?

I checked into it a bit more and I'm not sure threads has anything to do with 
it.

sshsimpleclient.py found at
http://twistedmatrix.com/projects/conch/documentation/examples/
also seems to have problems when frozen. Specifically defer.succeed(1) from 
verfiyHostKey does not seem  to work as the log shows
2006/02/15 16:54 MST [SimpleTransport,client] Disconnecting with error, code 9
        reason: bad host key

PyInstaller has hooks for packages with hidden imports, I'm wondering if I 
need to create something like this so that this will work... but I see no 
obvious modules to force importing.



From eric+twisted at trueblade.com  Wed Feb 15 19:59:48 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 19:59:48 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
Message-ID: <43F3CE84.70404@trueblade.com>

Jean-Paul Calderone wrote:
> On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts 
> <andrew-twisted at puzzling.org> wrote:
>> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>>> > What you want is not supported.  If it were, Trial would be a lot 
>>> simpler.
>>> > There is some pressure to support it, but I think it's 
>>> low-priority.  (If I
>>> > understand correctly.)  Perhaps you can just block the reactor by 
>>> calling
>>> > into your app rather than vice-versa?
>>> >
>>>
>>> You understand correctly. It is not supported, Trial would be simpler
>>> and it is never going to be supported.
>>
>> Never is a long time :)
>>
>> Last time I pestered glyph about this, I got him to agree that it 
>> should work.
> 
> Now we just need to find someone to implement it for all the reactors :)

Well, I happen to be motivated just now.  I'm new to twisted, but I'm 
not new to Python and I'm reasonably familiar with the style twisted 
uses (I've written lots of IOCP code).

If anyone could summarize the problem, and if you're serious about it 
getting fixed, I could look at it.

Eric.





From glyph at divmod.com  Wed Feb 15 21:48:23 2006
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2006 21:48:23 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F3CE84.70404@trueblade.com>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
	<43F3CE84.70404@trueblade.com>
Message-ID: <1140058103.23161.34.camel@legion.lan>

On Wed, 2006-02-15 at 19:59 -0500, Eric Smith wrote:
> Jean-Paul Calderone wrote:
> > On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts 
> > <andrew-twisted at puzzling.org> wrote:
> >> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> >>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> >>> > What you want is not supported.  If it were, Trial would be a lot 
> >>> simpler.
> >>> > There is some pressure to support it, but I think it's 
> >>> low-priority.  (If I
> >>> > understand correctly.)  Perhaps you can just block the reactor by 
> >>> calling
> >>> > into your app rather than vice-versa?

The easiest thing would be for your program to spawn a Twisted worker
process to get the data, send it along stdout in some simplified form,
and then read its output.

> >>> You understand correctly. It is not supported, Trial would be simpler
> >>> and it is never going to be supported.
> >>
> >> Never is a long time :)
> >>
> >> Last time I pestered glyph about this, I got him to agree that it 
> >> should work.

I think that in that particular conversation I followed up the
reactor-restarting comments with "of course, for truly asynchronous
protocols like PB this is a waste of time, since it doesn't even
conceptually work".

> > Now we just need to find someone to implement it for all the reactors :)
> 
> Well, I happen to be motivated just now.  I'm new to twisted, but I'm 
> not new to Python and I'm reasonably familiar with the style twisted 
> uses (I've written lots of IOCP code).

> If anyone could summarize the problem, and if you're serious about it 
> getting fixed, I could look at it.

If you have the time, energy, and motivation to seriously contribute to
Twisted, AND experience with Win32 and IOCP, it would be a pity to waste
it supporting such an esoteric use-case - 99% of the users who ask for
this are just trying to shoot themselves in the foot, and if they manage
to do it successfully, it's more often bugs in Twisted.  As I said, you
can probably satisfy your own use-case with popen() relatively easily.

Unfortunately this is not a simple problem.  It involves auditing every
aspect of the reactor's internal state, including the threadpool, and
validating that its internal state is consistent before terminating
run().  It also means making sure that every buffer is flushed, all
outstanding bytes are read, etc.  Then you have to do that for each
reactor.  You'd also have to add an API that specifically did this kind
of "soft" shutdown; flushing buffers without closing connections,
stopping all threads, and so forth.

However, it would certainly be a great way to learn the ins and outs of
the reactor API.  I don't particularly want the functionality but I
suspect that adding it will flush out some latent bugs in at least one
reactor implementation, so I'm not opposed to seeing it done.

If you would like to work on something else though, we definitely need a
dedicated Windows maintainer ... ;)





From glyph at divmod.com  Wed Feb 15 21:49:47 2006
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2006 21:49:47 -0500
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151701.00385.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com> <43F39FE3.6060002@trueblade.com>
	<200602151614.22869.rudy@goldenhelix.com>
	<200602151701.00385.rudy@goldenhelix.com>
Message-ID: <1140058187.23161.37.camel@legion.lan>

On Wed, 2006-02-15 at 17:01 -0700, Gabe Rudy wrote:

> PyInstaller has hooks for packages with hidden imports, I'm wondering if I 
> need to create something like this so that this will work... but I see no 
> obvious modules to force importing.

I've successfully put Twisted into a py2exe package before, then
"frozen" it using NSIS.  I've not tried with conch, but I don't know
what would cause the problems you're seeing.





From exarkun at divmod.com  Wed Feb 15 22:00:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2006 22:00:10 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F3CE84.70404@trueblade.com>
Message-ID: <20060216030010.6122.417722554.divmod.quotient.133@ohm>

On Wed, 15 Feb 2006 19:59:48 -0500, Eric Smith <eric+twisted at trueblade.com> wrote:
>Jean-Paul Calderone wrote:
>>On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts <andrew- 
>>twisted at puzzling.org> wrote:
>>>On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>>>>On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>>>> > What you want is not supported.  If it were, Trial would be a lot 
>>>>simpler.
>>>> > There is some pressure to support it, but I think it's low-priority. 
>>>>(If I
>>>> > understand correctly.)  Perhaps you can just block the reactor by 
>>>>calling
>>>> > into your app rather than vice-versa?
>>>> >
>>>>
>>>>You understand correctly. It is not supported, Trial would be simpler
>>>>and it is never going to be supported.
>>>
>>>Never is a long time :)
>>>
>>>Last time I pestered glyph about this, I got him to agree that it should 
>>>work.
>>
>>Now we just need to find someone to implement it for all the reactors :)
>
>Well, I happen to be motivated just now.  I'm new to twisted, but I'm not 
>new to Python and I'm reasonably familiar with the style twisted uses (I've 
>written lots of IOCP code).
>
>If anyone could summarize the problem, and if you're serious about it 
>getting fixed, I could look at it.

There's no single particular problem preventing this from working.  More, 
the feature is generally not considered when making changes to an existing 
reactor or implementing a new one.  Startup and shutdown involve certain 
internal and external state changes which the existing reactors generally 
aren't care to allow to happen repeatedly.  For example, ReactorBase's 
__init__ method sets up two event triggers to run during shutdown.  One of 
these disconnects all connected sockets; the other actually causes the run() 
method to return.  Since system event triggers are removed as they are run, 
neither of these things happens the 2nd time a reactor deriving from 
ReactorBase shuts down.

Since most reactors in Twisted subclass ReactorBase, fixing problems in it 
will probably fix many of the reactors, although subclasses may introduce 
their own problems as well.  At least the IOCP reactor does not subclass it, 
though, so it will need to addressed separately.  Also, some testing strategy 
needs to be developed to ensure assumptions of a single run/stop pair don't 
creep back into the code.

Documentation and interfaces will also need to be updated, of course.

Jean-Paul



From eric+twisted at trueblade.com  Wed Feb 15 22:25:12 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 22:25:12 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <1140058103.23161.34.camel@legion.lan>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>	<43F3CE84.70404@trueblade.com>
	<1140058103.23161.34.camel@legion.lan>
Message-ID: <43F3F098.7060909@trueblade.com>

Glyph Lefkowitz wrote:

 >> If anyone could summarize the problem, and if you're serious about 
it getting fixed, I could look at it.

 > Unfortunately this is not a simple problem.  It involves auditing every
 > aspect of the reactor's internal state, including the threadpool, and
 > validating that its internal state is consistent before terminating
 > run().  It also means making sure that every buffer is flushed, all
 > outstanding bytes are read, etc.  Then you have to do that for each
 > reactor.  You'd also have to add an API that specifically did this kind
 > of "soft" shutdown; flushing buffers without closing connections,
 > stopping all threads, and so forth.

Mission accomplished!  You've scared me away from even wanting to do 
this!  Actually I think I'll poke around a bit.  I did spend all day 
reading the posix reactor code, and your comments here are helpful.

I think you're correct about using popen(), since I really just want 
this to work in the near future.  The data is simple enough that I think 
I can just print repr() of the data and eval it on the reader side (I 
know, I know ...).

But another thought I had was a non-twisted python implementation of PB, 
blocking on the socket calls since I'm just doing request-response.  But 
I'm guessing that would be non-trivial as well.

 > However, it would certainly be a great way to learn the ins and outs of
 > the reactor API.  I don't particularly want the functionality but I
 > suspect that adding it will flush out some latent bugs in at least one
 > reactor implementation, so I'm not opposed to seeing it done.
 >
 > If you would like to work on something else though, we definitely need a
 > dedicated Windows maintainer ... ;)

Well, I've written Win32 and IOCP, but I currently focus on Linux. Given 
that I don't work much with Windows any more (at least not when I can 
avoid it), I don't think I'd be a good Windows maintainer, sorry. But 
I'm willing to help where I can.

Thanks for the comments.  Are you going to PyCon?  Maybe I'll bump into 
you there.  I enjoyed your talks in years past.

Eric.




From rabs at dimension-virtual.com  Thu Feb 16 01:59:09 2006
From: rabs at dimension-virtual.com (=?utf-8?q?Ra=C3=BAl_Alexis_Betancor_Santana?=)
Date: Thu, 16 Feb 2006 06:59:09 +0000
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <1140058187.23161.37.camel@legion.lan>
References: <43F379E8.2070008@trueblade.com>
	<200602151701.00385.rudy@goldenhelix.com>
	<1140058187.23161.37.camel@legion.lan>
Message-ID: <200602160659.10061.rabs@dimension-virtual.com>

El Jueves, 16 de Febrero de 2006 02:49, Glyph Lefkowitz escribi?:
> On Wed, 2006-02-15 at 17:01 -0700, Gabe Rudy wrote:
> > PyInstaller has hooks for packages with hidden imports, I'm wondering if
> > I need to create something like this so that this will work... but I see
> > no obvious modules to force importing.
>
> I've successfully put Twisted into a py2exe package before, then
> "frozen" it using NSIS.  I've not tried with conch, but I don't know
> what would cause the problems you're seeing.

Could you send to me or to the list the setup.py and the nsis script you 
used?, I've trying several times to do the same with no success

-- 
Saludos.

Ra?l Alexis Betancor Santana
Director Gerente
Dimensi?n Virtual S.L.



From ralf at brainbot.com  Thu Feb 16 02:53:39 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Thu, 16 Feb 2006 08:53:39 +0100
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151701.00385.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com>
	<43F39FE3.6060002@trueblade.com>	<200602151614.22869.rudy@goldenhelix.com>
	<200602151701.00385.rudy@goldenhelix.com>
Message-ID: <43F42F83.7010803@brainbot.com>

Gabe Rudy wrote:
> On Wednesday 15 February 2006 4:14 pm, Gabe Rudy wrote:
>> Anybody have any luck using cx_Freeze or PyInstaller to freeze a program
>> with a threaded reactor?
> 
> I checked into it a bit more and I'm not sure threads has anything to do with 
> it.
> 
> sshsimpleclient.py found at
> http://twistedmatrix.com/projects/conch/documentation/examples/
> also seems to have problems when frozen. Specifically defer.succeed(1) from 
> verfiyHostKey does not seem  to work as the log shows
> 2006/02/15 16:54 MST [SimpleTransport,client] Disconnecting with error, code 9
>         reason: bad host key
> 

running python -v sshsimpleclient.py results in the following output:
2006/02/16 08:49 CET [SimpleTransport,client] kex alg, key alg: 
diffie-hellman-group-exchange-sha1 ssh-rsa
2006/02/16 08:49 CET [SimpleTransport,client] client->server: aes256-ctr 
hmac-sha1 none
2006/02/16 08:49 CET [SimpleTransport,client] server->client: aes256-ctr 
hmac-sha1 none
2006/02/16 08:49 CET [SimpleTransport,client] host key fingerprint: 
b9:fb:8d:ab:3e:3b:be:d2:53:72:fd:d0:f9:15:0c:91
2006/02/16 08:49 CET [SimpleTransport,client] 
dlopen("/usr/lib/python2.4/site-packages/Crypto/Cipher/AES.so", 2);
2006/02/16 08:49 CET [SimpleTransport,client] import Crypto.Cipher.AES # 
dynamically loaded from 
/usr/lib/python2.4/site-packages/Crypto/Cipher/AES.so
2006/02/16 08:49 CET [SimpleTransport,client] starting service ssh-userauth
2006/02/16 08:49 CET [SSHService ssh-userauth on SimpleTransport,client] 
can continue with: ['publickey', 'password']

Adding a dummy function for dependency tracking solved the problem for me:

def __dependencies_for_freezing():
     import Crypto.Cipher.AES

I guess that you may have to add even more ciphers depending on
your ssh config.

- Ralf




From rudy at goldenhelix.com  Thu Feb 16 13:55:03 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 16 Feb 2006 11:55:03 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <43F42F83.7010803@brainbot.com>
References: <43F379E8.2070008@trueblade.com>
	<200602151701.00385.rudy@goldenhelix.com>
	<43F42F83.7010803@brainbot.com>
Message-ID: <200602161155.04060.rudy@goldenhelix.com>

> Adding a dummy function for dependency tracking solved the problem for me:
>
> def __dependencies_for_freezing():
>      import Crypto.Cipher.AES
>
> I guess that you may have to add even more ciphers depending on
> your ssh config.
>
> - Ralf
>

Sweet, that was it. For future reference, if you want to use conch ssh in a 
PyInstaller frozen program, you need to add a file 
$PyInstallerHome/hooks/hook-twisted.conch.ssh.py that has the line:

hiddenimports = [     "Crypto.Cipher.AES"     ]

or with cx_Freeze add --include-modules=Crypto.Crypto.AES to your FreezePython 
command.

Like Ralf said, you might need more ciphers based on your ssh config.

Thanks guys (Ralf in particular), I don't know if I ever would have figured 
that one out, and using python -v is a neat trick to remember for similarly 
weird situations.

--gabe



From iap_yeh at thecus.com  Sun Feb 19 03:39:23 2006
From: iap_yeh at thecus.com (Iap, Singuan)
Date: Sun, 19 Feb 2006 16:39:23 +0800
Subject: [Twisted-Python] v2006-2-12 ImportError: IAddress 
In-Reply-To: <200602161155.04060.rudy@goldenhelix.com>
Message-ID: <200602190841.k1J8fBOh015663@mail.thecus.com>

Hi,
I have no idea if this is a bug?
Just download 2006-2-12 and my existed script complains the ImportError of
IAddress.
(twisted.internet.interfaces)

Any hints?

Iap




From iap_yeh at thecus.com  Sun Feb 19 03:53:23 2006
From: iap_yeh at thecus.com (Iap, Singuan)
Date: Sun, 19 Feb 2006 16:53:23 +0800
Subject: [Twisted-Python] RE: v2006-2-12 ImportError: IAddress 
Message-ID: <200602190855.k1J8tBMc015695@mail.thecus.com>

 
OK, I answer myself.
I should use "from twisted.protocols import http" instead of "from
twisted.internet import http".
Excuse me for the bothering.

Iap

-----Original Message-----
From: Iap, Singuan [mailto:iap_yeh at thecus.com] 
Sent: Sunday, February 19, 2006 4:39 PM
To: 'Twisted general discussion'
Subject: v2006-2-12 ImportError: IAddress 

Hi,
I have no idea if this is a bug?
Just download 2006-2-12 and my existed script complains the ImportError of
IAddress.
(twisted.internet.interfaces)

Any hints?

Iap




From luc.stepniewski at adelux.fr  Mon Feb 20 09:02:00 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Mon, 20 Feb 2006 15:02:00 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
Message-ID: <200602201502.01517.luc.stepniewski@adelux.fr>

While using pb.PBClientFactory() with reactor.connectTCP(), I noticed that the 
specified timeout parameter is only for testing if there is no connection, 
not if the remote PB replies correctly.
I noticed this when one of my remote PB instance was stuck. It was accepting 
requests, but did not answer anything at all. So the connection is 
established, and stays indefinitely!

You can verify this by yourself by just putting netcat ("nc -vv -l -p 9999" 
for example) instead of a PB instance.
The PB on the other side will connect, and then, nothing else. No timeout that 
netcat didn't reply (not even correctly).

I know I could add a timer (callLater) that would wake up and kill the 
connection after some time (because I know one transaction will not exceed 
some precise time), but it's really really trashy, and one not always knows 
what will be the duration of the transaction.

Is there really no other alternative to detect the correct connection to 
another PB instance?

I attached an example code that would show this behaviour.

Thanks,
Luc
-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.py
Type: application/x-python
Size: 1737 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20060220/85ad57b0/attachment.bin 

From itamar at itamarst.org  Mon Feb 20 23:51:57 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Feb 2006 23:51:57 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15988 - Fix silly bug that
	made twscgi not work at all.
In-Reply-To: <E1FBL16-0007xo-00@wolfwood>
References: <E1FBL16-0007xo-00@wolfwood>
Message-ID: <1140497517.8622.0.camel@localhost.localdomain>

On Mon, 2006-02-20 at 17:04 -0700, James Knight wrote:
> Author: foom
> Date: Mon Feb 20 17:04:31 2006
> New Revision: 15988
> 
> Modified:
>    trunk/twisted/web2/twscgi.py
> Log:
> Fix silly bug that made twscgi not work at all.

Did the tests catch this?




From itamar at itamarst.org  Tue Feb 21 11:06:03 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Feb 2006 11:06:03 -0500
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602201502.01517.luc.stepniewski@adelux.fr>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
Message-ID: <1140537963.10335.1.camel@localhost.localdomain>

On Mon, 2006-02-20 at 15:02 +0100, Luc Stepniewski wrote:

> I know I could add a timer (callLater) that would wake up and kill the 
> connection after some time (because I know one transaction will not exceed 
> some precise time), but it's really really trashy, and one not always knows 
> what will be the duration of the transaction.
> 
> Is there really no other alternative to detect the correct connection to 
> another PB instance?

The typical way to do this is have some sort of remote_ping method that
returns immediately on the server (or on the client) that the client (or
the server) calls every once in a while, with a timeout for the
response. If that times out the problem is likely the connection, not
the server being slow, in which case you can close the connection.




From luc.stepniewski at adelux.fr  Tue Feb 21 12:40:39 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Tue, 21 Feb 2006 18:40:39 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <1140537963.10335.1.camel@localhost.localdomain>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140537963.10335.1.camel@localhost.localdomain>
Message-ID: <200602211840.39236.luc.stepniewski@adelux.fr>

On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> The typical way to do this is have some sort of remote_ping method that
> returns immediately on the server (or on the client) that the client (or
> the server) calls every once in a while, with a timeout for the
> response. If that times out the problem is likely the connection, not
> the server being slow, in which case you can close the connection.

Yes, it's the same thing as making a pseudo "timeout" with a callLater. But in 
my case, the problem is even more primitive, in that I just need to connect, 
send data (eventually get a response), and then disconnect.
But if the remote PB server doesn't reply (the simplest reason would be that 
it's a program that accepts sockets but does not reply *anything*, like a 
listening netcat) then I'm stuck. Your answer will not help in that case (or 
maybe I misunderstood, as always, your explanation).

Luc
-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A



From itamar at itamarst.org  Tue Feb 21 12:58:17 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Feb 2006 12:58:17 -0500
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602211840.39236.luc.stepniewski@adelux.fr>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140537963.10335.1.camel@localhost.localdomain>
	<200602211840.39236.luc.stepniewski@adelux.fr>
Message-ID: <1140544697.10335.20.camel@localhost.localdomain>

On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > The typical way to do this is have some sort of remote_ping method that
> > returns immediately on the server (or on the client) that the client (or
> > the server) calls every once in a while, with a timeout for the
> > response. If that times out the problem is likely the connection, not
> > the server being slow, in which case you can close the connection.
> 
> Yes, it's the same thing as making a pseudo "timeout" with a callLater. 

Not exactly. What I'm suggesting is a different command that you send in
addition to your regular operations. This extra command, "ping", is
expected to return a result quickly; if it doesn't you know something is
wrong. That way even if your regular commands take a really long time
for the server to process you can still tell if the server itself (or
your connection to it) is ok. Every 10 seconds, say, you ping the
server; if you don't get a response back in 5 seconds it's probably
down.




From uwe at oss4u.com  Tue Feb 21 22:12:27 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Tue, 21 Feb 2006 19:12:27 -0800
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <1140544697.10335.20.camel@localhost.localdomain>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<200602211840.39236.luc.stepniewski@adelux.fr>
	<1140544697.10335.20.camel@localhost.localdomain>
Message-ID: <200602211912.27692.uwe@oss4u.com>

On Tuesday 21 February 2006 09:58, Itamar Shtull-Trauring wrote:
> On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> > On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > > The typical way to do this is have some sort of remote_ping method that
> > > returns immediately on the server (or on the client) that the client
> > > (or the server) calls every once in a while, with a timeout for the
> > > response. If that times out the problem is likely the connection, not
> > > the server being slow, in which case you can close the connection.
> >
> > Yes, it's the same thing as making a pseudo "timeout" with a callLater.
>
> Not exactly. What I'm suggesting is a different command that you send in
> addition to your regular operations. This extra command, "ping", is
> expected to return a result quickly; if it doesn't you know something is
> wrong. That way even if your regular commands take a really long time
> for the server to process you can still tell if the server itself (or
> your connection to it) is ok. Every 10 seconds, say, you ping the
> server; if you don't get a response back in 5 seconds it's probably
> down.


That's actually what I'm doing with my application - although for a different 
reason. I send a "ping" that immediate is answered by a "pong" - if I don't 
get the pong withing 30 seconds I shut the connection down.
My reason is a missconfigured firewall at one of my clients which drops 
forwarding after about 90 seconds idle time. Since I couldn't get their 
(incompetent) network admin to fix it I send a ping every 30 sec, so the 
firewall thinks the connection is active and doesn't drop it.

Luc: if you need the code for that (although it's very simple), drop me a 
line.

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From foom at fuhm.net  Wed Feb 22 01:00:13 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 22 Feb 2006 00:00:13 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1FBn2r-0003hv-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-15 06:00:02.450000:
 Bugs opened: 14   Bugs closed: 8   Total open bugs: 562 (+6)
  Urgent: 4 (+2)
  Bug: 269 (+0)
  Feature: 192 (+2)
  Wish: 97 (+2)

New / Reopened Bugs
______________________
                    ==== Urgent ====
quick command-line way to run web2 server  (yesterday)
       http://twistedmatrix.com/bugs/issue1497 opened by glyph

Memory leak using example web server?  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1494 opened by chileverde

[WEB] Memory leak using minimal web server?  (2 days ago)
       http://twistedmatrix.com/bugs/issue1495 opened by chileverde

                    ==== Bug ====
testCyclicAliases in t.mail.test_mail is weird  (14 months ago)
CLOSED http://twistedmatrix.com/bugs/issue810 opened by marienz

[WEB2] doStart missing, reactor.listenTCP.  debian unstable twisted,  (yesterday)
       http://twistedmatrix.com/bugs/issue1496 opened by illume

[WEB] static File web module doesn't support byte ranges  (3 days ago)
       http://twistedmatrix.com/bugs/issue1493 opened by jmg

[WORDS] words error ..  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1491 opened by jeeterm

[WEB] twisted.web.error.ErrorPage does not set Content-Type  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1492 opened by exarkun

                    ==== Feature ====
Make twistd a library  (8 hours ago)
       http://twistedmatrix.com/bugs/issue1501 opened by radix

[CORE] Pluggable application loaders for twistd  (5 days ago)
       http://twistedmatrix.com/bugs/issue1490 opened by itamarst

                    ==== Wish ====
[CORE, WIN32] iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1500 opened by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1499 opened by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1498 opened by ghazel

[DOCUMENTATION] Shuldn't an interface go with the protocol ?  (6 days ago)
       http://twistedmatrix.com/bugs/issue1489 opened by pupeno

Bugs Closed
______________________
                    ==== Urgent ====
Memory leak using example web server?  (2 days ago)
       http://twistedmatrix.com/bugs/issue1494 opened by chileverde, closed by spiv

                    ==== Bug ====
testCyclicAliases in t.mail.test_mail is weird  (14 months ago)
       http://twistedmatrix.com/bugs/issue810 opened by marienz, closed by exarkun

[WORDS] words error ..  (5 days ago)
       http://twistedmatrix.com/bugs/issue1491 opened by jeeterm, closed by ralphm

[WEB] twisted.web.error.ErrorPage does not set Content-Type  (4 days ago)
       http://twistedmatrix.com/bugs/issue1492 opened by exarkun, closed by exarkun

[CORE] t.i.stdin is horribly broken.  (18 months ago)
       http://twistedmatrix.com/bugs/issue680 opened by jknight, closed by jknight

Make the WebSite repository work again  (1 week ago)
       http://twistedmatrix.com/bugs/issue1480 opened by radix, closed by exarkun

                    ==== Wish ====
iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1499 opened by ghazel, closed by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1498 opened by ghazel, closed by ghazel




From uwe at oss4u.com  Fri Feb 24 01:46:03 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Thu, 23 Feb 2006 22:46:03 -0800
Subject: [Twisted-Python] Writing a wrapper from asynchronous to synchronous
Message-ID: <200602232246.03126.uwe@oss4u.com>


Hi everyone,

I know someone is going to say it's a flaw in the design - and I partially 
agree with that. However I have an application that allows a fairly 
unexperienced programmer to add modules. What I need to do is to write a 
wrapper that hides the asynchronous nature of pb (well, Twisted that is, but 
I'm only using pb), simply because most programmers at the potential 
customers don't have any knowledge about asynchonous programming.
The API for the modules should hide all communications to the server side. 
So my question would be, is there a way to write some kind of wrapper that 
will make the caller wait for the deferred callback to be invoked?
I have one specific method that just has a flag which is set to true in the 
deferred callaback which then in turn triggers the action required. So 
basically it's a recursive method that get's called via a reactor.callLater 
and if the flag is true calls whatever is needed. The point is to suspend 
execution of a certain method until some prerequisite initializations are 
finished.  I'd like to do that in an as convenient way as possible.
So it's like:

1) module calls some method #1
2) #1 depends on certain initializations to finish
3) the call to #1 doesn't return unless step 2) is done

any smart idea's how to wrap that up?
Any hints are highly appreciated

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From bv at bnl.gov  Fri Feb 24 11:20:52 2006
From: bv at bnl.gov (Brett Viren)
Date: Fri, 24 Feb 2006 11:20:52 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com> (Uwe C. Schroeder's message
	of "Thu, 23 Feb 2006 22:46:03 -0800")
References: <200602232246.03126.uwe@oss4u.com>
Message-ID: <ir4y800ybh7.fsf@minos.phy.bnl.gov>

"Uwe C. Schroeder" <uwe at oss4u.com> writes:

> 1) module calls some method #1
> 2) #1 depends on certain initializations to finish
> 3) the call to #1 doesn't return unless step 2) is done

I've not yet learned PB, so maybe this isn't a good fit but what about
having modules run in threads and use Queues for them to send and
receive messages (method calls / return values) to/from the framework?

This way they won't block the framework but will appear to run
synchronously.  You could hide the Queue manipulation in a thin API
that shadows the API of the framework.

The timeline would be:

 Client calls wrapper function

 Function builds message, sends it to nonblocking framework queue and
 then listens on blocking reply queue.

 Framework checks input queue in nonblocking way.  When it recieves a
 message it calls the corresponding asynchronous method and attaches
 code to the callback that will send the reply down the reply queue.

 Wrapper function gets reply, unpacks return and returns it to
 synchronous caller.

I've used a similar pattern for doing the opposite of sending commands
from async framework to syncronous client code.


-Brett.




From glyph at divmod.com  Fri Feb 24 11:53:17 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Feb 2006 11:53:17 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com>
Message-ID: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>



On Thu, 23 Feb 2006 22:46:03 -0800, "Uwe C. Schroeder" <uwe at oss4u.com> wrote:
>
>Hi everyone,
>
>I know someone is going to say it's a flaw in the design 

I would hate to disappoint you.

"It's a flaw in the design."

>- and I partially
>agree with that. However I have an application that allows a fairly
>unexperienced programmer to add modules. What I need to do is to write a
>wrapper that hides the asynchronous nature of pb 

No, you don't.  What you need to do is to edcucate your target developer market about asynchronous programming.  It's not that hard.  The TurboGears "20 minute wiki" tutorial even covers Deferreds, without really bothering to explain how they work.  If average JavaScript monkeys can figure this out, I think you're not giving your target developers enough credit.

You cannot "hide the asynchronous nature of PB".  The protocol is fully asynchronous even if you forget all of Twisted and just look at the byte-level spec.

Your choice is not "synchronous or asynchronous interface".  It is "educate novice developers about Deferreds" or "educate novice developers about multithreaded concurrency, reactor implementation details, livelock, deadlock, and spurious reentrancy".  That's assuming that you fix any outstanding reactor bugs related to this issue, fully test the related code paths, AND there are no bugs in your wrapper layer.  Trust me: there will be bugs in your wrapper layer.  There are maybe 20 people in the world who could make Twisted do sync/async mapping *really* correctly, and all of them understand the problem too well to bother to try.



From ldanielburr at mac.com  Fri Feb 24 13:54:34 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 24 Feb 2006 12:54:34 -0600
Subject: [Twisted-Python] Writing a wrapper from asynchronous
	to	synchronous
In-Reply-To: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>
References: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>
Message-ID: <op.s5hqs8ag3oj628@zetsuei>

On Fri, 24 Feb 2006 10:53:17 -0600, <glyph at divmod.com> wrote:

>
>
> On Thu, 23 Feb 2006 22:46:03 -0800, "Uwe C. Schroeder" <uwe at oss4u.com>  
> wrote:
>>
>> Hi everyone,
>>
>> I know someone is going to say it's a flaw in the design
>
> I would hate to disappoint you.
>
> "It's a flaw in the design."
>
>> - and I partially
>> agree with that. However I have an application that allows a fairly
>> unexperienced programmer to add modules. What I need to do is to write a
>> wrapper that hides the asynchronous nature of pb
>

[SNIP Glyph explains why this is not a good thing, or even possible]

I'm always fascinated with these kinds of issues, because they come up  
fairly often, and are so illustrative of human nature.  The original  
poster feels that he needs to do X, and is most likely not interested in  
anyone's opinion of the actual desirability/validity of so doing.  And  
yet, what response does his question receive?  A detailed explanation of  
why he should not consider doing X, even though it is clear that X is what  
he feels he must do.

Of course, I agree that X is definitely not something that the original  
poster should contemplate doing; it is just a bad idea, period, and will  
likely result in frustration and disappointment.  However, I think it is  
important to point out that the original poster is most likely pursuing  
this line of inquiry because the possibility of educating his target  
audience is slim, or none.  People are much harder to deal with than  
machines, especially when it comes to learning new things.  Forcing  
twisted to behave synchronously doubtless sounds easier than teaching an  
inexperienced coder how to write twisted-friendly code.

My pointless musings aside, I do have a concrete suggestion for the  
original poster: Create an HTTP server that proxies the pb calls on behalf  
of your programmers.  Let them just post messages to that server, using  
whatever synchronous HTTP client (urllib, etc) they desire.  Not  
technically elegant, no, but far easier than mangling twisted, and far  
easier than trying to teach your programmers how to write async code.   
Note that the server doesn't have to be HTTP, but most programmers have  
some passing acquaintance with it, and client libraries are ubiquitous, so  
it is an easy option.

Hope this helps,

L. Daniel Burr



From rudy at goldenhelix.com  Fri Feb 24 14:33:33 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 24 Feb 2006 12:33:33 -0700
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com>
References: <200602232246.03126.uwe@oss4u.com>
Message-ID: <200602241233.33616.rudy@goldenhelix.com>

On Thursday 23 February 2006 11:46 pm, Uwe C. Schroeder wrote:
> Hi everyone,
>
> I know someone is going to say it's a flaw in the design - and I partially
> agree with that. However I have an application that allows a fairly
> unexperienced programmer to add modules. What I need to do is to write a
> wrapper that hides the asynchronous nature of pb 

Lol, when I read that I wondered how long it will it take before someone _did_ 
respond with "It's a flaw in the design"

I actually was trying to do this _exact_ thing (making pb appear synchronous) 
and met with similar remarks to my post for help. But even though I did 
manage to write a hack using a interleaved threadedselectreactor, 
threading.Event and a forced event processing while loop, the result was 
mostly functional but ugly and a pain to debug.

It was a flaw in my design.

And after some serious reworking and acceptance of a more asynchronous 
methodology, my program is the better for it. Way better.

In short, I would recommend _not_ forcing/hacking twisted to be something its 
not. Use L. Daniel's suggestion, use a synchronous network system like 
xmlrpclib, or rethink the meta problem your are trying to solve.

--gabe



From alengarbage at yahoo.com  Fri Feb 24 14:59:10 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 24 Feb 2006 11:59:10 -0800 (PST)
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <E1FChEa-0005SX-02@pyramid.twistedmatrix.com>
Message-ID: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>

I'm going to refrain from passing judgement, and just
ask, isn't this what deferredResult() is all about
(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?

  Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From uwe at oss4u.com  Fri Feb 24 15:17:08 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 24 Feb 2006 12:17:08 -0800
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602241233.33616.rudy@goldenhelix.com>
References: <200602232246.03126.uwe@oss4u.com>
	<200602241233.33616.rudy@goldenhelix.com>
Message-ID: <200602241217.08392.uwe@oss4u.com>

On Friday 24 February 2006 11:33, Gabe Rudy wrote:
> On Thursday 23 February 2006 11:46 pm, Uwe C. Schroeder wrote:
> > Hi everyone,
> >
> > I know someone is going to say it's a flaw in the design - and I
> > partially agree with that. However I have an application that allows a
> > fairly unexperienced programmer to add modules. What I need to do is to
> > write a wrapper that hides the asynchronous nature of pb
>
> Lol, when I read that I wondered how long it will it take before someone
> _did_ respond with "It's a flaw in the design"

Me too actually :-)

> I actually was trying to do this _exact_ thing (making pb appear
> synchronous) and met with similar remarks to my post for help. But even
> though I did manage to write a hack using a interleaved
> threadedselectreactor,
> threading.Event and a forced event processing while loop, the result was
> mostly functional but ugly and a pain to debug.
>
> It was a flaw in my design.
>
> And after some serious reworking and acceptance of a more asynchronous
> methodology, my program is the better for it. Way better.
>
> In short, I would recommend _not_ forcing/hacking twisted to be something
> its not. Use L. Daniel's suggestion, use a synchronous network system like
> xmlrpclib, or rethink the meta problem your are trying to solve.

In the end it's not a flaw in the design. The software package with close to 
1.5 million lines of code runs just fine and did so for many years. 
The problem is that customers hire some homegrown MS Access programmers for 
whom anything remotely like network programming is a black box  and expect 
them to be able to write a module for my system. It's pretty hard to explain 
deferred's to someone who thinks a socket is the power outlet where he plugs 
his vacuum in and a port is the thing where the ships go to. Guess who gets 
the blame when their employees can't handle it. Thus the idea to make that 
API a bit less "deferred".
Yeah - I should tell them "hire decent programmers who have a clue"...
Well, was worth a try - someone might have come up with something...

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From exarkun at divmod.com  Fri Feb 24 21:35:04 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Feb 2006 21:35:04 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>
Message-ID: <20060225023504.6122.570776444.divmod.quotient.7128@ohm>

On Fri, 24 Feb 2006 11:59:10 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>I'm going to refrain from passing judgement, and just
>ask, isn't this what deferredResult() is all about
>(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?
>
>  Lenny

Also not passing any judgement, deferredResult is deprecated and will be removed in a future version of Twisted.  Also, it sucks a lot.  Ok maybe there's a little judgement.

Jean-Paul



From jml at mumak.net  Sat Feb 25 07:33:47 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 25 Feb 2006 23:33:47 +1100
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <20060225023504.6122.570776444.divmod.quotient.7128@ohm>
References: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>
	<20060225023504.6122.570776444.divmod.quotient.7128@ohm>
Message-ID: <d06a5cd30602250433w2bbcb603x1d379567c69dc6b7@mail.gmail.com>

On 2/25/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 24 Feb 2006 11:59:10 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
> >I'm going to refrain from passing judgement, and just
> >ask, isn't this what deferredResult() is all about
> >(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?
> >
> >  Lenny
>
> Also not passing any judgement, deferredResult is deprecated and will be removed in a future version of Twisted.  Also, it sucks a lot.  Ok maybe there's a little judgement.

As soon as the 2.2 released is announced and the existing unit tests
stop using it.
Package maintainers, fix your damn tests.

jml



From glyph at divmod.com  Sat Feb 25 15:50:12 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Feb 2006 15:50:12 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <d06a5cd30602250433w2bbcb603x1d379567c69dc6b7@mail.gmail.com>
Message-ID: <20060225205012.6122.1174150692.divmod.quotient.7725@ohm>

On Sat, 25 Feb 2006 23:33:47 +1100, Jonathan Lange <jml at mumak.net> wrote:

>Package maintainers, fix your damn tests.

FWIW, http://divmod.org/trac/changeset/4918



From jml at mumak.net  Mon Feb 27 01:48:38 2006
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Feb 2006 17:48:38 +1100
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
Message-ID: <d06a5cd30602262248x177f9f66q1b327b2168f05982@mail.gmail.com>

Hi,

loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
makes them broken.

It appears that they were always meant to block. Why is this? Can we
get rid of them?

jml



From thys at quaint.co.za  Mon Feb 27 05:20:41 2006
From: thys at quaint.co.za (Thys Meintjes)
Date: Mon, 27 Feb 2006 12:20:41 +0200
Subject: [Twisted-Python] twisted TCP frame size
Message-ID: <1141035641.8811.51.camel@localhost.localdomain>

Hi,

I've recently written a threaded client server application using a
custom message protocol. Each message is 49 bytes long and needs to
arrive at the client as soon as possible. 

In the current app I send() each message as soon as all 49 bytes are
available, I also recv(49) bytes at the client side (buffering as
necessary). The threaded application thus always reads 49 bytes from the
network buffers as soon as it is possible to do so. This application
consumes about 9% cpu time at full throttle.

Because I already use the twisted.enterprise adbapi on the client side I
decided to get rid of all the client threads and use twisted for the TCP
stuff as well. I've written a small test script to determine basic loads
and performance:

-----------------
#! /usr/bin/env python

import psyco
psyco.full()

import array
import sys

from twisted.internet.protocol import Protocol,ReconnectingClientFactory
from twisted.internet import reactor

f = open("wakka", "w")

class TRAUReceiver(Protocol):

    def dataReceived(self, data):
        print len(data)
	f.write(data)
	# f.flush()        

    def connectionMade(self):
        """ * connection were made, send signon"""

        print "Signing on...",        
        signon = array.array('B', [ord('T'), 1 ,255, 1, 255]) 
        self.transport.write(signon.tostring())
        print "Done"


class TRAUClientFactory(ReconnectingClientFactory):

    def startedConnecting(self, connector):
        print 'Started to connect.'

    def buildProtocol(self, addr):
        print 'Connected.'
        print 'Resetting reconnection delay'
        self.resetDelay()
        return TRAUReceiver()

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection.  Reason:', reason
        
        ReconnectingClientFactory.clientConnectionLost(self,
                                                       connector, reason)

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self,
                                                         connector, reason)

reactor.connectTCP('localhost', 55555, TRAUClientFactory())
reactor.run()
------------------

Connecting the above to the server yielded somewhat surprising results:

The length of the dataReceived() data between runs varies between 49 and
multiples of 49 bytes. I understand this (I think) as the ethernet
packet length sweet spot is about 1.3kB and Protocol is propably
optimized arround that. This does imply that I need a more elaborate
frame caching scheme on the client side than the one I currently have,
as another socket connection signals if messages from the current
connection must be stored or discarded. 

Surprisingly, the script data length is reported as continuous 49 bytes
at leas 4/10 times it's run, on other runs the print len(data) line
looks something like this:

49
12691
49
7938
49

Each second dataReceived() callback is 49 bytes, the rest multiples of
49.

When the script reports all frames as 49;  cpu consumption is ~33%, when
staggered it's ~4%. The dataReceived() call seems overly expensive when
compared with the 'raw' synchronous recv().

Paradoxically, padding the 49 byte message with 1000 pad bytes improves
the script's performance 8 times; due to the decrease in  dataReceived()
calls probably.

So, 
1) is there a way to force dataReceived() to return when a certain data
length has been received ? 
2) Why is dataReceived() so expensive (if it is) ?
3) Is Protocol the correct tree or are there other ways to handle small
time sensitive messages in twisted. 

Apologies for the longish post.

Regards
Thys





From exarkun at divmod.com  Mon Feb 27 08:56:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2006 08:56:44 -0500
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
In-Reply-To: <d06a5cd30602262248x177f9f66q1b327b2168f05982@mail.gmail.com>
Message-ID: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>

On Mon, 27 Feb 2006 17:48:38 +1100, Jonathan Lange <jml at mumak.net> wrote:
>Hi,
>
>loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
>makes them broken.

They were not always based on these two functions.  Someone changed them to work this way after spinWhile and spinUntil were added to trial.

>
>It appears that they were always meant to block. Why is this? Can we
>get rid of them?

They should be deprecated in favor of an API which returns a Deferred.

Jean-Paul



From foom at fuhm.net  Mon Feb 27 10:09:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Feb 2006 10:09:41 -0500
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
In-Reply-To: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>
References: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>
Message-ID: <EF90BAA4-0932-44C7-9AF1-EB95B33BB6A1@fuhm.net>


On Feb 27, 2006, at 8:56 AM, Jean-Paul Calderone wrote:

> On Mon, 27 Feb 2006 17:48:38 +1100, Jonathan Lange <jml at mumak.net>  
> wrote:
>> Hi,
>>
>> loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
>> makes them broken.
>
> They were not always based on these two functions.  Someone changed  
> them to work this way after spinWhile and spinUntil were added to  
> trial.
>
>>
>> It appears that they were always meant to block. Why is this? Can we
>> get rid of them?
>
> They should be deprecated in favor of an API which returns a Deferred.

They don't belong in twisted.protocols at all, as they a) aren't  
protocols, and b) are only for writing test cases. Perhaps somewhere  
under twisted.trial would be more appropriate.

James



From p.mayers at imperial.ac.uk  Mon Feb 27 11:44:18 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 27 Feb 2006 16:44:18 +0000
Subject: [Twisted-Python] twisted TCP frame size
In-Reply-To: <1141035641.8811.51.camel@localhost.localdomain>
References: <1141035641.8811.51.camel@localhost.localdomain>
Message-ID: <44032C62.7090904@imperial.ac.uk>

Thys Meintjes wrote:
> 1) is there a way to force dataReceived() to return when a certain data
> length has been received ? 

dataReceived() is called via doRead() on the file descriptor, which is 
called via a select([fd,], [], []) event in the default reactor.

If you are doing something (executing code) and a TCP segment comes in, 
then another, then another, *then* you exit your code and the reactor 
falls back to select(), it'll return with the fd and doRead() will be 
called, and you'll get everything from the socket - 3 frames worth.

The correct question is, given your test script has a very small 
dataReceived method that returns quickly (I presume), why isn't the 
reactor "beating" the server and getting 49 bytes every time?

...to which I don't have a good answer. Which version of Twisted are you 
running?

> 2) Why is dataReceived() so expensive (if it is) ?

Between select() returning and dataReceived() being called, the reactor 
does lots of stuff related to running callLater's and stuff. I've found 
that's all quite expensive in earlier versions of Twisted, but it 
doesn't look like you use any of that, so I can't imagine that's it.

> 3) Is Protocol the correct tree or are there other ways to handle small
> time sensitive messages in twisted. 

Is there a reason you can't use UDP?

> 
> Apologies for the longish post.
> 
> Regards
> Thys
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From moof at metamoof.net  Mon Feb 27 12:41:27 2006
From: moof at metamoof.net (Moof)
Date: Mon, 27 Feb 2006 18:41:27 +0100
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602241217.08392.uwe@oss4u.com>
References: <200602232246.03126.uwe@oss4u.com>
	<200602241233.33616.rudy@goldenhelix.com>
	<200602241217.08392.uwe@oss4u.com>
Message-ID: <bff8eeef0602270941m5bb4032wc807b76571aaf09d@mail.gmail.com>

On 2/24/06, Uwe C. Schroeder <uwe at oss4u.com> wrote:

> In the end it's not a flaw in the design. The software package with close to
> 1.5 million lines of code runs just fine and did so for many years.
> The problem is that customers hire some homegrown MS Access programmers for
> whom anything remotely like network programming is a black box  and expect
> them to be able to write a module for my system. It's pretty hard to explain
> deferred's to someone who thinks a socket is the power outlet where he plugs
> his vacuum in and a port is the thing where the ships go to. Guess who gets
> the blame when their employees can't handle it. Thus the idea to make that
> API a bit less "deferred".
> Yeah - I should tell them "hire decent programmers who have a clue"...
> Well, was worth a try - someone might have come up with something...

I came across this problem recently. I ended up using XML-RPC.NET for
the VB side, and twsited's own XML-RPC server for my side. It took me
about a week to realise that this was how to resolve my problem,
rather than working out (in my case) how to make PB be COM-Compliant.
It had the advantage that I just passed an interface file alogn to my
VB programmer who could plug it into hsi system, and he got all his
fancy syntax checkign and pop up values and all the rest.

I did consider SOAP, but WSDL gave me a headache, and I will
apparently have to cope with a VB6 project hooking up to my code in
the near future, for which there is a COM-based XML-RPC library
available.

If it is something they're goign to be "hanging" on for a significant
amount of time, you can, at the very least, offer them a UUID and a
method that they can poll to see if the deferred has fired.

Moof



From exarkun at divmod.com  Mon Feb 27 12:44:36 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2006 12:44:36 -0500
Subject: [Twisted-Python] twisted TCP frame size
In-Reply-To: <44032C62.7090904@imperial.ac.uk>
Message-ID: <20060227174436.6122.580902746.divmod.quotient.9325@ohm>

On Mon, 27 Feb 2006 16:44:18 +0000, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>Thys Meintjes wrote:
>>1) is there a way to force dataReceived() to return when a certain data
>>length has been received ?
>
>dataReceived() is called via doRead() on the file descriptor, which is 
>called via a select([fd,], [], []) event in the default reactor.
>
>If you are doing something (executing code) and a TCP segment comes in, then 
>another, then another, *then* you exit your code and the reactor falls back 
>to select(), it'll return with the fd and doRead() will be called, and 
>you'll get everything from the socket - 3 frames worth.
>
>The correct question is, given your test script has a very small 
>dataReceived method that returns quickly (I presume), why isn't the reactor 
>"beating" the server and getting 49 bytes every time?

Of course, it isn't necessarily the case that multiple TCP packets, each with 49 bytes of application-level data, are arriving between the times doRead()/dataReceived() get invoked.  Nagling on the server could cause data to arrive in multiples of 49 bytes just as easily as a slow receiver.  This could happen with the synchronous version too, you just wouldn't be able to notice it.  What Twisted does in this case is actually more efficient, since it involves fewer trips into recv(), less memory copying, etc.

Of course all the other stuff Twisted does might outweigh this (and likely does - the overhead associated with synchronously reading from one socket is much lower than the overhead of performing the same task asynchronously, at least when using select()).  Which is not to say that the Twisted version has to be slower, but you might have to work harder to see any benefits at this (essentially non-existent) level of concurrency.

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 08:22:19 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 08:22:19 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
 and loopbackUNIX return Deferreds
In-Reply-To: <E1FE470-0001eJ-00@wolfwood>
Message-ID: <20060228132219.6122.2119655857.divmod.quotient.10051@ohm>

On Tue, 28 Feb 2006 05:37:54 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Tue Feb 28 05:37:52 2006
>New Revision: 16103
>
>Modified:
>   branches/deprecated-trial-1509/twisted/mail/test/test_imap.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_pop3.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_pop3client.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_smtp.py
>   branches/deprecated-trial-1509/twisted/protocols/loopback.py
>   branches/deprecated-trial-1509/twisted/test/test_loopback.py
>   branches/deprecated-trial-1509/twisted/test/test_tpfile.py
>Log:
>Make loopbackTCP and loopbackUNIX return Deferreds
>
>Modified: branches/deprecated-trial-1509/twisted/protocols/loopback.py
>==============================================================================
>--- branches/deprecated-trial-1509/twisted/protocols/loopback.py	(original)
>+++ branches/deprecated-trial-1509/twisted/protocols/loopback.py	Tue Feb 28 05:37:52 2006
>@@ -122,14 +123,9 @@
>     clientF.noisy = noisy
>     reactor.connectTCP('127.0.0.1', serverPort.getHost().port, clientF)
>
>-    # this needs to wait until:
>-    #  A: the client has disconnected
>-    #  B: the server has noticed, and its own socket has disconnected
>-    #  C: the listening socket has been shut down
>-    spinUntil(lambda :clientF.disconnected)        # A
>-    spinUntil(lambda :not server.transport.connected)  # B
>-    serverPort.stopListening()
>-    spinUntil(lambda :not serverPort.connected)        # C
>+    d = clientF.deferred
>+    d.addCallback(lambda x : defer.maybeDeferred(serverPort.stopListening))
>+    return d
>

This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.

Jean-Paul



From donwsmith at gmail.com  Tue Feb 28 13:59:50 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 10:59:50 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
Message-ID: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>

Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
I'm just not seeing it.

I have a Twisted program that I need to add in the ability to make a client
telnet connection to a remote server and send some commands to it and deal
with the data received.

In my main program I have this line of code:
    reactor.connectTCP("mytelnethost", 24, Connections.TelnetConnection("myname
of object",events,"command to run"))

My Connections.TelnetConnection class looks like this:

from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet

class TelnetClient(Telnet):
    def connectionMade(self):
        print "connection made"
    self.write("\r\n")

    def write(self, data):
    print data
    Telnet._write(self, data+"\r\n")

    def dataReceived(self, data):
        print "received:", data
    if "User Name:" in data:
       self.write("user")

    if "Password:" in data:
       self.write("password")


    if ">" in data:
       time.sleep(2)
       self.write("connect")
    if "Connector Name:" in data:
       time.sleep(2)
       self.write("another command")



class TelnetConnection(Connection, ReconnectingClientFactory):
    """ Telnets to host:port and executes cmd. cmd """
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None):
        Connection.__init__(self, name)

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()



This all works great, except that the command sequence is hard coded in the
TelnetClient class. I want to be able to reference the "cmd" parameter,
which could be a list of commands to iterate over,etc. But I don't see how I
can access the "cmd" parameter that gets passed into the TelnetConnection
class from within the TelnetClient class.

I'm really desparate for some help, I've been racking my brain on this since
yesterday morning.

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060228/228e3b14/attachment.htm 

From jml at mumak.net  Tue Feb 28 15:42:05 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 1 Mar 2006 07:42:05 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
	and loopbackUNIX return Deferreds
In-Reply-To: <20060228132219.6122.2119655857.divmod.quotient.10051@ohm>
References: <E1FE470-0001eJ-00@wolfwood>
	<20060228132219.6122.2119655857.divmod.quotient.10051@ohm>
Message-ID: <d06a5cd30602281242j29393c59xe2d9f930728cf07b@mail.gmail.com>

On 3/1/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 28 Feb 2006 05:37:54 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Tue Feb 28 05:37:52 2006
> >New Revision: 16103
> >
> >Modified:
> >   branches/deprecated-trial-1509/twisted/mail/test/test_imap.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_pop3.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_pop3client.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_smtp.py
> >   branches/deprecated-trial-1509/twisted/protocols/loopback.py
> >   branches/deprecated-trial-1509/twisted/test/test_loopback.py
> >   branches/deprecated-trial-1509/twisted/test/test_tpfile.py
> >Log:
> >Make loopbackTCP and loopbackUNIX return Deferreds
> >
> >Modified: branches/deprecated-trial-1509/twisted/protocols/loopback.py
> >==============================================================================
> >--- branches/deprecated-trial-1509/twisted/protocols/loopback.py       (original)
> >+++ branches/deprecated-trial-1509/twisted/protocols/loopback.py       Tue Feb 28 05:37:52 2006
> >@@ -122,14 +123,9 @@
> >     clientF.noisy = noisy
> >     reactor.connectTCP('127.0.0.1', serverPort.getHost().port, clientF)
> >
> >-    # this needs to wait until:
> >-    #  A: the client has disconnected
> >-    #  B: the server has noticed, and its own socket has disconnected
> >-    #  C: the listening socket has been shut down
> >-    spinUntil(lambda :clientF.disconnected)        # A
> >-    spinUntil(lambda :not server.transport.connected)  # B
> >-    serverPort.stopListening()
> >-    spinUntil(lambda :not serverPort.connected)        # C
> >+    d = clientF.deferred
> >+    d.addCallback(lambda x : defer.maybeDeferred(serverPort.stopListening))
> >+    return d
> >
>
> This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.

Awesome, I wondered what that other thing was for.

How do I get a Deferred to fire when a transport is disconnected?

jml



From exarkun at divmod.com  Tue Feb 28 16:00:24 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 16:00:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
	and loopbackUNIX return Deferreds
In-Reply-To: <d06a5cd30602281242j29393c59xe2d9f930728cf07b@mail.gmail.com>
Message-ID: <20060228210024.6122.1787745885.divmod.quotient.10320@ohm>

On Wed, 1 Mar 2006 07:42:05 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 3/1/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>>
>> This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.
>
>Awesome, I wondered what that other thing was for.
>
>How do I get a Deferred to fire when a transport is disconnected?

Probably with a protocol wrapper.

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 17:12:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 17:12:21 -0500
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
Message-ID: <20060228221221.6122.1438406745.divmod.quotient.10375@ohm>

On Tue, 28 Feb 2006 10:59:50 -0800, Don Smith <donwsmith at gmail.com> wrote:
>Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
>I'm just not seeing it.
>
>I have a Twisted program that I need to add in the ability to make a client
>telnet connection to a remote server and send some commands to it and deal
>with the data received.
>
> [snip]
>
>This all works great, except that the command sequence is hard coded in the
>TelnetClient class. I want to be able to reference the "cmd" parameter,
>which could be a list of commands to iterate over,etc. But I don't see how I
>can access the "cmd" parameter that gets passed into the TelnetConnection
>class from within the TelnetClient class.
>
>I'm really desparate for some help, I've been racking my brain on this since
>yesterday morning.

The usual approach is to save the data (`cmd' in this case) on the factory and use `self.factory.stuff' from the protocol.  The `factory' attribute is set on the protocol class by the default `buildProtocol' implementation.  It is not available in the protocol's `__init__', but is available by the time `connectionMade' is called.

Jean-Paul



From alecu at vortech.com.ar  Tue Feb 28 17:24:15 2006
From: alecu at vortech.com.ar (Alejandro J. Cura)
Date: Tue, 28 Feb 2006 19:24:15 -0300
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
Message-ID: <1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>

As you can see in twisted.internet.protocol.Factory

    def buildProtocol(self, addr):
        """Create an instance of a subclass of Protocol.

        The returned instance will handle input on an incoming server
        connection, and an attribute \"factory\" pointing to the creating
        factory.

        Override this method to alter how Protocol instances get created.

        @param addr: an object implementing
L{twisted.internet.interfaces.IAddress}
        """
        p = self.protocol()
        p.factory = self
        return p

ReconnectingClientFactory inherits that method, so each TelnetClient
instance it builds will  have a self.factory you can use to access
your cmd list.

Hope that helps,
--
alecu

On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
> Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
> I'm just not seeing it.
>
> I have a Twisted program that I need to add in the ability to make a client
> telnet connection to a remote server and send some commands to it and deal
> with the data received.
>
> In my main program I have this line of code:
>     reactor.connectTCP("mytelnethost", 24,
> Connections.TelnetConnection("myname of object",events,"command to run"))
>
> My Connections.TelnetConnection class looks like this:
>
> from twisted.internet.protocol import Protocol, ReconnectingClientFactory
> from twisted.conch.telnet import Telnet
>
> class TelnetClient(Telnet):
>     def connectionMade(self):
>         print "connection made"
>     self.write("\r\n")
>
>     def write(self, data):
>     print data
>     Telnet._write(self, data+"\r\n")
>
>     def dataReceived(self, data):
>         print "received:", data
>     if "User Name:" in data:
>        self.write("user")
>
>     if "Password:" in data:
>        self.write("password")
>
>
>     if ">" in data:
>         time.sleep(2)
>        self.write("connect")
>     if "Connector Name:" in data:
>        time.sleep(2)
>        self.write("another command")
>
>
>
> class TelnetConnection(Connection, ReconnectingClientFactory):
>     """ Telnets to host:port and executes cmd. cmd """
>     protocol = TelnetClient
>     def  __init__(self, name, eventQueue, cmd=None):
>         Connection.__init__(self, name)
>
>     def clientConnectionFailed(self, connector, reason):
>         print 'connection failed:', reason.getErrorMessage()
>
>
>     def clientConnectionLost(self, connector, reason):
>         print 'connection lost:', reason.getErrorMessage()
>
>
>
> This all works great, except that the command sequence is hard coded in the
> TelnetClient class. I want to be able to reference the "cmd" parameter,
> which could be a list of commands to iterate over,etc. But I don't see how I
> can access the "cmd" parameter that gets passed into the TelnetConnection
> class from within the TelnetClient class.
>
> I'm really desparate for some help, I've been racking my brain on this since
> yesterday morning.
>
> Thanks,
>
> Don
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From donwsmith at gmail.com  Tue Feb 28 17:26:03 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 14:26:03 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <20060228221221.6122.1438406745.divmod.quotient.10375@ohm>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
	<20060228221221.6122.1438406745.divmod.quotient.10375@ohm>
Message-ID: <24f63c200602281426s631bb776t5508f27d963f19a3@mail.gmail.com>

Thank you, thank you, thank you!!!

-Don

On 2/28/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 28 Feb 2006 10:59:50 -0800, Don Smith <donwsmith at gmail.com> wrote:
> >Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
> but
> >I'm just not seeing it.
> >
> >I have a Twisted program that I need to add in the ability to make a
> client
> >telnet connection to a remote server and send some commands to it and
> deal
> >with the data received.
> >
> > [snip]
> >
> >This all works great, except that the command sequence is hard coded in
> the
> >TelnetClient class. I want to be able to reference the "cmd" parameter,
> >which could be a list of commands to iterate over,etc. But I don't see
> how I
> >can access the "cmd" parameter that gets passed into the TelnetConnection
> >class from within the TelnetClient class.
> >
> >I'm really desparate for some help, I've been racking my brain on this
> since
> >yesterday morning.
>
> The usual approach is to save the data (`cmd' in this case) on the factory
> and use `self.factory.stuff' from the protocol.  The `factory' attribute is
> set on the protocol class by the default `buildProtocol' implementation.  It
> is not available in the protocol's `__init__', but is available by the time
> `connectionMade' is called.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060228/04c52bb3/attachment.htm 

From richard at reticulatus.plus.com  Tue Feb 28 17:40:28 2006
From: richard at reticulatus.plus.com (Richard Townsend)
Date: Tue, 28 Feb 2006 22:40:28 +0000
Subject: [Twisted-Python] Twisted & SOAP
Message-ID: <4404D15C.3020802@reticulatus.plus.com>

I've been experimenting with the Twisted web/soap.py integration with 
SOAPpy which appears to do the sort of I stuff I need at the moment.

However, a recent message on the Pywebsvcs-talk mailing list said:

"Any objection to our diabolical plan to integrate
wstools into ZSI and shove SOAPpy to a second class status? We'd like to
converge on a single python web services solution, but we're working hard to
make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."

What effect will this development have on support for SOAP in Twisted?

regards
Richard






From cwmoad at gmail.com  Tue Feb 28 18:12:52 2006
From: cwmoad at gmail.com (Charlie Moad)
Date: Tue, 28 Feb 2006 18:12:52 -0500
Subject: [Twisted-Python] Twisted & SOAP
In-Reply-To: <4404D15C.3020802@reticulatus.plus.com>
References: <4404D15C.3020802@reticulatus.plus.com>
Message-ID: <6382066a0602281512m38d6594n6efe35425e07c7f9@mail.gmail.com>

     SOAPpy is a very primitive soap implementation compared to ZSI,
but it works for the simple cases.  However, focus is being directed
to ZSI primarily now.  If you check out ZSI from cvs you can build it
with, "python setup.py build --twisted", and this will include twisted
resources that can be used like any other twisted.web resource.  This
work migrated from pygridware to ZSI recently, so it is not trivial to
use yet.  Pygridware also includes a web2 resource, but this has not
been moved to ZSI yet.  Maybe once these classes mature they will be
donated for twisted to include.
     I am not a twisted developer so I can't speak for them, but this
is the current status of the pywebsvcs group.
     I cc'd the twisted-web mailing list, because that is probably
where this thread belongs, hence the general list should not be
included in future replies.

- Charlie

On 2/28/06, Richard Townsend <richard at reticulatus.plus.com> wrote:
> I've been experimenting with the Twisted web/soap.py integration with
> SOAPpy which appears to do the sort of I stuff I need at the moment.
>
> However, a recent message on the Pywebsvcs-talk mailing list said:
>
> "Any objection to our diabolical plan to integrate
> wstools into ZSI and shove SOAPpy to a second class status? We'd like to
> converge on a single python web services solution, but we're working hard to
> make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."
>
> What effect will this development have on support for SOAP in Twisted?
>
> regards
> Richard
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From donwsmith at gmail.com  Tue Feb 28 20:31:46 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 17:31:46 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
	<1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>
Message-ID: <24f63c200602281731s6e5f097es1dc84fd3c1ca2c37@mail.gmail.com>

So, I have this working now. I can send commands to the telnet server,
dynamically. However, is there a way to supress the output of the data I get
back so it doesn't flood my shell (stdout)?

Thanks,

Don

On 2/28/06, Alejandro J. Cura <alecu at vortech.com.ar> wrote:
>
> As you can see in twisted.internet.protocol.Factory
>
>     def buildProtocol(self, addr):
>         """Create an instance of a subclass of Protocol.
>
>         The returned instance will handle input on an incoming server
>         connection, and an attribute \"factory\" pointing to the creating
>         factory.
>
>         Override this method to alter how Protocol instances get created.
>
>         @param addr: an object implementing
> L{twisted.internet.interfaces.IAddress}
>         """
>         p = self.protocol()
>         p.factory = self
>         return p
>
> ReconnectingClientFactory inherits that method, so each TelnetClient
> instance it builds will  have a self.factory you can use to access
> your cmd list.
>
> Hope that helps,
> --
> alecu
>
> On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
> > Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
> but
> > I'm just not seeing it.
> >
> > I have a Twisted program that I need to add in the ability to make a
> client
> > telnet connection to a remote server and send some commands to it and
> deal
> > with the data received.
> >
> > In my main program I have this line of code:
> >     reactor.connectTCP("mytelnethost", 24,
> > Connections.TelnetConnection("myname of object",events,"command to
> run"))
> >
> > My Connections.TelnetConnection class looks like this:
> >
> > from twisted.internet.protocol import Protocol,
> ReconnectingClientFactory
> > from twisted.conch.telnet import Telnet
> >
> > class TelnetClient(Telnet):
> >     def connectionMade(self):
> >         print "connection made"
> >     self.write("\r\n")
> >
> >     def write(self, data):
> >     print data
> >     Telnet._write(self, data+"\r\n")
> >
> >     def dataReceived(self, data):
> >         print "received:", data
> >     if "User Name:" in data:
> >        self.write("user")
> >
> >     if "Password:" in data:
> >        self.write("password")
> >
> >
> >     if ">" in data:
> >         time.sleep(2)
> >        self.write("connect")
> >     if "Connector Name:" in data:
> >        time.sleep(2)
> >        self.write("another command")
> >
> >
> >
> > class TelnetConnection(Connection, ReconnectingClientFactory):
> >     """ Telnets to host:port and executes cmd. cmd """
> >     protocol = TelnetClient
> >     def  __init__(self, name, eventQueue, cmd=None):
> >         Connection.__init__(self, name)
> >
> >     def clientConnectionFailed(self, connector, reason):
> >         print 'connection failed:', reason.getErrorMessage()
> >
> >
> >     def clientConnectionLost(self, connector, reason):
> >         print 'connection lost:', reason.getErrorMessage()
> >
> >
> >
> > This all works great, except that the command sequence is hard coded in
> the
> > TelnetClient class. I want to be able to reference the "cmd" parameter,
> > which could be a list of commands to iterate over,etc. But I don't see
> how I
> > can access the "cmd" parameter that gets passed into the
> TelnetConnection
> > class from within the TelnetClient class.
> >
> > I'm really desparate for some help, I've been racking my brain on this
> since
> > yesterday morning.
> >
> > Thanks,
> >
> > Don
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20060228/5555d8ec/attachment.htm 

From exarkun at divmod.com  Tue Feb 28 20:38:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 20:38:44 -0500
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281731s6e5f097es1dc84fd3c1ca2c37@mail.gmail.com>
Message-ID: <20060301013844.6122.1035753858.divmod.quotient.10558@ohm>

On Tue, 28 Feb 2006 17:31:46 -0800, Don Smith <donwsmith at gmail.com> wrote:
>On 2/28/06, Alejandro J. Cura <alecu at vortech.com.ar> wrote:
>> On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
>> > Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
>> but
>> > I'm just not seeing it.
>> >
>> > I have a Twisted program that I need to add in the ability to make a
>> client
>> > telnet connection to a remote server and send some commands to it and
>> deal
>> > with the data received.
>> >
>> > In my main program I have this line of code:
>> >     reactor.connectTCP("mytelnethost", 24,
>> > Connections.TelnetConnection("myname of object",events,"command to
>> run"))
>> >
>> > My Connections.TelnetConnection class looks like this:
>> >
>> > from twisted.internet.protocol import Protocol,
>> ReconnectingClientFactory
>> > from twisted.conch.telnet import Telnet
>> >
>> > class TelnetClient(Telnet):
>> >     def connectionMade(self):
>> >         print "connection made"
>> >     self.write("\r\n")
>> >
>> >     def write(self, data):
>> >     print data
>> >     Telnet._write(self, data+"\r\n")
>> >
>> >     def dataReceived(self, data):
>> >         print "received:", data
>> >     if "User Name:" in data:
>> >        self.write("user")
>> >
>> >     if "Password:" in data:
>> >        self.write("password")
>> >
>> >
>> >     if ">" in data:
>> >         time.sleep(2)
>> >        self.write("connect")
>> >     if "Connector Name:" in data:
>> >        time.sleep(2)
>> >        self.write("another command")
>> >
>> >
>> >
>> > class TelnetConnection(Connection, ReconnectingClientFactory):
>> >     """ Telnets to host:port and executes cmd. cmd """
>> >     protocol = TelnetClient
>> >     def  __init__(self, name, eventQueue, cmd=None):
>> >         Connection.__init__(self, name)
>> >
>> >     def clientConnectionFailed(self, connector, reason):
>> >         print 'connection failed:', reason.getErrorMessage()
>> >
>> >
>> >     def clientConnectionLost(self, connector, reason):
>> >         print 'connection lost:', reason.getErrorMessage()
>> >
>> >
>> >
>> > This all works great, except that the command sequence is hard coded in
>> the
>> > TelnetClient class. I want to be able to reference the "cmd" parameter,
>> > which could be a list of commands to iterate over,etc. But I don't see
>> how I
>> > can access the "cmd" parameter that gets passed into the
>> TelnetConnection
>> > class from within the TelnetClient class.
>> >
>> > I'm really desparate for some help, I've been racking my brain on this
>> since
>> > yesterday morning.
>> >
>> > Thanks,
>> >
>> > Don
>> >
>>
>> As you can see in twisted.internet.protocol.Factory
>>
>>     def buildProtocol(self, addr):
>>         """Create an instance of a subclass of Protocol.
>>
>>         The returned instance will handle input on an incoming server
>>         connection, and an attribute \"factory\" pointing to the creating
>>         factory.
>>
>>         Override this method to alter how Protocol instances get created.
>>
>>         @param addr: an object implementing
>> L{twisted.internet.interfaces.IAddress}
>>         """
>>         p = self.protocol()
>>         p.factory = self
>>         return p
>>
>> ReconnectingClientFactory inherits that method, so each TelnetClient
>> instance it builds will  have a self.factory you can use to access
>> your cmd list.
>>
>> Hope that helps,
>> --
>> alecu
>>
>So, I have this working now. I can send commands to the telnet server,
>dynamically. However, is there a way to supress the output of the data I get
>back so it doesn't flood my shell (stdout)?

How about removing the print from dataReceived? :)

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 22:13:09 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 22:13:09 -0500
Subject: [Twisted-Python] Twisted Website
In-Reply-To: 0
Message-ID: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>

As some of you may have noticed, Twisted's website has undergone a
somewhat major change.  This comes in several pieces:

  * Roundup has been replaced by trac as our issue tracker.  All of
the tickets in roundup have been moved over and the various fields
adjusted to fit trac's view of things.  User accounts have been
transferred as well; you should be able to log in to trac using your
roundup username/password.  If you had configured roundup with your
email address, that has been transferred as well; if you did not, or
if you didn't have a roundup account and create a trac account, you
must provide an email address before you will be able to submit new
tickets.  We still have the roundup database around in case anyone
notices any problems, but so far as I can tell, everything has been
migrated successfully.  We are using several custom plugins in order
to preserve roundup functionality which trac does not offer
natively: the twisted-bugs list is still in operation and changes
will still be sent to anyone who is nosy ("cc'ed") on a ticket.  We
have introduced a new feature as well: newly created tickets are
now announced on the IRC channel.

  * Epydoc has been replaced by docextractor (to be renamed).  Since
we have so much documentation using epytext markup, we will likely
continue to use that markup style.  API documentation emitted by
docextractor is currently up on the website at the URL previously
occupied by epydoc's output.  The docextractor markup is currently
very rough.  Patches are, as always, welcome ;)  You will find the
source at <http://codespeak.net/svn/user/mwh/docextractor/trunk>.

  * Obviously we now have a wiki.  Feel free to contribute content.
A few pages, mainly those with project download links and such, will
be kept read-only.  Speak with project maintainers if you want to
make changes to these pages.

  * Tim Stebbing has volunteered to maintain the website from this
point on.  Project maintainers, speak with him (tjs on irc) to get
edit permission for the read-only parts of the wiki.

There are bound to be a few problems with the new site.  If you
encounter any, please report them, preferably in the tracker.

Thanks to everyone who helped out with the website switch over, in
particular Chris Armstrong who helped push things over the last hump,
and Michael Hudson who did what a lot of people have been avoiding
for years and wrote an epydoc replacement.

Jean-Paul



From christian.simms at gmail.com  Wed Feb  1 10:03:20 2006
From: christian.simms at gmail.com (christian simms)
Date: Wed, 1 Feb 2006 12:03:20 -0500
Subject: [Twisted-Python] Twisted success story
Message-ID: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>

As a happy (if that's possible :-) user of Twisted and Nevow, please add the
snippet below to the Success Stories page if you'd like.

Since I'm delurking now, I might as well 'fess up that I run Twisted on
Windows for development (I'm part of the silent mass of Windows users that
Glyph was looking for), but I use Linux for production.  And since the
performance of PostgreSQL sucks on Windows (at least up through PostgreSQL
8.0), I only do heavy duty testing on Linux.  I have looked at the skipped
Twisted tests on Windows, but have not yet found any that I could fix
myself.  Though if anyone has suggestions I'd be welcome to devote a little
time to helping out.

Here's some general feedback:
1. Core of Twisted is really solid.  Design is excellent, and almost all
problems I encounter have already been taken into account in API.
2. I've gotten burned when trying to keep synchronous-style code
synchronous, like by using the naughty deferredResult.  I did it (just in my
admin tool) even though you guys say not too.  The only way to learn not to
do it is to touch the flame and get burned.
3. Nevow is still moving a lot, but you guys know that.  Parts of it are as
good as Twisted.  Even though I initially loved stan, I got wacked by its
performance and had to move to more string based rendering, since my app is
really dynamic I can't use standard type templates at all.

Keep up the good work!

Cheers,
Christian


--Begin--
Botonomy LLC is a small software firm in the Philadelphia area.  We
help small teams solve large problems.

Our first application, ProjectPipe (http://www.projectpipe.com), is a
hosted project management solution that provides midsize teams with
everything that they need to manage IT projects.  We have built our
hosted application infrastructure atop Twisted, Nevow, PostgreSQL, and
Jabber/XMPP.   Twisted's multi-protocol support has been one of the
key enablers of the unique technical architecture that we employ in
our product offerings.

The core Twisted development team consistently demonstrates a strong
commitment to delivering robust, high quality software.  Twisted's
documentation is accurate and concise, and the expertise and
helpfulness of the larger developer community is second-to-none.

When evaluating the technologies on which you are staking your
business, you need to evaluate both the code and the community that
surrounds it.  Twisted passes with flying colors in both regards.
--End--
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060201/2e51d195/attachment.html>

From Wolfgang.W.Eichler at gmx.de  Wed Feb  1 11:38:42 2006
From: Wolfgang.W.Eichler at gmx.de (Wolfgang Eichler)
Date: Wed, 1 Feb 2006 19:38:42 +0100
Subject: [Twisted-Python] (no subject)
Message-ID: <E1F4MsP-0005hj-00@pyramid.twistedmatrix.com>

I don't get the docu for class TcpServer when I do:
pydoc.py -w base

The class Echo is well documented.

For TcpServer I only get:

TcpServer = <class base.TcpServer>

base.py:
--------------
import twisted.protocols.basic
from twisted.internet.protocol import DatagramProtocol, Protocol,
Factory

class TcpServer(twisted.protocols.basic.LineReceiver):
    """ central class for incoming tcp messages
    """
    def connectionMade(self):
        """ new connection
        """

class Echo(DatagramProtocol):
    """ Handles incoming datagrams (udp, traps)
    """ 
    def datagramReceived(self, data, (host, port)):
        """ contains some standard prints tbd
        """
---------------

Thanks for any hint ...




From leszczynscy at yahoo.com  Wed Feb  1 12:29:55 2006
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 1 Feb 2006 11:29:55 -0800 (PST)
Subject: [Twisted-Python] small error in the documentation/howto
Message-ID: <20060201192955.44471.qmail@web30009.mail.mud.yahoo.com>

Hi,

I am not sure where to post it, but there is a small
error standin out in the:

http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Basically I believe that in the first frame following
change is needed:

-def getDummyData(self, x):
+def getDummyData(x):


A.



From glyph at divmod.com  Wed Feb  1 14:05:14 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Wed, 1 Feb 2006 16:05:14 -0500
Subject: [Twisted-Python] small error in the documentation/howto
In-Reply-To: <20060201192955.44471.qmail@web30009.mail.mud.yahoo.com>
Message-ID: <20060201210514.2697.1318248922.divmod.quotient.3760@ohm>



On Wed, 1 Feb 2006 11:29:55 -0800 (PST), Andy Leszczynski <leszczynscy at yahoo.com> wrote:

>I am not sure where to post it

http://twistedmatrix.com/bugs



From leszczynscy at yahoo.com  Wed Feb  1 14:31:00 2006
From: leszczynscy at yahoo.com (Andy Leszczynski)
Date: Wed, 1 Feb 2006 13:31:00 -0800 (PST)
Subject: [Twisted-Python] small error in the documentation/howto
In-Reply-To: <20060201210514.2697.1318248922.divmod.quotient.3760@ohm>
Message-ID: <20060201213100.32439.qmail@web30008.mail.mud.yahoo.com>

> http://twistedmatrix.com/bugs

Done. The only uncertainty was that the password for
the login/account I had to create was not httsd-ed.

A.




From neuzhoundxx at yahoo.com  Thu Feb  2 13:37:17 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Thu, 2 Feb 2006 12:37:17 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
Message-ID: <20060202203717.43461.qmail@web90203.mail.scd.yahoo.com>

i'm writing an app that makes two twisted client connections to the same server.
  After each connection is made, each client connection sends a session
  establishment request to the server (per Netbios over TCP/IP protocol ) in the
  Protocol.connectionMade() method. In the dataReceived method, I check if my
  request was successful. If not successful, I display a failure notice then call self.transport.loseConnection().  if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
  to continually interact with the server in a loop.  this means, however, that i would get
  into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..  would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking.  I'm read the docs on deferreds, but i'm still unsure how to proceed.
   
  thanks in advance for any help/tips

		
---------------------------------
Do you Yahoo!?
 With a free 1 GB, there's more in store with Yahoo! Mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060202/4faec32f/attachment.html>

From exarkun at divmod.com  Thu Feb  2 14:00:47 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 2 Feb 2006 16:00:47 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202203717.43461.qmail@web90203.mail.scd.yahoo.com>
Message-ID: <20060202210047.2697.387292346.divmod.quotient.4924@ohm>

On Thu, 2 Feb 2006 12:37:17 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:
>i'm writing an app that makes two twisted client connections to the same server.
>  After each connection is made, each client connection sends a session
>  establishment request to the server (per Netbios over TCP/IP protocol ) in the
>  Protocol.connectionMade() method. In the dataReceived method, I check if my
>  request was successful. If not successful, I display a failure notice then call self.transport.loseConnection().  if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
>  to continually interact with the server in a loop.  this means, however, that i would get
>  into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..

This is not the case.  When you wish to send data, you call write on a transport.  When data is received, your protocol's dataReceived method will be invoked with it.  These actions are fairly common in all Twisted programs.  They work just fine.

> would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking.  I'm read the docs on deferreds, but i'm still unsure how to proceed.

Why would sendDataToServer block?  It should simply call write on a transport and then return.

Jean-Paul



From michele.petrazzo at unipex.it  Thu Feb  2 14:14:39 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Thu, 02 Feb 2006 22:14:39 +0100
Subject: [Twisted-Python] callback and errback
Message-ID: <43E2763F.90707@unipex.it>

Hi list,
I have a "stupid" problem with the adbapi (deferred):

d = self._db.runQuery("SELECT * FROM not_exists_table")

d.addCallback(self._back_getTables, callBack)
d.addErrback(self._errBack, errBack)


File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
294, in _startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
307, in _runCallbacks
     self.result = callback(self.result, *args, **kw)
exceptions.TypeError: passthru() takes exactly 1 argument (2 given)

Why with addCallback I can pass my values and with addErrback no?

And if I use:

d.addCallbacks(self._back_getTables, self._errBack,
                callbackArgs=callBack, errbackArgs=errBack)

   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
294, in _startRunCallbacks
     self._runCallbacks()
--- <exception caught here> ---
   File "C:\Python23\lib\site-packages\twisted\internet\defer.py", line
307, in _runCallbacks
     self.result = callback(self.result, *args, **kw)
exceptions.TypeError: passthru() argument after * must be a sequence

What this mean?


OS: win2k/debian 3.1
py: 2.3.5
twisted: 2.1.0

The error happen on both OS

Thanks,
Michele




From neuzhoundxx at yahoo.com  Thu Feb  2 14:43:17 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Thu, 2 Feb 2006 13:43:17 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202210047.2697.387292346.divmod.quotient.4924@ohm>
Message-ID: <20060202214317.28944.qmail@web90206.mail.scd.yahoo.com>

hmmm... this was the trace output i got:
   
   
  conn1 connection made. requesting session establishment ...
conn2 connection made. requesting session establishment ...
conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
  ...
conn1 connection lost
Connection lost - goodbye!
numPorts = 1
   
  looks like connection 2 never got a response from the server, connection 1 completed its work (i did not put it into a continuous loop), but connection 2 seems to be hanged.
  i'm running twist on windows XP.  any hypothesis regarding connection 2?

Jean-Paul Calderone <exarkun at divmod.com> wrote:
  On Thu, 2 Feb 2006 12:37:17 -0800 (PST), john peter wrote:
>i'm writing an app that makes two twisted client connections to the same server.
> After each connection is made, each client connection sends a session
> establishment request to the server (per Netbios over TCP/IP protocol ) in the
> Protocol.connectionMade() method. In the dataReceived method, I check if my
> request was successful. If not successful, I display a failure notice then call self.transport.loseConnection(). if successful, I flip an internal variable "sessionEstablished" to true, then the intention is for the successful connection
> to continually interact with the server in a loop. this means, however, that i would get
> into a send-receive data loop, which as i've observed, would prevent the other successful connection to get any work done..

This is not the case. When you wish to send data, you call write on a transport. When data is received, your protocol's dataReceived method will be invoked with it. These actions are fairly common in all Twisted programs. They work just fine.

> would it still be appropriate for me to use twisted for such application? if so, how should i approach the sendDataToServer() blocking. I'm read the docs on deferreds, but i'm still unsure how to proceed.

Why would sendDataToServer block? It should simply call write on a transport and then return.

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  


			
---------------------------------
 Yahoo! Autos. Looking for a sweet ride? Get pricing, reviews, & more on new and used cars.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060202/1e7fbf51/attachment.html>

From glyph at divmod.com  Thu Feb  2 15:53:15 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 2 Feb 2006 17:53:15 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202214317.28944.qmail@web90206.mail.scd.yahoo.com>
Message-ID: <20060202225315.2697.1402602399.divmod.quotient.5032@ohm>



On Thu, 2 Feb 2006 13:43:17 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:
>  i'm running twist on windows XP.  any hypothesis regarding connection 2?

In the absence of any code, I'd have to say that your server is broken and the connection didn't get a response.

Perhaps you could write a small client/server pair and see if you still have the problem?  If you do, you could submit a minimal example to the list.



From michele.petrazzo at unipex.it  Fri Feb  3 04:14:14 2006
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Fri, 03 Feb 2006 12:14:14 +0100
Subject: [Twisted-Python] callback and errback
In-Reply-To: <43E2763F.90707@unipex.it>
References: <43E2763F.90707@unipex.it>
Message-ID: <43E33B06.4050604@unipex.it>

Michele Petrazzo wrote:
> Hi list, I have a "stupid" problem with the adbapi (deferred):
> 

Yes, very stupid question.
It was a coding problem: errBack=None like class attribute and a method
with the same name!

Thanks,
Michele



From neuzhoundxx at yahoo.com  Fri Feb  3 08:42:27 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Fri, 3 Feb 2006 07:42:27 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060202225315.2697.1402602399.divmod.quotient.5032@ohm>
Message-ID: <20060203154227.39968.qmail@web36714.mail.mud.yahoo.com>

  I've attached two files. What I'm trying to do is write some tests simulating devices talking (Netbios over TCP/IP) to a legacy app. The goal is to grow these test scripts into a Load/Stress Testing Framework. 
   
  The script I'm running is dd.py. The other file shows the really simple code for my protocol and factory classes.  Essentially, when I've made a TCP/IP connection, I send an RFC1001/1002-compliant Session Request Packet containing the level-1 encoded netbios names of the caller (client name) and callee (remote name). At this point, I'm really just trying to see if both connections can get a positive response.
   
  I've implemented a version of what I'm trying to do using the threading module, and I have not only been able to establish a Netbios session, but both my connections are
  able to converse with the server in a loop.
   
  With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.
   
  Thank you for any help. 

glyph at divmod.com wrote: 
  

On Thu, 2 Feb 2006 13:43:17 -0800 (PST), john peter wrote:
> i'm running twist on windows XP. any hypothesis regarding connection 2?

In the absence of any code, I'd have to say that your server is broken and the connection didn't get a response.

Perhaps you could write a small client/server pair and see if you still have the problem? If you do, you could submit a minimal example to the list.

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  



		
---------------------------------
Brings words and photos together (easily) with
 PhotoMail  - it's free and works with Yahoo! Mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment.html>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: avsNbtClientProtocol.py
URL: </pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dd.py
URL: </pipermail/twisted-python/attachments/20060203/b2a8c7a9/attachment-0001.ksh>

From exarkun at divmod.com  Fri Feb  3 09:55:00 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 11:55:00 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15819 - Maybe make this
 test more robust. Windows sucks.
In-Reply-To: <E1F4vOz-0003TW-00@wolfwood>
Message-ID: <20060203165500.2697.1861263283.divmod.quotient.6017@ohm>

On Fri, 03 Feb 2006 00:30:41 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Fri Feb  3 00:30:40 2006
>New Revision: 15819
>
>Modified:
>   trunk/twisted/trial/test/test_reporter.py
>Log:
>Maybe make this test more robust. Windows sucks.
>
>
>
>Modified: trunk/twisted/trial/test/test_reporter.py
>==============================================================================
>--- trunk/twisted/trial/test/test_reporter.py	(original)
>+++ trunk/twisted/trial/test/test_reporter.py	Fri Feb  3 00:30:40 2006
>@@ -42,6 +42,7 @@
>     def test_timing(self):
>         the_reporter = reporter.Reporter()
>         the_reporter._somethingStarted()
>+        time.sleep(0.01)
>         the_reporter._somethingStarted()
>         time.sleep(0.01)
>         time1 = the_reporter._somethingStopped()

I think robustness is inversely correlated with number of time-related calls.

What are these sleeps for?  Maybe the reporter's timing function should be parameterized so this can be deterministic, instead of relying on a clock that is guaranteed to say something nasty from time to time?

Jean-Paul



From alengarbage at yahoo.com  Fri Feb  3 13:18:56 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 3 Feb 2006 12:18:56 -0800 (PST)
Subject: [Twisted-Python] Making DeferredList look like Deferred
Message-ID: <20060203201856.44596.qmail@web31507.mail.mud.yahoo.com>

I have a need to return a DeferredList or a Deferred
from a function, but I don't want the caller to be
aware of this distinction -- the caller should just
assume that they got a regular Deferred.

The way I'm currently accomplishing this is to 1)
ensure that each Deferred in the List has its own
callback/errback pair hooked up, and 2) add a callback
to the Deferred list from within the called function
which either returns the [possibly sanitized] result
if all the Deferreds called their callbacks, or that
raises a failure.DefaultException if any of the
Deferreds called their errbacks.  This seems to give
me the desired result in all cases.

Is this the right way to go about this?  Is there a
cleaner way?

(The reason I can't just return the DeferredList, as I
understand, is that its callback is *always* invoked,
even if we leave each of the Deferred's errbacks
unhooked and let them trickle up into DeferredList's
addErrback callable.  In the case of a caller who
expects the returned deferred to be a regular
deferred, it would not be expected to have *both* its
callback and errback invoked).

thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From exarkun at divmod.com  Fri Feb  3 14:08:54 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 16:08:54 -0500
Subject: [Twisted-Python] Making DeferredList look like Deferred
In-Reply-To: <20060203201856.44596.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <20060203210854.2697.1887262418.divmod.quotient.6250@ohm>

On Fri, 3 Feb 2006 12:18:56 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>
>(The reason I can't just return the DeferredList, as I
>understand, is that its callback is *always* invoked,
>even if we leave each of the Deferred's errbacks
>unhooked and let them trickle up into DeferredList's
>addErrback callable.  In the case of a caller who
>expects the returned deferred to be a regular
>deferred, it would not be expected to have *both* its
>callback and errback invoked).

DeferredList has *either* callback *or* errback called on it, just like any Deferred.  If you just give it a list of Deferreds, it will always have its callback method invoked and never have its errback method invoked, regardless of whether any of the Deferreds it was constructed with fail.  However, if you pass a true value for fireOnOneErrback when constructing your DeferredList, any Deferred which errbacks will cause the DeferredList to errback; in this case it will never callback.

Does that help?

Jean-Paul



From rudy at goldenhelix.com  Fri Feb  3 15:29:21 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 3 Feb 2006 15:29:21 -0700
Subject: [Twisted-Python] Running callbacks in a non-main thread
Message-ID: <200602031529.22278.rudy@goldenhelix.com>

Hey,
I realize that the point of deferreds is to have process/network intensive 
tasks work on in their own thread and send the results to callback function 
in the main thread, but is there away to have a deferred process it's 
callback in a non-main thread?

I'm sure someone will want to know why, and maybe solving my meta-problem 
would show me the errors in my ways in wanting to warp the purpose of the 
mighty deferred.

Async is great, but I'm slowly replacing some code that uses xmlrpc (blocking) 
with prospect broker objects (returns deferred, hence non-blocking). What I'm 
trying to hack is a method to make a non-blocking call in the main thread 
blocking until the deferred returns a result, hence emulating the blocking 
nature of xmlrpc. This dependency is something I would like to phase out, but 
certain things need it, so work with me eh?

My hack is to simply use a threading.Event to wait for the callback to be 
called in a non-waiting thread, save the value and do the let the main thread 
return the result. Of course this doesn't work when callbacks run in the main 
thread because the main thread is blocked.

#Bits of hack code:
class Block
    def waitFor(self, function, *args, **kwargs):
        if not hasattr(self,'async_done'):
            self.async_done = threading.Event()
        
        self.result = None
        #ceate a thread to wait for callback.
	threads.deferToThread(function, *args, 
**kwargs).addCallback(self._cbWait).addErrback(self._ebWait)

        #block on results of thread to be set
        self.async_done.wait()
        self.async_done.clear()
        return self.result
 
    #This is never called, because main thread is blocked
    def _cbWait(self, deferred):
        #expect original function to return a deferred
        deferred.addBoth(self._cbValue)
        
    def _ebWait(self, reason):
        print "ERROR in getting remote function: ",reason

    def _cbValue(self, v):
        self.result = v
        self.async_done.set()

Any ideas O masters of the twisted?

Gabe Rudy



From jml at mumak.net  Fri Feb  3 16:08:04 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 4 Feb 2006 10:08:04 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r15819 - Maybe make this
	test more robust. Windows sucks.
In-Reply-To: <20060203165500.2697.1861263283.divmod.quotient.6017@ohm>
References: <E1F4vOz-0003TW-00@wolfwood>
	<20060203165500.2697.1861263283.divmod.quotient.6017@ohm>
Message-ID: <d06a5cd30602031508n18ada3bei7db185382a7521f5@mail.gmail.com>

On 2/4/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 03 Feb 2006 00:30:41 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Fri Feb  3 00:30:40 2006
> >New Revision: 15819
> >
> >Modified:
> >   trunk/twisted/trial/test/test_reporter.py
> >Log:
> >Maybe make this test more robust. Windows sucks.
> >
> >Modified: trunk/twisted/trial/test/test_reporter.py
> >==============================================================================
> >--- trunk/twisted/trial/test/test_reporter.py  (original)
> >+++ trunk/twisted/trial/test/test_reporter.py  Fri Feb  3 00:30:40 2006
> >@@ -42,6 +42,7 @@
> >     def test_timing(self):
> >         the_reporter = reporter.Reporter()
> >         the_reporter._somethingStarted()
> >+        time.sleep(0.01)
> >         the_reporter._somethingStarted()
> >         time.sleep(0.01)
> >         time1 = the_reporter._somethingStopped()
>
> I think robustness is inversely correlated with number of time-related calls.
>
> What are these sleeps for?  Maybe the reporter's timing function should be parameterized so this can be deterministic, instead of relying on a clock that is guaranteed to say something nasty from time to time?
>

As I understand it, this test is there to check that the reporter
actually does timing, and that the _somethingStarted() fu operates as
a stack _and_ that _somethingStopped() returns a time.

Patches accepted.

jml



From alengarbage at yahoo.com  Fri Feb  3 16:55:34 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 3 Feb 2006 15:55:34 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060203235534.17837.qmail@web31514.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com
Fri Feb 3 14:08:54 MST 2006 wrote:
>
> DeferredList has *either* callback *or* errback
> called on it, just like any Deferred.  If you just
> give it a list of Deferreds, it will always have its
> callback method invoked and never have its errback
> method invoked, regardless of whether any of the
> Deferreds it was constructed with fail.  However, if
> you pass a true value for fireOnOneErrback when
> constructing your DeferredList, any Deferred which
> errbacks will cause the DeferredList to errback; in
> this case it will never callback.
>
> Does that help?


  That definitely helps, but I'm wondering if this
behavior was implemented between 1.3 and 2.0?  I can
provide an example where both the DeferredList's
errback and callback are called on 1.3 when any one of
the DeferredList's Deferreds err -- without setting
fireOnErrback.  I'll grab 2.1 tonight and see if I can
reproduce it there.

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From bob at redivi.com  Fri Feb  3 17:13:04 2006
From: bob at redivi.com (Bob Ippolito)
Date: Fri, 3 Feb 2006 16:13:04 -0800
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031529.22278.rudy@goldenhelix.com>
References: <200602031529.22278.rudy@goldenhelix.com>
Message-ID: <D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>


On Feb 3, 2006, at 2:29 PM, Gabe Rudy wrote:

> I realize that the point of deferreds is to have process/network  
> intensive
> tasks work on in their own thread and send the results to callback  
> function
> in the main thread, but is there away to have a deferred process it's
> callback in a non-main thread?

No, that's not the point of deferreds.  A Deferred is just an  
object.  It doesn't know anything at all about threads, and it sure  
as hell doesn't implement any sort of thread safety.  All it really  
does it encapsulate a call chain.

Technically a Deferred will process its callbacks in the same thread  
that callback or errback was invoked in.  If you feel the need to do  
that, your design is probably fubar though.

... there is *one* function in Twisted that will invoke a callable in  
a thread and return a Deferred, but that's hardly a common usage.

-bob




From p.mayers at imperial.ac.uk  Fri Feb  3 17:31:19 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Sat, 04 Feb 2006 00:31:19 +0000
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031529.22278.rudy@goldenhelix.com>
References: <200602031529.22278.rudy@goldenhelix.com>
Message-ID: <43E3F5D7.6010006@imperial.ac.uk>

Gabe Rudy wrote:
> Hey,
> I realize that the point of deferreds is to have process/network intensive 
> tasks work on in their own thread and send the results to callback function 

No. The exact opposite in fact. The purpose of a deferred is to act as a 
placeholder for a result that will be available later, and to call 
callbacks or errbacks that receive that result, in a single threaded 
event-driven system.

> in the main thread, but is there away to have a deferred process it's 
> callback in a non-main thread?

If I understand you, the deferred callback will take a long time. Your 
code is indicative of a misunderstanding of deferreds, which you need 
not feel bad about - they're not an easy concept at first.

Broadly, if you have code that looks like this under synchronous frameworks:

def operation():
   res = blockingCall()
   # the following function takes time
   res2 = doCalc(res)
   return res2.field

...that needs to be turned into:

def asyncOperation():
   deferred = asyncCall()
   deferred.addCallbacks(asyncOperation_2, log.err)
   return deferred

def asyncOperation_2(value):
   # doCalc is still expensive
   deferred = deferToThread(doCalc, value)
   deferred.addCallbacks(asyncOperation_3, log.err)
   # by returning a deferred, the deferred that calls us will be
   # paused until this "INNER" deferred finishes, so it all "just works"
   return deferred

def asyncOperation_3(doCalc_result):
   # this is a trivial reformatting operation
   return doCalc_result.field



From rudy at goldenhelix.com  Fri Feb  3 18:06:52 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 3 Feb 2006 18:06:52 -0700
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>
References: <200602031529.22278.rudy@goldenhelix.com>
	<D767E89F-0F00-44AD-AB4D-82E688060B2D@redivi.com>
Message-ID: <200602031806.52900.rudy@goldenhelix.com>

On Friday 03 February 2006 5:13 pm, Bob Ippolito wrote:
> Technically a Deferred will process its callbacks in the same thread
> that callback or errback was invoked in.  If you feel the need to do
> that, your design is probably fubar though.
>

Ok, thanks for setting me strait. I see that my problem was really I was 
blocking the main thread, and hence the reactor from doing _anything_. I got 
a workable hack now that processes reactor events in a loop until the worker 
thread finishes, then returns from the function with the results (making the 
function appear synchronous to the caller).

--Gabe



From glyph at divmod.com  Fri Feb  3 18:27:35 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 3 Feb 2006 20:27:35 -0500
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060203154227.39968.qmail@web36714.mail.mud.yahoo.com>
Message-ID: <20060204012735.2697.148719091.divmod.quotient.6459@ohm>


On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter <neuzhoundxx at yahoo.com> wrote:

>  With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to.  Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times?  Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data.  Depending on which prints are actually commented out or not that might look like hanging :)



From glyph at divmod.com  Fri Feb  3 18:35:00 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 3 Feb 2006 20:35:00 -0500
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031806.52900.rudy@goldenhelix.com>
Message-ID: <20060204013500.2697.825722951.divmod.quotient.6467@ohm>



On Fri, 3 Feb 2006 18:06:52 -0700, Gabe Rudy <rudy at goldenhelix.com> wrote:
>(making the function appear synchronous to the caller).

I'm not sure *exactly* what you mean by that, but generally trying to make functions look synchronous is a source of problems (*especially* if both threads are running the reactor.  I hope that's not what you mean, is it?)

http://glyf.livejournal.com/40037.html



From exarkun at divmod.com  Fri Feb  3 19:05:29 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 3 Feb 2006 21:05:29 -0500
Subject: [Twisted-Python] Running callbacks in a non-main thread
In-Reply-To: <200602031806.52900.rudy@goldenhelix.com>
Message-ID: <20060204020529.2697.1016749634.divmod.quotient.6497@ohm>

On Fri, 3 Feb 2006 18:06:52 -0700, Gabe Rudy <rudy at goldenhelix.com> wrote:
>On Friday 03 February 2006 5:13 pm, Bob Ippolito wrote:
>> Technically a Deferred will process its callbacks in the same thread
>> that callback or errback was invoked in.  If you feel the need to do
>> that, your design is probably fubar though.
>>
>
>Ok, thanks for setting me strait. I see that my problem was really I was
>blocking the main thread, and hence the reactor from doing _anything_. I got
>a workable hack now that processes reactor events in a loop until the worker
>thread finishes, then returns from the function with the results (making the
>function appear synchronous to the caller).

Hack is exactly the right word to describe this.  The only way to implement this is by going behind Twisted's back, using unsupported APIs, and risking having the whole thing fall apart in the next point release (that's assuming you get it to work reliably at all, which is a long shot at best).

I recommend working very hard to eliminate this style of usage from your code, and not introducing any further instances of it.

Jean-Paul



From matusis at matusis.com  Sat Feb  4 00:30:02 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri, 3 Feb 2006 23:30:02 -0800
Subject: [Twisted-Python] What happened with API reference?
Message-ID: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>

When I try going to http://twistedmatrix.com/documents/current/api/ I get a
weird site, not the API reference I used to see.
Am I missing something?
 






From radeex at gmail.com  Sat Feb  4 00:46:58 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 4 Feb 2006 18:46:58 +1100
Subject: [Twisted-Python] What happened with API reference?
In-Reply-To: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>
References: <E1F5Hs1-0007hK-00@pyramid.twistedmatrix.com>
Message-ID: <60ed19d40602032346k9f4a5c7p5499deadcaf9bc2f@mail.gmail.com>

On 2/4/06, Alec Matusis <matusis at matusis.com> wrote:
> When I try going to http://twistedmatrix.com/documents/current/api/ I get a
> weird site, not the API reference I used to see.
> Am I missing something?

The web site is going through some maintenance at the moment. The API
docs will probably be available again when the man in charge wakes up.

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From radeex at gmail.com  Sat Feb  4 07:01:57 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 5 Feb 2006 01:01:57 +1100
Subject: [Twisted-Python] Twisted success story
In-Reply-To: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>
References: <cd8fa6f90602010903t52183e27j59bc4df271c67480@mail.gmail.com>
Message-ID: <60ed19d40602040601m2a31751bx501dbd4870d44bda@mail.gmail.com>

On 2/2/06, christian simms <christian.simms at gmail.com> wrote:
> Botonomy LLC is a small software firm in the Philadelphia area.  We
> help small teams solve large problems.

Sorry for taking so long, but thanks for the success story. It's now
posted to the web site.



--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From jeff at taupro.com  Sun Feb  5 03:16:59 2006
From: jeff at taupro.com (Jeff Rush)
Date: Sun, 05 Feb 2006 04:16:59 -0600
Subject: [Twisted-Python] Booksigning Party at PyCon This Year!
Message-ID: <43E5D09B.6070904@taupro.com>

Because many authors of books related to Python will be in attendance at 
PyCon, we would like to organize a book signing activity.  It seems logical 
to hold it Saturday night at the party at the Nerdbooks.com bookstore. 
Bring your own books or buy new ones in the store!

And if you're an author in attendance who would like to promote your book, 
drop an email to "jeff at taupro.com" or come forward when we call the book 
signing to order in the store.

So that the bookstore can have copies on-hand, we'd like to collect a list 
of titles you'd consider having signed.  Please edit the following wiki page 
and add your choices.  Authors, you can add your books too.

   http://us.pycon.org/TX2006/BookSigning

-Jeff




From gustavo at grahal.net  Sun Feb  5 14:09:06 2006
From: gustavo at grahal.net (Gustavo Rahal)
Date: Sun, 05 Feb 2006 19:09:06 -0200
Subject: [Twisted-Python] xmlrpc and deferred result doubts
Message-ID: <ds5phm$p3p$1@sea.gmane.org>

Hi All


I have a doubt about how to factor the an xmlrpc server code.
Basicly what happens is:

def xmlrpc_runCmd(self, hostname, command):
    # I call a method that returns a deferred and because of that I
    # don't have anything to return to the xmlrpc client.
    runComm = conn.runCommand(hostname, command)
    # the line below doesn't make much sense because the output needs to
    # return to the xmlrpc client
    runComm.addCallback(self.printOutput)

    return ???? # return what?!?!?!?


What should I do? How should I factor the code?


Thanks
Gustavo




From exarkun at divmod.com  Sun Feb  5 14:44:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sun, 5 Feb 2006 16:44:44 -0500
Subject: [Twisted-Python] xmlrpc and deferred result doubts
In-Reply-To: <ds5phm$p3p$1@sea.gmane.org>
Message-ID: <20060205214444.2697.1559130036.divmod.quotient.8789@ohm>

On Sun, 05 Feb 2006 19:09:06 -0200, Gustavo Rahal <gustavo at grahal.net> wrote:
>Hi All
>
>
>I have a doubt about how to factor the an xmlrpc server code.
>Basicly what happens is:
>
>def xmlrpc_runCmd(self, hostname, command):
>    # I call a method that returns a deferred and because of that I
>    # don't have anything to return to the xmlrpc client.
>    runComm = conn.runCommand(hostname, command)
>    # the line below doesn't make much sense because the output needs to
>    # return to the xmlrpc client
>    runComm.addCallback(self.printOutput)

Return runComm instead.  Also, <mailto:twisted-web at twistedmatrix.com> for web questions.

Jean-Paul



From alengarbage at yahoo.com  Sun Feb  5 22:43:25 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sun, 5 Feb 2006 21:43:25 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com
Fri Feb 3 14:08:54 MST 2006 wrote:
>
> ...However, if
> you pass a true value for fireOnOneErrback when
> constructing your DeferredList, any Deferred which
> errbacks will cause the DeferredList to errback; in
> this case it will never callback.


  I think I must be missing something, but I can't
spot it.  Here's the smallest example I've come up
with:

import random
from twisted.internet import reactor, defer
from twisted.python import failure

def error(err, msg):
    print "failed: %s" % msg
    reactor.stop()

def success(result, msg):
    print "succeeded: %s" % msg
    reactor.stop()

def defer2seconds(prob=0.5):
    d = defer.Deferred()
    if random.random() < prob:
        print "  deferred will succeed in 2s"
        reactor.callLater(2, d.callback, True)
    else:
        print "  deferred will fail in 2s"
        reactor.callLater(2, d.errback, True)
    return d

def deferlist2seconds(prob=0.25, num=2):
    def itersuccess(result, i):
        print "  %i succeeded" % i
        return result

    def iterfail(err, i):
        print "  %i failed" % i

    dlist = []
    for i in range(num):
        d = defer2seconds(prob)
        d.addCallback(itersuccess, i)
        d.addErrback(iterfail, i)
        dlist.append(d)
    dl = defer.DeferredList(dlist,
            fireOnOneErrback=True)
    return dl

def testdlist():
    print "in testdlist"
    #d = defer2seconds(prob=0.5)
    d = deferlist2seconds(prob=0.5)
    d.addCallback(success, "testdlist")
    d.addErrback(error, "testdlist")

if __name__ == "__main__":
    testdlist()
    reactor.run()


The action here is really simple, with each deferred
randomly choosing to succeed or fail.  The testdlist
function can call either the simple, single-deferred
test or the multi-deferredlist test.  The goal here is
that the caller doesn't care what the underlying
function call does, in terms of Deferred v.
DeferredList.  When calling the simple test, the
results are as expected:


in testdlist
  deferred will fail in 2 seconds
failed: testdlist

in testdlist
  deferred will succeed in 2 seconds
succeeded: testdlist


But when calling the DeferredList test, it never gets
into the DeferredList's errback.

in testdlist
  deferred will succeed in 2 seconds
  deferred will succeed in 2 seconds
  0 succeeded
  1 succeeded
succeeded: testdlist

in testdlist
  deferred will fail in 2 seconds
  deferred will succeed in 2 seconds
  0 failed
  1 succeeded
succeeded: testdlist


Why isn't the DeferredList's errback being called in
this case?  It seems that no matter what I do (remove
the individual Deferreds' errbacks, change
fireOnOneErrback, etc), the DeferredList's callback
only is called.  This doesn't sound like what you'd
expect.  What am I doing wrong?  What must I do to get
the DeferredList's errback to fire when any single
Deferred in the list has its errback called?

Tested using twisted 2.1.

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From Brendan at BrendanSimon.com  Mon Feb  6 01:05:09 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Mon, 06 Feb 2006 19:05:09 +1100
Subject: [Twisted-Python] GUI application with Conch
Message-ID: <43E70335.3030406@BrendanSimon.com>

Hi,

I want to write a gui application (wxPython) that runs on MSW and talks 
to a Linux server that has an application that only runs on Posix based 
systems.  The current gui app runs on the Linux server and executes the 
commands directly using popen, but I want to make it flexible enough so 
that MSW users can run a local gui which will execute the commands on 
the Linux server and display the results locally.

My question is one of architectural design.  How is it best to structure 
the program so that it can use a remote shell connect (eg. ssh, or 
possibly other transports such as rsh, or rsh over a vpn, etc) as well 
as using direct calls to the utilities when running directly on the 
server ???

I've managed to get the sshsimpleclient.py going and talking to my linux 
server with my login and rsa keys :)
I notice that this sample is different to the documentation mentioned here:
    
http://twistedmatrix.com/projects/conch/documentation/howto/conch_client.html

The sshsimpleclient.py does not have the following statements:
    factory = protocol.ClientFactory()
    factory.protocol = ClientTransport
    reactor.connectTCP('localhost', 22, factory)
    reactor.run()

Is one better than the other?
Is one method better going forward into the future?

Also, the sshsimpleclient.py seems to have the closed() method called 
when issuing a command (eg. CatChannel, TrueChannel, etc).  How can I 
keep a channel open to run commands when I want ??

Cheers,
Brendan.




From therve at free.fr  Mon Feb  6 01:26:57 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 09:26:57 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>
References: <20060206054325.82300.qmail@web31504.mail.mud.yahoo.com>
Message-ID: <20060206092657.9o6re5s5xc0gwckk@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  I think I must be missing something, but I can't
> spot it.  Here's the smallest example I've come up
> with:

[snip]

>    def iterfail(err, i):
>        print "  %i failed" % i

The problem is here. You add an errback to your defer, but you stop the error
propagation by not returning err. Either do 'return err' or not
'addErrback(iterfail)'.

-- 
Thomas






From exarkun at divmod.com  Mon Feb  6 08:08:17 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 6 Feb 2006 10:08:17 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15836 - Start adding
 setMetadata to
 twisted.vfs, including the SFTP adapter and osfs backend.
In-Reply-To: <E1F62a3-0006EF-00@wolfwood>
Message-ID: <20060206150817.2697.1721396245.divmod.quotient.9727@ohm>

On Mon, 06 Feb 2006 02:22:43 -0700, Andrew Bennetts <spiv at wolfwood.twistedmatrix.com> wrote:
>Author: spiv
>Date: Mon Feb  6 02:22:43 2006
>New Revision: 15836
>
>Modified:
>   trunk/LICENSE
>   trunk/twisted/vfs/adapters/sftp.py
>   trunk/twisted/vfs/backends/osfs.py
>   trunk/twisted/vfs/ivfs.py
>   trunk/twisted/vfs/test/test_sftp.py
>Log:
>Start adding setMetadata to twisted.vfs, including the SFTP adapter and osfs backend.
>
>This work is contributed by Canonical Ltd -- I've updated the
>list of copyright holders in LICENSE to reflect this.
>

This commit introduced a new failure on the Win32 buildslave.  test_setAttrs fails like so:


[ERROR]: twisted.vfs.test.test_sftp.SFTPAdapterOSFSTest.test_setAttrs

  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\test\test_sftp.py", line 136, in test_setAttrs
    self.sftp.setAttrs('/ned', {'mtime': mtime})
  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\adapters\sftp.py", line 190, in setAttrs
    node.setMetadata(attrs)
  File "c:\buildslave\win32-select\W32-full2.4-select\Twisted\twisted\vfs\backends\osfs.py", line 57, in setMetadata
    os.utime(self.realPath, (atime, mtime))
exceptions.OSError: [Errno 13] Permission denied: 'twisted.vfs.test.test_sftp\\SFTPAdapterOSFSTest\\test_setAttrs\\ynojwi\\temp\\ned'



From alengarbage at yahoo.com  Mon Feb  6 08:39:35 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 07:39:35 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
>>    def iterfail(err, i):
>>        print "  %i failed" % i
>
> The problem is here. You add an errback to your
defer,
> but you stop the error propagation by not returning
> err. Either do 'return err' or not
> 'addErrback(iterfail)'.


  Thomas, thanks for the response.  I thought that
might be it, but no avail.  If I 'return err' in
iterfail, I get:

in testdlist
  deferred will fail in 2s
  deferred will succeed in 2s
  0 failed
failed: testdlist
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: <type 'bool'>: True
  1 succeeded


  If I instead comment out 'addErrback(iterfail,i)', I
get:

in testdlist
  deferred will fail in 2s
  deferred will succeed in 2s
failed: testdlist
Unhandled error in Deferred:
Traceback (most recent call last):
Failure: <type 'bool'>: True
  1 succeeded


  I don't know why the error is unhandled in either
case -- the DeferredList has an errback set.  (If I
raise a new error in iterfail, the same result occurs,
naturally).  It also doesn't seem to matter whether I
add 'fireOnOneErrBack' to the DeferredList constructor
or not.  Any ideas?  Does this code behave differently
on your machine?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 10:07:45 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 18:07:45 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>
References: <20060206153935.39312.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <20060206180745.lu5fbaty4g08c4oo@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  Thomas, thanks for the response.

You're welcome :).

> I thought that
> might be it, but no avail.  If I 'return err' in
> iterfail, I get:
>
[snip]
> Unhandled error in Deferred:

That's expected behaviour.

>  I don't know why the error is unhandled in either
> case -- the DeferredList has an errback set.  (If I
> raise a new error in iterfail, the same result occurs,
> naturally).  It also doesn't seem to matter whether I
> add 'fireOnOneErrBack' to the DeferredList constructor
> or not.  Any ideas?  Does this code behave differently
> on your machine?

The behaviour you want is provided by the option 'consumeErrors' of 
DeferredList
(you can see why here :
http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto8).

-- 
Thomas





From rudy at goldenhelix.com  Mon Feb  6 10:46:11 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Mon, 6 Feb 2006 10:46:11 -0700
Subject: [Twisted-Python] mx.DateTime jellyable?
Message-ID: <200602061046.11624.rudy@goldenhelix.com>

I see the support of the python datetime class, and read through the 
pb-copyable howto, but am still curious if there is a way to make a module 
classes jellyable (specifically mx.DateTime) without writting a wrapper 
class? My postgres database wrapper returns mx.DateTime and a lib on the 
client side expects mx.DateTime so it makes sense to keep it in that format.

I saw a message back in 2004 about working on the ability to register external 
serialization functions for new types.  Is that in place now?

I have seen some chatter in previous posts about mx.DateTime but could not 
find a definitive answer. i.e. "don't hack it, make it work without 
mx.DateTime", or "philosophically, what your doing would be insecure and not 
cross-language compatible (which pb is), hence your question is void.", or 
hopefully "check out xxx for external serialization"

Thanks
--gabe



From alengarbage at yahoo.com  Mon Feb  6 11:05:01 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 10:05:01 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
> The behaviour you want is provided by the
> option 'consumeErrors' of DeferredList
> (you can see why here :
>
http://twistedmatrix.com/projects/core/documentation/howto/defer.html#auto8).


  Aha, that's the piece I was missing!  Thank you for
pointing it out.

  Now, though, this leads me to one more question:
what if I want to wait until all the Deferreds have
fired (either err or callback), and only then call the
callback if all callbacks were fired, otherwise call
the errback?
  To accomplish this, I'm currently just 'wrapping'
the DeferredList in a regular Deferred.  It's callback
is always called on completion, so when it fires I
look at all the results given to the callback, and if
any have failed, raise an exception.  Otherwise I
return a result.
  This feels a little bit clunky, but I don't have a
good suggestion for improving it --
'fireOnErrbackAfterAllCompleted=True'?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 13:35:27 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 21:35:27 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>
References: <20060206180501.74252.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <20060206213527.nz17opmy0wowogk4@itchy.wasabout.net>

Quoting Lenny G Arbage <alengarbage at yahoo.com>:

>  Now, though, this leads me to one more question:
> what if I want to wait until all the Deferreds have
> fired (either err or callback), and only then call the
> callback if all callbacks were fired, otherwise call
> the errback?
>  To accomplish this, I'm currently just 'wrapping'
> the DeferredList in a regular Deferred.  It's callback
> is always called on completion, so when it fires I
> look at all the results given to the callback, and if
> any have failed, raise an exception.  Otherwise I
> return a result.
>  This feels a little bit clunky, but I don't have a
> good suggestion for improving it --
> 'fireOnErrbackAfterAllCompleted=True'?

Well that's near the default behaviour with fireOnOneErrback=False. 
Don't forget
you have the status of each requests in the result list. You could something
like this :

d = DeferredList(myList)
d.addCallback(mycb)

def mycb(results):
    ret = []
    # Warning clumsy code
    for code, res in results:
        if code == defer.FAILURE: # or 'not code'
             return failure.Failure(res)
        else: # defer.SUCCESS
             ret.append(res)
     return ret

But really, I don't see the point of this. If you want to have an exception
somewhere, use fireOnOneErrback. Else there's no need to build the 
result list,
if you're actually raising an Exception for *one* error.

-- 
Thomas





From davidh at ilm.com  Mon Feb  6 14:04:49 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:04:49 -0800
Subject: [Twisted-Python] Help: how to run something at shutdown time
Message-ID: <43E7B9F1.4090909@ilm.com>

I'm running an xmlrpc server using twisted xmlrpc. I use 
reactor.callWhenRunning() to do some setup when the server is started, 
but I need to also do some special shutdown steps when the server is 
stopped.

I don't see any callWhenStopped() or something to that effect...so is 
there a way to call specific methods when shutdown happens?
Any help is appreciated,
-David

-- 
Presenting:
mediocre nebula.




From alengarbage at yahoo.com  Mon Feb  6 14:23:39 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 13:23:39 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>

Thomas HERVE therve at free.fr wrote:
>
> But really, I don't see the point of this. 
> If you want to have an exception somewhere,
> use fireOnOneErrback. Else there's no need
> to build the result list, if you're
> actually raising an Exception for *one*
> error.

  What if the desired exception handling should occur
*after* all the Deferreds have fired, regardless of
whether they fired err or callback?

  This is particularly useful for p2p-style apps.  For
example, suppose I want to maintain a maximum of 20
outstanding requests for a given operation -- I don't
want to spin off another 20 (or another X) until I
know exactly how many of the original 20 failed and
how many succeeded.  (This type of operation is
common, for instance, when you are doing erasure
coding or shamir secret sharing, where you really only
need Y out of Z requests to succeed, but where you do
need to respawn W new requests if you didn't get Y
after the first round.)
  fireOnOneErrback doesn't seem to give me that
functionality -- it gets fired only once, for the
first failure.  I don't know which other of the 20
requests failed or will fail, and there may be
outstanding requests that will yet succeed that I'll
never learn about.

  I think I'm beginning to see, though, that this is
all accounted for by just letting the DeferredList's
callback get invoked, and wrapping it similarly to
what you posted.  My only complaint, as you pointed
out, is that this seems a bit clumsy.

  However, cluttering up the API with another special
flag to handle my border case where I want the
DeferredList's errback to be invoked just like the
callback, but only if => 1 of its Deferreds
errback'ed, may be even worse.  It sure would be handy
for me, however, so I'll likely create my own
SpecialDeferredList that does the wrapping behind the
scenes and fires the back() that I expect.

  Unless, of course, there is a better way.  Here's
what I'm currently using to wrap:

def DeferredListToDeferred(result):
    print " result was: %s" % result
    for code, res in result:
        if code == False:
            # assumes failed results have 
            # (False, failure) pairs, and
            # only returns the first of
            # these.
            return res
    return result



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From therve at free.fr  Mon Feb  6 14:43:59 2006
From: therve at free.fr (Thomas HERVE)
Date: Mon, 06 Feb 2006 22:43:59 +0100
Subject: [Twisted-Python] Help: how to run something at shutdown time
In-Reply-To: <43E7B9F1.4090909@ilm.com>
References: <43E7B9F1.4090909@ilm.com>
Message-ID: <20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>

Quoting David Hirschfield <davidh at ilm.com>:

> I don't see any callWhenStopped() or something to that effect...so is 
> there a way to call specific methods when shutdown happens?

Yes : reactor.addSystemEventTrigger('before', 'shutdown', func, args) 
(actually
callWhenRunning calls this method if reactor is not running).

-- 
Thomas




From davidh at ilm.com  Mon Feb  6 14:50:24 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:50:24 -0800
Subject: [Twisted-Python] Help: how to run something at shutdown time
In-Reply-To: <20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>
References: <43E7B9F1.4090909@ilm.com>
	<20060206224359.v9ubvdw30gwggkko@itchy.wasabout.net>
Message-ID: <43E7C4A0.4040401@ilm.com>

As you might have guessed, I'm something of a twisted newbie here.
That seems perfect.
Thanks much!
-Dave

Thomas HERVE wrote:

> Quoting David Hirschfield <davidh at ilm.com>:
>
>> I don't see any callWhenStopped() or something to that effect...so is 
>> there a way to call specific methods when shutdown happens?
>
>
> Yes : reactor.addSystemEventTrigger('before', 'shutdown', func, args) 
> (actually
> callWhenRunning calls this method if reactor is not running).
>

-- 
Presenting:
mediocre nebula.




From alengarbage at yahoo.com  Mon Feb  6 14:51:09 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 6 Feb 2006 13:51:09 -0800 (PST)
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
Message-ID: <20060206215109.67683.qmail@web31502.mail.mud.yahoo.com>

Actually, I suppose that,

        if code == False:
            # assumes failed results have 
            # (False, failure) pairs, and
            # only returns the first of
            # these.
            return res

could better be,

        if code == False:
            raise failure.DefaultException(result)

(so that the errback gets the full list).

Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From davidh at ilm.com  Mon Feb  6 14:58:09 2006
From: davidh at ilm.com (David Hirschfield)
Date: Mon, 06 Feb 2006 13:58:09 -0800
Subject: [Twisted-Python] Threading and twisted
Message-ID: <43E7C671.7050800@ilm.com>

I have some old server code that runs in multiple threads, and I'm in 
the process of converting the server to a twisted xmlrpc server.

The code basically has multiple worker threads all pulling from a 
thread-safe queue of requests to process. Threads pull requests at will 
from the queue and process them, placing results in a thread-safe object 
which is used to deliver results to clients. The request processing will 
often block doing I/O or sleep while waiting for processes to complete, 
which is why they run in threads.

My question is: can I keep the threaded system as-is and just use the 
xmlrpc system to add requests to the queue and pull results from it to 
deliver to clients, as long as the xmlrpc calls maintain thread safety 
when dealing with the shared queue and results object? Or, is it 
generally unsafe to use non-twisted threading in conjunction with a 
twisted app? Should I be using twisted's own thread pool and 
runInThread() system to do the request processing work?

It probably won't be too much work to change over the current code to 
use twisted's threading framework...but I'm just wondering where I might 
run into trouble if I use the current setup instead. Am I endangering 
the xmlrpc server's ability to respond to requests if I have threads 
that aren't under twisted's control?

Thanks for your help,
-Dave

-- 
Presenting:
mediocre nebula.




From itamar at itamarst.org  Mon Feb  6 15:27:53 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 06 Feb 2006 17:27:53 -0500
Subject: [Twisted-Python] Threading and twisted
In-Reply-To: <43E7C671.7050800@ilm.com>
References: <43E7C671.7050800@ilm.com>
Message-ID: <1139264874.9162.33.camel@localhost.localdomain>

On Mon, 2006-02-06 at 13:58 -0800, David Hirschfield wrote:

> My question is: can I keep the threaded system as-is and just use the 
> xmlrpc system to add requests to the queue and pull results from it to 
> deliver to clients, as long as the xmlrpc calls maintain thread safety 
> when dealing with the shared queue and results object? Or, is it 
> generally unsafe to use non-twisted threading in conjunction with a 
> twisted app? Should I be using twisted's own thread pool and 
> runInThread() system to do the request processing work?

Twisted has a built-in thread pool. Lets say you have a function called
runTask(t) which is supposed to run on a specific task, and is known to
be thread-safe (e.g. doesn't call into Twisted). You can then do:

def xmlrpc_runtask(self, t):
    return twisted.internet.threads.deferToThread(runTask, t)

See
http://twistedmatrix.com/projects/core/documentation/howto/threading.html

You can do something similar with your own thread pool. The key is that
threads can schedule callables to run in Twisted thread using
reactor.callFromThread(). You don't want to do anything blocking (e.g.
reading from Queue) in the Twisted thread.




From nico at tekNico.net  Tue Feb  7 01:17:05 2006
From: nico at tekNico.net (Nicola Larosa)
Date: Tue, 07 Feb 2006 09:17:05 +0100
Subject: [Twisted-Python] Re: Making DeferredList look like Deferred
In-Reply-To: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>
References: <20060206212339.60186.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <ds9l22$8ng$1@sea.gmane.org>

>   This is particularly useful for p2p-style apps.  For
> example, suppose I want to maintain a maximum of 20
> outstanding requests for a given operation -- I don't
> want to spin off another 20 (or another X) until I
> know exactly how many of the original 20 failed and
> how many succeeded.

You may want to use twisted.internet.defer.DeferredQueue for this.

-- 
Nicola Larosa - http://www.tekNico.net/

How do we "make poverty history"? We make naivety history.
We make ignorance of the forces manipulating the world history.
We make ignorance of their agenda history. Without that,
nothing can change. -- David Icke, November 2005




From neuzhoundxx at yahoo.com  Tue Feb  7 07:59:54 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Tue, 7 Feb 2006 06:59:54 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060204012735.2697.148719091.divmod.quotient.6459@ohm>
Message-ID: <20060207145954.31194.qmail@web36709.mail.mud.yahoo.com>

This client code is making connections to a legacy app.  I do have Java code that simulates what the server side essentially does and this client code does seem to
  work as expected when run against that server code:
   
  commandline=python dd.py localhost 140 W04FSRV W04PS01 2
   
  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
conn1 TRANS CODE= 998
  conn1 sending server data ...
conn1 finished sending server data
conn1 connection lost
conn1 Connection lost - goodbye!
conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  -------------------------------------------------------------------
  When run against the legacy app on <ip address>, only one connection seems to be 
  working (see output below).  Also, when I run the code one connection at a time, 
  the code works.
   
  Any suggestion what I can do on the client side to help me debug?
  I noticed there's log.msg()'s in the twisted code.  Would they have printed out
  on the dos console (i'm using windows xp as the client machine) if they had
  occurred?
   
  Also, one difference between the two "invocations" (connecting to java server code vs connecting to legacy app) is the port. For connecting to the java server code on localhost, the "remote" port is 140; for connecting  to the legacy app, the remote port
  is the usual NBT port 139. i don't think this should matter; just thought i'd mention it...
   
  commandline= python dd.py <ip address> 139 W04FSRV W04PS01 2

  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  glyph at divmod.com wrote:
  
On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter wrote:

> With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to. Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times? Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data. Depending on which prints are actually commented out or not that might look like hanging :)

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  


			
---------------------------------
 Yahoo! Mail - Helps protect you from nasty viruses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060207/9e4c57ea/attachment.html>

From neuzhoundxx at yahoo.com  Tue Feb  7 08:52:22 2006
From: neuzhoundxx at yahoo.com (john peter)
Date: Tue, 7 Feb 2006 07:52:22 -0800 (PST)
Subject: [Twisted-Python] help with deferreds??
In-Reply-To: <20060207145954.31194.qmail@web36709.mail.mud.yahoo.com>
Message-ID: <20060207155222.96627.qmail@web36712.mail.mud.yahoo.com>

Hi all!  After I asked someone to take a look at our legacy app setup, this code seems to work now!

john peter <neuzhoundxx at yahoo.com> wrote:    This client code is making connections to a legacy app.  I do have Java code that simulates what the server side essentially does and this client code does seem to
  work as expected when run against that server code:
   
  commandline=python dd.py localhost 140 W04FSRV W04PS01 2
   
  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn1 Server said: '\x82\x00\x00\x00'
conn1 Positive Service Response Packet received!
conn1 TRANS CODE= 998
  conn1 sending server data ...
conn1 finished sending server data
conn1 connection lost
conn1 Connection lost - goodbye!
conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  -------------------------------------------------------------------
  When run against the legacy app on <ip address>, only one connection seems to be 
  working (see output below).  Also, when I run the code one connection at a time, 
  the code works.
   
  Any suggestion what I can do on the client side to help me debug?
  I noticed there's log.msg()'s in the twisted code.  Would they have printed out
  on the dos console (i'm using windows xp as the client machine) if they had
  occurred?
   
  Also, one difference between the two "invocations" (connecting to java server code vs connecting to legacy app) is the port. For connecting to the java server code on localhost, the "remote" port is 140; for connecting  to the legacy app, the remote port
  is the usual NBT port 139. i don't think this should matter; just thought i'd mention it...
   
  commandline= python dd.py <ip address> 139 W04FSRV W04PS01 2

  buildProtocol with myName= W04PS01 instanceName= conn1
  conn1 connection made. requesting session establishment ...
myName= W04PS01   remoteName= W04FSRV
  buildProtocol with myName= W04BS03 instanceName= conn2
  conn2 connection made. requesting session establishment ...
myName= W04BS03   remoteName= W04FSRV
  conn2 Server said: '\x82\x00\x00\x00'
conn2 Positive Service Response Packet received!
conn2 TRANS CODE= 998
  conn2 sending server data ...
conn2 finished sending server data
conn2 connection lost
conn2 Connection lost - goodbye!

  glyph at divmod.com wrote:
  
On Fri, 3 Feb 2006 07:42:27 -0800 (PST), john peter wrote:

> With my initial attempt using Twisted, only one connection seems to succeed, and the other basically hangs.

This isn't quite a "minimal" example, since I don't have access to the server side that this code is expecting to talk to. Have you tried setting up a simpler server which does a listenTCP and then a server which does connectTCP to it multiple times? Does that work?

One thing that occurs to me is that if the first byte of the connection is not \x82 it will be disconnected immediately; the dataReceived you've written doesn't actually parse any protocol data. Depending on which prints are actually commented out or not that might look like hanging :)

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
  

    
---------------------------------
  Yahoo! Mail - Helps protect you from nasty viruses._______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



			
---------------------------------
 Yahoo! Mail - Helps protect you from nasty viruses.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060207/ef741aa4/attachment.html>

From foom at fuhm.net  Tue Feb  7 23:00:07 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 08 Feb 2006 00:00:07 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1F6iN4-0007Jg-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-01 06:00:02.340000:
 Bugs opened: 13   Bugs closed: 5   Total open bugs: 553 (+8)
  Urgent: 3 (+0)
  Bug: 268 (+4)
  Feature: 188 (+1)
  Wish: 94 (+3)

New / Reopened Bugs
______________________
                    ==== Bug ====
iocpreactor ignores pauseProducing from inside dataReceived  (3 hours ago)
       http://twistedmatrix.com/bugs/issue1473 opened by ghazel

[TESTS, TRIAL] test_reporter.TestErrorReporting.test_timing uses clock and tests many things  (4 days ago)
       http://twistedmatrix.com/bugs/issue1470 opened by jml

fix twisted.web2 log format to comply with apache  (4 days ago)
       http://twistedmatrix.com/bugs/issue1469 opened by andrea

[CONCH] Conch FileTransferClient breaks on STATUS packet without message  (6 days ago)
       http://twistedmatrix.com/bugs/issue1463 opened by bwh

fix exception in twisted.web2 makeUnsatisfiable  (5 days ago)
       http://twistedmatrix.com/bugs/issue1465 opened by andrea

[DOCUMENTATION] small bug in the example in documentation/howto  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1464 opened by andyl

[WEB2] static.Data fix  (6 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1462 opened by andrea

win32reactor spawnProcess incorrectly escapes cmd line  (6 months ago)
       http://twistedmatrix.com/bugs/issue1123 opened by justinj

                    ==== Feature ====
[WEB2] Additional address(es) in access.log  (4 days ago)
       http://twistedmatrix.com/bugs/issue1468 opened by jwashin

                    ==== Wish ====
[CORE, WIN32] Consistent cross-platform handling of connectTCP(INADDR_ANY, ...)  (yesterday)
       http://twistedmatrix.com/bugs/issue1472 opened by glyph

replace StopTraversal with () or []  (yesterday)
       http://twistedmatrix.com/bugs/issue1471 opened by andrea

[WEBSITE] TwistedWeb2 version mismatch (0.1 / 0.1.0)  (4 days ago)
       http://twistedmatrix.com/bugs/issue1467 opened by doko

[WEBSITE] one html page to get an overview of current released versions  (4 days ago)
       http://twistedmatrix.com/bugs/issue1466 opened by doko

Bugs Closed
______________________
                    ==== Bug ====
[CORE, WIN32] spawnProcess in default reactor for win32 is broken  (1 week ago)
       http://twistedmatrix.com/bugs/issue1457 opened by justinj, closed by glyph

[CORE, WIN32] twisted.internet.process.Process and twisted.internet.win32eventreactor.Process do not implement IConsumer - also they don't work  (19 months ago)
       http://twistedmatrix.com/bugs/issue654 opened by glyph, closed by exarkun

[DEFERRED, DOCUMENTATION] Error in documentation (deferred timeout example) at http://twistedmatrix.com/projects/core/documentation/howto/deferrecipes.html  (3 months ago)
       http://twistedmatrix.com/bugs/issue1289 opened by szumo, closed by exarkun

[DOCUMENTATION] small bug in the example in documentation/howto  (6 days ago)
       http://twistedmatrix.com/bugs/issue1464 opened by andyl, closed by spiv

[WEB2] static.Data fix  (6 days ago)
       http://twistedmatrix.com/bugs/issue1462 opened by andrea, closed by wsanchez




From alengarbage at yahoo.com  Wed Feb  8 11:23:30 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 8 Feb 2006 10:23:30 -0800 (PST)
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
Message-ID: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>

I think I'm seeing a difference between when a
deferred's callback is invoked and when the .called
member variable is set, and was hoping someone might
be able to explain.

(And let me apologize in advance if what I'm trying to
do is hairbrained or in some way abusive to the
methodology...)

First, a little context.  I have some code that I use
to test with, and it follows the standard deferred
chaining pattern, i.e.,

def alldone(res):
    pass

def trial3(res, ...):
    ...
    d.addCallback(alldone)
    ...

def trial2(res, ...):
    ...
    d.addCallback(trial3)
    ...

def trial1(...):
    ...
    d = someFunc1(...)
    d.addCallback(trial2)
    ...

def maintest():
    trial1(...)


...and I wanted to try putting all the trial
invocations down in maintest, but still wait for the
result of a preceeding test before invoking the next,
so I made up a little function that does, basically,

def waitForDeferredResult(d):
    while not d.called:
        reactor.iteratoe(0.1)
    return d.result


...and then,

def maintest():
    d1 = trial1()
    res1 = waitForDeferredResult(d1)
    d2 = trial2(res1)
    res2 = waitForDeferredResult(d2)
    ...


Perhaps this is hairbrained, as the first strategy
works perfectly, but it sure would make it easier to
comment out one or two (or all but one or two) tests
when I just want to focus on hacking on that
functionality.

However, the while loop in waitForDeferredResult ends
(.called == True) before the callback is actually
called in the case where the the Deferred in the trial
is also chained.  For example, if someFunc1() is set
up something like this:

someFunc1():
    d = someFunc1-1()
    return d

someFunc1-1():
    d = threads.deferToThread(someThing)
    d.addCallback(someFunc1-2)
    return d

someFunc1-2():
    d = threads.deferToThread(someOtherThing)
    return d

...then it appears that .called becomes true after the
deferred in someFunc1-1() returns, but before
someFunc1-2() is invoked.  If, on the other hand, I
chain from one trialX() to the next (as in the top
example) the callback isn't invoked until after
someFunc1-2() returns.  Anyone know why?

Thanks,
Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From itamar at itamarst.org  Wed Feb  8 11:45:11 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 08 Feb 2006 13:45:11 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
References: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
Message-ID: <1139424311.9309.17.camel@localhost.localdomain>

On Wed, 2006-02-08 at 10:23 -0800, Lenny G Arbage wrote:

> def waitForDeferredResult(d):
>     while not d.called:
>         reactor.iteratoe(0.1)
>     return d.result

Don't do that. Trial tests support returning Deferreds, and if necessary
used with deferredGenerator you can make tests that don't involve
defining a lot of callback functions. Do not reactor.iterate() yourself.

Deferred.result and Deferred.called are private if I'm not mistaken.
Don't use them.





From exarkun at divmod.com  Wed Feb  8 11:53:35 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 8 Feb 2006 13:53:35 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060208182330.54389.qmail@web31515.mail.mud.yahoo.com>
Message-ID: <20060208185335.2697.1824416698.divmod.quotient.12580@ohm>

On Wed, 8 Feb 2006 10:23:30 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>I think I'm seeing a difference between when a
>deferred's callback is invoked and when the .called
>member variable is set, and was hoping someone might
>be able to explain.
>
>(And let me apologize in advance if what I'm trying to
>do is hairbrained or in some way abusive to the
>methodology...)
>
>First, a little context.  I have some code that I use
>to test with, and it follows the standard deferred
>chaining pattern, i.e.,

Are you using trial?  If you use trial, testing Deferreds gets a lot easier.  If you're not using trial, you probably want to be using trial.

>
> [snip - some things that look like unit tests but don't use trial]
>
>...and I wanted to try putting all the trial
>invocations down in maintest, but still wait for the
>result of a preceeding test before invoking the next,
>so I made up a little function that does, basically,

Fortunately, waiting on things is what Deferreds do best.  Your maintest function (should you choose not to use trial, which there is basically no reason to do, so use trial) might look like this:

def maintest():
    tests = [test1, test2, test3]

    def runATest():
        if tests:
            d = tests.pop(0)()
            d.addCallback(lambda _: runATest())
            return d
    return runATest()

Now you can wait on the Deferred maintest returns.  Of course, you should really just use trial, since it handles all this for you, and with quite a few extra handy features as well.

>
>def waitForDeferredResult(d):
>    while not d.called:
>        reactor.iteratoe(0.1)
>    return d.result
>

This function is broken.  d.called isn't really public.  d.result isn't really public.  reactor.iterate() isn't really public.  You cannot poll a Deferred like this and expect it to work.  Lots of people have tried.  It just can't be done.

>
> [snip - description of why waitForDeferredResult doesn't work]
>

When you want to run some code after a Deferred has fired, put the code in a function, add the function as a callback.  That's the only supported way to do this.  It's the entire purpose of Deferreds.  It works wonderfully. :)

Jean-Paul



From Brendan at BrendanSimon.com  Thu Feb  9 05:37:11 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Thu, 09 Feb 2006 23:37:11 +1100
Subject: [Twisted-Python] Conch: multiple commands
Message-ID: <43EB3777.4010400@BrendanSimon.com>

I'm trying to use and understand the latest Twisted and Conch (I'm a 
newbie).  I can get teh sample apps going fine but they all seem to send 
one command and then exit.  I'm trying to workout how to send multiple 
commands to the server from the same client application.

The sshsimpleclient.py does send multiple commands (false, true, cat) 
with separate channels.
Is that the preferred way to send multiple commands?
Doesn't that require some setup overhead every time I want to issue a 
command to the server?

Is it possible to open _one_ channel, and send commands in a 
synchronously?  ie. wait for commands to return output and then issue 
other commands if necesary??
Maybe this goes against the grain of the Twisted Asynchronous Framework ???

If I assume that I have to open a new channel for each command, and I 
have a 100 different commands, I could have 100 classes for each command 
(seems a bit extreme) or have one class that gets the command passed to 
it.  The problem I see with the latter is that I don't know how to wait 
until the first command has got a reply and is finished.  It seems that 
the channelOpen method returns straight away.  How can I control the 
program execution to wait for the response, error or timeout?  Example:
    def servicesStarted(self):
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
        # how do I wait for list of dir1 to finish?
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
        # how do I wait for list of dir2 to finish?
        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
        # how do I wait for list of dir3 to finish?

Thanks,
Brendan.




From paulswartz at gmail.com  Thu Feb  9 08:14:20 2006
From: paulswartz at gmail.com (Paul Swartz)
Date: Thu, 09 Feb 2006 10:14:20 -0500
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EB3777.4010400@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
Message-ID: <43EB5C4C.4030900@gmail.com>

Brendan Simon wrote:
> I'm trying to use and understand the latest Twisted and Conch (I'm a 
> newbie).  I can get teh sample apps going fine but they all seem to send 
> one command and then exit.  I'm trying to workout how to send multiple 
> commands to the server from the same client application.
> 
> The sshsimpleclient.py does send multiple commands (false, true, cat) 
> with separate channels.
> Is that the preferred way to send multiple commands?
> Doesn't that require some setup overhead every time I want to issue a 
> command to the server?

That's the way SSH requires sending multiple commands.  It does require 
some server overhead, but there's no way around that.

> Is it possible to open _one_ channel, and send commands in a 
> synchronously?  ie. wait for commands to return output and then issue 
> other commands if necesary??
> Maybe this goes against the grain of the Twisted Asynchronous Framework ???

You can send one command at a time, but you still have to write the code 
asynchronously.

> If I assume that I have to open a new channel for each command, and I 
> have a 100 different commands, I could have 100 classes for each command 
> (seems a bit extreme) or have one class that gets the command passed to 
> it.  The problem I see with the latter is that I don't know how to wait 
> until the first command has got a reply and is finished.  It seems that 
> the channelOpen method returns straight away.  How can I control the 
> program execution to wait for the response, error or timeout?  Example:
>    def servicesStarted(self):
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
>        # how do I wait for list of dir1 to finish?
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
>        # how do I wait for list of dir2 to finish?
>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
>        # how do I wait for list of dir3 to finish?
> 

What I'd do is also pass a Deferred to CommandChannel, that is 
call/errbacked when the command finishes.

def servicesStarted(self):
     d = defer.Deferred()
     d.addCallback(self._cbFirstLs)
     d.addErrback(self._ebFirstLs)
     self.openChannel(CommandChannel(d, "ls /tmp/dir1"))

def _cbFirstLs(self, result):
     print 'directory listing', result
     d = defer.Deferred()
     self.openChannel(CommandChannel(d, "ls /tmp/dir2"))

def _ebFirstLs(self, f):
     log.err()

etc., for all the commands you want to run.

-p
-- 
Paul Swartz
paulswartz at gmail dot com
http://z3p.livejournal.com/
AIM: z3penguin
GPG: 5CF0B1C9



From rudy at goldenhelix.com  Thu Feb  9 09:26:31 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 9 Feb 2006 09:26:31 -0700
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EB3777.4010400@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
Message-ID: <200602090926.32097.rudy@goldenhelix.com>

On Thursday 09 February 2006 5:37 am, Brendan Simon wrote:
> The sshsimpleclient.py does send multiple commands (false, true, cat)
> with separate channels.
> Is that the preferred way to send multiple commands?
> Doesn't that require some setup overhead every time I want to issue a
> command to the server?
>
> Is it possible to open _one_ channel, and send commands in a
> synchronously?  ie. wait for commands to return output and then issue
> other commands if necesary??
> Maybe this goes against the grain of the Twisted Asynchronous Framework ???

The other thing to note is that each time you open a channel, you are getting 
a fresh environment. So if your series of commands depends of env vars or 
directory changes you need to do something to ensure each command is in the 
environment it expects.

So instead of
...
self.openChannel(CommandChannel(d, "svn co blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "make"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "tar -czf ../thing.tar.gz outfile"))

you might want
...
self.openChannel(CommandChannel(d, "svn co blah"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah; make"))
...(deferred stuff)...
self.openChannel(CommandChannel(d, "cd blah; tar -czf ../thing.tar.gz 
outfile"))

--gabe




From itamar at itamarst.org  Thu Feb  9 09:48:48 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Feb 2006 11:48:48 -0500
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <200602090926.32097.rudy@goldenhelix.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
Message-ID: <1139503729.9105.19.camel@localhost.localdomain>

On Thu, 2006-02-09 at 09:26 -0700, Gabe Rudy wrote:

> The other thing to note is that each time you open a channel, you are getting 
> a fresh environment. So if your series of commands depends of env vars or 
> directory changes you need to do something to ensure each command is in the 
> environment it expects.

You could also copy over a shell script and run it, if you're not doing
a lot of result parsing.




From alengarbage at yahoo.com  Thu Feb  9 11:09:42 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 9 Feb 2006 10:09:42 -0800 (PST)
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
Message-ID: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>

Jean-Paul Calderone exarkun at divmod.com wrote:
>>def waitForDeferredResult(d):
>>    while not d.called:
>>        reactor.iteratoe(0.1)
>>    return d.result
>>
>
> This function is broken.  d.called isn't really
> public.  d.result isn't really public.
> reactor.iterate() isn't really public. 
> You cannot poll a Deferred like this and expect
> it to work.  Lots of people have tried.  It
> just can't be done.


  Okay, I have repented and waitForDeferredResult()
has been terminated.  I will return to saner methods.

  BTW, trial is really nice.  You may find it somewhat
ironic that I actually got the idea for using
reactor.iterate() from the trial howto
(http://twisted.sourceforge.net/TwistedDocs-1.2.0rc3/howto/test-standard.html)

Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From foom at fuhm.net  Thu Feb  9 11:34:29 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 9 Feb 2006 13:34:29 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15860 - Move
	checkPreconditions() from web2.dav.static.DAVFile to
	web2.resource.RenderMixIn.
In-Reply-To: <E1F700I-0000rf-00@wolfwood>
References: <E1F700I-0000rf-00@wolfwood>
Message-ID: <DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>

On Feb 8, 2006, at 7:49 PM, Wilfredo Sanchez wrote:
> Move checkPreconditions() from web2.dav.static.DAVFile to  
> web2.resource.RenderMixIn.
> Add test suite (ported foom's tests for server.checkpreconditions()).
> Fix some bugs found by the tests.  (Holy cow, checkpreconditions  
> are a PITA.)

I don't like this part. You've made the precondition check code much  
longer, IMO harder to understand (figuring out how the return values  
of one method influenced the rest of the execution is not easy), and  
pinned it to being part of Resource, rather than being reusable. I'm  
not sure of the need, given that the previous implementation was  
callable from Resource as it was. Why not just use it...

Nextly, I'm somewhat concerned about the change to calling the  
precondition check before GET rendering instead of afterwards: I  
think your use cases are probably not typical. I believe most people  
will write resources which generate dynamic content, and if they're  
_really good_ about it, they'll simultaneously generate an etag and a  
last-modified time. This is also the only way that such information  
can come out of wsgi, cgi, proxies to other servers, etc.

The way things were set up before made Not Modified responses just  
"magically" show up correctly when you set those headers in your  
response. No more interface was required than that, which means that  
the response could come from anywhere. Now, instead, you force the  
author to implement resource.etag() and resource.lastModified() in  
order to get that behavior. It's really easy for file-like resources  
to do so, but not so much so for most other kinds.

And the thing is, it's OK to check afterwards for the kinds of  
requests a web browser makes: GET/HEAD/POST. GET/HEAD don't change  
things so it's acceptable to do their check at any time, and while  
POST does change things, as a practical matter nobody actually sends  
conditionals on post requests, because what would it be useful for?  
(and nothing would be set up to handle such a thing).

However, I'm currently ignoring conditionals on PostableResource's  
http_POST, which while okay as far as real-world interoperability  
goes, it is certainly not _right_. And to make things worse, the post- 
processing filter doesn't confine itself to checking only GET/HEAD  
requests, so the client will get back a precondition failed message,  
even though the method was executed. At the very least a POST with an  
If-Unmodified-Since/If-Match should return precondition failed. If  
there was code on Resource to handle that automatically, I could not  
have forgetten to do it.

So, um, I dunno what to conclude. :)

James



From foom at fuhm.net  Thu Feb  9 11:45:14 2006
From: foom at fuhm.net (James Y Knight)
Date: Thu, 9 Feb 2006 13:45:14 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15860 - Move
	checkPreconditions() from web2.dav.static.DAVFile to
	web2.resource.RenderMixIn.
In-Reply-To: <DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
References: <E1F700I-0000rf-00@wolfwood>
	<DAEC1B54-449A-401E-88F5-778975DBB43F@fuhm.net>
Message-ID: <737CEC70-C9AF-49FD-9851-687DBDD8CC71@fuhm.net>

Sorry, I meant to send this to twisted-web instead. Plz make any  
reply there, instead.

James

On Feb 9, 2006, at 1:34 PM, James Y Knight wrote:
> On Feb 8, 2006, at 7:49 PM, Wilfredo Sanchez wrote:
>> Move checkPreconditions() from web2.dav.static.DAVFile to  
>> web2.resource.RenderMixIn.
>> Add test suite (ported foom's tests for server.checkpreconditions()).
>> Fix some bugs found by the tests.  (Holy cow, checkpreconditions  
>> are a PITA.)
>
> I don't like this part. You've made the precondition check code  
> much longer, IMO harder to understand (figuring out how the return  
> values of one method influenced the rest of the execution is not  
> easy), and pinned it to being part of Resource, rather than being  
> reusable. I'm not sure of the need, given that the previous  
> implementation was callable from Resource as it was. Why not just  
> use it...
>
> Nextly, I'm somewhat concerned about the change to calling the  
> precondition check before GET rendering instead of afterwards: I  
> think your use cases are probably not typical. I believe most  
> people will write resources which generate dynamic content, and if  
> they're _really good_ about it, they'll simultaneously generate an  
> etag and a last-modified time. This is also the only way that such  
> information can come out of wsgi, cgi, proxies to other servers, etc.
>
> The way things were set up before made Not Modified responses just  
> "magically" show up correctly when you set those headers in your  
> response. No more interface was required than that, which means  
> that the response could come from anywhere. Now, instead, you force  
> the author to implement resource.etag() and resource.lastModified()  
> in order to get that behavior. It's really easy for file-like  
> resources to do so, but not so much so for most other kinds.
>
> And the thing is, it's OK to check afterwards for the kinds of  
> requests a web browser makes: GET/HEAD/POST. GET/HEAD don't change  
> things so it's acceptable to do their check at any time, and while  
> POST does change things, as a practical matter nobody actually  
> sends conditionals on post requests, because what would it be  
> useful for? (and nothing would be set up to handle such a thing).
>
> However, I'm currently ignoring conditionals on PostableResource's  
> http_POST, which while okay as far as real-world interoperability  
> goes, it is certainly not _right_. And to make things worse, the  
> post-processing filter doesn't confine itself to checking only GET/ 
> HEAD requests, so the client will get back a precondition failed  
> message, even though the method was executed. At the very least a  
> POST with an If-Unmodified-Since/If-Match should return  
> precondition failed. If there was code on Resource to handle that  
> automatically, I could not have forgetten to do it.
>
> So, um, I dunno what to conclude. :)
>
> James
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From itamar at itamarst.org  Thu Feb  9 12:02:18 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 09 Feb 2006 14:02:18 -0500
Subject: [Twisted-Python] Deferred.callback() v. Deferred.called
In-Reply-To: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>
References: <20060209180942.43633.qmail@web31514.mail.mud.yahoo.com>
Message-ID: <1139511738.9105.47.camel@localhost.localdomain>

On Thu, 2006-02-09 at 10:09 -0800, Lenny G Arbage wrote:

>   BTW, trial is really nice.  You may find it somewhat
> ironic that I actually got the idea for using
> reactor.iterate() from the trial howto
> (http://twisted.sourceforge.net/TwistedDocs-1.2.0rc3/howto/test-standard.html)

Yeah... we used to do it that way too, so we learned why it's a bad idea
the hard way.

Those are really old docs btw, seeing as Twisted is up to version 2.1.




From duncan.mcgreggor at gmail.com  Thu Feb  9 13:16:04 2006
From: duncan.mcgreggor at gmail.com (Duncan McGreggor)
Date: Thu, 9 Feb 2006 13:16:04 -0700
Subject: [Twisted-Python] sprinting at PyCon
Message-ID: <cded6a71e8e3e24a56871392cb360e35@gmail.com>

 From an email exchange with dreid:

> From: David Reid <dreid at dreid.org>
> Date: February 9, 2006 1:04:30 PM MST
> To: Duncan McGreggor <duncan.mcgreggor at gmail.com>
> Subject: Re: t.w.xmlrpc Basic Auth patch
>
>>> Help is always great, unfortunately the web2 client isn't _done_ yet.
>>> It has pretty decent test coverage and works fairly well but doesn't
>>> have any high level api.  I'm not sure when that stuff will get done.
>>> If you're interested in the XML-RPC server side that'd be great. :)
>>
>> Awesome. Perfect for sprinting at pycon.
>
> I don't think foom or I are going to be there. Perhaps some benefit
> might come of organizing a virtual sprint to coincide with pycon's
> sprints. :(

I will be at pycon this year. I had planned on sprinting with some of 
my own projects, but I can do that anytime. I'd much rather do some 
group work, even if it's virtual sprinting with those that can't be 
there.

Is there any interest in a sprint/vsprint? In particular, I want to 
help with t.w2 xmlrpc (server, maybe some client work). Any thoughts? 
What about #twisted.pycon or some such?

d




From Brendan at BrendanSimon.com  Thu Feb  9 14:02:40 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 08:02:40 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
Message-ID: <43EBADF0.6040802@BrendanSimon.com>

Paul Swartz <paulswartz at gmail.com> wrote:
>> Is it possible to open _one_ channel, and send commands in a 
>> synchronously?  ie. wait for commands to return output and then issue 
>> other commands if necesary??
>> Maybe this goes against the grain of the Twisted Asynchronous Framework ???
>>     
> You can send one command at a time, but you still have to write the code 
> asynchronously.
>   
I think this is half my problem, working out how to use the asynchronous 
framework properly ;-)

>>    def servicesStarted(self):
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir1')
>>        # how do I wait for list of dir1 to finish?
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir2')
>>        # how do I wait for list of dir2 to finish?
>>        self.openChannel(CommandChannel.openChannel('ls /tmp/dir3')
>>        # how do I wait for list of dir3 to finish?
>>     
> What I'd do is also pass a Deferred to CommandChannel, that is 
> call/errbacked when the command finishes.
>
> def servicesStarted(self):
>      d = defer.Deferred()
>      d.addCallback(self._cbFirstLs)
>      d.addErrback(self._ebFirstLs)
>      self.openChannel(CommandChannel(d, "ls /tmp/dir1"))
>
> def _cbFirstLs(self, result):
>      print 'directory listing', result
>      d = defer.Deferred()
>      self.openChannel(CommandChannel(d, "ls /tmp/dir2"))
>
> def _ebFirstLs(self, f):
>      log.err()
>
> etc., for all the commands you want to run.
>   
Thanks.  I'll play with this a little more.  Guess I may need some kind 
of state machine in the callback function if different unrelated 
commands are to be sent at different times based on various application 
events.  Does that sound like a good way to use Twisted???

Thanks,
Brendan.




From Brendan at BrendanSimon.com  Thu Feb  9 14:06:52 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 08:06:52 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <200602090926.32097.rudy@goldenhelix.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
Message-ID: <43EBAEEC.2090701@BrendanSimon.com>

Gabe Rudy wrote:
> On Thursday 09 February 2006 5:37 am, Brendan Simon wrote:
>   
>> The sshsimpleclient.py does send multiple commands (false, true, cat)
>> with separate channels.
>> Is that the preferred way to send multiple commands?
>> Doesn't that require some setup overhead every time I want to issue a
>> command to the server?
>>
>> Is it possible to open _one_ channel, and send commands in a
>> synchronously?  ie. wait for commands to return output and then issue
>> other commands if necesary??
>> Maybe this goes against the grain of the Twisted Asynchronous Framework ???
>>     
>
> The other thing to note is that each time you open a channel, you are getting 
> a fresh environment. So if your series of commands depends of env vars or 
> directory changes you need to do something to ensure each command is in the 
> environment it expects.
>
> So instead of
> ...
> self.openChannel(CommandChannel(d, "svn co blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "make"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "tar -czf ../thing.tar.gz outfile"))
>
> you might want
> ...
> self.openChannel(CommandChannel(d, "svn co blah"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah; make"))
> ...(deferred stuff)...
> self.openChannel(CommandChannel(d, "cd blah; tar -czf ../thing.tar.gz 
> outfile"))
>   
Or maybe create a script, send it to the server, (chmod it ???) and then 
run it.  Does that sound reasonable?

Cheers,
Brendan.




From rudy at goldenhelix.com  Thu Feb  9 14:54:26 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 9 Feb 2006 14:54:26 -0700
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EBAEEC.2090701@BrendanSimon.com>
References: <43EB3777.4010400@BrendanSimon.com>
	<200602090926.32097.rudy@goldenhelix.com>
	<43EBAEEC.2090701@BrendanSimon.com>
Message-ID: <200602091454.27188.rudy@goldenhelix.com>

On Thursday 09 February 2006 2:06 pm, Brendan Simon wrote:
>
> Or maybe create a script, send it to the server, (chmod it ???) and then
> run it.  Does that sound reasonable?
>
> Cheers,
> Brendan.

It does, but what would you use to send the script to the server? Conch can 
supposedly to scp but I have yet to see a clear example on how. You could use 
external scp but then you would have to figure out the authentication between 
your box and the remote box (ssh_authorized_hosts or something is what I went 
with, its kind of hard to pass user/pass credentials to command line scp). Or 
you could send the script in the form of 
echo "#!/bin/bash\n script..." > script.sh 
through a ssh channel, but that kind of defeats the purpose.

If you figure how to have Conch easily copy files let me know :)

--gabe



From Brendan at BrendanSimon.com  Thu Feb  9 17:42:26 2006
From: Brendan at BrendanSimon.com (Brendan Simon)
Date: Fri, 10 Feb 2006 11:42:26 +1100
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
Message-ID: <43EBE172.4000500@BrendanSimon.com>

twisted-python-request at twistedmatrix.com wrote:
> Date: Thu, 09 Feb 2006 10:14:20 -0500
> From: Paul Swartz <paulswartz at gmail.com>
>
> Brendan Simon wrote:
>   
>> I'm trying to use and understand the latest Twisted and Conch (I'm a 
>> newbie).  I can get teh sample apps going fine but they all seem to send 
>> one command and then exit.  I'm trying to workout how to send multiple 
>> commands to the server from the same client application.
>>
>> The sshsimpleclient.py does send multiple commands (false, true, cat) 
>> with separate channels.
>> Is that the preferred way to send multiple commands?
>> Doesn't that require some setup overhead every time I want to issue a 
>> command to the server?
>>     
>
> That's the way SSH requires sending multiple commands.  It does require 
> some server overhead, but there's no way around that.
>   
So what does a normal ssh client (eg openssh) do when I connect to an 
sshd server to get to a bash session ???

Maybe I just answered my own question.  The sshd server runs "login" (or 
something) which in turn looks in /etc/passwd for the user and shell, 
and then invokes that shell (eg. bash).  Is that the way it works?  i.e. 
the ssh client only sends _one_ command and as far as it is concerned is 
only invoked one program and it doesn't care that the server has fired 
off many apps.

If that's the case, then maybe I can invoke bash as my command, and just 
write data to the channel and grab the results ???
Is that good or bad???

Thanks,
Brendan.




From p.mayers at imperial.ac.uk  Thu Feb  9 18:33:37 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 10 Feb 2006 01:33:37 +0000
Subject: [Twisted-Python] Conch: multiple commands
In-Reply-To: <43EBE172.4000500@BrendanSimon.com>
References: <E1F7G5N-0003rF-02@pyramid.twistedmatrix.com>
	<43EBE172.4000500@BrendanSimon.com>
Message-ID: <43EBED71.1050002@imperial.ac.uk>

Brendan Simon wrote:
> 
> Maybe I just answered my own question.  The sshd server runs "login" (or 
> something) which in turn looks in /etc/passwd for the user and shell, 
> and then invokes that shell (eg. bash).  Is that the way it works?  i.e. 
> the ssh client only sends _one_ command and as far as it is concerned is 
> only invoked one program and it doesn't care that the server has fired 
> off many apps.

Correct

> 
> If that's the case, then maybe I can invoke bash as my command, and just 
> write data to the channel and grab the results ???

It might not be quite that simple. Bash and most shells expect to be 
attached to a TTY with a VT emulation on top, to provide output, 
prompting and so forth. To do it "correctly" you would need some kind of 
TTY client attached to the channel that would present you with prompts.

That said for simple commands that don't cause any complex terminal 
operations, it works fine. I've done it with SSH logins into firewalls 
and routers as an alternative to the (frankly POS) "expect" approach. I 
basically did something like this (though I was talking to an SSH 
process rathern than Twisted's SSH support as I needed SSHv1 - modify as 
appropriate):

class sshSession(TheBases):
   # match "[thing]$" or "[foo at bar]# "
   PROMPT_RE = re.compile(r'[[][^]]+]. ')
   def __init__(self):
     self.stdout = stdout
     self.stdout_lines = []
     self.stderr = stderr
     self.stdin = []
     self.atprompt = False
     self.deferred = None

   def sendCmd(cmd):
     """Queue up the command - returns a deferred callbacked with the
     command stdout or errbacked with stderr if any"""
     d = defer.Deferred()
     self.stdin.append((d, cmd))
     if self.atprompt:
       self.atprompt = False
       self.deferred, cmd = self.stdin.pop(0)
       self.transport.write(cmd+'\r')
     return d

   def errReceived(self, data):
     self.stderr += data

   def outReceived(self, data):
     line = None

     # accumulate stdout
     self.stdout += data
     while self.stdout:
       # look for an end of line in the buffer
       pos = self.stdout.find('\r\n')
       if pos==-1:
         break
       line = self.stdout[:pos]
       self.stdout = self.stdout[pos+2:]
       self.stdout_lines.append(line)

     # ok we've looked at all the complete lines - is whats
     # left in the buffer the prompt?
     if self.PROMPT_RE.match(self.stdout):
       if self.deferred:
         if self.stderr:
           self.deferred.errback(self.stderr)
           self.deferred = None

         if self.stdin:
           # there's another command waiting
           self.atprompt = False
           self.deferred, cmd = self.stdin.pop(0)
           self.transport.write(cmd+'\r\n')
         else:
           self.atprompt = True

...and hopefully that makes sense!

> Is that good or bad???
> 
> Thanks,
> Brendan.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From timheit at netvigator.com  Fri Feb 10 09:22:49 2006
From: timheit at netvigator.com (Timmy)
Date: Sat, 11 Feb 2006 0:22:49 +0800
Subject: [Twisted-Python] What can be pickled in the PB?
Message-ID: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>

Hello,
  I'm new to twisted PB. I would like to know what can be
pickled in PB. Can 'file' and 'binary data' be pickled?
I'm writing a program to send data (including binary data)
to a database via RPC in the server. So I need to know whether PB can do it or not.

Thanks!




From itamar at itamarst.org  Fri Feb 10 09:40:14 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Fri, 10 Feb 2006 11:40:14 -0500
Subject: [Twisted-Python] What can be pickled in the PB?
In-Reply-To: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>
References: <20060210162249.JEIB28620.wmail02dat.netvigator.com@mail.netvigator.com>
Message-ID: <1139589615.9107.2.camel@localhost.localdomain>

On Sat, 2006-02-11 at 00:22 +0800, Timmy wrote:
> Hello,
>   I'm new to twisted PB. I would like to know what can be
> pickled in PB. Can 'file' and 'binary data' be pickled?

"Serialized" may be a better word. You can serialize Python strings
(which can contain arbitrary bytes, which I assume is what you mean by
"binary data"). Python file objects can not be directly serialized, but
you can write code to send their contents.




From general at eepatents.com  Tue Feb 14 15:44:31 2006
From: general at eepatents.com (Ed Suominen)
Date: Tue, 14 Feb 2006 14:44:31 -0800
Subject: [Twisted-Python] Sqlalchemy + Twisted Ideas
Message-ID: <43F25D4F.7090600@eepatents.com>

I am a new but very enthusiastic user of sqlalchemy and have been
happily banging out some code to use it. Like Valentino Volonghi (but by
no means in the same league), I am also a big fan of Twisted and want to
integrate my use of sqlalchemy into Twisted apps.

Before I get too deep into unit testing (yes, I wrote the code first,
shame on me), I'd like to get some feedback from both sqlalchemy and
twisted users about what they think of the approach in my module
database.py, which I have posted to http://edsuom.pastebin.com/555036.

A use case, for my persistent graph package that's going to rely on all
this, is posted to http://edsuom.pastebin.com/555040. Note how some
database operations are simply encapsulated into a self.transact() call
while others, involving several lines of code, are put into a local
function and encapsulated into a self.transact(thisTransaction) call at
the end of the method.

Some assorted coolness:

* You can use Twisted's deferred result mechanism or block, even on a
case-by-case basis.

* Engines are defined at the class level, for all tables and contexts.
Tables are defined, also at the class level, for all contexts. Cached
selects are defined, however, on a context-by-context basis.

* In all three cases, thread-local storage permits even cranky databases
like sqlite from complaining about connection objects created in one
thread being used in a different thread.

* Overridden attribute access is used to construct, or retrieve from
cache, the needed goodies on the fly. Advantageously, those goodies are
constructed in the context not only of the current Table (in the case of
cached select() objects) but also in the current thread.

Comments welcome -- positive, critical, or utterly disdainful!

- Ed Suominen






From foom at fuhm.net  Tue Feb 14 23:00:10 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 15 Feb 2006 00:00:10 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1F9Fhy-0001jk-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-08 06:00:02:
 Bugs opened: 15   Bugs closed: 12   Total open bugs: 556 (+3)
  Urgent: 2 (-1)
  Bug: 269 (+1)
  Feature: 190 (+2)
  Wish: 95 (+1)

New / Reopened Bugs
______________________
                    ==== Urgent ====
[CONCH] AttributeError: 'NoneType' object has no attribute 'connectionLost'  (yesterday)
       http://twistedmatrix.com/bugs/issue1486 opened by miro

                    ==== Bug ====
[CORE] Process support sometimes consumes 100% CPU on Linux 2.4.27  (yesterday)
       http://twistedmatrix.com/bugs/issue1488 opened by exarkun

tearDown errors reported strangely  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1483 opened by radix

[CORE] Calling reactor.stop() in shutdown function causes hard-to-understand error message  (yesterday)
       http://twistedmatrix.com/bugs/issue1485 opened by itamarst

[DOCUMENTATION, WORDS] small bug in twisted irc  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1484 opened by inhahe

Make the WebSite repository work again  (2 days ago)
       http://twistedmatrix.com/bugs/issue1480 opened by radix

make setup.py and admin/sumo-setup.py share code  (2 days ago)
       http://twistedmatrix.com/bugs/issue1479 opened by radix

[CORE, WIN32] IReactorProcess and IProcessTransport are wrong  (3 days ago)
       http://twistedmatrix.com/bugs/issue1478 opened by exarkun

[DOCUMENTATION, WEBSITE] SEO: Google searches for docs usually go to out-of-date sourceforge  (2 days ago)
       http://twistedmatrix.com/bugs/issue1481 opened by moonfallen

                    ==== Feature ====
[WEB2] [PATCH] add RedirectResource  (2 days ago)
       http://twistedmatrix.com/bugs/issue1482 opened by andrea

Split the path-manipulation stuff in FilePath out to a separate class  (4 days ago)
       http://twistedmatrix.com/bugs/issue1477 opened by radix

[WEB] [PATCH] Support for Basic Authentication in t.w.xmlrpc  (6 days ago)
       http://twistedmatrix.com/bugs/issue1474 opened by oubiwann

                    ==== Wish ====
Make LoopingCall deal with deferred returning callables  (yesterday)
       http://twistedmatrix.com/bugs/issue1487 opened by ralphm

[CORE] Consolidate and clean up server side HTTP-AUTH implementations  (6 days ago)
       http://twistedmatrix.com/bugs/issue1475 opened by dreid

[CORE, WEB2] Include web2 in main Twisted release  (6 days ago)
       http://twistedmatrix.com/bugs/issue1476 opened by andrea

Bugs Closed
______________________
                    ==== Urgent ====
[CORE] Running 'setup.py all install' inside TwistedSumo-2005-11-06 fails to install subprojects  (1 month ago)
       http://twistedmatrix.com/bugs/issue1418 opened by bdash, closed by radix

[TRIAL, WIN32] trial hangs indefinitely on win32er  (3 weeks ago)
       http://twistedmatrix.com/bugs/issue1449 opened by exarkun, closed by radix

                    ==== Bug ====
tearDown errors reported strangely  (yesterday)
       http://twistedmatrix.com/bugs/issue1483 opened by radix, closed by jml

[DOCUMENTATION, WORDS] small bug in twisted irc  (yesterday)
       http://twistedmatrix.com/bugs/issue1484 opened by inhahe, closed by exarkun

[PATCH] gthreadless.py  (6 months ago)
       http://twistedmatrix.com/bugs/issue1129 opened by stefanomasini, closed by radix

[CORE, TESTS] twisted.test.test_task calls reactor.iterate()  (4 months ago)
       http://twistedmatrix.com/bugs/issue1198 opened by exarkun, closed by exarkun

[TRIAL] .timeout is not enforced for Deferred-chain test cases  (2 weeks ago)
       http://twistedmatrix.com/bugs/issue1456 opened by warner, closed by jml

fix twisted.web2 log format to comply with apache  (1 week ago)
       http://twistedmatrix.com/bugs/issue1469 opened by andrea, closed by dreid

fix exception in twisted.web2 makeUnsatisfiable  (1 week ago)
       http://twistedmatrix.com/bugs/issue1465 opened by andrea, closed by dreid

                    ==== Feature ====
[RELEASE MANAGEMENT] document Sumo building  (3 months ago)
       http://twistedmatrix.com/bugs/issue1318 opened by radix, closed by radix

                    ==== Wish ====
[TRIAL] Steal features from datatest for trial  (23 months ago)
       http://twistedmatrix.com/bugs/issue529 opened by itamarst, closed by jml

RFE: Use zipfile to load plugins.tml from zips on sys.path  (31 months ago)
       http://twistedmatrix.com/bugs/issue47 opened by radix, closed by radix




From eric+twisted at trueblade.com  Wed Feb 15 11:58:48 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 13:58:48 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
Message-ID: <43F379E8.2070008@trueblade.com>

I have a non-authenticating, single-threaded, Perspective Broker
application.  I'm running Python 2.3, Twisted 2.0.1 on Fedora Core 2.

I want to run the reactor multiple times, serially.  Essentially I have 
an existing program, and I want to make some PB calls to get some data. 
  The existing program isn't twisted-aware, nor do I want it to be.  I 
just want them to do what's needed to contact a PB server, get some 
data, and disconnect.

To demonstrate the problem,  I took the PB code from chapter 5 of the 
O'Reilly twisted book (pb_client.py and pb_server.py).  In pb_client.py, 
I duplicated the last 3 lines so now it says:

------------------
t = PbTester()
t.runTests()
reactor.run()

t = PbTester()
t.runTests()
reactor.run()
------------------

The code runs twice, but the second call to reactor.run() never returns 
because the getRootObject() deferred never gets called.  If I wait long 
enough, I get a timeout.

While the client is hung, I can connect to the same server with another 
client, and it works normally (at least until the second reactor.run() 
call).  The server seems to be perfectly fine, and keeps responding. 
CPU usage on the box is normal.

Is there something I need to do to run the reactor twice?  I've tried 
changing to Unix domain sockets, but other than not getting a timeout, I 
get the same behavior.

Any hints or debugging tips would be appreciated.

Thanks.

Eric.




From mike at mkp.ca  Wed Feb 15 12:34:00 2006
From: mike at mkp.ca (Mike Pelletier)
Date: Wed, 15 Feb 2006 14:34:00 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F379E8.2070008@trueblade.com>
References: <43F379E8.2070008@trueblade.com>
Message-ID: <200602151434.01066.mike@mkp.ca>

What you want is not supported.  If it were, Trial would be a lot simpler.  
There is some pressure to support it, but I think it's low-priority.  (If I 
understand correctly.)  Perhaps you can just block the reactor by calling 
into your app rather than vice-versa?

You're not THE Eric Smith, are you?  From London, Ontario, who brought us 
MiNT?

Mike.



From jml at mumak.net  Wed Feb 15 14:17:42 2006
From: jml at mumak.net (Jonathan Lange)
Date: Thu, 16 Feb 2006 08:17:42 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <200602151434.01066.mike@mkp.ca>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
Message-ID: <d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>

On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> What you want is not supported.  If it were, Trial would be a lot simpler.
> There is some pressure to support it, but I think it's low-priority.  (If I
> understand correctly.)  Perhaps you can just block the reactor by calling
> into your app rather than vice-versa?
>

You understand correctly. It is not supported, Trial would be simpler
and it is never going to be supported.

However I'm not sure how the server could call into Eric's app.

jml



From eric+twisted at trueblade.com  Wed Feb 15 14:40:51 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 16:40:51 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <200602151434.01066.mike@mkp.ca>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
Message-ID: <43F39FE3.6060002@trueblade.com>

Mike Pelletier wrote:
> What you want is not supported.  If it were, Trial would be a lot simpler.  
> There is some pressure to support it, but I think it's low-priority.  (If I 
> understand correctly.)  Perhaps you can just block the reactor by calling 
> into your app rather than vice-versa?

Bummer.  Okay, thanks.  I'll find some way around it, even if I have to 
fire off another executable.  Performance on the client side isn't all 
that critical to me.

> You're not THE Eric Smith, are you?  From London, Ontario, who brought us 
> MiNT?

Apparently, I'm just "a" Eric Smith, not "THE" Eric Smith :)

Eric.



From rudy at goldenhelix.com  Wed Feb 15 16:14:22 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 15 Feb 2006 16:14:22 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <43F39FE3.6060002@trueblade.com>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<43F39FE3.6060002@trueblade.com>
Message-ID: <200602151614.22869.rudy@goldenhelix.com>

I'm trying to freeze a script that uses twisted conch so I can distribute it 
internally easily. It seems to work but I get different behavior out of the 
freezed executable which ends up breaking it. After some hunting I think 
deferreds in threads don't work and I think it's because app.installReactor 
uses reflect.namedModule which imports using __import__ which PyInstaller has 
trouble figuring out or just acts differently when frozen.

Anybody have any luck using cx_Freeze or PyInstaller to freeze a program with 
a threaded reactor?

--gabe



From andrew-twisted at puzzling.org  Wed Feb 15 16:27:27 2006
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 16 Feb 2006 10:27:27 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
Message-ID: <20060215232727.GZ11871@home.puzzling.org>

On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> > What you want is not supported.  If it were, Trial would be a lot simpler.
> > There is some pressure to support it, but I think it's low-priority.  (If I
> > understand correctly.)  Perhaps you can just block the reactor by calling
> > into your app rather than vice-versa?
> >
> 
> You understand correctly. It is not supported, Trial would be simpler
> and it is never going to be supported.

Never is a long time :)

Last time I pestered glyph about this, I got him to agree that it should work.

-Andrew.




From radeex at gmail.com  Wed Feb 15 16:43:25 2006
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 16 Feb 2006 10:43:25 +1100
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215232727.GZ11871@home.puzzling.org>
References: <43F379E8.2070008@trueblade.com> <200602151434.01066.mike@mkp.ca>
	<d06a5cd30602151317p17faac07ydcc41acba6b3988f@mail.gmail.com>
	<20060215232727.GZ11871@home.puzzling.org>
Message-ID: <60ed19d40602151543u77641816jcb9e310f61422836@mail.gmail.com>

On 2/16/06, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> >
> > You understand correctly. It is not supported, Trial would be simpler
> > and it is never going to be supported.
>
> Never is a long time :)
>
> Last time I pestered glyph about this, I got him to agree that it should work.

I think we may need IRC logs ;)

--
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |
w----v----w-+



From exarkun at divmod.com  Wed Feb 15 16:47:04 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2006 18:47:04 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215232727.GZ11871@home.puzzling.org>
Message-ID: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>

On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>> > What you want is not supported.  If it were, Trial would be a lot simpler.
>> > There is some pressure to support it, but I think it's low-priority.  (If I
>> > understand correctly.)  Perhaps you can just block the reactor by calling
>> > into your app rather than vice-versa?
>> >
>>
>> You understand correctly. It is not supported, Trial would be simpler
>> and it is never going to be supported.
>
>Never is a long time :)
>
>Last time I pestered glyph about this, I got him to agree that it should work.

Now we just need to find someone to implement it for all the reactors :)

Jean-Paul



From rudy at goldenhelix.com  Wed Feb 15 17:01:00 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Wed, 15 Feb 2006 17:01:00 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151614.22869.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com> <43F39FE3.6060002@trueblade.com>
	<200602151614.22869.rudy@goldenhelix.com>
Message-ID: <200602151701.00385.rudy@goldenhelix.com>

On Wednesday 15 February 2006 4:14 pm, Gabe Rudy wrote:
>
> Anybody have any luck using cx_Freeze or PyInstaller to freeze a program
> with a threaded reactor?

I checked into it a bit more and I'm not sure threads has anything to do with 
it.

sshsimpleclient.py found at
http://twistedmatrix.com/projects/conch/documentation/examples/
also seems to have problems when frozen. Specifically defer.succeed(1) from 
verfiyHostKey does not seem  to work as the log shows
2006/02/15 16:54 MST [SimpleTransport,client] Disconnecting with error, code 9
        reason: bad host key

PyInstaller has hooks for packages with hidden imports, I'm wondering if I 
need to create something like this so that this will work... but I see no 
obvious modules to force importing.



From eric+twisted at trueblade.com  Wed Feb 15 17:59:48 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 19:59:48 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
Message-ID: <43F3CE84.70404@trueblade.com>

Jean-Paul Calderone wrote:
> On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts 
> <andrew-twisted at puzzling.org> wrote:
>> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>>> > What you want is not supported.  If it were, Trial would be a lot 
>>> simpler.
>>> > There is some pressure to support it, but I think it's 
>>> low-priority.  (If I
>>> > understand correctly.)  Perhaps you can just block the reactor by 
>>> calling
>>> > into your app rather than vice-versa?
>>> >
>>>
>>> You understand correctly. It is not supported, Trial would be simpler
>>> and it is never going to be supported.
>>
>> Never is a long time :)
>>
>> Last time I pestered glyph about this, I got him to agree that it 
>> should work.
> 
> Now we just need to find someone to implement it for all the reactors :)

Well, I happen to be motivated just now.  I'm new to twisted, but I'm 
not new to Python and I'm reasonably familiar with the style twisted 
uses (I've written lots of IOCP code).

If anyone could summarize the problem, and if you're serious about it 
getting fixed, I could look at it.

Eric.





From glyph at divmod.com  Wed Feb 15 19:48:23 2006
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2006 21:48:23 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F3CE84.70404@trueblade.com>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>
	<43F3CE84.70404@trueblade.com>
Message-ID: <1140058103.23161.34.camel@legion.lan>

On Wed, 2006-02-15 at 19:59 -0500, Eric Smith wrote:
> Jean-Paul Calderone wrote:
> > On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts 
> > <andrew-twisted at puzzling.org> wrote:
> >> On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
> >>> On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
> >>> > What you want is not supported.  If it were, Trial would be a lot 
> >>> simpler.
> >>> > There is some pressure to support it, but I think it's 
> >>> low-priority.  (If I
> >>> > understand correctly.)  Perhaps you can just block the reactor by 
> >>> calling
> >>> > into your app rather than vice-versa?

The easiest thing would be for your program to spawn a Twisted worker
process to get the data, send it along stdout in some simplified form,
and then read its output.

> >>> You understand correctly. It is not supported, Trial would be simpler
> >>> and it is never going to be supported.
> >>
> >> Never is a long time :)
> >>
> >> Last time I pestered glyph about this, I got him to agree that it 
> >> should work.

I think that in that particular conversation I followed up the
reactor-restarting comments with "of course, for truly asynchronous
protocols like PB this is a waste of time, since it doesn't even
conceptually work".

> > Now we just need to find someone to implement it for all the reactors :)
> 
> Well, I happen to be motivated just now.  I'm new to twisted, but I'm 
> not new to Python and I'm reasonably familiar with the style twisted 
> uses (I've written lots of IOCP code).

> If anyone could summarize the problem, and if you're serious about it 
> getting fixed, I could look at it.

If you have the time, energy, and motivation to seriously contribute to
Twisted, AND experience with Win32 and IOCP, it would be a pity to waste
it supporting such an esoteric use-case - 99% of the users who ask for
this are just trying to shoot themselves in the foot, and if they manage
to do it successfully, it's more often bugs in Twisted.  As I said, you
can probably satisfy your own use-case with popen() relatively easily.

Unfortunately this is not a simple problem.  It involves auditing every
aspect of the reactor's internal state, including the threadpool, and
validating that its internal state is consistent before terminating
run().  It also means making sure that every buffer is flushed, all
outstanding bytes are read, etc.  Then you have to do that for each
reactor.  You'd also have to add an API that specifically did this kind
of "soft" shutdown; flushing buffers without closing connections,
stopping all threads, and so forth.

However, it would certainly be a great way to learn the ins and outs of
the reactor API.  I don't particularly want the functionality but I
suspect that adding it will flush out some latent bugs in at least one
reactor implementation, so I'm not opposed to seeing it done.

If you would like to work on something else though, we definitely need a
dedicated Windows maintainer ... ;)





From glyph at divmod.com  Wed Feb 15 19:49:47 2006
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 15 Feb 2006 21:49:47 -0500
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151701.00385.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com> <43F39FE3.6060002@trueblade.com>
	<200602151614.22869.rudy@goldenhelix.com>
	<200602151701.00385.rudy@goldenhelix.com>
Message-ID: <1140058187.23161.37.camel@legion.lan>

On Wed, 2006-02-15 at 17:01 -0700, Gabe Rudy wrote:

> PyInstaller has hooks for packages with hidden imports, I'm wondering if I 
> need to create something like this so that this will work... but I see no 
> obvious modules to force importing.

I've successfully put Twisted into a py2exe package before, then
"frozen" it using NSIS.  I've not tried with conch, but I don't know
what would cause the problems you're seeing.





From exarkun at divmod.com  Wed Feb 15 20:00:10 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 15 Feb 2006 22:00:10 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <43F3CE84.70404@trueblade.com>
Message-ID: <20060216030010.6122.417722554.divmod.quotient.133@ohm>

On Wed, 15 Feb 2006 19:59:48 -0500, Eric Smith <eric+twisted at trueblade.com> wrote:
>Jean-Paul Calderone wrote:
>>On Thu, 16 Feb 2006 10:27:27 +1100, Andrew Bennetts <andrew- 
>>twisted at puzzling.org> wrote:
>>>On Thu, Feb 16, 2006 at 08:17:42AM +1100, Jonathan Lange wrote:
>>>>On 2/16/06, Mike Pelletier <mike at mkp.ca> wrote:
>>>> > What you want is not supported.  If it were, Trial would be a lot 
>>>>simpler.
>>>> > There is some pressure to support it, but I think it's low-priority. 
>>>>(If I
>>>> > understand correctly.)  Perhaps you can just block the reactor by 
>>>>calling
>>>> > into your app rather than vice-versa?
>>>> >
>>>>
>>>>You understand correctly. It is not supported, Trial would be simpler
>>>>and it is never going to be supported.
>>>
>>>Never is a long time :)
>>>
>>>Last time I pestered glyph about this, I got him to agree that it should 
>>>work.
>>
>>Now we just need to find someone to implement it for all the reactors :)
>
>Well, I happen to be motivated just now.  I'm new to twisted, but I'm not 
>new to Python and I'm reasonably familiar with the style twisted uses (I've 
>written lots of IOCP code).
>
>If anyone could summarize the problem, and if you're serious about it 
>getting fixed, I could look at it.

There's no single particular problem preventing this from working.  More, 
the feature is generally not considered when making changes to an existing 
reactor or implementing a new one.  Startup and shutdown involve certain 
internal and external state changes which the existing reactors generally 
aren't care to allow to happen repeatedly.  For example, ReactorBase's 
__init__ method sets up two event triggers to run during shutdown.  One of 
these disconnects all connected sockets; the other actually causes the run() 
method to return.  Since system event triggers are removed as they are run, 
neither of these things happens the 2nd time a reactor deriving from 
ReactorBase shuts down.

Since most reactors in Twisted subclass ReactorBase, fixing problems in it 
will probably fix many of the reactors, although subclasses may introduce 
their own problems as well.  At least the IOCP reactor does not subclass it, 
though, so it will need to addressed separately.  Also, some testing strategy 
needs to be developed to ensure assumptions of a single run/stop pair don't 
creep back into the code.

Documentation and interfaces will also need to be updated, of course.

Jean-Paul



From eric+twisted at trueblade.com  Wed Feb 15 20:25:12 2006
From: eric+twisted at trueblade.com (Eric Smith)
Date: Wed, 15 Feb 2006 22:25:12 -0500
Subject: [Twisted-Python] calling reactor.run() twice in PB app
In-Reply-To: <1140058103.23161.34.camel@legion.lan>
References: <20060215234704.6122.1319501390.divmod.quotient.10@ohm>	<43F3CE84.70404@trueblade.com>
	<1140058103.23161.34.camel@legion.lan>
Message-ID: <43F3F098.7060909@trueblade.com>

Glyph Lefkowitz wrote:

 >> If anyone could summarize the problem, and if you're serious about 
it getting fixed, I could look at it.

 > Unfortunately this is not a simple problem.  It involves auditing every
 > aspect of the reactor's internal state, including the threadpool, and
 > validating that its internal state is consistent before terminating
 > run().  It also means making sure that every buffer is flushed, all
 > outstanding bytes are read, etc.  Then you have to do that for each
 > reactor.  You'd also have to add an API that specifically did this kind
 > of "soft" shutdown; flushing buffers without closing connections,
 > stopping all threads, and so forth.

Mission accomplished!  You've scared me away from even wanting to do 
this!  Actually I think I'll poke around a bit.  I did spend all day 
reading the posix reactor code, and your comments here are helpful.

I think you're correct about using popen(), since I really just want 
this to work in the near future.  The data is simple enough that I think 
I can just print repr() of the data and eval it on the reader side (I 
know, I know ...).

But another thought I had was a non-twisted python implementation of PB, 
blocking on the socket calls since I'm just doing request-response.  But 
I'm guessing that would be non-trivial as well.

 > However, it would certainly be a great way to learn the ins and outs of
 > the reactor API.  I don't particularly want the functionality but I
 > suspect that adding it will flush out some latent bugs in at least one
 > reactor implementation, so I'm not opposed to seeing it done.
 >
 > If you would like to work on something else though, we definitely need a
 > dedicated Windows maintainer ... ;)

Well, I've written Win32 and IOCP, but I currently focus on Linux. Given 
that I don't work much with Windows any more (at least not when I can 
avoid it), I don't think I'd be a good Windows maintainer, sorry. But 
I'm willing to help where I can.

Thanks for the comments.  Are you going to PyCon?  Maybe I'll bump into 
you there.  I enjoyed your talks in years past.

Eric.




From rabs at dimension-virtual.com  Wed Feb 15 23:59:09 2006
From: rabs at dimension-virtual.com (=?utf-8?q?Ra=C3=BAl_Alexis_Betancor_Santana?=)
Date: Thu, 16 Feb 2006 06:59:09 +0000
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <1140058187.23161.37.camel@legion.lan>
References: <43F379E8.2070008@trueblade.com>
	<200602151701.00385.rudy@goldenhelix.com>
	<1140058187.23161.37.camel@legion.lan>
Message-ID: <200602160659.10061.rabs@dimension-virtual.com>

El Jueves, 16 de Febrero de 2006 02:49, Glyph Lefkowitz escribió:
> On Wed, 2006-02-15 at 17:01 -0700, Gabe Rudy wrote:
> > PyInstaller has hooks for packages with hidden imports, I'm wondering if
> > I need to create something like this so that this will work... but I see
> > no obvious modules to force importing.
>
> I've successfully put Twisted into a py2exe package before, then
> "frozen" it using NSIS.  I've not tried with conch, but I don't know
> what would cause the problems you're seeing.

Could you send to me or to the list the setup.py and the nsis script you 
used?, I've trying several times to do the same with no success

-- 
Saludos.

Raúl Alexis Betancor Santana
Director Gerente
Dimensión Virtual S.L.



From ralf at brainbot.com  Thu Feb 16 00:53:39 2006
From: ralf at brainbot.com (Ralf Schmitt)
Date: Thu, 16 Feb 2006 08:53:39 +0100
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <200602151701.00385.rudy@goldenhelix.com>
References: <43F379E8.2070008@trueblade.com>
	<43F39FE3.6060002@trueblade.com>	<200602151614.22869.rudy@goldenhelix.com>
	<200602151701.00385.rudy@goldenhelix.com>
Message-ID: <43F42F83.7010803@brainbot.com>

Gabe Rudy wrote:
> On Wednesday 15 February 2006 4:14 pm, Gabe Rudy wrote:
>> Anybody have any luck using cx_Freeze or PyInstaller to freeze a program
>> with a threaded reactor?
> 
> I checked into it a bit more and I'm not sure threads has anything to do with 
> it.
> 
> sshsimpleclient.py found at
> http://twistedmatrix.com/projects/conch/documentation/examples/
> also seems to have problems when frozen. Specifically defer.succeed(1) from 
> verfiyHostKey does not seem  to work as the log shows
> 2006/02/15 16:54 MST [SimpleTransport,client] Disconnecting with error, code 9
>         reason: bad host key
> 

running python -v sshsimpleclient.py results in the following output:
2006/02/16 08:49 CET [SimpleTransport,client] kex alg, key alg: 
diffie-hellman-group-exchange-sha1 ssh-rsa
2006/02/16 08:49 CET [SimpleTransport,client] client->server: aes256-ctr 
hmac-sha1 none
2006/02/16 08:49 CET [SimpleTransport,client] server->client: aes256-ctr 
hmac-sha1 none
2006/02/16 08:49 CET [SimpleTransport,client] host key fingerprint: 
b9:fb:8d:ab:3e:3b:be:d2:53:72:fd:d0:f9:15:0c:91
2006/02/16 08:49 CET [SimpleTransport,client] 
dlopen("/usr/lib/python2.4/site-packages/Crypto/Cipher/AES.so", 2);
2006/02/16 08:49 CET [SimpleTransport,client] import Crypto.Cipher.AES # 
dynamically loaded from 
/usr/lib/python2.4/site-packages/Crypto/Cipher/AES.so
2006/02/16 08:49 CET [SimpleTransport,client] starting service ssh-userauth
2006/02/16 08:49 CET [SSHService ssh-userauth on SimpleTransport,client] 
can continue with: ['publickey', 'password']

Adding a dummy function for dependency tracking solved the problem for me:

def __dependencies_for_freezing():
     import Crypto.Cipher.AES

I guess that you may have to add even more ciphers depending on
your ssh config.

- Ralf




From rudy at goldenhelix.com  Thu Feb 16 11:55:03 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Thu, 16 Feb 2006 11:55:03 -0700
Subject: [Twisted-Python] Freezing twisted successfully?
In-Reply-To: <43F42F83.7010803@brainbot.com>
References: <43F379E8.2070008@trueblade.com>
	<200602151701.00385.rudy@goldenhelix.com>
	<43F42F83.7010803@brainbot.com>
Message-ID: <200602161155.04060.rudy@goldenhelix.com>

> Adding a dummy function for dependency tracking solved the problem for me:
>
> def __dependencies_for_freezing():
>      import Crypto.Cipher.AES
>
> I guess that you may have to add even more ciphers depending on
> your ssh config.
>
> - Ralf
>

Sweet, that was it. For future reference, if you want to use conch ssh in a 
PyInstaller frozen program, you need to add a file 
$PyInstallerHome/hooks/hook-twisted.conch.ssh.py that has the line:

hiddenimports = [     "Crypto.Cipher.AES"     ]

or with cx_Freeze add --include-modules=Crypto.Crypto.AES to your FreezePython 
command.

Like Ralf said, you might need more ciphers based on your ssh config.

Thanks guys (Ralf in particular), I don't know if I ever would have figured 
that one out, and using python -v is a neat trick to remember for similarly 
weird situations.

--gabe



From iap_yeh at thecus.com  Sun Feb 19 01:39:23 2006
From: iap_yeh at thecus.com (Iap, Singuan)
Date: Sun, 19 Feb 2006 16:39:23 +0800
Subject: [Twisted-Python] v2006-2-12 ImportError: IAddress 
In-Reply-To: <200602161155.04060.rudy@goldenhelix.com>
Message-ID: <200602190841.k1J8fBOh015663@mail.thecus.com>

Hi,
I have no idea if this is a bug?
Just download 2006-2-12 and my existed script complains the ImportError of
IAddress.
(twisted.internet.interfaces)

Any hints?

Iap




From iap_yeh at thecus.com  Sun Feb 19 01:53:23 2006
From: iap_yeh at thecus.com (Iap, Singuan)
Date: Sun, 19 Feb 2006 16:53:23 +0800
Subject: [Twisted-Python] RE: v2006-2-12 ImportError: IAddress 
Message-ID: <200602190855.k1J8tBMc015695@mail.thecus.com>

 
OK, I answer myself.
I should use "from twisted.protocols import http" instead of "from
twisted.internet import http".
Excuse me for the bothering.

Iap

-----Original Message-----
From: Iap, Singuan [mailto:iap_yeh at thecus.com] 
Sent: Sunday, February 19, 2006 4:39 PM
To: 'Twisted general discussion'
Subject: v2006-2-12 ImportError: IAddress 

Hi,
I have no idea if this is a bug?
Just download 2006-2-12 and my existed script complains the ImportError of
IAddress.
(twisted.internet.interfaces)

Any hints?

Iap




From luc.stepniewski at adelux.fr  Mon Feb 20 07:02:00 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Mon, 20 Feb 2006 15:02:00 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
Message-ID: <200602201502.01517.luc.stepniewski@adelux.fr>

While using pb.PBClientFactory() with reactor.connectTCP(), I noticed that the 
specified timeout parameter is only for testing if there is no connection, 
not if the remote PB replies correctly.
I noticed this when one of my remote PB instance was stuck. It was accepting 
requests, but did not answer anything at all. So the connection is 
established, and stays indefinitely!

You can verify this by yourself by just putting netcat ("nc -vv -l -p 9999" 
for example) instead of a PB instance.
The PB on the other side will connect, and then, nothing else. No timeout that 
netcat didn't reply (not even correctly).

I know I could add a timer (callLater) that would wake up and kill the 
connection after some time (because I know one transaction will not exceed 
some precise time), but it's really really trashy, and one not always knows 
what will be the duration of the transaction.

Is there really no other alternative to detect the correct connection to 
another PB instance?

I attached an example code that would show this behaviour.

Thanks,
Luc
-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bug.py
Type: application/x-python
Size: 1737 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20060220/85ad57b0/attachment-0002.bin>

From itamar at itamarst.org  Mon Feb 20 21:51:57 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 20 Feb 2006 23:51:57 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r15988 - Fix silly bug that
	made twscgi not work at all.
In-Reply-To: <E1FBL16-0007xo-00@wolfwood>
References: <E1FBL16-0007xo-00@wolfwood>
Message-ID: <1140497517.8622.0.camel@localhost.localdomain>

On Mon, 2006-02-20 at 17:04 -0700, James Knight wrote:
> Author: foom
> Date: Mon Feb 20 17:04:31 2006
> New Revision: 15988
> 
> Modified:
>    trunk/twisted/web2/twscgi.py
> Log:
> Fix silly bug that made twscgi not work at all.

Did the tests catch this?




From itamar at itamarst.org  Tue Feb 21 09:06:03 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Feb 2006 11:06:03 -0500
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602201502.01517.luc.stepniewski@adelux.fr>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
Message-ID: <1140537963.10335.1.camel@localhost.localdomain>

On Mon, 2006-02-20 at 15:02 +0100, Luc Stepniewski wrote:

> I know I could add a timer (callLater) that would wake up and kill the 
> connection after some time (because I know one transaction will not exceed 
> some precise time), but it's really really trashy, and one not always knows 
> what will be the duration of the transaction.
> 
> Is there really no other alternative to detect the correct connection to 
> another PB instance?

The typical way to do this is have some sort of remote_ping method that
returns immediately on the server (or on the client) that the client (or
the server) calls every once in a while, with a timeout for the
response. If that times out the problem is likely the connection, not
the server being slow, in which case you can close the connection.




From luc.stepniewski at adelux.fr  Tue Feb 21 10:40:39 2006
From: luc.stepniewski at adelux.fr (Luc Stepniewski)
Date: Tue, 21 Feb 2006 18:40:39 +0100
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <1140537963.10335.1.camel@localhost.localdomain>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140537963.10335.1.camel@localhost.localdomain>
Message-ID: <200602211840.39236.luc.stepniewski@adelux.fr>

On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> The typical way to do this is have some sort of remote_ping method that
> returns immediately on the server (or on the client) that the client (or
> the server) calls every once in a while, with a timeout for the
> response. If that times out the problem is likely the connection, not
> the server being slow, in which case you can close the connection.

Yes, it's the same thing as making a pseudo "timeout" with a callLater. But in 
my case, the problem is even more primitive, in that I just need to connect, 
send data (eventually get a response), and then disconnect.
But if the remote PB server doesn't reply (the simplest reason would be that 
it's a program that accepts sockets but does not reply *anything*, like a 
listening netcat) then I'm stuck. Your answer will not help in that case (or 
maybe I misunderstood, as always, your explanation).

Luc
-- 
Luc Stepniewski <luc.stepniewski at adelux.fr> <sip:724766 at fwd.pulver.com>
Adelux - Securite, Linux  Public key: <http://lstep.free.fr/pubkey.txt>
Key BC0E3C2A fingerprint = A4FA466C68D27E46B427  07D083ED6340BC0E3C2A



From itamar at itamarst.org  Tue Feb 21 10:58:17 2006
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 21 Feb 2006 12:58:17 -0500
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <200602211840.39236.luc.stepniewski@adelux.fr>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<1140537963.10335.1.camel@localhost.localdomain>
	<200602211840.39236.luc.stepniewski@adelux.fr>
Message-ID: <1140544697.10335.20.camel@localhost.localdomain>

On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > The typical way to do this is have some sort of remote_ping method that
> > returns immediately on the server (or on the client) that the client (or
> > the server) calls every once in a while, with a timeout for the
> > response. If that times out the problem is likely the connection, not
> > the server being slow, in which case you can close the connection.
> 
> Yes, it's the same thing as making a pseudo "timeout" with a callLater. 

Not exactly. What I'm suggesting is a different command that you send in
addition to your regular operations. This extra command, "ping", is
expected to return a result quickly; if it doesn't you know something is
wrong. That way even if your regular commands take a really long time
for the server to process you can still tell if the server itself (or
your connection to it) is ok. Every 10 seconds, say, you ping the
server; if you don't get a response back in 5 seconds it's probably
down.




From uwe at oss4u.com  Tue Feb 21 20:12:27 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Tue, 21 Feb 2006 19:12:27 -0800
Subject: [Twisted-Python] Missing feature in detecting stalled PB
	connections?
In-Reply-To: <1140544697.10335.20.camel@localhost.localdomain>
References: <200602201502.01517.luc.stepniewski@adelux.fr>
	<200602211840.39236.luc.stepniewski@adelux.fr>
	<1140544697.10335.20.camel@localhost.localdomain>
Message-ID: <200602211912.27692.uwe@oss4u.com>

On Tuesday 21 February 2006 09:58, Itamar Shtull-Trauring wrote:
> On Tue, 2006-02-21 at 18:40 +0100, Luc Stepniewski wrote:
> > On Tuesday 21 February 2006 17:06, Itamar Shtull-Trauring wrote:
> > > The typical way to do this is have some sort of remote_ping method that
> > > returns immediately on the server (or on the client) that the client
> > > (or the server) calls every once in a while, with a timeout for the
> > > response. If that times out the problem is likely the connection, not
> > > the server being slow, in which case you can close the connection.
> >
> > Yes, it's the same thing as making a pseudo "timeout" with a callLater.
>
> Not exactly. What I'm suggesting is a different command that you send in
> addition to your regular operations. This extra command, "ping", is
> expected to return a result quickly; if it doesn't you know something is
> wrong. That way even if your regular commands take a really long time
> for the server to process you can still tell if the server itself (or
> your connection to it) is ok. Every 10 seconds, say, you ping the
> server; if you don't get a response back in 5 seconds it's probably
> down.


That's actually what I'm doing with my application - although for a different 
reason. I send a "ping" that immediate is answered by a "pong" - if I don't 
get the pong withing 30 seconds I shut the connection down.
My reason is a missconfigured firewall at one of my clients which drops 
forwarding after about 90 seconds idle time. Since I couldn't get their 
(incompetent) network admin to fix it I send a ping every 30 sec, so the 
firewall thinks the connection is active and doesn't drop it.

Luc: if you need the code for that (although it's very simple), drop me a 
line.

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From foom at fuhm.net  Tue Feb 21 23:00:13 2006
From: foom at fuhm.net (James Y Knight)
Date: Wed, 22 Feb 2006 00:00:13 -0600
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <E1FBn2r-0003hv-00@pyramid.twistedmatrix.com>

Bug summary
______________________
Since 2006-02-15 06:00:02.450000:
 Bugs opened: 14   Bugs closed: 8   Total open bugs: 562 (+6)
  Urgent: 4 (+2)
  Bug: 269 (+0)
  Feature: 192 (+2)
  Wish: 97 (+2)

New / Reopened Bugs
______________________
                    ==== Urgent ====
quick command-line way to run web2 server  (yesterday)
       http://twistedmatrix.com/bugs/issue1497 opened by glyph

Memory leak using example web server?  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1494 opened by chileverde

[WEB] Memory leak using minimal web server?  (2 days ago)
       http://twistedmatrix.com/bugs/issue1495 opened by chileverde

                    ==== Bug ====
testCyclicAliases in t.mail.test_mail is weird  (14 months ago)
CLOSED http://twistedmatrix.com/bugs/issue810 opened by marienz

[WEB2] doStart missing, reactor.listenTCP.  debian unstable twisted,  (yesterday)
       http://twistedmatrix.com/bugs/issue1496 opened by illume

[WEB] static File web module doesn't support byte ranges  (3 days ago)
       http://twistedmatrix.com/bugs/issue1493 opened by jmg

[WORDS] words error ..  (5 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1491 opened by jeeterm

[WEB] twisted.web.error.ErrorPage does not set Content-Type  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue1492 opened by exarkun

                    ==== Feature ====
Make twistd a library  (8 hours ago)
       http://twistedmatrix.com/bugs/issue1501 opened by radix

[CORE] Pluggable application loaders for twistd  (5 days ago)
       http://twistedmatrix.com/bugs/issue1490 opened by itamarst

                    ==== Wish ====
[CORE, WIN32] iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1500 opened by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1499 opened by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue1498 opened by ghazel

[DOCUMENTATION] Shuldn't an interface go with the protocol ?  (6 days ago)
       http://twistedmatrix.com/bugs/issue1489 opened by pupeno

Bugs Closed
______________________
                    ==== Urgent ====
Memory leak using example web server?  (2 days ago)
       http://twistedmatrix.com/bugs/issue1494 opened by chileverde, closed by spiv

                    ==== Bug ====
testCyclicAliases in t.mail.test_mail is weird  (14 months ago)
       http://twistedmatrix.com/bugs/issue810 opened by marienz, closed by exarkun

[WORDS] words error ..  (5 days ago)
       http://twistedmatrix.com/bugs/issue1491 opened by jeeterm, closed by ralphm

[WEB] twisted.web.error.ErrorPage does not set Content-Type  (4 days ago)
       http://twistedmatrix.com/bugs/issue1492 opened by exarkun, closed by exarkun

[CORE] t.i.stdin is horribly broken.  (18 months ago)
       http://twistedmatrix.com/bugs/issue680 opened by jknight, closed by jknight

Make the WebSite repository work again  (1 week ago)
       http://twistedmatrix.com/bugs/issue1480 opened by radix, closed by exarkun

                    ==== Wish ====
iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1499 opened by ghazel, closed by ghazel

iocpreactor/udp.py:121 says 1234 when it could say ERROR_PORT_UNREACHABLE  (yesterday)
       http://twistedmatrix.com/bugs/issue1498 opened by ghazel, closed by ghazel




From uwe at oss4u.com  Thu Feb 23 23:46:03 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Thu, 23 Feb 2006 22:46:03 -0800
Subject: [Twisted-Python] Writing a wrapper from asynchronous to synchronous
Message-ID: <200602232246.03126.uwe@oss4u.com>


Hi everyone,

I know someone is going to say it's a flaw in the design - and I partially 
agree with that. However I have an application that allows a fairly 
unexperienced programmer to add modules. What I need to do is to write a 
wrapper that hides the asynchronous nature of pb (well, Twisted that is, but 
I'm only using pb), simply because most programmers at the potential 
customers don't have any knowledge about asynchonous programming.
The API for the modules should hide all communications to the server side. 
So my question would be, is there a way to write some kind of wrapper that 
will make the caller wait for the deferred callback to be invoked?
I have one specific method that just has a flag which is set to true in the 
deferred callaback which then in turn triggers the action required. So 
basically it's a recursive method that get's called via a reactor.callLater 
and if the flag is true calls whatever is needed. The point is to suspend 
execution of a certain method until some prerequisite initializations are 
finished.  I'd like to do that in an as convenient way as possible.
So it's like:

1) module calls some method #1
2) #1 depends on certain initializations to finish
3) the call to #1 doesn't return unless step 2) is done

any smart idea's how to wrap that up?
Any hints are highly appreciated

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From bv at bnl.gov  Fri Feb 24 09:20:52 2006
From: bv at bnl.gov (Brett Viren)
Date: Fri, 24 Feb 2006 11:20:52 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com> (Uwe C. Schroeder's message
	of "Thu, 23 Feb 2006 22:46:03 -0800")
References: <200602232246.03126.uwe@oss4u.com>
Message-ID: <ir4y800ybh7.fsf@minos.phy.bnl.gov>

"Uwe C. Schroeder" <uwe at oss4u.com> writes:

> 1) module calls some method #1
> 2) #1 depends on certain initializations to finish
> 3) the call to #1 doesn't return unless step 2) is done

I've not yet learned PB, so maybe this isn't a good fit but what about
having modules run in threads and use Queues for them to send and
receive messages (method calls / return values) to/from the framework?

This way they won't block the framework but will appear to run
synchronously.  You could hide the Queue manipulation in a thin API
that shadows the API of the framework.

The timeline would be:

 Client calls wrapper function

 Function builds message, sends it to nonblocking framework queue and
 then listens on blocking reply queue.

 Framework checks input queue in nonblocking way.  When it recieves a
 message it calls the corresponding asynchronous method and attaches
 code to the callback that will send the reply down the reply queue.

 Wrapper function gets reply, unpacks return and returns it to
 synchronous caller.

I've used a similar pattern for doing the opposite of sending commands
from async framework to syncronous client code.


-Brett.




From glyph at divmod.com  Fri Feb 24 09:53:17 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 24 Feb 2006 11:53:17 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com>
Message-ID: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>



On Thu, 23 Feb 2006 22:46:03 -0800, "Uwe C. Schroeder" <uwe at oss4u.com> wrote:
>
>Hi everyone,
>
>I know someone is going to say it's a flaw in the design 

I would hate to disappoint you.

"It's a flaw in the design."

>- and I partially
>agree with that. However I have an application that allows a fairly
>unexperienced programmer to add modules. What I need to do is to write a
>wrapper that hides the asynchronous nature of pb 

No, you don't.  What you need to do is to edcucate your target developer market about asynchronous programming.  It's not that hard.  The TurboGears "20 minute wiki" tutorial even covers Deferreds, without really bothering to explain how they work.  If average JavaScript monkeys can figure this out, I think you're not giving your target developers enough credit.

You cannot "hide the asynchronous nature of PB".  The protocol is fully asynchronous even if you forget all of Twisted and just look at the byte-level spec.

Your choice is not "synchronous or asynchronous interface".  It is "educate novice developers about Deferreds" or "educate novice developers about multithreaded concurrency, reactor implementation details, livelock, deadlock, and spurious reentrancy".  That's assuming that you fix any outstanding reactor bugs related to this issue, fully test the related code paths, AND there are no bugs in your wrapper layer.  Trust me: there will be bugs in your wrapper layer.  There are maybe 20 people in the world who could make Twisted do sync/async mapping *really* correctly, and all of them understand the problem too well to bother to try.



From ldanielburr at mac.com  Fri Feb 24 11:54:34 2006
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 24 Feb 2006 12:54:34 -0600
Subject: [Twisted-Python] Writing a wrapper from asynchronous
	to	synchronous
In-Reply-To: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>
References: <20060224165317.6122.1612317390.divmod.quotient.6738@ohm>
Message-ID: <op.s5hqs8ag3oj628@zetsuei>

On Fri, 24 Feb 2006 10:53:17 -0600, <glyph at divmod.com> wrote:

>
>
> On Thu, 23 Feb 2006 22:46:03 -0800, "Uwe C. Schroeder" <uwe at oss4u.com>  
> wrote:
>>
>> Hi everyone,
>>
>> I know someone is going to say it's a flaw in the design
>
> I would hate to disappoint you.
>
> "It's a flaw in the design."
>
>> - and I partially
>> agree with that. However I have an application that allows a fairly
>> unexperienced programmer to add modules. What I need to do is to write a
>> wrapper that hides the asynchronous nature of pb
>

[SNIP Glyph explains why this is not a good thing, or even possible]

I'm always fascinated with these kinds of issues, because they come up  
fairly often, and are so illustrative of human nature.  The original  
poster feels that he needs to do X, and is most likely not interested in  
anyone's opinion of the actual desirability/validity of so doing.  And  
yet, what response does his question receive?  A detailed explanation of  
why he should not consider doing X, even though it is clear that X is what  
he feels he must do.

Of course, I agree that X is definitely not something that the original  
poster should contemplate doing; it is just a bad idea, period, and will  
likely result in frustration and disappointment.  However, I think it is  
important to point out that the original poster is most likely pursuing  
this line of inquiry because the possibility of educating his target  
audience is slim, or none.  People are much harder to deal with than  
machines, especially when it comes to learning new things.  Forcing  
twisted to behave synchronously doubtless sounds easier than teaching an  
inexperienced coder how to write twisted-friendly code.

My pointless musings aside, I do have a concrete suggestion for the  
original poster: Create an HTTP server that proxies the pb calls on behalf  
of your programmers.  Let them just post messages to that server, using  
whatever synchronous HTTP client (urllib, etc) they desire.  Not  
technically elegant, no, but far easier than mangling twisted, and far  
easier than trying to teach your programmers how to write async code.   
Note that the server doesn't have to be HTTP, but most programmers have  
some passing acquaintance with it, and client libraries are ubiquitous, so  
it is an easy option.

Hope this helps,

L. Daniel Burr



From rudy at goldenhelix.com  Fri Feb 24 12:33:33 2006
From: rudy at goldenhelix.com (Gabe Rudy)
Date: Fri, 24 Feb 2006 12:33:33 -0700
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602232246.03126.uwe@oss4u.com>
References: <200602232246.03126.uwe@oss4u.com>
Message-ID: <200602241233.33616.rudy@goldenhelix.com>

On Thursday 23 February 2006 11:46 pm, Uwe C. Schroeder wrote:
> Hi everyone,
>
> I know someone is going to say it's a flaw in the design - and I partially
> agree with that. However I have an application that allows a fairly
> unexperienced programmer to add modules. What I need to do is to write a
> wrapper that hides the asynchronous nature of pb 

Lol, when I read that I wondered how long it will it take before someone _did_ 
respond with "It's a flaw in the design"

I actually was trying to do this _exact_ thing (making pb appear synchronous) 
and met with similar remarks to my post for help. But even though I did 
manage to write a hack using a interleaved threadedselectreactor, 
threading.Event and a forced event processing while loop, the result was 
mostly functional but ugly and a pain to debug.

It was a flaw in my design.

And after some serious reworking and acceptance of a more asynchronous 
methodology, my program is the better for it. Way better.

In short, I would recommend _not_ forcing/hacking twisted to be something its 
not. Use L. Daniel's suggestion, use a synchronous network system like 
xmlrpclib, or rethink the meta problem your are trying to solve.

--gabe



From alengarbage at yahoo.com  Fri Feb 24 12:59:10 2006
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 24 Feb 2006 11:59:10 -0800 (PST)
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <E1FChEa-0005SX-02@pyramid.twistedmatrix.com>
Message-ID: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>

I'm going to refrain from passing judgement, and just
ask, isn't this what deferredResult() is all about
(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?

  Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From uwe at oss4u.com  Fri Feb 24 13:17:08 2006
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Fri, 24 Feb 2006 12:17:08 -0800
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602241233.33616.rudy@goldenhelix.com>
References: <200602232246.03126.uwe@oss4u.com>
	<200602241233.33616.rudy@goldenhelix.com>
Message-ID: <200602241217.08392.uwe@oss4u.com>

On Friday 24 February 2006 11:33, Gabe Rudy wrote:
> On Thursday 23 February 2006 11:46 pm, Uwe C. Schroeder wrote:
> > Hi everyone,
> >
> > I know someone is going to say it's a flaw in the design - and I
> > partially agree with that. However I have an application that allows a
> > fairly unexperienced programmer to add modules. What I need to do is to
> > write a wrapper that hides the asynchronous nature of pb
>
> Lol, when I read that I wondered how long it will it take before someone
> _did_ respond with "It's a flaw in the design"

Me too actually :-)

> I actually was trying to do this _exact_ thing (making pb appear
> synchronous) and met with similar remarks to my post for help. But even
> though I did manage to write a hack using a interleaved
> threadedselectreactor,
> threading.Event and a forced event processing while loop, the result was
> mostly functional but ugly and a pain to debug.
>
> It was a flaw in my design.
>
> And after some serious reworking and acceptance of a more asynchronous
> methodology, my program is the better for it. Way better.
>
> In short, I would recommend _not_ forcing/hacking twisted to be something
> its not. Use L. Daniel's suggestion, use a synchronous network system like
> xmlrpclib, or rethink the meta problem your are trying to solve.

In the end it's not a flaw in the design. The software package with close to 
1.5 million lines of code runs just fine and did so for many years. 
The problem is that customers hire some homegrown MS Access programmers for 
whom anything remotely like network programming is a black box  and expect 
them to be able to write a module for my system. It's pretty hard to explain 
deferred's to someone who thinks a socket is the power outlet where he plugs 
his vacuum in and a port is the thing where the ships go to. Guess who gets 
the blame when their employees can't handle it. Thus the idea to make that 
API a bit less "deferred".
Yeah - I should tell them "hire decent programmers who have a clue"...
Well, was worth a try - someone might have come up with something...

	UC

--
Open Source Solutions 4U, LLC	1618 Kelly St
Phone:  +1 707 568 3056		Santa Rosa, CA 95401
Cell:   +1 650 302 2405		United States
Fax:    +1 707 568 6416



From exarkun at divmod.com  Fri Feb 24 19:35:04 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 24 Feb 2006 21:35:04 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>
Message-ID: <20060225023504.6122.570776444.divmod.quotient.7128@ohm>

On Fri, 24 Feb 2006 11:59:10 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>I'm going to refrain from passing judgement, and just
>ask, isn't this what deferredResult() is all about
>(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?
>
>  Lenny

Also not passing any judgement, deferredResult is deprecated and will be removed in a future version of Twisted.  Also, it sucks a lot.  Ok maybe there's a little judgement.

Jean-Paul



From jml at mumak.net  Sat Feb 25 05:33:47 2006
From: jml at mumak.net (Jonathan Lange)
Date: Sat, 25 Feb 2006 23:33:47 +1100
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <20060225023504.6122.570776444.divmod.quotient.7128@ohm>
References: <20060224195910.26868.qmail@web31514.mail.mud.yahoo.com>
	<20060225023504.6122.570776444.divmod.quotient.7128@ohm>
Message-ID: <d06a5cd30602250433w2bbcb603x1d379567c69dc6b7@mail.gmail.com>

On 2/25/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Fri, 24 Feb 2006 11:59:10 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
> >I'm going to refrain from passing judgement, and just
> >ask, isn't this what deferredResult() is all about
> >(http://twistedmatrix.com/documents/current/api/twisted.trial.util.html#deferredResult)?
> >
> >  Lenny
>
> Also not passing any judgement, deferredResult is deprecated and will be removed in a future version of Twisted.  Also, it sucks a lot.  Ok maybe there's a little judgement.

As soon as the 2.2 released is announced and the existing unit tests
stop using it.
Package maintainers, fix your damn tests.

jml



From glyph at divmod.com  Sat Feb 25 13:50:12 2006
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 25 Feb 2006 15:50:12 -0500
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <d06a5cd30602250433w2bbcb603x1d379567c69dc6b7@mail.gmail.com>
Message-ID: <20060225205012.6122.1174150692.divmod.quotient.7725@ohm>

On Sat, 25 Feb 2006 23:33:47 +1100, Jonathan Lange <jml at mumak.net> wrote:

>Package maintainers, fix your damn tests.

FWIW, http://divmod.org/trac/changeset/4918



From jml at mumak.net  Sun Feb 26 23:48:38 2006
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 27 Feb 2006 17:48:38 +1100
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
Message-ID: <d06a5cd30602262248x177f9f66q1b327b2168f05982@mail.gmail.com>

Hi,

loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
makes them broken.

It appears that they were always meant to block. Why is this? Can we
get rid of them?

jml



From thys at quaint.co.za  Mon Feb 27 03:20:41 2006
From: thys at quaint.co.za (Thys Meintjes)
Date: Mon, 27 Feb 2006 12:20:41 +0200
Subject: [Twisted-Python] twisted TCP frame size
Message-ID: <1141035641.8811.51.camel@localhost.localdomain>

Hi,

I've recently written a threaded client server application using a
custom message protocol. Each message is 49 bytes long and needs to
arrive at the client as soon as possible. 

In the current app I send() each message as soon as all 49 bytes are
available, I also recv(49) bytes at the client side (buffering as
necessary). The threaded application thus always reads 49 bytes from the
network buffers as soon as it is possible to do so. This application
consumes about 9% cpu time at full throttle.

Because I already use the twisted.enterprise adbapi on the client side I
decided to get rid of all the client threads and use twisted for the TCP
stuff as well. I've written a small test script to determine basic loads
and performance:

-----------------
#! /usr/bin/env python

import psyco
psyco.full()

import array
import sys

from twisted.internet.protocol import Protocol,ReconnectingClientFactory
from twisted.internet import reactor

f = open("wakka", "w")

class TRAUReceiver(Protocol):

    def dataReceived(self, data):
        print len(data)
	f.write(data)
	# f.flush()        

    def connectionMade(self):
        """ * connection were made, send signon"""

        print "Signing on...",        
        signon = array.array('B', [ord('T'), 1 ,255, 1, 255]) 
        self.transport.write(signon.tostring())
        print "Done"


class TRAUClientFactory(ReconnectingClientFactory):

    def startedConnecting(self, connector):
        print 'Started to connect.'

    def buildProtocol(self, addr):
        print 'Connected.'
        print 'Resetting reconnection delay'
        self.resetDelay()
        return TRAUReceiver()

    def clientConnectionLost(self, connector, reason):
        print 'Lost connection.  Reason:', reason
        
        ReconnectingClientFactory.clientConnectionLost(self,
                                                       connector, reason)

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        ReconnectingClientFactory.clientConnectionFailed(self,
                                                         connector, reason)

reactor.connectTCP('localhost', 55555, TRAUClientFactory())
reactor.run()
------------------

Connecting the above to the server yielded somewhat surprising results:

The length of the dataReceived() data between runs varies between 49 and
multiples of 49 bytes. I understand this (I think) as the ethernet
packet length sweet spot is about 1.3kB and Protocol is propably
optimized arround that. This does imply that I need a more elaborate
frame caching scheme on the client side than the one I currently have,
as another socket connection signals if messages from the current
connection must be stored or discarded. 

Surprisingly, the script data length is reported as continuous 49 bytes
at leas 4/10 times it's run, on other runs the print len(data) line
looks something like this:

49
12691
49
7938
49

Each second dataReceived() callback is 49 bytes, the rest multiples of
49.

When the script reports all frames as 49;  cpu consumption is ~33%, when
staggered it's ~4%. The dataReceived() call seems overly expensive when
compared with the 'raw' synchronous recv().

Paradoxically, padding the 49 byte message with 1000 pad bytes improves
the script's performance 8 times; due to the decrease in  dataReceived()
calls probably.

So, 
1) is there a way to force dataReceived() to return when a certain data
length has been received ? 
2) Why is dataReceived() so expensive (if it is) ?
3) Is Protocol the correct tree or are there other ways to handle small
time sensitive messages in twisted. 

Apologies for the longish post.

Regards
Thys





From exarkun at divmod.com  Mon Feb 27 06:56:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2006 08:56:44 -0500
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
In-Reply-To: <d06a5cd30602262248x177f9f66q1b327b2168f05982@mail.gmail.com>
Message-ID: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>

On Mon, 27 Feb 2006 17:48:38 +1100, Jonathan Lange <jml at mumak.net> wrote:
>Hi,
>
>loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
>makes them broken.

They were not always based on these two functions.  Someone changed them to work this way after spinWhile and spinUntil were added to trial.

>
>It appears that they were always meant to block. Why is this? Can we
>get rid of them?

They should be deprecated in favor of an API which returns a Deferred.

Jean-Paul



From foom at fuhm.net  Mon Feb 27 08:09:41 2006
From: foom at fuhm.net (James Y Knight)
Date: Mon, 27 Feb 2006 10:09:41 -0500
Subject: [Twisted-Python] twisted.protocols.loopback.loopbackTCP(UNIX) is
	broken
In-Reply-To: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>
References: <20060227135644.6122.1125885898.divmod.quotient.9181@ohm>
Message-ID: <EF90BAA4-0932-44C7-9AF1-EB95B33BB6A1@fuhm.net>


On Feb 27, 2006, at 8:56 AM, Jean-Paul Calderone wrote:

> On Mon, 27 Feb 2006 17:48:38 +1100, Jonathan Lange <jml at mumak.net>  
> wrote:
>> Hi,
>>
>> loopbackTCP and loopbackUNIX both use spinWhile and spinUntil, which
>> makes them broken.
>
> They were not always based on these two functions.  Someone changed  
> them to work this way after spinWhile and spinUntil were added to  
> trial.
>
>>
>> It appears that they were always meant to block. Why is this? Can we
>> get rid of them?
>
> They should be deprecated in favor of an API which returns a Deferred.

They don't belong in twisted.protocols at all, as they a) aren't  
protocols, and b) are only for writing test cases. Perhaps somewhere  
under twisted.trial would be more appropriate.

James



From p.mayers at imperial.ac.uk  Mon Feb 27 09:44:18 2006
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 27 Feb 2006 16:44:18 +0000
Subject: [Twisted-Python] twisted TCP frame size
In-Reply-To: <1141035641.8811.51.camel@localhost.localdomain>
References: <1141035641.8811.51.camel@localhost.localdomain>
Message-ID: <44032C62.7090904@imperial.ac.uk>

Thys Meintjes wrote:
> 1) is there a way to force dataReceived() to return when a certain data
> length has been received ? 

dataReceived() is called via doRead() on the file descriptor, which is 
called via a select([fd,], [], []) event in the default reactor.

If you are doing something (executing code) and a TCP segment comes in, 
then another, then another, *then* you exit your code and the reactor 
falls back to select(), it'll return with the fd and doRead() will be 
called, and you'll get everything from the socket - 3 frames worth.

The correct question is, given your test script has a very small 
dataReceived method that returns quickly (I presume), why isn't the 
reactor "beating" the server and getting 49 bytes every time?

...to which I don't have a good answer. Which version of Twisted are you 
running?

> 2) Why is dataReceived() so expensive (if it is) ?

Between select() returning and dataReceived() being called, the reactor 
does lots of stuff related to running callLater's and stuff. I've found 
that's all quite expensive in earlier versions of Twisted, but it 
doesn't look like you use any of that, so I can't imagine that's it.

> 3) Is Protocol the correct tree or are there other ways to handle small
> time sensitive messages in twisted. 

Is there a reason you can't use UDP?

> 
> Apologies for the longish post.
> 
> Regards
> Thys
> 
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From moof at metamoof.net  Mon Feb 27 10:41:27 2006
From: moof at metamoof.net (Moof)
Date: Mon, 27 Feb 2006 18:41:27 +0100
Subject: [Twisted-Python] Writing a wrapper from asynchronous to
	synchronous
In-Reply-To: <200602241217.08392.uwe@oss4u.com>
References: <200602232246.03126.uwe@oss4u.com>
	<200602241233.33616.rudy@goldenhelix.com>
	<200602241217.08392.uwe@oss4u.com>
Message-ID: <bff8eeef0602270941m5bb4032wc807b76571aaf09d@mail.gmail.com>

On 2/24/06, Uwe C. Schroeder <uwe at oss4u.com> wrote:

> In the end it's not a flaw in the design. The software package with close to
> 1.5 million lines of code runs just fine and did so for many years.
> The problem is that customers hire some homegrown MS Access programmers for
> whom anything remotely like network programming is a black box  and expect
> them to be able to write a module for my system. It's pretty hard to explain
> deferred's to someone who thinks a socket is the power outlet where he plugs
> his vacuum in and a port is the thing where the ships go to. Guess who gets
> the blame when their employees can't handle it. Thus the idea to make that
> API a bit less "deferred".
> Yeah - I should tell them "hire decent programmers who have a clue"...
> Well, was worth a try - someone might have come up with something...

I came across this problem recently. I ended up using XML-RPC.NET for
the VB side, and twsited's own XML-RPC server for my side. It took me
about a week to realise that this was how to resolve my problem,
rather than working out (in my case) how to make PB be COM-Compliant.
It had the advantage that I just passed an interface file alogn to my
VB programmer who could plug it into hsi system, and he got all his
fancy syntax checkign and pop up values and all the rest.

I did consider SOAP, but WSDL gave me a headache, and I will
apparently have to cope with a VB6 project hooking up to my code in
the near future, for which there is a COM-based XML-RPC library
available.

If it is something they're goign to be "hanging" on for a significant
amount of time, you can, at the very least, offer them a UUID and a
method that they can poll to see if the deferred has fired.

Moof



From exarkun at divmod.com  Mon Feb 27 10:44:36 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 27 Feb 2006 12:44:36 -0500
Subject: [Twisted-Python] twisted TCP frame size
In-Reply-To: <44032C62.7090904@imperial.ac.uk>
Message-ID: <20060227174436.6122.580902746.divmod.quotient.9325@ohm>

On Mon, 27 Feb 2006 16:44:18 +0000, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
>Thys Meintjes wrote:
>>1) is there a way to force dataReceived() to return when a certain data
>>length has been received ?
>
>dataReceived() is called via doRead() on the file descriptor, which is 
>called via a select([fd,], [], []) event in the default reactor.
>
>If you are doing something (executing code) and a TCP segment comes in, then 
>another, then another, *then* you exit your code and the reactor falls back 
>to select(), it'll return with the fd and doRead() will be called, and 
>you'll get everything from the socket - 3 frames worth.
>
>The correct question is, given your test script has a very small 
>dataReceived method that returns quickly (I presume), why isn't the reactor 
>"beating" the server and getting 49 bytes every time?

Of course, it isn't necessarily the case that multiple TCP packets, each with 49 bytes of application-level data, are arriving between the times doRead()/dataReceived() get invoked.  Nagling on the server could cause data to arrive in multiples of 49 bytes just as easily as a slow receiver.  This could happen with the synchronous version too, you just wouldn't be able to notice it.  What Twisted does in this case is actually more efficient, since it involves fewer trips into recv(), less memory copying, etc.

Of course all the other stuff Twisted does might outweigh this (and likely does - the overhead associated with synchronously reading from one socket is much lower than the overhead of performing the same task asynchronously, at least when using select()).  Which is not to say that the Twisted version has to be slower, but you might have to work harder to see any benefits at this (essentially non-existent) level of concurrency.

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 06:22:19 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 08:22:19 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
 and loopbackUNIX return Deferreds
In-Reply-To: <E1FE470-0001eJ-00@wolfwood>
Message-ID: <20060228132219.6122.2119655857.divmod.quotient.10051@ohm>

On Tue, 28 Feb 2006 05:37:54 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>Author: jml
>Date: Tue Feb 28 05:37:52 2006
>New Revision: 16103
>
>Modified:
>   branches/deprecated-trial-1509/twisted/mail/test/test_imap.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_pop3.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_pop3client.py
>   branches/deprecated-trial-1509/twisted/mail/test/test_smtp.py
>   branches/deprecated-trial-1509/twisted/protocols/loopback.py
>   branches/deprecated-trial-1509/twisted/test/test_loopback.py
>   branches/deprecated-trial-1509/twisted/test/test_tpfile.py
>Log:
>Make loopbackTCP and loopbackUNIX return Deferreds
>
>Modified: branches/deprecated-trial-1509/twisted/protocols/loopback.py
>==============================================================================
>--- branches/deprecated-trial-1509/twisted/protocols/loopback.py	(original)
>+++ branches/deprecated-trial-1509/twisted/protocols/loopback.py	Tue Feb 28 05:37:52 2006
>@@ -122,14 +123,9 @@
>     clientF.noisy = noisy
>     reactor.connectTCP('127.0.0.1', serverPort.getHost().port, clientF)
>
>-    # this needs to wait until:
>-    #  A: the client has disconnected
>-    #  B: the server has noticed, and its own socket has disconnected
>-    #  C: the listening socket has been shut down
>-    spinUntil(lambda :clientF.disconnected)        # A
>-    spinUntil(lambda :not server.transport.connected)  # B
>-    serverPort.stopListening()
>-    spinUntil(lambda :not serverPort.connected)        # C
>+    d = clientF.deferred
>+    d.addCallback(lambda x : defer.maybeDeferred(serverPort.stopListening))
>+    return d
>

This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.

Jean-Paul



From donwsmith at gmail.com  Tue Feb 28 11:59:50 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 10:59:50 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
Message-ID: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>

Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
I'm just not seeing it.

I have a Twisted program that I need to add in the ability to make a client
telnet connection to a remote server and send some commands to it and deal
with the data received.

In my main program I have this line of code:
    reactor.connectTCP("mytelnethost", 24, Connections.TelnetConnection("myname
of object",events,"command to run"))

My Connections.TelnetConnection class looks like this:

from twisted.internet.protocol import Protocol, ReconnectingClientFactory
from twisted.conch.telnet import Telnet

class TelnetClient(Telnet):
    def connectionMade(self):
        print "connection made"
    self.write("\r\n")

    def write(self, data):
    print data
    Telnet._write(self, data+"\r\n")

    def dataReceived(self, data):
        print "received:", data
    if "User Name:" in data:
       self.write("user")

    if "Password:" in data:
       self.write("password")


    if ">" in data:
       time.sleep(2)
       self.write("connect")
    if "Connector Name:" in data:
       time.sleep(2)
       self.write("another command")



class TelnetConnection(Connection, ReconnectingClientFactory):
    """ Telnets to host:port and executes cmd. cmd """
    protocol = TelnetClient
    def  __init__(self, name, eventQueue, cmd=None):
        Connection.__init__(self, name)

    def clientConnectionFailed(self, connector, reason):
        print 'connection failed:', reason.getErrorMessage()


    def clientConnectionLost(self, connector, reason):
        print 'connection lost:', reason.getErrorMessage()



This all works great, except that the command sequence is hard coded in the
TelnetClient class. I want to be able to reference the "cmd" parameter,
which could be a list of commands to iterate over,etc. But I don't see how I
can access the "cmd" parameter that gets passed into the TelnetConnection
class from within the TelnetClient class.

I'm really desparate for some help, I've been racking my brain on this since
yesterday morning.

Thanks,

Don
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060228/228e3b14/attachment.html>

From jml at mumak.net  Tue Feb 28 13:42:05 2006
From: jml at mumak.net (Jonathan Lange)
Date: Wed, 1 Mar 2006 07:42:05 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
	and loopbackUNIX return Deferreds
In-Reply-To: <20060228132219.6122.2119655857.divmod.quotient.10051@ohm>
References: <E1FE470-0001eJ-00@wolfwood>
	<20060228132219.6122.2119655857.divmod.quotient.10051@ohm>
Message-ID: <d06a5cd30602281242j29393c59xe2d9f930728cf07b@mail.gmail.com>

On 3/1/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Tue, 28 Feb 2006 05:37:54 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
> >Author: jml
> >Date: Tue Feb 28 05:37:52 2006
> >New Revision: 16103
> >
> >Modified:
> >   branches/deprecated-trial-1509/twisted/mail/test/test_imap.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_pop3.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_pop3client.py
> >   branches/deprecated-trial-1509/twisted/mail/test/test_smtp.py
> >   branches/deprecated-trial-1509/twisted/protocols/loopback.py
> >   branches/deprecated-trial-1509/twisted/test/test_loopback.py
> >   branches/deprecated-trial-1509/twisted/test/test_tpfile.py
> >Log:
> >Make loopbackTCP and loopbackUNIX return Deferreds
> >
> >Modified: branches/deprecated-trial-1509/twisted/protocols/loopback.py
> >==============================================================================
> >--- branches/deprecated-trial-1509/twisted/protocols/loopback.py       (original)
> >+++ branches/deprecated-trial-1509/twisted/protocols/loopback.py       Tue Feb 28 05:37:52 2006
> >@@ -122,14 +123,9 @@
> >     clientF.noisy = noisy
> >     reactor.connectTCP('127.0.0.1', serverPort.getHost().port, clientF)
> >
> >-    # this needs to wait until:
> >-    #  A: the client has disconnected
> >-    #  B: the server has noticed, and its own socket has disconnected
> >-    #  C: the listening socket has been shut down
> >-    spinUntil(lambda :clientF.disconnected)        # A
> >-    spinUntil(lambda :not server.transport.connected)  # B
> >-    serverPort.stopListening()
> >-    spinUntil(lambda :not serverPort.connected)        # C
> >+    d = clientF.deferred
> >+    d.addCallback(lambda x : defer.maybeDeferred(serverPort.stopListening))
> >+    return d
> >
>
> This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.

Awesome, I wondered what that other thing was for.

How do I get a Deferred to fire when a transport is disconnected?

jml



From exarkun at divmod.com  Tue Feb 28 14:00:24 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 16:00:24 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r16103 - Make loopbackTCP
	and loopbackUNIX return Deferreds
In-Reply-To: <d06a5cd30602281242j29393c59xe2d9f930728cf07b@mail.gmail.com>
Message-ID: <20060228210024.6122.1787745885.divmod.quotient.10320@ohm>

On Wed, 1 Mar 2006 07:42:05 +1100, Jonathan Lange <jml at mumak.net> wrote:
>On 3/1/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> [snip]
>>
>> This now has a race, where the Deferred may fire before the server protocol is notified that the connection has been lost.
>
>Awesome, I wondered what that other thing was for.
>
>How do I get a Deferred to fire when a transport is disconnected?

Probably with a protocol wrapper.

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 15:12:21 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 17:12:21 -0500
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
Message-ID: <20060228221221.6122.1438406745.divmod.quotient.10375@ohm>

On Tue, 28 Feb 2006 10:59:50 -0800, Don Smith <donwsmith at gmail.com> wrote:
>Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
>I'm just not seeing it.
>
>I have a Twisted program that I need to add in the ability to make a client
>telnet connection to a remote server and send some commands to it and deal
>with the data received.
>
> [snip]
>
>This all works great, except that the command sequence is hard coded in the
>TelnetClient class. I want to be able to reference the "cmd" parameter,
>which could be a list of commands to iterate over,etc. But I don't see how I
>can access the "cmd" parameter that gets passed into the TelnetConnection
>class from within the TelnetClient class.
>
>I'm really desparate for some help, I've been racking my brain on this since
>yesterday morning.

The usual approach is to save the data (`cmd' in this case) on the factory and use `self.factory.stuff' from the protocol.  The `factory' attribute is set on the protocol class by the default `buildProtocol' implementation.  It is not available in the protocol's `__init__', but is available by the time `connectionMade' is called.

Jean-Paul



From alecu at vortech.com.ar  Tue Feb 28 15:24:15 2006
From: alecu at vortech.com.ar (Alejandro J. Cura)
Date: Tue, 28 Feb 2006 19:24:15 -0300
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
Message-ID: <1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>

As you can see in twisted.internet.protocol.Factory

    def buildProtocol(self, addr):
        """Create an instance of a subclass of Protocol.

        The returned instance will handle input on an incoming server
        connection, and an attribute \"factory\" pointing to the creating
        factory.

        Override this method to alter how Protocol instances get created.

        @param addr: an object implementing
L{twisted.internet.interfaces.IAddress}
        """
        p = self.protocol()
        p.factory = self
        return p

ReconnectingClientFactory inherits that method, so each TelnetClient
instance it builds will  have a self.factory you can use to access
your cmd list.

Hope that helps,
--
alecu

On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
> Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer, but
> I'm just not seeing it.
>
> I have a Twisted program that I need to add in the ability to make a client
> telnet connection to a remote server and send some commands to it and deal
> with the data received.
>
> In my main program I have this line of code:
>     reactor.connectTCP("mytelnethost", 24,
> Connections.TelnetConnection("myname of object",events,"command to run"))
>
> My Connections.TelnetConnection class looks like this:
>
> from twisted.internet.protocol import Protocol, ReconnectingClientFactory
> from twisted.conch.telnet import Telnet
>
> class TelnetClient(Telnet):
>     def connectionMade(self):
>         print "connection made"
>     self.write("\r\n")
>
>     def write(self, data):
>     print data
>     Telnet._write(self, data+"\r\n")
>
>     def dataReceived(self, data):
>         print "received:", data
>     if "User Name:" in data:
>        self.write("user")
>
>     if "Password:" in data:
>        self.write("password")
>
>
>     if ">" in data:
>         time.sleep(2)
>        self.write("connect")
>     if "Connector Name:" in data:
>        time.sleep(2)
>        self.write("another command")
>
>
>
> class TelnetConnection(Connection, ReconnectingClientFactory):
>     """ Telnets to host:port and executes cmd. cmd """
>     protocol = TelnetClient
>     def  __init__(self, name, eventQueue, cmd=None):
>         Connection.__init__(self, name)
>
>     def clientConnectionFailed(self, connector, reason):
>         print 'connection failed:', reason.getErrorMessage()
>
>
>     def clientConnectionLost(self, connector, reason):
>         print 'connection lost:', reason.getErrorMessage()
>
>
>
> This all works great, except that the command sequence is hard coded in the
> TelnetClient class. I want to be able to reference the "cmd" parameter,
> which could be a list of commands to iterate over,etc. But I don't see how I
> can access the "cmd" parameter that gets passed into the TelnetConnection
> class from within the TelnetClient class.
>
> I'm really desparate for some help, I've been racking my brain on this since
> yesterday morning.
>
> Thanks,
>
> Don
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>



From donwsmith at gmail.com  Tue Feb 28 15:26:03 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 14:26:03 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <20060228221221.6122.1438406745.divmod.quotient.10375@ohm>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
	<20060228221221.6122.1438406745.divmod.quotient.10375@ohm>
Message-ID: <24f63c200602281426s631bb776t5508f27d963f19a3@mail.gmail.com>

Thank you, thank you, thank you!!!

-Don

On 2/28/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>
> On Tue, 28 Feb 2006 10:59:50 -0800, Don Smith <donwsmith at gmail.com> wrote:
> >Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
> but
> >I'm just not seeing it.
> >
> >I have a Twisted program that I need to add in the ability to make a
> client
> >telnet connection to a remote server and send some commands to it and
> deal
> >with the data received.
> >
> > [snip]
> >
> >This all works great, except that the command sequence is hard coded in
> the
> >TelnetClient class. I want to be able to reference the "cmd" parameter,
> >which could be a list of commands to iterate over,etc. But I don't see
> how I
> >can access the "cmd" parameter that gets passed into the TelnetConnection
> >class from within the TelnetClient class.
> >
> >I'm really desparate for some help, I've been racking my brain on this
> since
> >yesterday morning.
>
> The usual approach is to save the data (`cmd' in this case) on the factory
> and use `self.factory.stuff' from the protocol.  The `factory' attribute is
> set on the protocol class by the default `buildProtocol' implementation.  It
> is not available in the protocol's `__init__', but is available by the time
> `connectionMade' is called.
>
> Jean-Paul
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060228/04c52bb3/attachment.html>

From richard at reticulatus.plus.com  Tue Feb 28 15:40:28 2006
From: richard at reticulatus.plus.com (Richard Townsend)
Date: Tue, 28 Feb 2006 22:40:28 +0000
Subject: [Twisted-Python] Twisted & SOAP
Message-ID: <4404D15C.3020802@reticulatus.plus.com>

I've been experimenting with the Twisted web/soap.py integration with 
SOAPpy which appears to do the sort of I stuff I need at the moment.

However, a recent message on the Pywebsvcs-talk mailing list said:

"Any objection to our diabolical plan to integrate
wstools into ZSI and shove SOAPpy to a second class status? We'd like to
converge on a single python web services solution, but we're working hard to
make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."

What effect will this development have on support for SOAP in Twisted?

regards
Richard






From cwmoad at gmail.com  Tue Feb 28 16:12:52 2006
From: cwmoad at gmail.com (Charlie Moad)
Date: Tue, 28 Feb 2006 18:12:52 -0500
Subject: [Twisted-Python] Twisted & SOAP
In-Reply-To: <4404D15C.3020802@reticulatus.plus.com>
References: <4404D15C.3020802@reticulatus.plus.com>
Message-ID: <6382066a0602281512m38d6594n6efe35425e07c7f9@mail.gmail.com>

     SOAPpy is a very primitive soap implementation compared to ZSI,
but it works for the simple cases.  However, focus is being directed
to ZSI primarily now.  If you check out ZSI from cvs you can build it
with, "python setup.py build --twisted", and this will include twisted
resources that can be used like any other twisted.web resource.  This
work migrated from pygridware to ZSI recently, so it is not trivial to
use yet.  Pygridware also includes a web2 resource, but this has not
been moved to ZSI yet.  Maybe once these classes mature they will be
donated for twisted to include.
     I am not a twisted developer so I can't speak for them, but this
is the current status of the pywebsvcs group.
     I cc'd the twisted-web mailing list, because that is probably
where this thread belongs, hence the general list should not be
included in future replies.

- Charlie

On 2/28/06, Richard Townsend <richard at reticulatus.plus.com> wrote:
> I've been experimenting with the Twisted web/soap.py integration with
> SOAPpy which appears to do the sort of I stuff I need at the moment.
>
> However, a recent message on the Pywebsvcs-talk mailing list said:
>
> "Any objection to our diabolical plan to integrate
> wstools into ZSI and shove SOAPpy to a second class status? We'd like to
> converge on a single python web services solution, but we're working hard to
> make sure SOAPpy users can do in ZSI what they can do in SOAPpy..."
>
> What effect will this development have on support for SOAP in Twisted?
>
> regards
> Richard
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From donwsmith at gmail.com  Tue Feb 28 18:31:46 2006
From: donwsmith at gmail.com (Don Smith)
Date: Tue, 28 Feb 2006 17:31:46 -0800
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>
References: <24f63c200602281059g56f65c4ckffaf57d0ef9547c9@mail.gmail.com>
	<1918a2ec0602281424g3a9725b4g555b85c1e841eeff@mail.gmail.com>
Message-ID: <24f63c200602281731s6e5f097es1dc84fd3c1ca2c37@mail.gmail.com>

So, I have this working now. I can send commands to the telnet server,
dynamically. However, is there a way to supress the output of the data I get
back so it doesn't flood my shell (stdout)?

Thanks,

Don

On 2/28/06, Alejandro J. Cura <alecu at vortech.com.ar> wrote:
>
> As you can see in twisted.internet.protocol.Factory
>
>     def buildProtocol(self, addr):
>         """Create an instance of a subclass of Protocol.
>
>         The returned instance will handle input on an incoming server
>         connection, and an attribute \"factory\" pointing to the creating
>         factory.
>
>         Override this method to alter how Protocol instances get created.
>
>         @param addr: an object implementing
> L{twisted.internet.interfaces.IAddress}
>         """
>         p = self.protocol()
>         p.factory = self
>         return p
>
> ReconnectingClientFactory inherits that method, so each TelnetClient
> instance it builds will  have a self.factory you can use to access
> your cmd list.
>
> Hope that helps,
> --
> alecu
>
> On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
> > Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
> but
> > I'm just not seeing it.
> >
> > I have a Twisted program that I need to add in the ability to make a
> client
> > telnet connection to a remote server and send some commands to it and
> deal
> > with the data received.
> >
> > In my main program I have this line of code:
> >     reactor.connectTCP("mytelnethost", 24,
> > Connections.TelnetConnection("myname of object",events,"command to
> run"))
> >
> > My Connections.TelnetConnection class looks like this:
> >
> > from twisted.internet.protocol import Protocol,
> ReconnectingClientFactory
> > from twisted.conch.telnet import Telnet
> >
> > class TelnetClient(Telnet):
> >     def connectionMade(self):
> >         print "connection made"
> >     self.write("\r\n")
> >
> >     def write(self, data):
> >     print data
> >     Telnet._write(self, data+"\r\n")
> >
> >     def dataReceived(self, data):
> >         print "received:", data
> >     if "User Name:" in data:
> >        self.write("user")
> >
> >     if "Password:" in data:
> >        self.write("password")
> >
> >
> >     if ">" in data:
> >         time.sleep(2)
> >        self.write("connect")
> >     if "Connector Name:" in data:
> >        time.sleep(2)
> >        self.write("another command")
> >
> >
> >
> > class TelnetConnection(Connection, ReconnectingClientFactory):
> >     """ Telnets to host:port and executes cmd. cmd """
> >     protocol = TelnetClient
> >     def  __init__(self, name, eventQueue, cmd=None):
> >         Connection.__init__(self, name)
> >
> >     def clientConnectionFailed(self, connector, reason):
> >         print 'connection failed:', reason.getErrorMessage()
> >
> >
> >     def clientConnectionLost(self, connector, reason):
> >         print 'connection lost:', reason.getErrorMessage()
> >
> >
> >
> > This all works great, except that the command sequence is hard coded in
> the
> > TelnetClient class. I want to be able to reference the "cmd" parameter,
> > which could be a list of commands to iterate over,etc. But I don't see
> how I
> > can access the "cmd" parameter that gets passed into the
> TelnetConnection
> > class from within the TelnetClient class.
> >
> > I'm really desparate for some help, I've been racking my brain on this
> since
> > yesterday morning.
> >
> > Thanks,
> >
> > Don
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20060228/5555d8ec/attachment.html>

From exarkun at divmod.com  Tue Feb 28 18:38:44 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 20:38:44 -0500
Subject: [Twisted-Python] Sending commands when using Telnet client
In-Reply-To: <24f63c200602281731s6e5f097es1dc84fd3c1ca2c37@mail.gmail.com>
Message-ID: <20060301013844.6122.1035753858.divmod.quotient.10558@ohm>

On Tue, 28 Feb 2006 17:31:46 -0800, Don Smith <donwsmith at gmail.com> wrote:
>On 2/28/06, Alejandro J. Cura <alecu at vortech.com.ar> wrote:
>> On 2/28/06, Don Smith <donwsmith at gmail.com> wrote:
>> > Yes, I'm sort of a Twisted newbie, so maybe this has an obvious answer,
>> but
>> > I'm just not seeing it.
>> >
>> > I have a Twisted program that I need to add in the ability to make a
>> client
>> > telnet connection to a remote server and send some commands to it and
>> deal
>> > with the data received.
>> >
>> > In my main program I have this line of code:
>> >     reactor.connectTCP("mytelnethost", 24,
>> > Connections.TelnetConnection("myname of object",events,"command to
>> run"))
>> >
>> > My Connections.TelnetConnection class looks like this:
>> >
>> > from twisted.internet.protocol import Protocol,
>> ReconnectingClientFactory
>> > from twisted.conch.telnet import Telnet
>> >
>> > class TelnetClient(Telnet):
>> >     def connectionMade(self):
>> >         print "connection made"
>> >     self.write("\r\n")
>> >
>> >     def write(self, data):
>> >     print data
>> >     Telnet._write(self, data+"\r\n")
>> >
>> >     def dataReceived(self, data):
>> >         print "received:", data
>> >     if "User Name:" in data:
>> >        self.write("user")
>> >
>> >     if "Password:" in data:
>> >        self.write("password")
>> >
>> >
>> >     if ">" in data:
>> >         time.sleep(2)
>> >        self.write("connect")
>> >     if "Connector Name:" in data:
>> >        time.sleep(2)
>> >        self.write("another command")
>> >
>> >
>> >
>> > class TelnetConnection(Connection, ReconnectingClientFactory):
>> >     """ Telnets to host:port and executes cmd. cmd """
>> >     protocol = TelnetClient
>> >     def  __init__(self, name, eventQueue, cmd=None):
>> >         Connection.__init__(self, name)
>> >
>> >     def clientConnectionFailed(self, connector, reason):
>> >         print 'connection failed:', reason.getErrorMessage()
>> >
>> >
>> >     def clientConnectionLost(self, connector, reason):
>> >         print 'connection lost:', reason.getErrorMessage()
>> >
>> >
>> >
>> > This all works great, except that the command sequence is hard coded in
>> the
>> > TelnetClient class. I want to be able to reference the "cmd" parameter,
>> > which could be a list of commands to iterate over,etc. But I don't see
>> how I
>> > can access the "cmd" parameter that gets passed into the
>> TelnetConnection
>> > class from within the TelnetClient class.
>> >
>> > I'm really desparate for some help, I've been racking my brain on this
>> since
>> > yesterday morning.
>> >
>> > Thanks,
>> >
>> > Don
>> >
>>
>> As you can see in twisted.internet.protocol.Factory
>>
>>     def buildProtocol(self, addr):
>>         """Create an instance of a subclass of Protocol.
>>
>>         The returned instance will handle input on an incoming server
>>         connection, and an attribute \"factory\" pointing to the creating
>>         factory.
>>
>>         Override this method to alter how Protocol instances get created.
>>
>>         @param addr: an object implementing
>> L{twisted.internet.interfaces.IAddress}
>>         """
>>         p = self.protocol()
>>         p.factory = self
>>         return p
>>
>> ReconnectingClientFactory inherits that method, so each TelnetClient
>> instance it builds will  have a self.factory you can use to access
>> your cmd list.
>>
>> Hope that helps,
>> --
>> alecu
>>
>So, I have this working now. I can send commands to the telnet server,
>dynamically. However, is there a way to supress the output of the data I get
>back so it doesn't flood my shell (stdout)?

How about removing the print from dataReceived? :)

Jean-Paul



From exarkun at divmod.com  Tue Feb 28 20:13:09 2006
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 28 Feb 2006 22:13:09 -0500
Subject: [Twisted-Python] Twisted Website
In-Reply-To: 0
Message-ID: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>

As some of you may have noticed, Twisted's website has undergone a
somewhat major change.  This comes in several pieces:

  * Roundup has been replaced by trac as our issue tracker.  All of
the tickets in roundup have been moved over and the various fields
adjusted to fit trac's view of things.  User accounts have been
transferred as well; you should be able to log in to trac using your
roundup username/password.  If you had configured roundup with your
email address, that has been transferred as well; if you did not, or
if you didn't have a roundup account and create a trac account, you
must provide an email address before you will be able to submit new
tickets.  We still have the roundup database around in case anyone
notices any problems, but so far as I can tell, everything has been
migrated successfully.  We are using several custom plugins in order
to preserve roundup functionality which trac does not offer
natively: the twisted-bugs list is still in operation and changes
will still be sent to anyone who is nosy ("cc'ed") on a ticket.  We
have introduced a new feature as well: newly created tickets are
now announced on the IRC channel.

  * Epydoc has been replaced by docextractor (to be renamed).  Since
we have so much documentation using epytext markup, we will likely
continue to use that markup style.  API documentation emitted by
docextractor is currently up on the website at the URL previously
occupied by epydoc's output.  The docextractor markup is currently
very rough.  Patches are, as always, welcome ;)  You will find the
source at <http://codespeak.net/svn/user/mwh/docextractor/trunk>.

  * Obviously we now have a wiki.  Feel free to contribute content.
A few pages, mainly those with project download links and such, will
be kept read-only.  Speak with project maintainers if you want to
make changes to these pages.

  * Tim Stebbing has volunteered to maintain the website from this
point on.  Project maintainers, speak with him (tjs on irc) to get
edit permission for the read-only parts of the wiki.

There are bound to be a few problems with the new site.  If you
encounter any, please report them, preferably in the tracker.

Thanks to everyone who helped out with the website switch over, in
particular Chris Armstrong who helped push things over the last hump,
and Michael Hudson who did what a lot of people have been avoiding
for years and wrote an epydoc replacement.

Jean-Paul



From TimothyFitz at gmail.com  Tue Feb 28 23:53:31 2006
From: TimothyFitz at gmail.com (Timothy Fitz)
Date: Wed, 1 Mar 2006 01:53:31 -0500
Subject: [Twisted-Python] Twisted Website
In-Reply-To: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
References: <20060301031309.6122.2091463807.divmod.quotient.10633@ohm>
Message-ID: <972ec5bd0602282253u34bf1965sd3bd288979d1772a@mail.gmail.com>

On 2/28/06, Jean-Paul Calderone <exarkun at divmod.com> wrote:
>   * Obviously we now have a wiki.  Feel free to contribute content.
> A few pages, mainly those with project download links and such, will
> be kept read-only.  Speak with project maintainers if you want to
> make changes to these pages.

Unfortunately, it's hard to link new pages to the main twisted site in
any meaningful way. For example I'd like to start a windows-related
page to track suggestions and conceptual issues, but none of the pages
relevant to twisted windows development allow editing. It seems to me
that a "main page" that branches off into
not-necessarily-twisted-sponsored wiki content would make it
tremendously easier.



