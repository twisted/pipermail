From snailcoder at 163.com  Wed Mar  2 07:32:32 2016
From: snailcoder at 163.com (snailcoder)
Date: Wed, 2 Mar 2016 22:32:32 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_d029221de37542d886329848b64efba1>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160302/73b8825a/attachment.html>

From hawkowl at atleastfornow.net  Thu Mar  3 00:20:26 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 3 Mar 2016 15:20:26 +0800
Subject: [Twisted-Python] Twisted 16.0.0 Prerelease 3 Announcement
Message-ID: <E7F701B9-BB0D-42DD-9BAB-3A4B15CF5B3F@atleastfornow.net>

Hi everyone,

exarkun spotted a regression in the 16.0.0 prereleases, where calling endpoints' serverWithString with a SSL strports description and an empty chain file would give an unhelpful error message.

These issues have been fixed and are in Twisted 16.0.0pre3. You can find it and the NEWS file at https://twistedmatrix.com/Releases/pre/16.0.0pre3/ .

If no further issues are identified, Twisted 16.0 will be released this week (for real!).

- Amber Brown
Twisted Release Manager
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160303/975a17b8/attachment.pgp>

From mashiat.sarker at gmail.com  Sat Mar  5 20:11:23 2016
From: mashiat.sarker at gmail.com (Mashiat Sarker Shakkhar)
Date: Sat, 5 Mar 2016 22:11:23 -0500
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
In-Reply-To: <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
References: <emc_d029221de37542d886329848b64efba1>
 <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
Message-ID: <56DB9FDB.3080701@gmail.com>

On 3/2/16 9:32 AM, snailcoder wrote:
> I'm trying to implement some login logic using twisted.cred module for 
> a website. In short, there's a login page with username/password 
> forms. Once the user input the right username/password, the browser 
> will redirect to another page which includes the user's profile.
>
> Does anyone have any ideas about how to implement this logic with 
> twisted.cred checkers, credentials and portal? Any suggestion is 
> appreciated :-)

Hi

Before I answer your question, allow me to give you a word of advice. 
Twisted is a low-level library. While you can build a web application 
directly on top of Twisted, I would not recommend it. You need 
higher-level abstractions to write manageable code. I recommend that you 
find a framework that builds on top of Twisted.

As for your question, you will find many examples of Twisted 
authentication if you Google a bit. You should probably start by reading 
this page: 
https://twistedmatrix.com/documents/current/core/howto/cred.html. Below 
you will find a simple (and not very secure) example. It uses HTTP Basic 
authentication. It owes its verbosity to the low-level nature of Twisted.


     from twisted.cred import portal, checkers, credentials, error as 
credError
     from twisted.internet import defer, reactor
     from twisted.web import guard, http, resource, server
     from zope.interface import implements

     class HttpPasswordRealm(object):
         implements(portal.IRealm)

         def __init__(self, resource):
             self.resource = resource

         def requestAvatar(self, avatarId, mind, *interfaces):
             if resource.IResource in interfaces:
                 return (resource.IResource, self.resource, lambda: None)
             raise NotImplementedError()

     class MyPasswordChecker(object):
         implements(checkers.ICredentialsChecker)
         credentialInterfaces = (credentials.IUsernamePassword, )
         MY_INSECURE_CREDS = {'name': 'pa$$w0rd'}

         @defer.inlineCallbacks
         def requestAvatarId(self, creds):
             pw = self.MY_INSECURE_CREDS.get(creds.username) or b''
             pw_match = yield creds.checkPassword(pw)
             if pw_match is True:
                 defer.returnValue(creds.username)
             else:
                 raise credError.UnauthorizedLogin('Incorrect username 
or password')

     class MyPortal(resource.Resource):
         isLeaf = True

         def render_GET(self, request):
             return 'Top secret content'

     checker = MyPasswordChecker()
     realm = HttpPasswordRealm(MyPortal())
     p = portal.Portal(realm, [checker, ])

     factory = guard.BasicCredentialFactory('My secret portal')
     protected_resource = guard.HTTPAuthSessionWrapper(p, [factory, ])

     site = server.Site(protected_resource)
     site.protocol = http.HTTPChannel
     reactor.listenTCP(8080, site)

     reactor.run()


Do not go and copy-paste the above. Please do your research. To build 
the interaction you described, I will recommend using Klein 
(https://github.com/twisted/klein). Klein can give you your entire app 
as a Resource instance. This example does not manage sessions or lets 
you log out. It only describes how you can protect a Resource using 
Twisted.cred. Good luck.

Regards
Shakkhar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160305/11d6aa49/attachment.html>

From donal.mcmullan at gmail.com  Sun Mar  6 13:51:20 2016
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 6 Mar 2016 15:51:20 -0500
Subject: [Twisted-Python] password reset not working?
Message-ID: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>

I just reset my password at https://twistedmatrix.com/trac/reset_password a
couple of times. In both cases the new password that was sent to me is
rejected when I try to log in.

Is this supposed to work? I only found the path to the reset_password form
by searching the Trac docs. I'm not sure it's linked to from anywhere on
twistedmatrix.com

Thanks

DJM
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160306/5f89fe76/attachment.html>

From glyph at twistedmatrix.com  Mon Mar  7 12:34:43 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 7 Mar 2016 11:34:43 -0800
Subject: [Twisted-Python] password reset not working?
In-Reply-To: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
References: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
Message-ID: <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>


> On Mar 6, 2016, at 12:51 PM, Donal McMullan <donal.mcmullan at gmail.com> wrote:
> 
> I just reset my password at https://twistedmatrix.com/trac/reset_password <https://twistedmatrix.com/trac/reset_password> a couple of times. In both cases the new password that was sent to me is rejected when I try to log in.
> 
> Is this supposed to work? I only found the path to the reset_password form by searching the Trac docs. I'm not sure it's linked to from anywhere on twistedmatrix.com <http://twistedmatrix.com/>
Our trac installation is ... slightly creaky, account management particularly.  Spammers bulk-register accounts which generates more load than trac is really designed for.  I'm not sure why this isn't working today (as far as I know, it usually does?) but I'd be happy to delete your password to let you re-sign-up if you send me a private email.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160307/8e61c084/attachment.html>

From donal.mcmullan at gmail.com  Mon Mar  7 13:30:17 2016
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Mon, 7 Mar 2016 15:30:17 -0500
Subject: [Twisted-Python] password reset not working?
In-Reply-To: <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>
References: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
 <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>
Message-ID: <A4502E98-8F9F-4660-AAA3-3E7D730B7CB6@gmail.com>

Thanks Glyph - Hawkie was good enough to sort me out already :)

DJM

> On 7/03/2016, at 2:34 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Mar 6, 2016, at 12:51 PM, Donal McMullan <donal.mcmullan at gmail.com> wrote:
>> 
>> I just reset my password at https://twistedmatrix.com/trac/reset_password a couple of times. In both cases the new password that was sent to me is rejected when I try to log in.
>> 
>> Is this supposed to work? I only found the path to the reset_password form by searching the Trac docs. I'm not sure it's linked to from anywhere on twistedmatrix.com
> 
> Our trac installation is ... slightly creaky, account management particularly.  Spammers bulk-register accounts which generates more load than trac is really designed for.  I'm not sure why this isn't working today (as far as I know, it usually does?) but I'd be happy to delete your password to let you re-sign-up if you send me a private email.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160307/9573e660/attachment.html>

From conte.angelo at gmail.com  Tue Mar  8 00:31:47 2016
From: conte.angelo at gmail.com (Angelo Conte)
Date: Tue, 8 Mar 2016 08:31:47 +0100
Subject: [Twisted-Python] Build and installation problem
Message-ID: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>

I'm new here and I want to report that I'm having troubles installing
Twisted on an embedded linux machine
<https://github.com/victronenergy/venus>.
uname -a reports:
Linux ccgx 3.7.1 #1 Tue Dec 1 14:59:18 CET 2015 armv7l GNU/Linux

I've tried to install both with pip and with setup.py (with a root user).
There is no opkg package for Twisted, All dependencies should be ok.
Here is what I get with setup.py build and install

root at ccgx:~/Twisted-15.5.0# python setup.py build
running build
running build_py
running egg_info
writing requirements to Twisted.egg-info/requires.txt
writing Twisted.egg-info/PKG-INFO
writing top-level names to Twisted.egg-info/top_level.txt
writing dependency_links to Twisted.egg-info/dependency_links.txt
reading manifest file 'Twisted.egg-info/SOURCES.txt'
writing manifest file 'Twisted.egg-info/SOURCES.txt'
running build_ext
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c conftest.c -o conftest.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
building 'twisted.test.raiser' extension
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c twisted/test/raiser.c -o
build/temp.linux-armv7l-2.7/twisted/test/raiser.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
error: command 'arm-ve-linux-gnueabi-gcc' failed with exit status 1


root at ccgx:~/Twisted-15.5.0# python setup.py  install
running install
running bdist_egg
running egg_info
writing requirements to Twisted.egg-info/requires.txt
writing Twisted.egg-info/PKG-INFO
writing top-level names to Twisted.egg-info/top_level.txt
writing dependency_links to Twisted.egg-info/dependency_links.txt
reading manifest file 'Twisted.egg-info/SOURCES.txt'
writing manifest file 'Twisted.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-armv7l/egg
running install_lib
running build_py
running build_ext
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c conftest.c -o conftest.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
building 'twisted.test.raiser' extension
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c twisted/test/raiser.c -o
build/temp.linux-armv7l-2.7/twisted/test/raiser.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
error: command 'arm-ve-linux-gnueabi-gcc' failed with exit status 1

I can't find any reference to the folder .30/build/tmp-eglibc/sysroots/bpp3
on my system.
Do you have any clue?
Thank you

Angelo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/59926adb/attachment.html>

From glyph at twistedmatrix.com  Tue Mar  8 10:51:29 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 09:51:29 -0800
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
Message-ID: <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>


> On Mar 7, 2016, at 11:31 PM, Angelo Conte <conte.angelo at gmail.com> wrote:
> 
> I can't find any reference to the folder .30/build/tmp-eglibc/sysroots/bpp3 on my system.

It looks like your embedded system can't build python extension modules; I doubt the problem is specific to Twisted.

1. Have you built any other extension modules?  ("pip install cryptography", for example)
2. Do you have any interesting text in environment variables; particularly, CFLAGS?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/9272d221/attachment.html>

From serah4291 at gmail.com  Tue Mar  8 12:10:54 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 11:10:54 -0800
Subject: [Twisted-Python] Can't identify protocol
Message-ID: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>

Hi,

I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP
connections (lsof can't identify protocol) when I get a lot of traffic . Is
this something you have seen with twisted? I'm not really dealing with
socket connections at my code level so thought I'd ask if there is a known
issue as I am trying to figure out where the connections are being left
half open.

Thanks
Matilda
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/affd8067/attachment.html>

From glyph at twistedmatrix.com  Tue Mar  8 12:43:04 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 11:43:04 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
Message-ID: <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>


> On Mar 8, 2016, at 11:10 AM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> Hi,
> 
> I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP connections (lsof can't identify protocol) when I get a lot of traffic . Is this something you have seen with twisted? I'm not really dealing with socket connections at my code level so thought I'd ask if there is a known issue as I am trying to figure out where the connections are being left half open.

What do you mean by "half open"?  What state is e.g. netstat showing them in?

-glyph




From serah4291 at gmail.com  Tue Mar  8 15:52:18 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 14:52:18 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
Message-ID: <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>

So netstat doesn't show them but lsof does and our allocated file
descriptors keep increasing and the FDs have the description "can't
identify protocol"

On Tue, Mar 8, 2016 at 11:43 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Mar 8, 2016, at 11:10 AM, Matilda Bernard <serah4291 at gmail.com>
> wrote:
> >
> > Hi,
> >
> > I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP
> connections (lsof can't identify protocol) when I get a lot of traffic . Is
> this something you have seen with twisted? I'm not really dealing with
> socket connections at my code level so thought I'd ask if there is a known
> issue as I am trying to figure out where the connections are being left
> half open.
>
> What do you mean by "half open"?  What state is e.g. netstat showing them
> in?
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/f1364497/attachment.html>

From glyph at twistedmatrix.com  Tue Mar  8 19:23:39 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 18:23:39 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
Message-ID: <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>


> On Mar 8, 2016, at 2:52 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> So netstat doesn't show them but lsof does and our allocated file descriptors keep increasing and the FDs have the description "can't identify protocol"

My guess would be that that means the file descriptor is open, but not connected to anything; which would mean that it's been left open so long that the OS has cleaned up the underlying network resources (perhaps via shutdown(2)?).

I've never seen this, personally, and my understanding of Twisted's transport mechanism is that it would be impossible unless the reactor were completely frozen for a very long period of time (4+ minutes, at least).  What operating system and version are you running?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/6658cfdc/attachment.html>

From serah4291 at gmail.com  Wed Mar  9 00:24:13 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 23:24:13 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
Message-ID: <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>

   "I've never seen this, personally, and my understanding of Twisted's
transport mechanism is that it would be impossible unless the reactor were
completely frozen for a very long period of time (4+ minutes, at least)."

How can I detect that state?

We're using OEL 6.5 and PyPy 2.6.0

Regards
Matilda

On Tue, Mar 8, 2016 at 6:23 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Mar 8, 2016, at 2:52 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
>
> So netstat doesn't show them but lsof does and our allocated file
> descriptors keep increasing and the FDs have the description "can't
> identify protocol"
>
>
> My *guess* would be that that means the file descriptor is open, but not
> connected to anything; which would mean that it's been left open so long
> that the OS has cleaned up the underlying network resources (perhaps via
> shutdown(2)?).
>
> I've never seen this, personally, and my understanding of Twisted's
> transport mechanism is that it would be impossible unless the reactor were
> completely frozen for a very long period of time (4+ minutes, at least).
> What operating system and version are you running?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160308/27fa80a1/attachment.html>

From cwest at senceive.com  Wed Mar  9 02:53:18 2016
From: cwest at senceive.com (Chris West)
Date: Wed, 9 Mar 2016 09:53:18 +0000
Subject: [Twisted-Python] Twisted serialport
Message-ID: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>

I'm currently using the SerialPort connection type in twisted 15.5.0 with python 2.7.7 on a windows machine.

Twisted serial communications with the serial port fail when pyserial is upgraded from 2.7 to 3.0.1 and fails with the following error.

Traceback (most recent call last):
  File "C:\Anaconda\Scripts\fmv3dbg-script.py", line 9, in <module>
    load_entry_point('fmv3tools==0.2.5', 'console_scripts', 'fmv3dbg')()
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 338, in main
    server = create_system(args)
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 310, in create_system
    server = SerialServer(com_port, outputs=outputs)
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 57, in __init__
    FMv3SerialGateway.__init__(self, com_port, *args, **kwargs)
  File "C:\Anaconda\lib\site-packages\flatmesh-0.2.8-py2.7.egg\flatmesh\fmv3_datacoms.py", line 403, in __init
__
    baudrate=baudrate)
  File "C:\Anaconda\lib\site-packages\twisted-15.5.0-py2.7-win32.egg\twisted\internet\_win32serialport.py", line 56, in __init__
    self._finishPortSetup()
  File "C:\Anaconda\lib\site-packages\twisted-15.5.0-py2.7-win32.egg\twisted\internet\_win32serialport.py", line 65, in _finishPortSetup
    flags, comstat = win32file.ClearCommError(self._serial.hComPort)
AttributeError: 'Serial' object has no attribute 'hComPort'

I've removed pyserial 3.0.1 from my system for the moment but I was wondering if there is a way to have both pyserial 2.7 and 3.0.1 on my system when using twisted?

Thanks,
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/93a3a788/attachment-0001.html>

From adi at roiban.ro  Wed Mar  9 02:59:21 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 9 Mar 2016 09:59:21 +0000
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>
References: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>
Message-ID: <CAFycZ9eOtEG6uUn=+5zP78wSLSiroHbP-iqDvxijLA_R4YAi_w@mail.gmail.com>

On 9 March 2016 at 09:53, Chris West <cwest at senceive.com> wrote:

> I?m currently using the SerialPort connection type in twisted 15.5.0 with
> python 2.7.7 on a windows machine.
>
>
>
> Twisted serial communications with the serial port fail when pyserial is
> upgraded from 2.7 to 3.0.1 and fails with the following error.
>
>
>

Hi,

I think that this is a know issue.

Please see https://twistedmatrix.com/trac/ticket/8159

It would help if you could try the patch and report that all is ok for your
use case.

If not the same issue, please report a new ticket.

Regards
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/ec956628/attachment.html>

From conte.angelo at gmail.com  Wed Mar  9 04:13:56 2016
From: conte.angelo at gmail.com (Angelo Conte)
Date: Wed, 9 Mar 2016 12:13:56 +0100
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
 <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
Message-ID: <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>

Thank you Glyph for your kind answer.
1) I've just tried and the same error appears, so it's not a Twisted
specific problem
2) environment variables don't contain nothing special; there is no CFLAGS
entry.

I've also searched if there were something wrong in compiler's search dirs,
but everything seems ok.

Angelo

2016-03-08 18:51 GMT+01:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Mar 7, 2016, at 11:31 PM, Angelo Conte <conte.angelo at gmail.com> wrote:
>
> I can't find any reference to the folder
> .30/build/tmp-eglibc/sysroots/bpp3 on my system.
>
>
> It looks like your embedded system can't build python extension modules; I
> doubt the problem is specific to Twisted.
>
> 1. Have you built any other extension modules?  ("pip install
> cryptography", for example)
> 2. Do you have any interesting text in environment variables;
> particularly, CFLAGS?
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/3e633b67/attachment.html>

From glyph at twistedmatrix.com  Wed Mar  9 13:07:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 12:07:34 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
Message-ID: <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>


> On Mar 8, 2016, at 11:24 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
>    "I've never seen this, personally, and my understanding of Twisted's transport mechanism is that it would be impossible unless the reactor were completely frozen for a very long period of time (4+ minutes, at least)."
> 
> How can I detect that state?

Is the server completely unresponsive for multiple minutes at a time?

> We're using OEL 6.5 and PyPy 2.6.0

You should upgrade to PyPy 4.0.1.  (Generally speaking you should always run the latest available PyPy, since they only really do bugfix and performance releases; they don't break compatibility)  I don't remember what version it was in, but somewhere in the 2.x series there was a nasty file descriptor leak whose symptoms might match what you're seeing.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/781a2ce2/attachment.html>

From glyph at twistedmatrix.com  Wed Mar  9 13:48:24 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 12:48:24 -0800
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
 <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
 <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>
Message-ID: <AE2C114B-5CC5-4997-B483-C6BD2BC280EA@twistedmatrix.com>


> On Mar 9, 2016, at 3:13 AM, Angelo Conte <conte.angelo at gmail.com> wrote:
> 
> Thank you Glyph for your kind answer.
> 1) I've just tried and the same error appears, so it's not a Twisted specific problem
> 2) environment variables don't contain nothing special; there is no CFLAGS entry.
> 
> I've also searched if there were something wrong in compiler's search dirs, but everything seems ok.

My guess is that Python is built incorrectly for this platform.

When you build Python, it remembers certain things about its build configuration and attempts to copy those things to the compile commands used to build extension modules.  It looks to me like that directory is detritus which somehow got glommed into the build configuration Python thinks it should use.

This is unfortunately about the end of my expertise in this area; you'd have better luck posting this to a list like https://www.python.org/community/sigs/current/distutils-sig/.

Thanks for using Twisted; I'm sorry it's being difficult to work with here.  I'm interested in helping you get this resolved, and I'm also on distutils-sig, so if you ask there I can always provide additional details about how Twisted's C modules work if one of the more-knowledgeable people there needs more information; feel free to ask for my help in further investigation if you need it :-).

-glyph

P.S.: Since a lot of new people are posting (which is great!) I feel like I should take the opportunity to point out that the preferred style of reply on this list is <https://en.wikipedia.org/wiki/Posting_style#Interleaved_style> followed by <https://en.wikipedia.org/wiki/Posting_style#Bottom-posting> - please refrain from <https://en.wikipedia.org/wiki/Posting_style#Top-posting>.  Thanks!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/fed00078/attachment.html>

From serah4291 at gmail.com  Wed Mar  9 16:34:37 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Wed, 9 Mar 2016 15:34:37 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
Message-ID: <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>

Thanks Glyph for the possible causes of this problem.


On Wed, Mar 9, 2016 at 12:07 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Mar 8, 2016, at 11:24 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
>
>    "I've never seen this, personally, and my understanding of Twisted's
> transport mechanism is that it would be impossible unless the reactor were
> completely frozen for a very long period of time (4+ minutes, at least)."
>
> How can I detect that state?
>
>
> Is the server completely unresponsive for multiple minutes at a time?
>
> We're using OEL 6.5 and PyPy 2.6.0
>
>
> You should upgrade to PyPy 4.0.1.  (Generally speaking you should always
> run the latest available PyPy, since they only really do bugfix and
> performance releases; they don't break compatibility)  I don't remember
> what version it was in, but somewhere in the 2.x series there was a nasty
> file descriptor leak whose symptoms *might* match what you're seeing.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/ff190849/attachment.html>

From glyph at twistedmatrix.com  Wed Mar  9 16:47:35 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 15:47:35 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
 <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
Message-ID: <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>

> On Mar 9, 2016, at 3:34 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> Thanks Glyph for the possible causes of this problem. 

I'm definitely curious if you manage to reach a resolution; please follow up with the list if you discover more information.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/05d04702/attachment.html>

From serah4291 at gmail.com  Wed Mar  9 16:48:36 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Wed, 9 Mar 2016 15:48:36 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
 <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
 <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>
Message-ID: <CAJ9RO_fnt62ikfmnujaQXwPyjXssTA+KFTEi-HcGMde02S+kgw@mail.gmail.com>

Will do.

On Wednesday, March 9, 2016, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 9, 2016, at 3:34 PM, Matilda Bernard <serah4291 at gmail.com
> <javascript:_e(%7B%7D,'cvml','serah4291 at gmail.com');>> wrote:
>
> Thanks Glyph for the possible causes of this problem.
>
>
> I'm definitely curious if you manage to reach a resolution; please follow
> up with the list if you discover more information.
>
> -glyph
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160309/5617a485/attachment-0001.html>

From cwest at senceive.com  Thu Mar 10 01:37:02 2016
From: cwest at senceive.com (Chris West)
Date: Thu, 10 Mar 2016 08:37:02 +0000
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
References: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
Message-ID: <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>

Adi,

Thanks for the reply, I've applied the patch and that has sorted out my problem.

Many thanks,
Chris

Date: Wed, 9 Mar 2016 09:59:21 +0000
From: Adi Roiban <adi at roiban.ro>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Subject: Re: [Twisted-Python] Twisted serialport
Message-ID:
	<CAFycZ9eOtEG6uUn=+5zP78wSLSiroHbP-iqDvxijLA_R4YAi_w at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

On 9 March 2016 at 09:53, Chris West <cwest at senceive.com> wrote:

> I?m currently using the SerialPort connection type in twisted 15.5.0 
> with python 2.7.7 on a windows machine.
>
>
>
> Twisted serial communications with the serial port fail when pyserial 
> is upgraded from 2.7 to 3.0.1 and fails with the following error.
>
>
>

Hi,

I think that this is a know issue.

Please see https://twistedmatrix.com/trac/ticket/8159

It would help if you could try the patch and report that all is ok for your use case.

If not the same issue, please report a new ticket.

Regards
--
Adi Roiban


From glyph at twistedmatrix.com  Thu Mar 10 12:07:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Mar 2016 11:07:58 -0800
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>
References: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
 <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>
Message-ID: <DEFB76AE-CF08-40A5-83BD-C7ECB6508F24@twistedmatrix.com>

> On Mar 10, 2016, at 12:37 AM, Chris West <cwest at senceive.com> wrote:
> 
> Adi,
> 
> Thanks for the reply, I've applied the patch and that has sorted out my problem.


Would you mind putting a comment on a ticket to that effect?

-glyph

From snailcoder at 163.com  Mon Mar 14 08:35:46 2016
From: snailcoder at 163.com (snailcoder)
Date: Mon, 14 Mar 2016 22:35:46 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <56DB9FDB.3080701@gmail.com>
 <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_923350cbae4845d88b1e492291806b7e>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160314/a7abb16a/attachment.html>

From hawkowl at atleastfornow.net  Tue Mar 15 00:13:24 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 15 Mar 2016 14:13:24 +0800
Subject: [Twisted-Python] Twisted 16.0 Released
Message-ID: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.0!

Twisted 16.0 brings some important changes, and some nice-to-haves as well. The major things are:

- TLS endpoints have arrived! They're like the old `ssl:` endpoints, but support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do hostname verification.
- Conch now uses Cryptography instead of PyCrypto for underlying cryptographic operations. This means it'll work much better on PyPy!
- Headers objects (notably used by t.web.server.Request) now support Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and values to UTF-8.
- WSGI support and AMP have been ported to Python 3, along with a handful of other modules.
- More shedding of the past, with the GTK+ 1 reactor being removed.
- Over 45 tickets have been closed since 15.5.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,

Amber Brown (HawkOwl)
Twisted Release Manager
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160315/0f237d12/attachment.pgp>

From glyph at twistedmatrix.com  Tue Mar 15 15:42:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 15 Mar 2016 14:42:03 -0700
Subject: [Twisted-Python] Twisted 16.0 Released
In-Reply-To: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
References: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
Message-ID: <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>


> On Mar 14, 2016, at 11:13 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.0!
> 
> Twisted 16.0 brings some important changes, and some nice-to-haves as well. The major things are:
> 
> - TLS endpoints have arrived! They're like the old `ssl:` endpoints, but support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do hostname verification.
> - Conch now uses Cryptography instead of PyCrypto for underlying cryptographic operations. This means it'll work much better on PyPy!
> - Headers objects (notably used by t.web.server.Request) now support Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and values to UTF-8.
> - WSGI support and AMP have been ported to Python 3, along with a handful of other modules.
> - More shedding of the past, with the GTK+ 1 reactor being removed.
> - Over 45 tickets have been closed since 15.5.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

This was a real banner release, and we have more great features coming in 16.1.  Thanks a ton to everybody once again, especially those who reviewed those first two PRs :-).

-glyph



From jerryguitarist at gmail.com  Tue Mar 15 17:58:19 2016
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 15 Mar 2016 21:28:19 -0230
Subject: [Twisted-Python] Is ticket #7934 still relevant?
Message-ID: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>

Hello, everyone!

I was just wondering, is <https://twistedmatrix.com/trac/ticket/7934> still
relevant? If so, I would love to pick up where I left off. :-)

Also, any other starter projects or easy tickets that I could maybe work on
to contribute more and learn more?

Thanks & regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160315/14773170/attachment.html>

From kevin.horn at gmail.com  Tue Mar 15 23:23:22 2016
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 16 Mar 2016 00:23:22 -0500
Subject: [Twisted-Python] Twisted 16.0 Released
In-Reply-To: <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>
References: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
 <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>
Message-ID: <CA+U=zK0P28xdm2TGihfmscAFLKgjRtSv99TjkWtNqZZ0Zfv6Rw@mail.gmail.com>

This is fantastic news.  Great work!

Thanks to all those who contributed.

On Tue, Mar 15, 2016 at 4:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Mar 14, 2016, at 11:13 PM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
> >
> > On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 16.0!
> >
> > Twisted 16.0 brings some important changes, and some nice-to-haves as
> well. The major things are:
> >
> > - TLS endpoints have arrived! They're like the old `ssl:` endpoints, but
> support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do
> hostname verification.
> > - Conch now uses Cryptography instead of PyCrypto for underlying
> cryptographic operations. This means it'll work much better on PyPy!
> > - Headers objects (notably used by t.web.server.Request) now support
> Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and
> values to UTF-8.
> > - WSGI support and AMP have been ported to Python 3, along with a
> handful of other modules.
> > - More shedding of the past, with the GTK+ 1 reactor being removed.
> > - Over 45 tickets have been closed since 15.5.
> >
> > For more information, check the NEWS file (link provided below).
> >
> > You can find the downloads at <https://pypi.python.org/pypi/Twisted>
> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The
> NEWS file is also available at <
> https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.
> >
> > Many thanks to everyone who had a part in this release - the supporters
> of the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
>
> This was a real banner release, and we have more great features coming in
> 16.1.  Thanks a ton to everybody once again, especially those who reviewed
> those first two PRs :-).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/78c6a64f/attachment.html>

From glyph at twistedmatrix.com  Tue Mar 15 23:39:54 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 Mar 2016 22:39:54 -0700
Subject: [Twisted-Python] Is ticket #7934 still relevant?
In-Reply-To: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>
References: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>
Message-ID: <3A77803D-82D2-444A-BC53-CB312C029260@twistedmatrix.com>


> On Mar 15, 2016, at 4:58 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello, everyone!
> 
> I was just wondering, is <https://twistedmatrix.com/trac/ticket/7934 <https://twistedmatrix.com/trac/ticket/7934>> still relevant? If so, I would love to pick up where I left off. :-)

It's still open, so yes, still relevant :).

> Also, any other starter projects or easy tickets that I could maybe work on to contribute more and learn more?

Generally, we need to make more log messages structured and improve our integration of logging with now-commonly-used systems, like Logstash.  If you're interested in logging there's lots to do.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160315/b1e17083/attachment.html>

From adi at roiban.ro  Wed Mar 16 02:40:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 16 Mar 2016 08:40:52 +0000
Subject: [Twisted-Python] How to get the class of the wrapped fget/fset
 property methods
In-Reply-To: <B923CC92-5C9D-4508-9862-81DAE201BB32@twistedmatrix.com>
References: <CAFycZ9eTRO5Ao0wAnybedhAdrcbZuXYd-0h4D9G7-0Hz4Uo0gg@mail.gmail.com>
 <6D0C62E4-7955-4295-95CD-96A863AE58A4@twistedmatrix.com>
 <CAFycZ9dD7sop-j8kiw6_jO=28U5CvQkH772a+d-TbgKAo-dTXA@mail.gmail.com>
 <CAFycZ9fqq=ye79DdcfP5bRx7HugiBsPw7=Jt9S60Y9Yb9ffESQ@mail.gmail.com>
 <B923CC92-5C9D-4508-9862-81DAE201BB32@twistedmatrix.com>
Message-ID: <CAFycZ9dO2f_9xp3zmimNmqbObN_T9v4qhF2=2-kFFAQ45WbcaQ@mail.gmail.com>

FYI. Amber has merged the branch adding @deprecatedProperty
https://twistedmatrix.com/trac/ticket/8124 and the issue raised in this
ticket is solved


Thanks!


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/e36612ce/attachment.html>

From itsmeshantanu at hotmail.com  Wed Mar 16 07:41:45 2016
From: itsmeshantanu at hotmail.com (Shantanoo Desai)
Date: Wed, 16 Mar 2016 14:41:45 +0100
Subject: [Twisted-Python] Cannot perform IPv6 Link-Local Multicast on Twisted
Message-ID: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>

I am trying to use the .joinGroup() by passing the IPv6 link-local multicast add. ff02::1 but get DNS lookup failure error.

I am trying to use the UDP multicast example on the twistedmatrix.com website and simply replacing the IPv4 multicast address with the IPv6 one.

I have also posted a query on StackOverflow: http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted

I am newbie on Twisted and some suggestions would be appreciated. 

Thanks a lot

Shan

Shantanoo Desai (Shan Desai)

 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/41ae2159/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Mar 16 11:55:05 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 10:55:05 -0700
Subject: [Twisted-Python] Cannot perform IPv6 Link-Local Multicast on
	Twisted
In-Reply-To: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>
References: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>
Message-ID: <A0AA2F82-2AFE-46A9-B6E3-C931F43E092E@twistedmatrix.com>


> On Mar 16, 2016, at 6:41 AM, Shantanoo Desai <itsmeshantanu at hotmail.com> wrote:
> 
> I am trying to use the .joinGroup() by passing the IPv6 link-local multicast add. ff02::1 but get DNS lookup failure error.
> 
> I am trying to use the UDP multicast example on the twistedmatrix.com <http://twistedmatrix.com/> website and simply replacing the IPv4 multicast address with the IPv6 one.
> 
> I have also posted a query on StackOverflow: http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted <http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted>
> 
> I am newbie on Twisted and some suggestions would be appreciated. 

I haven't had time to fully investigate, but unfortunately, this is probably a hard-coded limitation of Twisted, currently.  The right thing for you to do would be to contribute a patch to Twisted that fixes this; please file a ticket for that if there isn't one already.

But, in the interests both of telling you how you might write that patch, and also how to work around it right now, let me explain: 'listenMulticast' constructs a MulticastPort which has an addressFamily of AF_INET (i.e.: IPv4).  In order to join an IPv6 group, you would need one that supports IPv6.

The right way to do this within Twisted is to set the address family the way that twisted.internet.tcp._BaseTCPClient does; check if the input 'interface' is a literal ipv4 or ipv6 address and set the self.addressFamily accordingly.

However, assuming you don't care about Windows, as a quick workaround (this is NOT a good long-term solution; at some point in the distant future, `twisted.internet.udp? will hopefully disappear as an importable module, since you should always be doing this sort of thing via the reactor), you could do something like this:

from socket import AF_INET6
from twisted.internet.udp import MulticastPort

class MyMulticastPort(MulticastPort, object):
    addressFamily = AF_INET6

def listenMulticast(reactor, port, protocol, interface='', maxPacketSize=8192,
                    listenMultiple=False):
    p = MyMulticastPort(port, protocol, interface, maxPacketSize, reactor,
                        listenMultiple)
    p.startListening()
    return p

Note that this is totally untested, which is why I'm answering here and not Stack Overflow :-).  Let me know if it works!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/47fa5855/attachment.html>

From glyph at twistedmatrix.com  Wed Mar 16 12:52:43 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 11:52:43 -0700
Subject: [Twisted-Python] upcoming changes to twistedmatrix.com mail
	infrastructure
Message-ID: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>

Over the last few months, twistedmatrix.com's mailman installation has been used increasingly frequently to execute denial-of-service attacks against people's mailboxes.  This is accomplished by sending huge numbers of subscription requests to our website, which in turn sends huge numbers of confirmation emails to their inbox.  Based on some information that some targeted users have sent me, I now believe that this is to cause those users' mail quotas to be exceeded so that password reset or login notification emails won't reach them.

This has been going on for some time, but the frequency and severity of the attacks seem to be increasing; I only recently realized that this was considerably worse than an annoyance for those affected.  I now have at least 1 confirmed report of this attack being a part of a (partially successful) identity theft.

This isn't the only problem we have with email:

We're running our own infrastructure which puts load on our already beyond-overloaded volunteer system administration team.
Despite running our own infrastructure, we are not dogfooding Twisted at all in the process, so we're not even learning anything useful from the pain; "exim is bad" is a lesson we've already learned many times, we do not need to keep learning it.
Given how hard it is for us to upgrade Mailman in our current system, we aren't even dogfooding our fellow community project terribly well.
Our infrastructure runs on the same host as the website and the buildmaster, overloading a very creaky system.
In addition to mailing lists, we run a mail forwarder.  Our server's sender reputation is ... not great.  We don't have SPF records, we don't do DKIM, and we don't provide authenticated SMTP for users, so emails just come from "wherever" when they are sent from, e.g. 'glyph at twistedmatrix.com' :-).

In order to address this, as soon as I can reasonably manage to do so, I will be moving Twisted's email infrastructure to mailgun.com <http://mailgun.com/>, a product that I've been successfully using for a range of personal domains (in particular, the divmod.com <http://divmod.com/> email forwarder - yes, I still operate that, when the Twisted community promises you an email address for life you get it ;-)).  Additionally, Mailgun uses a bunch of Twisted within their infrastructure, so (although we won't be operating it) we will actually be dogfooding considerably more.

(Mailgun is a product of my employer, Rackspace, but they've given us a generous open source discount so there's no conflict of interest; the Twisted project won't be spending money on this.)

There will be a couple of inconveniences immediately after the transition:

At first, there will be no self-service subscription to mailing lists any more.  If you want to subscribe, you'll have to send a message to twisted-python-owner at twistedmatrix.com <mailto:twisted-python-owner at twistedmatrix.com> and the list administrator (right now, probably just me) will manually add your address.  (Self-service unsubscription will still be possible.)
I'm not sure if I'll be able to keep the list archives at https://twistedmatrix.com/pipermail/ <https://twistedmatrix.com/pipermail/> updated, at least at first.  I would encourage everyone to use http://news.gmane.org/gmane.comp.python.twisted <http://news.gmane.org/gmane.comp.python.twisted> and http://news.gmane.org/gmane.comp.python.twisted.web <http://news.gmane.org/gmane.comp.python.twisted.web> in the meanwhile.
Speaking of the contents of that sad URL, many disused mailing lists will be deleted.  I doubt anyone will notice since there haven't been any posts to most of them in many years.
If you presently send email from a twistedmatrix.com <http://twistedmatrix.com/> address, you will probably want to start using the mailgun forwarder so that your messages will have nice shiny DKIM/SPF headers; I suspect you may start having more deliverability problems than you already do once other mail servers notice that we have said records if you're not using them.  I'll distribute SMTP credentials via GPG-encrypted email to everyone I'm aware of who uses such an address.

There will be considerable benefits though:

For those of you with @twistedmatrix.com <http://twistedmatrix.com/> addresses, Mailgun operates a pretty conservative low-pass spam filter, but in looking at the analytics from my own personal domains, it really helps a lot and it is definitely more effective than the setup we've got right now.
Deliverability and mail-sending performance should be much improved; messages should arrive faster because they will be quarantined or deferred-bounced by major senders like GMail et. al. far less often, because we'll be forwarding less spam and legitimate messages will have appropriate anti-spam headers.
Trac will get faster at certain times because email DoSes should stop hitting the server.
Administrative overhead will decrease; we can just stop maintaining email ourselves.
Last but certainly not least, we'll stop being a collective unwilling accessory to cybercrime.

Probably these changes will all be pretty subtle, and most folks won't notice, but I wanted it to be clear in advance that they were intentional, in case there is some disruption associated with them :-).  If anyone wants to give me a hand with parts of this (for example, setting up a smarthost configuration so that trac can still send email) please let me know.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/4cd6be27/attachment.html>

From thughes at thegoldfish.org  Wed Mar 16 12:57:03 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Wed, 16 Mar 2016 18:57:03 +0000
Subject: [Twisted-Python] Client Application service.Service
Message-ID: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.



Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.


The protocol is basically a ascii line style application


It feels to me that my Service should be the core and the protocol should
just be something like

def send_mesage(message):










Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/e8944dfb/attachment.html>

From p.mayers at imperial.ac.uk  Wed Mar 16 13:06:21 2016
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Mar 2016 19:06:21 +0000
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
 twistedmatrix.com mail infrastructure
In-Reply-To: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
Message-ID: <56E9AEAD.4000001@imperial.ac.uk>

On 16/03/16 18:52, Glyph wrote:
> Over the last few months, twistedmatrix.com <http://twistedmatrix.com>'s
> mailman installation has been used increasingly frequently to execute
> denial-of-service attacks against people's mailboxes.  This is

My sympathies; this exact problem was the reason we CAPTCHA-ised our 
install of mailman and have to keep a very close eye on it.

It's really a shame there's so little open-source competition in the 
email sector these days; it all appears to have been hoovered up by 
Gmail, Office 365 and various spam (sorry - bulk email) providers.

> There will be a couple of inconveniences immediately after the transition:

Couple of random thoughts:

Does mailgun actually contain a mailman-alike product or are you 
effectively building one on top of it?

Will the mailman-style List-X headers remain?

Will the behaviour of the list w.r.t. things like routing of To:/Cc:'ed 
people change.

Good luck with the migration.


From glyph at twistedmatrix.com  Wed Mar 16 13:53:08 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 12:53:08 -0700
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
	twistedmatrix.com mail infrastructure
In-Reply-To: <56E9AEAD.4000001@imperial.ac.uk>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
 <56E9AEAD.4000001@imperial.ac.uk>
Message-ID: <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>


> On Mar 16, 2016, at 12:06 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 16/03/16 18:52, Glyph wrote:
>> Over the last few months, twistedmatrix.com <http://twistedmatrix.com>'s
>> mailman installation has been used increasingly frequently to execute
>> denial-of-service attacks against people's mailboxes.  This is
> 
> My sympathies; this exact problem was the reason we CAPTCHA-ised our install of mailman and have to keep a very close eye on it.

Yeah.  If this were the only problem we'd probably be going that route, but given issues with the rest of our mail infrastructure, getting rid of it is a lot more satisfying :).  When I do self-service subscription I do very definitely plan to integrate a CAPTCHA.

> It's really a shame there's so little open-source competition in the email sector these days; it all appears to have been hoovered up by Gmail, Office 365 and various spam (sorry - bulk email) providers.
> 
>> There will be a couple of inconveniences immediately after the transition:
> 
> Couple of random thoughts:
> 
> Does mailgun actually contain a mailman-alike product or are you effectively building one on top of it?

Mailgun does have mailing lists: https://documentation.mailgun.com/api-mailinglists.html

This is not really a "mailman-alike"; its feature-set is extremely minimal (and, as mailgun will readily tell you, using it for members-only mailing lists is a bit of a weird case for their product; their primary target is transactional application emails, like notifications of activity in a web app, invoices, alerts, that sort of thing).  There are some things we will miss (particularly archives; I'm hoping we can just pipe the messages into pipermail somehow); but huge amounts of Mailman's customizability are just useless fluff.  Some are actively bad, like mailing you all your passwords in plain text every month.  We don't use most of its features, and we have to explicitly disable a lot of them.  Many of these things are better in more recent releases, but for us, upgrading to a more recent release is quite a bit more work than abandoning it entirely.

However, despite peer-to-peer lists being a little outside Mailgun's core demographic, they're totally supported, and I've had a pretty good experience (better than mailman administration, certainly) administering a medium-sized mailing list using their web UI.  I do plan to build a few small tools, like a self-service subscription tool, using the API, but even that will be good; it'll make a nice little demo Klein app.

> Will the mailman-style List-X headers remain?

Yes, although for unfortunate technical reasons the values of those headers may change (the way lists vs. personal addresses are name-spaced on twistedmatrix.com is unfortunate for reasons having nothing to do with mailgun, but it will probably matter now whereas it didn't before).

> Will the behaviour of the list w.r.t. things like routing of To:/Cc:'ed people change.

For members-post mailing lists, mailgun unconditionally sets the reply-to header, which is exactly the way we have mailman configured right now, so: no.

> Good luck with the migration.

Thanks!  And thanks for your questions, I was worried I put a ton of work into that email only for it to land in the void :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160316/6b4e2f7f/attachment-0001.html>

From waterbug at pangalactic.us  Wed Mar 16 15:06:25 2016
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 16 Mar 2016 17:06:25 -0400
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
 twistedmatrix.com mail infrastructure
In-Reply-To: <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
 <56E9AEAD.4000001@imperial.ac.uk>
 <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>
Message-ID: <56E9CAD1.1070301@pangalactic.us>

On 03/16/2016 03:53 PM, Glyph wrote:
>
>> On Mar 16, 2016, at 12:06 PM, Phil Mayers <p.mayers at imperial.ac.uk
>> <mailto:p.mayers at imperial.ac.uk>> wrote:

>> Good luck with the migration.
>
> Thanks!  And thanks for your questions, I was worried I put a ton of
> work into that email only for it to land in the void :).

FWIW, Glyph, I read *all* your emails from beginning to end -- both
because they are always educational (for me) and because it
helps me in my never-ending quest to avoid doing real work.  :D
(So, another part of the void heard from ... ;)

But seriously:  thanks for all your work on this and Twisted in general,
and to you and all the Twisted minions for the continuing and
sustained high quality of Twisted!

Cheers,
Steve


From thughes at thegoldfish.org  Wed Mar 16 18:24:14 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Thu, 17 Mar 2016 00:24:14 +0000
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
Message-ID: <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>

Woops : accidentally sent too early

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.

Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.

The protocol is basically a ascii line style application

It feels to me that my Service should be the main business logic  and the
protocol should just be a simple send/receive something like this gist

https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36

I was then planning on writing web interface that interacted with the
service to send messages and display the response.

My main issue here is how to send the message from the service via the
protocol. I cannot find any good examples of this and am beginning to think
I am conceptualising incorrectly or over thinking it. If anyone can point
me to some examples or point me in the right direction it would be awesome.
Hopefully my example makes sense.

Cheers

Tim

Tim Hughes
mailto:thughes at thegoldfish.org

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.



Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.


The protocol is basically a ascii line style application


It feels to me that my Service should be the core and the protocol should
just be something like

def send_mesage(message):










Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160317/c6263a3a/attachment.html>

From enriquejr at gmail.com  Wed Mar 16 20:21:44 2016
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Thu, 17 Mar 2016 10:21:44 +0800
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
 <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
Message-ID: <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>

Hi Tim,

I think you need to keep a reference to an instance of your
MyClientProtocol. Your example does not show how you actually connected
your bot to a server but I assume it follows on the call to load_config on
startService. One way to do this:

class MyService(Service):
  def __init__(self):
    self._client = None

  def clientConnected(self, prot):
    # set reference to the protocol instance
    self._client = prot

  def startService():
    self.config = load_config(config_file)

    # connect bot to the server
    f = MyClientFactory(self)
    reactor.connectTCP(self.config.host, self.config.port, f)

  def sendMessage(self, msg):
    if self._client:
      self._client.sendLine(msg)

Client reference can be set from the protocol instance when connection has
been made:

class MyClientProtocol(protocol.Protocol):
  #
  def connectionMade(self):
     self.factory.service.clientConnected(self)

HTH,
Enrique

On Thu, Mar 17, 2016 at 8:24 AM, Tim Hughes <thughes at thegoldfish.org> wrote:

> Woops : accidentally sent too early
>
> Hi all,
>
> I am looking into twisted for writing a client application (bot style) and
> most of the examples I find are for server style applications.
>
> Looking at the finger example and
> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
> I am just wondering where is best to put my application logic.
>
> The protocol is basically a ascii line style application
>
> It feels to me that my Service should be the main business logic  and the
> protocol should just be a simple send/receive something like this gist
>
>
> https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36
>
> I was then planning on writing web interface that interacted with the
> service to send messages and display the response.
>
> My main issue here is how to send the message from the service via the
> protocol. I cannot find any good examples of this and am beginning to think
> I am conceptualising incorrectly or over thinking it. If anyone can point
> me to some examples or point me in the right direction it would be awesome.
> Hopefully my example makes sense.
>
> Cheers
>
> Tim
>
> Tim Hughes
> mailto:thughes at thegoldfish.org
>
> Hi all,
>
> I am looking into twisted for writing a client application (bot style) and
> most of the examples I find are for server style applications.
>
>
>
> Looking at the finger example and
> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
> I am just wondering where is best to put my application logic.
>
>
> The protocol is basically a ascii line style application
>
>
> It feels to me that my Service should be the core and the protocol should
> just be something like
>
> def send_mesage(message):
>
>
>
>
>
>
>
>
>
>
> Tim Hughes
> mailto:thughes at thegoldfish.org
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160317/e253e5db/attachment.html>

From thughes at thegoldfish.org  Thu Mar 17 17:49:28 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Thu, 17 Mar 2016 23:49:28 +0000
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
 <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
 <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>
Message-ID: <CALQL5_K1A3mT4OBZwKAGW92Zt3bDL-W7t2D-BAArU8nEtgLpig@mail.gmail.com>

Much appreciated. I think that has got me over that hurdle :-)

Tim Hughes
mailto:thughes at thegoldfish.org


On 17 March 2016 at 02:21, Enrique Samson Jr. <enriquejr at gmail.com> wrote:

> Hi Tim,
>
> I think you need to keep a reference to an instance of your
> MyClientProtocol. Your example does not show how you actually connected
> your bot to a server but I assume it follows on the call to load_config on
> startService. One way to do this:
>
> class MyService(Service):
>   def __init__(self):
>     self._client = None
>
>   def clientConnected(self, prot):
>     # set reference to the protocol instance
>     self._client = prot
>
>   def startService():
>     self.config = load_config(config_file)
>
>     # connect bot to the server
>     f = MyClientFactory(self)
>     reactor.connectTCP(self.config.host, self.config.port, f)
>
>   def sendMessage(self, msg):
>     if self._client:
>       self._client.sendLine(msg)
>
> Client reference can be set from the protocol instance when connection has
> been made:
>
> class MyClientProtocol(protocol.Protocol):
>   #
>   def connectionMade(self):
>      self.factory.service.clientConnected(self)
>
> HTH,
> Enrique
>
> On Thu, Mar 17, 2016 at 8:24 AM, Tim Hughes <thughes at thegoldfish.org>
> wrote:
>
>> Woops : accidentally sent too early
>>
>> Hi all,
>>
>> I am looking into twisted for writing a client application (bot style)
>> and most of the examples I find are for server style applications.
>>
>> Looking at the finger example and
>> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
>> I am just wondering where is best to put my application logic.
>>
>> The protocol is basically a ascii line style application
>>
>> It feels to me that my Service should be the main business logic  and the
>> protocol should just be a simple send/receive something like this gist
>>
>>
>> https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36
>>
>> I was then planning on writing web interface that interacted with the
>> service to send messages and display the response.
>>
>> My main issue here is how to send the message from the service via the
>> protocol. I cannot find any good examples of this and am beginning to think
>> I am conceptualising incorrectly or over thinking it. If anyone can point
>> me to some examples or point me in the right direction it would be awesome.
>> Hopefully my example makes sense.
>>
>> Cheers
>>
>> Tim
>>
>> Tim Hughes
>> mailto:thughes at thegoldfish.org
>>
>> Hi all,
>>
>> I am looking into twisted for writing a client application (bot style)
>> and most of the examples I find are for server style applications.
>>
>>
>>
>> Looking at the finger example and
>> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
>> I am just wondering where is best to put my application logic.
>>
>>
>> The protocol is basically a ascii line style application
>>
>>
>> It feels to me that my Service should be the core and the protocol should
>> just be something like
>>
>> def send_mesage(message):
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> Tim Hughes
>> mailto:thughes at thegoldfish.org
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160317/8fc9f55c/attachment.html>

From tobias.oberstein at tavendo.de  Fri Mar 18 11:08:21 2016
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 18 Mar 2016 18:08:21 +0100
Subject: [Twisted-Python] Crossbar.io / AutobahnPython 0.13.0
In-Reply-To: <56EC34E6.6070904@gmail.com>
References: <56EC34E6.6070904@gmail.com>
Message-ID: <56EC3605.7050108@tavendo.de>

Hi,

we've released Crossbar.io and AutobahnPython 0.13.0, running on Twisted 
16.0.0 and PyPy 5.0.

Get it here:

Source:

* https://github.com/crossbario/crossbar
* https://github.com/crossbario/autobahn-python

Python Packages:

* https://pypi.python.org/pypi/crossbar
* https://pypi.python.org/pypi/autobahn

Binary Packages (recommended)

* http://crossbar.io/docs/Local-Installation/

The binary packages contain a complete, self-contained, optimized
Crossbar.io with everything - including PyPy 5.0, and of course based on 
Twisted 16.0.0!

These packages are available for Ubuntu, FreeBSD and CentOS.
(thanks to Hawkie, Miss Amber Brown - she made that happen;) )

Cheers,
/Tobias





-------------- next part --------------
A non-text attachment was scrubbed...
Name: Pasted image at 2016_03_18 05_41 PM.png
Type: image/png
Size: 170041 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160318/d734a94d/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bildschirmfoto vom 2016-03-18 17:46:03.png
Type: image/png
Size: 221883 bytes
Desc: not available
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160318/d734a94d/attachment-0003.png>

From hs at ox.cx  Sat Mar 19 05:29:28 2016
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 19 Mar 2016 12:29:28 +0100
Subject: [Twisted-Python] pyOpenSSL 16.0.0 released
Message-ID: <F3921E30-C365-4134-9396-E44470578222@ox.cx>

On behalf of PyCA ? the Python Cryptography Authority ? I?m anxious to announce that after almost a year since the 0.15.1 release of pyOpenSSL we?ve released the brand new 16.0.0.

A few organizational notes:

1. The pyopenssl-users mailing list and #pyopenssl IRC channel are deprecated.  Please use cryptography-dev <https://mail.python.org/pipermail/cryptography-dev/> and #cryptography-dev on Freenode where you?re much more likely to get help.
2. The version scheme switched to CalVer because a 0.x version for a 15 years old project is rather odd and calling it 1.0 although we don?t expect a 2.0 to ever happen didn?t make any sense.  pyOpenSSL is a long-running project with strict backward-compatibility requirements and is hence better served with a calendar-based version scheme.
3. Please note that some of us will be doing a TLS/HTTPS workshop at PyCon US 2016 so if you always wanted to learn about these things first hand, make sure to sign up: <https://us.pycon.org/2016/schedule/presentation/1786/>.  We've opted to receive no compensation and asked the organizers to send them to PyLadies instead.  So you?ll be doing good while learning something!

***

Release details:

While the list of changes looks short, a lot internal work happened:

72 files changed, 15511 insertions(+), 15063 deletions(-)

We?ve done our best to not break any existing applications; including by making the urllib3 and Twisted test suites part of our CI.

The full changelog can be found at <https://pyopenssl.readthedocs.org/en/stable/changelog.html>.

This is the first release under full stewardship of PyCA. We have made many changes to make local development more pleasing. The test suite now passes both on Linux and OS X with OpenSSL 0.9.8, 1.0.1, and 1.0.2. It has been moved to py.test, all CI test runs are part of tox and the source code has been made fully flake8 compliant.

We hope to have lowered the barrier for contributions significantly but are open to hear about any remaining frustrations.


Backward-incompatible changes:

? Python 3.2 support has been dropped. It never had significant real world usage and has been dropped by our main dependency cryptography. Affected users should upgrade to Python 3.3 or later.


Deprecations:

? The support for EGD has been removed. The only affected function OpenSSL.rand.egd() now uses os.urandom() to seed the internal PRNG instead. Please see pyca/cryptography#1636 for more background information on this decision. In accordance with our backward compatibility policy OpenSSL.rand.egd() will be removed no sooner than a year from the release of 16.0.0.
Please note that you should use urandom for all your secure random number needs.
	? Python 2.6 support has been deprecated. Our main dependency cryptography deprecated 2.6 in version 0.9 (2015-05-14) with no time table for actually dropping it. pyOpenSSL will drop Python 2.6 support once cryptography does.


Changes:

? Fixed OpenSSL.SSL.Context.set_session_id, OpenSSL.SSL.Connection.renegotiate, OpenSSL.SSL.Connection.renegotiate_pending, and OpenSSL.SSL.Context.load_client_ca. They were lacking an implementation since 0.14. #422
? Fixed segmentation fault when using keys larger than 4096-bit to sign data. #428
? Fixed AttributeError when OpenSSL.SSL.Connection.get_app_data() was called before setting any app data. #304
? Added OpenSSL.crypto.dump_publickey() to dump OpenSSL.crypto.PKey objects that represent public keys, and OpenSSL.crypto.load_publickey() to load such objects from serialized representations. #382
? Added OpenSSL.crypto.dump_crl() to dump a certificate revocation list out to a string buffer. #368
? Added OpenSSL.SSL.Connection.get_state_string() using the OpenSSL binding state_string_long. #358
? Added support for the socket.MSG_PEEK flag to OpenSSL.SSL.Connection.recv() and OpenSSL.SSL.Connection.recv_into(). #294
? Added OpenSSL.SSL.Connection.get_protocol_version() and OpenSSL.SSL.Connection.get_protocol_version_name(). #244
? Switched to utf8string mask by default. OpenSSL formerly defaulted to a T61String if there were UTF-8 characters present. This was changed to default to UTF8String in the config around 2005, but the actual code didn't change it until late last year. This will default us to the setting that actually works. To revert this you can call OpenSSL.crypto._lib.ASN1_STRING_set_default_mask_asc(b"default"). #234

***

For PyCA,
Hynek Schlawack
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160319/a343510d/attachment.pgp>

From ldanielburr at me.com  Tue Mar 22 13:33:01 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 14:33:01 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
Message-ID: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>

Hi all,

I tried to comment on the ticket, but SpamBayes rejected it as spam.

As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to?http://pypy.org/performance.html, "Classes that inherit from both new- and old-style classes are extremely slow; avoid at all costs."

Thanks,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/82d1e925/attachment.html>

From chris.norman2 at googlemail.com  Tue Mar 22 13:42:06 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 19:42:06 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
Message-ID: <56F1A00E.3020302@googlemail.com>

Hi all,
I'm sure I asked this question before, but I can't find any answers on 
google, and I've changed my work flow a bit now, so thought it was worth 
re-asking.

So on my server's protocol, I have a send method. This allows me to pass 
arguments which get sent off to the client in the right format. The send 
method looks something like this:

  def send(self, command, **kwargs):
   """Cause the client to issue getattr(connection, command)(**kwargs). 
If disconnect evaluates to True, disconnect the client after the message 
is sent."""
   disconnect = kwargs.get('disconnect', False)
   try:
    del kwargs['disconnect']
   except KeyError:
    pass # Argument not found.
   d = defer.Deferred()
   d.addCallback(self.prepare_command) Convert the command and kwargs to 
json.
   d.addCallback(self.deferred_write) # Write the json to the transport.
   if disconnect:
    d.addCallback(self.deferred_disconnect) # Issue 
self.transport.loseConnection().
   reactor.callFromThread(d.callback, [command, kwargs]) # Call the 
deferred's callback chain.
   return d # Return the deferred.

If I try something like:
protocol.send('alert', message = '*** Disconnected. ***', disconnect = True)
the client gets disconnected, but never sees the "*** Disconnected. ***" 
message.

I guess I could do a reactor.callLater and just wait for the transport 
to get the message, but that seems sloppy, and I can't help thinking 
there must be something I'm missing.

Any ideas welcome!

Cheers all,



From ldanielburr at me.com  Tue Mar 22 13:49:46 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 14:49:46 -0500
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <56F1A00E.3020302@googlemail.com>
References: <56F1A00E.3020302@googlemail.com>
Message-ID: <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>

Hi Chris,

On March 22, 2016 at 2:42:14 PM, Chris Norman (chris.norman2 at googlemail.com) wrote:

Hi all,?
I'm sure I asked this question before, but I can't find any answers on?
google, and I've changed my work flow a bit now, so thought it was worth?
re-asking.?

So on my server's protocol, I have a send method. This allows me to pass?
arguments which get sent off to the client in the right format. The send?
method looks something like this:?

def send(self, command, **kwargs):?
"""Cause the client to issue getattr(connection, command)(**kwargs).?
If disconnect evaluates to True, disconnect the client after the message?
is sent."""?
disconnect = kwargs.get('disconnect', False)?
try:?
del kwargs['disconnect']?
except KeyError:?
pass # Argument not found.?
d = defer.Deferred()?
d.addCallback(self.prepare_command) Convert the command and kwargs to?
json.?
d.addCallback(self.deferred_write) # Write the json to the transport.?
if disconnect:?
d.addCallback(self.deferred_disconnect) # Issue?
self.transport.loseConnection().?
You are disconnecting right here, without waiting for your Deferred to fire. ?It might make better sense to add the call the self.transport.loseConnection() to your Deferred?s callback chain.

Hope this helps,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/1995721b/attachment.html>

From chris.norman2 at googlemail.com  Tue Mar 22 14:08:40 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 20:08:40 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
Message-ID: <56F1A648.9020504@googlemail.com>

Hi Daniel,

On 22/03/2016 19:49, L. Daniel Burr wrote:
> Hi Chris,
>
> On March 22, 2016 at 2:42:14 PM, Chris Norman 
> (chris.norman2 at googlemail.com <mailto:chris.norman2 at googlemail.com>) 
> wrote:
>
>> Hi all,
>> I'm sure I asked this question before, but I can't find any answers on
>> google, and I've changed my work flow a bit now, so thought it was worth
>> re-asking.
>>
>> So on my server's protocol, I have a send method. This allows me to pass
>> arguments which get sent off to the client in the right format. The send
>> method looks something like this:
>>
>> def send(self, command, **kwargs):
>> """Cause the client to issue getattr(connection, command)(**kwargs).
>> If disconnect evaluates to True, disconnect the client after the message
>> is sent."""
>> disconnect = kwargs.get('disconnect', False)
>> try:
>> del kwargs['disconnect']
>> except KeyError:
>> pass # Argument not found.
>> d = defer.Deferred()
>> d.addCallback(self.prepare_command) Convert the command and kwargs to
>> json.
>> d.addCallback(self.deferred_write) # Write the json to the transport.
>> if disconnect:
>> d.addCallback(self.deferred_disconnect) # Issue
>> self.transport.loseConnection().
>
> You are disconnecting right here, without waiting for your Deferred to 
> fire.  It might make better sense to add the call the 
> self.transport.loseConnection() to your Deferred?s callback chain.
>
> Hope this helps,
>

Actually it's been added to the callback. I think my mail client wrapped 
the lines, but issue self.transport.LoseConnection() is the comment, so 
self.deferred_disconnect is added to the callback chain.

Sorry for the confusion.

Anything else which can cause this?

Cheers,

> Daniel
> --
> L. Daniel Burr
> ldanielburr at me.com <mailto:ldanielburr at me.com>
> (312) 656-8387
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/7965ebb0/attachment.html>

From ldanielburr at me.com  Tue Mar 22 14:37:20 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 15:37:20 -0500
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <56F1A648.9020504@googlemail.com>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
 <56F1A648.9020504@googlemail.com>
Message-ID: <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>

Hi Chris,
On March 22, 2016 at 3:09:08 PM, Chris Norman (chris.norman2 at googlemail.com) wrote:

Hi Daniel,


[SNIP]

Actually it's been added to the callback. I think my mail client wrapped the lines, but issue self.transport.LoseConnection() is the comment, so self.deferred_disconnect is added to the callback chain.

Sorry for the confusion.

Anything else which can cause this?


Without seeing the rest of your code, I can?t suggest anything concrete. ?You say the client never ?sees? the message, but your call to loseConnection() still occurs, so you?re not encountering an exception during the callback chain. ?Can you come up with an minimal example the demonstrates the problem?

Daniel
?
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/fd1ce360/attachment-0001.html>

From chris.norman2 at googlemail.com  Tue Mar 22 15:14:37 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 21:14:37 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
 <56F1A648.9020504@googlemail.com>
 <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>
Message-ID: <56F1B5BD.80603@googlemail.com>

OK... ignore me.

I made your test program and it worked fine. So I tried connecting to my 
server with telnet and saw the expected message... So I checked the 
error function which should have been called on the client with the 
particular message to see it was as good as pass...

Sorry for all the messages, everything works fine, panic over!

Thank you for your help with this!


On 22/03/2016 20:37, L. Daniel Burr wrote:
> Hi Chris,
>
> On March 22, 2016 at 3:09:08 PM, Chris Norman 
> (chris.norman2 at googlemail.com <mailto:chris.norman2 at googlemail.com>) 
> wrote:
>
>> Hi Daniel,
>>
>
> [SNIP]
>
>> Actually it's been added to the callback. I think my mail client 
>> wrapped the lines, but issue self.transport.LoseConnection() is the 
>> comment, so self.deferred_disconnect is added to the callback chain.
>>
>> Sorry for the confusion.
>>
>> Anything else which can cause this?
>>
>
> Without seeing the rest of your code, I can?t suggest anything 
> concrete.  You say the client never ?sees? the message, but your call 
> to loseConnection() still occurs, so you?re not encountering an 
> exception during the callback chain.  Can you come up with an minimal 
> example the demonstrates the problem?
>
> Daniel
> ?
> L. Daniel Burr
> ldanielburr at me.com <mailto:ldanielburr at me.com>
> (312) 656-8387
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/72b706ef/attachment.html>

From glyph at twistedmatrix.com  Tue Mar 22 22:26:28 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 22 Mar 2016 21:26:28 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
Message-ID: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>


> On Mar 22, 2016, at 12:33 PM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> Hi all,

Hi Daniel,

> I tried to comment on the ticket, but SpamBayes rejected it as spam.

The spam-monitoring queue is empty, which means another admin probably got to this before I did.  But when I plugged the following paragraph in, something about it made spambayes think it was still 70% likely that it was spam.  So, I re-trained the filter repeatedly until it came out to <1%; you should have less trouble with it in the future.

> As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to http://pypy.org/performance.html <http://pypy.org/performance.html>, "Classes that inherit from both new- and old-style classes are extremely slow; avoid at all costs."


In fact, the opposite is true!  Right now, every new Twisted class must be new-style, so if it inherits from an old-style class we end up in this situation.  Since most core Twisted superclasses are old-style, that means this happens all the time.

Nothing about 8244 would involve making more hybrid classes.  Classes decorated as @oldStyle must be pure old style (the semantics of hybrids are much, much closer to new-style than old-style) so they have to be what they are today.  When we flip the switch there will be no more old-style classes at all.

Is there a scenario I'm missing / not understanding about the way the ticket's steps are outlined?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160322/55c3660c/attachment.html>

From hawkowl at atleastfornow.net  Tue Mar 22 22:54:59 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Wed, 23 Mar 2016 12:54:59 +0800
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <a4b6f1ea-b958-4eaa-b45b-4abb6f424e6f@email.android.com>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/a1ec1099/attachment.html>

From ldanielburr at me.com  Wed Mar 23 10:22:04 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 23 Mar 2016 11:22:04 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>

Hi Glyph,

On March 22, 2016 at 11:27:10 PM, Glyph (glyph at twistedmatrix.com) wrote:


On Mar 22, 2016, at 12:33 PM, L. Daniel Burr <ldanielburr at me.com> wrote:

Hi all,

Hi Daniel,

I tried to comment on the ticket, but SpamBayes rejected it as spam.

The spam-monitoring queue is empty, which means another admin probably got to this before I did. ?But when I plugged the following paragraph in, something about it made spambayes think it was still 70% likely that it was spam. ?So, I re-trained the filter repeatedly until it came out to <1%; you should have less trouble with it in the future.


Thanks for looking into that, I appreciate it.

As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to?http://pypy.org/performance.html, "Classes that inherit from both new- and old-style classes are?extremely?slow; avoid at all costs."

In fact, the opposite is true! ?Right now, every new Twisted class must?be new-style, so if it inherits from an old-style class we end up in this situation. ?Since most core Twisted superclasses are old-style, that means this happens all the time.

Nothing about 8244 would involve making more?hybrid classes. ?Classes decorated as @oldStyle must be pure?old style (the semantics of hybrids are much, much closer to new-style than old-style) so they have to be what they are today. ?When we flip the switch there will be no more old-style classes at all.

Is there a scenario I'm missing / not understanding about the way the ticket's steps are outlined?


I?m thinking of a twisted.web service at the moment. ?Right now, most of the classes involved (resource.Resource, http.HTTPChannel, http.Request and server.Request, etc.) are old-style classes, and pypy does a reasonable job of optimizing those, if not to the degree that new-style classes may be optimized. ?My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles. ?Obviously I?m using pypy because it gives my twisted.web service a substantial improvement in terms of the number of requests per second that it can handle.

I understand that I can set TWISTED_NEWSTYLE to 0 and sidestep this potential performance hit, but it is a detail that has to be communicated to various devops teams, has to be kept track of across environments, should probably be removed once a fully-converted release of Twisted arrives, and so on.

Yes, I?m being a bit of a whiner here (apologies), and clearly the feature can be disabled, and I should definitely test the results to see if there *is* a performance regression in my case.

Thanks,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/22479937/attachment-0001.html>

From glyph at twistedmatrix.com  Wed Mar 23 12:39:21 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 11:39:21 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
Message-ID: <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>


> On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles

If oldStyle converts the classes into hybrids, then it's broken.  Hybrids don't follow the semantics of old-style classes.  So this won't happen.

>  I should definitely test the results to see if there *is* a performance regression in my case.

My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written.  That said, we're really bad at paying attention to speed.twistedmatrix.com <http://speed.twistedmatrix.com/> and we really need a way to see pre-merge performance metrics rather than just a graph over time.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/b75a6669/attachment.html>

From ldanielburr at me.com  Wed Mar 23 15:10:10 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 23 Mar 2016 16:10:10 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
 <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
Message-ID: <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>

Hi Glyph,
On March 23, 2016 at 1:39:53 PM, Glyph (glyph at twistedmatrix.com) wrote:


On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com> wrote:

My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles

If oldStyle converts the classes into hybrids, then it's broken. ?Hybrids don't follow the semantics of old-style classes. ?So this won't happen.

?I should definitely test the results to see if there *is* a performance regression in my case.

My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written. ?That said, we're really bad at paying attention to speed.twistedmatrix.com?and we really need a way to see pre-merge performance metrics rather than just a graph over time.


In the interest of putting my money where my mouth is, I?ve tested a very simple case, where I create a class inheriting from twisted.web.resource.Resource, and a subclass which mixes in ?object?:

from twisted.application import internet, service
from twisted.internet import endpoints, reactor
from twisted.web import resource, server


class MyResource(resource.Resource):
    isLeaf = True

    def render_GET(self, request):
        return 'Hello, World!'

class FrankenStyle(MyResource, object):
    pass

print type(MyResource)
print type(FrankenStyle)

application = service.Application(?test')
root = FrankenStyle()
s = server.Site(root)
ep = endpoints.serverFromString(reactor, 'tcp:8080')
svc = internet.StreamServerEndpointService(ep, s)
svc.setName(?hybridtest')
svc.setServiceParent(application)

Running siege --benchmark --concurrent=10 --reps=1000 "http://127.0.0.1:8080/? against the ?MyResource? version gets me 5714.29 requests per second across 3 runs.
Running?siege --benchmark --concurrent=10 --reps=1000 "http://127.0.0.1:8080/? against the ?FrankenStyle? version gets me an average of?5671.61 requests per second across 3 runs.
So, not a huge difference, overall, and it might not even be visible over a long enough period of time.
Thanks,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/9c832ea8/attachment.html>

From glyph at twistedmatrix.com  Wed Mar 23 15:29:00 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 14:29:00 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
 <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
 <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>
Message-ID: <97CAE295-3F47-489F-8130-9843F78F1CA6@twistedmatrix.com>


> On Mar 23, 2016, at 2:10 PM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> Hi Glyph,
> On March 23, 2016 at 1:39:53 PM, Glyph (glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>) wrote:
> 
>> 
>>> On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com <mailto:ldanielburr at me.com>> wrote:
>>> 
>>> My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles
>> 
>> If oldStyle converts the classes into hybrids, then it's broken.  Hybrids don't follow the semantics of old-style classes.  So this won't happen.
>> 
>>>  I should definitely test the results to see if there *is* a performance regression in my case.
>> 
>> My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written.  That said, we're really bad at paying attention to speed.twistedmatrix.com <http://speed.twistedmatrix.com/> and we really need a way to see pre-merge performance metrics rather than just a graph over time.
>> 
> 
> In the interest of putting my money where my mouth is, I?ve tested a very simple case, where I create a class inheriting from twisted.web.resource.Resource, and a subclass which mixes in ?object?:

Thanks for doing this.
> So, not a huge difference, overall, and it might not even be visible over a long enough period of time.

Glad to hear it :).

With this in mind, my recommendations to most Twisted users is to start tacking on ", object" to the end[1] of your inheritance hierarchies, so that you get hybrid classes now, which will help you sort out any problems you will have by going fully new-style, at the cost of a small performance hit.  It'll be easier to suffer through <1% performance hit (0.7% by your metrics) for the next few releases and change nothing when the new-style release happens, than to be concerned about it breaking stuff.

-glyph

[1]: The end and ONLY THE END of the hierarchy; if you put 'object' first then when those classes go new-style you'll get an exception when declaring the class.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/ad494b46/attachment-0001.html>

From tom.prince at ualberta.net  Wed Mar 23 16:19:44 2016
From: tom.prince at ualberta.net (Tom Prince)
Date: Wed, 23 Mar 2016 16:19:44 -0600
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>

On Tue, Mar 22, 2016 at 10:26 PM, Glyph <glyph at twistedmatrix.com> wrote:
> Nothing about 8244 would involve making more hybrid classes.  Classes
> decorated as @oldStyle must be pure old style (the semantics of hybrids are
> much, much closer to new-style than old-style) so they have to be what they
> are today.  When we flip the switch there will be no more old-style classes
> at all.


Nothing about #8264's *requirements* leads to hybrid classes. But the
implementation makes *every* currently old-style class into a
hybrid-class..


From glyph at twistedmatrix.com  Wed Mar 23 18:27:26 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 17:27:26 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>
Message-ID: <44F291B5-3658-41D0-897E-0B0CB3995988@twistedmatrix.com>


> On Mar 23, 2016, at 3:19 PM, Tom Prince <tom.prince at ualberta.net> wrote:
> 
> Nothing about #8264's *requirements* leads to hybrid classes. But the
> implementation makes *every* currently old-style class into a
> hybrid-class..

Looks like the implementation needs to be revisited then :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/fab8c562/attachment.html>

From glyph at twistedmatrix.com  Wed Mar 23 19:16:37 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 18:16:37 -0700
Subject: [Twisted-Python] how to implement login form logic with
	twisted.cred checkers, credentials and portal
In-Reply-To: <emc_d029221de37542d886329848b64efba1>
References: <emc_d029221de37542d886329848b64efba1>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <5F5E13C6-80A5-4CC9-8B64-D993372DB30F@twistedmatrix.com>


> On Mar 2, 2016, at 6:32 AM, snailcoder <snailcoder at 163.com> wrote:
> 
> I'm trying to implement some login logic using twisted.cred module for a website. In short, there's a login page with username/password forms. Once the user input the right username/password, the browser will redirect to another page which includes the user's profile. 
> 
> Does anyone have any ideas about how to implement this logic with twisted.cred checkers, credentials and portal? Any suggestion is appreciated :-) 

Sorry for the long delay.  I kept wanting to give this a more elaborate response.

There's an example of doing this - sort of - in Nevow, here: https://github.com/twisted/nevow/blob/master/nevow/guard.py <https://github.com/twisted/nevow/blob/master/nevow/guard.py>.  It's not perfectly equivalent because it uses Nevow's slightly-incompatible IResource interface, and not Twisted's IResource.

Have you tried anything and gotten stuck or were you just curious about how it might be done?

I've filed a ticket here: https://twistedmatrix.com/trac/ticket/8248 <https://twistedmatrix.com/trac/ticket/8248> since this functionality should be in Twisted.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160323/29fd4f8d/attachment.html>

From hawkowl at atleastfornow.net  Fri Mar 25 11:04:13 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 26 Mar 2016 01:04:13 +0800
Subject: [Twisted-Python] Twisted 16.1.0 Prerelease 1 Announcement
Message-ID: <1EAD407C-C4D3-49FA-8B9D-96C0376AA052@atleastfornow.net>

Hi everyone,

Another Twisted release is upon us -- this one is small, but has some nice to haves. In this release is:

- twisted.application.internet.ClientService, a service that maintains a persistent outgoing endpoint-based connection -- a replacement for ReconnectingClientFactory that uses modern APIs;
- A large (77% on one benchmark) performance improvement when using twisted.web's client on PyPy;
- A few conch modules have been ported, in preparation for further porting of the SSH functionality;
- Full support for OpenSSL 1.0.2f and above;
- t.web.http.Request.addCookie now accepts Unicode and bytes keys/values;
- `twistd manhole` no longer uses a hard-coded SSH host key, and will generate one for you on the fly (this adds a 'appdirs' PyPI dependency, installing with [conch] will add it automatically);
- Over eighteen tickets overall closed since 16.0.

As usual, you can get the NEWS file at https://twistedmatrix.com/Releases/pre/16.1.0pre1/NEWS.txt and download the tarball from https://twistedmatrix.com/Releases/pre/16.1.0pre1/.

Please test this release with your applications, and let me know if all goes smoothly. If there's no reported issues, the release will occur in roughly a week.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160326/92e88d39/attachment.pgp>

From mithrandi at mithrandi.net  Sat Mar 26 14:33:35 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 26 Mar 2016 20:33:35 +0000
Subject: [Twisted-Python] Intended semantics of IReactorTime.seconds
Message-ID: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>

Currently, as far as I can tell, all implementations of
`IReactorTime.seconds()` (excluding twisted.internet.task.Clock, obviously)
are just `time.time()`; IOW, the return value is the number of seconds
since the beginning of the UNIX epoch in UTC. Are these the intended
semantics? The interface docstring doesn't really make this clear at all.

There's some commented out code which suggests the implementation used to
be `time.clock()` on win32, which would not satisfy these semantics.

(The background for this question is that I'm writing some code which takes
an IReactorTime provider for testing purposes, and I'm wondering if I need
a separate provider of `datetime.now()` functionality or not)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160326/92f48817/attachment.html>

From dynamicgl at gmail.com  Sat Mar 26 20:16:33 2016
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 27 Mar 2016 10:16:33 +0800
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
Message-ID: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>

Hi All

    In twisted doc, I noticed there is a class called

"twisted.application.internet.ClientService"

but the link

https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html

is invalid. I couldn't find it out in twisted src (16.0.0) also.

   I want to know its availability.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160327/b8c51253/attachment.html>

From mithrandi at mithrandi.net  Sat Mar 26 20:50:12 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 27 Mar 2016 02:50:12 +0000
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
In-Reply-To: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
References: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
Message-ID: <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>

On Sun, 27 Mar 2016 at 04:17 Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
> https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html
>

Unfortunately ClientService did not make it in time for 16.0.0, but it will
be in the upcoming 16.1.0 release :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160327/03adbca9/attachment.html>

From dynamicgl at gmail.com  Sat Mar 26 21:47:59 2016
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 27 Mar 2016 11:47:59 +0800
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
In-Reply-To: <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>
References: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
 <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>
Message-ID: <CABkOF6S6fy=_pLcwOXAk6LoPGgdRUQht+gadioVnhCucFuu9XQ@mail.gmail.com>

On Sun, Mar 27, 2016 at 10:50 AM, Tristan Seligmann <mithrandi at mithrandi.net
> wrote:

> On Sun, 27 Mar 2016 at 04:17 Gelin Yan <dynamicgl at gmail.com> wrote:
>
>>
>>
>> https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html
>>
>
> Unfortunately ClientService did not make it in time for 16.0.0, but it
> will be in the upcoming 16.1.0 release :)
>
>
Hi Tristan

    Thx. I will wait for it. It seems the new api is less intrusive.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160327/6fbea1b7/attachment.html>

From snailcoder at 163.com  Sun Mar 27 04:07:11 2016
From: snailcoder at 163.com (snailcoder)
Date: Sun, 27 Mar 2016 18:07:11 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <5F5E13C6-80A5-4CC9-8B64-D993372DB30F@twistedmatrix.com>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_90b47d6a087246d097f2b1a790526b56>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160327/6c68ca35/attachment.html>

From glyph at twistedmatrix.com  Sun Mar 27 19:44:44 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 27 Mar 2016 18:44:44 -0700
Subject: [Twisted-Python] Intended semantics of IReactorTime.seconds
In-Reply-To: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>
References: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>
Message-ID: <9AB3EF9F-8BF1-424A-86B6-85EDDF48C6E6@twistedmatrix.com>


> On Mar 26, 2016, at 1:33 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> Currently, as far as I can tell, all implementations of `IReactorTime.seconds()` (excluding twisted.internet.task.Clock, obviously) are just `time.time()`; IOW, the return value is the number of seconds since the beginning of the UNIX epoch in UTC. Are these the intended semantics? The interface docstring doesn't really make this clear at all.

These are the intended semantics, yes.

> There's some commented out code which suggests the implementation used to be `time.clock()` on win32, which would not satisfy these semantics.

I think you're right, but I believe that was simply a bug based on a misreading of the somewhat confusing documentation of that function at the time.

> (The background for this question is that I'm writing some code which takes an IReactorTime provider for testing purposes, and I'm wondering if I need a separate provider of `datetime.now()` functionality or not)

We really should have a .seconds() wrapper that returns a datetime, yes, since .now() and .utcnow() somewhat subtly are doing I/O.

-glyph



From glyph at twistedmatrix.com  Tue Mar 29 19:12:54 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 29 Mar 2016 18:12:54 -0700
Subject: =?iso-8859-1?q?_=5BTwisted-Python=5D_upcoming_OSCAR_protocol_rem?=
	=?iso-8859-1?q?oval=01?=
Message-ID: <74E08FED-89DB-4FD0-A76C-449255B29F78@twistedmatrix.com>

One of the earliest protocols implemented in Twisted was AOL's instant messenger protocol.   However, as explained on <https://twistedmatrix.com/trac/ticket/8260>, it doesn't really make sense for us to continue maintaining that code unless we can find someone actively interested in keeping it working against the production AIM service.

If you are interested in keeping this code alive, act quickly, before the deprecation makes it into a release and clears the way for a subsequent removal :-).

-glyph

From sscheerer at kc.rr.com  Wed Mar 30 05:32:02 2016
From: sscheerer at kc.rr.com (Susan Scheerer)
Date: Wed, 30 Mar 2016 06:32:02 -0500
Subject: [Twisted-Python] Unsubscribe
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAM/6X8mUKyxHsOV/R/PNGGTCgAAAEAAAAInpG0WfCcdItt/27MnFWmcBAAAAAA==@kc.rr.com>

Unsubscribe

 

Susan Scheerer

9717 North Harrison Street

Kansas City, MO 64155

(816) 734-8595 Home

(816) 405-1144 Cell

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160330/ccb2bae3/attachment.html>

From techtonik at gmail.com  Wed Mar 30 12:20:08 2016
From: techtonik at gmail.com (anatoly techtonik)
Date: Wed, 30 Mar 2016 21:20:08 +0300
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
Message-ID: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>

Hi,

I am having the same problem as this guy:
https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
Absence of 32-bit wheels breaks Python
projects that added Twisted>10 as a
dependency, for example.

Is that intentional change?
https://pypi.python.org/pypi/Twisted/16.0.0

-- 
anatoly t.


From chris.norman2 at googlemail.com  Wed Mar 30 12:27:12 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Wed, 30 Mar 2016 19:27:12 +0100
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
Message-ID: <56FC1A80.5040702@googlemail.com>

Hi,

On 30/03/2016 19:20, anatoly techtonik wrote:
> Hi,
>
> I am having the same problem as this guy:
> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
> Absence of 32-bit wheels breaks Python
> projects that added Twisted>10 as a
> dependency, for example.
>
> Is that intentional change?
> https://pypi.python.org/pypi/Twisted/16.0.0
No clue about any change, but which Python version are you using?

I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 
bit Python 3.5.1, and 2.7.11.

Only place where I had trouble was Debian 64 bit where a simple python 
setup.py installed did the trick.

Sorry you're having trouble.




From glyph at twistedmatrix.com  Wed Mar 30 12:30:26 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 11:30:26 -0700
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <56FC1A80.5040702@googlemail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
 <56FC1A80.5040702@googlemail.com>
Message-ID: <76DAB91B-A1AD-4E9C-B20F-5E1648F9981C@twistedmatrix.com>


> On Mar 30, 2016, at 11:27 AM, Chris Norman <chris.norman2 at googlemail.com> wrote:
> 
> Hi,
> 
> On 30/03/2016 19:20, anatoly techtonik wrote:
>> Hi,
>> 
>> I am having the same problem as this guy:
>> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
>> Absence of 32-bit wheels breaks Python
>> projects that added Twisted>10 as a
>> dependency, for example.
>> 
>> Is that intentional change?
>> https://pypi.python.org/pypi/Twisted/16.0.0
> No clue about any change, but which Python version are you using?
> 
> I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 bit Python 3.5.1, and 2.7.11.
> 
> Only place where I had trouble was Debian 64 bit where a simple python setup.py installed did the trick.
> 
> Sorry you're having trouble.

Looks like we stopped shipping 32-bit wheels with the 15.5 release.  HawkOwl, was this an intentional change, or just a release oversight?  (I don't personally recall an announcement of this.)

-glyph



From hawkowl at atleastfornow.net  Wed Mar 30 12:36:25 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Thu, 31 Mar 2016 02:36:25 +0800
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <76DAB91B-A1AD-4E9C-B20F-5E1648F9981C@twistedmatrix.com>
Message-ID: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>

An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160331/054fdcac/attachment.html>

From glyph at twistedmatrix.com  Wed Mar 30 12:59:40 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 11:59:40 -0700
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
References: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
Message-ID: <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>


> On Mar 30, 2016, at 11:36 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> This was because we dropped the only 32bit Windows builder (the XP one). The w7 one is 64bit and only has 64bit pythons on it - I guess we could install 32bit ones?
> 

I think that, especially in virtualized environments, 32-bit windows is still quite popular; we should probably keep shipping 32-bit wheels, and it's definitely possible to generate them on a 64-bit guest.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160330/516ced6a/attachment.html>

From rgacote at appropriatesolutions.com  Wed Mar 30 13:46:03 2016
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Wed, 30 Mar 2016 15:46:03 -0400
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>
References: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
 <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>
Message-ID: <CAG5tnzp3q69ssWVo5Noji8mY7URccLF4s3+uP+7_ar2=qNqVQw@mail.gmail.com>

On Wed, Mar 30, 2016 at 2:59 PM, Glyph <glyph at twistedmatrix.com> wrote:

> I think that, especially in virtualized environments, 32-bit windows is
> still quite popular; we should probably keep shipping 32-bit wheels, and
> it's definitely possible to generate them on a 64-bit guest.
>

Triple double up vote on the 32-bit wheels.
Tried moving several of my legacy Windows projects to 64-bits three months
ago and there was much bewailing from the client base. :}


-- 
Raymond Cote, President
voice: +1.603.924.6079 email: rgacote at AppropriateSolutions.com skype:
ray.cote
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160330/662f691b/attachment.html>

From paul at eventuallyanyway.com  Wed Mar 30 16:12:40 2016
From: paul at eventuallyanyway.com (Paul Hummer)
Date: Wed, 30 Mar 2016 16:12:40 -0600
Subject: [Twisted-Python] ANN: txJSON-RPC 0.5 released
Message-ID: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>

I'm happy to announce that txJSON-RPC 0.5 is now available.

txJSON-RPC is a library for creating asynchronous json-rpc clients and
servers. It includes netstring and http support.

Please see the PyPI page for more information and downloads.
<https://pypi.python.org/pypi/txJSON-RPC>

---

The high points in txJSON-RPC 0.5 are:

  - First class support for Python 3 and PyPy

I am personally using this release of txJSON-RPC in production on
python3. However, as it is the first release with python 3 support,
please report any bugs. <https://github.com/rockstar/txjsonrpc/issues>

---

I have assumed maintainership of txJSON-RPC for Duncan MacGreggor,
original author of txJSON-RPC. I'd like to thank Duncan for his previous
work and for entrusting me with maintainership of txJSON-RPC going
forward.

Cheers,
Paul


From glyph at twistedmatrix.com  Wed Mar 30 17:32:06 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 16:32:06 -0700
Subject: [Twisted-Python] ANN: txJSON-RPC 0.5 released
In-Reply-To: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>
References: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>
Message-ID: <2A9656C6-C3C2-4550-8300-E56C007F7911@twistedmatrix.com>


> On Mar 30, 2016, at 3:12 PM, Paul Hummer <paul at eventuallyanyway.com> wrote:
> 
> I'm happy to announce that txJSON-RPC 0.5 is now available.

Woohoo!

> txJSON-RPC is a library for creating asynchronous json-rpc clients and
> servers. It includes netstring and http support.
> 
> Please see the PyPI page for more information and downloads.
> <https://pypi.python.org/pypi/txJSON-RPC>
> 
> ---
> 
> The high points in txJSON-RPC 0.5 are:
> 
>  - First class support for Python 3 and PyPy
> 
> I am personally using this release of txJSON-RPC in production on
> python3. However, as it is the first release with python 3 support,
> please report any bugs. <https://github.com/rockstar/txjsonrpc/issues>
> 
> ---
> 
> I have assumed maintainership of txJSON-RPC for Duncan MacGreggor,
> original author of txJSON-RPC. I'd like to thank Duncan for his previous
> work and for entrusting me with maintainership of txJSON-RPC going
> forward.

It's awesome that support for this popular protocol is now actively maintained again - thanks for the announcement.

-glyph

From techtonik at gmail.com  Thu Mar 31 01:15:33 2016
From: techtonik at gmail.com (anatoly techtonik)
Date: Thu, 31 Mar 2016 10:15:33 +0300
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <56FC1A80.5040702@googlemail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
 <56FC1A80.5040702@googlemail.com>
Message-ID: <CAPkN8x+Dnvb9QFWxPLqruAWUyFKVG9=YqSuHrO0hy3ct_hpciA@mail.gmail.com>

On Wed, Mar 30, 2016 at 9:27 PM, Chris Norman
<chris.norman2 at googlemail.com> wrote:
> Hi,
>
> On 30/03/2016 19:20, anatoly techtonik wrote:
>>
>> Hi,
>>
>> I am having the same problem as this guy:
>>
>> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
>> Absence of 32-bit wheels breaks Python
>> projects that added Twisted>10 as a
>> dependency, for example.
>>
>> Is that intentional change?
>> https://pypi.python.org/pypi/Twisted/16.0.0
>
> No clue about any change, but which Python version are you using?
>
> I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 bit
> Python 3.5.1, and 2.7.11.

32-bit Python 2.7.11, but the problem is that I don't have MSVS installed.

> Only place where I had trouble was Debian 64 bit where a simple python
> setup.py installed did the trick.
>
> Sorry you're having trouble.

I installed the stuff manually. Just wanted to warn that there might be a
bigger problem with that. Glad that it could be fixed.

-- 
anatoly t.


From glyph at twistedmatrix.com  Thu Mar 31 15:27:08 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 31 Mar 2016 14:27:08 -0700
Subject: [Twisted-Python] Windows spawnProcess - Child process inherits
	files and sockets (POSIX does not)
In-Reply-To: <CADtv4OC=7N9w4MLY62AkqC2K0wKjjM0dezM86URFGwBba5cDcg@mail.gmail.com>
References: <CADtv4OC=7N9w4MLY62AkqC2K0wKjjM0dezM86URFGwBba5cDcg@mail.gmail.com>
Message-ID: <DE300510-5DB5-446D-8DF8-F1404FC69B32@twistedmatrix.com>

On Feb 21, 2016, at 7:14 PM, exvito here <ex.vitorino at gmail.com> wrote:
> 
> Hello all,
> 
> I filed https://twistedmatrix.com/trac/ticket/7970 <https://twistedmatrix.com/trac/ticket/7970> last summer while focused on a particular project that was hit by it. Since then I had to attend to other things and I'm now back to refocusing on that project.

Thanks for following up.  Sorry I've taken so long to respond; this is a highly complex issue that is tempting to just punt on thinking about.  But we really should address it, and thank you for writing a great bug report.

> Before submitting a patch for review, I'm looking for preliminary feedback, assuming you agree that the Windows vs POSIX semantics should be the same (if not, why?).

After much thought: Yes.  They should be the same.  The reason they're not is largely ignorance of the relevant APIs and abstractions on Windows, not any desire that they differ.  The one place they have to differ a little bit is handle inheritance: we need to figure out some way to express the 'childFDs' mapping in terms of both file descriptors and handles.

> My patch calls a few Windows APIs via ctypes, however, as far as I can tell, Twisted on Windows requires pywin32 and, recently, there has been some discussion around dropping that dependency and moving towards something based on cffi.

ctypes is dangerous and error-prone.  If you screw up the bit-width of a type, or the type in a header changes on some future version, ctypes gives you no way of finding out until some poor user's process segfaults, and usually not at the relevant call site.  So we'd prefer not to maintain more ctypes-using code.

The APIs in pywin32 very closely mirror the underlying Windows API, so for addressing this issue, please just go ahead and use pywin32 APIs; porting them to a new API along with everything else should be relatively straightforward.

If we do move forward with that change, we will probably use https://pypi.python.org/pypi/pywincffi and not move anything within Twisted.

> What would you say the way forward is? Should I submit the patch for review anyway? Is there any other work that needs to be done first that I may contribute to?

Yes, just go ahead and write the patch.

> Thanks in advance for Twisted and for your feedback,

Thanks for using Twisted, thanks doubly for trying to contribute, and very sorry for the slow response.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160331/cf4a2c4e/attachment.html>

From glyph at twistedmatrix.com  Thu Mar 31 20:04:14 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 31 Mar 2016 19:04:14 -0700
Subject: [Twisted-Python] upcoming changes to twistedmatrix.com mail
	infrastructure
In-Reply-To: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
Message-ID: <6CC856DE-0A9F-44FC-A18B-63763D1DCFC0@twistedmatrix.com>


> On Mar 16, 2016, at 11:52 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> Over the last few months, twistedmatrix.com <http://twistedmatrix.com/>'s mailman installation has been used increasingly frequently to execute denial-of-service attacks against people's mailboxes.  This is accomplished by sending huge numbers of subscription requests to our website, which in turn sends huge numbers of confirmation emails to their inbox.  Based on some information that some targeted users have sent me, I now believe that this is to cause those users' mail quotas to be exceeded so that password reset or login notification emails won't reach them.

I've taken the first few steps to migrating us over to Mailgun, but just as a minor status update: web-based subscription is now disabled.  If any generous souls would like to help out and update whatever wiki pages link to the mailman listinfo pages to say 'please send subscription requests to twisted-python-owner@ or twisted-web-owner@ instead' that would be great :-).  Those email addresses (and hopefully all the others, too) will keep working post-migration.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://twistedmatrix.com/pipermail/twisted-python/attachments/20160331/d97e2250/attachment.html>

From snailcoder at 163.com  Wed Mar  2 07:32:32 2016
From: snailcoder at 163.com (snailcoder)
Date: Wed, 2 Mar 2016 22:32:32 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_d029221de37542d886329848b64efba1>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160302/73b8825a/attachment-0002.html>

From hawkowl at atleastfornow.net  Thu Mar  3 00:20:26 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Thu, 3 Mar 2016 15:20:26 +0800
Subject: [Twisted-Python] Twisted 16.0.0 Prerelease 3 Announcement
Message-ID: <E7F701B9-BB0D-42DD-9BAB-3A4B15CF5B3F@atleastfornow.net>

Hi everyone,

exarkun spotted a regression in the 16.0.0 prereleases, where calling endpoints' serverWithString with a SSL strports description and an empty chain file would give an unhelpful error message.

These issues have been fixed and are in Twisted 16.0.0pre3. You can find it and the NEWS file at https://twistedmatrix.com/Releases/pre/16.0.0pre3/ .

If no further issues are identified, Twisted 16.0 will be released this week (for real!).

- Amber Brown
Twisted Release Manager
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160303/975a17b8/attachment.sig>

From mashiat.sarker at gmail.com  Sat Mar  5 20:11:23 2016
From: mashiat.sarker at gmail.com (Mashiat Sarker Shakkhar)
Date: Sat, 5 Mar 2016 22:11:23 -0500
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
In-Reply-To: <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
References: <emc_d029221de37542d886329848b64efba1>
 <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
Message-ID: <56DB9FDB.3080701@gmail.com>

On 3/2/16 9:32 AM, snailcoder wrote:
> I'm trying to implement some login logic using twisted.cred module for 
> a website. In short, there's a login page with username/password 
> forms. Once the user input the right username/password, the browser 
> will redirect to another page which includes the user's profile.
>
> Does anyone have any ideas about how to implement this logic with 
> twisted.cred checkers, credentials and portal? Any suggestion is 
> appreciated :-)

Hi

Before I answer your question, allow me to give you a word of advice. 
Twisted is a low-level library. While you can build a web application 
directly on top of Twisted, I would not recommend it. You need 
higher-level abstractions to write manageable code. I recommend that you 
find a framework that builds on top of Twisted.

As for your question, you will find many examples of Twisted 
authentication if you Google a bit. You should probably start by reading 
this page: 
https://twistedmatrix.com/documents/current/core/howto/cred.html. Below 
you will find a simple (and not very secure) example. It uses HTTP Basic 
authentication. It owes its verbosity to the low-level nature of Twisted.


     from twisted.cred import portal, checkers, credentials, error as 
credError
     from twisted.internet import defer, reactor
     from twisted.web import guard, http, resource, server
     from zope.interface import implements

     class HttpPasswordRealm(object):
         implements(portal.IRealm)

         def __init__(self, resource):
             self.resource = resource

         def requestAvatar(self, avatarId, mind, *interfaces):
             if resource.IResource in interfaces:
                 return (resource.IResource, self.resource, lambda: None)
             raise NotImplementedError()

     class MyPasswordChecker(object):
         implements(checkers.ICredentialsChecker)
         credentialInterfaces = (credentials.IUsernamePassword, )
         MY_INSECURE_CREDS = {'name': 'pa$$w0rd'}

         @defer.inlineCallbacks
         def requestAvatarId(self, creds):
             pw = self.MY_INSECURE_CREDS.get(creds.username) or b''
             pw_match = yield creds.checkPassword(pw)
             if pw_match is True:
                 defer.returnValue(creds.username)
             else:
                 raise credError.UnauthorizedLogin('Incorrect username 
or password')

     class MyPortal(resource.Resource):
         isLeaf = True

         def render_GET(self, request):
             return 'Top secret content'

     checker = MyPasswordChecker()
     realm = HttpPasswordRealm(MyPortal())
     p = portal.Portal(realm, [checker, ])

     factory = guard.BasicCredentialFactory('My secret portal')
     protected_resource = guard.HTTPAuthSessionWrapper(p, [factory, ])

     site = server.Site(protected_resource)
     site.protocol = http.HTTPChannel
     reactor.listenTCP(8080, site)

     reactor.run()


Do not go and copy-paste the above. Please do your research. To build 
the interaction you described, I will recommend using Klein 
(https://github.com/twisted/klein). Klein can give you your entire app 
as a Resource instance. This example does not manage sessions or lets 
you log out. It only describes how you can protect a Resource using 
Twisted.cred. Good luck.

Regards
Shakkhar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160305/11d6aa49/attachment-0002.html>

From donal.mcmullan at gmail.com  Sun Mar  6 13:51:20 2016
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Sun, 6 Mar 2016 15:51:20 -0500
Subject: [Twisted-Python] password reset not working?
Message-ID: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>

I just reset my password at https://twistedmatrix.com/trac/reset_password a
couple of times. In both cases the new password that was sent to me is
rejected when I try to log in.

Is this supposed to work? I only found the path to the reset_password form
by searching the Trac docs. I'm not sure it's linked to from anywhere on
twistedmatrix.com

Thanks

DJM
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160306/5f89fe76/attachment-0002.html>

From glyph at twistedmatrix.com  Mon Mar  7 12:34:43 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 7 Mar 2016 11:34:43 -0800
Subject: [Twisted-Python] password reset not working?
In-Reply-To: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
References: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
Message-ID: <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>


> On Mar 6, 2016, at 12:51 PM, Donal McMullan <donal.mcmullan at gmail.com> wrote:
> 
> I just reset my password at https://twistedmatrix.com/trac/reset_password <https://twistedmatrix.com/trac/reset_password> a couple of times. In both cases the new password that was sent to me is rejected when I try to log in.
> 
> Is this supposed to work? I only found the path to the reset_password form by searching the Trac docs. I'm not sure it's linked to from anywhere on twistedmatrix.com <http://twistedmatrix.com/>
Our trac installation is ... slightly creaky, account management particularly.  Spammers bulk-register accounts which generates more load than trac is really designed for.  I'm not sure why this isn't working today (as far as I know, it usually does?) but I'd be happy to delete your password to let you re-sign-up if you send me a private email.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160307/8e61c084/attachment-0002.html>

From donal.mcmullan at gmail.com  Mon Mar  7 13:30:17 2016
From: donal.mcmullan at gmail.com (Donal McMullan)
Date: Mon, 7 Mar 2016 15:30:17 -0500
Subject: [Twisted-Python] password reset not working?
In-Reply-To: <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>
References: <CADf-aJHYbAS+2nB=YCYQ54wbFkmFCPN7_ea2Ehs6VOGC2qMh0w@mail.gmail.com>
 <73E2B42B-7A08-4A20-95FD-3585621393D0@twistedmatrix.com>
Message-ID: <A4502E98-8F9F-4660-AAA3-3E7D730B7CB6@gmail.com>

Thanks Glyph - Hawkie was good enough to sort me out already :)

DJM

> On 7/03/2016, at 2:34 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
> 
> 
>> On Mar 6, 2016, at 12:51 PM, Donal McMullan <donal.mcmullan at gmail.com> wrote:
>> 
>> I just reset my password at https://twistedmatrix.com/trac/reset_password a couple of times. In both cases the new password that was sent to me is rejected when I try to log in.
>> 
>> Is this supposed to work? I only found the path to the reset_password form by searching the Trac docs. I'm not sure it's linked to from anywhere on twistedmatrix.com
> 
> Our trac installation is ... slightly creaky, account management particularly.  Spammers bulk-register accounts which generates more load than trac is really designed for.  I'm not sure why this isn't working today (as far as I know, it usually does?) but I'd be happy to delete your password to let you re-sign-up if you send me a private email.
> 
> -glyph
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160307/9573e660/attachment-0002.html>

From conte.angelo at gmail.com  Tue Mar  8 00:31:47 2016
From: conte.angelo at gmail.com (Angelo Conte)
Date: Tue, 8 Mar 2016 08:31:47 +0100
Subject: [Twisted-Python] Build and installation problem
Message-ID: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>

I'm new here and I want to report that I'm having troubles installing
Twisted on an embedded linux machine
<https://github.com/victronenergy/venus>.
uname -a reports:
Linux ccgx 3.7.1 #1 Tue Dec 1 14:59:18 CET 2015 armv7l GNU/Linux

I've tried to install both with pip and with setup.py (with a root user).
There is no opkg package for Twisted, All dependencies should be ok.
Here is what I get with setup.py build and install

root at ccgx:~/Twisted-15.5.0# python setup.py build
running build
running build_py
running egg_info
writing requirements to Twisted.egg-info/requires.txt
writing Twisted.egg-info/PKG-INFO
writing top-level names to Twisted.egg-info/top_level.txt
writing dependency_links to Twisted.egg-info/dependency_links.txt
reading manifest file 'Twisted.egg-info/SOURCES.txt'
writing manifest file 'Twisted.egg-info/SOURCES.txt'
running build_ext
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c conftest.c -o conftest.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
building 'twisted.test.raiser' extension
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c twisted/test/raiser.c -o
build/temp.linux-armv7l-2.7/twisted/test/raiser.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
error: command 'arm-ve-linux-gnueabi-gcc' failed with exit status 1


root at ccgx:~/Twisted-15.5.0# python setup.py  install
running install
running bdist_egg
running egg_info
writing requirements to Twisted.egg-info/requires.txt
writing Twisted.egg-info/PKG-INFO
writing top-level names to Twisted.egg-info/top_level.txt
writing dependency_links to Twisted.egg-info/dependency_links.txt
reading manifest file 'Twisted.egg-info/SOURCES.txt'
writing manifest file 'Twisted.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-armv7l/egg
running install_lib
running build_py
running build_ext
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c conftest.c -o conftest.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
building 'twisted.test.raiser' extension
arm-ve-linux-gnueabi-gcc -march=armv7-a -mthumb-interwork
-mfloat-abi=softfp -mfpu=neon -D__SOFTFP__
.30/build/tmp-eglibc/sysroots/bpp3 -fno-strict-aliasing -O2 -pipe -g
-feliminate-unused-debug-types -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
-fPIC -I/usr/include/python2.7 -c twisted/test/raiser.c -o
build/temp.linux-armv7l-2.7/twisted/test/raiser.o
arm-ve-linux-gnueabi-gcc: error: .30/build/tmp-eglibc/sysroots/bpp3: No
such file or directory
error: command 'arm-ve-linux-gnueabi-gcc' failed with exit status 1

I can't find any reference to the folder .30/build/tmp-eglibc/sysroots/bpp3
on my system.
Do you have any clue?
Thank you

Angelo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/59926adb/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar  8 10:51:29 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 09:51:29 -0800
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
Message-ID: <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>


> On Mar 7, 2016, at 11:31 PM, Angelo Conte <conte.angelo at gmail.com> wrote:
> 
> I can't find any reference to the folder .30/build/tmp-eglibc/sysroots/bpp3 on my system.

It looks like your embedded system can't build python extension modules; I doubt the problem is specific to Twisted.

1. Have you built any other extension modules?  ("pip install cryptography", for example)
2. Do you have any interesting text in environment variables; particularly, CFLAGS?

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/9272d221/attachment-0002.html>

From serah4291 at gmail.com  Tue Mar  8 12:10:54 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 11:10:54 -0800
Subject: [Twisted-Python] Can't identify protocol
Message-ID: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>

Hi,

I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP
connections (lsof can't identify protocol) when I get a lot of traffic . Is
this something you have seen with twisted? I'm not really dealing with
socket connections at my code level so thought I'd ask if there is a known
issue as I am trying to figure out where the connections are being left
half open.

Thanks
Matilda
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/affd8067/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar  8 12:43:04 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 11:43:04 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
Message-ID: <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>


> On Mar 8, 2016, at 11:10 AM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> Hi,
> 
> I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP connections (lsof can't identify protocol) when I get a lot of traffic . Is this something you have seen with twisted? I'm not really dealing with socket connections at my code level so thought I'd ask if there is a known issue as I am trying to figure out where the connections are being left half open.

What do you mean by "half open"?  What state is e.g. netstat showing them in?

-glyph





From serah4291 at gmail.com  Tue Mar  8 15:52:18 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 14:52:18 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
Message-ID: <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>

So netstat doesn't show them but lsof does and our allocated file
descriptors keep increasing and the FDs have the description "can't
identify protocol"

On Tue, Mar 8, 2016 at 11:43 AM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Mar 8, 2016, at 11:10 AM, Matilda Bernard <serah4291 at gmail.com>
> wrote:
> >
> > Hi,
> >
> > I am using Twisted 15.2.1 have been seeing a lot of half open TCP/IP
> connections (lsof can't identify protocol) when I get a lot of traffic . Is
> this something you have seen with twisted? I'm not really dealing with
> socket connections at my code level so thought I'd ask if there is a known
> issue as I am trying to figure out where the connections are being left
> half open.
>
> What do you mean by "half open"?  What state is e.g. netstat showing them
> in?
>
> -glyph
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/f1364497/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar  8 19:23:39 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 8 Mar 2016 18:23:39 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
Message-ID: <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>


> On Mar 8, 2016, at 2:52 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> So netstat doesn't show them but lsof does and our allocated file descriptors keep increasing and the FDs have the description "can't identify protocol"

My guess would be that that means the file descriptor is open, but not connected to anything; which would mean that it's been left open so long that the OS has cleaned up the underlying network resources (perhaps via shutdown(2)?).

I've never seen this, personally, and my understanding of Twisted's transport mechanism is that it would be impossible unless the reactor were completely frozen for a very long period of time (4+ minutes, at least).  What operating system and version are you running?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/6658cfdc/attachment-0002.html>

From serah4291 at gmail.com  Wed Mar  9 00:24:13 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Tue, 8 Mar 2016 23:24:13 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
Message-ID: <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>

   "I've never seen this, personally, and my understanding of Twisted's
transport mechanism is that it would be impossible unless the reactor were
completely frozen for a very long period of time (4+ minutes, at least)."

How can I detect that state?

We're using OEL 6.5 and PyPy 2.6.0

Regards
Matilda

On Tue, Mar 8, 2016 at 6:23 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Mar 8, 2016, at 2:52 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
>
> So netstat doesn't show them but lsof does and our allocated file
> descriptors keep increasing and the FDs have the description "can't
> identify protocol"
>
>
> My *guess* would be that that means the file descriptor is open, but not
> connected to anything; which would mean that it's been left open so long
> that the OS has cleaned up the underlying network resources (perhaps via
> shutdown(2)?).
>
> I've never seen this, personally, and my understanding of Twisted's
> transport mechanism is that it would be impossible unless the reactor were
> completely frozen for a very long period of time (4+ minutes, at least).
> What operating system and version are you running?
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160308/27fa80a1/attachment-0002.html>

From cwest at senceive.com  Wed Mar  9 02:53:18 2016
From: cwest at senceive.com (Chris West)
Date: Wed, 9 Mar 2016 09:53:18 +0000
Subject: [Twisted-Python] Twisted serialport
Message-ID: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>

I'm currently using the SerialPort connection type in twisted 15.5.0 with python 2.7.7 on a windows machine.

Twisted serial communications with the serial port fail when pyserial is upgraded from 2.7 to 3.0.1 and fails with the following error.

Traceback (most recent call last):
  File "C:\Anaconda\Scripts\fmv3dbg-script.py", line 9, in <module>
    load_entry_point('fmv3tools==0.2.5', 'console_scripts', 'fmv3dbg')()
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 338, in main
    server = create_system(args)
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 310, in create_system
    server = SerialServer(com_port, outputs=outputs)
  File "C:\Anaconda\lib\site-packages\fmv3tools-0.2.5-py2.7.egg\fmv3tools\fmv3dbg.py", line 57, in __init__
    FMv3SerialGateway.__init__(self, com_port, *args, **kwargs)
  File "C:\Anaconda\lib\site-packages\flatmesh-0.2.8-py2.7.egg\flatmesh\fmv3_datacoms.py", line 403, in __init
__
    baudrate=baudrate)
  File "C:\Anaconda\lib\site-packages\twisted-15.5.0-py2.7-win32.egg\twisted\internet\_win32serialport.py", line 56, in __init__
    self._finishPortSetup()
  File "C:\Anaconda\lib\site-packages\twisted-15.5.0-py2.7-win32.egg\twisted\internet\_win32serialport.py", line 65, in _finishPortSetup
    flags, comstat = win32file.ClearCommError(self._serial.hComPort)
AttributeError: 'Serial' object has no attribute 'hComPort'

I've removed pyserial 3.0.1 from my system for the moment but I was wondering if there is a way to have both pyserial 2.7 and 3.0.1 on my system when using twisted?

Thanks,
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/93a3a788/attachment-0002.html>

From adi at roiban.ro  Wed Mar  9 02:59:21 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 9 Mar 2016 09:59:21 +0000
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>
References: <9bb3ffda81a94ddda627d504c816fb93@winhexbeeu21.win.mail>
Message-ID: <CAFycZ9eOtEG6uUn=+5zP78wSLSiroHbP-iqDvxijLA_R4YAi_w@mail.gmail.com>

On 9 March 2016 at 09:53, Chris West <cwest at senceive.com> wrote:

> I’m currently using the SerialPort connection type in twisted 15.5.0 with
> python 2.7.7 on a windows machine.
>
>
>
> Twisted serial communications with the serial port fail when pyserial is
> upgraded from 2.7 to 3.0.1 and fails with the following error.
>
>
>

Hi,

I think that this is a know issue.

Please see https://twistedmatrix.com/trac/ticket/8159

It would help if you could try the patch and report that all is ok for your
use case.

If not the same issue, please report a new ticket.

Regards
-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/ec956628/attachment-0002.html>

From conte.angelo at gmail.com  Wed Mar  9 04:13:56 2016
From: conte.angelo at gmail.com (Angelo Conte)
Date: Wed, 9 Mar 2016 12:13:56 +0100
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
 <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
Message-ID: <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>

Thank you Glyph for your kind answer.
1) I've just tried and the same error appears, so it's not a Twisted
specific problem
2) environment variables don't contain nothing special; there is no CFLAGS
entry.

I've also searched if there were something wrong in compiler's search dirs,
but everything seems ok.

Angelo

2016-03-08 18:51 GMT+01:00 Glyph Lefkowitz <glyph at twistedmatrix.com>:

>
> On Mar 7, 2016, at 11:31 PM, Angelo Conte <conte.angelo at gmail.com> wrote:
>
> I can't find any reference to the folder
> .30/build/tmp-eglibc/sysroots/bpp3 on my system.
>
>
> It looks like your embedded system can't build python extension modules; I
> doubt the problem is specific to Twisted.
>
> 1. Have you built any other extension modules?  ("pip install
> cryptography", for example)
> 2. Do you have any interesting text in environment variables;
> particularly, CFLAGS?
>
> -glyph
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/3e633b67/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar  9 13:07:34 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 12:07:34 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
Message-ID: <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>


> On Mar 8, 2016, at 11:24 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
>    "I've never seen this, personally, and my understanding of Twisted's transport mechanism is that it would be impossible unless the reactor were completely frozen for a very long period of time (4+ minutes, at least)."
> 
> How can I detect that state?

Is the server completely unresponsive for multiple minutes at a time?

> We're using OEL 6.5 and PyPy 2.6.0

You should upgrade to PyPy 4.0.1.  (Generally speaking you should always run the latest available PyPy, since they only really do bugfix and performance releases; they don't break compatibility)  I don't remember what version it was in, but somewhere in the 2.x series there was a nasty file descriptor leak whose symptoms might match what you're seeing.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/781a2ce2/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar  9 13:48:24 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 12:48:24 -0800
Subject: [Twisted-Python] Build and installation problem
In-Reply-To: <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>
References: <CAJAjfuxuKkLF=LJiC-0JpuWtmRGWMoOrj1kcQ7j=fVhW5Aky3Q@mail.gmail.com>
 <5CF78E48-9C20-4249-8A6C-441A824C6EA6@twistedmatrix.com>
 <CAJAjfuzYQ7BDvOrmrBdsE=LCr7rhkF=L1GqjxmdkEdr4OrsWdQ@mail.gmail.com>
Message-ID: <AE2C114B-5CC5-4997-B483-C6BD2BC280EA@twistedmatrix.com>


> On Mar 9, 2016, at 3:13 AM, Angelo Conte <conte.angelo at gmail.com> wrote:
> 
> Thank you Glyph for your kind answer.
> 1) I've just tried and the same error appears, so it's not a Twisted specific problem
> 2) environment variables don't contain nothing special; there is no CFLAGS entry.
> 
> I've also searched if there were something wrong in compiler's search dirs, but everything seems ok.

My guess is that Python is built incorrectly for this platform.

When you build Python, it remembers certain things about its build configuration and attempts to copy those things to the compile commands used to build extension modules.  It looks to me like that directory is detritus which somehow got glommed into the build configuration Python thinks it should use.

This is unfortunately about the end of my expertise in this area; you'd have better luck posting this to a list like https://www.python.org/community/sigs/current/distutils-sig/.

Thanks for using Twisted; I'm sorry it's being difficult to work with here.  I'm interested in helping you get this resolved, and I'm also on distutils-sig, so if you ask there I can always provide additional details about how Twisted's C modules work if one of the more-knowledgeable people there needs more information; feel free to ask for my help in further investigation if you need it :-).

-glyph

P.S.: Since a lot of new people are posting (which is great!) I feel like I should take the opportunity to point out that the preferred style of reply on this list is <https://en.wikipedia.org/wiki/Posting_style#Interleaved_style> followed by <https://en.wikipedia.org/wiki/Posting_style#Bottom-posting> - please refrain from <https://en.wikipedia.org/wiki/Posting_style#Top-posting>.  Thanks!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/fed00078/attachment-0002.html>

From serah4291 at gmail.com  Wed Mar  9 16:34:37 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Wed, 9 Mar 2016 15:34:37 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
Message-ID: <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>

Thanks Glyph for the possible causes of this problem.


On Wed, Mar 9, 2016 at 12:07 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> On Mar 8, 2016, at 11:24 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
>
>    "I've never seen this, personally, and my understanding of Twisted's
> transport mechanism is that it would be impossible unless the reactor were
> completely frozen for a very long period of time (4+ minutes, at least)."
>
> How can I detect that state?
>
>
> Is the server completely unresponsive for multiple minutes at a time?
>
> We're using OEL 6.5 and PyPy 2.6.0
>
>
> You should upgrade to PyPy 4.0.1.  (Generally speaking you should always
> run the latest available PyPy, since they only really do bugfix and
> performance releases; they don't break compatibility)  I don't remember
> what version it was in, but somewhere in the 2.x series there was a nasty
> file descriptor leak whose symptoms *might* match what you're seeing.
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/ff190849/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar  9 16:47:35 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 9 Mar 2016 15:47:35 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
 <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
Message-ID: <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>

> On Mar 9, 2016, at 3:34 PM, Matilda Bernard <serah4291 at gmail.com> wrote:
> 
> Thanks Glyph for the possible causes of this problem. 

I'm definitely curious if you manage to reach a resolution; please follow up with the list if you discover more information.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/05d04702/attachment-0002.html>

From serah4291 at gmail.com  Wed Mar  9 16:48:36 2016
From: serah4291 at gmail.com (Matilda Bernard)
Date: Wed, 9 Mar 2016 15:48:36 -0800
Subject: [Twisted-Python] Can't identify protocol
In-Reply-To: <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>
References: <CAJ9RO_cpMtQ0WHBPPUHMVN0T2E7AABb2B+mhCORjD2Y2G=Ov4g@mail.gmail.com>
 <E444D848-771D-44E3-B50B-E737FE7C3C0C@twistedmatrix.com>
 <CAJ9RO_f_SRtSjZTWa4W4gmHfAh1GX6FA52DFm5uSYgeJa2NYjQ@mail.gmail.com>
 <7E274D9E-15A9-4EEB-9E85-3B0F93220EE6@twistedmatrix.com>
 <CAJ9RO_dvdUfAn0WVXnZFwVJRJd0vJ22ZhSgqHdQmeJTPL9xXow@mail.gmail.com>
 <CFBD1D06-6A04-461C-A4D6-3C1012D19A64@twistedmatrix.com>
 <CAJ9RO_cBYUExo=f2Pn=cA90_aNniPgL=hupFH1NJKjOCVK83Jw@mail.gmail.com>
 <71C494FC-C03A-4F9E-8EE6-D2E5CE99DDE9@twistedmatrix.com>
Message-ID: <CAJ9RO_fnt62ikfmnujaQXwPyjXssTA+KFTEi-HcGMde02S+kgw@mail.gmail.com>

Will do.

On Wednesday, March 9, 2016, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

> On Mar 9, 2016, at 3:34 PM, Matilda Bernard <serah4291 at gmail.com
> <javascript:_e(%7B%7D,'cvml','serah4291 at gmail.com');>> wrote:
>
> Thanks Glyph for the possible causes of this problem.
>
>
> I'm definitely curious if you manage to reach a resolution; please follow
> up with the list if you discover more information.
>
> -glyph
>


-- 
http://matildabernard.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160309/5617a485/attachment-0002.html>

From cwest at senceive.com  Thu Mar 10 01:37:02 2016
From: cwest at senceive.com (Chris West)
Date: Thu, 10 Mar 2016 08:37:02 +0000
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
References: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
Message-ID: <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>

Adi,

Thanks for the reply, I've applied the patch and that has sorted out my problem.

Many thanks,
Chris

Date: Wed, 9 Mar 2016 09:59:21 +0000
From: Adi Roiban <adi at roiban.ro>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Subject: Re: [Twisted-Python] Twisted serialport
Message-ID:
	<CAFycZ9eOtEG6uUn=+5zP78wSLSiroHbP-iqDvxijLA_R4YAi_w at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

On 9 March 2016 at 09:53, Chris West <cwest at senceive.com> wrote:

> I?m currently using the SerialPort connection type in twisted 15.5.0 
> with python 2.7.7 on a windows machine.
>
>
>
> Twisted serial communications with the serial port fail when pyserial 
> is upgraded from 2.7 to 3.0.1 and fails with the following error.
>
>
>

Hi,

I think that this is a know issue.

Please see https://twistedmatrix.com/trac/ticket/8159

It would help if you could try the patch and report that all is ok for your use case.

If not the same issue, please report a new ticket.

Regards
--
Adi Roiban



From glyph at twistedmatrix.com  Thu Mar 10 12:07:58 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 10 Mar 2016 11:07:58 -0800
Subject: [Twisted-Python] Twisted serialport
In-Reply-To: <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>
References: <mailman.1.1457550001.22776.twisted-python@twistedmatrix.com>
 <e225f942f95f48fabc22810184a465c0@winhexbeeu21.win.mail>
Message-ID: <DEFB76AE-CF08-40A5-83BD-C7ECB6508F24@twistedmatrix.com>

> On Mar 10, 2016, at 12:37 AM, Chris West <cwest at senceive.com> wrote:
> 
> Adi,
> 
> Thanks for the reply, I've applied the patch and that has sorted out my problem.


Would you mind putting a comment on a ticket to that effect?

-glyph


From snailcoder at 163.com  Mon Mar 14 08:35:46 2016
From: snailcoder at 163.com (snailcoder)
Date: Mon, 14 Mar 2016 22:35:46 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <56DB9FDB.3080701@gmail.com>
 <56d6fa13.45cfca0a.84bbe.62e7SMTPIN_ADDED_BROKEN@mx.google.com>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_923350cbae4845d88b1e492291806b7e>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160314/a7abb16a/attachment-0002.html>

From hawkowl at atleastfornow.net  Tue Mar 15 00:13:24 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Tue, 15 Mar 2016 14:13:24 +0800
Subject: [Twisted-Python] Twisted 16.0 Released
Message-ID: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>

On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.0!

Twisted 16.0 brings some important changes, and some nice-to-haves as well. The major things are:

- TLS endpoints have arrived! They're like the old `ssl:` endpoints, but support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do hostname verification.
- Conch now uses Cryptography instead of PyCrypto for underlying cryptographic operations. This means it'll work much better on PyPy!
- Headers objects (notably used by t.web.server.Request) now support Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and values to UTF-8.
- WSGI support and AMP have been ported to Python 3, along with a handful of other modules.
- More shedding of the past, with the GTK+ 1 reactor being removed.
- Over 45 tickets have been closed since 15.5.

For more information, check the NEWS file (link provided below).

You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.

Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

Twisted Regards,

Amber Brown (HawkOwl)
Twisted Release Manager
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160315/0f237d12/attachment.sig>

From glyph at twistedmatrix.com  Tue Mar 15 15:42:03 2016
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 15 Mar 2016 14:42:03 -0700
Subject: [Twisted-Python] Twisted 16.0 Released
In-Reply-To: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
References: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
Message-ID: <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>


> On Mar 14, 2016, at 11:13 PM, Amber Hawkie Brown <hawkowl at atleastfornow.net> wrote:
> 
> On behalf of Twisted Matrix Laboratories, I am honoured to announce the release of Twisted 16.0!
> 
> Twisted 16.0 brings some important changes, and some nice-to-haves as well. The major things are:
> 
> - TLS endpoints have arrived! They're like the old `ssl:` endpoints, but support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do hostname verification.
> - Conch now uses Cryptography instead of PyCrypto for underlying cryptographic operations. This means it'll work much better on PyPy!
> - Headers objects (notably used by t.web.server.Request) now support Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and values to UTF-8.
> - WSGI support and AMP have been ported to Python 3, along with a handful of other modules.
> - More shedding of the past, with the GTK+ 1 reactor being removed.
> - Over 45 tickets have been closed since 15.5.
> 
> For more information, check the NEWS file (link provided below).
> 
> You can find the downloads at <https://pypi.python.org/pypi/Twisted> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The NEWS file is also available at <https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.
> 
> Many thanks to everyone who had a part in this release - the supporters of the Twisted Software Foundation, the developers who contributed code as well as documentation, and all the people building great things with Twisted!

This was a real banner release, and we have more great features coming in 16.1.  Thanks a ton to everybody once again, especially those who reviewed those first two PRs :-).

-glyph




From jerryguitarist at gmail.com  Tue Mar 15 17:58:19 2016
From: jerryguitarist at gmail.com (Eeshan Garg)
Date: Tue, 15 Mar 2016 21:28:19 -0230
Subject: [Twisted-Python] Is ticket #7934 still relevant?
Message-ID: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>

Hello, everyone!

I was just wondering, is <https://twistedmatrix.com/trac/ticket/7934> still
relevant? If so, I would love to pick up where I left off. :-)

Also, any other starter projects or easy tickets that I could maybe work on
to contribute more and learn more?

Thanks & regards,
Eeshan Garg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160315/14773170/attachment-0002.html>

From kevin.horn at gmail.com  Tue Mar 15 23:23:22 2016
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 16 Mar 2016 00:23:22 -0500
Subject: [Twisted-Python] Twisted 16.0 Released
In-Reply-To: <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>
References: <F76B8C27-E335-47D5-91CD-76BDD6DE378C@atleastfornow.net>
 <EBF780F9-2C25-4B20-88D4-876E0D648D99@twistedmatrix.com>
Message-ID: <CA+U=zK0P28xdm2TGihfmscAFLKgjRtSv99TjkWtNqZZ0Zfv6Rw@mail.gmail.com>

This is fantastic news.  Great work!

Thanks to all those who contributed.

On Tue, Mar 15, 2016 at 4:42 PM, Glyph Lefkowitz <glyph at twistedmatrix.com>
wrote:

>
> > On Mar 14, 2016, at 11:13 PM, Amber Hawkie Brown <
> hawkowl at atleastfornow.net> wrote:
> >
> > On behalf of Twisted Matrix Laboratories, I am honoured to announce the
> release of Twisted 16.0!
> >
> > Twisted 16.0 brings some important changes, and some nice-to-haves as
> well. The major things are:
> >
> > - TLS endpoints have arrived! They're like the old `ssl:` endpoints, but
> support faster IPv4/IPv6 connections (using HostnameEndpoint) and always do
> hostname verification.
> > - Conch now uses Cryptography instead of PyCrypto for underlying
> cryptographic operations. This means it'll work much better on PyPy!
> > - Headers objects (notably used by t.web.server.Request) now support
> Unicode for the vast majority of cases, encoding keys to ISO-8859-1 and
> values to UTF-8.
> > - WSGI support and AMP have been ported to Python 3, along with a
> handful of other modules.
> > - More shedding of the past, with the GTK+ 1 reactor being removed.
> > - Over 45 tickets have been closed since 15.5.
> >
> > For more information, check the NEWS file (link provided below).
> >
> > You can find the downloads at <https://pypi.python.org/pypi/Twisted>
> (or alternatively <http://twistedmatrix.com/trac/wiki/Downloads>). The
> NEWS file is also available at <
> https://github.com/twisted/twisted/blob/twisted-16.0.0/NEWS>.
> >
> > Many thanks to everyone who had a part in this release - the supporters
> of the Twisted Software Foundation, the developers who contributed code as
> well as documentation, and all the people building great things with
> Twisted!
>
> This was a real banner release, and we have more great features coming in
> 16.1.  Thanks a ton to everybody once again, especially those who reviewed
> those first two PRs :-).
>
> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
--
Kevin Horn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/78c6a64f/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar 15 23:39:54 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 15 Mar 2016 22:39:54 -0700
Subject: [Twisted-Python] Is ticket #7934 still relevant?
In-Reply-To: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>
References: <CA+2gYiprFE+fFJLfbZ9x_bFDc-DpMtg7HU=9uDLwWxo40V3YaQ@mail.gmail.com>
Message-ID: <3A77803D-82D2-444A-BC53-CB312C029260@twistedmatrix.com>


> On Mar 15, 2016, at 4:58 PM, Eeshan Garg <jerryguitarist at gmail.com> wrote:
> 
> Hello, everyone!
> 
> I was just wondering, is <https://twistedmatrix.com/trac/ticket/7934 <https://twistedmatrix.com/trac/ticket/7934>> still relevant? If so, I would love to pick up where I left off. :-)

It's still open, so yes, still relevant :).

> Also, any other starter projects or easy tickets that I could maybe work on to contribute more and learn more?

Generally, we need to make more log messages structured and improve our integration of logging with now-commonly-used systems, like Logstash.  If you're interested in logging there's lots to do.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160315/b1e17083/attachment-0002.html>

From adi at roiban.ro  Wed Mar 16 02:40:52 2016
From: adi at roiban.ro (Adi Roiban)
Date: Wed, 16 Mar 2016 08:40:52 +0000
Subject: [Twisted-Python] How to get the class of the wrapped fget/fset
 property methods
In-Reply-To: <B923CC92-5C9D-4508-9862-81DAE201BB32@twistedmatrix.com>
References: <CAFycZ9eTRO5Ao0wAnybedhAdrcbZuXYd-0h4D9G7-0Hz4Uo0gg@mail.gmail.com>
 <6D0C62E4-7955-4295-95CD-96A863AE58A4@twistedmatrix.com>
 <CAFycZ9dD7sop-j8kiw6_jO=28U5CvQkH772a+d-TbgKAo-dTXA@mail.gmail.com>
 <CAFycZ9fqq=ye79DdcfP5bRx7HugiBsPw7=Jt9S60Y9Yb9ffESQ@mail.gmail.com>
 <B923CC92-5C9D-4508-9862-81DAE201BB32@twistedmatrix.com>
Message-ID: <CAFycZ9dO2f_9xp3zmimNmqbObN_T9v4qhF2=2-kFFAQ45WbcaQ@mail.gmail.com>

FYI. Amber has merged the branch adding @deprecatedProperty
https://twistedmatrix.com/trac/ticket/8124 and the issue raised in this
ticket is solved


Thanks!


-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/e36612ce/attachment-0002.html>

From itsmeshantanu at hotmail.com  Wed Mar 16 07:41:45 2016
From: itsmeshantanu at hotmail.com (Shantanoo Desai)
Date: Wed, 16 Mar 2016 14:41:45 +0100
Subject: [Twisted-Python] Cannot perform IPv6 Link-Local Multicast on Twisted
Message-ID: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>

I am trying to use the .joinGroup() by passing the IPv6 link-local multicast add. ff02::1 but get DNS lookup failure error.

I am trying to use the UDP multicast example on the twistedmatrix.com website and simply replacing the IPv4 multicast address with the IPv6 one.

I have also posted a query on StackOverflow: http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted

I am newbie on Twisted and some suggestions would be appreciated. 

Thanks a lot

Shan

Shantanoo Desai (Shan Desai)

 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/41ae2159/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 16 11:55:05 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 10:55:05 -0700
Subject: [Twisted-Python] Cannot perform IPv6 Link-Local Multicast on
	Twisted
In-Reply-To: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>
References: <BAY179-W20DCBC1CB4D2DC0B98E8DAB38A0@phx.gbl>
Message-ID: <A0AA2F82-2AFE-46A9-B6E3-C931F43E092E@twistedmatrix.com>


> On Mar 16, 2016, at 6:41 AM, Shantanoo Desai <itsmeshantanu at hotmail.com> wrote:
> 
> I am trying to use the .joinGroup() by passing the IPv6 link-local multicast add. ff02::1 but get DNS lookup failure error.
> 
> I am trying to use the UDP multicast example on the twistedmatrix.com <http://twistedmatrix.com/> website and simply replacing the IPv4 multicast address with the IPv6 one.
> 
> I have also posted a query on StackOverflow: http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted <http://stackoverflow.com/questions/36034258/ipv6-link-local-multicast-on-twisted>
> 
> I am newbie on Twisted and some suggestions would be appreciated. 

I haven't had time to fully investigate, but unfortunately, this is probably a hard-coded limitation of Twisted, currently.  The right thing for you to do would be to contribute a patch to Twisted that fixes this; please file a ticket for that if there isn't one already.

But, in the interests both of telling you how you might write that patch, and also how to work around it right now, let me explain: 'listenMulticast' constructs a MulticastPort which has an addressFamily of AF_INET (i.e.: IPv4).  In order to join an IPv6 group, you would need one that supports IPv6.

The right way to do this within Twisted is to set the address family the way that twisted.internet.tcp._BaseTCPClient does; check if the input 'interface' is a literal ipv4 or ipv6 address and set the self.addressFamily accordingly.

However, assuming you don't care about Windows, as a quick workaround (this is NOT a good long-term solution; at some point in the distant future, `twisted.internet.udp´ will hopefully disappear as an importable module, since you should always be doing this sort of thing via the reactor), you could do something like this:

from socket import AF_INET6
from twisted.internet.udp import MulticastPort

class MyMulticastPort(MulticastPort, object):
    addressFamily = AF_INET6

def listenMulticast(reactor, port, protocol, interface='', maxPacketSize=8192,
                    listenMultiple=False):
    p = MyMulticastPort(port, protocol, interface, maxPacketSize, reactor,
                        listenMultiple)
    p.startListening()
    return p

Note that this is totally untested, which is why I'm answering here and not Stack Overflow :-).  Let me know if it works!

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/47fa5855/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 16 12:52:43 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 11:52:43 -0700
Subject: [Twisted-Python] upcoming changes to twistedmatrix.com mail
	infrastructure
Message-ID: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>

Over the last few months, twistedmatrix.com's mailman installation has been used increasingly frequently to execute denial-of-service attacks against people's mailboxes.  This is accomplished by sending huge numbers of subscription requests to our website, which in turn sends huge numbers of confirmation emails to their inbox.  Based on some information that some targeted users have sent me, I now believe that this is to cause those users' mail quotas to be exceeded so that password reset or login notification emails won't reach them.

This has been going on for some time, but the frequency and severity of the attacks seem to be increasing; I only recently realized that this was considerably worse than an annoyance for those affected.  I now have at least 1 confirmed report of this attack being a part of a (partially successful) identity theft.

This isn't the only problem we have with email:

We're running our own infrastructure which puts load on our already beyond-overloaded volunteer system administration team.
Despite running our own infrastructure, we are not dogfooding Twisted at all in the process, so we're not even learning anything useful from the pain; "exim is bad" is a lesson we've already learned many times, we do not need to keep learning it.
Given how hard it is for us to upgrade Mailman in our current system, we aren't even dogfooding our fellow community project terribly well.
Our infrastructure runs on the same host as the website and the buildmaster, overloading a very creaky system.
In addition to mailing lists, we run a mail forwarder.  Our server's sender reputation is ... not great.  We don't have SPF records, we don't do DKIM, and we don't provide authenticated SMTP for users, so emails just come from "wherever" when they are sent from, e.g. 'glyph at twistedmatrix.com' :-).

In order to address this, as soon as I can reasonably manage to do so, I will be moving Twisted's email infrastructure to mailgun.com <http://mailgun.com/>, a product that I've been successfully using for a range of personal domains (in particular, the divmod.com <http://divmod.com/> email forwarder - yes, I still operate that, when the Twisted community promises you an email address for life you get it ;-)).  Additionally, Mailgun uses a bunch of Twisted within their infrastructure, so (although we won't be operating it) we will actually be dogfooding considerably more.

(Mailgun is a product of my employer, Rackspace, but they've given us a generous open source discount so there's no conflict of interest; the Twisted project won't be spending money on this.)

There will be a couple of inconveniences immediately after the transition:

At first, there will be no self-service subscription to mailing lists any more.  If you want to subscribe, you'll have to send a message to twisted-python-owner at twistedmatrix.com <mailto:twisted-python-owner at twistedmatrix.com> and the list administrator (right now, probably just me) will manually add your address.  (Self-service unsubscription will still be possible.)
I'm not sure if I'll be able to keep the list archives at https://twistedmatrix.com/pipermail/ <https://twistedmatrix.com/pipermail/> updated, at least at first.  I would encourage everyone to use http://news.gmane.org/gmane.comp.python.twisted <http://news.gmane.org/gmane.comp.python.twisted> and http://news.gmane.org/gmane.comp.python.twisted.web <http://news.gmane.org/gmane.comp.python.twisted.web> in the meanwhile.
Speaking of the contents of that sad URL, many disused mailing lists will be deleted.  I doubt anyone will notice since there haven't been any posts to most of them in many years.
If you presently send email from a twistedmatrix.com <http://twistedmatrix.com/> address, you will probably want to start using the mailgun forwarder so that your messages will have nice shiny DKIM/SPF headers; I suspect you may start having more deliverability problems than you already do once other mail servers notice that we have said records if you're not using them.  I'll distribute SMTP credentials via GPG-encrypted email to everyone I'm aware of who uses such an address.

There will be considerable benefits though:

For those of you with @twistedmatrix.com <http://twistedmatrix.com/> addresses, Mailgun operates a pretty conservative low-pass spam filter, but in looking at the analytics from my own personal domains, it really helps a lot and it is definitely more effective than the setup we've got right now.
Deliverability and mail-sending performance should be much improved; messages should arrive faster because they will be quarantined or deferred-bounced by major senders like GMail et. al. far less often, because we'll be forwarding less spam and legitimate messages will have appropriate anti-spam headers.
Trac will get faster at certain times because email DoSes should stop hitting the server.
Administrative overhead will decrease; we can just stop maintaining email ourselves.
Last but certainly not least, we'll stop being a collective unwilling accessory to cybercrime.

Probably these changes will all be pretty subtle, and most folks won't notice, but I wanted it to be clear in advance that they were intentional, in case there is some disruption associated with them :-).  If anyone wants to give me a hand with parts of this (for example, setting up a smarthost configuration so that trac can still send email) please let me know.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/4cd6be27/attachment-0002.html>

From thughes at thegoldfish.org  Wed Mar 16 12:57:03 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Wed, 16 Mar 2016 18:57:03 +0000
Subject: [Twisted-Python] Client Application service.Service
Message-ID: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.



Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.


The protocol is basically a ascii line style application


It feels to me that my Service should be the core and the protocol should
just be something like

def send_mesage(message):










Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/e8944dfb/attachment-0002.html>

From p.mayers at imperial.ac.uk  Wed Mar 16 13:06:21 2016
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Wed, 16 Mar 2016 19:06:21 +0000
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
 twistedmatrix.com mail infrastructure
In-Reply-To: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
Message-ID: <56E9AEAD.4000001@imperial.ac.uk>

On 16/03/16 18:52, Glyph wrote:
> Over the last few months, twistedmatrix.com <http://twistedmatrix.com>'s
> mailman installation has been used increasingly frequently to execute
> denial-of-service attacks against people's mailboxes.  This is

My sympathies; this exact problem was the reason we CAPTCHA-ised our 
install of mailman and have to keep a very close eye on it.

It's really a shame there's so little open-source competition in the 
email sector these days; it all appears to have been hoovered up by 
Gmail, Office 365 and various spam (sorry - bulk email) providers.

> There will be a couple of inconveniences immediately after the transition:

Couple of random thoughts:

Does mailgun actually contain a mailman-alike product or are you 
effectively building one on top of it?

Will the mailman-style List-X headers remain?

Will the behaviour of the list w.r.t. things like routing of To:/Cc:'ed 
people change.

Good luck with the migration.



From glyph at twistedmatrix.com  Wed Mar 16 13:53:08 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 16 Mar 2016 12:53:08 -0700
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
	twistedmatrix.com mail infrastructure
In-Reply-To: <56E9AEAD.4000001@imperial.ac.uk>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
 <56E9AEAD.4000001@imperial.ac.uk>
Message-ID: <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>


> On Mar 16, 2016, at 12:06 PM, Phil Mayers <p.mayers at imperial.ac.uk> wrote:
> 
> On 16/03/16 18:52, Glyph wrote:
>> Over the last few months, twistedmatrix.com <http://twistedmatrix.com>'s
>> mailman installation has been used increasingly frequently to execute
>> denial-of-service attacks against people's mailboxes.  This is
> 
> My sympathies; this exact problem was the reason we CAPTCHA-ised our install of mailman and have to keep a very close eye on it.

Yeah.  If this were the only problem we'd probably be going that route, but given issues with the rest of our mail infrastructure, getting rid of it is a lot more satisfying :).  When I do self-service subscription I do very definitely plan to integrate a CAPTCHA.

> It's really a shame there's so little open-source competition in the email sector these days; it all appears to have been hoovered up by Gmail, Office 365 and various spam (sorry - bulk email) providers.
> 
>> There will be a couple of inconveniences immediately after the transition:
> 
> Couple of random thoughts:
> 
> Does mailgun actually contain a mailman-alike product or are you effectively building one on top of it?

Mailgun does have mailing lists: https://documentation.mailgun.com/api-mailinglists.html

This is not really a "mailman-alike"; its feature-set is extremely minimal (and, as mailgun will readily tell you, using it for members-only mailing lists is a bit of a weird case for their product; their primary target is transactional application emails, like notifications of activity in a web app, invoices, alerts, that sort of thing).  There are some things we will miss (particularly archives; I'm hoping we can just pipe the messages into pipermail somehow); but huge amounts of Mailman's customizability are just useless fluff.  Some are actively bad, like mailing you all your passwords in plain text every month.  We don't use most of its features, and we have to explicitly disable a lot of them.  Many of these things are better in more recent releases, but for us, upgrading to a more recent release is quite a bit more work than abandoning it entirely.

However, despite peer-to-peer lists being a little outside Mailgun's core demographic, they're totally supported, and I've had a pretty good experience (better than mailman administration, certainly) administering a medium-sized mailing list using their web UI.  I do plan to build a few small tools, like a self-service subscription tool, using the API, but even that will be good; it'll make a nice little demo Klein app.

> Will the mailman-style List-X headers remain?

Yes, although for unfortunate technical reasons the values of those headers may change (the way lists vs. personal addresses are name-spaced on twistedmatrix.com is unfortunate for reasons having nothing to do with mailgun, but it will probably matter now whereas it didn't before).

> Will the behaviour of the list w.r.t. things like routing of To:/Cc:'ed people change.

For members-post mailing lists, mailgun unconditionally sets the reply-to header, which is exactly the way we have mailman configured right now, so: no.

> Good luck with the migration.

Thanks!  And thanks for your questions, I was worried I put a ton of work into that email only for it to land in the void :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160316/6b4e2f7f/attachment-0002.html>

From waterbug at pangalactic.us  Wed Mar 16 15:06:25 2016
From: waterbug at pangalactic.us (Steve Waterbury)
Date: Wed, 16 Mar 2016 17:06:25 -0400
Subject: [Twisted-Python] [Twisted-web] upcoming changes to
 twistedmatrix.com mail infrastructure
In-Reply-To: <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
 <56E9AEAD.4000001@imperial.ac.uk>
 <C58776AD-CE08-44E7-A253-BAD90286BD98@twistedmatrix.com>
Message-ID: <56E9CAD1.1070301@pangalactic.us>

On 03/16/2016 03:53 PM, Glyph wrote:
>
>> On Mar 16, 2016, at 12:06 PM, Phil Mayers <p.mayers at imperial.ac.uk
>> <mailto:p.mayers at imperial.ac.uk>> wrote:

>> Good luck with the migration.
>
> Thanks!  And thanks for your questions, I was worried I put a ton of
> work into that email only for it to land in the void :).

FWIW, Glyph, I read *all* your emails from beginning to end -- both
because they are always educational (for me) and because it
helps me in my never-ending quest to avoid doing real work.  :D
(So, another part of the void heard from ... ;)

But seriously:  thanks for all your work on this and Twisted in general,
and to you and all the Twisted minions for the continuing and
sustained high quality of Twisted!

Cheers,
Steve



From thughes at thegoldfish.org  Wed Mar 16 18:24:14 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Thu, 17 Mar 2016 00:24:14 +0000
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
Message-ID: <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>

Woops : accidentally sent too early

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.

Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.

The protocol is basically a ascii line style application

It feels to me that my Service should be the main business logic  and the
protocol should just be a simple send/receive something like this gist

https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36

I was then planning on writing web interface that interacted with the
service to send messages and display the response.

My main issue here is how to send the message from the service via the
protocol. I cannot find any good examples of this and am beginning to think
I am conceptualising incorrectly or over thinking it. If anyone can point
me to some examples or point me in the right direction it would be awesome.
Hopefully my example makes sense.

Cheers

Tim

Tim Hughes
mailto:thughes at thegoldfish.org

Hi all,

I am looking into twisted for writing a client application (bot style) and
most of the examples I find are for server style applications.



Looking at the finger example and
https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
I am just wondering where is best to put my application logic.


The protocol is basically a ascii line style application


It feels to me that my Service should be the core and the protocol should
just be something like

def send_mesage(message):










Tim Hughes
mailto:thughes at thegoldfish.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160317/c6263a3a/attachment-0002.html>

From enriquejr at gmail.com  Wed Mar 16 20:21:44 2016
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Thu, 17 Mar 2016 10:21:44 +0800
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
 <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
Message-ID: <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>

Hi Tim,

I think you need to keep a reference to an instance of your
MyClientProtocol. Your example does not show how you actually connected
your bot to a server but I assume it follows on the call to load_config on
startService. One way to do this:

class MyService(Service):
  def __init__(self):
    self._client = None

  def clientConnected(self, prot):
    # set reference to the protocol instance
    self._client = prot

  def startService():
    self.config = load_config(config_file)

    # connect bot to the server
    f = MyClientFactory(self)
    reactor.connectTCP(self.config.host, self.config.port, f)

  def sendMessage(self, msg):
    if self._client:
      self._client.sendLine(msg)

Client reference can be set from the protocol instance when connection has
been made:

class MyClientProtocol(protocol.Protocol):
  #
  def connectionMade(self):
     self.factory.service.clientConnected(self)

HTH,
Enrique

On Thu, Mar 17, 2016 at 8:24 AM, Tim Hughes <thughes at thegoldfish.org> wrote:

> Woops : accidentally sent too early
>
> Hi all,
>
> I am looking into twisted for writing a client application (bot style) and
> most of the examples I find are for server style applications.
>
> Looking at the finger example and
> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
> I am just wondering where is best to put my application logic.
>
> The protocol is basically a ascii line style application
>
> It feels to me that my Service should be the main business logic  and the
> protocol should just be a simple send/receive something like this gist
>
>
> https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36
>
> I was then planning on writing web interface that interacted with the
> service to send messages and display the response.
>
> My main issue here is how to send the message from the service via the
> protocol. I cannot find any good examples of this and am beginning to think
> I am conceptualising incorrectly or over thinking it. If anyone can point
> me to some examples or point me in the right direction it would be awesome.
> Hopefully my example makes sense.
>
> Cheers
>
> Tim
>
> Tim Hughes
> mailto:thughes at thegoldfish.org
>
> Hi all,
>
> I am looking into twisted for writing a client application (bot style) and
> most of the examples I find are for server style applications.
>
>
>
> Looking at the finger example and
> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
> I am just wondering where is best to put my application logic.
>
>
> The protocol is basically a ascii line style application
>
>
> It feels to me that my Service should be the core and the protocol should
> just be something like
>
> def send_mesage(message):
>
>
>
>
>
>
>
>
>
>
> Tim Hughes
> mailto:thughes at thegoldfish.org
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160317/e253e5db/attachment-0002.html>

From thughes at thegoldfish.org  Thu Mar 17 17:49:28 2016
From: thughes at thegoldfish.org (Tim Hughes)
Date: Thu, 17 Mar 2016 23:49:28 +0000
Subject: [Twisted-Python] Client Application service.Service
In-Reply-To: <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>
References: <CALQL5_LE__GpiDO16Yw24-nm9hLJd-auZqFhBkZFoUdYiH2nQg@mail.gmail.com>
 <CALQL5_+SsMnRsaE-aJJkjpuwn4VFjfCRAFBAxn5LAaB-vV30vA@mail.gmail.com>
 <CABnc-1cht7Eqie4hnw+qEWePrV_JM+mHDH63s4mGBAN96jBegg@mail.gmail.com>
Message-ID: <CALQL5_K1A3mT4OBZwKAGW92Zt3bDL-W7t2D-BAArU8nEtgLpig@mail.gmail.com>

Much appreciated. I think that has got me over that hurdle :-)

Tim Hughes
mailto:thughes at thegoldfish.org


On 17 March 2016 at 02:21, Enrique Samson Jr. <enriquejr at gmail.com> wrote:

> Hi Tim,
>
> I think you need to keep a reference to an instance of your
> MyClientProtocol. Your example does not show how you actually connected
> your bot to a server but I assume it follows on the call to load_config on
> startService. One way to do this:
>
> class MyService(Service):
>   def __init__(self):
>     self._client = None
>
>   def clientConnected(self, prot):
>     # set reference to the protocol instance
>     self._client = prot
>
>   def startService():
>     self.config = load_config(config_file)
>
>     # connect bot to the server
>     f = MyClientFactory(self)
>     reactor.connectTCP(self.config.host, self.config.port, f)
>
>   def sendMessage(self, msg):
>     if self._client:
>       self._client.sendLine(msg)
>
> Client reference can be set from the protocol instance when connection has
> been made:
>
> class MyClientProtocol(protocol.Protocol):
>   #
>   def connectionMade(self):
>      self.factory.service.clientConnected(self)
>
> HTH,
> Enrique
>
> On Thu, Mar 17, 2016 at 8:24 AM, Tim Hughes <thughes at thegoldfish.org>
> wrote:
>
>> Woops : accidentally sent too early
>>
>> Hi all,
>>
>> I am looking into twisted for writing a client application (bot style)
>> and most of the examples I find are for server style applications.
>>
>> Looking at the finger example and
>> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
>> I am just wondering where is best to put my application logic.
>>
>> The protocol is basically a ascii line style application
>>
>> It feels to me that my Service should be the main business logic  and the
>> protocol should just be a simple send/receive something like this gist
>>
>>
>> https://gist.github.com/timhughes/f85da0c2d88ecb4ab5e3#file-twisted_application_client-py-L36
>>
>> I was then planning on writing web interface that interacted with the
>> service to send messages and display the response.
>>
>> My main issue here is how to send the message from the service via the
>> protocol. I cannot find any good examples of this and am beginning to think
>> I am conceptualising incorrectly or over thinking it. If anyone can point
>> me to some examples or point me in the right direction it would be awesome.
>> Hopefully my example makes sense.
>>
>> Cheers
>>
>> Tim
>>
>> Tim Hughes
>> mailto:thughes at thegoldfish.org
>>
>> Hi all,
>>
>> I am looking into twisted for writing a client application (bot style)
>> and most of the examples I find are for server style applications.
>>
>>
>>
>> Looking at the finger example and
>> https://github.com/jdavisp3/twisted-intro/blob/master/twisted-server-3/fastpoetry.py
>> I am just wondering where is best to put my application logic.
>>
>>
>> The protocol is basically a ascii line style application
>>
>>
>> It feels to me that my Service should be the core and the protocol should
>> just be something like
>>
>> def send_mesage(message):
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> Tim Hughes
>> mailto:thughes at thegoldfish.org
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160317/8fc9f55c/attachment-0002.html>

From tobias.oberstein at tavendo.de  Fri Mar 18 11:08:21 2016
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Fri, 18 Mar 2016 18:08:21 +0100
Subject: [Twisted-Python] Crossbar.io / AutobahnPython 0.13.0
In-Reply-To: <56EC34E6.6070904@gmail.com>
References: <56EC34E6.6070904@gmail.com>
Message-ID: <56EC3605.7050108@tavendo.de>

Hi,

we've released Crossbar.io and AutobahnPython 0.13.0, running on Twisted 
16.0.0 and PyPy 5.0.

Get it here:

Source:

* https://github.com/crossbario/crossbar
* https://github.com/crossbario/autobahn-python

Python Packages:

* https://pypi.python.org/pypi/crossbar
* https://pypi.python.org/pypi/autobahn

Binary Packages (recommended)

* http://crossbar.io/docs/Local-Installation/

The binary packages contain a complete, self-contained, optimized
Crossbar.io with everything - including PyPy 5.0, and of course based on 
Twisted 16.0.0!

These packages are available for Ubuntu, FreeBSD and CentOS.
(thanks to Hawkie, Miss Amber Brown - she made that happen;) )

Cheers,
/Tobias





-------------- next part --------------
A non-text attachment was scrubbed...
Name: Pasted image at 2016_03_18 05_41 PM.png
Type: image/png
Size: 170041 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20160318/d734a94d/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Bildschirmfoto vom 2016-03-18 17:46:03.png
Type: image/png
Size: 221883 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20160318/d734a94d/attachment-0005.png>

From hs at ox.cx  Sat Mar 19 05:29:28 2016
From: hs at ox.cx (Hynek Schlawack)
Date: Sat, 19 Mar 2016 12:29:28 +0100
Subject: [Twisted-Python] pyOpenSSL 16.0.0 released
Message-ID: <F3921E30-C365-4134-9396-E44470578222@ox.cx>

On behalf of PyCA – the Python Cryptography Authority – I’m anxious to announce that after almost a year since the 0.15.1 release of pyOpenSSL we’ve released the brand new 16.0.0.

A few organizational notes:

1. The pyopenssl-users mailing list and #pyopenssl IRC channel are deprecated.  Please use cryptography-dev <https://mail.python.org/pipermail/cryptography-dev/> and #cryptography-dev on Freenode where you’re much more likely to get help.
2. The version scheme switched to CalVer because a 0.x version for a 15 years old project is rather odd and calling it 1.0 although we don’t expect a 2.0 to ever happen didn’t make any sense.  pyOpenSSL is a long-running project with strict backward-compatibility requirements and is hence better served with a calendar-based version scheme.
3. Please note that some of us will be doing a TLS/HTTPS workshop at PyCon US 2016 so if you always wanted to learn about these things first hand, make sure to sign up: <https://us.pycon.org/2016/schedule/presentation/1786/>.  We've opted to receive no compensation and asked the organizers to send them to PyLadies instead.  So you’ll be doing good while learning something!

***

Release details:

While the list of changes looks short, a lot internal work happened:

72 files changed, 15511 insertions(+), 15063 deletions(-)

We’ve done our best to not break any existing applications; including by making the urllib3 and Twisted test suites part of our CI.

The full changelog can be found at <https://pyopenssl.readthedocs.org/en/stable/changelog.html>.

This is the first release under full stewardship of PyCA. We have made many changes to make local development more pleasing. The test suite now passes both on Linux and OS X with OpenSSL 0.9.8, 1.0.1, and 1.0.2. It has been moved to py.test, all CI test runs are part of tox and the source code has been made fully flake8 compliant.

We hope to have lowered the barrier for contributions significantly but are open to hear about any remaining frustrations.


Backward-incompatible changes:

• Python 3.2 support has been dropped. It never had significant real world usage and has been dropped by our main dependency cryptography. Affected users should upgrade to Python 3.3 or later.


Deprecations:

• The support for EGD has been removed. The only affected function OpenSSL.rand.egd() now uses os.urandom() to seed the internal PRNG instead. Please see pyca/cryptography#1636 for more background information on this decision. In accordance with our backward compatibility policy OpenSSL.rand.egd() will be removed no sooner than a year from the release of 16.0.0.
Please note that you should use urandom for all your secure random number needs.
	• Python 2.6 support has been deprecated. Our main dependency cryptography deprecated 2.6 in version 0.9 (2015-05-14) with no time table for actually dropping it. pyOpenSSL will drop Python 2.6 support once cryptography does.


Changes:

• Fixed OpenSSL.SSL.Context.set_session_id, OpenSSL.SSL.Connection.renegotiate, OpenSSL.SSL.Connection.renegotiate_pending, and OpenSSL.SSL.Context.load_client_ca. They were lacking an implementation since 0.14. #422
• Fixed segmentation fault when using keys larger than 4096-bit to sign data. #428
• Fixed AttributeError when OpenSSL.SSL.Connection.get_app_data() was called before setting any app data. #304
• Added OpenSSL.crypto.dump_publickey() to dump OpenSSL.crypto.PKey objects that represent public keys, and OpenSSL.crypto.load_publickey() to load such objects from serialized representations. #382
• Added OpenSSL.crypto.dump_crl() to dump a certificate revocation list out to a string buffer. #368
• Added OpenSSL.SSL.Connection.get_state_string() using the OpenSSL binding state_string_long. #358
• Added support for the socket.MSG_PEEK flag to OpenSSL.SSL.Connection.recv() and OpenSSL.SSL.Connection.recv_into(). #294
• Added OpenSSL.SSL.Connection.get_protocol_version() and OpenSSL.SSL.Connection.get_protocol_version_name(). #244
• Switched to utf8string mask by default. OpenSSL formerly defaulted to a T61String if there were UTF-8 characters present. This was changed to default to UTF8String in the config around 2005, but the actual code didn't change it until late last year. This will default us to the setting that actually works. To revert this you can call OpenSSL.crypto._lib.ASN1_STRING_set_default_mask_asc(b"default"). #234

***

For PyCA,
Hynek Schlawack
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 801 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160319/a343510d/attachment.sig>

From ldanielburr at me.com  Tue Mar 22 13:33:01 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 14:33:01 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
Message-ID: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>

Hi all,

I tried to comment on the ticket, but SpamBayes rejected it as spam.

As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to http://pypy.org/performance.html, "Classes that inherit from both new- and old-style classes are extremely slow; avoid at all costs."

Thanks,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/82d1e925/attachment-0002.html>

From chris.norman2 at googlemail.com  Tue Mar 22 13:42:06 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 19:42:06 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
Message-ID: <56F1A00E.3020302@googlemail.com>

Hi all,
I'm sure I asked this question before, but I can't find any answers on 
google, and I've changed my work flow a bit now, so thought it was worth 
re-asking.

So on my server's protocol, I have a send method. This allows me to pass 
arguments which get sent off to the client in the right format. The send 
method looks something like this:

  def send(self, command, **kwargs):
   """Cause the client to issue getattr(connection, command)(**kwargs). 
If disconnect evaluates to True, disconnect the client after the message 
is sent."""
   disconnect = kwargs.get('disconnect', False)
   try:
    del kwargs['disconnect']
   except KeyError:
    pass # Argument not found.
   d = defer.Deferred()
   d.addCallback(self.prepare_command) Convert the command and kwargs to 
json.
   d.addCallback(self.deferred_write) # Write the json to the transport.
   if disconnect:
    d.addCallback(self.deferred_disconnect) # Issue 
self.transport.loseConnection().
   reactor.callFromThread(d.callback, [command, kwargs]) # Call the 
deferred's callback chain.
   return d # Return the deferred.

If I try something like:
protocol.send('alert', message = '*** Disconnected. ***', disconnect = True)
the client gets disconnected, but never sees the "*** Disconnected. ***" 
message.

I guess I could do a reactor.callLater and just wait for the transport 
to get the message, but that seems sloppy, and I can't help thinking 
there must be something I'm missing.

Any ideas welcome!

Cheers all,




From ldanielburr at me.com  Tue Mar 22 13:49:46 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 14:49:46 -0500
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <56F1A00E.3020302@googlemail.com>
References: <56F1A00E.3020302@googlemail.com>
Message-ID: <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>

Hi Chris,

On March 22, 2016 at 2:42:14 PM, Chris Norman (chris.norman2 at googlemail.com) wrote:

Hi all, 
I'm sure I asked this question before, but I can't find any answers on 
google, and I've changed my work flow a bit now, so thought it was worth 
re-asking. 

So on my server's protocol, I have a send method. This allows me to pass 
arguments which get sent off to the client in the right format. The send 
method looks something like this: 

def send(self, command, **kwargs): 
"""Cause the client to issue getattr(connection, command)(**kwargs). 
If disconnect evaluates to True, disconnect the client after the message 
is sent.""" 
disconnect = kwargs.get('disconnect', False) 
try: 
del kwargs['disconnect'] 
except KeyError: 
pass # Argument not found. 
d = defer.Deferred() 
d.addCallback(self.prepare_command) Convert the command and kwargs to 
json. 
d.addCallback(self.deferred_write) # Write the json to the transport. 
if disconnect: 
d.addCallback(self.deferred_disconnect) # Issue 
self.transport.loseConnection(). 
You are disconnecting right here, without waiting for your Deferred to fire.  It might make better sense to add the call the self.transport.loseConnection() to your Deferred’s callback chain.

Hope this helps,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/1995721b/attachment-0002.html>

From chris.norman2 at googlemail.com  Tue Mar 22 14:08:40 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 20:08:40 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
Message-ID: <56F1A648.9020504@googlemail.com>

Hi Daniel,

On 22/03/2016 19:49, L. Daniel Burr wrote:
> Hi Chris,
>
> On March 22, 2016 at 2:42:14 PM, Chris Norman 
> (chris.norman2 at googlemail.com <mailto:chris.norman2 at googlemail.com>) 
> wrote:
>
>> Hi all,
>> I'm sure I asked this question before, but I can't find any answers on
>> google, and I've changed my work flow a bit now, so thought it was worth
>> re-asking.
>>
>> So on my server's protocol, I have a send method. This allows me to pass
>> arguments which get sent off to the client in the right format. The send
>> method looks something like this:
>>
>> def send(self, command, **kwargs):
>> """Cause the client to issue getattr(connection, command)(**kwargs).
>> If disconnect evaluates to True, disconnect the client after the message
>> is sent."""
>> disconnect = kwargs.get('disconnect', False)
>> try:
>> del kwargs['disconnect']
>> except KeyError:
>> pass # Argument not found.
>> d = defer.Deferred()
>> d.addCallback(self.prepare_command) Convert the command and kwargs to
>> json.
>> d.addCallback(self.deferred_write) # Write the json to the transport.
>> if disconnect:
>> d.addCallback(self.deferred_disconnect) # Issue
>> self.transport.loseConnection().
>
> You are disconnecting right here, without waiting for your Deferred to 
> fire.  It might make better sense to add the call the 
> self.transport.loseConnection() to your Deferred’s callback chain.
>
> Hope this helps,
>

Actually it's been added to the callback. I think my mail client wrapped 
the lines, but issue self.transport.LoseConnection() is the comment, so 
self.deferred_disconnect is added to the callback chain.

Sorry for the confusion.

Anything else which can cause this?

Cheers,

> Daniel
> --
> L. Daniel Burr
> ldanielburr at me.com <mailto:ldanielburr at me.com>
> (312) 656-8387
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/7965ebb0/attachment-0002.html>

From ldanielburr at me.com  Tue Mar 22 14:37:20 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 22 Mar 2016 15:37:20 -0500
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <56F1A648.9020504@googlemail.com>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
 <56F1A648.9020504@googlemail.com>
Message-ID: <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>

Hi Chris,
On March 22, 2016 at 3:09:08 PM, Chris Norman (chris.norman2 at googlemail.com) wrote:

Hi Daniel,


[SNIP]

Actually it's been added to the callback. I think my mail client wrapped the lines, but issue self.transport.LoseConnection() is the comment, so self.deferred_disconnect is added to the callback chain.

Sorry for the confusion.

Anything else which can cause this?


Without seeing the rest of your code, I can’t suggest anything concrete.  You say the client never “sees” the message, but your call to loseConnection() still occurs, so you’re not encountering an exception during the callback chain.  Can you come up with an minimal example the demonstrates the problem?

Daniel
—
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/fd1ce360/attachment-0002.html>

From chris.norman2 at googlemail.com  Tue Mar 22 15:14:37 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Tue, 22 Mar 2016 21:14:37 +0000
Subject: [Twisted-Python] Sending disconnect messages to clients
In-Reply-To: <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>
References: <56F1A00E.3020302@googlemail.com>
 <etPan.56f1a1da.2d623f43.9f5b@dzur.corp.wargaming.local>
 <56F1A648.9020504@googlemail.com>
 <etPan.56f1ad00.c520713.9f5b@dzur.corp.wargaming.local>
Message-ID: <56F1B5BD.80603@googlemail.com>

OK... ignore me.

I made your test program and it worked fine. So I tried connecting to my 
server with telnet and saw the expected message... So I checked the 
error function which should have been called on the client with the 
particular message to see it was as good as pass...

Sorry for all the messages, everything works fine, panic over!

Thank you for your help with this!


On 22/03/2016 20:37, L. Daniel Burr wrote:
> Hi Chris,
>
> On March 22, 2016 at 3:09:08 PM, Chris Norman 
> (chris.norman2 at googlemail.com <mailto:chris.norman2 at googlemail.com>) 
> wrote:
>
>> Hi Daniel,
>>
>
> [SNIP]
>
>> Actually it's been added to the callback. I think my mail client 
>> wrapped the lines, but issue self.transport.LoseConnection() is the 
>> comment, so self.deferred_disconnect is added to the callback chain.
>>
>> Sorry for the confusion.
>>
>> Anything else which can cause this?
>>
>
> Without seeing the rest of your code, I can’t suggest anything 
> concrete.  You say the client never “sees” the message, but your call 
> to loseConnection() still occurs, so you’re not encountering an 
> exception during the callback chain.  Can you come up with an minimal 
> example the demonstrates the problem?
>
> Daniel
> —
> L. Daniel Burr
> ldanielburr at me.com <mailto:ldanielburr at me.com>
> (312) 656-8387
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/72b706ef/attachment-0002.html>

From glyph at twistedmatrix.com  Tue Mar 22 22:26:28 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 22 Mar 2016 21:26:28 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
Message-ID: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>


> On Mar 22, 2016, at 12:33 PM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> Hi all,

Hi Daniel,

> I tried to comment on the ticket, but SpamBayes rejected it as spam.

The spam-monitoring queue is empty, which means another admin probably got to this before I did.  But when I plugged the following paragraph in, something about it made spambayes think it was still 70% likely that it was spam.  So, I re-trained the filter repeatedly until it came out to <1%; you should have less trouble with it in the future.

> As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to http://pypy.org/performance.html <http://pypy.org/performance.html>, "Classes that inherit from both new- and old-style classes are extremely slow; avoid at all costs."


In fact, the opposite is true!  Right now, every new Twisted class must be new-style, so if it inherits from an old-style class we end up in this situation.  Since most core Twisted superclasses are old-style, that means this happens all the time.

Nothing about 8244 would involve making more hybrid classes.  Classes decorated as @oldStyle must be pure old style (the semantics of hybrids are much, much closer to new-style than old-style) so they have to be what they are today.  When we flip the switch there will be no more old-style classes at all.

Is there a scenario I'm missing / not understanding about the way the ticket's steps are outlined?

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160322/55c3660c/attachment-0002.html>

From hawkowl at atleastfornow.net  Tue Mar 22 22:54:59 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Wed, 23 Mar 2016 12:54:59 +0800
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <a4b6f1ea-b958-4eaa-b45b-4abb6f424e6f@email.android.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/a1ec1099/attachment-0002.html>

From ldanielburr at me.com  Wed Mar 23 10:22:04 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 23 Mar 2016 11:22:04 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>

Hi Glyph,

On March 22, 2016 at 11:27:10 PM, Glyph (glyph at twistedmatrix.com) wrote:


On Mar 22, 2016, at 12:33 PM, L. Daniel Burr <ldanielburr at me.com> wrote:

Hi all,

Hi Daniel,

I tried to comment on the ticket, but SpamBayes rejected it as spam.

The spam-monitoring queue is empty, which means another admin probably got to this before I did.  But when I plugged the following paragraph in, something about it made spambayes think it was still 70% likely that it was spam.  So, I re-trained the filter repeatedly until it came out to <1%; you should have less trouble with it in the future.


Thanks for looking into that, I appreciate it.

As a person who runs twisted apps via Pypy whenever possible, I wanted to point out that this ticket may result in a performance regression: according to http://pypy.org/performance.html, "Classes that inherit from both new- and old-style classes are extremely slow; avoid at all costs."

In fact, the opposite is true!  Right now, every new Twisted class must be new-style, so if it inherits from an old-style class we end up in this situation.  Since most core Twisted superclasses are old-style, that means this happens all the time.

Nothing about 8244 would involve making more hybrid classes.  Classes decorated as @oldStyle must be pure old style (the semantics of hybrids are much, much closer to new-style than old-style) so they have to be what they are today.  When we flip the switch there will be no more old-style classes at all.

Is there a scenario I'm missing / not understanding about the way the ticket's steps are outlined?


I’m thinking of a twisted.web service at the moment.  Right now, most of the classes involved (resource.Resource, http.HTTPChannel, http.Request and server.Request, etc.) are old-style classes, and pypy does a reasonable job of optimizing those, if not to the degree that new-style classes may be optimized.  My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles.  Obviously I’m using pypy because it gives my twisted.web service a substantial improvement in terms of the number of requests per second that it can handle.

I understand that I can set TWISTED_NEWSTYLE to 0 and sidestep this potential performance hit, but it is a detail that has to be communicated to various devops teams, has to be kept track of across environments, should probably be removed once a fully-converted release of Twisted arrives, and so on.

Yes, I’m being a bit of a whiner here (apologies), and clearly the feature can be disabled, and I should definitely test the results to see if there *is* a performance regression in my case.

Thanks,

Daniel
--
L. Daniel Burr
ldanielburr at me.com
(312) 656-8387
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/22479937/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 23 12:39:21 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 11:39:21 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
Message-ID: <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>


> On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles

If oldStyle converts the classes into hybrids, then it's broken.  Hybrids don't follow the semantics of old-style classes.  So this won't happen.

>  I should definitely test the results to see if there *is* a performance regression in my case.

My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written.  That said, we're really bad at paying attention to speed.twistedmatrix.com <http://speed.twistedmatrix.com/> and we really need a way to see pre-merge performance metrics rather than just a graph over time.

-g
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/b75a6669/attachment-0002.html>

From ldanielburr at me.com  Wed Mar 23 15:10:10 2016
From: ldanielburr at me.com (L. Daniel Burr)
Date: Wed, 23 Mar 2016 16:10:10 -0500
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
 <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
Message-ID: <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>

Hi Glyph,
On March 23, 2016 at 1:39:53 PM, Glyph (glyph at twistedmatrix.com) wrote:


On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com> wrote:

My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles

If oldStyle converts the classes into hybrids, then it's broken.  Hybrids don't follow the semantics of old-style classes.  So this won't happen.

 I should definitely test the results to see if there *is* a performance regression in my case.

My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written.  That said, we're really bad at paying attention to speed.twistedmatrix.com and we really need a way to see pre-merge performance metrics rather than just a graph over time.


In the interest of putting my money where my mouth is, I’ve tested a very simple case, where I create a class inheriting from twisted.web.resource.Resource, and a subclass which mixes in “object”:

from twisted.application import internet, service
from twisted.internet import endpoints, reactor
from twisted.web import resource, server


class MyResource(resource.Resource):
    isLeaf = True

    def render_GET(self, request):
        return 'Hello, World!'

class FrankenStyle(MyResource, object):
    pass

print type(MyResource)
print type(FrankenStyle)

application = service.Application(‘test')
root = FrankenStyle()
s = server.Site(root)
ep = endpoints.serverFromString(reactor, 'tcp:8080')
svc = internet.StreamServerEndpointService(ep, s)
svc.setName(‘hybridtest')
svc.setServiceParent(application)

Running siege --benchmark --concurrent=10 --reps=1000 "http://127.0.0.1:8080/“ against the “MyResource” version gets me 5714.29 requests per second across 3 runs.
Running siege --benchmark --concurrent=10 --reps=1000 "http://127.0.0.1:8080/“ against the “FrankenStyle” version gets me an average of 5671.61 requests per second across 3 runs.
So, not a huge difference, overall, and it might not even be visible over a long enough period of time.
Thanks,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/9c832ea8/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 23 15:29:00 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 14:29:00 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <etPan.56f2c2ac.7d7dc3e1.a47e@dzur.corp.wargaming.local>
 <DDCD8D56-5A92-4634-BB61-EDEA0C4B10FC@twistedmatrix.com>
 <etPan.56f30632.7b925ab4.a47e@dzur.corp.wargaming.local>
Message-ID: <97CAE295-3F47-489F-8130-9843F78F1CA6@twistedmatrix.com>


> On Mar 23, 2016, at 2:10 PM, L. Daniel Burr <ldanielburr at me.com> wrote:
> 
> Hi Glyph,
> On March 23, 2016 at 1:39:53 PM, Glyph (glyph at twistedmatrix.com <mailto:glyph at twistedmatrix.com>) wrote:
> 
>> 
>>> On Mar 23, 2016, at 9:22 AM, L. Daniel Burr <ldanielburr at me.com <mailto:ldanielburr at me.com>> wrote:
>>> 
>>> My concern is that, should these classes be converted into hybrids via the @oldStyle decorator, my service may experience some reduction in the number of requests per second that it handles
>> 
>> If oldStyle converts the classes into hybrids, then it's broken.  Hybrids don't follow the semantics of old-style classes.  So this won't happen.
>> 
>>>  I should definitely test the results to see if there *is* a performance regression in my case.
>> 
>> My guess is that this is an insignificant micro-optimization and that pypy has gotten better at optimizing hybrids since that caution was written.  That said, we're really bad at paying attention to speed.twistedmatrix.com <http://speed.twistedmatrix.com/> and we really need a way to see pre-merge performance metrics rather than just a graph over time.
>> 
> 
> In the interest of putting my money where my mouth is, I’ve tested a very simple case, where I create a class inheriting from twisted.web.resource.Resource, and a subclass which mixes in “object”:

Thanks for doing this.
> So, not a huge difference, overall, and it might not even be visible over a long enough period of time.

Glad to hear it :).

With this in mind, my recommendations to most Twisted users is to start tacking on ", object" to the end[1] of your inheritance hierarchies, so that you get hybrid classes now, which will help you sort out any problems you will have by going fully new-style, at the cost of a small performance hit.  It'll be easier to suffer through <1% performance hit (0.7% by your metrics) for the next few releases and change nothing when the new-style release happens, than to be concerned about it breaking stuff.

-glyph

[1]: The end and ONLY THE END of the hierarchy; if you put 'object' first then when those classes go new-style you'll get an exception when declaring the class.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/ad494b46/attachment-0002.html>

From tom.prince at ualberta.net  Wed Mar 23 16:19:44 2016
From: tom.prince at ualberta.net (Tom Prince)
Date: Wed, 23 Mar 2016 16:19:44 -0600
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
Message-ID: <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>

On Tue, Mar 22, 2016 at 10:26 PM, Glyph <glyph at twistedmatrix.com> wrote:
> Nothing about 8244 would involve making more hybrid classes.  Classes
> decorated as @oldStyle must be pure old style (the semantics of hybrids are
> much, much closer to new-style than old-style) so they have to be what they
> are today.  When we flip the switch there will be no more old-style classes
> at all.


Nothing about #8264's *requirements* leads to hybrid classes. But the
implementation makes *every* currently old-style class into a
hybrid-class..



From glyph at twistedmatrix.com  Wed Mar 23 18:27:26 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 17:27:26 -0700
Subject: [Twisted-Python] Ticket #8244 (old-style decorator)
In-Reply-To: <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>
References: <etPan.56f19ded.45802469.9f5b@dzur.corp.wargaming.local>
 <DE233E0C-2E36-4D67-BF9D-24EAA44605F3@twistedmatrix.com>
 <CAOtB_kngHM_qLeYMVtJuuxjg6csax53qriWLZQ3PBv2zcOUGnQ@mail.gmail.com>
Message-ID: <44F291B5-3658-41D0-897E-0B0CB3995988@twistedmatrix.com>


> On Mar 23, 2016, at 3:19 PM, Tom Prince <tom.prince at ualberta.net> wrote:
> 
> Nothing about #8264's *requirements* leads to hybrid classes. But the
> implementation makes *every* currently old-style class into a
> hybrid-class..

Looks like the implementation needs to be revisited then :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/fab8c562/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 23 19:16:37 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 23 Mar 2016 18:16:37 -0700
Subject: [Twisted-Python] how to implement login form logic with
	twisted.cred checkers, credentials and portal
In-Reply-To: <emc_d029221de37542d886329848b64efba1>
References: <emc_d029221de37542d886329848b64efba1>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <5F5E13C6-80A5-4CC9-8B64-D993372DB30F@twistedmatrix.com>


> On Mar 2, 2016, at 6:32 AM, snailcoder <snailcoder at 163.com> wrote:
> 
> I'm trying to implement some login logic using twisted.cred module for a website. In short, there's a login page with username/password forms. Once the user input the right username/password, the browser will redirect to another page which includes the user's profile. 
> 
> Does anyone have any ideas about how to implement this logic with twisted.cred checkers, credentials and portal? Any suggestion is appreciated :-) 

Sorry for the long delay.  I kept wanting to give this a more elaborate response.

There's an example of doing this - sort of - in Nevow, here: https://github.com/twisted/nevow/blob/master/nevow/guard.py <https://github.com/twisted/nevow/blob/master/nevow/guard.py>.  It's not perfectly equivalent because it uses Nevow's slightly-incompatible IResource interface, and not Twisted's IResource.

Have you tried anything and gotten stuck or were you just curious about how it might be done?

I've filed a ticket here: https://twistedmatrix.com/trac/ticket/8248 <https://twistedmatrix.com/trac/ticket/8248> since this functionality should be in Twisted.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160323/29fd4f8d/attachment-0002.html>

From hawkowl at atleastfornow.net  Fri Mar 25 11:04:13 2016
From: hawkowl at atleastfornow.net (Amber "Hawkie" Brown)
Date: Sat, 26 Mar 2016 01:04:13 +0800
Subject: [Twisted-Python] Twisted 16.1.0 Prerelease 1 Announcement
Message-ID: <1EAD407C-C4D3-49FA-8B9D-96C0376AA052@atleastfornow.net>

Hi everyone,

Another Twisted release is upon us -- this one is small, but has some nice to haves. In this release is:

- twisted.application.internet.ClientService, a service that maintains a persistent outgoing endpoint-based connection -- a replacement for ReconnectingClientFactory that uses modern APIs;
- A large (77% on one benchmark) performance improvement when using twisted.web's client on PyPy;
- A few conch modules have been ported, in preparation for further porting of the SSH functionality;
- Full support for OpenSSL 1.0.2f and above;
- t.web.http.Request.addCookie now accepts Unicode and bytes keys/values;
- `twistd manhole` no longer uses a hard-coded SSH host key, and will generate one for you on the fly (this adds a 'appdirs' PyPI dependency, installing with [conch] will add it automatically);
- Over eighteen tickets overall closed since 16.0.

As usual, you can get the NEWS file at https://twistedmatrix.com/Releases/pre/16.1.0pre1/NEWS.txt and download the tarball from https://twistedmatrix.com/Releases/pre/16.1.0pre1/.

Please test this release with your applications, and let me know if all goes smoothly. If there's no reported issues, the release will occur in roughly a week.

- Amber
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: </pipermail/twisted-python/attachments/20160326/92e88d39/attachment.sig>

From mithrandi at mithrandi.net  Sat Mar 26 14:33:35 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 26 Mar 2016 20:33:35 +0000
Subject: [Twisted-Python] Intended semantics of IReactorTime.seconds
Message-ID: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>

Currently, as far as I can tell, all implementations of
`IReactorTime.seconds()` (excluding twisted.internet.task.Clock, obviously)
are just `time.time()`; IOW, the return value is the number of seconds
since the beginning of the UNIX epoch in UTC. Are these the intended
semantics? The interface docstring doesn't really make this clear at all.

There's some commented out code which suggests the implementation used to
be `time.clock()` on win32, which would not satisfy these semantics.

(The background for this question is that I'm writing some code which takes
an IReactorTime provider for testing purposes, and I'm wondering if I need
a separate provider of `datetime.now()` functionality or not)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160326/92f48817/attachment-0002.html>

From dynamicgl at gmail.com  Sat Mar 26 20:16:33 2016
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 27 Mar 2016 10:16:33 +0800
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
Message-ID: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>

Hi All

    In twisted doc, I noticed there is a class called

"twisted.application.internet.ClientService"

but the link

https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html

is invalid. I couldn't find it out in twisted src (16.0.0) also.

   I want to know its availability.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160327/b8c51253/attachment-0002.html>

From mithrandi at mithrandi.net  Sat Mar 26 20:50:12 2016
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sun, 27 Mar 2016 02:50:12 +0000
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
In-Reply-To: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
References: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
Message-ID: <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>

On Sun, 27 Mar 2016 at 04:17 Gelin Yan <dynamicgl at gmail.com> wrote:

>
>
> https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html
>

Unfortunately ClientService did not make it in time for 16.0.0, but it will
be in the upcoming 16.1.0 release :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160327/03adbca9/attachment-0002.html>

From dynamicgl at gmail.com  Sat Mar 26 21:47:59 2016
From: dynamicgl at gmail.com (Gelin Yan)
Date: Sun, 27 Mar 2016 11:47:59 +0800
Subject: [Twisted-Python] where can I find
	twisted.application.internet.ClientService?
In-Reply-To: <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>
References: <CABkOF6T4YpJMGxzr2gjSo2USFuqF-eViXeKagQY4zn1VfsTNyg@mail.gmail.com>
 <CAMcKhMSLqMdG5mtNFs31DXHmnTR3U5Z1-=qCfz79i+8xyh94-g@mail.gmail.com>
Message-ID: <CABkOF6S6fy=_pLcwOXAk6LoPGgdRUQht+gadioVnhCucFuu9XQ@mail.gmail.com>

On Sun, Mar 27, 2016 at 10:50 AM, Tristan Seligmann <mithrandi at mithrandi.net
> wrote:

> On Sun, 27 Mar 2016 at 04:17 Gelin Yan <dynamicgl at gmail.com> wrote:
>
>>
>>
>> https://twistedmatrix.com/documents/16.0.0/api/twisted.application.internet.ClientService.html
>>
>
> Unfortunately ClientService did not make it in time for 16.0.0, but it
> will be in the upcoming 16.1.0 release :)
>
>
Hi Tristan

    Thx. I will wait for it. It seems the new api is less intrusive.

Regards

gelin yan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160327/6fbea1b7/attachment-0002.html>

From snailcoder at 163.com  Sun Mar 27 04:07:11 2016
From: snailcoder at 163.com (snailcoder)
Date: Sun, 27 Mar 2016 18:07:11 +0800
Subject: [Twisted-Python] how to implement login form logic with
 twisted.cred checkers, credentials and portal
References: <5F5E13C6-80A5-4CC9-8B64-D993372DB30F@twistedmatrix.com>
 <emc_d029221de37542d886329848b64efba1>
Message-ID: <emc_90b47d6a087246d097f2b1a790526b56>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160327/6c68ca35/attachment-0002.html>

From glyph at twistedmatrix.com  Sun Mar 27 19:44:44 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Sun, 27 Mar 2016 18:44:44 -0700
Subject: [Twisted-Python] Intended semantics of IReactorTime.seconds
In-Reply-To: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>
References: <CAMcKhMSLUAoJ_mKn=Qu+aRQ+nHm7BFmTeMdps6mryxDqTgRCvQ@mail.gmail.com>
Message-ID: <9AB3EF9F-8BF1-424A-86B6-85EDDF48C6E6@twistedmatrix.com>


> On Mar 26, 2016, at 1:33 PM, Tristan Seligmann <mithrandi at mithrandi.net> wrote:
> 
> Currently, as far as I can tell, all implementations of `IReactorTime.seconds()` (excluding twisted.internet.task.Clock, obviously) are just `time.time()`; IOW, the return value is the number of seconds since the beginning of the UNIX epoch in UTC. Are these the intended semantics? The interface docstring doesn't really make this clear at all.

These are the intended semantics, yes.

> There's some commented out code which suggests the implementation used to be `time.clock()` on win32, which would not satisfy these semantics.

I think you're right, but I believe that was simply a bug based on a misreading of the somewhat confusing documentation of that function at the time.

> (The background for this question is that I'm writing some code which takes an IReactorTime provider for testing purposes, and I'm wondering if I need a separate provider of `datetime.now()` functionality or not)

We really should have a .seconds() wrapper that returns a datetime, yes, since .now() and .utcnow() somewhat subtly are doing I/O.

-glyph




From glyph at twistedmatrix.com  Tue Mar 29 19:12:54 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Tue, 29 Mar 2016 18:12:54 -0700
Subject: =?iso-8859-1?q?_=5BTwisted-Python=5D_upcoming_OSCAR_protocol_rem?=
	=?iso-8859-1?q?oval=01?=
Message-ID: <74E08FED-89DB-4FD0-A76C-449255B29F78@twistedmatrix.com>

One of the earliest protocols implemented in Twisted was AOL's instant messenger protocol.   However, as explained on <https://twistedmatrix.com/trac/ticket/8260>, it doesn't really make sense for us to continue maintaining that code unless we can find someone actively interested in keeping it working against the production AIM service.

If you are interested in keeping this code alive, act quickly, before the deprecation makes it into a release and clears the way for a subsequent removal :-).

-glyph


From sscheerer at kc.rr.com  Wed Mar 30 05:32:02 2016
From: sscheerer at kc.rr.com (Susan Scheerer)
Date: Wed, 30 Mar 2016 06:32:02 -0500
Subject: [Twisted-Python] Unsubscribe
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAM/6X8mUKyxHsOV/R/PNGGTCgAAAEAAAAInpG0WfCcdItt/27MnFWmcBAAAAAA==@kc.rr.com>

Unsubscribe

 

Susan Scheerer

9717 North Harrison Street

Kansas City, MO 64155

(816) 734-8595 Home

(816) 405-1144 Cell

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160330/ccb2bae3/attachment-0002.html>

From techtonik at gmail.com  Wed Mar 30 12:20:08 2016
From: techtonik at gmail.com (anatoly techtonik)
Date: Wed, 30 Mar 2016 21:20:08 +0300
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
Message-ID: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>

Hi,

I am having the same problem as this guy:
https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
Absence of 32-bit wheels breaks Python
projects that added Twisted>10 as a
dependency, for example.

Is that intentional change?
https://pypi.python.org/pypi/Twisted/16.0.0

-- 
anatoly t.



From chris.norman2 at googlemail.com  Wed Mar 30 12:27:12 2016
From: chris.norman2 at googlemail.com (Chris Norman)
Date: Wed, 30 Mar 2016 19:27:12 +0100
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
Message-ID: <56FC1A80.5040702@googlemail.com>

Hi,

On 30/03/2016 19:20, anatoly techtonik wrote:
> Hi,
>
> I am having the same problem as this guy:
> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
> Absence of 32-bit wheels breaks Python
> projects that added Twisted>10 as a
> dependency, for example.
>
> Is that intentional change?
> https://pypi.python.org/pypi/Twisted/16.0.0
No clue about any change, but which Python version are you using?

I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 
bit Python 3.5.1, and 2.7.11.

Only place where I had trouble was Debian 64 bit where a simple python 
setup.py installed did the trick.

Sorry you're having trouble.





From glyph at twistedmatrix.com  Wed Mar 30 12:30:26 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 11:30:26 -0700
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <56FC1A80.5040702@googlemail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
 <56FC1A80.5040702@googlemail.com>
Message-ID: <76DAB91B-A1AD-4E9C-B20F-5E1648F9981C@twistedmatrix.com>


> On Mar 30, 2016, at 11:27 AM, Chris Norman <chris.norman2 at googlemail.com> wrote:
> 
> Hi,
> 
> On 30/03/2016 19:20, anatoly techtonik wrote:
>> Hi,
>> 
>> I am having the same problem as this guy:
>> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
>> Absence of 32-bit wheels breaks Python
>> projects that added Twisted>10 as a
>> dependency, for example.
>> 
>> Is that intentional change?
>> https://pypi.python.org/pypi/Twisted/16.0.0
> No clue about any change, but which Python version are you using?
> 
> I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 bit Python 3.5.1, and 2.7.11.
> 
> Only place where I had trouble was Debian 64 bit where a simple python setup.py installed did the trick.
> 
> Sorry you're having trouble.

Looks like we stopped shipping 32-bit wheels with the 15.5 release.  HawkOwl, was this an intentional change, or just a release oversight?  (I don't personally recall an announcement of this.)

-glyph




From hawkowl at atleastfornow.net  Wed Mar 30 12:36:25 2016
From: hawkowl at atleastfornow.net (Amber Brown)
Date: Thu, 31 Mar 2016 02:36:25 +0800
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <76DAB91B-A1AD-4E9C-B20F-5E1648F9981C@twistedmatrix.com>
Message-ID: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160331/054fdcac/attachment-0002.html>

From glyph at twistedmatrix.com  Wed Mar 30 12:59:40 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 11:59:40 -0700
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
References: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
Message-ID: <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>


> On Mar 30, 2016, at 11:36 AM, Amber Brown <hawkowl at atleastfornow.net> wrote:
> 
> This was because we dropped the only 32bit Windows builder (the XP one). The w7 one is 64bit and only has 64bit pythons on it - I guess we could install 32bit ones?
> 

I think that, especially in virtualized environments, 32-bit windows is still quite popular; we should probably keep shipping 32-bit wheels, and it's definitely possible to generate them on a 64-bit guest.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160330/516ced6a/attachment-0002.html>

From rgacote at appropriatesolutions.com  Wed Mar 30 13:46:03 2016
From: rgacote at appropriatesolutions.com (Ray Cote)
Date: Wed, 30 Mar 2016 15:46:03 -0400
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>
References: <c4e1fb8f-b2b2-4b59-8e33-1ea4b3a964c7@email.android.com>
 <7B861354-EBF7-43A7-B0B1-866A13506C6E@twistedmatrix.com>
Message-ID: <CAG5tnzp3q69ssWVo5Noji8mY7URccLF4s3+uP+7_ar2=qNqVQw@mail.gmail.com>

On Wed, Mar 30, 2016 at 2:59 PM, Glyph <glyph at twistedmatrix.com> wrote:

> I think that, especially in virtualized environments, 32-bit windows is
> still quite popular; we should probably keep shipping 32-bit wheels, and
> it's definitely possible to generate them on a 64-bit guest.
>

Triple double up vote on the 32-bit wheels.
Tried moving several of my legacy Windows projects to 64-bits three months
ago and there was much bewailing from the client base. :}


-- 
Raymond Cote, President
voice: +1.603.924.6079 email: rgacote at AppropriateSolutions.com skype:
ray.cote
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160330/662f691b/attachment-0002.html>

From paul at eventuallyanyway.com  Wed Mar 30 16:12:40 2016
From: paul at eventuallyanyway.com (Paul Hummer)
Date: Wed, 30 Mar 2016 16:12:40 -0600
Subject: [Twisted-Python] ANN: txJSON-RPC 0.5 released
Message-ID: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>

I'm happy to announce that txJSON-RPC 0.5 is now available.

txJSON-RPC is a library for creating asynchronous json-rpc clients and
servers. It includes netstring and http support.

Please see the PyPI page for more information and downloads.
<https://pypi.python.org/pypi/txJSON-RPC>

---

The high points in txJSON-RPC 0.5 are:

  - First class support for Python 3 and PyPy

I am personally using this release of txJSON-RPC in production on
python3. However, as it is the first release with python 3 support,
please report any bugs. <https://github.com/rockstar/txjsonrpc/issues>

---

I have assumed maintainership of txJSON-RPC for Duncan MacGreggor,
original author of txJSON-RPC. I'd like to thank Duncan for his previous
work and for entrusting me with maintainership of txJSON-RPC going
forward.

Cheers,
Paul



From glyph at twistedmatrix.com  Wed Mar 30 17:32:06 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Wed, 30 Mar 2016 16:32:06 -0700
Subject: [Twisted-Python] ANN: txJSON-RPC 0.5 released
In-Reply-To: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>
References: <1459375960.397778.564084282.22CE0349@webmail.messagingengine.com>
Message-ID: <2A9656C6-C3C2-4550-8300-E56C007F7911@twistedmatrix.com>


> On Mar 30, 2016, at 3:12 PM, Paul Hummer <paul at eventuallyanyway.com> wrote:
> 
> I'm happy to announce that txJSON-RPC 0.5 is now available.

Woohoo!

> txJSON-RPC is a library for creating asynchronous json-rpc clients and
> servers. It includes netstring and http support.
> 
> Please see the PyPI page for more information and downloads.
> <https://pypi.python.org/pypi/txJSON-RPC>
> 
> ---
> 
> The high points in txJSON-RPC 0.5 are:
> 
>  - First class support for Python 3 and PyPy
> 
> I am personally using this release of txJSON-RPC in production on
> python3. However, as it is the first release with python 3 support,
> please report any bugs. <https://github.com/rockstar/txjsonrpc/issues>
> 
> ---
> 
> I have assumed maintainership of txJSON-RPC for Duncan MacGreggor,
> original author of txJSON-RPC. I'd like to thank Duncan for his previous
> work and for entrusting me with maintainership of txJSON-RPC going
> forward.

It's awesome that support for this popular protocol is now actively maintained again - thanks for the announcement.

-glyph


From techtonik at gmail.com  Thu Mar 31 01:15:33 2016
From: techtonik at gmail.com (anatoly techtonik)
Date: Thu, 31 Mar 2016 10:15:33 +0300
Subject: [Twisted-Python] 16.0.0 32-bit wheels for Windows
In-Reply-To: <56FC1A80.5040702@googlemail.com>
References: <CAPkN8x+xAOOMjO7D+7xXJhAWwXinpm5r_Meu47H9qOygC-Mc+g@mail.gmail.com>
 <56FC1A80.5040702@googlemail.com>
Message-ID: <CAPkN8x+Dnvb9QFWxPLqruAWUyFKVG9=YqSuHrO0hy3ct_hpciA@mail.gmail.com>

On Wed, Mar 30, 2016 at 9:27 PM, Chris Norman
<chris.norman2 at googlemail.com> wrote:
> Hi,
>
> On 30/03/2016 19:20, anatoly techtonik wrote:
>>
>> Hi,
>>
>> I am having the same problem as this guy:
>>
>> https://stackoverflow.com/questions/36279141/pip-doesnt-install-twisted-on-windows
>> Absence of 32-bit wheels breaks Python
>> projects that added Twisted>10 as a
>> dependency, for example.
>>
>> Is that intentional change?
>> https://pypi.python.org/pypi/Twisted/16.0.0
>
> No clue about any change, but which Python version are you using?
>
> I have happily `pip install`ed twisted on Windows 10 (64 bit) with 32 bit
> Python 3.5.1, and 2.7.11.

32-bit Python 2.7.11, but the problem is that I don't have MSVS installed.

> Only place where I had trouble was Debian 64 bit where a simple python
> setup.py installed did the trick.
>
> Sorry you're having trouble.

I installed the stuff manually. Just wanted to warn that there might be a
bigger problem with that. Glad that it could be fixed.

-- 
anatoly t.



From glyph at twistedmatrix.com  Thu Mar 31 15:27:08 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 31 Mar 2016 14:27:08 -0700
Subject: [Twisted-Python] Windows spawnProcess - Child process inherits
	files and sockets (POSIX does not)
In-Reply-To: <CADtv4OC=7N9w4MLY62AkqC2K0wKjjM0dezM86URFGwBba5cDcg@mail.gmail.com>
References: <CADtv4OC=7N9w4MLY62AkqC2K0wKjjM0dezM86URFGwBba5cDcg@mail.gmail.com>
Message-ID: <DE300510-5DB5-446D-8DF8-F1404FC69B32@twistedmatrix.com>

On Feb 21, 2016, at 7:14 PM, exvito here <ex.vitorino at gmail.com> wrote:
> 
> Hello all,
> 
> I filed https://twistedmatrix.com/trac/ticket/7970 <https://twistedmatrix.com/trac/ticket/7970> last summer while focused on a particular project that was hit by it. Since then I had to attend to other things and I'm now back to refocusing on that project.

Thanks for following up.  Sorry I've taken so long to respond; this is a highly complex issue that is tempting to just punt on thinking about.  But we really should address it, and thank you for writing a great bug report.

> Before submitting a patch for review, I'm looking for preliminary feedback, assuming you agree that the Windows vs POSIX semantics should be the same (if not, why?).

After much thought: Yes.  They should be the same.  The reason they're not is largely ignorance of the relevant APIs and abstractions on Windows, not any desire that they differ.  The one place they have to differ a little bit is handle inheritance: we need to figure out some way to express the 'childFDs' mapping in terms of both file descriptors and handles.

> My patch calls a few Windows APIs via ctypes, however, as far as I can tell, Twisted on Windows requires pywin32 and, recently, there has been some discussion around dropping that dependency and moving towards something based on cffi.

ctypes is dangerous and error-prone.  If you screw up the bit-width of a type, or the type in a header changes on some future version, ctypes gives you no way of finding out until some poor user's process segfaults, and usually not at the relevant call site.  So we'd prefer not to maintain more ctypes-using code.

The APIs in pywin32 very closely mirror the underlying Windows API, so for addressing this issue, please just go ahead and use pywin32 APIs; porting them to a new API along with everything else should be relatively straightforward.

If we do move forward with that change, we will probably use https://pypi.python.org/pypi/pywincffi and not move anything within Twisted.

> What would you say the way forward is? Should I submit the patch for review anyway? Is there any other work that needs to be done first that I may contribute to?

Yes, just go ahead and write the patch.

> Thanks in advance for Twisted and for your feedback,

Thanks for using Twisted, thanks doubly for trying to contribute, and very sorry for the slow response.

-glyph


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160331/cf4a2c4e/attachment-0002.html>

From glyph at twistedmatrix.com  Thu Mar 31 20:04:14 2016
From: glyph at twistedmatrix.com (Glyph)
Date: Thu, 31 Mar 2016 19:04:14 -0700
Subject: [Twisted-Python] upcoming changes to twistedmatrix.com mail
	infrastructure
In-Reply-To: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
References: <D4ED8980-8B6B-48CD-AE83-8B00288A7481@twistedmatrix.com>
Message-ID: <6CC856DE-0A9F-44FC-A18B-63763D1DCFC0@twistedmatrix.com>


> On Mar 16, 2016, at 11:52 AM, Glyph <glyph at twistedmatrix.com> wrote:
> 
> Over the last few months, twistedmatrix.com <http://twistedmatrix.com/>'s mailman installation has been used increasingly frequently to execute denial-of-service attacks against people's mailboxes.  This is accomplished by sending huge numbers of subscription requests to our website, which in turn sends huge numbers of confirmation emails to their inbox.  Based on some information that some targeted users have sent me, I now believe that this is to cause those users' mail quotas to be exceeded so that password reset or login notification emails won't reach them.

I've taken the first few steps to migrating us over to Mailgun, but just as a minor status update: web-based subscription is now disabled.  If any generous souls would like to help out and update whatever wiki pages link to the mailman listinfo pages to say 'please send subscription requests to twisted-python-owner@ or twisted-web-owner@ instead' that would be great :-).  Those email addresses (and hopefully all the others, too) will keep working post-migration.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20160331/d97e2250/attachment-0002.html>

