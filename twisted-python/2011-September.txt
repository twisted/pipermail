From mithrandi at mithrandi.net  Sat Sep  3 13:26:22 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 3 Sep 2011 19:26:22 +0200
Subject: [Twisted-Python] [ANN] Pyflakes 0.5.0
Message-ID: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

It is my unexpected pleasure to announce the release of Pyflakes
0.5.0, the first release in several years, and available now from
PyPI[1].

Highlights of this release include the use of the built-in AST instead
of the compiler module, and support for various new syntax constructs
in Python 2.7. Note that development of Pyflakes (as well as the other
divmod.org projects) has moved to Launchpad[2] since the last release.

[1] http://pypi.python.org/packages/source/p/pyflakes/pyflakes-0.5.0.tar.gz#md5=568dab27c42e5822787aa8a603898672

[2] https://launchpad.net/pyflakes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.18 (GNU/Linux)

iQIcBAEBCgAGBQJOYmL+AAoJEFjA+xzeO3YAme4P/AxLuy0WJN2zG97my1oEwky9
VT79BwnxOqR4NB7I1dRKE3PG4Llgl6frAa0SouM12Dr0QZj9Ug3qHAmmf+TZFrF6
OIQcBUGkZW7EanBhCbjmfqo+0atJ8toAcj9uyF7Db/0A7gCDw160JIMnmTmxu8z6
3r5xRLNSnxs4jj6OSViv9oHNs2r2lpU/RObkGXy6EHxMgezYqw84FbA61fxquK4p
+J1n++vzfiasqgcQFFU3R67T0P2gWUe0C6pv/D+CurSCOdgQJv4LeRtNeYgKhw/W
rN0/3cERXGyRMa4JYDbFyP2G8lrpOuWo2F+jFtEGAxgziK8EqCK58ZSeqMBsodJ9
slAZobSQkrUj6GfpNKdW5mjYRqymBmUhPFc+sUI2poGb3zvMnWmUa2tiSfwl9uxO
9Di82XXAztKba8++cGJQCbuONiLRPgW5kArz5dRz3jFVdAZYL7xUvah4uznwfazc
CA8Q0tiXXoL7X1sT6heNu4VRtnJfEh5LojFdizA4nJEpNssZrPFkSZMv+eSR4Sow
8u2n4f07od6EBzHMhEyqFN7goaniW05VL+EvMdC5px+brnyKOIoLSAGWptBL5EYL
aaAb2zRrebyr/u5vGa+sKEXcoW2TEsc9qO8p/nNSetcoIcNfDwnd3cdyJPU+lYbn
Wctc68Y+xNWChiuTYa3e
=kKgi
-----END PGP SIGNATURE-----


From glyph at twistedmatrix.com  Sat Sep  3 15:51:48 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 03 Sep 2011 15:51:48 -0400
Subject: [Twisted-Python] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
Message-ID: <4E628554.3040501@twistedmatrix.com>

Thanks, Tristan!  Great to see that maintenance is continuing :).

(Now, off to upgrade Pyflakes everywhere...)

On 09/03/2011 01:26 PM, Tristan Seligmann wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> It is my unexpected pleasure to announce the release of Pyflakes
> 0.5.0, the first release in several years, and available now from
> PyPI[1].
>
> Highlights of this release include the use of the built-in AST instead
> of the compiler module, and support for various new syntax constructs
> in Python 2.7. Note that development of Pyflakes (as well as the other
> divmod.org projects) has moved to Launchpad[2] since the last release.
>
> [1] http://pypi.python.org/packages/source/p/pyflakes/pyflakes-0.5.0.tar.gz#md5=568dab27c42e5822787aa8a603898672
>
> [2] https://launchpad.net/pyflakes
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.18 (GNU/Linux)
>
> iQIcBAEBCgAGBQJOYmL+AAoJEFjA+xzeO3YAme4P/AxLuy0WJN2zG97my1oEwky9
> VT79BwnxOqR4NB7I1dRKE3PG4Llgl6frAa0SouM12Dr0QZj9Ug3qHAmmf+TZFrF6
> OIQcBUGkZW7EanBhCbjmfqo+0atJ8toAcj9uyF7Db/0A7gCDw160JIMnmTmxu8z6
> 3r5xRLNSnxs4jj6OSViv9oHNs2r2lpU/RObkGXy6EHxMgezYqw84FbA61fxquK4p
> +J1n++vzfiasqgcQFFU3R67T0P2gWUe0C6pv/D+CurSCOdgQJv4LeRtNeYgKhw/W
> rN0/3cERXGyRMa4JYDbFyP2G8lrpOuWo2F+jFtEGAxgziK8EqCK58ZSeqMBsodJ9
> slAZobSQkrUj6GfpNKdW5mjYRqymBmUhPFc+sUI2poGb3zvMnWmUa2tiSfwl9uxO
> 9Di82XXAztKba8++cGJQCbuONiLRPgW5kArz5dRz3jFVdAZYL7xUvah4uznwfazc
> CA8Q0tiXXoL7X1sT6heNu4VRtnJfEh5LojFdizA4nJEpNssZrPFkSZMv+eSR4Sow
> 8u2n4f07od6EBzHMhEyqFN7goaniW05VL+EvMdC5px+brnyKOIoLSAGWptBL5EYL
> aaAb2zRrebyr/u5vGa+sKEXcoW2TEsc9qO8p/nNSetcoIcNfDwnd3cdyJPU+lYbn
> Wctc68Y+xNWChiuTYa3e
> =kKgi
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From exarkun at twistedmatrix.com  Sun Sep  4 00:05:21 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Sep 2011 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1315109121.55.1286103592@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110904/a6d87b16/attachment.htm 

From jeff at ocjtech.us  Mon Sep  5 00:59:46 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Sun, 4 Sep 2011 23:59:46 -0500
Subject: [Twisted-Python] Announcing txdnspython
Message-ID: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>

To scratch a particular itch I had, I created txdnspython, a way to
send DNS messages created using dnspython using Twisted's asynchronous
networking:

https://github.com/jcollie/txdnspython

I'd love to hear any comments or suggestions that you may have on the code.

-- 
Jeff Ollie


From jml at mumak.net  Mon Sep  5 05:19:27 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 10:19:27 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
Message-ID: <CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>

On Sat, Sep 3, 2011 at 6:26 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> It is my unexpected pleasure to announce the release of Pyflakes
> 0.5.0, the first release in several years, and available now from
> PyPI[1].
>

Thanks!

> Note that development of Pyflakes (as well as the other
> divmod.org projects) has moved to Launchpad[2] since the last release.
>
...
> [2] https://launchpad.net/pyflakes

Which branch is the trunk branch? Which branch did you release from?

I ask because I've had a fully tested, partially reviewed branch
waiting to land since December last year, and I'm very keen to see it
landed. I was under the impression that Jean-Paul would get around to
it at some point.

Thanks again for releasing Pyflakes. Sorry to pounce all over you with
questions.

jml


From mithrandi at mithrandi.net  Mon Sep  5 08:04:22 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 Sep 2011 14:04:22 +0200
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
Message-ID: <CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>

On Mon, Sep 5, 2011 at 11:19 AM, Jonathan Lange <jml at mumak.net> wrote:
> Which branch is the trunk branch? Which branch did you release from?

The trunk branch (for all the divmod.org projects) is <lp:divmod.org>;
the release branch for this particular release is
<lp:~divmod-dev/divmod.org/release-pyflakes-0.5.0>.

> I ask because I've had a fully tested, partially reviewed branch
> waiting to land since December last year, and I'm very keen to see it
> landed. I was under the impression that Jean-Paul would get around to
> it at some point.

I wasn't aware of this; could you point me in the direction of this
branch? I can't promise to do anything about it right away, but if we
can get it landed, then at least it shouldn't take another three years
to get it released :)

> Thanks again for releasing Pyflakes. Sorry to pounce all over you with
> questions.

No problem.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From jml at mumak.net  Mon Sep  5 08:30:29 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 13:30:29 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
Message-ID: <CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>

On Mon, Sep 5, 2011 at 1:04 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> On Mon, Sep 5, 2011 at 11:19 AM, Jonathan Lange <jml at mumak.net> wrote:
>> Which branch is the trunk branch? Which branch did you release from?
>
> The trunk branch (for all the divmod.org projects) is <lp:divmod.org>;
> the release branch for this particular release is
> <lp:~divmod-dev/divmod.org/release-pyflakes-0.5.0>.
>

Ahh, I see. The projects haven't been split into separate repositories (yet?).

That's going to cause a little bit of confusion, given that projects
like <https://launchpad.net/pyflakes> exist. Perhaps a good idea for
now is to seize pyflakes & any projects like it, move all of their
bugs to https://launchpad.net/divmod.org and update any text to point
to that project.

>> I ask because I've had a fully tested, partially reviewed branch
>> waiting to land since December last year, and I'm very keen to see it
>> landed. I was under the impression that Jean-Paul would get around to
>> it at some point.
>
> I wasn't aware of this; could you point me in the direction of this
> branch? I can't promise to do anything about it right away, but if we
> can get it landed, then at least it shouldn't take another three years
> to get it released :)
>

The branch is <lp:~jml/pyflakes/duplicate-class-defs>, linked from
<https://code.launchpad.net/pyflakes/+activereviews>.

There was a ticket for it in the divmod tracker with review
conversation, but I've lost track of it. Sorry.

cheers,
jml


From mithrandi at mithrandi.net  Mon Sep  5 08:38:08 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 Sep 2011 14:38:08 +0200
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
Message-ID: <CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>

On Mon, Sep 5, 2011 at 2:30 PM, Jonathan Lange <jml at mumak.net> wrote:
> Ahh, I see. The projects haven't been split into separate repositories (yet?).

Apparently this is difficult to do while still preserving history. I
wasn't involved in the actual svn -> bzr conversion, so I can't really
elaborate on the reasons for that.

> That's going to cause a little bit of confusion, given that projects
> like <https://launchpad.net/pyflakes> exist. Perhaps a good idea for
> now is to seize pyflakes & any projects like it, move all of their
> bugs to https://launchpad.net/divmod.org and update any text to point
> to that project.

As I understand it, the idea is to keep the multiple projects in order
to differentiate bugs instead of having them all lumped together. If
you think there's a better way of doing that, perhaps you could expand
on that, and JP / Glyph can weigh in with the original reasoning on
the way it is currently.

> The branch is <lp:~jml/pyflakes/duplicate-class-defs>, linked from
> <https://code.launchpad.net/pyflakes/+activereviews>.
>
> There was a ticket for it in the divmod tracker with review
> conversation, but I've lost track of it. Sorry.

The divmod tracker has also lost track of it, due to the Trac DB
corruption, so that sorta sucks :/

The branch is constructed in a way that (I believe) can't be merged
into the "combined" trunk, so I guess the first step is to rebuild it
on top of the divmod.org repo, and then put it up for merge on
Launchpad. I'll see what I can do about that, even if I can't promise
you a review.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From jml at mumak.net  Mon Sep  5 08:56:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 13:56:01 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
Message-ID: <CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>

On Mon, Sep 5, 2011 at 1:38 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
...
> The branch is constructed in a way that (I believe) can't be merged
> into the "combined" trunk, so I guess the first step is to rebuild it
> on top of the divmod.org repo, and then put it up for merge on
> Launchpad. I'll see what I can do about that, even if I can't promise
> you a review.

I can take care of the "rebuilding" part.

Thanks,
jml


From glyph at twistedmatrix.com  Mon Sep  5 19:29:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Sep 2011 16:29:32 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
Message-ID: <A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>


On Sep 4, 2011, at 9:59 PM, Jeffrey Ollie wrote:

> To scratch a particular itch I had, I created txdnspython, a way to
> send DNS messages created using dnspython using Twisted's asynchronous
> networking:
> 
> https://github.com/jcollie/txdnspython
> 
> I'd love to hear any comments or suggestions that you may have on the code.

Cool!

I have 3 questions:

Can you register your project on Launchpad so that you can add it to <https://launchpad.net/tx>?  There's a link at the bottom of that page that says "Register a project in tx", it should only take a minute.

(This is not a comment on Github; launchpad is just where we host the list.  You do NOT need to host your project's code on Launchpad just to have it registered there; for example, Twisted is registered as <https://launchpad.net/twisted> but it is hosted on twistedmatrix.com.)

Why was twisted.names insufficient?  What kind of stuff does dnspython do that twisted.names doesn't?  It would be useful to list these enhancements in your README so that users can judge if they need it.  In other words: what was the itch that lead to its creation?

It might be neat to provide an IResolverSimple <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IResolverSimple.html> implementation with your code so that applications which want to use DNSPython can switch Twisted's name resolution to use it rather than a threadpool, with IReactorPluggableResolver.installResolver <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver>.

Thanks for the announcement!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110905/1ee677a2/attachment.htm 

From jeff at ocjtech.us  Mon Sep  5 20:45:06 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 5 Sep 2011 19:45:06 -0500
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
Message-ID: <CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>

On Mon, Sep 5, 2011 at 6:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> Can you register your project on Launchpad so that you can add it to
> <https://launchpad.net/tx>? ?There's a link at the bottom of that page that
> says "Register a project in tx", it should only take a minute.

Done.

> Why was twisted.names insufficient? ?What kind of stuff does dnspython do
> that twisted.names doesn't? ?It would be useful to list these enhancements
> in your README so that users can judge if they need it. ?In other words:
> what was the itch that lead to its creation?

The main reason was to be able to do secure dynamic DNS updates.
AFAICS there isn't support in twisted.names for that.  I suppose I
should have included an example, but to do secure updates you have to
cryptographically sign the DNS packets, plus you need to control the
DNS server etc.  The 3rd example at
http://www.dnspython.org/examples.html is a non-working example
(non-working because of the fake encryption key).

Sometime in the near future I'll need some DNSSEC support, but that
project is still a little half-baked so things may change.

Enhancing the README as you suggest is an excellent idea - more
projects need that sort of information.

> It might be neat to provide an IResolverSimple
> <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IResolverSimple.html>
> implementation with your code so that applications which want to use
> DNSPython can switch Twisted's name resolution to use it rather than a
> threadpool, with IReactorPluggableResolver.installResolver
> <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver>.

Yes, that would be interesting to have too.  I'll look into adding that as well.

-- 
Jeff Ollie


From schenette at gmail.com  Mon Sep  5 21:50:28 2011
From: schenette at gmail.com (Stephan)
Date: Mon, 5 Sep 2011 18:50:28 -0700
Subject: [Twisted-Python] stopping LoopCall and check if running
Message-ID: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>

I have a question on LoopCall.

I have a process that uses a sequence of LoopCalls, once one finishes
I call the next to check for the next critical event to continue:

e.g.

   def checkForAvailableProfile(self):
       profile = fs_profiles_manager.get_next_available_profile()
       if profile is None:
           return
       else:
           self.checkForAvailableProfileLoop.stop()

       self.profile = profile

       logging.debug("using profile: %s", self.profile['name'])

       self.ff = FirefoxProcess(self.profile, self.params)
       self.ff.run()

       self.checkForEventsFileLoop =
LoopingCall(self.checkIfEventsFileExists)
       self.checkForEventsFileLoop.start(0.5)
       self.state = self.STATE_WAIT_FOR_EVENTS

====================================================

The problem is that I'm getting errors, errors when I try to call stop
when stop perhaps has already been called.
I want advice on how to manage LoopCalls. So far I'm using state variables.
e.g.
self.state = self.STATE_WAIT_FOR_EVENTS

if something goes haywire or if the process is done I have a function
that cleans up all the LoopCalls so it's not checking constantly:

   def cleanExit(self):
       if self.state == self.STATE_WAIT_FOR_PROFILE:
           self.checkForAvailableProfileLoop.stop()
       elif self.state == self.STATE_WAIT_FOR_EVENTS:
           self.checkForEventsFileLoop.stop()
       elif self.state == self.STATE_WAIT_FOR_PROC_KILLED:
           self.checkIfFirefoxWasKilledLoop.stop()

       self.ff.cleanExit()


the above code is what I believe is causing my exceptions, but how
else do I check for the LoopCalls?



=====================================================

2011-08-31 12:30:11-0700 [FiresharkProtocol,1278,127.0.0.1] Unhandled Error
   Traceback (most recent call last):
     File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 348, in runReactorWithLogging
       reactor.run()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1170, in run
       self.mainLoop()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1182, in mainLoop
       self.doIteration(t)
     File
"/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 140, in doSelect
       _logrun(selectable, _drdw, selectable, method, dict)
   --- <exception caught here> ---
     File "/usr/lib/python2.6/dist-packages/twisted/python/log.py",
line 84, in callWithLogger
       return callWithContext({"system": lp}, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/log.py",
line 69, in callWithContext
       return context.call({ILogContext: newCtx}, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/context.py",
line 59, in callWithContext
       return self.currentContext().callWithContext(ctx, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/context.py",
line 37, in callWithContext
       return func(*args,**kw)
     File
"/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 156, in _doReadOrWrite
       self._disconnectSelectable(selectable, why, method=="doRead")
     File "/usr/lib/python2.6/dist-packages/twisted/internet/posixbase.py",
line 194, in _disconnectSelectable
       selectable.connectionLost(f)
     File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py",
line 519, in connectionLost
       protocol.connectionLost(reason)
     File "/usr/sbin/fireshark.py", line 101, in connectionLost
       self.cleanExit()
     File "/usr/sbin/fireshark.py", line 43, in cleanExit
       self.checkIfFirefoxWasKilledLoop.stop()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/task.py",
line 171, in stop
       assert self.running, ("Tried to stop a LoopingCall that was "
   exceptions.AssertionError: Tried to stop a LoopingCall that was not
running.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110905/1ac36d49/attachment.htm 

From ldanielburr at me.com  Mon Sep  5 22:04:37 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 05 Sep 2011 21:04:37 -0500
Subject: [Twisted-Python] stopping LoopCall and check if running
In-Reply-To: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>
References: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>
Message-ID: <op.v1c6qcmteyn2q3@tiassa.local>

Hi Stephan,

On Mon, 05 Sep 2011 20:50:28 -0500, Stephan <schenette at gmail.com> wrote:

> I have a question on LoopCall.
>
> I have a process that uses a sequence of LoopCalls, once one finishes
> I call the next to check for the next critical event to continue:

[SNIP]

> The problem is that I'm getting errors, errors when I try to call stop
> when stop perhaps has already been called.

Try checking your LoopingCall's .running attrbute in your code; that  
should allow you to avoid spurious calls to .stop()

Hope this helps,

L. Daniel Burr


From p.mayers at imperial.ac.uk  Tue Sep  6 04:18:21 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Sep 2011 09:18:21 +0100
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
Message-ID: <7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>

Jeffrey Ollie <jeff at ocjtech.us> wrote:


>
>> Why was twisted.names insufficient? ?What kind of stuff does
>dnspython do
>> that twisted.names doesn't? ?It would be useful to list these
>enhancements
>> in your README so that users can judge if they need it. ?In other
>words:
>> what was the itch that lead to its creation?
>
>The main reason was to be able to do secure dynamic DNS updates.
>AFAICS there isn't support in twisted.names for that.  I suppose I
>should have included an example, but to do secure updates you have to
>cryptographically sign the DNS packets, plus you need to control the
>DNS server etc.  The 3rd example at
>http://www.dnspython.org/examples.html is a non-working example
>(non-working because of the fake encryption key).
>
>Sometime in the near future I'll need some DNSSEC support, but that
>project is still a little half-baked so things may change.

>
FYI I wrote patches for twisted.names that implement both tsig/tkey I.e. secure dynamic update and dnssec. They're languishing in trac because uqds saps my will to live :o(
-- 
Sent from my phone. Please excuse brevity and typos.


From glyph at twistedmatrix.com  Tue Sep  6 04:29:11 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 6 Sep 2011 01:29:11 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
Message-ID: <3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>


On Sep 6, 2011, at 1:18 AM, Phil Mayers wrote:

> Jeffrey Ollie <jeff at ocjtech.us> wrote:
> 
> 
>> 
>>> Why was twisted.names insufficient?  What kind of stuff does
>> dnspython do
>>> that twisted.names doesn't?  It would be useful to list these
>> enhancements
>>> in your README so that users can judge if they need it.  In other
>> words:
>>> what was the itch that lead to its creation?
>> 
>> The main reason was to be able to do secure dynamic DNS updates.
>> AFAICS there isn't support in twisted.names for that.  I suppose I
>> should have included an example, but to do secure updates you have to
>> cryptographically sign the DNS packets, plus you need to control the
>> DNS server etc.  The 3rd example at
>> http://www.dnspython.org/examples.html is a non-working example
>> (non-working because of the fake encryption key).
>> 
>> Sometime in the near future I'll need some DNSSEC support, but that
>> project is still a little half-baked so things may change.
> 
>> 
> FYI I wrote patches for twisted.names that implement both tsig/tkey I.e. secure dynamic update and dnssec. They're languishing in trac because uqds saps my will to live :o(

Link?  Always good to paste a link to revive a dead ticket :)

-glyph



From p.mayers at imperial.ac.uk  Tue Sep  6 05:56:30 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Sep 2011 10:56:30 +0100
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
	<3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
Message-ID: <4E65EE4E.3030308@imperial.ac.uk>

On 06/09/11 09:29, Glyph Lefkowitz wrote:

>> FYI I wrote patches for twisted.names that implement both tsig/tkey
>> I.e. secure dynamic update and dnssec. They're languishing in trac
>> because uqds saps my will to live :o(
>
> Link?  Always good to paste a link to revive a dead ticket :)

TSIG/TKEY:

http://twistedmatrix.com/trac/ticket/4602 -

I designed this one to support various TSIG/TKEY methods, and in fact I 
have some local code that uses a GSSAPI wrapper to do 
Kerberos-authenticated TSIG updates (as per Windows 2000). I even wrote 
a DNS server proxy that would take Kerberos-authenticated requests, 
re-sign them as plain HMAC TSIG and forward them to another DNS server; 
then bind 9.8 came out and obsoleted my need for the code, hence the 
drop off in interest.

DNSSEC:

http://twistedmatrix.com/trac/ticket/4610

Also:

http://twistedmatrix.com/trac/ticket/4603 - round-trip unknown RR types

There isn't really much that needs doing AFAICT. I just find the whole
thing a bit dis-spiriting (which is my problem! ;o)



From glyph at twistedmatrix.com  Tue Sep  6 14:46:39 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 6 Sep 2011 11:46:39 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <4E65EE4E.3030308@imperial.ac.uk>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
	<3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
	<4E65EE4E.3030308@imperial.ac.uk>
Message-ID: <D46DD2ED-51B4-41E7-B192-9C1C72AB1E5A@twistedmatrix.com>


On Sep 6, 2011, at 2:56 AM, Phil Mayers wrote:

> On 06/09/11 09:29, Glyph Lefkowitz wrote:
> 
>>> FYI I wrote patches for twisted.names that implement both tsig/tkey
>>> I.e. secure dynamic update and dnssec. They're languishing in trac
>>> because uqds saps my will to live :o(
>> 
>> Link?  Always good to paste a link to revive a dead ticket :)
> 
> TSIG/TKEY:
> 
> http://twistedmatrix.com/trac/ticket/4602 -
> 
> I designed this one to support various TSIG/TKEY methods, and in fact I 
> have some local code that uses a GSSAPI wrapper to do 
> Kerberos-authenticated TSIG updates (as per Windows 2000). I even wrote 
> a DNS server proxy that would take Kerberos-authenticated requests, 
> re-sign them as plain HMAC TSIG and forward them to another DNS server; 
> then bind 9.8 came out and obsoleted my need for the code, hence the 
> drop off in interest.
> 
> DNSSEC:
> 
> http://twistedmatrix.com/trac/ticket/4610
> 
> Also:
> 
> http://twistedmatrix.com/trac/ticket/4603 - round-trip unknown RR types
> 
> There isn't really much that needs doing AFAICT. I just find the whole
> thing a bit dis-spiriting (which is my problem! ;o)

Is there anyone willing to step up and finish the review process, so that Phil doesn't have to weather the psychic torment involved in waiting for someone to push buttons on Trac? :)

-glyph



From free at 64studio.com  Wed Sep  7 12:56:14 2011
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 07 Sep 2011 18:56:14 +0200
Subject: [Twisted-Python] [Job] Landscape team at Canonical is hiring
Message-ID: <87fwk8fg0h.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi,

hope people don't mind job ads too much (I've seen a few in the list
archives).

Landscape [0] is a systems management web application developed at
Canonical (the commercial sponsor of Ubuntu) using mainly Python and
Javascript. The project is growing and we are seeking for people:

http://bit.ly/oYPSth

We have several Twisted-based services [1], and we have contributed to
Twisted and to Python in general [2].

If you are interested, please feel free to send me an email.

Thanks,

Free

[0] http://landscape.canonical.com
[1] e.g. https://launchpad.net/landscape-client
[2] e.g. https://launchpad.net/txaws
         https://storm.canonical.com/
         https://launchpad.net/txlongpoll



From schenette at gmail.com  Thu Sep  8 01:51:13 2011
From: schenette at gmail.com (Stephan)
Date: Wed, 7 Sep 2011 22:51:13 -0700
Subject: [Twisted-Python] How can LoopCall not be defined?
Message-ID: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>

I'm running a server with about 20 client connections going to it
right now and monitoring the error log eventually I see LoopCall is
not defined.
how can that be? Thanks in advance.


2011-09-07 22:47:26-0700 [-] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 445, in startReactor
	    self.config, oldstdout, oldstderr, self.profiler, reactor)
	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 348, in runReactorWithLogging
	    reactor.run()
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1170, in run
	    self.mainLoop()
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1179, in mainLoop
	    self.runUntilCurrent()
	--- <exception caught here> ---
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 778, in runUntilCurrent
	    call.func(*call.args, **call.kw)
	  File "/usr/sbin/firefoxprocess.py", line 48, in onTimer
	    self.firesharkProtocol.handleProcessTimedOut()
	  File "/usr/sbin/fireshark.py", line 32, in handleProcessTimedOut
	    self.dirtyExit();
	  File "/usr/sbin/fireshark.py", line 68, in dirtyExit
	    self.checkIfFirefoxWasKilledLoop = LoopCall(self.checkIfFirefoxWasKilled)
	exceptions.NameError: global name 'LoopCall' is not defined


From ldanielburr at me.com  Thu Sep  8 02:15:01 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Thu, 08 Sep 2011 01:15:01 -0500
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
Message-ID: <op.v1g7nbo8eyn2q3@tiassa.local>

Hi Stephan,


On Thu, 08 Sep 2011 00:51:13 -0500, Stephan <schenette at gmail.com> wrote:

> I'm running a server with about 20 client connections going to it
> right now and monitoring the error log eventually I see LoopCall is
> not defined.
> how can that be? Thanks in advance.
>
>
> 2011-09-07 22:47:26-0700 [-] Unhandled Error
> 	Traceback (most recent call last):
> 	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
> line 445, in startReactor
> 	    self.config, oldstdout, oldstderr, self.profiler, reactor)
> 	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
> line 348, in runReactorWithLogging
> 	    reactor.run()
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 1170, in run
> 	    self.mainLoop()
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 1179, in mainLoop
> 	    self.runUntilCurrent()
> 	--- <exception caught here> ---
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 778, in runUntilCurrent
> 	    call.func(*call.args, **call.kw)
> 	  File "/usr/sbin/firefoxprocess.py", line 48, in onTimer
> 	    self.firesharkProtocol.handleProcessTimedOut()
> 	  File "/usr/sbin/fireshark.py", line 32, in handleProcessTimedOut
> 	    self.dirtyExit();
> 	  File "/usr/sbin/fireshark.py", line 68, in dirtyExit
> 	    self.checkIfFirefoxWasKilledLoop =  
> LoopCall(self.checkIfFirefoxWasKilled)
> 	exceptions.NameError: global name 'LoopCall' is not defined

Are you talking about task.LoopingCall, or is LoopCall something define in  
your own code?

L. Daniel Burr


From _ at lvh.cc  Thu Sep  8 02:34:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 8 Sep 2011 08:34:09 +0200
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
Message-ID: <CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>

I've never heard of LoopCall. Maybe you meant LoopingCall?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110908/b0834459/attachment.htm 

From schenette at gmail.com  Thu Sep  8 02:58:27 2011
From: schenette at gmail.com (Stephan)
Date: Wed, 7 Sep 2011 23:58:27 -0700
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
	<CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>
Message-ID: <CADozHMWt7np-=tKv_kFMPbpx_qVHoUq-6xH1vuodDAu0jRJcHg@mail.gmail.com>

sorry for wasting everyone's time.
script worked, made a change and somehow changed the one line from
LoopingCall to LoopCall, I should have noticed that, but I've been
coding for a while and just missed. Thanks.

changed now and works

                        if self.checkIfFirefoxWasKilledLoop.running:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled is running.")
                        else:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled is NOT
running. starting..\
.")
                                self.checkIfFirefoxWasKilledLoop =
LoopingCall(self.checkIfFirefoxWasKilled)

self.checkIfFirefoxWasKilledLoop.start(0.5, now=True)
                except AttributeError:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled exist but is
NOT running. starting\
...")
                        self.checkIfFirefoxWasKilledLoop =
LoopingCall(self.checkIfFirefoxWasKilled)
                        self.checkIfFirefoxWasKilledLoop.start(0.5, now=True)

                try:


On Wed, Sep 7, 2011 at 11:34 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> I've never heard of LoopCall. Maybe you meant LoopingCall?
>
> cheers
> lvh
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From _ at lvh.cc  Thu Sep  8 07:04:27 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 8 Sep 2011 13:04:27 +0200
Subject: [Twisted-Python] Minitrue: implementing ICAP proxylet support,
	or implementing sslbump
In-Reply-To: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
References: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
Message-ID: <CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>

Hi :)

Context for those who haven't heard of minitrue: it's a twisted powered HTTP
proxy that is designed to lie. It lets you modify requests and responses.

So far, it's been a mostly academic exercise, which I suppose could have
real-world applications. I'd like to learn some more about how to use
minitrue with SSL/TLS next.

I would like to use something like Squid's sslbump support. The easiest way
to do that would probably be to use ICAP and get minitrue to support
publishing request and response manglers as proxylets (which would be
Resources, sort of, since ICAP is kind-of HTTP. Whether I should write a
custom parser or leverage the existing HTTP support is something I'm not
entirely sure of yet. I suppose the two theses are not mutually exclusive).

Has anyone used twisted's proxy support with ssl? Ideally, I would let
minitrue take a ca cert, and have it create and sign the appropriate cert on
the fly; IIUC this is how content filtering proxies that support ssl right
now work.

cheers

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110908/9da4d910/attachment.htm 

From robert.waters at gmail.com  Fri Sep  9 14:43:48 2011
From: robert.waters at gmail.com (R M Waters)
Date: Fri, 9 Sep 2011 14:43:48 -0400
Subject: [Twisted-Python] Minitrue: implementing ICAP proxylet support,
 or implementing sslbump
In-Reply-To: <CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>
References: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
	<CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>
Message-ID: <CAE99YyEet98vKfxqL-nkva3j53mNwQMy-JAYH4j+ROFoUsD_Sg@mail.gmail.com>

</lurking>
Not able to help you with your question, but I was browsing github earlier
and came across some ICAP code using Twisted:
https://github.com/diegows/misc/blob/master/adv-indonesia/usr/local/bin/icap-server.py

hth

<lurking>


On Thu, Sep 8, 2011 at 7:04 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi :)
>
> Context for those who haven't heard of minitrue: it's a twisted powered
> HTTP proxy that is designed to lie. It lets you modify requests and
> responses.
>
> So far, it's been a mostly academic exercise, which I suppose could have
> real-world applications. I'd like to learn some more about how to use
> minitrue with SSL/TLS next.
>
> I would like to use something like Squid's sslbump support. The easiest way
> to do that would probably be to use ICAP and get minitrue to support
> publishing request and response manglers as proxylets (which would be
> Resources, sort of, since ICAP is kind-of HTTP. Whether I should write a
> custom parser or leverage the existing HTTP support is something I'm not
> entirely sure of yet. I suppose the two theses are not mutually exclusive).
>
> Has anyone used twisted's proxy support with ssl? Ideally, I would let
> minitrue take a ca cert, and have it create and sign the appropriate cert on
> the fly; IIUC this is how content filtering proxies that support ssl right
> now work.
>
> cheers
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110909/0d50cd36/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep 11 00:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Sep 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1315713925.2.700139809@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110911/664e1a57/attachment.htm 

From luke-lists at hybrid-logic.co.uk  Mon Sep 12 03:57:18 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Mon, 12 Sep 2011 08:57:18 +0100
Subject: [Twisted-Python] Announcement: txHybridCluster client released
Message-ID: <1315814238.8785.17.camel@pow>

Hi all,


From anddimario at gmail.com  Mon Sep 12 04:19:53 2011
From: anddimario at gmail.com (Andrea Di Mario)
Date: Mon, 12 Sep 2011 10:19:53 +0200
Subject: [Twisted-Python] Twisted Perspective Broker: get client ip
Message-ID: <CAKBHSgwzGL1Lbms6+21QNOn4Z=X6xcYirR5BiQgVZgm379Q49A@mail.gmail.com>

Hi, i'm writing a perspective broker server. Now, i should get the
client IP, that perspective broker writes well in the log. I've tried
to get it from MyRealm with: mind.broker.transport.getPeer(), without
success. I've tried self.transport.getPeer() to, with this result:
exceptions.AttributeError: Listner instance has no attribute 'transport'
It's strange, because PB wrote the client IP, infact in log i've line with:
2011-09-11 16:41:58+0200 [Broker,0,127.0.0.1] ............

Could you suggest me something?
Thanks.
Here the code:

from OpenSSL import SSL
from twisted.internet import reactor, ssl
from ConfigParser import SafeConfigParser
from twisted.python import log
from twisted.spread import pb
from twisted.cred import checkers, portal
from zope.interface import implements
import hashlib

class Listner(pb.Avatar):

   def __init__(self, name):
           self.name = name

   def perspective_getDictionary(self, dictionary):
      print dictionary

   def perspective_simplyAccess(self, access):
      print access

def verifyCallback(connection, x509,  errnum, errdepth, ok):
   if not ok:
      log.msg("Certificato non valido: %s" % x509.get_subject())
      return False
   else:
      log.msg("Connessione stabilita, vertificato valido: %s" %
x509.get_subject())
   return True


class MyRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        if pb.IPerspective not in interfaces:
            raise NotImplementedError
        return pb.IPerspective, Listner(avatarId), lambda:None


if __name__ == "__main__":

       CONFIGURATION = SafeConfigParser()
       CONFIGURATION.read('server.conf')
       PORT = CONFIGURATION.get('general', 'port')
       LOGFILE = CONFIGURATION.get('general', 'log')

        log.startLogging(open(LOGFILE,'a'))


       myContextFactory =
ssl.DefaultOpenSSLContextFactory(CONFIGURATION.get('general',
'keypath'), CONFIGURATION.get('general', 'certpath'))
       ctx = myContextFactory.getContext()
       ctx.set_verify(SSL.VERIFY_PEER |
SSL.VERIFY_FAIL_IF_NO_PEER_CERT, verifyCallback)

       ctx.load_verify_locations(CONFIGURATION.get('general', 'cacert'))

       p = portal.Portal(MyRealm())
       c = checkers.FilePasswordDB('passwords.txt',
caseSensitive=True, cache=True)
       p.registerChecker(c)
       factory = pb.PBServerFactory(p)
       reactor.listenSSL(int(PORT), factory, myContextFactory)
       reactor.run()

-- 
Andrea Di Mario


From tobias.oberstein at tavendo.de  Mon Sep 12 09:15:15 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 06:15:15 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
Message-ID: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>

Announcing Autobahn WebSockets

Autobahn WebSockets provides an implementation of the WebSockets protocol
which can be used to build WebSockets clients and servers.

   * supports protocol draft version 10-14
   * usable for clients and servers
   * easy to use basic API
   * advanced API for frame-based/streaming processing
   * very good standards conformance
   * fully asynchronous Twisted-based implementation
   * Open-source (Apache 2 license)

Testsuite

Autobahn WebSockets also includes a WebSockets test suite which can used to
test client and server implementations for protocol conformance.
The test suite includes over 200 test cases and has broad protocol coverage and
is used with several WS projects.

RPC/PubSub

Autobahn WebSockets also provides an implementation of the

   WebSocket Application Messaging Protocol (WAMP)
   http://www.tavendo.de/autobahn/protocol.html

which can be used to build applications around Remote Procedure Call and
Publish & Subscribe messaging patterns.

   * provides RPC and PubSub messaging
   * built on JSON and WebSockets
   * simple and open protocol
   * usable for clients and servers

For more information, please visit: http://www.tavendo.de/autobahn

Commercial support and services is available from Tavendo GmbH.

Other resources:

http://pypi.python.org/pypi/autobahn
https://github.com/oberstet/Autobahn
http://groups.google.com/group/autobahnws
http://en.wikipedia.org/wiki/Comparison_of_WebSocket_implementations
http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-14



From glyph at twistedmatrix.com  Mon Sep 12 10:50:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 12 Sep 2011 10:50:32 -0400
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
In-Reply-To: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>

On Sep 12, 2011, at 9:15 AM, Tobias Oberstein wrote:

> Announcing Autobahn WebSockets
> 
> Autobahn WebSockets provides an implementation of the WebSockets protocol
> which can be used to build WebSockets clients and servers.
> 
>   * supports protocol draft version 10-14
>   * usable for clients and servers
>   * easy to use basic API
>   * advanced API for frame-based/streaming processing
>   * very good standards conformance
>   * fully asynchronous Twisted-based implementation
>   * Open-source (Apache 2 license)

Hi Tobias - great to hear it, thanks for the announcement!

I'm curious - is this in any way related to previous work done on Twisted websockets implementations, such as <https://github.com/rlotun/txwebsocket>?

Thanks!

-glyph

From tobias.oberstein at tavendo.de  Mon Sep 12 11:38:23 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 08:38:23 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based
	WS	implementation
In-Reply-To: <0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>

> Hi Tobias - great to hear it, thanks for the announcement!
> 
> I'm curious - is this in any way related to previous work done on Twisted
> websockets implementations, such as
> <https://github.com/rlotun/txwebsocket>?

No, it's not. From a cursory look at the code (didn't knew it existed):

Outdated WS protocol, probably wasnt complete at any time, based on the Site class.

Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.



From rlotun at gmail.com  Mon Sep 12 12:09:59 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 12 Sep 2011 17:09:59 +0100
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
In-Reply-To: <634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>

Hi,

On Mon, Sep 12, 2011 at 4:38 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:
>
> No, it's not. From a cursory look at the code (didn't knew it existed):
>

That repo on Github is based on a Twisted branch that was nearly ready for
inclusion into Twisted. This was back in the day when the websocket protocol
seemed on the verge of stabilizing. Obviously this wasn't the case. I came
along and added cross version support for the next iteration of the protocol
which was then newly supported in Chrome. Then there came the discovery of a
cache poising security flaw that was eventually addressed in the latest
iteration of the websocket protocol. I haven't yet had time to incorporate
it, though I believe there is an open pull request for its support (thanks,
to whoever that was).


> Outdated WS protocol, probably wasnt complete at any time, based on the
> Site class.
>

Depends on what you consider to be "complete" I guess. It had working
examples and stayed close to the reference Twisted implementation, which was
in the last stages of its code review.


> Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.


Completeness shouldn't really be measured by size of code base. I take your
point that the latest version of the protocol is indeed supported in
Autobahn, which is a good thing of course.

Thanks for Autobahn - it's useful to take a look at. I'll still continue
work on txWebsocket, however, with the intention of:

* eventual inclusion into Twisted (meeting Twisted coding standards, MIT
license, etc.)
* small, simple code base

Hopefully one day if and when txWebSocket is finally merged we can
standardize on one reference implementation (it doesn't have to be
txWebsocket of course - it'd be great if the core of Autobahn could be
contributed...)

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110912/69bca8a5/attachment.htm 

From tobias.oberstein at tavendo.de  Mon Sep 12 13:37:49 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 10:37:49 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based
	WS	implementation
In-Reply-To: <CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
	<CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0FEF87E@EXVMBX020-12.exch020.serverdata.net>

Hello Reza,

the WS protocol has indeed changed alot from hixie-76. There are binary frames, new framing scheme, interspersed control
frames, masking, etc etc.

Currently, it's in the last review phase involving IESG/IAB members, and the WG chairs want to cross the finish line
in November on WS 1.0 final.

Code base size should not be a measure of completeness, of course. With regard to Autobahn WS, I would nevertheless
say it's quite complete, since it includes a WS test suite with >200 test cases that cover a lot of the spec - and passes all.

The tests are quite rigorous, for example I've taken the pains to implement own UTF-8 payload validator, since
the one that comes with Python has outstanding issues related to surrogate pairs.

Also, the test suite is used already with a couple of server frameworks, and it found several bugs both in
Firefox and Chrome. Of course the test suite increases the total code size.

Another area that took time/code is: support for message-based, frame-based and streaming APIs. I expect (hope;)
that the code structuring that was necessary for the latter helps when implementing - a yet to be defined/agreed -
multiplexing scheme over WS. This was also one reason why I didn't base the code on Site, but Protocol directly.

Anyway, it's good to hear that you're planning to take up development again .. choice is good.

Regards,
Tobias


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Reza Lotun
Gesendet: Montag, 12. September 2011 18:10
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Autobahn WebSockets - Twisted based WS implementation

Hi,

On Mon, Sep 12, 2011 at 4:38 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:
No, it's not. From a cursory look at the code (didn't knew it existed):

That repo on Github is based on a Twisted branch that was nearly ready for inclusion into Twisted. This was back in the day when the websocket protocol seemed on the verge of stabilizing. Obviously this wasn't the case. I came along and added cross version support for the next iteration of the protocol which was then newly supported in Chrome. Then there came the discovery of a cache poising security flaw that was eventually addressed in the latest iteration of the websocket protocol. I haven't yet had time to incorporate it, though I believe there is an open pull request for its support (thanks, to whoever that was).

Outdated WS protocol, probably wasnt complete at any time, based on the Site class.

Depends on what you consider to be "complete" I guess. It had working examples and stayed close to the reference Twisted implementation, which was in the last stages of its code review.

Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.

Completeness shouldn't really be measured by size of code base. I take your point that the latest version of the protocol is indeed supported in Autobahn, which is a good thing of course.

Thanks for Autobahn - it's useful to take a look at. I'll still continue work on txWebsocket, however, with the intention of:

* eventual inclusion into Twisted (meeting Twisted coding standards, MIT license, etc.)
* small, simple code base

Hopefully one day if and when txWebSocket is finally merged we can standardize on one reference implementation (it doesn't have to be txWebsocket of course - it'd be great if the core of Autobahn could be contributed...)

Thanks,
Reza

--
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com<mailto:rlotun at gmail.com>
work:   rlotun at twitter.com<mailto:rlotun at twitter.com>
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110912/64cc6b36/attachment.htm 

From zooko at zooko.com  Wed Sep 14 02:58:16 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Wed, 14 Sep 2011 00:58:16 -0600
Subject: [Twisted-Python] announcing Tahoe-LAFS v1.8.3,
	fixing a security issue
Message-ID: <CANdZDc48V6ni_ZJBPKhV6eRj=bova3B0-q6kDCtd6uENbvfPMQ@mail.gmail.com>

Dear Twisted Folks:

We found a vulnerability in Tahoe-LAFS (all versions from v1.3.0 to v1.8.2
inclusive) that might allow an attacker to delete files. This vulnerability
does not enable anyone to read file contents without authorization
(confidentiality), nor to change the contents of a file (integrity). How
exploitable this vulnerability is depends upon some details of how you use
Tahoe-LAFS. If you upgrade your Tahoe-LAFS storage server to v1.8.3, this
fixes the vulnerability.

We've written detailed docs about the issue and how to manage it in
the "Known Issues" document:

http://tahoe-lafs.org/trac/tahoe-lafs/browser/trunk/docs/known_issues.rst

I am sorry that we introduced this bug into Tahoe-LAFS and allowed it
to go undetected until now. We aim for a high standard of security and
reliability in Tahoe-LAFS, and we're not satisfied until our users are
safe from threats to their data.

We've been working with the packagers who maintain packages of
Tahoe-LAFS in various operating systems, so if you get your Tahoe-LAFS
through your operating system there may already be a fixed version
available:

http://tahoe-lafs.org/trac/tahoe-lafs/wiki/OSPackages

Please contact us through the tahoe-dev mailing list if you have
further questions.

Regards,

Zooko Wilcox-O'Hearn

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.3

The Tahoe-LAFS team announces the immediate availability of version 1.8.3 of
Tahoe-LAFS, an extremely reliable distributed storage system. Get it here:

http://tahoe-lafs.org/trac/tahoe-lafs/browser/trunk/docs/quickstart.rst

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" ? meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.2, which was
released January 30, 2011 [1].

v1.8.3 is a stable bugfix release which fixes a security issue. See the file
[2] and known_issues.rst [3] file for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [4].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [3].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the fourteenth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Atlas Networks has contributed several hosted servers for performance
testing. Thank you to Atlas Networks for their generous and public-spirited
support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the eighth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

September 13, 2011
Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=5164
[2] http://tahoe-lafs.org/trac/tahoe-lafs/browser/1.8.3/NEWS?rev=5014
[3] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[4] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe-lafs/browser/1.8.3/CREDITS?rev=5003
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/


From ddwiggins at advpubtech.com  Wed Sep 14 15:43:08 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 14 Sep 2011 12:43:08 -0700
Subject: [Twisted-Python] Folding the server into the client?
Message-ID: <j4r04d$qua$1@dough.gmane.org>

I have an XMLRPC server which is currently accessed via both a web 
application and a desktop app (the latter uses wxPython as the UI).  I'm 
using subhandlers written as separate modules.

Now, I'd like to redo the desktop app to "fold in" one of the 
subhandlers to the application, so that it's called more directly, and 
to avoid the need to deal with a separate server (including the 
configuration issues).  I'll want to use the same subhandler source for 
both situations, to avoid the obvious duplication problems.  This means 
that I'll need to have the subhandler module "driven" by a reactor of 
some sort, to provide the needed deferred functionality to the 
subhandler.  (As a dividend for what I'm trying to do, I hope to 
leverage the asynchrony to keep the GUI from "freezing" while waiting 
for a response from the subhandler.)

It seems like I should be able to do this, but I'm having conceptual 
difficulties getting it all straight.  In the current setup, the client 
isn't using twisted, just the xmlrpclib.

I've learned a bit about wxreactor, and read 
http://wiki.wxpython.org/wxPythonAndTwisted.  It seems to me, as I 
understand it currently, that I'll need to have both a client and server 
reactor, and decide on a protocol between them that works in a 
single-process situation.  This leaves the question of the protocol and 
reactor types to use.

Or am I missing something important that would make things simpler (or 
maybe impossible)?

Thanks for any good words,
-- 

Don Dwiggins
Advanced Publishing Technology





From itamar at itamarst.org  Wed Sep 14 16:29:29 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 14 Sep 2011 16:29:29 -0400
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4r04d$qua$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
Message-ID: <e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>

> Or am I missing something important that would make things simpler (or
> maybe impossible)?

You could create a Python API that looks close enough to the code using
xmlrpclib, but just uses direct Python function calls. Depending on your
code this may mean you don't actually need the reactor. If you do need a
reactor, you could still do it without actually doing xmlrpc queries to
yourself. If you run the reactor in a different thread,
blockingCallFromThread lets you "wait" on a Deferred from another
non-reactor thread, in your case the GUI thread (might block your GUI
though).

There's also wxreactor which... probably works.



From exarkun at twistedmatrix.com  Wed Sep 14 17:08:03 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Sep 2011 21:08:03 -0000
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4r04d$qua$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
Message-ID: <20110914210803.1808.202750819.divmod.xquotient.845@localhost.localdomain>

On 07:43 pm, ddwiggins at advpubtech.com wrote:
>
>I've learned a bit about wxreactor, and read
>http://wiki.wxpython.org/wxPythonAndTwisted.  It seems to me, as I
>understand it currently, that I'll need to have both a client and 
>server
>reactor, and decide on a protocol between them that works in a
>single-process situation.  This leaves the question of the protocol and
>reactor types to use.

In addition to Itamar's comments, note that if you only have a single 
process, you will only have a single reactor.  If you actually use a 
socket to communicate between the two parts of the program, one reactor 
is easily capable of dealing with both sockets (but as Itamar pointed 
out, you might skip sockets and just call the methods directly).

Jean-Paul


From ddwiggins at advpubtech.com  Thu Sep 15 13:49:46 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 15 Sep 2011 10:49:46 -0700
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
References: <j4r04d$qua$1@dough.gmane.org>
	<e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
Message-ID: <j4tdrr$lps$1@dough.gmane.org>

Itamar, thanks for the reply.

> You could create a Python API that looks close enough to the code using
> xmlrpclib, but just uses direct Python function calls. Depending on your
> code this may mean you don't actually need the reactor. If you do need a
> reactor, you could still do it without actually doing xmlrpc queries to
> yourself. If you run the reactor in a different thread,
> blockingCallFromThread lets you "wait" on a Deferred from another
> non-reactor thread, in your case the GUI thread (might block your GUI
> though).

Hmm, not sure I understand.  Are you saying that deferreds will "work" 
without having a reactor?    (I'm using inlineCallbacks on all the 
xmlrpc_* methods.)

One thing I should have said, but didn't, is that the methods in the 
subhandler make DB calls using adbapi, so use deferreds pretty heavily.  
I'm willing to block the GUI, at least for now.

-- 

Don Dwiggins
Advanced Publishing Technology




From itamar at itamarst.org  Thu Sep 15 14:48:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Sep 2011 14:48:28 -0400
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4tdrr$lps$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
	<e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
	<j4tdrr$lps$1@dough.gmane.org>
Message-ID: <e18cbda132004fca155e563bddb09a22.squirrel@webmail.zoteca.com>

> Itamar, thanks for the reply.
>
>> You could create a Python API that looks close enough to the code using
>> xmlrpclib, but just uses direct Python function calls. Depending on your
>> code this may mean you don't actually need the reactor. If you do need a
>> reactor, you could still do it without actually doing xmlrpc queries to
>> yourself. If you run the reactor in a different thread,
>> blockingCallFromThread lets you "wait" on a Deferred from another
>> non-reactor thread, in your case the GUI thread (might block your GUI
>> though).
>
> Hmm, not sure I understand.  Are you saying that deferreds will "work"
> without having a reactor?    (I'm using inlineCallbacks on all the
> xmlrpc_* methods.)

No. I'm saying that:

1. If your code doesn't depend on the reactor you don't need a reactor.
This is not the the case, so you can ignore it.

2. You don't need to xmlrpc from your process to your own process; just
use method calls. This certainly applies.

3. Since you need a reactor, you can either have reactor in different
thread than wx, and talk back and forth using wx.CallAfter (or whatever
that API is) and reactor.callFromThread... or you can use wxreactor and
then both reactor and wx run in same thread.



From rutt.4 at osu.edu  Thu Sep 15 21:16:54 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Thu, 15 Sep 2011 21:16:54 -0400
Subject: [Twisted-Python] twisted and kerberos
Message-ID: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>

Hello twisted experts,

We are trying to add kerberos authentication to our existing twisted server.
 We haven't yet found a twisted specific library that can do this; any
pointers?

What we have found is python-krbV (https://fedorahosted.org/python-krbV/),
but we end up using it along with code like this to take over the socket
ourselves from twisted, when the client connects:

    self.transport.stopReading()
    self.transport.stopWriting()
    self.transport.socket.setblocking(1)

and then we use the self.transport.socket directly in blocking mode in
another thread (so it won't block the reactor).  In particular, we use code
like this to start the authentication process:

    ac = krbV.default_context().sendauth(self.transport.socket, ...)

?once the client has authenticated, we use:

    self.transport.socket.setblocking(0)
    self.transport.startReading()
    self.transport.startWriting()

to let twisted take over the socket again for the rest of the conversation.

So in the event there are no ready-to-go twisted libraries for kerberos, is
the above approach totally insane?
-- 
Benjamin Rutt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110915/4566cf15/attachment.htm 

From p.mayers at imperial.ac.uk  Fri Sep 16 07:24:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 16 Sep 2011 12:24:31 +0100
Subject: [Twisted-Python] twisted and kerberos
In-Reply-To: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>
References: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>
Message-ID: <4E7331EF.4080108@imperial.ac.uk>

On 16/09/11 02:16, Benjamin Rutt wrote:
> Hello twisted experts,
> We are trying to add kerberos authentication to our existing twisted
> server. We haven't yet found a twisted specific library that can do
> this; any pointers?

Over which protocol?

Do you only want authentication, or integrity/confidentiality as well?

> What we have found is python-krbV

I've used PyKerberos before to implement HTTP Negotiate auth for Twisted 
Web, but PyKerberos doesn't give you any integrity, and only client-side 
confidentiality IIRC:

http://trac.calendarserver.org/browser/PyKerberos

The state of python Kerberos/GSSAPI libraries is a bit poor, so I wrote 
my own in Pyrex!

> (https://fedorahosted.org/python-krbV/), but we end up using it along
> with code like this to take over the socket ourselves from twisted, when
> the client connects:
> self.transport.stopReading()
> self.transport.stopWriting()
> self.transport.socket.setblocking(1)
> and then we use the self.transport.socket directly in blocking mode in
> another thread (so it won't block the reactor). In particular, we use
> code like this to start the authentication process:
> ac = krbV.default_context().sendauth(self.transport.socket, ...)
> ?once the client has authenticated, we use:
> self.transport.socket.setblocking(0)
> self.transport.startReading()
> self.transport.startWriting()
> to let twisted take over the socket again for the rest of the conversation.
> So in the event there are no ready-to-go twisted libraries for kerberos,
> is the above approach totally insane?

So you're server-side?

I would advise using the GSSAPI stuff in PyKerberos; you drive the 
"authGSSServer*" functions in a loop, it gives you back the tokens and 
lets you handle the network transport yourself, so is easier to 
implement with Twisted.

Beware of course that the underlying GSS mechanism might block at any 
time; although in my experience this doesn't happen server-side, when 
using the Kerberos mech.

This will only be an option of course if you have control of the client 
and can switch to using GSSAPI there too.


Alternatively, you could modify your existing approach so that the 
entire Kerberos stuff ran in a deferToThread call, talking over a pipe 
or loopback TCP socket back to the main reactor, then use a dummy 
protocol to move the data back and forth to the "real" protocol. There 
may be easy/clean ways to do this using various Twisted utilities like 
twisted.protocols.policies.ProtocolWrapper, but I can't think of a 
design right now.


From exarkun at twistedmatrix.com  Sun Sep 18 00:05:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Sep 2011 04:05:36 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1316318736.2.2088174540@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110918/bab03e55/attachment.htm 

From fabian.rothfuchs at googlemail.com  Mon Sep 19 08:44:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 14:44:55 +0200
Subject: [Twisted-Python] <no subject>
Message-ID: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>

Hi Guys,

I'm relatively new to Twisted (as the most questioners I guess).
Without providing tons of distracting details, this is where I'm stuck w/
Twisted:

I currently build a server application that consists of a set of client
adapters, which (among others) use Telnet as transport protocol ? so I chose
to use Twisted to write the client.
I already have all clients in place in an autarkic Twisted implementation
and it works just fine ? thus, the crux is to get those autarkic snippets
under one reactor-hood.
As this application should ideally server forever, stopping the reactor
would mean to stop the whole application, which conflicts with it's
ideology.
During the night, the application will be fed new tasks ? depending on what
those tasks are, the application needs to run specific workflows using
different adapters (and protocols).

Having said this, when starting the application (and hence the reactor), I'm
not yet aware of the following:
- which adapters I will need during
- when the connections are triggered

But all implementation examples and documentations I've found expect those
information to be present and provided to the reactor, prior to it's run():

for host in hosts:

    host, port = (host, 23)

    d = defer.Deferred()

    from twisted.internet import reactor

    factory = S12ClientFactory(d, username='root', password='admin')

    Connection = reactor.connectTCP(host, port, factory, timeout=5)

    d.addCallbacks(success, error)

    d.addBoth(logout)

reactor.run()


So I wonder, if you can dynamically feed the reactor with new tasks (I use
connectTCP for it), as it's not possible to start/stop it on demand (or if
there's an alternative approach):

from twisted.internet import reactor

reactor.run()

for host in hosts:

    host, port = (host, 23)

    d = defer.Deferred()

    factory = S12ClientFactory(d, username='root', password='admin')

    Connection = reactor.connectTCP(host, port, factory, timeout=5)

    d.addCallbacks(success, error)

    d.addBoth(logout)


If I try to do so, connection.state never leaves 'connecting' and I cannot
see any traffic going through the wire on the TCPDump?
I'd really appreciate any hints, as I'm feeling a bit lost :-)

Thanks
Fabian


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/7f455c79/attachment.htm 

From jeff at ocjtech.us  Mon Sep 19 09:02:26 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 19 Sep 2011 08:02:26 -0500
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
References: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <CAD-DQxRtNTKGD09MES1v7v4Pda6Owof0xCyiqLW3vcMLWfS+bQ@mail.gmail.com>

On Mon, Sep 19, 2011 at 7:44 AM, Fabian Rothfuchs
<fabian.rothfuchs at googlemail.com> wrote:
>
> for host in hosts:
> ? ? host, port = (host, 23)
> ? ? d = defer.Deferred()
> ? ? from twisted.internet import reactor
> ? ? factory = S12ClientFactory(d, username='root', password='admin')
> ? ? Connection =?reactor.connectTCP(host, port, factory, timeout=5)
> ? ? d.addCallbacks(success, error)
> ? ? d.addBoth(logout)
> reactor.run()

I'd put "from twisted.internet import reactor" outside of the loop.

> So I wonder, if you can dynamically feed the reactor with new tasks (I use
> connectTCP for it), as it's not possible to start/stop it on demand (or if
> there's an alternative approach):

Yes, you can, you should be able to call connectTCP any time before
the reactor is shut down with reactor.stop().

> from?twisted.internet?import?reactor
>
> reactor.run()
> for?host?in?hosts:
> ? ??host, port = (host,?23)
> ? ??d = defer.Deferred()
> ? ? factory = S12ClientFactory(d, username='root', password='admin')
> ? ??Connection =?reactor.connectTCP(host, port, factory, timeout=5)
> ? ??d.addCallbacks(success, error)
> ? ? d.addBoth(logout)
>
> If I try to do so,?connection.state never leaves 'connecting' and I cannot
> see any traffic going through the wire on the TCPDump?
> I'd really appreciate any hints, as I'm feeling a bit lost :-)

The first thing I saw is that you'll want "reactor.run()" after the
loop, otherwise that code won't get run until the system is ready to
shut down.

-- 
Jeff Ollie


From JOHN at egh.com  Mon Sep 19 09:19:07 2011
From: JOHN at egh.com (John Santos)
Date: Mon, 19 Sep 2011 09:19:07 -0400
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <1110919085125.40537A-100000@Ives.egh.com>


I'm a newbie compared to most of the people on this list, but this is a
question I think I can answer:

Your call to reactor.run() in main() won't return until the reactor shuts
down.  After reactor.run(), *everything* happens in a deferred, until one
of them shuts down the reactor.

One thing you can do is make a small initial startup method that
you supply to reactor.callLater with a delay of 0, that does the loop on
the connectTCP()'s.  It will start up your initial set of connections.

If future events tell your application to make more connections, you
can perform more connectTCP()'s in the deferred triggered by the event.

------

def initialConnectionStartup:

    for host in hosts:

        host, port = (host, 23)

        d = defer.Deferred()

        factory = S12ClientFactory(d, username='root', password='admin')

        Connection = reactor.connectTCP(host, port, factory, timeout=5)

        d.addCallbacks(success, error)

        d.addBoth(logout)


...

# __main__

reactor.callLater(0,initialConnectionStartup)
reactor.run()

------------


Hope this helps.

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539

From johann.borck at densedata.com  Mon Sep 19 09:26:00 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 19 Sep 2011 15:26:00 +0200
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
References: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <4E7742E8.1060004@densedata.com>

On 09/19/2011 02:44 PM, Fabian Rothfuchs wrote:
> Hi Guys,
> [...]
> So I wonder, if you can dynamically feed the reactor with new tasks (I use connectTCP for it), as 
> it's not possible to start/stop it on demand (or if there's an alternative approach):
>
Hi,
in general you do [whatever you want] in response to some event, which might be connectionMade, 
dataReceived, a periodic call from LoopingCall, a one-shot event from reactor.callLater or any other 
API that informs you about certain events. You can take your code, as in your example, and run it 
inside one of these callables or another callable you trigger from there. You absolutely do not have 
to set up everything before you call reactor.run. Just create a callable (at any time), make sure 
that whatever should trigger it gets a reference to it, and then call it whenever appropriate. Also, 
look at Deferreds, they provide an API for callbacks, chaining them together and other useful stuff.

regards,
Johann

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/6766ab9b/attachment.htm 

From fabian.rothfuchs at googlemail.com  Mon Sep 19 14:03:20 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 20:03:20 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <mailman.5.1316448002.382.twisted-python@twistedmatrix.com>
Message-ID: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>

>One thing you can do is make a small initial startup method that
>you supply to reactor.callLater with a delay of 0, that does the loop on
>the connectTCP()'s.  It will start up your initial set of connections.

Thanks John, this was *really* helpful!
I now did the following:
1. On Startup, the application starts one threaded reactor with a NOP
Protocol which
connects to 127.0.0.1:9 (discard socket).
2. The adapters use that threaded reactor as follows:
>>>for host in hosts:
>>> ...host, port = (host, 23)
>>> ...d = defer.Deferred()
>>> ...from twisted.internet import reactor
>>> ...factory = S12ClientFactory(d, username='root', password='admin')
>>> ...reactor.connectTCP(host, port, factory, timeout=5)
>>> ...d.addCallbacks(success, error)
>>> ...d.addBoth(logout)
>>> ...reactor.wakeUp()

The second important part was the wakeUp() call, which apparently triggers
the reactor
To end all blocking tasks.


My appreciations to Jeff and Johann as well for their help!

Fabian




From glyph at twistedmatrix.com  Mon Sep 19 14:16:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 14:16:56 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>
References: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>
Message-ID: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>


On Sep 19, 2011, at 2:03 PM, Fabian Rothfuchs wrote:

> The second important part was the wakeUp() call, which apparently triggers
> the reactor
> To end all blocking tasks.

For the most part, you have got the right idea now, but this is a BIG flashing red light for me.  wakeUp() shouldn't actually be a public method at all; its _only_ use is as part of the implementation of 'callFromThread'.  You should never, ever call it, and if you do call it, it should appear to do nothing at all.

Are you making use of the reactor from multiple threads?  This is not allowed, and will break horribly, although it can sometimes (briefly) be made to appear to work by calling wakeUp().

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/b0c17eab/attachment.htm 

From fabian.rothfuchs at googlemail.com  Mon Sep 19 15:02:18 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 21:02:18 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>
Message-ID: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>

Well no, not from multiple threads.
I have only two threads ? one main thread, which is the Django framework,
and one detached 
thread for the reactor, as the reactor itself would be blocking Django.

All Adapters are in Django, and are reaching out to the one reactor in the
thread without threading themselves.
Is this 'allowed' ?

Fabian

From:  Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Mon, 19 Sep 2011 14:16:56 -0400
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16


On Sep 19, 2011, at 2:03 PM, Fabian Rothfuchs wrote:

> The second important part was the wakeUp() call, which apparently triggers
> the reactor
> To end all blocking tasks.

For the most part, you have got the right idea now, but this is a BIG
flashing red light for me.  wakeUp() shouldn't actually be a public method
at all; its _only_ use is as part of the implementation of 'callFromThread'.
You should never, ever call it, and if you do call it, it should appear to
do nothing at all.

Are you making use of the reactor from multiple threads?  This is not
allowed, and will break horribly, although it can sometimes (briefly) be
made to appear to work by calling wakeUp().

-glyph
_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/c73e6603/attachment.htm 

From glyph at twistedmatrix.com  Mon Sep 19 15:21:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 15:21:34 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
References: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
Message-ID: <F1413902-053F-4AB7-8549-135D5BF95FCE@twistedmatrix.com>


On Sep 19, 2011, at 3:02 PM, Fabian Rothfuchs wrote:

> Well no, not from multiple threads.
> I have only two threads ? one main thread, which is the Django framework, and one detached 
> thread for the reactor, as the reactor itself would be blocking Django.
> 
> All Adapters are in Django, and are reaching out to the one reactor in the thread without threading themselves.
> Is this 'allowed' ?

I guess I should have said "supported", since clearly Python allows it :).

This is fine - depending very heavily what you mean by "reaching out to the one reactor".  Are they doing this reaching out via callFromThread (or something that calls it, like blockingCallFromThread)?  That is OK.  Calling reactor APIs (like connectTCP, or listenTCP, or callLater) from your Django thread will break.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/c6578839/attachment.htm 

From fabian.rothfuchs at googlemail.com  Mon Sep 19 15:40:04 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 21:40:04 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <F1413902-053F-4AB7-8549-135D5BF95FCE@twistedmatrix.com>
Message-ID: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>

That?s a tremendous advice!
Indeed I was directly calling connectTCP() - I changed it to do like

reactor.callFromThread(reactor.connectTCP, host, port, factory, timeout=5)

Thanks!
Fabian


From:  Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Mon, 19 Sep 2011 15:21:34 -0400
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16


On Sep 19, 2011, at 3:02 PM, Fabian Rothfuchs wrote:

> Well no, not from multiple threads.
> I have only two threads ? one main thread, which is the Django framework, and
> one detached 
> thread for the reactor, as the reactor itself would be blocking Django.
> 
> All Adapters are in Django, and are reaching out to the one reactor in the
> thread without threading themselves.
> Is this 'allowed' ?

I guess I should have said "supported", since clearly Python allows it :).

This is fine - depending very heavily what you mean by "reaching out to the
one reactor".  Are they doing this reaching out via callFromThread (or
something that calls it, like blockingCallFromThread)?  That is OK.  Calling
reactor APIs (like connectTCP, or listenTCP, or callLater) from your Django
thread will break.

-glyph

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/0ea0ff73/attachment.htm 

From glyph at twistedmatrix.com  Mon Sep 19 15:49:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 15:49:56 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>
References: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>
Message-ID: <47141A78-6322-4573-8046-23876FC4857F@twistedmatrix.com>


On Sep 19, 2011, at 3:40 PM, Fabian Rothfuchs wrote:

> That?s a tremendous advice!
> Indeed I was directly calling connectTCP() - I changed it to do like         
> 
> reactor.callFromThread(reactor.connectTCP, host, port, factory, timeout=5)
> 
> Thanks!

No problem!  I'm glad I caught this before it caused you serious trouble.

Tell your friends: threads are bad!  callFromThread is your best and only defense against the Dark Arts! :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110919/75dc949f/attachment-0001.htm 

From exarkun at twistedmatrix.com  Mon Sep 19 15:53:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 19 Sep 2011 19:53:58 -0000
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
References: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>
	<CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
Message-ID: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>

On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>Well no, not from multiple threads.
>I have only two threads ? one main thread, which is the Django 
>framework,
>and one detached
>thread for the reactor, as the reactor itself would be blocking Django.
>
>All Adapters are in Django, and are reaching out to the one reactor in 
>the
>thread without threading themselves.
>Is this 'allowed' ?

No.  You can only call Twisted APIs in a single thread.  The thread 
everything will happen in is the one you call reactor.run() in, so 
that's the one you have to call all other APIs in.  There is one 
exception, reactor.callFromThread, which you can call from any thread. 
It lets you schedule another call to happen in the same thread as 
reactor.run was called in.

Jean-Paul


From fabian.rothfuchs at googlemail.com  Mon Sep 19 16:05:07 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 22:05:07 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>
Message-ID: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>

So JP,
 
Having the reactor running in a first thread and *all* the rest in a
second one
is alright, if the second one calls the reactor via callFromThread() ?

Elsewise, I need to find out how to wrap Twisted around Django? hum?

Fabian



On 9/19/11 9:53 PM, "exarkun at twistedmatrix.com"
<exarkun at twistedmatrix.com> wrote:

>On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>>Well no, not from multiple threads.
>>I have only two threads ? one main thread, which is the Django
>>framework,
>>and one detached
>>thread for the reactor, as the reactor itself would be blocking Django.
>>
>>All Adapters are in Django, and are reaching out to the one reactor in
>>the
>>thread without threading themselves.
>>Is this 'allowed' ?
>
>No.  You can only call Twisted APIs in a single thread.  The thread
>everything will happen in is the one you call reactor.run() in, so
>that's the one you have to call all other APIs in.  There is one
>exception, reactor.callFromThread, which you can call from any thread.
>It lets you schedule another call to happen in the same thread as
>reactor.run was called in.
>
>Jean-Paul
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From ldanielburr at me.com  Mon Sep 19 16:15:33 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 19 Sep 2011 15:15:33 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
References: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
Message-ID: <op.v12nwkpbeyn2q3@tiassa.local>

Hi,

On Mon, 19 Sep 2011 15:05:07 -0500, Fabian Rothfuchs  
<fabian.rothfuchs at googlemail.com> wrote:

> So JP,
> Having the reactor running in a first thread and *all* the rest in a
> second one
> is alright, if the second one calls the reactor via callFromThread() ?
>
> Elsewise, I need to find out how to wrap Twisted around Django? hum?
>

You could run django as a wsgi application inside twisted.

Hope this helps,

L. Daniel Burr



From exarkun at twistedmatrix.com  Mon Sep 19 17:04:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 19 Sep 2011 21:04:19 -0000
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
References: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>
	<CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
Message-ID: <20110919210419.1808.302210372.divmod.xquotient.922@localhost.localdomain>

On 08:05 pm, fabian.rothfuchs at googlemail.com wrote:
>So JP,
>
>Having the reactor running in a first thread and *all* the rest in a
>second one
>is alright, if the second one calls the reactor via callFromThread() ?

Yes, that's fine.  (I think Glyph got you pointed in the right 
direction, I didn't see the next two messages in the thread until after 
I sent my reply.)

Jean-Paul
>Elsewise, I need to find out how to wrap Twisted around Django 26 hum 26
>
>Fabian
>
>
>
>On 9/19/11 9:53 PM, "exarkun at twistedmatrix.com"
><exarkun at twistedmatrix.com> wrote:
>>On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>>>Well no, not from multiple threads.
>>>I have only two threads ?FD one main thread, which is the Django
>>>framework,
>>>and one detached
>>>thread for the reactor, as the reactor itself would be blocking 
>>>Django.
>>>
>>>All Adapters are in Django, and are reaching out to the one reactor 
>>>in
>>>the
>>>thread without threading themselves.
>>>Is this 'allowed' ?
>>
>>No.  You can only call Twisted APIs in a single thread.  The thread
>>everything will happen in is the one you call reactor.run() in, so
>>that's the one you have to call all other APIs in.  There is one
>>exception, reactor.callFromThread, which you can call from any thread.
>>It lets you schedule another call to happen in the same thread as
>>reactor.run was called in.
>>
>>Jean-Paul
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From fabian.rothfuchs at googlemail.com  Tue Sep 20 07:38:00 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 13:38:00 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <op.v12nwkpbeyn2q3@tiassa.local>
Message-ID: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>

As Twisted points out not to be thread-safe, why would it be in WSGI?

Due to the sensibility of the project I cannot afford things to go wrong
because of not synchronized threads or other pitfalls, so I actually
decided
to to the asynchronous way, and this bites with WSGI.

Fabian


On 9/19/11 10:15 PM, "L. Daniel Burr" <ldanielburr at me.com> wrote:
>
>You could run django as a wsgi application inside twisted.
>
>Hope this helps,
>
>L. Daniel Burr
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From don at delphexonline.com  Tue Sep 20 08:51:26 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 14:51:26 +0200
Subject: [Twisted-Python] Protection against flooding
Message-ID: <4E788C4E.7040206@delphexonline.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/596347cd/attachment.htm 

From fabian.rothfuchs at googlemail.com  Tue Sep 20 11:11:23 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 17:11:23 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E788C4E.7040206@delphexonline.com>
Message-ID: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>

In your Protocol, I would implement a specific Error that  might be returned
by the server in such burst situations.
The clients should interpret that error in a way that lets them reconnect to
the server after a randomly chosen interval.
This way you immediately eliminate the burst without running into the
situation where you might get another and another and another?

A good help for that might be the TR-069 protocol specification, which deals
with HTTP connections from 1 server to millions (!) of clients:
http://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf


From:  Don Schoeman <don at delphexonline.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 14:51:26 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  [Twisted-Python] Protection against flooding

    
 Hi all,
 
 Before I start digging in the Twisted code, I'd just like to bump this off
you in case the solution is obvious...
 
 I have a lot of clients having permanent connections to my TCP server.
These clients are devices that will buffer data if it can't connect to the
server. I can see a possible problem in the future if/when for whatever
reason there is downtime on my server or the network and all these devices
start connecting and transmitting their buffered data once the server is
back up, potentially causing server flooding.
 
 What would be a good area to start looking into preventing something like
this from happening? My first thoughts are to simply limit an X number of
new connections per minute (or per X seconds) and to simply immediately drop
new connections if it exceeds that limit. (I'd probably implement this on
Protocol level). Over time the connections should theoretically normalise as
the buffered data on the devices are also limited.
 
 Of course it would be better to not allow the connections from being
established in the first place if the limits are exceeded (will be great for
DDOS protection), but I have a feeling that might be difficult to achieve.
 
 Any thoughts/tips or even links to examples?
 
 Kind Regards,
 Don
 
 
  
_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/79849bc2/attachment.htm 

From don at delphexonline.com  Tue Sep 20 11:26:48 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 17:26:48 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>
References: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>
Message-ID: <4E78B0B8.7030406@delphexonline.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/2105942f/attachment-0001.htm 

From fabian.rothfuchs at googlemail.com  Tue Sep 20 11:41:31 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 17:41:31 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E78B0B8.7030406@delphexonline.com>
Message-ID: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>

Don,

If you can't solve the problem proactively by adapting the clients,
You probably need to deal with it on the server side. The common technique
here
Is to use load balancers.

For a software solution, you might want to take a look at
http://sourceforge.net/projects/pythondirector/ .

However, IMHO a (server) application should concentrate on it's purpose.
For tasks related to surrounded issues you should include respective
systems and applications
specialized on dealing with those.
Having said this, that's more a System Integration topic than a
Development one.

Cheers,
Fabian



From:  Don Schoeman <don at delphexonline.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 17:26:48 +0200
To:  <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Protection against flooding


  
    
  
  
    Hi Fabian,
      
      Unfortunately I don't have control over the protocol itself as the
      devices are made by different manufacturers. However, your email
      did highlight the issue that devices will in very quick succession
      try to re-establish connections potentially causing issues in
      other areas such as our firewalls.
      
      Kind Regards,
      Don
      
    
    On 20/09/2011 17:11, Fabian Rothfuchs wrote:
    
      In your Protocol, I would implement a specific Error that
         might be returned by the server in such burst situations.
      The clients should interpret that error in a way that lets
        them reconnect to the server after a randomly chosen interval.
      This way you immediately eliminate the burst without running
        into the situation where you might get another and another and
        another?
      
      
      A good help for that might be the TR-069 protocol
        specification, which deals with HTTP connections from 1 server
        to millions (!) of clients:
      
http://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf
      
      
      
      
      
        From:  Don
          Schoeman <don at delphexonline.com>
          Reply-To:  Twisted
          general discussion <twisted-python at twistedmatrix.com>
          Date:  Tue, 20 Sep
          2011 14:51:26 +0200
          To:  Twisted general
          discussion <twisted-python at twistedmatrix.com>
          Subject: 
          [Twisted-Python] Protection against flooding
        
        
        
        
          
           Hi
              all,
              
              Before I start digging in the Twisted code, I'd just like
              to bump this off you in case the solution is obvious...
              
              I have a lot of clients having permanent connections to my
              TCP server. These clients are devices that will buffer
              data if it can't connect to the server. I can see a
              possible problem in the future if/when for whatever reason
              there is downtime on my server or the network and all
              these devices start connecting and transmitting their
              buffered data once the server is back up, potentially
              causing server flooding.
              
              What would be a good area to start looking into preventing
              something like this from happening? My first thoughts are
              to simply limit an X number of new connections per minute
              (or per X seconds) and to simply immediately drop new
              connections if it exceeds that limit. (I'd probably
              implement this on Protocol level). Over time the
              connections should theoretically normalise as the buffered
              data on the devices are also limited.
              
              Of course it would be better to not allow the connections
              from being established in the first place if the limits
              are exceeded (will be great for DDOS protection), but I
              have a feeling that might be difficult to achieve.
              
              Any thoughts/tips or even links to examples?
              
              Kind Regards,
              Don
              
              
             
        
        _______________________________________________
        Twisted-Python mailing list
        Twisted-Python at twistedmatrix.com
        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
      
      
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/li
stinfo/twisted-python
    

  


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/li
stinfo/twisted-python




From don at delphexonline.com  Tue Sep 20 12:08:23 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 18:08:23 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>
References: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>
Message-ID: <4E78BA77.3000204@delphexonline.com>

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/3957cc78/attachment.htm 

From ldanielburr at me.com  Tue Sep 20 12:21:57 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 20 Sep 2011 11:21:57 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>
References: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>
Message-ID: <op.v137qv1weyn2q3@tiassa.local>

Hi Fabian,


On Tue, 20 Sep 2011 06:38:00 -0500, Fabian Rothfuchs  
<fabian.rothfuchs at googlemail.com> wrote:

> As Twisted points out not to be thread-safe, why would it be in WSGI?
>
> Due to the sensibility of the project I cannot afford things to go wrong
> because of not synchronized threads or other pitfalls, so I actually
> decided
> to to the asynchronous way, and this bites with WSGI.
>
> Fabian
>

Sorry for any confusion, but I never said anything about using twisted as  
a WSGI container for purposes of ensuring thread-safety.  I was only  
responding to your question about "how to wrap Django in twisted", and  
running Django inside twisted's WSGI container is one way to do that.

As you've already noted, the WSGI model doesn't take async frameworks like  
twisted into account.  This was a deliberate decision by the author of the  
spec, who originally said something to the effect that an async WSGI model  
would end up looking like twisted anyway.

If you can afford to make the change, running twisted as a completely  
separate service in another process, and implementing communication  
between your Django server and your twisted server via a protocol might  
simplify things a bit in terms of coordination.

Hope this helps,

L. Daniel Burr


From fabian.rothfuchs at googlemail.com  Tue Sep 20 12:42:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 18:42:55 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <op.v137qv1weyn2q3@tiassa.local>
Message-ID: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>

Hi Daniel,

>Sorry for any confusion, but I never said anything about using twisted as
> 
>a WSGI container for purposes of ensuring thread-safety.  I was only
>responding to your question about "how to wrap Django in twisted", and
>running Django inside twisted's WSGI container is one way to do that.


Oh alright - sorry :)

>If you can afford to make the change, running twisted as a completely
>separate service in another process, and implementing communication
>between your Django server and your twisted server via a protocol might
>simplify things a bit in terms of coordination.

This is exactly the kind of architecture I'm currently spying out :)

Thanks for confirming the general correctness of my idea!
Fabian




From glyph at twistedmatrix.com  Tue Sep 20 12:48:33 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 12:48:33 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>
References: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>
Message-ID: <10D2EEB4-BE62-404E-9690-81BDFA713DB6@twistedmatrix.com>


On Sep 20, 2011, at 12:42 PM, Fabian Rothfuchs wrote:

> Hi Daniel,
> 
>> Sorry for any confusion, but I never said anything about using twisted as
>> 
>> a WSGI container for purposes of ensuring thread-safety.  I was only
>> responding to your question about "how to wrap Django in twisted", and
>> running Django inside twisted's WSGI container is one way to do that.
> 
> 
> Oh alright - sorry :)
> 
>> If you can afford to make the change, running twisted as a completely
>> separate service in another process, and implementing communication
>> between your Django server and your twisted server via a protocol might
>> simplify things a bit in terms of coordination.
> 
> This is exactly the kind of architecture I'm currently spying out :)
> 
> Thanks for confirming the general correctness of my idea!
> Fabian

You can't run Django by itself, though; it needs a WSGI container.  So you're either dealing with coordinating between 2 pieces of software here or 3.  In this case, fewer is always better :).  Using Twisted's WSGI container lets you use callFromThread or blockingCallFromThread to call pretty much whatever Twisted or Twisted-using API you want; I don't see how this would be much simplified by pushing that communication over a socket, since Django isn't going to have an event loop of its own anyway, and there will be blocking communication at some point.

There's nothing wrong with coordinating with Twisted via a socket, it will work fine, but it's extra complexity that you probably don't need.  I would recommend using Twisted's WSGI support and using callFromThread most cases.

-glyph



From fabian.rothfuchs at googlemail.com  Tue Sep 20 13:12:44 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 19:12:44 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <10D2EEB4-BE62-404E-9690-81BDFA713DB6@twistedmatrix.com>
Message-ID: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>

>>>
>>>If you can afford to make the change, running twisted as a completely
>>> separate service in another process, and implementing communication
>>> between your Django server and your twisted server via a protocol might
>>> simplify things a bit in terms of coordination.
>> 
>> This is exactly the kind of architecture I'm currently spying out :)
>> 
>> Thanks for confirming the general correctness of my idea!
>> Fabian
>
>You can't run Django by itself, though; it needs a WSGI container.  So
>you're either dealing with coordinating between 2 pieces of software here
>or 3.  In this case, fewer is always better :).  Using Twisted's WSGI
>container lets you use callFromThread or blockingCallFromThread to call
>pretty much whatever Twisted or Twisted-using API you want; I don't see
>how this would be much simplified by pushing that communication over a
>socket, since Django isn't going to have an event loop of its own anyway,
>and there will be blocking communication at some point.
>
>There's nothing wrong with coordinating with Twisted via a socket, it
>will work fine, but it's extra complexity that you probably don't need.
>I would recommend using Twisted's WSGI support and using callFromThread
>most cases.


Well. Initially the idea was to have Django as the Application's Core, and
Twisted (e.g. The Reactor) running somewhere in the background, to be used
whenever it's needed.
For instance, if the Application needs to communicate via Telnet, Django
would tell the Reactor to do stuff.
But this now turned out to be inefficient and far too complex, if you want
to go the asynchronous way instead of the WSGI one.

The idea now is to change responsibilities.
The Application Core will be built using Twisted instead of Django, and
Django will be used as the side framework for ORM, GUI and that stuff.
Django itself can run in a separate Thread or a separate process or even
on a separate machine (which is requirement anyway).
And yes, for this the architecture, the Core needs to listen on an
event-socket that tells it stuff like 'communicate via Telnet'.
In Django, I'd realize that via Web Services - the Twisted way would be a
Socket (e.g. A Protocol), I guess.

I feel quite happy with that solution till now (planning since 4 hours and
it seems like it could be really working).

Fabian





From glyph at twistedmatrix.com  Tue Sep 20 13:29:29 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 13:29:29 -0400
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E788C4E.7040206@delphexonline.com>
References: <4E788C4E.7040206@delphexonline.com>
Message-ID: <529EB6BC-5257-4046-9168-5DE71C956826@twistedmatrix.com>


On Sep 20, 2011, at 8:51 AM, Don Schoeman wrote:

> Hi all,
> 
> Before I start digging in the Twisted code, I'd just like to bump this off you in case the solution is obvious...
> 
> I have a lot of clients having permanent connections to my TCP server. These clients are devices that will buffer data if it can't connect to the server. I can see a possible problem in the future if/when for whatever reason there is downtime on my server or the network and all these devices start connecting and transmitting their buffered data once the server is back up, potentially causing server flooding.
> 
> What would be a good area to start looking into preventing something like this from happening? My first thoughts are to simply limit an X number of new connections per minute (or per X seconds) and to simply immediately drop new connections if it exceeds that limit. (I'd probably implement this on Protocol level). Over time the connections should theoretically normalise as the buffered data on the devices are also limited.
> 
> Of course it would be better to not allow the connections from being established in the first place if the limits are exceeded (will be great for DDOS protection), but I have a feeling that might be difficult to achieve.
> 
> Any thoughts/tips or even links to examples?

My suggestion would be "try it and see what happens".  You may be surprised to find that your Twisted app deals with the load just fine.  I've seen several applications for which this is the case.

If there really is an issue, a running system will give you a _lot_ more information about what the issue might be than a guess in advance :).

You may rest assured, however, that Twisted has all the APIs you will need to use to shed load, if that is in fact necessary; you can call stopListening() on the Port object that is currently accepting your connections, you can call stopReading() which will take it out of the reactor (but allow the listen queue to continue backing up); you can call pauseProducing() on any connection that is feeding you too much data.

Does this answer your question?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/642cf524/attachment-0001.htm 

From glyph at twistedmatrix.com  Tue Sep 20 13:37:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 13:37:32 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
Message-ID: <FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>


On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:

> I feel quite happy with that solution till now (planning since 4 hours and
> it seems like it could be really working).

Great, glad to hear it.  Let us know how it goes!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/16a1ba08/attachment.htm 

From j.veenvan at gmail.com  Tue Sep 20 15:33:39 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Tue, 20 Sep 2011 21:33:39 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
Message-ID: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>

For this websocket cms project im working on, i also run django in a wsgi
container. I wonder if im using  it the right way? (
https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

cheers,

Jeroen

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>
> I feel quite happy with that solution till now (planning since 4 hours and
> it seems like it could be really working).
>
>
> Great, glad to hear it.  Let us know how it goes!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/80b2319a/attachment.htm 

From fabian.rothfuchs at googlemail.com  Tue Sep 20 15:49:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 21:49:55 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
Message-ID: <CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>

Hey Jeroen,

As I learned so far, using WSGI to combine Django and Twisted isn't a bad
thing in general.
It's just that you need to align your code and 'mental model' to develop
multi-threaded (WSGI) or asynchronous (if that makes any difference to you
at all).

In my special case, I develop a network middleware system where
thread-safetiness is extremely important and it's more than realistic that
If I'd use non-thread-safe techniques, my modules will bite each other :)

So I think you're good (but I'm still a Twisted noob).

Cheers
Fabian


From:  Jeroen van Veen <j.veenvan at gmail.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 21:33:39 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16

For this websocket cms project im working on, i also run django in a wsgi
container. I wonder if im using  it the right way?
(https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

cheers,

Jeroen

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
> 
> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
> 
>> I feel quite happy with that solution till now (planning since 4 hours and
>> it seems like it could be really working).
> 
> Great, glad to hear it.  Let us know how it goes!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/24ec7a57/attachment.htm 

From j.veenvan at gmail.com  Tue Sep 20 16:10:02 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Tue, 20 Sep 2011 22:10:02 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>
References: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
	<CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>
Message-ID: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>

Thanks, it would be nice to see some more examples of django usage with
twisted. I've searched the web a while ago, but could only find a few
examples. Especially the
part about multi-threading/async would be nice to read something
about(doesn't make much sense to me yet). All i know is that i used a
single-threaded wsgi thing to make the autoreload
functionality work(useful for webdevving).

cheers,

Jeroen

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>

> Hey Jeroen,
>
> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
> thing in general.
> It's just that you need to align your code and 'mental model' to develop
> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
> at all).
>
> In my special case, I develop a network middleware system where
> thread-safetiness is extremely important and it's more than realistic that
> If I'd use non-thread-safe techniques, my modules will bite each other :)
>
> So I think you're good (but I'm still a Twisted noob).
>
> Cheers
> Fabian
>
>
> From: Jeroen van Veen <j.veenvan at gmail.com>
>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Tue, 20 Sep 2011 21:33:39 +0200
>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way? (
> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>
> cheers,
>
> Jeroen
>
> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>
>>
>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>
>> I feel quite happy with that solution till now (planning since 4 hours and
>> it seems like it could be really working).
>>
>>
>> Great, glad to hear it.  Let us know how it goes!
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/cbe0d547/attachment.htm 

From fabian.rothfuchs at googlemail.com  Tue Sep 20 16:17:43 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 22:17:43 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
Message-ID: <CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>

That's probably the best Twisted Intro available in the net:
http://krondo.com/?page_id=1327

The first chapter explains the differences between sync/async/threaded.

Fabian


From:  Jeroen van Veen <j.veenvan at gmail.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 22:10:02 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16

Thanks, it would be nice to see some more examples of django usage with
twisted. I've searched the web a while ago, but could only find a few
examples. Especially the
part about multi-threading/async would be nice to read something
about(doesn't make much sense to me yet). All i know is that i used a
single-threaded wsgi thing to make the autoreload
functionality work(useful for webdevving).

cheers,

Jeroen

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
> Hey Jeroen,
> 
> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
> thing in general.
> It's just that you need to align your code and 'mental model' to develop
> multi-threaded (WSGI) or asynchronous (if that makes any difference to you at
> all).
> 
> In my special case, I develop a network middleware system where
> thread-safetiness is extremely important and it's more than realistic that
> If I'd use non-thread-safe techniques, my modules will bite each other :)
> 
> So I think you're good (but I'm still a Twisted noob).
> 
> Cheers
> Fabian
> 
> 
> From:  Jeroen van Veen <j.veenvan at gmail.com>
> 
> Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
> Date:  Tue, 20 Sep 2011 21:33:39 +0200
> 
> To:  Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
> 
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way?
> (https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
> 
> cheers,
> 
> Jeroen
> 
> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>> 
>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>> 
>>> I feel quite happy with that solution till now (planning since 4 hours and
>>> it seems like it could be really working).
>> 
>> Great, glad to hear it.  Let us know how it goes!
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> 
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/listi
> nfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/2614e2b4/attachment-0001.htm 

From glyph at twistedmatrix.com  Tue Sep 20 16:29:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 16:29:59 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
	<CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
Message-ID: <2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>


On Sep 20, 2011, at 3:33 PM, Jeroen van Veen wrote:

> For this websocket cms project im working on, i also run django in a wsgi container. I wonder if im using  it the right way? (https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

Generally, yes, except for the "MainThreadWSGIResource" part.

First of all: you're taking your life in your own hands when you use a Twisted API that starts with a single underscore :-).  http://twistedmatrix.com/trac/wiki/CompatibilityPolicy

Second, _WSGIResponse _does_ run the response in a thread; your code isn't doing what it claims to be doing.  The right way to do this is not to override the WSGI layer, but to provide a fake threadpool whose 'callInThread' just calls the given callable on the main thread.

+1 for having a "plasmoids" module, by the way - does this software control a magnetically regulated plasma reaction at some point? :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110920/b6c732d2/attachment.htm 

From a.libran at gmail.com  Tue Sep 20 19:40:24 2011
From: a.libran at gmail.com (David Kao)
Date: Wed, 21 Sep 2011 07:40:24 +0800
Subject: [Twisted-Python] trivial typo in core doc
Message-ID: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>

"""
For this reason, you must explicitly specific what remote classes will
be accepted, and how their local representatives are to be created.
"""

I think "explicitly specify" is what is intended.

I am new to twisted. Not sure how easy it would have been for me to
open a ticket or fix it myself, but for now I am simply recording this
typo.


David Kao


From exarkun at twistedmatrix.com  Tue Sep 20 20:47:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 21 Sep 2011 00:47:33 -0000
Subject: [Twisted-Python] trivial typo in core doc
In-Reply-To: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>
References: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>
Message-ID: <20110921004733.1808.390058834.divmod.xquotient.980@localhost.localdomain>

On 20 Sep, 11:40 pm, a.libran at gmail.com wrote:
>"""
>For this reason, you must explicitly specific what remote classes will
>be accepted, and how their local representatives are to be created.
>"""
>
>I think "explicitly specify" is what is intended.
>
>I am new to twisted. Not sure how easy it would have been for me to
>open a ticket or fix it myself, but for now I am simply recording this
>typo.

Thanks.  Filing tickets is easy and fun, and the only way anything gets 
done on Twisted. :)  I filed this one for you, consider it an example 
for future issues :)

http://twistedmatrix.com/trac/ticket/5266

Jean-Paul


From diego.uribe.gamez at gmail.com  Wed Sep 21 01:08:45 2011
From: diego.uribe.gamez at gmail.com (Diego Uribe Gamez)
Date: Wed, 21 Sep 2011 00:08:45 -0500
Subject: [Twisted-Python] Welcome to the "Twisted-Python" mailing list
	(Digest mode)
In-Reply-To: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
References: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
Message-ID: <CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>

hello:

I'm making a program that captures a GPS data from a ip port, it
I have an infinite loop to stay to listen, to finish out a
List each item, when the data reaches the List is displayed.

The idea is to put a reactor that allows me to use the variable "list"
without
regardless of the loop and direct it to another code. py can also be a
infinite loop or a file that is in need of the variable.

Files (source and input) are the same folder, do not know how to do it, I
would appreciate help.

Thank you.

-- 

Diego Alonso Uribe Gamez

Twitter: @DiegoUG <http://www.twitter.com/DiegoUG>

Google+: http://gplus.to/diegoug
------------------------------

Esta comunicaci?n es confidencial, destinado ?nicamente para el llamado
destinatario (s) anterior y puede contener secretos comerciales u otra
informaci?n que est? exenta de divulgaci?n seg?n la legislaci?n aplicable.
Cualquier uso, difusi?n, distribuci?n o copia de esta comunicaci?n por
cualquier persona que no sea el destinatario con nombre (s) est?
estrictamente prohibido.
------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/492e752e/attachment.htm 

From _ at lvh.cc  Wed Sep 21 01:46:38 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 21 Sep 2011 13:46:38 +0800
Subject: [Twisted-Python] Welcome to the "Twisted-Python" mailing list
 (Digest mode)
In-Reply-To: <CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>
References: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
	<CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>
Message-ID: <CAE_Hg6aykd91C7Pmfo-PX7_5LkPU1a7YPQOnc3YG4TO4EDOUcw@mail.gmail.com>

Wait. You are capturing GPS data from an IP port. Is that TCP? What format
is the data in? GPS?

I have worked on twisted.positioning, a library for doing GPS data with
Twisted, but this ticket is still in review.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/2192fd14/attachment.htm 

From techtonik at gmail.com  Wed Sep 21 03:33:55 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Wed, 21 Sep 2011 10:33:55 +0300
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
	<CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
Message-ID: <CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>

Hi,

I faced the same problem - couldn't find repository for 0.5
While people are trying to convert stuff - it worth to place a
clearly visible pointer to a right direction on pyflakes code
page.

https://code.launchpad.net/pyflakes
--
anatoly t.


From alex.kirp at gmail.com  Wed Sep 21 04:50:30 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Wed, 21 Sep 2011 14:50:30 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>

Hi Jessica,

Any luck with packaging?

2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
> Hi folks,
>
>> It would be nice if the ppa were up to date, though. ?Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
>
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
>
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)
> b) extract the existing Twisted PPA knowledge from people
> c) add a PPA maintenance job description to
> http://twistedmatrix.com/trac/wiki/ProjectJobs
> d) get started updating the PPA
>
> If anyone else wants to help I'm happy to share the duties.
>
> Regards,
> -Jessica
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From j.veenvan at gmail.com  Wed Sep 21 05:01:37 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:01:37 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
	<CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
	<2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>
Message-ID: <CAAh3GimcwUYDCefJz6LBO7-x=kcaZN3k9yCeXynfho0Q3FN0-Q@mail.gmail.com>

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2011, at 3:33 PM, Jeroen van Veen wrote:
>
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way? (
> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>
>
> Generally, yes, except for the "MainThreadWSGIResource" part.
>
> First of all: you're taking your life in your own hands when you use a
> Twisted API that starts with a single underscore :-).
> http://twistedmatrix.com/trac/wiki/CompatibilityPolicy
>
Yea,
I don't mind :)

>
> Second, _WSGIResponse _does_ run the response in a thread; your code isn't
> doing what it claims to be doing.  The right way to do this is not to
> override the WSGI layer, but to provide a fake threadpool whose
> 'callInThread' just calls the given callable on the main thread.
>
Thanks, i'll try to find out how that works. Not really sure what to
callInThread?(the wsgiresponse probably?)

>
> +1 for having a "plasmoids" module, by the way - does this software control
> a magnetically regulated plasma reaction at some point? :).
>
Thanks for suggesting new terminology for modules :-)  It's nothing like
that though. It's just a glorified javascript parser


> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/a9970374/attachment.htm 

From j.veenvan at gmail.com  Wed Sep 21 05:02:17 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:02:17 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
References: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
	<CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
Message-ID: <CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>

Thanks, i'll read up about that. Still lots to learn about those topics.

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>

> That's probably the best Twisted Intro available in the net:
> http://krondo.com/?page_id=1327
>
> The first chapter explains the differences between sync/async/threaded.
>
> Fabian
>
>
> From: Jeroen van Veen <j.veenvan at gmail.com>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Tue, 20 Sep 2011 22:10:02 +0200
>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>
> Thanks, it would be nice to see some more examples of django usage with
> twisted. I've searched the web a while ago, but could only find a few
> examples. Especially the
> part about multi-threading/async would be nice to read something
> about(doesn't make much sense to me yet). All i know is that i used a
> single-threaded wsgi thing to make the autoreload
> functionality work(useful for webdevving).
>
> cheers,
>
> Jeroen
>
> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>
>> Hey Jeroen,
>>
>> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
>> thing in general.
>> It's just that you need to align your code and 'mental model' to develop
>> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
>> at all).
>>
>> In my special case, I develop a network middleware system where
>> thread-safetiness is extremely important and it's more than realistic that
>> If I'd use non-thread-safe techniques, my modules will bite each other :)
>>
>> So I think you're good (but I'm still a Twisted noob).
>>
>> Cheers
>> Fabian
>>
>>
>> From: Jeroen van Veen <j.veenvan at gmail.com>
>>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Date: Tue, 20 Sep 2011 21:33:39 +0200
>>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>
>> For this websocket cms project im working on, i also run django in a wsgi
>> container. I wonder if im using  it the right way? (
>> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>>
>> cheers,
>>
>> Jeroen
>>
>> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>>
>>>
>>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>>
>>> I feel quite happy with that solution till now (planning since 4 hours
>>> and
>>> it seems like it could be really working).
>>>
>>>
>>> Great, glad to hear it.  Let us know how it goes!
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>> _______________________________________________ Twisted-Python mailing
>> list Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/14a19f09/attachment.htm 

From j.veenvan at gmail.com  Wed Sep 21 05:03:34 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:03:34 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>
References: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
	<CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
	<CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>
Message-ID: <CAAh3Gikx9Tj6TtOQj=PWggPESWzMCR40+22dWsYkscwWpjcThw@mail.gmail.com>

Great source of information by the way.

2011/9/21 Jeroen van Veen <j.veenvan at gmail.com>

> Thanks, i'll read up about that. Still lots to learn about those topics.
>
>
> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>
>> That's probably the best Twisted Intro available in the net:
>> http://krondo.com/?page_id=1327
>>
>> The first chapter explains the differences between sync/async/threaded.
>>
>> Fabian
>>
>>
>> From: Jeroen van Veen <j.veenvan at gmail.com>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Date: Tue, 20 Sep 2011 22:10:02 +0200
>>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>
>> Thanks, it would be nice to see some more examples of django usage with
>> twisted. I've searched the web a while ago, but could only find a few
>> examples. Especially the
>> part about multi-threading/async would be nice to read something
>> about(doesn't make much sense to me yet). All i know is that i used a
>> single-threaded wsgi thing to make the autoreload
>> functionality work(useful for webdevving).
>>
>> cheers,
>>
>> Jeroen
>>
>> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>>
>>> Hey Jeroen,
>>>
>>> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
>>> thing in general.
>>> It's just that you need to align your code and 'mental model' to develop
>>> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
>>> at all).
>>>
>>> In my special case, I develop a network middleware system where
>>> thread-safetiness is extremely important and it's more than realistic that
>>> If I'd use non-thread-safe techniques, my modules will bite each other
>>> :)
>>>
>>> So I think you're good (but I'm still a Twisted noob).
>>>
>>> Cheers
>>> Fabian
>>>
>>>
>>> From: Jeroen van Veen <j.veenvan at gmail.com>
>>>
>>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>> Date: Tue, 20 Sep 2011 21:33:39 +0200
>>>
>>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>>
>>> For this websocket cms project im working on, i also run django in a wsgi
>>> container. I wonder if im using  it the right way? (
>>> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py
>>> )
>>>
>>> cheers,
>>>
>>> Jeroen
>>>
>>> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>>>
>>>>
>>>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>>>
>>>> I feel quite happy with that solution till now (planning since 4 hours
>>>> and
>>>> it seems like it could be really working).
>>>>
>>>>
>>>> Great, glad to hear it.  Let us know how it goes!
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>> _______________________________________________ Twisted-Python mailing
>>> list Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>> _______________________________________________ Twisted-Python mailing
>> list Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/9e6aefb8/attachment-0001.htm 

From exarkun at twistedmatrix.com  Wed Sep 21 07:32:42 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 21 Sep 2011 11:32:42 -0000
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
	<CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
	<CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>
Message-ID: <20110921113242.1808.559540104.divmod.xquotient.982@localhost.localdomain>

On 07:33 am, techtonik at gmail.com wrote:
>Hi,
>
>I faced the same problem - couldn't find repository for 0.5
>While people are trying to convert stuff - it worth to place a
>clearly visible pointer to a right direction on pyflakes code
>page.
>
>https://code.launchpad.net/pyflakes

There's no way to add custom text to that page.

Jean-Paul


From jessica.mckellar at gmail.com  Wed Sep 21 07:33:01 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Wed, 21 Sep 2011 07:33:01 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
Message-ID: <CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>

Hi Alex,

Thanks for checking in.

https://launchpad.net/~twisted-dev/+archive/ppa/ has the results of
some fumbling around with Natty and I have since moved the work to a
personal PPA so it doesn't pollute the twisted archive while I test
things.

Expect All The Progress to be made this weekend now that some of my
other commitments have come and gone. Anyone who already knows how to
do this should feel free to swoop in and get the new release on
launchpad, else I'll keep going at my snail's pace as I use this as an
opportunity to learn the packaging ropes. :)

-Jessica

2011/9/21 ??????? ??????????? <alex.kirp at gmail.com>:
> Hi Jessica,
>
> Any luck with packaging?
>
> 2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
>> Hi folks,
>>
>>> It would be nice if the ppa were up to date, though. ?Maybe someone who
>>> knows how to update it can share that information so that someone who
>>> has time to keep it up to date can take over the job.
>>
>> I would like to volunteer for this. I don't know much about packaging
>> and this seems like a good opportunity to learn.
>>
>> If there are no objections, what I'll do is:
>> a) learn more about the ideal Twisted PPA situation (if you have
>> thoughts on what that should be, tell me)
>> b) extract the existing Twisted PPA knowledge from people
>> c) add a PPA maintenance job description to
>> http://twistedmatrix.com/trac/wiki/ProjectJobs
>> d) get started updating the PPA
>>
>> If anyone else wants to help I'm happy to share the duties.
>>
>> Regards,
>> -Jessica
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>


From jeandaniel.browne at gmail.com  Wed Sep 21 07:53:13 2011
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Wed, 21 Sep 2011 13:53:13 +0200
Subject: [Twisted-Python]  how to write a doc for Twisted with Sphinx?
Message-ID: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>

Hello,

Can we write a doc for Twisted using Sphinx at this point?

What is the status of the Lore to Sphinx transition project? I could find:

#4621 	lore2sphinx should make pretty links to included files.
#4586 	Code-listings generated by lore2sphinx should include line-numbers

Is there any other info/update available?

Cheers,


From kevin.horn at gmail.com  Wed Sep 21 08:31:40 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 21 Sep 2011 07:31:40 -0500
Subject: [Twisted-Python] how to write a doc for Twisted with Sphinx?
In-Reply-To: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
References: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
Message-ID: <CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>

Currently this is waiting on changes to the Twisted release automation code.

Docs should still be written using Lore, and then you should check the Lore
buildbot to see if they are being translated to Sphinx properly.

If you care to take a look at the release automation code, please feel free.

Kevin Horn

On Wed, Sep 21, 2011 at 6:53 AM, Jean-Daniel <jeandaniel.browne at gmail.com>wrote:

> Hello,
>
> Can we write a doc for Twisted using Sphinx at this point?
>
> What is the status of the Lore to Sphinx transition project? I could find:
>
> #4621   lore2sphinx should make pretty links to included files.
> #4586   Code-listings generated by lore2sphinx should include line-numbers
>
> Is there any other info/update available?
>
> Cheers,
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/d8e7fb67/attachment.htm 

From mithrandi at mithrandi.net  Wed Sep 21 10:28:20 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 21 Sep 2011 16:28:20 +0200
Subject: [Twisted-Python] Twisted plugins vs Python packaging
Message-ID: <CAMcKhMS0L0HeCQOHHK6gk_=Yg3M0DkEBbMrYg-LVhMVSdexOAg@mail.gmail.com>

I just kicked off a discussion (hopefully, anyway; it may turn out to
be a flamewar...) on distutils-sig[1] about $SUBJECT, continued from a
pip bug report I filed[2]. If you're interested in making Twisted play
better with the current crop of Python packaging systems and tools,
please follow along and/or chime in.

[1] http://mail.python.org/pipermail/distutils-sig/2011-September/018031.html

[2] https://github.com/pypa/pip/issues/355
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar


From diego.uribe.gamez at gmail.com  Wed Sep 21 11:34:25 2011
From: diego.uribe.gamez at gmail.com (Diego Uribe Gamez)
Date: Wed, 21 Sep 2011 10:34:25 -0500
Subject: [Twisted-Python] The idea is to put a reactor
Message-ID: <CAGiX-6V5LGM-=bQj+ktr=i-DeKRRC122p9p-uS4QqdGEnUmSQQ@mail.gmail.com>

hello:

I'm making a program that captures a GPS data from a ip port, it
I have an infinite loop to stay to listen, to finish out a
List each item, when the data reaches the List is displayed.

The idea is to put a reactor that allows me to use the variable "list"
without
regardless of the loop and direct it to another code. py can also be a
infinite loop or a file that is in need of the variable.

Files (source and input) are the same folder, do not know how to do it, I
would appreciate help.

Thank yo

-- 

Diego Alonso Uribe Gamez

Twitter: @DiegoUG <http://www.twitter.com/DiegoUG>

Google+: http://gplus.to/diegoug
------------------------------

Esta comunicaci?n es confidencial, destinado ?nicamente para el llamado
destinatario (s) anterior y puede contener secretos comerciales u otra
informaci?n que est? exenta de divulgaci?n seg?n la legislaci?n aplicable.
Cualquier uso, difusi?n, distribuci?n o copia de esta comunicaci?n por
cualquier persona que no sea el destinatario con nombre (s) est?
estrictamente prohibido.
------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/7148438d/attachment-0001.htm 

From glyph at twistedmatrix.com  Wed Sep 21 13:56:20 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Sep 2011 13:56:20 -0400
Subject: [Twisted-Python] how to write a doc for Twisted with Sphinx?
In-Reply-To: <CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>
References: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
	<CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>
Message-ID: <59BF7129-A745-44BD-B1CC-239961C44166@twistedmatrix.com>

On Sep 21, 2011, at 8:31 AM, Kevin Horn wrote:

> Kevin Horn
> 
> On Wed, Sep 21, 2011 at 6:53 AM, Jean-Daniel <jeandaniel.browne at gmail.com> wrote:
> Hello,
> 
> Can we write a doc for Twisted using Sphinx at this point?
> 
> What is the status of the Lore to Sphinx transition project? I could find:
> 
> #4621   lore2sphinx should make pretty links to included files.
> #4586   Code-listings generated by lore2sphinx should include line-numbers
> 
> Is there any other info/update available?
> 
> Currently this is waiting on changes to the Twisted release automation code.
> 
> Docs should still be written using Lore, and then you should check the Lore buildbot to see if they are being translated to Sphinx properly.

Lore is just simple HTML with a few 'class' decorations for features like syntax highlighting (as you can see from the examples) so it should be easy enough to write.  If you want to write the document with Sphinx, someone on the development team would be happy to translate it manually - creating the content is much harder than writing the markup :).

> If you care to take a look at the release automation code, please feel free.

You can see the milestone here:

	<http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx>

and the ticket for actually doing the conversion is here:

	<http://twistedmatrix.com/trac/ticket/4500>

there's already some commentary on that ticket explaining what needs to be done next.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/d73d3020/attachment.htm 

From diego.uribe.gamez at gmail.com  Wed Sep 21 13:59:57 2011
From: diego.uribe.gamez at gmail.com (Diego Alonso Uribe Gamez)
Date: Wed, 21 Sep 2011 17:59:57 +0000 (UTC)
Subject: [Twisted-Python] Join my network on LinkedIn through Rainmaker
Message-ID: <1057355643.2696857.1316627997463.JavaMail.app@ela4-bed78.prod>

I would like to connect with you on LinkedIn.

Diego Alonso Uribe Gamez
Desarrollador Web at 1publicidad
Colombia

Confirm that you know Diego Alonso Uribe Gamez:
https://www.linkedin.com/e/-b9k943-gsumbcpg-3/isd/4302356319/gyjgdPuw/?hs=false&tok=1JiPi7OiPTRkU1

--
You are receiving Invitation to Connect emails. Click to unsubscribe:
http://www.linkedin.com/e/-b9k943-gsumbcpg-3/UGoRR-kmaZN3cQCGtaNE-BBynaTgDBi6TGSB-kimZG9krgZr/goo/twisted-python%40twistedmatrix%2Ecom/20061/I1488829854_1/?hs=false&tok=3ilQ9NIzDTRkU1

(c) 2011 LinkedIn Corporation. 2029 Stierlin Ct, Mountain View, CA 94043, USA.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110921/d0f33c6a/attachment.htm 

From a.libran at gmail.com  Thu Sep 22 09:19:38 2011
From: a.libran at gmail.com (David Kao)
Date: Thu, 22 Sep 2011 21:19:38 +0800
Subject: [Twisted-Python] I see,
 remote_method can also return a deferred. Perhaps we could document
 that?
Message-ID: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>

I almost gave up choosing twisted until I found this explanation

http://twistedmatrix.com/pipermail/twisted-python/2004-April/007517.html

which basically says a remote_method can return a deferred. In this
case, the PB server won't return the result of the Deferred back to
the client until the server-side callback fires. The result of the
remote_method is then returned to the client, which then triggers
client side's deferred callback.

So, I thought one of the following would be helpful:

1) An example showing remote_method returning a deferred

and/or

2) A section named "Server side remote_* methods can be async by
returning deferreds" could be added as a 7th item in

http://twistedmatrix.com/documents/current/core/howto/pb-usage.html

.

I spent some quality 30+ hours carefully reading 90% of the

http://twistedmatrix.com/documents/current/core/howto/index.html

and I do not remember picking this subtlety up. (Or you can point me
the right place in doc.) (great doc btw.)

Should I submit an improvement ticket for this? I could also make the
server side example using Echoer, remote_echo, and deferToThread just
so that whoever fixes the ticket can just copy and paste.

David Kao


From a.libran at gmail.com  Thu Sep 22 09:26:05 2011
From: a.libran at gmail.com (David Kao)
Date: Thu, 22 Sep 2011 21:26:05 +0800
Subject: [Twisted-Python] I see,
 remote_method can also return a deferred. Perhaps we could document
 that?
In-Reply-To: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>
References: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>
Message-ID: <CAG4NAK6rumR=mAyvPJVX6kbd-=oG8pPchCh=3CDS7fkH-AXoqg@mail.gmail.com>

Or we could just use Brian's example.

David Kao



On Thu, Sep 22, 2011 at 9:19 PM, David Kao <a.libran at gmail.com> wrote:
> I almost gave up choosing twisted until I found this explanation
>
> http://twistedmatrix.com/pipermail/twisted-python/2004-April/007517.html
>
> which basically says a remote_method can return a deferred. In this
> case, the PB server won't return the result of the Deferred back to
> the client until the server-side callback fires. The result of the
> remote_method is then returned to the client, which then triggers
> client side's deferred callback.
>
> So, I thought one of the following would be helpful:
>
> 1) An example showing remote_method returning a deferred
>
> and/or
>
> 2) A section named "Server side remote_* methods can be async by
> returning deferreds" could be added as a 7th item in
>
> http://twistedmatrix.com/documents/current/core/howto/pb-usage.html
>
> .
>
> I spent some quality 30+ hours carefully reading 90% of the
>
> http://twistedmatrix.com/documents/current/core/howto/index.html
>
> and I do not remember picking this subtlety up. (Or you can point me
> the right place in doc.) (great doc btw.)
>
> Should I submit an improvement ticket for this? I could also make the
> server side example using Echoer, remote_echo, and deferToThread just
> so that whoever fixes the ticket can just copy and paste.
>
> David Kao
>


From garyjefferson123 at gmail.com  Fri Sep 23 15:33:45 2011
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Fri, 23 Sep 2011 13:33:45 -0600
Subject: [Twisted-Python] async->sync
Message-ID: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>

I know this is a topic that comes up occasionally, and every thread
I've see ends the same way: don't try it.

Here's my problem. I am trying to integrate some async twisted code
with pyfilesystem. Methods in pyfilesystem, such as listdir() and
open() that I need to implement expect synchronous results.

So, as far as I can tell, I only have one option: re-implement all my
client networking code outside of twisted and use the non-twisted
version for integration with this (and for other things like
command-line tools).

That solution is pretty dismal; maintaining one client-side codebase
is hard enough. Keeping two up to date sounds like a nightmare.

So, am I missing some other more elegant solution? Is there really no
way to turn async, deferred-returning twisted code into synchronous
result-returning code, via clever use of wrappers etc?

Thanks,
Gary


From glyph at twistedmatrix.com  Fri Sep 23 15:37:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 23 Sep 2011 15:37:38 -0400
Subject: [Twisted-Python] async->sync
In-Reply-To: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
References: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
Message-ID: <4B41F4C2-47A7-445F-A5B7-2E32C9007E5D@twistedmatrix.com>

On Sep 23, 2011, at 3:33 PM, gary jefferson wrote:

> So, am I missing some other more elegant solution? Is there really no
> way to turn async, deferred-returning twisted code into synchronous
> result-returning code, via clever use of wrappers etc?

Run the reactor in a background thread and do .blockingCallFromThread().

If you can't run a background thread, then you're probably out of luck - sorry :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110923/fe723128/attachment.htm 

From exarkun at twistedmatrix.com  Sun Sep 25 00:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Sep 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1316923525.17.1129339506@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110925/c9094a43/attachment.htm 

From p.mayers at imperial.ac.uk  Mon Sep 26 03:48:49 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 26 Sep 2011 08:48:49 +0100
Subject: [Twisted-Python] async->sync
In-Reply-To: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
References: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
Message-ID: <4E802E61.6050603@imperial.ac.uk>

On 23/09/11 20:33, gary jefferson wrote:

> So, am I missing some other more elegant solution? Is there really no
> way to turn async, deferred-returning twisted code into synchronous
> result-returning code, via clever use of wrappers etc?

Run the reactor in another thread, or another process and communicate 
via IPC.


From _ at lvh.cc  Mon Sep 26 07:37:16 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 26 Sep 2011 13:37:16 +0200
Subject: [Twisted-Python] Running the same trial test suite against a live
	server and a mock server
Message-ID: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>

Hey,


In order to properly test txievery (a twisted library for dealing with
Paypal's APIs), I'm building a mock Paypal server. The idea is to run the
same high-level tests (which basically use the API and eventually make it
make real HTTPS requests) against both the mock server and the Paypal
Sandbox.

The problem is that using the Paypal Sandbox requires extra information:
specifically, username, password, and an SSL certificate (I don't intend to
support "signature" authentication. It's a horrible alternative for
environments too stupid to make requests given a client cert).  My mock
sandbox also requires all of that, but I just have fake credentials. When
you run the test suite against the Paypal Sandbox, obviously you're going to
need Paypal-blessed credentials.

The obvious solution is to have a makeClient function defined in module
scope for the given test module. I could then have a bin/liveTest.py that
takes a username, password and cert, and monkeypatches that module. I'm
assuming it can't be hard to tell trial to just take a test module and run
it...

Are there any better ways to pass test data to trial?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110926/4a1eab69/attachment.htm 

From a.libran at gmail.com  Mon Sep 26 08:13:45 2011
From: a.libran at gmail.com (David Kao)
Date: Mon, 26 Sep 2011 20:13:45 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
Message-ID: <CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>

Regarding

>  The process ''starting'' is different from `ProcessProtocol` methods being
>  called.  `ProcessProtocol.processEnded` is ''not'' called until the
>  reactor is running.

On my own VMs, the processEnded gets called


[root at master1 play]# cat fun.py
from twisted.internet import reactor

from twisted.internet import reactor, protocol

class OneRun(protocol.ProcessProtocol):
    def processEnded(self, reason):
        print "Process ended\n"


reactor.spawnProcess(OneRun(), executable="echo", args=["echo",
"hello"], childFDs={0:0, 1:1, 2:2})
[root at master1 play]# python fun.py
hello
Process ended

[root at master1 play]#


But once again, on a different VM, I only see "hello" and processEnded
isn't called.

Both VMs run Python 2.7.1 and Twisted 11.0.0

What is going on?

David Kao



On Mon, Sep 26, 2011 at 8:03 PM, Twisted <trac at twistedmatrix.com> wrote:
> #5272: In the core doc, do not call reactor.stop directly in processEnded
> ------------------------+---------------------------------------------------
> ? ? Reporter: ?dkdog ? | ? ? ? ? ? Owner:
> ? ? ? ? Type: ?defect ?| ? ? ? ? ?Status: ?closed
> ? ? Priority: ?normal ?| ? ? ? Milestone:
> ? ?Component: ?core ? ?| ? ? ?Resolution: ?worksforme
> ? ? Keywords: ? ? ? ? ?| ? ? ? ? ?Branch:
> Branch_author: ? ? ? ? ?| ? Launchpad_bug:
> ------------------------+---------------------------------------------------
> Changes (by exarkun):
>
> ?* status: ?reopened => closed
> ?* resolution: ?=> worksforme
>
>
> Comment:
>
> ?> I just found out that reactor.spawnProcess could spawn the subprocess
> ?right away **before** reactor.run is executed.
>
> ?This doesn't seem related to this ticket.
>
> ?> I get the impression that most stuff don't get run until the reactor
> ?event loop is up and running with reactor.run()
>
> ?That's true. ?Most stuff.
>
> ?> In this case, who's answering all the ProcessProtocol's methods like
> ?processEnded then, without an event loop?
>
> ?The process ''starting'' is different from `ProcessProtocol` methods being
> ?called. ?`ProcessProtocol.processEnded` is ''not'' called until the
> ?reactor is running.
>
> ?Further discussion should be moved to the mailing list. ?Thanks.
>
> --
> Ticket URL: <http://twistedmatrix.com/trac/ticket/5272#comment:8>
> Twisted <http://twistedmatrix.com/trac/>
> Engine of your Internet
>


From exarkun at twistedmatrix.com  Mon Sep 26 09:27:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 26 Sep 2011 13:27:39 -0000
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
Message-ID: <20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>

On 12:13 pm, a.libran at gmail.com wrote:
>Regarding
>>  The process ''starting'' is different from `ProcessProtocol` methods 
>>being
>>  called.  `ProcessProtocol.processEnded` is ''not'' called until the
>>  reactor is running.
>
>On my own VMs, the processEnded gets called
>
>
>[root at master1 play]# cat fun.py
>from twisted.internet import reactor
>
>from twisted.internet import reactor, protocol
>
>class OneRun(protocol.ProcessProtocol):
>    def processEnded(self, reason):
>        print "Process ended\n"
>
>
>reactor.spawnProcess(OneRun(), executable="echo", args=["echo",
>"hello"], childFDs={0:0, 1:1, 2:2})
>[root at master1 play]# python fun.py
>hello
>Process ended
>
>[root at master1 play]#
>
>
>But once again, on a different VM, I only see "hello" and processEnded
>isn't called.
>
>Both VMs run Python 2.7.1 and Twisted 11.0.0
>
>What is going on?

Thanks for this follow-up.  I noticed that in this snippet, there's no 
`reactor.run()? call at all.  This is a better example, since it shows 
`processEnded? being called even though there's no chance of the reactor 
ever being running.  Investigating this, I see that there is an early- 
exit case in process support (in `twisted/internet/process.py?, line 65) 
which may call `processEnded? even when the reactor is not running. 
Inserting a sleep(1) before the `os.waitpid? call in that function makes 
it much more likely to trigger this case, since it gives the child 
plenty of time to exit.

This strikes me as a bug.  Can you file a new ticket for this?

Thanks again,
Jean-Paul
>David Kao
>
>
>
>On Mon, Sep 26, 2011 at 8:03 PM, Twisted <trac at twistedmatrix.com> 
>wrote:
>>#5272: In the core doc, do not call reactor.stop directly in 
>>processEnded
>>------------------------+---------------------------------------------------
>>? ? Reporter: ?dkdog ? | ? ? ? ? ? Owner:
>>? ? ? ? Type: ?defect ?| ? ? ? ? ?Status: ?closed
>>? ? Priority: ?normal ?| ? ? ? Milestone:
>>? ?Component: ?core ? ?| ? ? ?Resolution: ?worksforme
>>? ? Keywords: ? ? ? ? ?| ? ? ? ? ?Branch:
>>Branch_author: ? ? ? ? ?| ? Launchpad_bug:
>>------------------------+---------------------------------------------------
>>Changes (by exarkun):
>>
>>?* status: ?reopened => closed
>>?* resolution: ?=> worksforme
>>
>>
>>Comment:
>>
>>?> I just found out that reactor.spawnProcess could spawn the 
>>subprocess
>>?right away **before** reactor.run is executed.
>>
>>?This doesn't seem related to this ticket.
>>
>>?> I get the impression that most stuff don't get run until the 
>>reactor
>>?event loop is up and running with reactor.run()
>>
>>?That's true. ?Most stuff.
>>
>>?> In this case, who's answering all the ProcessProtocol's methods 
>>like
>>?processEnded then, without an event loop?
>>
>>?The process ''starting'' is different from `ProcessProtocol` methods 
>>being
>>?called. ?`ProcessProtocol.processEnded` is ''not'' called until the
>>?reactor is running.
>>
>>?Further discussion should be moved to the mailing list. ?Thanks.
>>
>>--
>>Ticket URL: <http://twistedmatrix.com/trac/ticket/5272#comment:8>
>>Twisted <http://twistedmatrix.com/trac/>
>>Engine of your Internet
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From glyph at twistedmatrix.com  Mon Sep 26 18:24:14 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Sep 2011 18:24:14 -0400
Subject: [Twisted-Python] Running the same trial test suite against a
	live server and a mock server
In-Reply-To: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
References: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
Message-ID: <65DEEACA-ECB1-49DF-A9E3-B44B4BD5FE21@twistedmatrix.com>


On Sep 26, 2011, at 7:37 AM, Laurens Van Houtven wrote:

> Are there any better ways to pass test data to trial?

Environment variables.

This isn't a great option, but I'd say it's definitely a better one than modules which monkeypatch stuff.

You can also have your test cases synthesize stuff out of data files or config files in your environment.

I'm not really inclined to make this super easy, since tests should by definition not be terribly configurable: the more knobs like this you have to turn, the less meaningful your test suite is likely to be.

So, today, I'd write something like this:

TXIEVERY_USERNAME=foo TXIEVERY_PW=bar TXIEVERY_CERT=baz.pem trial txievery

but if someone has a better thought, please chime in - this is by no means the last word on this.  And I'm facing a similar issue soon so I'd love to hear some diversity of opinion here.

-glyph

PS: love the module name.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110926/30e21946/attachment.htm 

From screwtape at froup.com  Mon Sep 26 19:29:30 2011
From: screwtape at froup.com (Tim Allen)
Date: Tue, 27 Sep 2011 09:29:30 +1000
Subject: [Twisted-Python] Running the same trial test suite against a
 live server and a mock server
In-Reply-To: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
References: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
Message-ID: <20110926232930.GD26665@boombah.thristian.org>

On Mon, Sep 26, 2011 at 01:37:16PM +0200, Laurens Van Houtven wrote:
> The obvious solution is to have a makeClient function defined in module
> scope for the given test module. I could then have a bin/liveTest.py that
> takes a username, password and cert, and monkeypatches that module. I'm
> assuming it can't be hard to tell trial to just take a test module and run
> it...
> 
> Are there any better ways to pass test data to trial?

If you have a particular set of tests you want to run against a mock
server and a real server, I'd be highly tempted to use inheritance:


    class ServerTestMixin:

	def _get_server_details(self):
	    raise NotImplementedError

	def test_foo(self):
	    server = self._get_server_details()
	    ...
	

    class MockServerTest(ServerTestMixin, unittest.TestCase):

	def setUp(self):
	    # start mock server
	
	def tearDown(self):
	    # shutdown mock server.

	def _get_server_details(self):
	    return MOCK_SERVER_DETAILS

    
    class LiveServerTest(ServerTestMixin, unittest.TestCase):

	def _get_server_details(self):
	    return LIVE_SERVER_DETAILS


The other trick I've used in a similar situation is to define
ServerTestMixin and MockServerTest in a module matching "test_*.py" so
that Trial will find it by default, and define LiveServerTest in
a module like "integration_tests.py" that won't be automatically run.

That way, you can test your code with trial and random fluctuations in
the live server won't cause spurious test failures, but you can pretty
easily run your tests against the live server whenever you want. If
you're using continuous integration, you could have a script that fails
if the unit tests break, but just warns if the integration tests break,
etc.


From donne.cn at gmail.com  Mon Sep 26 19:48:20 2011
From: donne.cn at gmail.com (Don Li)
Date: Tue, 27 Sep 2011 07:48:20 +0800
Subject: [Twisted-Python] How to explicitly free memory in twisted daemon
	process
Message-ID: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>

Hi,

I have facing a problem:
  "According to the Python memory pool mechanism, the memory usage will take
up more and more in a long-running daemon process.
  "In the long sustained logon and logout logic by a lot of users , Twisted
process MUST stop restarting because the memory usage."

With "meliae" tested, and no memory leaks occur.

Hope you can give me some advice, thank you.
-- 
Don Li

TipCat Interactive Inc.
MSN    : edon at live.com
SKYPE: don.sz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/afc06d14/attachment.htm 

From andrew at bemusement.org  Mon Sep 26 20:01:32 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 27 Sep 2011 10:01:32 +1000
Subject: [Twisted-Python] How to explicitly free memory in twisted
 daemon process
In-Reply-To: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>
References: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>
Message-ID: <20110927000132.GB22433@flay.puzzling.org>

On Tue, Sep 27, 2011 at 07:48:20AM +0800, Don Li wrote:
> Hi,
> 
> I have facing a problem:
>   "According to the Python memory pool mechanism, the memory usage will take
> up more and more in a long-running daemon process.
>   "In the long sustained logon and logout logic by a lot of users , Twisted
> process MUST stop restarting because the memory usage."

Where are you quoting that problem from?

The short answer is that if your code doesn't leak, you probably have nothing to
worry about.

It's true enough that CPython's memory consumption will tend to grow over time
in a long-running daemon ? but probably not unbounded, unless your code has a
leak.  If there's no leak, you'd expect memory consumption grow asymptotically
to some upper bound, i.e. the memory usage will grow more and more slowly.

Are you actually experiencing a problem, or just trying to anticipate one?

Either way, actual data is good: you know that meliae reports no leaks, so what
does the OS report for memory consumption over time?  Are you doing anything to
try reproduce unwanted memory usage (e.g. running load tests against your
daemon)?

-Andrew.



From victorhooi at yahoo.com  Tue Sep 27 00:09:25 2011
From: victorhooi at yahoo.com (Victor Hooi)
Date: Tue, 27 Sep 2011 14:09:25 +1000
Subject: [Twisted-Python] Client/Server to stream text logfiles?
Message-ID: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>

Hi,

We have several Solaris 10 running an application that generates large text
logfiles

We need to stream these logfiles in realtime to a central monitoring server.

Unfortunately (for both technical and non-technical reasons), we can't use
an NFS-mount. At the moment, we're using SSH with tail -f to stream the
files from the servers to the monitoring box.

However, I was going to look at hacking a client/server up in Python to
monitor for filesystem events, and then stream any updates.

In terms of filesystem monitoring, this is Solaris 10, so there's not really
that much available it seems. Gamin seems to be the best bet, otherwise I
might have to fallback to polling.

On the Twisted side, is the above something that's fairly easy to
accomplish? I haven't used Twisted before, so I thought this might be a good
excuse to learn it. Any thoughts or caveats I should be aware of? Any
existing projects I might be able to leverage off? Good starting docs for
this sort of thing?

Thanks,
Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/c4628b59/attachment.htm 

From a.libran at gmail.com  Tue Sep 27 04:33:15 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 16:33:15 +0800
Subject: [Twisted-Python] How do I know the server from reactor.listenTCP
	already started listening?
Message-ID: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>

When the call to listenTCP returns, is the server actively waiting for
TCP connections?

Let's say reactor.run() has been called. Can I do the following back-to-back?

reactor.listenTCP(4321, serverfactory)
reactor.connectTCP("localhost", 4321, clientfactory)

Basically, I am almost starting a server and a client back-to-back
that connects to each other. I would like to know if the server is in
"listening" state before my client attempts to connect.

Thanks.

David Kao


From enriquejr at gmail.com  Tue Sep 27 05:12:53 2011
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Tue, 27 Sep 2011 17:12:53 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
Message-ID: <CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>

On Tue, Sep 27, 2011 at 4:33 PM, David Kao <a.libran at gmail.com> wrote:

> When the call to listenTCP returns, is the server actively waiting for
> TCP connections?
>
Looking at the code
here<http://twistedmatrix.com/trac/browser/tags/releases/twisted-11.0.0/twisted/internet/tcp.py#L857>,
I would think so.


>
> Let's say reactor.run() has been called. Can I do the following
> back-to-back?
>
> reactor.listenTCP(4321, serverfactory)
> reactor.connectTCP("localhost", 4321, clientfactory)


> Basically, I am almost starting a server and a client back-to-back
> that connects to each other.

Just curious, why are you doing this?


> I would like to know if the server is in
> "listening" state before my client attempts to connect.
>
> Thanks.
>
> David Kao
>

--Enrique
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/1361cb07/attachment.htm 

From a.libran at gmail.com  Tue Sep 27 05:28:12 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 17:28:12 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
Message-ID: <CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>

I have an existing program that connects to a TCP port to serve data. I need to

1) start a TCPServer
2) start my program and tell it which port to connect to

Actually, I want to do all this in twistd. And now I am looking at
something like this which is even a bigger headache

internet.TCPServer( 4321, serverFactory ),setServiceParent(serviceCollection)

I revise my question.

Can I rely on reactor.listenTCP being called right after
serverFactory.startFactory is called?

I hope listenTCP isn't queued as a reactor "task" after
serverFactory.startFactory. If it's done all in one uninterrupted
thread execution, then I can just queue "start_the_other_program"
inside startFactory via a reactor.callLater. Correct?

Enrique, thanks for the link. I think I saw that too. I traced it
since reactor.listenTCP returns a port, and so on and so forth.

However, I have not been able to find code for internet.TCPServer. I
would like to be able to trace the code top down. Can someone help?
Thanks!

David Kao



On Tue, Sep 27, 2011 at 5:12 PM, Enrique Samson Jr. <enriquejr at gmail.com> wrote:
> On Tue, Sep 27, 2011 at 4:33 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> When the call to listenTCP returns, is the server actively waiting for
>> TCP connections?
>
> Looking at the code here, I would think so.
>
>>
>> Let's say reactor.run() has been called. Can I do the following
>> back-to-back?
>>
>> reactor.listenTCP(4321, serverfactory)
>> reactor.connectTCP("localhost", 4321, clientfactory)
>>
>> Basically, I am almost starting a server and a client back-to-back
>> that connects to each other.
>
> Just curious, why are you doing this?
>
>>
>> I would like to know if the server is in
>> "listening" state before my client attempts to connect.
>>
>> Thanks.
>>
>> David Kao
>
> --Enrique
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From enriquejr at gmail.com  Tue Sep 27 05:53:05 2011
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Tue, 27 Sep 2011 17:53:05 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
Message-ID: <CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>

On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:

> I have an existing program that connects to a TCP port to serve data. I
> need to
>
> 1) start a TCPServer

2) start my program and tell it which port to connect to
>

In case you already did, you might want to take a deeper look again at the
Twisted Core Documentation. The Writing a TCP
Server<http://twistedmatrix.com/documents/current/core/howto/servers.html>section
answers your question #1, Writing
a TCP Client<http://twistedmatrix.com/documents/current/core/howto/clients.html>section
answers your question #2.


>
> Actually, I want to do all this in twistd. And now I am looking at
> something like this which is even a bigger headache
>
> internet.TCPServer( 4321, serverFactory
> ),setServiceParent(serviceCollection)
>
Of course you can do all these in twisted. But in this context, it doesn't
make sense to run both in the same twisted application.


>
> I revise my question.
>
> Can I rely on reactor.listenTCP being called right after
> serverFactory.startFactory is called?


> I hope listenTCP isn't queued as a reactor "task" after
> serverFactory.startFactory. If it's done all in one uninterrupted
> thread execution, then I can just queue "start_the_other_program"
> inside startFactory via a reactor.callLater. Correct?
>
The reverse is what is guaranteed: serverFactory.startFactory will be called
when you do reactor.listenTCP.


>
> Enrique, thanks for the link. I think I saw that too. I traced it
> since reactor.listenTCP returns a port, and so on and so forth.
>
> However, I have not been able to find code for internet.TCPServer. I
> would like to be able to trace the code top down. Can someone help?
>
You can find it
here<http://twistedmatrix.com/documents/current/core/howto/tutorial/index.html>
.


> Thanks!
>
> David Kao
>
>
--Enrique
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/708f3277/attachment.htm 

From a.libran at gmail.com  Tue Sep 27 06:55:34 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 18:55:34 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
	<CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
Message-ID: <CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>

My bad for not being clear, but actually, the client program is a
separate binary that I plan to spawn as a subprocess, which should
connect to the server.

Basically, the answer I am getting now is that I am never sure when
the server starts listening on a port. I need to take it on faith that
within 1 sec of running twistd the port is being listened. Or perhaps
check it using netstat or something from the outside ... ugly.

I have gone through almost the entire tutorial. I am looking for the
**source code** for internet.TCPServer

David Kao



On Tue, Sep 27, 2011 at 5:53 PM, Enrique Samson Jr. <enriquejr at gmail.com> wrote:
> On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> I have an existing program that connects to a TCP port to serve data. I
>> need to
>>
>> 1) start a TCPServer
>>
>> 2) start my program and tell it which port to connect to
>
> In case you already did, you might want to take a deeper look again at the
> Twisted Core Documentation. The Writing a TCP Server section answers your
> question #1, Writing a TCP Client section answers your question #2.
>
>>
>> Actually, I want to do all this in twistd. And now I am looking at
>> something like this which is even a bigger headache
>>
>> internet.TCPServer( 4321, serverFactory
>> ),setServiceParent(serviceCollection)
>
> Of course you can do all these in twisted. But in this context, it doesn't
> make sense to run both in the same twisted application.
>
>>
>> I revise my question.
>>
>> Can I rely on reactor.listenTCP being called right after
>> serverFactory.startFactory is called?
>>
>> I hope listenTCP isn't queued as a reactor "task" after
>> serverFactory.startFactory. If it's done all in one uninterrupted
>> thread execution, then I can just queue "start_the_other_program"
>> inside startFactory via a reactor.callLater. Correct?
>
> The reverse is what is guaranteed: serverFactory.startFactory will be called
> when you do reactor.listenTCP.
>
>>
>> Enrique, thanks for the link. I think I saw that too. I traced it
>> since reactor.listenTCP returns a port, and so on and so forth.
>>
>> However, I have not been able to find code for internet.TCPServer. I
>> would like to be able to trace the code top down. Can someone help?
>
> You can find it here.
>
>>
>> Thanks!
>>
>> David Kao
>>
>
> --Enrique
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From ypercube at gmail.com  Tue Sep 27 07:08:52 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 27 Sep 2011 14:08:52 +0300
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
	<CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
	<CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>
Message-ID: <CAE3TBxxthmDLO7E8AhTE5K_jCSWmzrVgdfiQ8khXwctT0dzdRA@mail.gmail.com>

On Tue, Sep 27, 2011 at 1:55 PM, David Kao <a.libran at gmail.com> wrote:

> My bad for not being clear, but actually, the client program is a
> separate binary that I plan to spawn as a subprocess, which should
> connect to the server.
>
> Basically, the answer I am getting now is that I am never sure when
> the server starts listening on a port. I need to take it on faith that
> within 1 sec of running twistd the port is being listened. Or perhaps
> check it using netstat or something from the outside ... ugly.
>

So, you want to be sure that the server is listening before trying to
connect from an independent client? Why?
Shouldn't this client just try to connect and act accordingly if there is no
server listening?

It's as if you want to be sure that http://www.google.com/ is up and will
answer you.
Why not just type http://www.google.com/  in a browser?


>
> I have gone through almost the entire tutorial. I am looking for the
> **source code** for internet.TCPServer
>
> David Kao
>
>
>
> On Tue, Sep 27, 2011 at 5:53 PM, Enrique Samson Jr. <enriquejr at gmail.com>
> wrote:
> > On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:
> >>
> >> I have an existing program that connects to a TCP port to serve data. I
> >> need to
> >>
> >> 1) start a TCPServer
> >>
> >> 2) start my program and tell it which port to connect to
> >
> > In case you already did, you might want to take a deeper look again at
> the
> > Twisted Core Documentation. The Writing a TCP Server section answers your
> > question #1, Writing a TCP Client section answers your question #2.
> >
> >>
> >> Actually, I want to do all this in twistd. And now I am looking at
> >> something like this which is even a bigger headache
> >>
> >> internet.TCPServer( 4321, serverFactory
> >> ),setServiceParent(serviceCollection)
> >
> > Of course you can do all these in twisted. But in this context, it
> doesn't
> > make sense to run both in the same twisted application.
> >
> >>
> >> I revise my question.
> >>
> >> Can I rely on reactor.listenTCP being called right after
> >> serverFactory.startFactory is called?
> >>
> >> I hope listenTCP isn't queued as a reactor "task" after
> >> serverFactory.startFactory. If it's done all in one uninterrupted
> >> thread execution, then I can just queue "start_the_other_program"
> >> inside startFactory via a reactor.callLater. Correct?
> >
> > The reverse is what is guaranteed: serverFactory.startFactory will be
> called
> > when you do reactor.listenTCP.
> >
> >>
> >> Enrique, thanks for the link. I think I saw that too. I traced it
> >> since reactor.listenTCP returns a port, and so on and so forth.
> >>
> >> However, I have not been able to find code for internet.TCPServer. I
> >> would like to be able to trace the code top down. Can someone help?
> >
> > You can find it here.
> >
> >>
> >> Thanks!
> >>
> >> David Kao
> >>
> >
> > --Enrique
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/12e40882/attachment.htm 

From jessica.mckellar at gmail.com  Tue Sep 27 07:27:38 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Tue, 27 Sep 2011 07:27:38 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
	<CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>
Message-ID: <CAKDZRcjrPLNj_CzMVSxSeysDEm2h2CikqbEbYofvhwmxNVBzyw@mail.gmail.com>

Hi folks,

https://launchpad.net/~jesstess/+archive/twisted-testing2 has Twisted
core packages for Natty, Maverick, and Lucid. They build with
pbuilder, I installed them in VMs and ran the test suite, and exarkun
gave a quick once-over. Let me know if you notice anything awry.

I plan to get Hardy and the subprojects done this weekend, do a final
round of testing, and copy everything over to the Twisted PPA.

-Jessica

2011/9/21 Jessica McKellar <jessica.mckellar at gmail.com>:
> Hi Alex,
>
> Thanks for checking in.
>
> https://launchpad.net/~twisted-dev/+archive/ppa/ has the results of
> some fumbling around with Natty and I have since moved the work to a
> personal PPA so it doesn't pollute the twisted archive while I test
> things.
>
> Expect All The Progress to be made this weekend now that some of my
> other commitments have come and gone. Anyone who already knows how to
> do this should feel free to swoop in and get the new release on
> launchpad, else I'll keep going at my snail's pace as I use this as an
> opportunity to learn the packaging ropes. :)
>
> -Jessica
>
> 2011/9/21 ??????? ??????????? <alex.kirp at gmail.com>:
>> Hi Jessica,
>>
>> Any luck with packaging?
>>
>> 2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
>>> Hi folks,
>>>
>>>> It would be nice if the ppa were up to date, though. ?Maybe someone who
>>>> knows how to update it can share that information so that someone who
>>>> has time to keep it up to date can take over the job.
>>>
>>> I would like to volunteer for this. I don't know much about packaging
>>> and this seems like a good opportunity to learn.
>>>
>>> If there are no objections, what I'll do is:
>>> a) learn more about the ideal Twisted PPA situation (if you have
>>> thoughts on what that should be, tell me)
>>> b) extract the existing Twisted PPA knowledge from people
>>> c) add a PPA maintenance job description to
>>> http://twistedmatrix.com/trac/wiki/ProjectJobs
>>> d) get started updating the PPA
>>>
>>> If anyone else wants to help I'm happy to share the duties.
>>>
>>> Regards,
>>> -Jessica
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>


From exarkun at twistedmatrix.com  Tue Sep 27 07:44:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Sep 2011 11:44:10 -0000
Subject: [Twisted-Python] How do I know the server from
	reactor.listenTCP	already started listening?
In-Reply-To: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
Message-ID: <20110927114410.2214.914887338.divmod.xquotient.133@localhost.localdomain>

On 08:33 am, a.libran at gmail.com wrote:
>When the call to listenTCP returns, is the server actively waiting for
>TCP connections?

Yes.

Jean-Paul
>
>Let's say reactor.run() has been called. Can I do the following back- 
>to-back?
>
>reactor.listenTCP(4321, serverfactory)
>reactor.connectTCP("localhost", 4321, clientfactory)
>
>Basically, I am almost starting a server and a client back-to-back
>that connects to each other. I would like to know if the server is in
>"listening" state before my client attempts to connect.
>
>Thanks.
>
>David Kao
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


From jrennie at gmail.com  Tue Sep 27 09:13:59 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 27 Sep 2011 09:13:59 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <CA+Pf4UC5g8fAJAc8yuS1wcES_=GXfB85n+Y2rQ+MruC6bVf0=g@mail.gmail.com>

Sounds like your project would be appropriate for twisted.  You'll have the
easiest time if the reading and writing can each be implemented as a
separate process (independent of other jobs on the machines).  Be sure to
read the following documentation:

http://twistedmatrix.com/documents/current/core/howto/servers.html
http://twistedmatrix.com/documents/current/core/howto/clients.html
http://twistedmatrix.com/documents/current/core/howto/defer.html

Here are references you'll likely make use of:

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html
http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

I wonder if using a ProcessProtocol (
http://twistedmatrix.com/documents/current/core/howto/process.html) with
"tail -f" would be an option for monitoring changes to the log(s)?  Though,
this may not be robust to failure (how to do you find the place where you
left off if the watching process dies unexpectedly?)  I'm not very familiar
with twisted file-related code, but, the "fdesc" module might be useful:

http://twistedmatrix.com/documents/current/api/twisted.internet.fdesc.html

Do any twisted experts have recommendations for monitoring changes to a
file?

Victor, let me suggest that you explore whether twisted can satisfy all your
requirements before you start coding as it is can be nontrivial to use
twisted with non-twisted-friendly libraries.

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/b4df6843/attachment-0001.htm 

From glyph at twistedmatrix.com  Tue Sep 27 19:19:30 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 27 Sep 2011 19:19:30 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>


On Sep 27, 2011, at 12:09 AM, Victor Hooi wrote:

> Hi,
> 
> We have several Solaris 10 running an application that generates large text logfiles
> 
> We need to stream these logfiles in realtime to a central monitoring server.
> 
> Unfortunately (for both technical and non-technical reasons), we can't use an NFS-mount. At the moment, we're using SSH with tail -f to stream the files from the servers to the monitoring box.
> 
> However, I was going to look at hacking a client/server up in Python to monitor for filesystem events, and then stream any updates.
> 
> In terms of filesystem monitoring, this is Solaris 10, so there's not really that much available it seems. Gamin seems to be the best bet, otherwise I might have to fallback to polling.
> 
> On the Twisted side, is the above something that's fairly easy to accomplish? I haven't used Twisted before, so I thought this might be a good excuse to learn it. Any thoughts or caveats I should be aware of? Any existing projects I might be able to leverage off? Good starting docs for this sort of thing?

Hi Victor,

This should be pretty easy to accomplish; this kind of thing is generally very straightforward using Twisted.  Obviously you'd have to implement a protocol for talking to Gamin, but I think the protocol involved is well-documented and very straightforward.

However, you should be aware that Solaris 10 is not currently a supported platform.  You can see the list of supported platforms along the left-hand side of this page: <http://buildbot.twistedmatrix.com/boxes-supported>.

The primary impediment to supporting Solaris is the lack of a buildbot that can tell us whether it works or not.  We don't even have an unsupported Solaris builder (see <http://buildbot.twistedmatrix.com/boxes-all> for all the currently running buildbots, including those which are known to fail).

Most likely, Twisted will work just fine on Solaris, since it's quite a lot like a lot of other platforms we do support, and especially we've recently improved support for various less popular UNIXes like the *BSD family.

Contributing a buildbot to Twisted is pretty easy though, and we can probably even supply the hardware for you (assuming that Solaris 10 can run happily in an x86[_64] qemu/kvm-style VM) if you'd just volunteer to install the OS and make sure it's configured properly.

Do you have any interest in helping us make Solaris a supported platform?

Thanks,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110927/ed91a6d5/attachment.htm 

From johan.rydberg at edgeware.tv  Wed Sep 28 02:34:00 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 28 Sep 2011 08:34:00 +0200
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
	<BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>
Message-ID: <4E82BFD8.5060203@edgeware.tv>

On 9/28/11 1:19 AM, Glyph Lefkowitz wrote:
> Hi Victor,
>
> This /should/ be pretty easy to accomplish; this kind of thing is 
> generally very straightforward using Twisted.  Obviously you'd have to 
> implement a protocol for talking to Gamin, but I think the protocol 
> involved is well-documented and very straightforward.
I would say that streaming logs in a _reliable_ fashion is a non-trivial 
problem.

If you want to make sure that you do not miss any log lines, you cannot 
simply just
push them over the connection.  You will never know what messages was 
received on the
other side after a loss of the connection.

That's why people have developed things like 
http://www.librelp.com/relp.html and
Scribe.

I guess it all depends on your requirements.

I would also like to point out that Twisted would be a perfect match for 
writing
such a thing.

-- 
Johan Rydberg
Product Designer

Edgeware AB
M?ster Samuelsgatan 56
SE-111 21 Stockholm, Sweden



From victorhooi at yahoo.com  Thu Sep 29 10:37:51 2011
From: victorhooi at yahoo.com (Victor Hooi)
Date: Fri, 30 Sep 2011 00:37:51 +1000
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>

heya,

Thanks to everybody for their replies =).

@Jason Rennie: Thanks for the links - I suspect there's going to be a bit of
a curve to me getting on board with Twisted =).

Still not sure if Twisted will satisfy all of my requirements, but I'll need
to do some more investigation.

However, what did you mean by it may be "nontrivial to use twisted with
non-twisted friendly libraries"? What would make a library non-Twisted
friendly?

Not sure what libraries we'll be depending on, but watchdog (
http://packages.python.org/watchdog/installation.html) might be just one
example.

@Glyph Lefkowitz: Aha, thanks for the headsup about Solaris. I probably
should have checked that myself...lol.

In terms of the buildbot, I'm not sure I'm the most suitable person. The
primary reason I use Solaris is because my workplace is partly a Solaris
shop - and even then, I have minimal contact with most sysadmin aspects of
it.

And my experience with OpenCSW and the awesome team there shows that some of
the quirks on the Solaris platform (particularly the older versions) can be
a pain to work around, and getting stuff to build cleanly on it can often be
non-trivial, at least if you're not experienced with the platform.

@Johan Rydberg: Reliable delivery is definitely an issue - one of the
production management guys today said "whatever you're hacking up, we want
to make sure we don't miss any lines."

The Scribe logging server you (https://github.com/facebook/scribe/wiki)
mentioned actually looks very interesting.

Another avenue I'm looking at the moment is RabbitMQ - the idea being I hook
up a pseudo "tail -f" in Python, and use that to publish
to a RabbitMQ instance. (I have little experience with messaging buses
before this - it's only something I'm learning about now, to be honest).

Then, I just get each application that needs to monitor log events to just
subscribe to the appropriate queue. The thing I like about this approach is
that it decouples the producers/consumers somewhat - we can have multiple
different applications spread across several monitoring boxes subscribing to
the same events. That, and I suspect it might scale a little bit better than
any slipshod job with Twisted I'm able to hack together in the time I have.
Thoughts?

Cheers,
Victor

On Tue, Sep 27, 2011 at 14:09, Victor Hooi <victorhooi at yahoo.com> wrote:

> Hi,
>
> We have several Solaris 10 running an application that generates large text
> logfiles
>
> We need to stream these logfiles in realtime to a central monitoring
> server.
>
> Unfortunately (for both technical and non-technical reasons), we can't use
> an NFS-mount. At the moment, we're using SSH with tail -f to stream the
> files from the servers to the monitoring box.
>
> However, I was going to look at hacking a client/server up in Python to
> monitor for filesystem events, and then stream any updates.
>
> In terms of filesystem monitoring, this is Solaris 10, so there's not
> really that much available it seems. Gamin seems to be the best bet,
> otherwise I might have to fallback to polling.
>
> On the Twisted side, is the above something that's fairly easy to
> accomplish? I haven't used Twisted before, so I thought this might be a good
> excuse to learn it. Any thoughts or caveats I should be aware of? Any
> existing projects I might be able to leverage off? Good starting docs for
> this sort of thing?
>
> Thanks,
> Victor
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110930/dd5c1297/attachment.htm 

From jrennie at gmail.com  Thu Sep 29 13:00:49 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Thu, 29 Sep 2011 13:00:49 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
	<CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>
Message-ID: <CA+Pf4UADmw0=NsVWmNa7Riu94ggEg9hDy-hV7nmMX29SXq-Lqg@mail.gmail.com>

On Thu, Sep 29, 2011 at 10:37 AM, Victor Hooi <victorhooi at yahoo.com> wrote:

> However, what did you mean by it may be "nontrivial to use twisted with
> non-twisted friendly libraries"? What would make a library non-Twisted
> friendly?
>

Most important, I think, is for non-reactor code to not block.  E.g. if
you're using a library to read from a database, the database library code
should release control between the time you make a request and the time the
library delivers the results of that request.  For example, a "nice" request
call might have a callback argument and return immediately, triggering the
callback when results are ready.

Note that if you *must* use a library which is blocking, a possible solution
is to execute the blocking code in a thread.  But, this isn't easy to get
right and the python GIL can cause problems if you need a lot of threads.

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/6d94d08e/attachment.htm 

From deldotdr at gmail.com  Thu Sep 29 17:28:50 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 14:28:50 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
Message-ID: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>

Hello,

I am confused about how the FingerService gets started in the
finger/finger.py makeService function. It is never assigned a service parent
and it can't service getUser requests if its startService method isn't
called; you get an AttributeError: "no attribute 'users'" the way it works
now. Is this a bug?

The most sensible thing, in this case, seems to be setting the
FingerServiceparent to be the
MultiService container that all of the interent services are added to in the
makeService function. Is that correct?

I'm wondering if their are any other strategies people use for starting
non-internet services.
For instance, if instead of reading a file to get to my user db, I might
want to start a redis client and read from redis to service a getUser call.
But that means I'd want to make sure the startService call succeeded (the
redis connection was made) before one of the internet services tries to use
the FingerService (a timing problem that doesn't exist when just reading a
file)...or something. Maybe I'm really just wondering how the twisted
application framework handles exceptions that occur for startService calls.
Maybe I need something else to handle that kind of thing?

I'm also wondering if it's ever a good idea to make a extension of
ServerFactory (that adapts a Service) that calls Service.startService
when Factory.startServer
is called (and Service.stopService when Factory.stopFactory is called)?

And I'm looking for more use cases/projects (beyond the finger tutorial)
that really showcase the twisted application framework. Any references would
be appreciated!

Thanks!
-Dorian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/695dc7a3/attachment.htm 

From a.libran at gmail.com  Thu Sep 29 17:44:51 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 05:44:51 +0800
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
Message-ID: <CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>

I'll take care of the first question.


From deldotdr at gmail.com  Thu Sep 29 18:10:03 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 15:10:03 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
Message-ID: <CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>

On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:

> I'll take care of the first question.
>
> From The Evolution of Finger: making a finger library,
>
> h = internet.TCPServer(79, IFingerFactory(f))
>
> notice IFingerFactory? If you read the earlier parts of the tutorial,
> you'll see stuff like components.registerAdapter. It's just magic to
> create a FingerFactoryFromService, giving its constructor f, the
> "Finger Service". What happens here is that "f", the Finger Service,
> is different from the service.Service within the Twisted Framework.
>

The FingerService inherits service.Service and implements the
startServiceevent, so it *is* a service that can be run by the service
framework; it
just isn't one of the twisted.application.internet services, like
internet.TCPServer.
Moreover, it needs to have startService called, somehow... and what I'm
saying is that in the full example (provided in
 twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it is not
called, and if you actually try using it, it doesn't work.


You might as well call "f", the Finger Service, "Finger Shared Data".
>
> What really happens here is
>
> h is the service that has parent s, MultiService. s is then returned
> and started by the application.
>
> h contains a factory that gets run.
>
> The factory knows "f", the Finger Service, which has nothing to do
> with twisted's mechanism. It's more of a demo for the component based
> framework. f is a way to share data and methods and states across
> multiple factories.
>
> I am also very new to twisted, so I **hope** this understanding of
> mine is correct ...
>
> I strongly recommend you read through the entire tutorial. They build
> very incrementally, so most of the time the code is repeated so you
> can just skim through it if you had started from the beginning.
>

I've read it many times over the years ;) It's surprisingly complete as an
example...you just don't know that in the beginning.

The topic area of this question is something I'm trying to squeeze out of
this tutorial series; I'm encountering conceptual questions beyond the
mechanics of how the framework works (which the tutorial does a great job of
explaining) like:
should I ever make a tree of dependent services?
What if I do something in a startService method that I want to make sure
works before other services get their startService called?
If I create a bunch of business services (that just provide pure
functionality) that I then adapt for deployment in different t.a.internet
services, should I put the business services in their own MultiService and
the internet services in their own MutiService container?

Like I said, more showcasing of use cases would help suggest answers to
these kind of questions. I see a lot of possibilities, but haven't put in
the time in the trenches to try them all out ;)

Thanks,
-Dorian



> David Kao
>
>
>
> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> > Hello,
> > I am confused about how the FingerService gets started in the
> > finger/finger.py makeService function. It is never assigned a service
> parent
> > and it can't service getUser requests if its startService method isn't
> > called; you get an AttributeError: "no attribute 'users'" the way it
> works
> > now. Is this a bug?
> > The most sensible thing, in this case, seems to be setting the
> FingerService
> > parent to be the MultiService container that all of the interent services
> > are added to in the makeService function. Is that correct?
> > I'm wondering if their are any other strategies people use for starting
> > non-internet services.
> > For instance, if instead of reading a file to get to my user db, I might
> > want to start a redis client and read from redis to service a getUser
> call.
> > But that means I'd want to make sure the startService call succeeded (the
> > redis connection was made) before one of the internet services tries to
> use
> > the FingerService (a timing problem that doesn't exist when just reading
> a
> > file)...or something. Maybe I'm really just wondering how the twisted
> > application framework handles exceptions that occur for startService
> calls.
> > Maybe I need something else to handle that kind of thing?
> > I'm also wondering if it's ever a good idea to make a extension
> > of ServerFactory (that adapts a Service) that calls Service.startService
> > when Factory.startServer is called (and Service.stopService when
> > Factory.stopFactory is called)?
> > And I'm looking for more use cases/projects (beyond the finger tutorial)
> > that really showcase the twisted application framework. Any references
> would
> > be appreciated!
> > Thanks!
> > -Dorian
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/3313469e/attachment-0001.htm 

From a.libran at gmail.com  Thu Sep 29 18:23:42 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 06:23:42 +0800
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
	<CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
Message-ID: <CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>

On Fri, Sep 30, 2011 at 6:10 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
>
>
> On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> I'll take care of the first question.
>>
>> From The Evolution of Finger: making a finger library,
>>
>> h = internet.TCPServer(79, IFingerFactory(f))
>>
>> notice IFingerFactory? If you read the earlier parts of the tutorial,
>> you'll see stuff like components.registerAdapter. It's just magic to
>> create a FingerFactoryFromService, giving its constructor f, the
>> "Finger Service". What happens here is that "f", the Finger Service,
>> is different from the service.Service within the Twisted Framework.
>
> The FingerService inherits service.Service and implements the startService
> event, so it *is* a service that can be run by the service framework; it
> just isn't one of the twisted.application.internet services, like
> internet.TCPServer.
> Moreover, it needs to have startService called, somehow... and what I'm
> saying is that in the full example (provided
> in?twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it is
> not called, and if you actually try using it, it doesn't work.
>

Yes you are right. It's just the two concepts (adapter and service)
are different but are presented together. In this case, it happens
that FingerService needs initialization, and that initialization is
usually done via startService, which, I agree, isn't called. And it's
funky here because you don't want FingerService to be the service
here, because it doesn't know how to listen to TCP. bahhh ... yea the
example is not super great. It seems like you understand the examples
anyways.


>>
>> You might as well call "f", the Finger Service, "Finger Shared Data".
>>
>> What really happens here is
>>
>> h is the service that has parent s, MultiService. s is then returned
>> and started by the application.
>>
>> h contains a factory that gets run.
>>
>> The factory knows "f", the Finger Service, which has nothing to do
>> with twisted's mechanism. It's more of a demo for the component based
>> framework. f is a way to share data and methods and states across
>> multiple factories.
>>
>> I am also very new to twisted, so I **hope** this understanding of
>> mine is correct ...
>>
>> I strongly recommend you read through the entire tutorial. They build
>> very incrementally, so most of the time the code is repeated so you
>> can just skim through it if you had started from the beginning.
>
> I've read it many times over the years ;) It's?surprisingly complete as an
> example...you just don't know that in the beginning.
> The topic area of this question is something I'm trying to squeeze out of
> this tutorial series; I'm encountering conceptual questions beyond the
> mechanics of how the framework works (which the tutorial does a great job of
> explaining) like:
> should I ever make a tree of?dependent?services?
> What if I do something in a startService method that I want to make sure
> works before other services get their startService called?
> If I create a bunch of business services (that just provide pure
> functionality) that I then adapt for deployment in different t.a.internet
> services, should I put the business services in their own MultiService and
> the internet services in their own MutiService container?
> Like I said, more showcasing of use cases would help suggest answers to
> these kind of questions. I see a lot of possibilities, but haven't put in
> the time in the trenches to try them all out ;)
> Thanks,
> -Dorian
>

Totally agree with your suggestion.

I have the exact same problem here. In the end I just start doing
things using reactor.listenTCP and forget about services since it
isn't clear in the docs the order in which services are started. I
sort of use one big setup service as "Main()", and then do my own
hooks using "fake service" inside each factory, and the call
reactor.listenTCP on those factories.

It might just be services are meant to be really independent and
parallel to each other. I dunno ... I'll let the veterans speak now.

>>
>> David Kao
>>
>>
>>
>> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
>> > Hello,
>> > I am confused about how the FingerService gets started in the
>> > finger/finger.py makeService function. It is never assigned a service
>> > parent
>> > and it can't service getUser requests if its startService method isn't
>> > called; you get an AttributeError:?"no attribute 'users'" the way it
>> > works
>> > now. Is this a bug?
>> > The most sensible thing, in this case, seems to be setting the
>> > FingerService
>> > parent to be the MultiService container that all of the interent
>> > services
>> > are added to in the makeService function.?Is that correct?
>> > I'm wondering if their are any other?strategies people use for starting
>> > non-internet services.
>> > For instance, if instead of reading a file to get to my user db, I might
>> > want to start a redis client and read from redis to service a getUser
>> > call.
>> > But that means I'd want to make sure the startService?call succeeded
>> > (the
>> > redis connection was made) before one of the internet services tries to
>> > use
>> > the FingerService (a timing problem that doesn't exist when just reading
>> > a
>> > file)...or something. Maybe I'm really just wondering how the twisted
>> > application framework handles exceptions that occur for startService
>> > calls.
>> > Maybe I need something else to handle that kind of thing?
>> > I'm also wondering if it's ever a good idea to make a extension
>> > of?ServerFactory?(that adapts a Service)?that calls?Service.startService
>> > when Factory.startServer is called (and Service.stopService when
>> > Factory.stopFactory is called)?
>> > And I'm looking for more use cases/projects (beyond the finger tutorial)
>> > that really showcase the twisted application framework. Any references
>> > would
>> > be appreciated!
>> > Thanks!
>> > -Dorian
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From deldotdr at gmail.com  Thu Sep 29 18:41:58 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 15:41:58 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
	<CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
	<CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>
Message-ID: <CALUPC+F6fCd_8jm+86KQ=Nq-no4681Z2igmkVd=Qun21Q24CbA@mail.gmail.com>

On Thu, Sep 29, 2011 at 3:23 PM, David Kao <a.libran at gmail.com> wrote:

> On Fri, Sep 30, 2011 at 6:10 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> >
> >
> > On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:
> >>
> >> I'll take care of the first question.
> >>
> >> From The Evolution of Finger: making a finger library,
> >>
> >> h = internet.TCPServer(79, IFingerFactory(f))
> >>
> >> notice IFingerFactory? If you read the earlier parts of the tutorial,
> >> you'll see stuff like components.registerAdapter. It's just magic to
> >> create a FingerFactoryFromService, giving its constructor f, the
> >> "Finger Service". What happens here is that "f", the Finger Service,
> >> is different from the service.Service within the Twisted Framework.
> >
> > The FingerService inherits service.Service and implements the
> startService
> > event, so it *is* a service that can be run by the service framework; it
> > just isn't one of the twisted.application.internet services, like
> > internet.TCPServer.
> > Moreover, it needs to have startService called, somehow... and what I'm
> > saying is that in the full example (provided
> > in twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it
> is
> > not called, and if you actually try using it, it doesn't work.
> >
>
> Yes you are right. It's just the two concepts (adapter and service)
> are different but are presented together. In this case, it happens
> that FingerService needs initialization, and that initialization is
> usually done via startService, which, I agree, isn't called. And it's
> funky here because you don't want FingerService to be the service
> here, because it doesn't know how to listen to TCP. bahhh ... yea the
> example is not super great. It seems like you understand the examples
> anyways.
>
>
> >>
> >> You might as well call "f", the Finger Service, "Finger Shared Data".
> >>
> >> What really happens here is
> >>
> >> h is the service that has parent s, MultiService. s is then returned
> >> and started by the application.
> >>
> >> h contains a factory that gets run.
> >>
> >> The factory knows "f", the Finger Service, which has nothing to do
> >> with twisted's mechanism. It's more of a demo for the component based
> >> framework. f is a way to share data and methods and states across
> >> multiple factories.
> >>
> >> I am also very new to twisted, so I **hope** this understanding of
> >> mine is correct ...
> >>
> >> I strongly recommend you read through the entire tutorial. They build
> >> very incrementally, so most of the time the code is repeated so you
> >> can just skim through it if you had started from the beginning.
> >
> > I've read it many times over the years ;) It's surprisingly complete as
> an
> > example...you just don't know that in the beginning.
> > The topic area of this question is something I'm trying to squeeze out of
> > this tutorial series; I'm encountering conceptual questions beyond the
> > mechanics of how the framework works (which the tutorial does a great job
> of
> > explaining) like:
> > should I ever make a tree of dependent services?
> > What if I do something in a startService method that I want to make sure
> > works before other services get their startService called?
> > If I create a bunch of business services (that just provide pure
> > functionality) that I then adapt for deployment in different t.a.internet
> > services, should I put the business services in their own MultiService
> and
> > the internet services in their own MutiService container?
> > Like I said, more showcasing of use cases would help suggest answers to
> > these kind of questions. I see a lot of possibilities, but haven't put in
> > the time in the trenches to try them all out ;)
> > Thanks,
> > -Dorian
> >
>
> Totally agree with your suggestion.
>
> I have the exact same problem here. In the end I just start doing
> things using reactor.listenTCP and forget about services since it
> isn't clear in the docs the order in which services are started. I
> sort of use one big setup service as "Main()", and then do my own
> hooks using "fake service" inside each factory, and the call
> reactor.listenTCP on those factories.
>
> Cool, yeah I do similar things as well.


> It might just be services are meant to be really independent and
> parallel to each other. I dunno ... I'll let the veterans speak now.
>
> Yeah, there is definitely a lot of value in keeping the
transport enabling services separate from the functional services. Keeping
them independent and parallel seems like the better way to go. Maybe my
misunderstanding is what the scope of Twisted Services was intended to
be...Up to now, I've been thinking about designing applications that use
Twisted Services for both pure business functionality AND for things that
provide network transport. I briefly looked at how erlang/OTP handles
starting dependencies in apps. The rabbitmq app blocks/waits for each major
component to start (which would be like a Twisted Service.startService
returning a Deferred). I guess this is just a hard problem, or maybe I'm
missing a concept.

Thanks,
-Dorian



> >>
> >> David Kao
> >>
> >>
> >>
> >> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com>
> wrote:
> >> > Hello,
> >> > I am confused about how the FingerService gets started in the
> >> > finger/finger.py makeService function. It is never assigned a service
> >> > parent
> >> > and it can't service getUser requests if its startService method isn't
> >> > called; you get an AttributeError: "no attribute 'users'" the way it
> >> > works
> >> > now. Is this a bug?
> >> > The most sensible thing, in this case, seems to be setting the
> >> > FingerService
> >> > parent to be the MultiService container that all of the interent
> >> > services
> >> > are added to in the makeService function. Is that correct?
> >> > I'm wondering if their are any other strategies people use for
> starting
> >> > non-internet services.
> >> > For instance, if instead of reading a file to get to my user db, I
> might
> >> > want to start a redis client and read from redis to service a getUser
> >> > call.
> >> > But that means I'd want to make sure the startService call succeeded
> >> > (the
> >> > redis connection was made) before one of the internet services tries
> to
> >> > use
> >> > the FingerService (a timing problem that doesn't exist when just
> reading
> >> > a
> >> > file)...or something. Maybe I'm really just wondering how the twisted
> >> > application framework handles exceptions that occur for startService
> >> > calls.
> >> > Maybe I need something else to handle that kind of thing?
> >> > I'm also wondering if it's ever a good idea to make a extension
> >> > of ServerFactory (that adapts a Service) that
> calls Service.startService
> >> > when Factory.startServer is called (and Service.stopService when
> >> > Factory.stopFactory is called)?
> >> > And I'm looking for more use cases/projects (beyond the finger
> tutorial)
> >> > that really showcase the twisted application framework. Any references
> >> > would
> >> > be appreciated!
> >> > Thanks!
> >> > -Dorian
> >> > _______________________________________________
> >> > Twisted-Python mailing list
> >> > Twisted-Python at twistedmatrix.com
> >> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >> >
> >> >
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/fa589ee7/attachment.htm 

From croepha at gmail.com  Thu Sep 29 23:41:47 2011
From: croepha at gmail.com (Croepha)
Date: Thu, 29 Sep 2011 22:41:47 -0500
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <1308587021.18253.57.camel@behemoth>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
	<1308587021.18253.57.camel@behemoth>
Message-ID: <CANm61jcvHuHVias02VPMNYeQ6PhuNSaK5WkF8e2jByS7r100sQ@mail.gmail.com>

On Mon, Jun 20, 2011 at 11:23 AM, Luke Marsden <
luke-lists at hybrid-logic.co.uk> wrote:

> On Mon, 2011-06-20 at 11:09 -0400, Glyph Lefkowitz wrote:
> > On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:
> > > On 20/06/11 11:29, Orestis Markou wrote:
> > >> It might be there's no way to do guarantee something like that, so it
> > >> might be just that everyone should be careful about this.
> > >
> > > I don't think you can stop callers of a function doing silly things
> with
> > > the return value.
> >
> > +1.  The best way to deal with this is to make your APIs nice and
> > simple, and their implementation straightforward.  If you try to do
> > weird tricks to make callbacks on your Deferreds cooperative, then you
> > might break an otherwise reasonable strategy on the part of the client
> > code to be well-behaved on their part.
> >
> > For the code that is itself trying to be well-behaved, there are
> > things like twisted.internet.task.cooperate.
>
> There might not be any way to stop consumers of your Deferreds executing
> blocking operations, but when trying to track down which pieces of code
> are the culprits, I found exarkun's BigTimesliceTimer very useful:
>
> http://twistedmatrix.com/trac/browser/sandbox/exarkun/btt.py


On that note, I made an updated version of the btt:
http://pastebin.com/uBbSuDr6

I know i'm digging up ancient history here, but I thought it was relevant


>
> It uses a reactor-independent timing mechanism (the setitimer sigcall on
> Linux, contact me if you want the FreeBSD version) to set an alarm which
> the reactor then has to "race" to unset, else the itimer handler gets
> pre-emptively executed.  When the alarm runs, it prints a traceback of
> the current execution point in the "client" code.  By setting the alarm
> frequency sufficiently low and by watching for sufficiently long you can
> "sample" the code which is running while the reactor is blocked.  Code
> paths which show up frequently are therefore *more likely* to be the
> culprits.
>
> One day it would be nice to turn this into some kind of statistical tool
> for highlighting which code paths are the "hot-spots" in your code, so
> that you can optimise the "blockiest" bits first.  Premature
> optimisation, etc.
>
> Hope this helps; it helped me :-)
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/24cb5fc1/attachment-0001.htm 

From glyph at twistedmatrix.com  Thu Sep 29 23:52:52 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 29 Sep 2011 23:52:52 -0400
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
Message-ID: <9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>


On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:

> This strikes me as a bug.  Can you file a new ticket for this?

Since we didn't hear back about this, I filed <http://twistedmatrix.com/trac/ticket/5287>.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20110929/60f089c2/attachment.htm 

From a.libran at gmail.com  Fri Sep 30 00:05:51 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 12:05:51 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
Message-ID: <CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>

My bad. I filed

http://twistedmatrix.com/trac/ticket/5274

You can close either.

David Kao



On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>
> This strikes me as a bug. ?Can you file a new ticket for this?
>
> Since we didn't hear back about this, I filed
> <http://twistedmatrix.com/trac/ticket/5287>.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


From a.libran at gmail.com  Fri Sep 30 00:22:24 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 12:22:24 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
	<CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
Message-ID: <CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>

OK I marked mine as duplicate. I think yours seem like a better
description anyways.

David Kao



On Fri, Sep 30, 2011 at 12:05 PM, David Kao <a.libran at gmail.com> wrote:
> My bad. I filed
>
> http://twistedmatrix.com/trac/ticket/5274
>
> You can close either.
>
> David Kao
>
>
>
> On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
> <glyph at twistedmatrix.com> wrote:
>>
>> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>>
>> This strikes me as a bug. ?Can you file a new ticket for this?
>>
>> Since we didn't hear back about this, I filed
>> <http://twistedmatrix.com/trac/ticket/5287>.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>


From glyph at twistedmatrix.com  Fri Sep 30 01:18:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 30 Sep 2011 01:18:59 -0400
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
	<CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
	<CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>
Message-ID: <9954A4D7-21EE-47DE-9BA5-8F7EF9193A9F@twistedmatrix.com>

Wish I'd noticed yours first - thanks for filing it!  But yeah, I think my description was a bit more descriptive.

On Sep 30, 2011, at 12:22 AM, David Kao wrote:

> OK I marked mine as duplicate. I think yours seem like a better
> description anyways.
> 
> David Kao
> 
> 
> 
> On Fri, Sep 30, 2011 at 12:05 PM, David Kao <a.libran at gmail.com> wrote:
>> My bad. I filed
>> 
>> http://twistedmatrix.com/trac/ticket/5274
>> 
>> You can close either.
>> 
>> David Kao
>> 
>> 
>> 
>> On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
>> <glyph at twistedmatrix.com> wrote:
>>> 
>>> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>>> 
>>> This strikes me as a bug.  Can you file a new ticket for this?
>>> 
>>> Since we didn't hear back about this, I filed
>>> <http://twistedmatrix.com/trac/ticket/5287>.
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>> 
>>> 
>> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From zooko at zooko.com  Fri Sep 30 22:43:31 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Fri, 30 Sep 2011 20:43:31 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
	<CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>
Message-ID: <CANdZDc62=K+5L=Lhb7B5DaKmdnb1Hu6jewNQd6Cr8iq3eyi=gQ@mail.gmail.com>

Hi, I actually have contributed a few small patches to Twisted. I've
attempted to contribute a few more which never made it in. I intend to
contribute more in the future.

I prefer launchpad over github because of its issue tracker,
especially the ability to crosslink issues which affect more than one
project or distribution. Also because the launchpad implementation is
open source.

But, I'll be happy to use whatever you folks want.

Regards,

Zooko


From mithrandi at mithrandi.net  Sat Sep  3 11:26:22 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Sat, 3 Sep 2011 19:26:22 +0200
Subject: [Twisted-Python] [ANN] Pyflakes 0.5.0
Message-ID: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

It is my unexpected pleasure to announce the release of Pyflakes
0.5.0, the first release in several years, and available now from
PyPI[1].

Highlights of this release include the use of the built-in AST instead
of the compiler module, and support for various new syntax constructs
in Python 2.7. Note that development of Pyflakes (as well as the other
divmod.org projects) has moved to Launchpad[2] since the last release.

[1] http://pypi.python.org/packages/source/p/pyflakes/pyflakes-0.5.0.tar.gz#md5=568dab27c42e5822787aa8a603898672

[2] https://launchpad.net/pyflakes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.18 (GNU/Linux)

iQIcBAEBCgAGBQJOYmL+AAoJEFjA+xzeO3YAme4P/AxLuy0WJN2zG97my1oEwky9
VT79BwnxOqR4NB7I1dRKE3PG4Llgl6frAa0SouM12Dr0QZj9Ug3qHAmmf+TZFrF6
OIQcBUGkZW7EanBhCbjmfqo+0atJ8toAcj9uyF7Db/0A7gCDw160JIMnmTmxu8z6
3r5xRLNSnxs4jj6OSViv9oHNs2r2lpU/RObkGXy6EHxMgezYqw84FbA61fxquK4p
+J1n++vzfiasqgcQFFU3R67T0P2gWUe0C6pv/D+CurSCOdgQJv4LeRtNeYgKhw/W
rN0/3cERXGyRMa4JYDbFyP2G8lrpOuWo2F+jFtEGAxgziK8EqCK58ZSeqMBsodJ9
slAZobSQkrUj6GfpNKdW5mjYRqymBmUhPFc+sUI2poGb3zvMnWmUa2tiSfwl9uxO
9Di82XXAztKba8++cGJQCbuONiLRPgW5kArz5dRz3jFVdAZYL7xUvah4uznwfazc
CA8Q0tiXXoL7X1sT6heNu4VRtnJfEh5LojFdizA4nJEpNssZrPFkSZMv+eSR4Sow
8u2n4f07od6EBzHMhEyqFN7goaniW05VL+EvMdC5px+brnyKOIoLSAGWptBL5EYL
aaAb2zRrebyr/u5vGa+sKEXcoW2TEsc9qO8p/nNSetcoIcNfDwnd3cdyJPU+lYbn
Wctc68Y+xNWChiuTYa3e
=kKgi
-----END PGP SIGNATURE-----



From glyph at twistedmatrix.com  Sat Sep  3 13:51:48 2011
From: glyph at twistedmatrix.com (Glyph)
Date: Sat, 03 Sep 2011 15:51:48 -0400
Subject: [Twisted-Python] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
Message-ID: <4E628554.3040501@twistedmatrix.com>

Thanks, Tristan!  Great to see that maintenance is continuing :).

(Now, off to upgrade Pyflakes everywhere...)

On 09/03/2011 01:26 PM, Tristan Seligmann wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> It is my unexpected pleasure to announce the release of Pyflakes
> 0.5.0, the first release in several years, and available now from
> PyPI[1].
>
> Highlights of this release include the use of the built-in AST instead
> of the compiler module, and support for various new syntax constructs
> in Python 2.7. Note that development of Pyflakes (as well as the other
> divmod.org projects) has moved to Launchpad[2] since the last release.
>
> [1] http://pypi.python.org/packages/source/p/pyflakes/pyflakes-0.5.0.tar.gz#md5=568dab27c42e5822787aa8a603898672
>
> [2] https://launchpad.net/pyflakes
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.18 (GNU/Linux)
>
> iQIcBAEBCgAGBQJOYmL+AAoJEFjA+xzeO3YAme4P/AxLuy0WJN2zG97my1oEwky9
> VT79BwnxOqR4NB7I1dRKE3PG4Llgl6frAa0SouM12Dr0QZj9Ug3qHAmmf+TZFrF6
> OIQcBUGkZW7EanBhCbjmfqo+0atJ8toAcj9uyF7Db/0A7gCDw160JIMnmTmxu8z6
> 3r5xRLNSnxs4jj6OSViv9oHNs2r2lpU/RObkGXy6EHxMgezYqw84FbA61fxquK4p
> +J1n++vzfiasqgcQFFU3R67T0P2gWUe0C6pv/D+CurSCOdgQJv4LeRtNeYgKhw/W
> rN0/3cERXGyRMa4JYDbFyP2G8lrpOuWo2F+jFtEGAxgziK8EqCK58ZSeqMBsodJ9
> slAZobSQkrUj6GfpNKdW5mjYRqymBmUhPFc+sUI2poGb3zvMnWmUa2tiSfwl9uxO
> 9Di82XXAztKba8++cGJQCbuONiLRPgW5kArz5dRz3jFVdAZYL7xUvah4uznwfazc
> CA8Q0tiXXoL7X1sT6heNu4VRtnJfEh5LojFdizA4nJEpNssZrPFkSZMv+eSR4Sow
> 8u2n4f07od6EBzHMhEyqFN7goaniW05VL+EvMdC5px+brnyKOIoLSAGWptBL5EYL
> aaAb2zRrebyr/u5vGa+sKEXcoW2TEsc9qO8p/nNSetcoIcNfDwnd3cdyJPU+lYbn
> Wctc68Y+xNWChiuTYa3e
> =kKgi
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From exarkun at twistedmatrix.com  Sat Sep  3 22:05:21 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 04 Sep 2011 04:05:21 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1315109121.55.1286103592@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110904/a6d87b16/attachment-0001.html>

From jeff at ocjtech.us  Sun Sep  4 22:59:46 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Sun, 4 Sep 2011 23:59:46 -0500
Subject: [Twisted-Python] Announcing txdnspython
Message-ID: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>

To scratch a particular itch I had, I created txdnspython, a way to
send DNS messages created using dnspython using Twisted's asynchronous
networking:

https://github.com/jcollie/txdnspython

I'd love to hear any comments or suggestions that you may have on the code.

-- 
Jeff Ollie



From jml at mumak.net  Mon Sep  5 03:19:27 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 10:19:27 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
Message-ID: <CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>

On Sat, Sep 3, 2011 at 6:26 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA512
>
> It is my unexpected pleasure to announce the release of Pyflakes
> 0.5.0, the first release in several years, and available now from
> PyPI[1].
>

Thanks!

> Note that development of Pyflakes (as well as the other
> divmod.org projects) has moved to Launchpad[2] since the last release.
>
...
> [2] https://launchpad.net/pyflakes

Which branch is the trunk branch? Which branch did you release from?

I ask because I've had a fully tested, partially reviewed branch
waiting to land since December last year, and I'm very keen to see it
landed. I was under the impression that Jean-Paul would get around to
it at some point.

Thanks again for releasing Pyflakes. Sorry to pounce all over you with
questions.

jml



From mithrandi at mithrandi.net  Mon Sep  5 06:04:22 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 Sep 2011 14:04:22 +0200
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
Message-ID: <CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>

On Mon, Sep 5, 2011 at 11:19 AM, Jonathan Lange <jml at mumak.net> wrote:
> Which branch is the trunk branch? Which branch did you release from?

The trunk branch (for all the divmod.org projects) is <lp:divmod.org>;
the release branch for this particular release is
<lp:~divmod-dev/divmod.org/release-pyflakes-0.5.0>.

> I ask because I've had a fully tested, partially reviewed branch
> waiting to land since December last year, and I'm very keen to see it
> landed. I was under the impression that Jean-Paul would get around to
> it at some point.

I wasn't aware of this; could you point me in the direction of this
branch? I can't promise to do anything about it right away, but if we
can get it landed, then at least it shouldn't take another three years
to get it released :)

> Thanks again for releasing Pyflakes. Sorry to pounce all over you with
> questions.

No problem.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From jml at mumak.net  Mon Sep  5 06:30:29 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 13:30:29 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
Message-ID: <CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>

On Mon, Sep 5, 2011 at 1:04 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
> On Mon, Sep 5, 2011 at 11:19 AM, Jonathan Lange <jml at mumak.net> wrote:
>> Which branch is the trunk branch? Which branch did you release from?
>
> The trunk branch (for all the divmod.org projects) is <lp:divmod.org>;
> the release branch for this particular release is
> <lp:~divmod-dev/divmod.org/release-pyflakes-0.5.0>.
>

Ahh, I see. The projects haven't been split into separate repositories (yet?).

That's going to cause a little bit of confusion, given that projects
like <https://launchpad.net/pyflakes> exist. Perhaps a good idea for
now is to seize pyflakes & any projects like it, move all of their
bugs to https://launchpad.net/divmod.org and update any text to point
to that project.

>> I ask because I've had a fully tested, partially reviewed branch
>> waiting to land since December last year, and I'm very keen to see it
>> landed. I was under the impression that Jean-Paul would get around to
>> it at some point.
>
> I wasn't aware of this; could you point me in the direction of this
> branch? I can't promise to do anything about it right away, but if we
> can get it landed, then at least it shouldn't take another three years
> to get it released :)
>

The branch is <lp:~jml/pyflakes/duplicate-class-defs>, linked from
<https://code.launchpad.net/pyflakes/+activereviews>.

There was a ticket for it in the divmod tracker with review
conversation, but I've lost track of it. Sorry.

cheers,
jml



From mithrandi at mithrandi.net  Mon Sep  5 06:38:08 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Mon, 5 Sep 2011 14:38:08 +0200
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
Message-ID: <CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>

On Mon, Sep 5, 2011 at 2:30 PM, Jonathan Lange <jml at mumak.net> wrote:
> Ahh, I see. The projects haven't been split into separate repositories (yet?).

Apparently this is difficult to do while still preserving history. I
wasn't involved in the actual svn -> bzr conversion, so I can't really
elaborate on the reasons for that.

> That's going to cause a little bit of confusion, given that projects
> like <https://launchpad.net/pyflakes> exist. Perhaps a good idea for
> now is to seize pyflakes & any projects like it, move all of their
> bugs to https://launchpad.net/divmod.org and update any text to point
> to that project.

As I understand it, the idea is to keep the multiple projects in order
to differentiate bugs instead of having them all lumped together. If
you think there's a better way of doing that, perhaps you could expand
on that, and JP / Glyph can weigh in with the original reasoning on
the way it is currently.

> The branch is <lp:~jml/pyflakes/duplicate-class-defs>, linked from
> <https://code.launchpad.net/pyflakes/+activereviews>.
>
> There was a ticket for it in the divmod tracker with review
> conversation, but I've lost track of it. Sorry.

The divmod tracker has also lost track of it, due to the Trac DB
corruption, so that sorta sucks :/

The branch is constructed in a way that (I believe) can't be merged
into the "combined" trunk, so I guess the first step is to rebuild it
on top of the divmod.org repo, and then put it up for merge on
Launchpad. I'll see what I can do about that, even if I can't promise
you a review.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From jml at mumak.net  Mon Sep  5 06:56:01 2011
From: jml at mumak.net (Jonathan Lange)
Date: Mon, 5 Sep 2011 13:56:01 +0100
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
Message-ID: <CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>

On Mon, Sep 5, 2011 at 1:38 PM, Tristan Seligmann
<mithrandi at mithrandi.net> wrote:
...
> The branch is constructed in a way that (I believe) can't be merged
> into the "combined" trunk, so I guess the first step is to rebuild it
> on top of the divmod.org repo, and then put it up for merge on
> Launchpad. I'll see what I can do about that, even if I can't promise
> you a review.

I can take care of the "rebuilding" part.

Thanks,
jml



From glyph at twistedmatrix.com  Mon Sep  5 17:29:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 5 Sep 2011 16:29:32 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
Message-ID: <A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>


On Sep 4, 2011, at 9:59 PM, Jeffrey Ollie wrote:

> To scratch a particular itch I had, I created txdnspython, a way to
> send DNS messages created using dnspython using Twisted's asynchronous
> networking:
> 
> https://github.com/jcollie/txdnspython
> 
> I'd love to hear any comments or suggestions that you may have on the code.

Cool!

I have 3 questions:

Can you register your project on Launchpad so that you can add it to <https://launchpad.net/tx>?  There's a link at the bottom of that page that says "Register a project in tx", it should only take a minute.

(This is not a comment on Github; launchpad is just where we host the list.  You do NOT need to host your project's code on Launchpad just to have it registered there; for example, Twisted is registered as <https://launchpad.net/twisted> but it is hosted on twistedmatrix.com.)

Why was twisted.names insufficient?  What kind of stuff does dnspython do that twisted.names doesn't?  It would be useful to list these enhancements in your README so that users can judge if they need it.  In other words: what was the itch that lead to its creation?

It might be neat to provide an IResolverSimple <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IResolverSimple.html> implementation with your code so that applications which want to use DNSPython can switch Twisted's name resolution to use it rather than a threadpool, with IReactorPluggableResolver.installResolver <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver>.

Thanks for the announcement!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110905/1ee677a2/attachment.html>

From jeff at ocjtech.us  Mon Sep  5 18:45:06 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 5 Sep 2011 19:45:06 -0500
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
Message-ID: <CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>

On Mon, Sep 5, 2011 at 6:29 PM, Glyph Lefkowitz <glyph at twistedmatrix.com> wrote:
>
> Can you register your project on Launchpad so that you can add it to
> <https://launchpad.net/tx>?  There's a link at the bottom of that page that
> says "Register a project in tx", it should only take a minute.

Done.

> Why was twisted.names insufficient?  What kind of stuff does dnspython do
> that twisted.names doesn't?  It would be useful to list these enhancements
> in your README so that users can judge if they need it.  In other words:
> what was the itch that lead to its creation?

The main reason was to be able to do secure dynamic DNS updates.
AFAICS there isn't support in twisted.names for that.  I suppose I
should have included an example, but to do secure updates you have to
cryptographically sign the DNS packets, plus you need to control the
DNS server etc.  The 3rd example at
http://www.dnspython.org/examples.html is a non-working example
(non-working because of the fake encryption key).

Sometime in the near future I'll need some DNSSEC support, but that
project is still a little half-baked so things may change.

Enhancing the README as you suggest is an excellent idea - more
projects need that sort of information.

> It might be neat to provide an IResolverSimple
> <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IResolverSimple.html>
> implementation with your code so that applications which want to use
> DNSPython can switch Twisted's name resolution to use it rather than a
> threadpool, with IReactorPluggableResolver.installResolver
> <http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorPluggableResolver.html#installResolver>.

Yes, that would be interesting to have too.  I'll look into adding that as well.

-- 
Jeff Ollie



From schenette at gmail.com  Mon Sep  5 19:50:28 2011
From: schenette at gmail.com (Stephan)
Date: Mon, 5 Sep 2011 18:50:28 -0700
Subject: [Twisted-Python] stopping LoopCall and check if running
Message-ID: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>

I have a question on LoopCall.

I have a process that uses a sequence of LoopCalls, once one finishes
I call the next to check for the next critical event to continue:

e.g.

   def checkForAvailableProfile(self):
       profile = fs_profiles_manager.get_next_available_profile()
       if profile is None:
           return
       else:
           self.checkForAvailableProfileLoop.stop()

       self.profile = profile

       logging.debug("using profile: %s", self.profile['name'])

       self.ff = FirefoxProcess(self.profile, self.params)
       self.ff.run()

       self.checkForEventsFileLoop =
LoopingCall(self.checkIfEventsFileExists)
       self.checkForEventsFileLoop.start(0.5)
       self.state = self.STATE_WAIT_FOR_EVENTS

====================================================

The problem is that I'm getting errors, errors when I try to call stop
when stop perhaps has already been called.
I want advice on how to manage LoopCalls. So far I'm using state variables.
e.g.
self.state = self.STATE_WAIT_FOR_EVENTS

if something goes haywire or if the process is done I have a function
that cleans up all the LoopCalls so it's not checking constantly:

   def cleanExit(self):
       if self.state == self.STATE_WAIT_FOR_PROFILE:
           self.checkForAvailableProfileLoop.stop()
       elif self.state == self.STATE_WAIT_FOR_EVENTS:
           self.checkForEventsFileLoop.stop()
       elif self.state == self.STATE_WAIT_FOR_PROC_KILLED:
           self.checkIfFirefoxWasKilledLoop.stop()

       self.ff.cleanExit()


the above code is what I believe is causing my exceptions, but how
else do I check for the LoopCalls?



=====================================================

2011-08-31 12:30:11-0700 [FiresharkProtocol,1278,127.0.0.1] Unhandled Error
   Traceback (most recent call last):
     File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 348, in runReactorWithLogging
       reactor.run()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1170, in run
       self.mainLoop()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1182, in mainLoop
       self.doIteration(t)
     File
"/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 140, in doSelect
       _logrun(selectable, _drdw, selectable, method, dict)
   --- <exception caught here> ---
     File "/usr/lib/python2.6/dist-packages/twisted/python/log.py",
line 84, in callWithLogger
       return callWithContext({"system": lp}, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/log.py",
line 69, in callWithContext
       return context.call({ILogContext: newCtx}, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/context.py",
line 59, in callWithContext
       return self.currentContext().callWithContext(ctx, func, *args, **kw)
     File "/usr/lib/python2.6/dist-packages/twisted/python/context.py",
line 37, in callWithContext
       return func(*args,**kw)
     File
"/usr/lib/python2.6/dist-packages/twisted/internet/selectreactor.py",
line 156, in _doReadOrWrite
       self._disconnectSelectable(selectable, why, method=="doRead")
     File "/usr/lib/python2.6/dist-packages/twisted/internet/posixbase.py",
line 194, in _disconnectSelectable
       selectable.connectionLost(f)
     File "/usr/lib/python2.6/dist-packages/twisted/internet/tcp.py",
line 519, in connectionLost
       protocol.connectionLost(reason)
     File "/usr/sbin/fireshark.py", line 101, in connectionLost
       self.cleanExit()
     File "/usr/sbin/fireshark.py", line 43, in cleanExit
       self.checkIfFirefoxWasKilledLoop.stop()
     File "/usr/lib/python2.6/dist-packages/twisted/internet/task.py",
line 171, in stop
       assert self.running, ("Tried to stop a LoopingCall that was "
   exceptions.AssertionError: Tried to stop a LoopingCall that was not
running.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110905/1ac36d49/attachment.html>

From ldanielburr at me.com  Mon Sep  5 20:04:37 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 05 Sep 2011 21:04:37 -0500
Subject: [Twisted-Python] stopping LoopCall and check if running
In-Reply-To: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>
References: <CADozHMWd+7+izTMJw311b7v14L=c0AXPtBJ_1p10PgX=qg=1xQ@mail.gmail.com>
Message-ID: <op.v1c6qcmteyn2q3@tiassa.local>

Hi Stephan,

On Mon, 05 Sep 2011 20:50:28 -0500, Stephan <schenette at gmail.com> wrote:

> I have a question on LoopCall.
>
> I have a process that uses a sequence of LoopCalls, once one finishes
> I call the next to check for the next critical event to continue:

[SNIP]

> The problem is that I'm getting errors, errors when I try to call stop
> when stop perhaps has already been called.

Try checking your LoopingCall's .running attrbute in your code; that  
should allow you to avoid spurious calls to .stop()

Hope this helps,

L. Daniel Burr



From p.mayers at imperial.ac.uk  Tue Sep  6 02:18:21 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Sep 2011 09:18:21 +0100
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
Message-ID: <7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>

Jeffrey Ollie <jeff at ocjtech.us> wrote:


>
>> Why was twisted.names insufficient?  What kind of stuff does
>dnspython do
>> that twisted.names doesn't?  It would be useful to list these
>enhancements
>> in your README so that users can judge if they need it.  In other
>words:
>> what was the itch that lead to its creation?
>
>The main reason was to be able to do secure dynamic DNS updates.
>AFAICS there isn't support in twisted.names for that.  I suppose I
>should have included an example, but to do secure updates you have to
>cryptographically sign the DNS packets, plus you need to control the
>DNS server etc.  The 3rd example at
>http://www.dnspython.org/examples.html is a non-working example
>(non-working because of the fake encryption key).
>
>Sometime in the near future I'll need some DNSSEC support, but that
>project is still a little half-baked so things may change.

>
FYI I wrote patches for twisted.names that implement both tsig/tkey I.e. secure dynamic update and dnssec. They're languishing in trac because uqds saps my will to live :o(
-- 
Sent from my phone. Please excuse brevity and typos.



From glyph at twistedmatrix.com  Tue Sep  6 02:29:11 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 6 Sep 2011 01:29:11 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>
	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>
	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>
	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
Message-ID: <3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>


On Sep 6, 2011, at 1:18 AM, Phil Mayers wrote:

> Jeffrey Ollie <jeff at ocjtech.us> wrote:
> 
> 
>> 
>>> Why was twisted.names insufficient?  What kind of stuff does
>> dnspython do
>>> that twisted.names doesn't?  It would be useful to list these
>> enhancements
>>> in your README so that users can judge if they need it.  In other
>> words:
>>> what was the itch that lead to its creation?
>> 
>> The main reason was to be able to do secure dynamic DNS updates.
>> AFAICS there isn't support in twisted.names for that.  I suppose I
>> should have included an example, but to do secure updates you have to
>> cryptographically sign the DNS packets, plus you need to control the
>> DNS server etc.  The 3rd example at
>> http://www.dnspython.org/examples.html is a non-working example
>> (non-working because of the fake encryption key).
>> 
>> Sometime in the near future I'll need some DNSSEC support, but that
>> project is still a little half-baked so things may change.
> 
>> 
> FYI I wrote patches for twisted.names that implement both tsig/tkey I.e. secure dynamic update and dnssec. They're languishing in trac because uqds saps my will to live :o(

Link?  Always good to paste a link to revive a dead ticket :)

-glyph




From p.mayers at imperial.ac.uk  Tue Sep  6 03:56:30 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 06 Sep 2011 10:56:30 +0100
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
	<3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
Message-ID: <4E65EE4E.3030308@imperial.ac.uk>

On 06/09/11 09:29, Glyph Lefkowitz wrote:

>> FYI I wrote patches for twisted.names that implement both tsig/tkey
>> I.e. secure dynamic update and dnssec. They're languishing in trac
>> because uqds saps my will to live :o(
>
> Link?  Always good to paste a link to revive a dead ticket :)

TSIG/TKEY:

http://twistedmatrix.com/trac/ticket/4602 -

I designed this one to support various TSIG/TKEY methods, and in fact I 
have some local code that uses a GSSAPI wrapper to do 
Kerberos-authenticated TSIG updates (as per Windows 2000). I even wrote 
a DNS server proxy that would take Kerberos-authenticated requests, 
re-sign them as plain HMAC TSIG and forward them to another DNS server; 
then bind 9.8 came out and obsoleted my need for the code, hence the 
drop off in interest.

DNSSEC:

http://twistedmatrix.com/trac/ticket/4610

Also:

http://twistedmatrix.com/trac/ticket/4603 - round-trip unknown RR types

There isn't really much that needs doing AFAICT. I just find the whole
thing a bit dis-spiriting (which is my problem! ;o)




From glyph at twistedmatrix.com  Tue Sep  6 12:46:39 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 6 Sep 2011 11:46:39 -0700
Subject: [Twisted-Python] Announcing txdnspython
In-Reply-To: <4E65EE4E.3030308@imperial.ac.uk>
References: <CAD-DQxSthgFm=zzZmSOhG14kfBzmJ1c6-_xVu2zamtd1UfwD1A@mail.gmail.com>	<A51E200A-FDAE-4C15-810C-3367D453A4DC@twistedmatrix.com>	<CAD-DQxSzdBsOneYhPTdzvQXBuV86mmoNQSrTiPa0syPCNkMniw@mail.gmail.com>	<7897e59c-7cf6-4feb-8e75-bcad1bae8ab7@email.android.com>
	<3BBC2F3A-0856-404C-B563-5B4A49DB2D50@twistedmatrix.com>
	<4E65EE4E.3030308@imperial.ac.uk>
Message-ID: <D46DD2ED-51B4-41E7-B192-9C1C72AB1E5A@twistedmatrix.com>


On Sep 6, 2011, at 2:56 AM, Phil Mayers wrote:

> On 06/09/11 09:29, Glyph Lefkowitz wrote:
> 
>>> FYI I wrote patches for twisted.names that implement both tsig/tkey
>>> I.e. secure dynamic update and dnssec. They're languishing in trac
>>> because uqds saps my will to live :o(
>> 
>> Link?  Always good to paste a link to revive a dead ticket :)
> 
> TSIG/TKEY:
> 
> http://twistedmatrix.com/trac/ticket/4602 -
> 
> I designed this one to support various TSIG/TKEY methods, and in fact I 
> have some local code that uses a GSSAPI wrapper to do 
> Kerberos-authenticated TSIG updates (as per Windows 2000). I even wrote 
> a DNS server proxy that would take Kerberos-authenticated requests, 
> re-sign them as plain HMAC TSIG and forward them to another DNS server; 
> then bind 9.8 came out and obsoleted my need for the code, hence the 
> drop off in interest.
> 
> DNSSEC:
> 
> http://twistedmatrix.com/trac/ticket/4610
> 
> Also:
> 
> http://twistedmatrix.com/trac/ticket/4603 - round-trip unknown RR types
> 
> There isn't really much that needs doing AFAICT. I just find the whole
> thing a bit dis-spiriting (which is my problem! ;o)

Is there anyone willing to step up and finish the review process, so that Phil doesn't have to weather the psychic torment involved in waiting for someone to push buttons on Trac? :)

-glyph




From free at 64studio.com  Wed Sep  7 10:56:14 2011
From: free at 64studio.com (Free Ekanayaka)
Date: Wed, 07 Sep 2011 18:56:14 +0200
Subject: [Twisted-Python] [Job] Landscape team at Canonical is hiring
Message-ID: <87fwk8fg0h.fsf@orfeo.i-did-not-set--mail-host-address--so-tickle-me>

Hi,

hope people don't mind job ads too much (I've seen a few in the list
archives).

Landscape [0] is a systems management web application developed at
Canonical (the commercial sponsor of Ubuntu) using mainly Python and
Javascript. The project is growing and we are seeking for people:

http://bit.ly/oYPSth

We have several Twisted-based services [1], and we have contributed to
Twisted and to Python in general [2].

If you are interested, please feel free to send me an email.

Thanks,

Free

[0] http://landscape.canonical.com
[1] e.g. https://launchpad.net/landscape-client
[2] e.g. https://launchpad.net/txaws
         https://storm.canonical.com/
         https://launchpad.net/txlongpoll




From schenette at gmail.com  Wed Sep  7 23:51:13 2011
From: schenette at gmail.com (Stephan)
Date: Wed, 7 Sep 2011 22:51:13 -0700
Subject: [Twisted-Python] How can LoopCall not be defined?
Message-ID: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>

I'm running a server with about 20 client connections going to it
right now and monitoring the error log eventually I see LoopCall is
not defined.
how can that be? Thanks in advance.


2011-09-07 22:47:26-0700 [-] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 445, in startReactor
	    self.config, oldstdout, oldstderr, self.profiler, reactor)
	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
line 348, in runReactorWithLogging
	    reactor.run()
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1170, in run
	    self.mainLoop()
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 1179, in mainLoop
	    self.runUntilCurrent()
	--- <exception caught here> ---
	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
line 778, in runUntilCurrent
	    call.func(*call.args, **call.kw)
	  File "/usr/sbin/firefoxprocess.py", line 48, in onTimer
	    self.firesharkProtocol.handleProcessTimedOut()
	  File "/usr/sbin/fireshark.py", line 32, in handleProcessTimedOut
	    self.dirtyExit();
	  File "/usr/sbin/fireshark.py", line 68, in dirtyExit
	    self.checkIfFirefoxWasKilledLoop = LoopCall(self.checkIfFirefoxWasKilled)
	exceptions.NameError: global name 'LoopCall' is not defined



From ldanielburr at me.com  Thu Sep  8 00:15:01 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Thu, 08 Sep 2011 01:15:01 -0500
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
Message-ID: <op.v1g7nbo8eyn2q3@tiassa.local>

Hi Stephan,


On Thu, 08 Sep 2011 00:51:13 -0500, Stephan <schenette at gmail.com> wrote:

> I'm running a server with about 20 client connections going to it
> right now and monitoring the error log eventually I see LoopCall is
> not defined.
> how can that be? Thanks in advance.
>
>
> 2011-09-07 22:47:26-0700 [-] Unhandled Error
> 	Traceback (most recent call last):
> 	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
> line 445, in startReactor
> 	    self.config, oldstdout, oldstderr, self.profiler, reactor)
> 	  File "/usr/lib/python2.6/dist-packages/twisted/application/app.py",
> line 348, in runReactorWithLogging
> 	    reactor.run()
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 1170, in run
> 	    self.mainLoop()
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 1179, in mainLoop
> 	    self.runUntilCurrent()
> 	--- <exception caught here> ---
> 	  File "/usr/lib/python2.6/dist-packages/twisted/internet/base.py",
> line 778, in runUntilCurrent
> 	    call.func(*call.args, **call.kw)
> 	  File "/usr/sbin/firefoxprocess.py", line 48, in onTimer
> 	    self.firesharkProtocol.handleProcessTimedOut()
> 	  File "/usr/sbin/fireshark.py", line 32, in handleProcessTimedOut
> 	    self.dirtyExit();
> 	  File "/usr/sbin/fireshark.py", line 68, in dirtyExit
> 	    self.checkIfFirefoxWasKilledLoop =  
> LoopCall(self.checkIfFirefoxWasKilled)
> 	exceptions.NameError: global name 'LoopCall' is not defined

Are you talking about task.LoopingCall, or is LoopCall something define in  
your own code?

L. Daniel Burr



From _ at lvh.cc  Thu Sep  8 00:34:09 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 8 Sep 2011 08:34:09 +0200
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
Message-ID: <CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>

I've never heard of LoopCall. Maybe you meant LoopingCall?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110908/b0834459/attachment-0001.html>

From schenette at gmail.com  Thu Sep  8 00:58:27 2011
From: schenette at gmail.com (Stephan)
Date: Wed, 7 Sep 2011 23:58:27 -0700
Subject: [Twisted-Python] How can LoopCall not be defined?
In-Reply-To: <CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>
References: <CADozHMU4+4x7cjkP80Ctsjp_-GgpS6nT60gUPVpc2vuzbDyAHw@mail.gmail.com>
	<CAE_Hg6bPzyt5wav8_baO0fL+3gAnNe7awsnWcztFCDB_RNEAww@mail.gmail.com>
Message-ID: <CADozHMWt7np-=tKv_kFMPbpx_qVHoUq-6xH1vuodDAu0jRJcHg@mail.gmail.com>

sorry for wasting everyone's time.
script worked, made a change and somehow changed the one line from
LoopingCall to LoopCall, I should have noticed that, but I've been
coding for a while and just missed. Thanks.

changed now and works

                        if self.checkIfFirefoxWasKilledLoop.running:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled is running.")
                        else:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled is NOT
running. starting..\
.")
                                self.checkIfFirefoxWasKilledLoop =
LoopingCall(self.checkIfFirefoxWasKilled)

self.checkIfFirefoxWasKilledLoop.start(0.5, now=True)
                except AttributeError:

logging.debug("FiresharkProtocol.checkIfFirefoxWasKilled exist but is
NOT running. starting\
...")
                        self.checkIfFirefoxWasKilledLoop =
LoopingCall(self.checkIfFirefoxWasKilled)
                        self.checkIfFirefoxWasKilledLoop.start(0.5, now=True)

                try:


On Wed, Sep 7, 2011 at 11:34 PM, Laurens Van Houtven <_ at lvh.cc> wrote:
> I've never heard of LoopCall. Maybe you meant LoopingCall?
>
> cheers
> lvh
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From _ at lvh.cc  Thu Sep  8 05:04:27 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Thu, 8 Sep 2011 13:04:27 +0200
Subject: [Twisted-Python] Minitrue: implementing ICAP proxylet support,
	or implementing sslbump
In-Reply-To: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
References: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
Message-ID: <CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>

Hi :)

Context for those who haven't heard of minitrue: it's a twisted powered HTTP
proxy that is designed to lie. It lets you modify requests and responses.

So far, it's been a mostly academic exercise, which I suppose could have
real-world applications. I'd like to learn some more about how to use
minitrue with SSL/TLS next.

I would like to use something like Squid's sslbump support. The easiest way
to do that would probably be to use ICAP and get minitrue to support
publishing request and response manglers as proxylets (which would be
Resources, sort of, since ICAP is kind-of HTTP. Whether I should write a
custom parser or leverage the existing HTTP support is something I'm not
entirely sure of yet. I suppose the two theses are not mutually exclusive).

Has anyone used twisted's proxy support with ssl? Ideally, I would let
minitrue take a ca cert, and have it create and sign the appropriate cert on
the fly; IIUC this is how content filtering proxies that support ssl right
now work.

cheers

lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110908/9da4d910/attachment.html>

From robert.waters at gmail.com  Fri Sep  9 12:43:48 2011
From: robert.waters at gmail.com (R M Waters)
Date: Fri, 9 Sep 2011 14:43:48 -0400
Subject: [Twisted-Python] Minitrue: implementing ICAP proxylet support,
 or implementing sslbump
In-Reply-To: <CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>
References: <CAE_Hg6Yc=NjTAUr06moe=RR2zyn8fPaPVdb=ELhz9XHqseRXVw@mail.gmail.com>
	<CAE_Hg6aTP+wd4MC0HMkeYa1QGt1tgD=cLfCphxR0+Z+3dMaz6A@mail.gmail.com>
Message-ID: <CAE99YyEet98vKfxqL-nkva3j53mNwQMy-JAYH4j+ROFoUsD_Sg@mail.gmail.com>

</lurking>
Not able to help you with your question, but I was browsing github earlier
and came across some ICAP code using Twisted:
https://github.com/diegows/misc/blob/master/adv-indonesia/usr/local/bin/icap-server.py

hth

<lurking>


On Thu, Sep 8, 2011 at 7:04 AM, Laurens Van Houtven <_ at lvh.cc> wrote:

> Hi :)
>
> Context for those who haven't heard of minitrue: it's a twisted powered
> HTTP proxy that is designed to lie. It lets you modify requests and
> responses.
>
> So far, it's been a mostly academic exercise, which I suppose could have
> real-world applications. I'd like to learn some more about how to use
> minitrue with SSL/TLS next.
>
> I would like to use something like Squid's sslbump support. The easiest way
> to do that would probably be to use ICAP and get minitrue to support
> publishing request and response manglers as proxylets (which would be
> Resources, sort of, since ICAP is kind-of HTTP. Whether I should write a
> custom parser or leverage the existing HTTP support is something I'm not
> entirely sure of yet. I suppose the two theses are not mutually exclusive).
>
> Has anyone used twisted's proxy support with ssl? Ideally, I would let
> minitrue take a ca cert, and have it create and sign the appropriate cert on
> the fly; IIUC this is how content filtering proxies that support ssl right
> now work.
>
> cheers
>
> lvh
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110909/0d50cd36/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Sep 10 22:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 11 Sep 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1315713925.2.700139809@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110911/664e1a57/attachment-0001.html>

From luke-lists at hybrid-logic.co.uk  Mon Sep 12 01:57:18 2011
From: luke-lists at hybrid-logic.co.uk (Luke Marsden)
Date: Mon, 12 Sep 2011 08:57:18 +0100
Subject: [Twisted-Python] Announcement: txHybridCluster client released
Message-ID: <1315814238.8785.17.camel@pow>

Hi all,

>From a blustery grey Monday morning in Bristol, England, comes the
announcement of the immediate availability of a Twisted client for
interacting with the Hybrid Cluster API.

https://github.com/hybridlogic/txHybridCluster

http://www.hybrid-cluster.com/
http://www.hybrid-cluster.com/api/

The Hybrid Cluster API allows you to set up websites, databases,
mailboxes, add SSL certificates, configure custom DNS, and more (over
100 API functions are documented).

If anyone's interested in building cool stuff with this, contact me
off-list and we can get you set up with a cluster to play with ;-)

-- 
Best Regards,
Luke Marsden
CTO, Hybrid Logic Ltd.

Web: http://www.hybrid-cluster.com/
Hybrid Web Cluster - cloud web hosting

Mobile: +447791750420 (UK) / +1-415-449-1165 (US)






From anddimario at gmail.com  Mon Sep 12 02:19:53 2011
From: anddimario at gmail.com (Andrea Di Mario)
Date: Mon, 12 Sep 2011 10:19:53 +0200
Subject: [Twisted-Python] Twisted Perspective Broker: get client ip
Message-ID: <CAKBHSgwzGL1Lbms6+21QNOn4Z=X6xcYirR5BiQgVZgm379Q49A@mail.gmail.com>

Hi, i'm writing a perspective broker server. Now, i should get the
client IP, that perspective broker writes well in the log. I've tried
to get it from MyRealm with: mind.broker.transport.getPeer(), without
success. I've tried self.transport.getPeer() to, with this result:
exceptions.AttributeError: Listner instance has no attribute 'transport'
It's strange, because PB wrote the client IP, infact in log i've line with:
2011-09-11 16:41:58+0200 [Broker,0,127.0.0.1] ............

Could you suggest me something?
Thanks.
Here the code:

from OpenSSL import SSL
from twisted.internet import reactor, ssl
from ConfigParser import SafeConfigParser
from twisted.python import log
from twisted.spread import pb
from twisted.cred import checkers, portal
from zope.interface import implements
import hashlib

class Listner(pb.Avatar):

   def __init__(self, name):
           self.name = name

   def perspective_getDictionary(self, dictionary):
      print dictionary

   def perspective_simplyAccess(self, access):
      print access

def verifyCallback(connection, x509,  errnum, errdepth, ok):
   if not ok:
      log.msg("Certificato non valido: %s" % x509.get_subject())
      return False
   else:
      log.msg("Connessione stabilita, vertificato valido: %s" %
x509.get_subject())
   return True


class MyRealm:
    implements(portal.IRealm)
    def requestAvatar(self, avatarId, mind, *interfaces):
        if pb.IPerspective not in interfaces:
            raise NotImplementedError
        return pb.IPerspective, Listner(avatarId), lambda:None


if __name__ == "__main__":

       CONFIGURATION = SafeConfigParser()
       CONFIGURATION.read('server.conf')
       PORT = CONFIGURATION.get('general', 'port')
       LOGFILE = CONFIGURATION.get('general', 'log')

        log.startLogging(open(LOGFILE,'a'))


       myContextFactory =
ssl.DefaultOpenSSLContextFactory(CONFIGURATION.get('general',
'keypath'), CONFIGURATION.get('general', 'certpath'))
       ctx = myContextFactory.getContext()
       ctx.set_verify(SSL.VERIFY_PEER |
SSL.VERIFY_FAIL_IF_NO_PEER_CERT, verifyCallback)

       ctx.load_verify_locations(CONFIGURATION.get('general', 'cacert'))

       p = portal.Portal(MyRealm())
       c = checkers.FilePasswordDB('passwords.txt',
caseSensitive=True, cache=True)
       p.registerChecker(c)
       factory = pb.PBServerFactory(p)
       reactor.listenSSL(int(PORT), factory, myContextFactory)
       reactor.run()

-- 
Andrea Di Mario



From tobias.oberstein at tavendo.de  Mon Sep 12 07:15:15 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 06:15:15 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
Message-ID: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>

Announcing Autobahn WebSockets

Autobahn WebSockets provides an implementation of the WebSockets protocol
which can be used to build WebSockets clients and servers.

   * supports protocol draft version 10-14
   * usable for clients and servers
   * easy to use basic API
   * advanced API for frame-based/streaming processing
   * very good standards conformance
   * fully asynchronous Twisted-based implementation
   * Open-source (Apache 2 license)

Testsuite

Autobahn WebSockets also includes a WebSockets test suite which can used to
test client and server implementations for protocol conformance.
The test suite includes over 200 test cases and has broad protocol coverage and
is used with several WS projects.

RPC/PubSub

Autobahn WebSockets also provides an implementation of the

   WebSocket Application Messaging Protocol (WAMP)
   http://www.tavendo.de/autobahn/protocol.html

which can be used to build applications around Remote Procedure Call and
Publish & Subscribe messaging patterns.

   * provides RPC and PubSub messaging
   * built on JSON and WebSockets
   * simple and open protocol
   * usable for clients and servers

For more information, please visit: http://www.tavendo.de/autobahn

Commercial support and services is available from Tavendo GmbH.

Other resources:

http://pypi.python.org/pypi/autobahn
https://github.com/oberstet/Autobahn
http://groups.google.com/group/autobahnws
http://en.wikipedia.org/wiki/Comparison_of_WebSocket_implementations
http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-14




From glyph at twistedmatrix.com  Mon Sep 12 08:50:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 12 Sep 2011 10:50:32 -0400
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
In-Reply-To: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>

On Sep 12, 2011, at 9:15 AM, Tobias Oberstein wrote:

> Announcing Autobahn WebSockets
> 
> Autobahn WebSockets provides an implementation of the WebSockets protocol
> which can be used to build WebSockets clients and servers.
> 
>   * supports protocol draft version 10-14
>   * usable for clients and servers
>   * easy to use basic API
>   * advanced API for frame-based/streaming processing
>   * very good standards conformance
>   * fully asynchronous Twisted-based implementation
>   * Open-source (Apache 2 license)

Hi Tobias - great to hear it, thanks for the announcement!

I'm curious - is this in any way related to previous work done on Twisted websockets implementations, such as <https://github.com/rlotun/txwebsocket>?

Thanks!

-glyph


From tobias.oberstein at tavendo.de  Mon Sep 12 09:38:23 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 08:38:23 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based
	WS	implementation
In-Reply-To: <0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
Message-ID: <634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>

> Hi Tobias - great to hear it, thanks for the announcement!
> 
> I'm curious - is this in any way related to previous work done on Twisted
> websockets implementations, such as
> <https://github.com/rlotun/txwebsocket>?

No, it's not. From a cursory look at the code (didn't knew it existed):

Outdated WS protocol, probably wasnt complete at any time, based on the Site class.

Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.




From rlotun at gmail.com  Mon Sep 12 10:09:59 2011
From: rlotun at gmail.com (Reza Lotun)
Date: Mon, 12 Sep 2011 17:09:59 +0100
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based WS
	implementation
In-Reply-To: <634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
Message-ID: <CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>

Hi,

On Mon, Sep 12, 2011 at 4:38 PM, Tobias Oberstein <
tobias.oberstein at tavendo.de> wrote:
>
> No, it's not. From a cursory look at the code (didn't knew it existed):
>

That repo on Github is based on a Twisted branch that was nearly ready for
inclusion into Twisted. This was back in the day when the websocket protocol
seemed on the verge of stabilizing. Obviously this wasn't the case. I came
along and added cross version support for the next iteration of the protocol
which was then newly supported in Chrome. Then there came the discovery of a
cache poising security flaw that was eventually addressed in the latest
iteration of the websocket protocol. I haven't yet had time to incorporate
it, though I believe there is an open pull request for its support (thanks,
to whoever that was).


> Outdated WS protocol, probably wasnt complete at any time, based on the
> Site class.
>

Depends on what you consider to be "complete" I guess. It had working
examples and stayed close to the reference Twisted implementation, which was
in the last stages of its code review.


> Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.


Completeness shouldn't really be measured by size of code base. I take your
point that the latest version of the protocol is indeed supported in
Autobahn, which is a good thing of course.

Thanks for Autobahn - it's useful to take a look at. I'll still continue
work on txWebsocket, however, with the intention of:

* eventual inclusion into Twisted (meeting Twisted coding standards, MIT
license, etc.)
* small, simple code base

Hopefully one day if and when txWebSocket is finally merged we can
standardize on one reference implementation (it doesn't have to be
txWebsocket of course - it'd be great if the core of Autobahn could be
contributed...)

Thanks,
Reza

-- 
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com
work:   rlotun at twitter.com
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110912/69bca8a5/attachment-0001.html>

From tobias.oberstein at tavendo.de  Mon Sep 12 11:37:49 2011
From: tobias.oberstein at tavendo.de (Tobias Oberstein)
Date: Mon, 12 Sep 2011 10:37:49 -0700
Subject: [Twisted-Python] Autobahn WebSockets - Twisted based
	WS	implementation
In-Reply-To: <CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>
References: <634914A010D0B943A035D226786325D422C0FEF668@EXVMBX020-12.exch020.serverdata.net>
	<0B20DD41-709D-43F1-B1E6-F2EBD5DDED2D@twistedmatrix.com>
	<634914A010D0B943A035D226786325D422C0FEF786@EXVMBX020-12.exch020.serverdata.net>
	<CAFJezo3Ef4ssrbNaHf5bL7JDnkzcJJt1Ccq70=dpTe21yitFzw@mail.gmail.com>
Message-ID: <634914A010D0B943A035D226786325D422C0FEF87E@EXVMBX020-12.exch020.serverdata.net>

Hello Reza,

the WS protocol has indeed changed alot from hixie-76. There are binary frames, new framing scheme, interspersed control
frames, masking, etc etc.

Currently, it's in the last review phase involving IESG/IAB members, and the WG chairs want to cross the finish line
in November on WS 1.0 final.

Code base size should not be a measure of completeness, of course. With regard to Autobahn WS, I would nevertheless
say it's quite complete, since it includes a WS test suite with >200 test cases that cover a lot of the spec - and passes all.

The tests are quite rigorous, for example I've taken the pains to implement own UTF-8 payload validator, since
the one that comes with Python has outstanding issues related to surrogate pairs.

Also, the test suite is used already with a couple of server frameworks, and it found several bugs both in
Firefox and Chrome. Of course the test suite increases the total code size.

Another area that took time/code is: support for message-based, frame-based and streaming APIs. I expect (hope;)
that the code structuring that was necessary for the latter helps when implementing - a yet to be defined/agreed -
multiplexing scheme over WS. This was also one reason why I didn't base the code on Site, but Protocol directly.

Anyway, it's good to hear that you're planning to take up development again .. choice is good.

Regards,
Tobias


Von: twisted-python-bounces at twistedmatrix.com [mailto:twisted-python-bounces at twistedmatrix.com] Im Auftrag von Reza Lotun
Gesendet: Montag, 12. September 2011 18:10
An: Twisted general discussion
Betreff: Re: [Twisted-Python] Autobahn WebSockets - Twisted based WS implementation

Hi,

On Mon, Sep 12, 2011 at 4:38 PM, Tobias Oberstein <tobias.oberstein at tavendo.de<mailto:tobias.oberstein at tavendo.de>> wrote:
No, it's not. From a cursory look at the code (didn't knew it existed):

That repo on Github is based on a Twisted branch that was nearly ready for inclusion into Twisted. This was back in the day when the websocket protocol seemed on the verge of stabilizing. Obviously this wasn't the case. I came along and added cross version support for the next iteration of the protocol which was then newly supported in Chrome. Then there came the discovery of a cache poising security flaw that was eventually addressed in the latest iteration of the websocket protocol. I haven't yet had time to incorporate it, though I believe there is an open pull request for its support (thanks, to whoever that was).

Outdated WS protocol, probably wasnt complete at any time, based on the Site class.

Depends on what you consider to be "complete" I guess. It had working examples and stayed close to the reference Twisted implementation, which was in the last stages of its code review.

Autobahn WS has complete, current WS support. Code base is roughly 9k LOC.

Completeness shouldn't really be measured by size of code base. I take your point that the latest version of the protocol is indeed supported in Autobahn, which is a good thing of course.

Thanks for Autobahn - it's useful to take a look at. I'll still continue work on txWebsocket, however, with the intention of:

* eventual inclusion into Twisted (meeting Twisted coding standards, MIT license, etc.)
* small, simple code base

Hopefully one day if and when txWebSocket is finally merged we can standardize on one reference implementation (it doesn't have to be txWebsocket of course - it'd be great if the core of Autobahn could be contributed...)

Thanks,
Reza

--
Reza Lotun
mobile: +44 (0)7521 310 763
email:  rlotun at gmail.com<mailto:rlotun at gmail.com>
work:   rlotun at twitter.com<mailto:rlotun at twitter.com>
@rlotun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110912/64cc6b36/attachment.html>

From zooko at zooko.com  Wed Sep 14 00:58:16 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Wed, 14 Sep 2011 00:58:16 -0600
Subject: [Twisted-Python] announcing Tahoe-LAFS v1.8.3,
	fixing a security issue
Message-ID: <CANdZDc48V6ni_ZJBPKhV6eRj=bova3B0-q6kDCtd6uENbvfPMQ@mail.gmail.com>

Dear Twisted Folks:

We found a vulnerability in Tahoe-LAFS (all versions from v1.3.0 to v1.8.2
inclusive) that might allow an attacker to delete files. This vulnerability
does not enable anyone to read file contents without authorization
(confidentiality), nor to change the contents of a file (integrity). How
exploitable this vulnerability is depends upon some details of how you use
Tahoe-LAFS. If you upgrade your Tahoe-LAFS storage server to v1.8.3, this
fixes the vulnerability.

We've written detailed docs about the issue and how to manage it in
the "Known Issues" document:

http://tahoe-lafs.org/trac/tahoe-lafs/browser/trunk/docs/known_issues.rst

I am sorry that we introduced this bug into Tahoe-LAFS and allowed it
to go undetected until now. We aim for a high standard of security and
reliability in Tahoe-LAFS, and we're not satisfied until our users are
safe from threats to their data.

We've been working with the packagers who maintain packages of
Tahoe-LAFS in various operating systems, so if you get your Tahoe-LAFS
through your operating system there may already be a fixed version
available:

http://tahoe-lafs.org/trac/tahoe-lafs/wiki/OSPackages

Please contact us through the tahoe-dev mailing list if you have
further questions.

Regards,

Zooko Wilcox-O'Hearn

ANNOUNCING Tahoe, the Least-Authority File System, v1.8.3

The Tahoe-LAFS team announces the immediate availability of version 1.8.3 of
Tahoe-LAFS, an extremely reliable distributed storage system. Get it here:

http://tahoe-lafs.org/trac/tahoe-lafs/browser/trunk/docs/quickstart.rst

Tahoe-LAFS is the first distributed storage system to offer
"provider-independent security" — meaning that not even the
operators of your storage servers can read or alter your data
without your consent. Here is the one-page explanation of its
unique security and fault-tolerance properties:

http://tahoe-lafs.org/source/tahoe/trunk/docs/about.html

The previous stable release of Tahoe-LAFS was v1.8.2, which was
released January 30, 2011 [1].

v1.8.3 is a stable bugfix release which fixes a security issue. See the file
[2] and known_issues.rst [3] file for details.


WHAT IS IT GOOD FOR?

With Tahoe-LAFS, you distribute your filesystem across
multiple servers, and even if some of the servers fail or are
taken over by an attacker, the entire filesystem continues to
work correctly, and continues to preserve your privacy and
security. You can easily share specific files and directories
with other people.

In addition to the core storage system itself, volunteers
have built other projects on top of Tahoe-LAFS and have
integrated Tahoe-LAFS with existing systems, including
Windows, JavaScript, iPhone, Android, Hadoop, Flume, Django,
Puppet, bzr, mercurial, perforce, duplicity, TiddlyWiki, and
more. See the Related Projects page on the wiki [4].

We believe that strong cryptography, Free and Open Source
Software, erasure coding, and principled engineering practices
make Tahoe-LAFS safer than RAID, removable drive, tape,
on-line backup or cloud storage.

This software is developed under test-driven development, and
there are no known bugs or security flaws which would
compromise confidentiality or data integrity under recommended
use. (For all important issues that we are currently aware of
please see the known_issues.rst file [3].)


COMPATIBILITY

This release is compatible with the version 1 series of
Tahoe-LAFS. Clients from this release can write files and
directories in the format used by clients of all versions back
to v1.0 (which was released March 25, 2008). Clients from this
release can read files and directories produced by clients of
all versions since v1.0. Servers from this release can serve
clients of all versions back to v1.0 and clients from this
release can use servers of all versions back to v1.0.

This is the fourteenth release in the version 1 series. This
series of Tahoe-LAFS will be actively supported and maintained
for the forseeable future, and future versions of Tahoe-LAFS
will retain the ability to read and write files compatible
with this series.


LICENCE

You may use this package under the GNU General Public License,
version 2 or, at your option, any later version. See the file
"COPYING.GPL" [5] for the terms of the GNU General Public
License, version 2.

You may use this package under the Transitive Grace Period
Public Licence, version 1 or, at your option, any later
version. (The Transitive Grace Period Public Licence has
requirements similar to the GPL except that it allows you to
delay for up to twelve months after you redistribute a derived
work before releasing the source code of your derived work.)
See the file "COPYING.TGPPL.html" [6] for the terms of the
Transitive Grace Period Public Licence, version 1.

(You may choose to use this package under the terms of either
licence, at your option.)


INSTALLATION

Tahoe-LAFS works on Linux, Mac OS X, Windows, Cygwin, Solaris,
*BSD, and probably most other systems. Start with
"docs/quickstart.html" [7].


HACKING AND COMMUNITY

Please join us on the mailing list [8]. Patches are gratefully
accepted -- the RoadMap page [9] shows the next improvements
that we plan to make and CREDITS [10] lists the names of people
who've contributed to the project. The Dev page [11] contains
resources for hackers.


SPONSORSHIP

Atlas Networks has contributed several hosted servers for performance
testing. Thank you to Atlas Networks for their generous and public-spirited
support.


HACK TAHOE-LAFS!

If you can find a security flaw in Tahoe-LAFS which is serious
enough that we feel compelled to warn our users and issue a fix,
then we will award you with a customized t-shirts with your
exploit printed on it and add you to the "Hack Tahoe-LAFS Hall
Of Fame" [12].


ACKNOWLEDGEMENTS

This is the eighth release of Tahoe-LAFS to be created solely
as a labor of love by volunteers. Thank you very much to the
team of "hackers in the public interest" who make Tahoe-LAFS
possible.

Zooko Wilcox-O'Hearn
on behalf of the Tahoe-LAFS team

September 13, 2011
Boulder, Colorado, USA


[1] http://tahoe-lafs.org/trac/tahoe/browser/relnotes.txt?rev=5164
[2] http://tahoe-lafs.org/trac/tahoe-lafs/browser/1.8.3/NEWS?rev=5014
[3] http://tahoe-lafs.org/trac/tahoe/browser/docs/known_issues.rst
[4] http://tahoe-lafs.org/trac/tahoe/wiki/RelatedProjects
[5] http://tahoe-lafs.org/trac/tahoe/browser/COPYING.GPL
[6] http://tahoe-lafs.org/source/tahoe/trunk/COPYING.TGPPL.html
[7] http://tahoe-lafs.org/source/tahoe/trunk/docs/quickstart.html
[8] http://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev
[9] http://tahoe-lafs.org/trac/tahoe/roadmap
[10] http://tahoe-lafs.org/trac/tahoe-lafs/browser/1.8.3/CREDITS?rev=5003
[11] http://tahoe-lafs.org/trac/tahoe/wiki/Dev
[12] http://tahoe-lafs.org/hacktahoelafs/



From ddwiggins at advpubtech.com  Wed Sep 14 13:43:08 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Wed, 14 Sep 2011 12:43:08 -0700
Subject: [Twisted-Python] Folding the server into the client?
Message-ID: <j4r04d$qua$1@dough.gmane.org>

I have an XMLRPC server which is currently accessed via both a web 
application and a desktop app (the latter uses wxPython as the UI).  I'm 
using subhandlers written as separate modules.

Now, I'd like to redo the desktop app to "fold in" one of the 
subhandlers to the application, so that it's called more directly, and 
to avoid the need to deal with a separate server (including the 
configuration issues).  I'll want to use the same subhandler source for 
both situations, to avoid the obvious duplication problems.  This means 
that I'll need to have the subhandler module "driven" by a reactor of 
some sort, to provide the needed deferred functionality to the 
subhandler.  (As a dividend for what I'm trying to do, I hope to 
leverage the asynchrony to keep the GUI from "freezing" while waiting 
for a response from the subhandler.)

It seems like I should be able to do this, but I'm having conceptual 
difficulties getting it all straight.  In the current setup, the client 
isn't using twisted, just the xmlrpclib.

I've learned a bit about wxreactor, and read 
http://wiki.wxpython.org/wxPythonAndTwisted.  It seems to me, as I 
understand it currently, that I'll need to have both a client and server 
reactor, and decide on a protocol between them that works in a 
single-process situation.  This leaves the question of the protocol and 
reactor types to use.

Or am I missing something important that would make things simpler (or 
maybe impossible)?

Thanks for any good words,
-- 

Don Dwiggins
Advanced Publishing Technology






From itamar at itamarst.org  Wed Sep 14 14:29:29 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Wed, 14 Sep 2011 16:29:29 -0400
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4r04d$qua$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
Message-ID: <e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>

> Or am I missing something important that would make things simpler (or
> maybe impossible)?

You could create a Python API that looks close enough to the code using
xmlrpclib, but just uses direct Python function calls. Depending on your
code this may mean you don't actually need the reactor. If you do need a
reactor, you could still do it without actually doing xmlrpc queries to
yourself. If you run the reactor in a different thread,
blockingCallFromThread lets you "wait" on a Deferred from another
non-reactor thread, in your case the GUI thread (might block your GUI
though).

There's also wxreactor which... probably works.




From exarkun at twistedmatrix.com  Wed Sep 14 15:08:03 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 14 Sep 2011 21:08:03 -0000
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4r04d$qua$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
Message-ID: <20110914210803.1808.202750819.divmod.xquotient.845@localhost.localdomain>

On 07:43 pm, ddwiggins at advpubtech.com wrote:
>
>I've learned a bit about wxreactor, and read
>http://wiki.wxpython.org/wxPythonAndTwisted.  It seems to me, as I
>understand it currently, that I'll need to have both a client and 
>server
>reactor, and decide on a protocol between them that works in a
>single-process situation.  This leaves the question of the protocol and
>reactor types to use.

In addition to Itamar's comments, note that if you only have a single 
process, you will only have a single reactor.  If you actually use a 
socket to communicate between the two parts of the program, one reactor 
is easily capable of dealing with both sockets (but as Itamar pointed 
out, you might skip sockets and just call the methods directly).

Jean-Paul



From ddwiggins at advpubtech.com  Thu Sep 15 11:49:46 2011
From: ddwiggins at advpubtech.com (Don Dwiggins)
Date: Thu, 15 Sep 2011 10:49:46 -0700
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
References: <j4r04d$qua$1@dough.gmane.org>
	<e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
Message-ID: <j4tdrr$lps$1@dough.gmane.org>

Itamar, thanks for the reply.

> You could create a Python API that looks close enough to the code using
> xmlrpclib, but just uses direct Python function calls. Depending on your
> code this may mean you don't actually need the reactor. If you do need a
> reactor, you could still do it without actually doing xmlrpc queries to
> yourself. If you run the reactor in a different thread,
> blockingCallFromThread lets you "wait" on a Deferred from another
> non-reactor thread, in your case the GUI thread (might block your GUI
> though).

Hmm, not sure I understand.  Are you saying that deferreds will "work" 
without having a reactor?    (I'm using inlineCallbacks on all the 
xmlrpc_* methods.)

One thing I should have said, but didn't, is that the methods in the 
subhandler make DB calls using adbapi, so use deferreds pretty heavily.  
I'm willing to block the GUI, at least for now.

-- 

Don Dwiggins
Advanced Publishing Technology





From itamar at itamarst.org  Thu Sep 15 12:48:28 2011
From: itamar at itamarst.org (Itamar Turner-Trauring)
Date: Thu, 15 Sep 2011 14:48:28 -0400
Subject: [Twisted-Python] Folding the server into the client?
In-Reply-To: <j4tdrr$lps$1@dough.gmane.org>
References: <j4r04d$qua$1@dough.gmane.org>
	<e33aea4b280f4df33b4b44055d1051b8.squirrel@webmail.zoteca.com>
	<j4tdrr$lps$1@dough.gmane.org>
Message-ID: <e18cbda132004fca155e563bddb09a22.squirrel@webmail.zoteca.com>

> Itamar, thanks for the reply.
>
>> You could create a Python API that looks close enough to the code using
>> xmlrpclib, but just uses direct Python function calls. Depending on your
>> code this may mean you don't actually need the reactor. If you do need a
>> reactor, you could still do it without actually doing xmlrpc queries to
>> yourself. If you run the reactor in a different thread,
>> blockingCallFromThread lets you "wait" on a Deferred from another
>> non-reactor thread, in your case the GUI thread (might block your GUI
>> though).
>
> Hmm, not sure I understand.  Are you saying that deferreds will "work"
> without having a reactor?    (I'm using inlineCallbacks on all the
> xmlrpc_* methods.)

No. I'm saying that:

1. If your code doesn't depend on the reactor you don't need a reactor.
This is not the the case, so you can ignore it.

2. You don't need to xmlrpc from your process to your own process; just
use method calls. This certainly applies.

3. Since you need a reactor, you can either have reactor in different
thread than wx, and talk back and forth using wx.CallAfter (or whatever
that API is) and reactor.callFromThread... or you can use wxreactor and
then both reactor and wx run in same thread.




From rutt.4 at osu.edu  Thu Sep 15 19:16:54 2011
From: rutt.4 at osu.edu (Benjamin Rutt)
Date: Thu, 15 Sep 2011 21:16:54 -0400
Subject: [Twisted-Python] twisted and kerberos
Message-ID: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>

Hello twisted experts,

We are trying to add kerberos authentication to our existing twisted server.
 We haven't yet found a twisted specific library that can do this; any
pointers?

What we have found is python-krbV (https://fedorahosted.org/python-krbV/),
but we end up using it along with code like this to take over the socket
ourselves from twisted, when the client connects:

    self.transport.stopReading()
    self.transport.stopWriting()
    self.transport.socket.setblocking(1)

and then we use the self.transport.socket directly in blocking mode in
another thread (so it won't block the reactor).  In particular, we use code
like this to start the authentication process:

    ac = krbV.default_context().sendauth(self.transport.socket, ...)

…once the client has authenticated, we use:

    self.transport.socket.setblocking(0)
    self.transport.startReading()
    self.transport.startWriting()

to let twisted take over the socket again for the rest of the conversation.

So in the event there are no ready-to-go twisted libraries for kerberos, is
the above approach totally insane?
-- 
Benjamin Rutt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110915/4566cf15/attachment-0001.html>

From p.mayers at imperial.ac.uk  Fri Sep 16 05:24:31 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Fri, 16 Sep 2011 12:24:31 +0100
Subject: [Twisted-Python] twisted and kerberos
In-Reply-To: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>
References: <CAMWA1_raiAEQkUEVnGGUCf8Dn8mmt7XthGh7s5BtBPGpzu_ttg@mail.gmail.com>
Message-ID: <4E7331EF.4080108@imperial.ac.uk>

On 16/09/11 02:16, Benjamin Rutt wrote:
> Hello twisted experts,
> We are trying to add kerberos authentication to our existing twisted
> server. We haven't yet found a twisted specific library that can do
> this; any pointers?

Over which protocol?

Do you only want authentication, or integrity/confidentiality as well?

> What we have found is python-krbV

I've used PyKerberos before to implement HTTP Negotiate auth for Twisted 
Web, but PyKerberos doesn't give you any integrity, and only client-side 
confidentiality IIRC:

http://trac.calendarserver.org/browser/PyKerberos

The state of python Kerberos/GSSAPI libraries is a bit poor, so I wrote 
my own in Pyrex!

> (https://fedorahosted.org/python-krbV/), but we end up using it along
> with code like this to take over the socket ourselves from twisted, when
> the client connects:
> self.transport.stopReading()
> self.transport.stopWriting()
> self.transport.socket.setblocking(1)
> and then we use the self.transport.socket directly in blocking mode in
> another thread (so it won't block the reactor). In particular, we use
> code like this to start the authentication process:
> ac = krbV.default_context().sendauth(self.transport.socket, ...)
> …once the client has authenticated, we use:
> self.transport.socket.setblocking(0)
> self.transport.startReading()
> self.transport.startWriting()
> to let twisted take over the socket again for the rest of the conversation.
> So in the event there are no ready-to-go twisted libraries for kerberos,
> is the above approach totally insane?

So you're server-side?

I would advise using the GSSAPI stuff in PyKerberos; you drive the 
"authGSSServer*" functions in a loop, it gives you back the tokens and 
lets you handle the network transport yourself, so is easier to 
implement with Twisted.

Beware of course that the underlying GSS mechanism might block at any 
time; although in my experience this doesn't happen server-side, when 
using the Kerberos mech.

This will only be an option of course if you have control of the client 
and can switch to using GSSAPI there too.


Alternatively, you could modify your existing approach so that the 
entire Kerberos stuff ran in a deferToThread call, talking over a pipe 
or loopback TCP socket back to the main reactor, then use a dummy 
protocol to move the data back and forth to the "real" protocol. There 
may be easy/clean ways to do this using various Twisted utilities like 
twisted.protocols.policies.ProtocolWrapper, but I can't think of a 
design right now.



From exarkun at twistedmatrix.com  Sat Sep 17 22:05:36 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 18 Sep 2011 04:05:36 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1316318736.2.2088174540@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110918/bab03e55/attachment.html>

From fabian.rothfuchs at googlemail.com  Mon Sep 19 06:44:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 14:44:55 +0200
Subject: [Twisted-Python] <no subject>
Message-ID: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>

Hi Guys,

I'm relatively new to Twisted (as the most questioners I guess).
Without providing tons of distracting details, this is where I'm stuck w/
Twisted:

I currently build a server application that consists of a set of client
adapters, which (among others) use Telnet as transport protocol ­ so I chose
to use Twisted to write the client.
I already have all clients in place in an autarkic Twisted implementation
and it works just fine ­ thus, the crux is to get those autarkic snippets
under one reactor-hood.
As this application should ideally server forever, stopping the reactor
would mean to stop the whole application, which conflicts with it's
ideology.
During the night, the application will be fed new tasks ­ depending on what
those tasks are, the application needs to run specific workflows using
different adapters (and protocols).

Having said this, when starting the application (and hence the reactor), I'm
not yet aware of the following:
- which adapters I will need during
- when the connections are triggered

But all implementation examples and documentations I've found expect those
information to be present and provided to the reactor, prior to it's run():

for host in hosts:

    host, port = (host, 23)

    d = defer.Deferred()

    from twisted.internet import reactor

    factory = S12ClientFactory(d, username='root', password='admin')

    Connection = reactor.connectTCP(host, port, factory, timeout=5)

    d.addCallbacks(success, error)

    d.addBoth(logout)

reactor.run()


So I wonder, if you can dynamically feed the reactor with new tasks (I use
connectTCP for it), as it's not possible to start/stop it on demand (or if
there's an alternative approach):

from twisted.internet import reactor

reactor.run()

for host in hosts:

    host, port = (host, 23)

    d = defer.Deferred()

    factory = S12ClientFactory(d, username='root', password='admin')

    Connection = reactor.connectTCP(host, port, factory, timeout=5)

    d.addCallbacks(success, error)

    d.addBoth(logout)


If I try to do so, connection.state never leaves 'connecting' and I cannot
see any traffic going through the wire on the TCPDump?
I'd really appreciate any hints, as I'm feeling a bit lost :-)

Thanks
Fabian


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/7f455c79/attachment.html>

From jeff at ocjtech.us  Mon Sep 19 07:02:26 2011
From: jeff at ocjtech.us (Jeffrey Ollie)
Date: Mon, 19 Sep 2011 08:02:26 -0500
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
References: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <CAD-DQxRtNTKGD09MES1v7v4Pda6Owof0xCyiqLW3vcMLWfS+bQ@mail.gmail.com>

On Mon, Sep 19, 2011 at 7:44 AM, Fabian Rothfuchs
<fabian.rothfuchs at googlemail.com> wrote:
>
> for host in hosts:
>     host, port = (host, 23)
>     d = defer.Deferred()
>     from twisted.internet import reactor
>     factory = S12ClientFactory(d, username='root', password='admin')
>     Connection = reactor.connectTCP(host, port, factory, timeout=5)
>     d.addCallbacks(success, error)
>     d.addBoth(logout)
> reactor.run()

I'd put "from twisted.internet import reactor" outside of the loop.

> So I wonder, if you can dynamically feed the reactor with new tasks (I use
> connectTCP for it), as it's not possible to start/stop it on demand (or if
> there's an alternative approach):

Yes, you can, you should be able to call connectTCP any time before
the reactor is shut down with reactor.stop().

> from twisted.internet import reactor
>
> reactor.run()
> for host in hosts:
>     host, port = (host, 23)
>     d = defer.Deferred()
>     factory = S12ClientFactory(d, username='root', password='admin')
>     Connection = reactor.connectTCP(host, port, factory, timeout=5)
>     d.addCallbacks(success, error)
>     d.addBoth(logout)
>
> If I try to do so, connection.state never leaves 'connecting' and I cannot
> see any traffic going through the wire on the TCPDump?
> I'd really appreciate any hints, as I'm feeling a bit lost :-)

The first thing I saw is that you'll want "reactor.run()" after the
loop, otherwise that code won't get run until the system is ready to
shut down.

-- 
Jeff Ollie



From JOHN at egh.com  Mon Sep 19 07:19:07 2011
From: JOHN at egh.com (John Santos)
Date: Mon, 19 Sep 2011 09:19:07 -0400
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <1110919085125.40537A-100000@Ives.egh.com>


I'm a newbie compared to most of the people on this list, but this is a
question I think I can answer:

Your call to reactor.run() in main() won't return until the reactor shuts
down.  After reactor.run(), *everything* happens in a deferred, until one
of them shuts down the reactor.

One thing you can do is make a small initial startup method that
you supply to reactor.callLater with a delay of 0, that does the loop on
the connectTCP()'s.  It will start up your initial set of connections.

If future events tell your application to make more connections, you
can perform more connectTCP()'s in the deferred triggered by the event.

------

def initialConnectionStartup:

    for host in hosts:

        host, port = (host, 23)

        d = defer.Deferred()

        factory = S12ClientFactory(d, username='root', password='admin')

        Connection = reactor.connectTCP(host, port, factory, timeout=5)

        d.addCallbacks(success, error)

        d.addBoth(logout)


...

# __main__

reactor.callLater(0,initialConnectionStartup)
reactor.run()

------------


Hope this helps.

-- 
John Santos
Evans Griffiths & Hart, Inc.
781-861-0670 ext 539

From johann.borck at densedata.com  Mon Sep 19 07:26:00 2011
From: johann.borck at densedata.com (Johann Borck)
Date: Mon, 19 Sep 2011 15:26:00 +0200
Subject: [Twisted-Python] <no subject>
In-Reply-To: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
References: <CA9D0564.1B406%fabian.rothfuchs@gmail.com>
Message-ID: <4E7742E8.1060004@densedata.com>

On 09/19/2011 02:44 PM, Fabian Rothfuchs wrote:
> Hi Guys,
> [...]
> So I wonder, if you can dynamically feed the reactor with new tasks (I use connectTCP for it), as 
> it's not possible to start/stop it on demand (or if there's an alternative approach):
>
Hi,
in general you do [whatever you want] in response to some event, which might be connectionMade, 
dataReceived, a periodic call from LoopingCall, a one-shot event from reactor.callLater or any other 
API that informs you about certain events. You can take your code, as in your example, and run it 
inside one of these callables or another callable you trigger from there. You absolutely do not have 
to set up everything before you call reactor.run. Just create a callable (at any time), make sure 
that whatever should trigger it gets a reference to it, and then call it whenever appropriate. Also, 
look at Deferreds, they provide an API for callbacks, chaining them together and other useful stuff.

regards,
Johann

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/6766ab9b/attachment.html>

From fabian.rothfuchs at googlemail.com  Mon Sep 19 12:03:20 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 20:03:20 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <mailman.5.1316448002.382.twisted-python@twistedmatrix.com>
Message-ID: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>

>One thing you can do is make a small initial startup method that
>you supply to reactor.callLater with a delay of 0, that does the loop on
>the connectTCP()'s.  It will start up your initial set of connections.

Thanks John, this was *really* helpful!
I now did the following:
1. On Startup, the application starts one threaded reactor with a NOP
Protocol which
connects to 127.0.0.1:9 (discard socket).
2. The adapters use that threaded reactor as follows:
>>>for host in hosts:
>>> ...host, port = (host, 23)
>>> ...d = defer.Deferred()
>>> ...from twisted.internet import reactor
>>> ...factory = S12ClientFactory(d, username='root', password='admin')
>>> ...reactor.connectTCP(host, port, factory, timeout=5)
>>> ...d.addCallbacks(success, error)
>>> ...d.addBoth(logout)
>>> ...reactor.wakeUp()

The second important part was the wakeUp() call, which apparently triggers
the reactor
To end all blocking tasks.


My appreciations to Jeff and Johann as well for their help!

Fabian





From glyph at twistedmatrix.com  Mon Sep 19 12:16:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 14:16:56 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>
References: <CA9D4EDC.1B423%fabian.rothfuchs@gmail.com>
Message-ID: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>


On Sep 19, 2011, at 2:03 PM, Fabian Rothfuchs wrote:

> The second important part was the wakeUp() call, which apparently triggers
> the reactor
> To end all blocking tasks.

For the most part, you have got the right idea now, but this is a BIG flashing red light for me.  wakeUp() shouldn't actually be a public method at all; its _only_ use is as part of the implementation of 'callFromThread'.  You should never, ever call it, and if you do call it, it should appear to do nothing at all.

Are you making use of the reactor from multiple threads?  This is not allowed, and will break horribly, although it can sometimes (briefly) be made to appear to work by calling wakeUp().

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/b0c17eab/attachment.html>

From fabian.rothfuchs at googlemail.com  Mon Sep 19 13:02:18 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 21:02:18 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>
Message-ID: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>

Well no, not from multiple threads.
I have only two threads ­ one main thread, which is the Django framework,
and one detached 
thread for the reactor, as the reactor itself would be blocking Django.

All Adapters are in Django, and are reaching out to the one reactor in the
thread without threading themselves.
Is this 'allowed' ?

Fabian

From:  Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Mon, 19 Sep 2011 14:16:56 -0400
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16


On Sep 19, 2011, at 2:03 PM, Fabian Rothfuchs wrote:

> The second important part was the wakeUp() call, which apparently triggers
> the reactor
> To end all blocking tasks.

For the most part, you have got the right idea now, but this is a BIG
flashing red light for me.  wakeUp() shouldn't actually be a public method
at all; its _only_ use is as part of the implementation of 'callFromThread'.
You should never, ever call it, and if you do call it, it should appear to
do nothing at all.

Are you making use of the reactor from multiple threads?  This is not
allowed, and will break horribly, although it can sometimes (briefly) be
made to appear to work by calling wakeUp().

-glyph
_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/c73e6603/attachment.html>

From glyph at twistedmatrix.com  Mon Sep 19 13:21:34 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 15:21:34 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
References: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
Message-ID: <F1413902-053F-4AB7-8549-135D5BF95FCE@twistedmatrix.com>


On Sep 19, 2011, at 3:02 PM, Fabian Rothfuchs wrote:

> Well no, not from multiple threads.
> I have only two threads – one main thread, which is the Django framework, and one detached 
> thread for the reactor, as the reactor itself would be blocking Django.
> 
> All Adapters are in Django, and are reaching out to the one reactor in the thread without threading themselves.
> Is this 'allowed' ?

I guess I should have said "supported", since clearly Python allows it :).

This is fine - depending very heavily what you mean by "reaching out to the one reactor".  Are they doing this reaching out via callFromThread (or something that calls it, like blockingCallFromThread)?  That is OK.  Calling reactor APIs (like connectTCP, or listenTCP, or callLater) from your Django thread will break.

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/c6578839/attachment.html>

From fabian.rothfuchs at googlemail.com  Mon Sep 19 13:40:04 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 21:40:04 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <F1413902-053F-4AB7-8549-135D5BF95FCE@twistedmatrix.com>
Message-ID: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>

That¹s a tremendous advice!
Indeed I was directly calling connectTCP() - I changed it to do like

reactor.callFromThread(reactor.connectTCP, host, port, factory, timeout=5)

Thanks!
Fabian


From:  Glyph Lefkowitz <glyph at twistedmatrix.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Mon, 19 Sep 2011 15:21:34 -0400
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16


On Sep 19, 2011, at 3:02 PM, Fabian Rothfuchs wrote:

> Well no, not from multiple threads.
> I have only two threads ­ one main thread, which is the Django framework, and
> one detached 
> thread for the reactor, as the reactor itself would be blocking Django.
> 
> All Adapters are in Django, and are reaching out to the one reactor in the
> thread without threading themselves.
> Is this 'allowed' ?

I guess I should have said "supported", since clearly Python allows it :).

This is fine - depending very heavily what you mean by "reaching out to the
one reactor".  Are they doing this reaching out via callFromThread (or
something that calls it, like blockingCallFromThread)?  That is OK.  Calling
reactor APIs (like connectTCP, or listenTCP, or callLater) from your Django
thread will break.

-glyph

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/0ea0ff73/attachment.html>

From glyph at twistedmatrix.com  Mon Sep 19 13:49:56 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 19 Sep 2011 15:49:56 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>
References: <CA9D66F5.1B477%fabian.rothfuchs@gmail.com>
Message-ID: <47141A78-6322-4573-8046-23876FC4857F@twistedmatrix.com>


On Sep 19, 2011, at 3:40 PM, Fabian Rothfuchs wrote:

> That’s a tremendous advice!
> Indeed I was directly calling connectTCP() - I changed it to do like         
> 
> reactor.callFromThread(reactor.connectTCP, host, port, factory, timeout=5)
> 
> Thanks!

No problem!  I'm glad I caught this before it caused you serious trouble.

Tell your friends: threads are bad!  callFromThread is your best and only defense against the Dark Arts! :)

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110919/75dc949f/attachment.html>

From exarkun at twistedmatrix.com  Mon Sep 19 13:53:58 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 19 Sep 2011 19:53:58 -0000
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
References: <225F11A7-9352-417E-A175-A2B5A3C66157@twistedmatrix.com>
	<CA9D58D4.1B440%fabian.rothfuchs@gmail.com>
Message-ID: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>

On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>Well no, not from multiple threads.
>I have only two threads � one main thread, which is the Django 
>framework,
>and one detached
>thread for the reactor, as the reactor itself would be blocking Django.
>
>All Adapters are in Django, and are reaching out to the one reactor in 
>the
>thread without threading themselves.
>Is this 'allowed' ?

No.  You can only call Twisted APIs in a single thread.  The thread 
everything will happen in is the one you call reactor.run() in, so 
that's the one you have to call all other APIs in.  There is one 
exception, reactor.callFromThread, which you can call from any thread. 
It lets you schedule another call to happen in the same thread as 
reactor.run was called in.

Jean-Paul



From fabian.rothfuchs at googlemail.com  Mon Sep 19 14:05:07 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Mon, 19 Sep 2011 22:05:07 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>
Message-ID: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>

So JP,
 
Having the reactor running in a first thread and *all* the rest in a
second one
is alright, if the second one calls the reactor via callFromThread() ?

Elsewise, I need to find out how to wrap Twisted around Django… hum…

Fabian



On 9/19/11 9:53 PM, "exarkun at twistedmatrix.com"
<exarkun at twistedmatrix.com> wrote:

>On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>>Well no, not from multiple threads.
>>I have only two threads � one main thread, which is the Django
>>framework,
>>and one detached
>>thread for the reactor, as the reactor itself would be blocking Django.
>>
>>All Adapters are in Django, and are reaching out to the one reactor in
>>the
>>thread without threading themselves.
>>Is this 'allowed' ?
>
>No.  You can only call Twisted APIs in a single thread.  The thread
>everything will happen in is the one you call reactor.run() in, so
>that's the one you have to call all other APIs in.  There is one
>exception, reactor.callFromThread, which you can call from any thread.
>It lets you schedule another call to happen in the same thread as
>reactor.run was called in.
>
>Jean-Paul
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From ldanielburr at me.com  Mon Sep 19 14:15:33 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Mon, 19 Sep 2011 15:15:33 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
References: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
Message-ID: <op.v12nwkpbeyn2q3@tiassa.local>

Hi,

On Mon, 19 Sep 2011 15:05:07 -0500, Fabian Rothfuchs  
<fabian.rothfuchs at googlemail.com> wrote:

> So JP,
> Having the reactor running in a first thread and *all* the rest in a
> second one
> is alright, if the second one calls the reactor via callFromThread() ?
>
> Elsewise, I need to find out how to wrap Twisted around Django… hum…
>

You could run django as a wsgi application inside twisted.

Hope this helps,

L. Daniel Burr




From exarkun at twistedmatrix.com  Mon Sep 19 15:04:19 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 19 Sep 2011 21:04:19 -0000
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
References: <20110919195358.1808.1045692755.divmod.xquotient.920@localhost.localdomain>
	<CA9D6B91.1B47D%fabian.rothfuchs@gmail.com>
Message-ID: <20110919210419.1808.302210372.divmod.xquotient.922@localhost.localdomain>

On 08:05 pm, fabian.rothfuchs at googlemail.com wrote:
>So JP,
>
>Having the reactor running in a first thread and *all* the rest in a
>second one
>is alright, if the second one calls the reactor via callFromThread() ?

Yes, that's fine.  (I think Glyph got you pointed in the right 
direction, I didn't see the next two messages in the thread until after 
I sent my reply.)

Jean-Paul
>Elsewise, I need to find out how to wrap Twisted around Django 26 hum 26
>
>Fabian
>
>
>
>On 9/19/11 9:53 PM, "exarkun at twistedmatrix.com"
><exarkun at twistedmatrix.com> wrote:
>>On 07:02 pm, fabian.rothfuchs at googlemail.com wrote:
>>>Well no, not from multiple threads.
>>>I have only two threads �FD one main thread, which is the Django
>>>framework,
>>>and one detached
>>>thread for the reactor, as the reactor itself would be blocking 
>>>Django.
>>>
>>>All Adapters are in Django, and are reaching out to the one reactor 
>>>in
>>>the
>>>thread without threading themselves.
>>>Is this 'allowed' ?
>>
>>No.  You can only call Twisted APIs in a single thread.  The thread
>>everything will happen in is the one you call reactor.run() in, so
>>that's the one you have to call all other APIs in.  There is one
>>exception, reactor.callFromThread, which you can call from any thread.
>>It lets you schedule another call to happen in the same thread as
>>reactor.run was called in.
>>
>>Jean-Paul
>>
>>_______________________________________________
>>Twisted-Python mailing list
>>Twisted-Python at twistedmatrix.com
>>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From fabian.rothfuchs at googlemail.com  Tue Sep 20 05:38:00 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 13:38:00 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <op.v12nwkpbeyn2q3@tiassa.local>
Message-ID: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>

As Twisted points out not to be thread-safe, why would it be in WSGI?

Due to the sensibility of the project I cannot afford things to go wrong
because of not synchronized threads or other pitfalls, so I actually
decided
to to the asynchronous way, and this bites with WSGI.

Fabian


On 9/19/11 10:15 PM, "L. Daniel Burr" <ldanielburr at me.com> wrote:
>
>You could run django as a wsgi application inside twisted.
>
>Hope this helps,
>
>L. Daniel Burr
>
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





From don at delphexonline.com  Tue Sep 20 06:51:26 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 14:51:26 +0200
Subject: [Twisted-Python] Protection against flooding
Message-ID: <4E788C4E.7040206@delphexonline.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/596347cd/attachment.html>

From fabian.rothfuchs at googlemail.com  Tue Sep 20 09:11:23 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 17:11:23 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E788C4E.7040206@delphexonline.com>
Message-ID: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>

In your Protocol, I would implement a specific Error that  might be returned
by the server in such burst situations.
The clients should interpret that error in a way that lets them reconnect to
the server after a randomly chosen interval.
This way you immediately eliminate the burst without running into the
situation where you might get another and another and another

A good help for that might be the TR-069 protocol specification, which deals
with HTTP connections from 1 server to millions (!) of clients:
http://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf


From:  Don Schoeman <don at delphexonline.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 14:51:26 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  [Twisted-Python] Protection against flooding

    
 Hi all,
 
 Before I start digging in the Twisted code, I'd just like to bump this off
you in case the solution is obvious...
 
 I have a lot of clients having permanent connections to my TCP server.
These clients are devices that will buffer data if it can't connect to the
server. I can see a possible problem in the future if/when for whatever
reason there is downtime on my server or the network and all these devices
start connecting and transmitting their buffered data once the server is
back up, potentially causing server flooding.
 
 What would be a good area to start looking into preventing something like
this from happening? My first thoughts are to simply limit an X number of
new connections per minute (or per X seconds) and to simply immediately drop
new connections if it exceeds that limit. (I'd probably implement this on
Protocol level). Over time the connections should theoretically normalise as
the buffered data on the devices are also limited.
 
 Of course it would be better to not allow the connections from being
established in the first place if the limits are exceeded (will be great for
DDOS protection), but I have a feeling that might be difficult to achieve.
 
 Any thoughts/tips or even links to examples?
 
 Kind Regards,
 Don
 
 
  
_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/79849bc2/attachment.html>

From don at delphexonline.com  Tue Sep 20 09:26:48 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 17:26:48 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>
References: <CA9E78DA.1B57B%fabian.rothfuchs@gmail.com>
Message-ID: <4E78B0B8.7030406@delphexonline.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/2105942f/attachment.html>

From fabian.rothfuchs at googlemail.com  Tue Sep 20 09:41:31 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 17:41:31 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E78B0B8.7030406@delphexonline.com>
Message-ID: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>

Don,

If you can't solve the problem proactively by adapting the clients,
You probably need to deal with it on the server side. The common technique
here
Is to use load balancers.

For a software solution, you might want to take a look at
http://sourceforge.net/projects/pythondirector/ .

However, IMHO a (server) application should concentrate on it's purpose.
For tasks related to surrounded issues you should include respective
systems and applications
specialized on dealing with those.
Having said this, that's more a System Integration topic than a
Development one.

Cheers,
Fabian



From:  Don Schoeman <don at delphexonline.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 17:26:48 +0200
To:  <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Protection against flooding


  
    
  
  
    Hi Fabian,
      
      Unfortunately I don't have control over the protocol itself as the
      devices are made by different manufacturers. However, your email
      did highlight the issue that devices will in very quick succession
      try to re-establish connections potentially causing issues in
      other areas such as our firewalls.
      
      Kind Regards,
      Don
      
    
    On 20/09/2011 17:11, Fabian Rothfuchs wrote:
    
      In your Protocol, I would implement a specific Error that
         might be returned by the server in such burst situations.
      The clients should interpret that error in a way that lets
        them reconnect to the server after a randomly chosen interval.
      This way you immediately eliminate the burst without running
        into the situation where you might get another and another and
        another
      
      
      A good help for that might be the TR-069 protocol
        specification, which deals with HTTP connections from 1 server
        to millions (!) of clients:
      
http://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf
      
      
      
      
      
        From:  Don
          Schoeman <don at delphexonline.com>
          Reply-To:  Twisted
          general discussion <twisted-python at twistedmatrix.com>
          Date:  Tue, 20 Sep
          2011 14:51:26 +0200
          To:  Twisted general
          discussion <twisted-python at twistedmatrix.com>
          Subject: 
          [Twisted-Python] Protection against flooding
        
        
        
        
          
           Hi
              all,
              
              Before I start digging in the Twisted code, I'd just like
              to bump this off you in case the solution is obvious...
              
              I have a lot of clients having permanent connections to my
              TCP server. These clients are devices that will buffer
              data if it can't connect to the server. I can see a
              possible problem in the future if/when for whatever reason
              there is downtime on my server or the network and all
              these devices start connecting and transmitting their
              buffered data once the server is back up, potentially
              causing server flooding.
              
              What would be a good area to start looking into preventing
              something like this from happening? My first thoughts are
              to simply limit an X number of new connections per minute
              (or per X seconds) and to simply immediately drop new
              connections if it exceeds that limit. (I'd probably
              implement this on Protocol level). Over time the
              connections should theoretically normalise as the buffered
              data on the devices are also limited.
              
              Of course it would be better to not allow the connections
              from being established in the first place if the limits
              are exceeded (will be great for DDOS protection), but I
              have a feeling that might be difficult to achieve.
              
              Any thoughts/tips or even links to examples?
              
              Kind Regards,
              Don
              
              
             
        
        _______________________________________________
        Twisted-Python mailing list
        Twisted-Python at twistedmatrix.com
        http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
      
      
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/li
stinfo/twisted-python
    

  


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/li
stinfo/twisted-python





From don at delphexonline.com  Tue Sep 20 10:08:23 2011
From: don at delphexonline.com (Don Schoeman)
Date: Tue, 20 Sep 2011 18:08:23 +0200
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>
References: <CA9E7DCA.1B589%fabian.rothfuchs@gmail.com>
Message-ID: <4E78BA77.3000204@delphexonline.com>

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/3957cc78/attachment.html>

From ldanielburr at me.com  Tue Sep 20 10:21:57 2011
From: ldanielburr at me.com (L. Daniel Burr)
Date: Tue, 20 Sep 2011 11:21:57 -0500
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>
References: <CA9E362C.1B4B8%fabian.rothfuchs@gmail.com>
Message-ID: <op.v137qv1weyn2q3@tiassa.local>

Hi Fabian,


On Tue, 20 Sep 2011 06:38:00 -0500, Fabian Rothfuchs  
<fabian.rothfuchs at googlemail.com> wrote:

> As Twisted points out not to be thread-safe, why would it be in WSGI?
>
> Due to the sensibility of the project I cannot afford things to go wrong
> because of not synchronized threads or other pitfalls, so I actually
> decided
> to to the asynchronous way, and this bites with WSGI.
>
> Fabian
>

Sorry for any confusion, but I never said anything about using twisted as  
a WSGI container for purposes of ensuring thread-safety.  I was only  
responding to your question about "how to wrap Django in twisted", and  
running Django inside twisted's WSGI container is one way to do that.

As you've already noted, the WSGI model doesn't take async frameworks like  
twisted into account.  This was a deliberate decision by the author of the  
spec, who originally said something to the effect that an async WSGI model  
would end up looking like twisted anyway.

If you can afford to make the change, running twisted as a completely  
separate service in another process, and implementing communication  
between your Django server and your twisted server via a protocol might  
simplify things a bit in terms of coordination.

Hope this helps,

L. Daniel Burr



From fabian.rothfuchs at googlemail.com  Tue Sep 20 10:42:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 18:42:55 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <op.v137qv1weyn2q3@tiassa.local>
Message-ID: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>

Hi Daniel,

>Sorry for any confusion, but I never said anything about using twisted as
> 
>a WSGI container for purposes of ensuring thread-safety.  I was only
>responding to your question about "how to wrap Django in twisted", and
>running Django inside twisted's WSGI container is one way to do that.


Oh alright - sorry :)

>If you can afford to make the change, running twisted as a completely
>separate service in another process, and implementing communication
>between your Django server and your twisted server via a protocol might
>simplify things a bit in terms of coordination.

This is exactly the kind of architecture I'm currently spying out :)

Thanks for confirming the general correctness of my idea!
Fabian





From glyph at twistedmatrix.com  Tue Sep 20 10:48:33 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 12:48:33 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>
References: <CA9E8E3F.1B5BB%fabian.rothfuchs@gmail.com>
Message-ID: <10D2EEB4-BE62-404E-9690-81BDFA713DB6@twistedmatrix.com>


On Sep 20, 2011, at 12:42 PM, Fabian Rothfuchs wrote:

> Hi Daniel,
> 
>> Sorry for any confusion, but I never said anything about using twisted as
>> 
>> a WSGI container for purposes of ensuring thread-safety.  I was only
>> responding to your question about "how to wrap Django in twisted", and
>> running Django inside twisted's WSGI container is one way to do that.
> 
> 
> Oh alright - sorry :)
> 
>> If you can afford to make the change, running twisted as a completely
>> separate service in another process, and implementing communication
>> between your Django server and your twisted server via a protocol might
>> simplify things a bit in terms of coordination.
> 
> This is exactly the kind of architecture I'm currently spying out :)
> 
> Thanks for confirming the general correctness of my idea!
> Fabian

You can't run Django by itself, though; it needs a WSGI container.  So you're either dealing with coordinating between 2 pieces of software here or 3.  In this case, fewer is always better :).  Using Twisted's WSGI container lets you use callFromThread or blockingCallFromThread to call pretty much whatever Twisted or Twisted-using API you want; I don't see how this would be much simplified by pushing that communication over a socket, since Django isn't going to have an event loop of its own anyway, and there will be blocking communication at some point.

There's nothing wrong with coordinating with Twisted via a socket, it will work fine, but it's extra complexity that you probably don't need.  I would recommend using Twisted's WSGI support and using callFromThread most cases.

-glyph




From fabian.rothfuchs at googlemail.com  Tue Sep 20 11:12:44 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 19:12:44 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <10D2EEB4-BE62-404E-9690-81BDFA713DB6@twistedmatrix.com>
Message-ID: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>

>>>
>>>If you can afford to make the change, running twisted as a completely
>>> separate service in another process, and implementing communication
>>> between your Django server and your twisted server via a protocol might
>>> simplify things a bit in terms of coordination.
>> 
>> This is exactly the kind of architecture I'm currently spying out :)
>> 
>> Thanks for confirming the general correctness of my idea!
>> Fabian
>
>You can't run Django by itself, though; it needs a WSGI container.  So
>you're either dealing with coordinating between 2 pieces of software here
>or 3.  In this case, fewer is always better :).  Using Twisted's WSGI
>container lets you use callFromThread or blockingCallFromThread to call
>pretty much whatever Twisted or Twisted-using API you want; I don't see
>how this would be much simplified by pushing that communication over a
>socket, since Django isn't going to have an event loop of its own anyway,
>and there will be blocking communication at some point.
>
>There's nothing wrong with coordinating with Twisted via a socket, it
>will work fine, but it's extra complexity that you probably don't need.
>I would recommend using Twisted's WSGI support and using callFromThread
>most cases.


Well. Initially the idea was to have Django as the Application's Core, and
Twisted (e.g. The Reactor) running somewhere in the background, to be used
whenever it's needed.
For instance, if the Application needs to communicate via Telnet, Django
would tell the Reactor to do stuff.
But this now turned out to be inefficient and far too complex, if you want
to go the asynchronous way instead of the WSGI one.

The idea now is to change responsibilities.
The Application Core will be built using Twisted instead of Django, and
Django will be used as the side framework for ORM, GUI and that stuff.
Django itself can run in a separate Thread or a separate process or even
on a separate machine (which is requirement anyway).
And yes, for this the architecture, the Core needs to listen on an
event-socket that tells it stuff like 'communicate via Telnet'.
In Django, I'd realize that via Web Services - the Twisted way would be a
Socket (e.g. A Protocol), I guess.

I feel quite happy with that solution till now (planning since 4 hours and
it seems like it could be really working).

Fabian






From glyph at twistedmatrix.com  Tue Sep 20 11:29:29 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 13:29:29 -0400
Subject: [Twisted-Python] Protection against flooding
In-Reply-To: <4E788C4E.7040206@delphexonline.com>
References: <4E788C4E.7040206@delphexonline.com>
Message-ID: <529EB6BC-5257-4046-9168-5DE71C956826@twistedmatrix.com>


On Sep 20, 2011, at 8:51 AM, Don Schoeman wrote:

> Hi all,
> 
> Before I start digging in the Twisted code, I'd just like to bump this off you in case the solution is obvious...
> 
> I have a lot of clients having permanent connections to my TCP server. These clients are devices that will buffer data if it can't connect to the server. I can see a possible problem in the future if/when for whatever reason there is downtime on my server or the network and all these devices start connecting and transmitting their buffered data once the server is back up, potentially causing server flooding.
> 
> What would be a good area to start looking into preventing something like this from happening? My first thoughts are to simply limit an X number of new connections per minute (or per X seconds) and to simply immediately drop new connections if it exceeds that limit. (I'd probably implement this on Protocol level). Over time the connections should theoretically normalise as the buffered data on the devices are also limited.
> 
> Of course it would be better to not allow the connections from being established in the first place if the limits are exceeded (will be great for DDOS protection), but I have a feeling that might be difficult to achieve.
> 
> Any thoughts/tips or even links to examples?

My suggestion would be "try it and see what happens".  You may be surprised to find that your Twisted app deals with the load just fine.  I've seen several applications for which this is the case.

If there really is an issue, a running system will give you a _lot_ more information about what the issue might be than a guess in advance :).

You may rest assured, however, that Twisted has all the APIs you will need to use to shed load, if that is in fact necessary; you can call stopListening() on the Port object that is currently accepting your connections, you can call stopReading() which will take it out of the reactor (but allow the listen queue to continue backing up); you can call pauseProducing() on any connection that is feeding you too much data.

Does this answer your question?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/642cf524/attachment.html>

From glyph at twistedmatrix.com  Tue Sep 20 11:37:32 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 13:37:32 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
Message-ID: <FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>


On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:

> I feel quite happy with that solution till now (planning since 4 hours and
> it seems like it could be really working).

Great, glad to hear it.  Let us know how it goes!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/16a1ba08/attachment.html>

From j.veenvan at gmail.com  Tue Sep 20 13:33:39 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Tue, 20 Sep 2011 21:33:39 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
Message-ID: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>

For this websocket cms project im working on, i also run django in a wsgi
container. I wonder if im using  it the right way? (
https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

cheers,

Jeroen

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>
> I feel quite happy with that solution till now (planning since 4 hours and
> it seems like it could be really working).
>
>
> Great, glad to hear it.  Let us know how it goes!
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/80b2319a/attachment.html>

From fabian.rothfuchs at googlemail.com  Tue Sep 20 13:49:55 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 21:49:55 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
Message-ID: <CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>

Hey Jeroen,

As I learned so far, using WSGI to combine Django and Twisted isn't a bad
thing in general.
It's just that you need to align your code and 'mental model' to develop
multi-threaded (WSGI) or asynchronous (if that makes any difference to you
at all).

In my special case, I develop a network middleware system where
thread-safetiness is extremely important and it's more than realistic that
If I'd use non-thread-safe techniques, my modules will bite each other :)

So I think you're good (but I'm still a Twisted noob).

Cheers
Fabian


From:  Jeroen van Veen <j.veenvan at gmail.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 21:33:39 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16

For this websocket cms project im working on, i also run django in a wsgi
container. I wonder if im using  it the right way?
(https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

cheers,

Jeroen

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
> 
> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
> 
>> I feel quite happy with that solution till now (planning since 4 hours and
>> it seems like it could be really working).
> 
> Great, glad to hear it.  Let us know how it goes!
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/24ec7a57/attachment.html>

From j.veenvan at gmail.com  Tue Sep 20 14:10:02 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Tue, 20 Sep 2011 22:10:02 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>
References: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
	<CA9EB9FD.1B60A%fabian.rothfuchs@gmail.com>
Message-ID: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>

Thanks, it would be nice to see some more examples of django usage with
twisted. I've searched the web a while ago, but could only find a few
examples. Especially the
part about multi-threading/async would be nice to read something
about(doesn't make much sense to me yet). All i know is that i used a
single-threaded wsgi thing to make the autoreload
functionality work(useful for webdevving).

cheers,

Jeroen

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>

> Hey Jeroen,
>
> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
> thing in general.
> It's just that you need to align your code and 'mental model' to develop
> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
> at all).
>
> In my special case, I develop a network middleware system where
> thread-safetiness is extremely important and it's more than realistic that
> If I'd use non-thread-safe techniques, my modules will bite each other :)
>
> So I think you're good (but I'm still a Twisted noob).
>
> Cheers
> Fabian
>
>
> From: Jeroen van Veen <j.veenvan at gmail.com>
>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Tue, 20 Sep 2011 21:33:39 +0200
>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way? (
> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>
> cheers,
>
> Jeroen
>
> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>
>>
>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>
>> I feel quite happy with that solution till now (planning since 4 hours and
>> it seems like it could be really working).
>>
>>
>> Great, glad to hear it.  Let us know how it goes!
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/cbe0d547/attachment.html>

From fabian.rothfuchs at googlemail.com  Tue Sep 20 14:17:43 2011
From: fabian.rothfuchs at googlemail.com (Fabian Rothfuchs)
Date: Tue, 20 Sep 2011 22:17:43 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
Message-ID: <CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>

That's probably the best Twisted Intro available in the net:
http://krondo.com/?page_id=1327

The first chapter explains the differences between sync/async/threaded.

Fabian


From:  Jeroen van Veen <j.veenvan at gmail.com>
Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Date:  Tue, 20 Sep 2011 22:10:02 +0200
To:  Twisted general discussion <twisted-python at twistedmatrix.com>
Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16

Thanks, it would be nice to see some more examples of django usage with
twisted. I've searched the web a while ago, but could only find a few
examples. Especially the
part about multi-threading/async would be nice to read something
about(doesn't make much sense to me yet). All i know is that i used a
single-threaded wsgi thing to make the autoreload
functionality work(useful for webdevving).

cheers,

Jeroen

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
> Hey Jeroen,
> 
> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
> thing in general.
> It's just that you need to align your code and 'mental model' to develop
> multi-threaded (WSGI) or asynchronous (if that makes any difference to you at
> all).
> 
> In my special case, I develop a network middleware system where
> thread-safetiness is extremely important and it's more than realistic that
> If I'd use non-thread-safe techniques, my modules will bite each other :)
> 
> So I think you're good (but I'm still a Twisted noob).
> 
> Cheers
> Fabian
> 
> 
> From:  Jeroen van Veen <j.veenvan at gmail.com>
> 
> Reply-To:  Twisted general discussion <twisted-python at twistedmatrix.com>
> Date:  Tue, 20 Sep 2011 21:33:39 +0200
> 
> To:  Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject:  Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
> 
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way?
> (https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
> 
> cheers,
> 
> Jeroen
> 
> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>> 
>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>> 
>>> I feel quite happy with that solution till now (planning since 4 hours and
>>> it seems like it could be really working).
>> 
>> Great, glad to hear it.  Let us know how it goes!
>> 
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> 
> 
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.comhttp://twistedmatrix.com/cgi-bin/mailman/listi
> nfo/twisted-python
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 

_______________________________________________ Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/2614e2b4/attachment.html>

From glyph at twistedmatrix.com  Tue Sep 20 14:29:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 20 Sep 2011 16:29:59 -0400
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
	<CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
Message-ID: <2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>


On Sep 20, 2011, at 3:33 PM, Jeroen van Veen wrote:

> For this websocket cms project im working on, i also run django in a wsgi container. I wonder if im using  it the right way? (https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)

Generally, yes, except for the "MainThreadWSGIResource" part.

First of all: you're taking your life in your own hands when you use a Twisted API that starts with a single underscore :-).  http://twistedmatrix.com/trac/wiki/CompatibilityPolicy

Second, _WSGIResponse _does_ run the response in a thread; your code isn't doing what it claims to be doing.  The right way to do this is not to override the WSGI layer, but to provide a fake threadpool whose 'callInThread' just calls the given callable on the main thread.

+1 for having a "plasmoids" module, by the way - does this software control a magnetically regulated plasma reaction at some point? :).

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110920/b6c732d2/attachment.html>

From a.libran at gmail.com  Tue Sep 20 17:40:24 2011
From: a.libran at gmail.com (David Kao)
Date: Wed, 21 Sep 2011 07:40:24 +0800
Subject: [Twisted-Python] trivial typo in core doc
Message-ID: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>

"""
For this reason, you must explicitly specific what remote classes will
be accepted, and how their local representatives are to be created.
"""

I think "explicitly specify" is what is intended.

I am new to twisted. Not sure how easy it would have been for me to
open a ticket or fix it myself, but for now I am simply recording this
typo.


David Kao



From exarkun at twistedmatrix.com  Tue Sep 20 18:47:33 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 21 Sep 2011 00:47:33 -0000
Subject: [Twisted-Python] trivial typo in core doc
In-Reply-To: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>
References: <CAG4NAK6_qhgsLe_HS-hj2dNn1+3gpsNcgHeBd0iDPXDtf_v5pw@mail.gmail.com>
Message-ID: <20110921004733.1808.390058834.divmod.xquotient.980@localhost.localdomain>

On 20 Sep, 11:40 pm, a.libran at gmail.com wrote:
>"""
>For this reason, you must explicitly specific what remote classes will
>be accepted, and how their local representatives are to be created.
>"""
>
>I think "explicitly specify" is what is intended.
>
>I am new to twisted. Not sure how easy it would have been for me to
>open a ticket or fix it myself, but for now I am simply recording this
>typo.

Thanks.  Filing tickets is easy and fun, and the only way anything gets 
done on Twisted. :)  I filed this one for you, consider it an example 
for future issues :)

http://twistedmatrix.com/trac/ticket/5266

Jean-Paul



From diego.uribe.gamez at gmail.com  Tue Sep 20 23:08:45 2011
From: diego.uribe.gamez at gmail.com (Diego Uribe Gamez)
Date: Wed, 21 Sep 2011 00:08:45 -0500
Subject: [Twisted-Python] Welcome to the "Twisted-Python" mailing list
	(Digest mode)
In-Reply-To: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
References: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
Message-ID: <CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>

hello:

I'm making a program that captures a GPS data from a ip port, it
I have an infinite loop to stay to listen, to finish out a
List each item, when the data reaches the List is displayed.

The idea is to put a reactor that allows me to use the variable "list"
without
regardless of the loop and direct it to another code. py can also be a
infinite loop or a file that is in need of the variable.

Files (source and input) are the same folder, do not know how to do it, I
would appreciate help.

Thank you.

-- 

Diego Alonso Uribe Gamez

Twitter: @DiegoUG <http://www.twitter.com/DiegoUG>

Google+: http://gplus.to/diegoug
------------------------------

Esta comunicación es confidencial, destinado únicamente para el llamado
destinatario (s) anterior y puede contener secretos comerciales u otra
información que está exenta de divulgación según la legislación aplicable.
Cualquier uso, difusión, distribución o copia de esta comunicación por
cualquier persona que no sea el destinatario con nombre (s) está
estrictamente prohibido.
------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/492e752e/attachment.html>

From _ at lvh.cc  Tue Sep 20 23:46:38 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Wed, 21 Sep 2011 13:46:38 +0800
Subject: [Twisted-Python] Welcome to the "Twisted-Python" mailing list
 (Digest mode)
In-Reply-To: <CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>
References: <mailman.0.1316580279.5692.twisted-python@twistedmatrix.com>
	<CAGiX-6X=QCZ4vsmm=HM45BKG4hj7ykA_6PH+cFWRNwkyoHi58g@mail.gmail.com>
Message-ID: <CAE_Hg6aykd91C7Pmfo-PX7_5LkPU1a7YPQOnc3YG4TO4EDOUcw@mail.gmail.com>

Wait. You are capturing GPS data from an IP port. Is that TCP? What format
is the data in? GPS?

I have worked on twisted.positioning, a library for doing GPS data with
Twisted, but this ticket is still in review.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/2192fd14/attachment.html>

From techtonik at gmail.com  Wed Sep 21 01:33:55 2011
From: techtonik at gmail.com (anatoly techtonik)
Date: Wed, 21 Sep 2011 10:33:55 +0300
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
	<CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
Message-ID: <CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>

Hi,

I faced the same problem - couldn't find repository for 0.5
While people are trying to convert stuff - it worth to place a
clearly visible pointer to a right direction on pyflakes code
page.

https://code.launchpad.net/pyflakes
--
anatoly t.



From alex.kirp at gmail.com  Wed Sep 21 02:50:30 2011
From: alex.kirp at gmail.com (=?KOI8-R?B?4czFy9PFyiDrydLQyd7OycvP1w==?=)
Date: Wed, 21 Sep 2011 14:50:30 +0600
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
Message-ID: <CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>

Hi Jessica,

Any luck with packaging?

2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
> Hi folks,
>
>> It would be nice if the ppa were up to date, though.  Maybe someone who
>> knows how to update it can share that information so that someone who
>> has time to keep it up to date can take over the job.
>
> I would like to volunteer for this. I don't know much about packaging
> and this seems like a good opportunity to learn.
>
> If there are no objections, what I'll do is:
> a) learn more about the ideal Twisted PPA situation (if you have
> thoughts on what that should be, tell me)
> b) extract the existing Twisted PPA knowledge from people
> c) add a PPA maintenance job description to
> http://twistedmatrix.com/trac/wiki/ProjectJobs
> d) get started updating the PPA
>
> If anyone else wants to help I'm happy to share the duties.
>
> Regards,
> -Jessica
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From j.veenvan at gmail.com  Wed Sep 21 03:01:37 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:01:37 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>
References: <CA9E91A8.1B5C5%fabian.rothfuchs@gmail.com>
	<FFF7F963-577F-4446-9608-47A68B3AE08E@twistedmatrix.com>
	<CAAh3Gi=_XvySQhu_6UVEzj_vJ+8an8Rr2eNYWOfRA2OEahyj1w@mail.gmail.com>
	<2F0CD687-2402-47DE-850C-01192B8F2B77@twistedmatrix.com>
Message-ID: <CAAh3GimcwUYDCefJz6LBO7-x=kcaZN3k9yCeXynfho0Q3FN0-Q@mail.gmail.com>

2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>

>
> On Sep 20, 2011, at 3:33 PM, Jeroen van Veen wrote:
>
> For this websocket cms project im working on, i also run django in a wsgi
> container. I wonder if im using  it the right way? (
> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>
>
> Generally, yes, except for the "MainThreadWSGIResource" part.
>
> First of all: you're taking your life in your own hands when you use a
> Twisted API that starts with a single underscore :-).
> http://twistedmatrix.com/trac/wiki/CompatibilityPolicy
>
Yea,
I don't mind :)

>
> Second, _WSGIResponse _does_ run the response in a thread; your code isn't
> doing what it claims to be doing.  The right way to do this is not to
> override the WSGI layer, but to provide a fake threadpool whose
> 'callInThread' just calls the given callable on the main thread.
>
Thanks, i'll try to find out how that works. Not really sure what to
callInThread?(the wsgiresponse probably?)

>
> +1 for having a "plasmoids" module, by the way - does this software control
> a magnetically regulated plasma reaction at some point? :).
>
Thanks for suggesting new terminology for modules :-)  It's nothing like
that though. It's just a glorified javascript parser


> -glyph
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/a9970374/attachment.html>

From j.veenvan at gmail.com  Wed Sep 21 03:02:17 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:02:17 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
References: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
	<CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
Message-ID: <CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>

Thanks, i'll read up about that. Still lots to learn about those topics.

2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>

> That's probably the best Twisted Intro available in the net:
> http://krondo.com/?page_id=1327
>
> The first chapter explains the differences between sync/async/threaded.
>
> Fabian
>
>
> From: Jeroen van Veen <j.veenvan at gmail.com>
> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Date: Tue, 20 Sep 2011 22:10:02 +0200
>
> To: Twisted general discussion <twisted-python at twistedmatrix.com>
> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>
> Thanks, it would be nice to see some more examples of django usage with
> twisted. I've searched the web a while ago, but could only find a few
> examples. Especially the
> part about multi-threading/async would be nice to read something
> about(doesn't make much sense to me yet). All i know is that i used a
> single-threaded wsgi thing to make the autoreload
> functionality work(useful for webdevving).
>
> cheers,
>
> Jeroen
>
> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>
>> Hey Jeroen,
>>
>> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
>> thing in general.
>> It's just that you need to align your code and 'mental model' to develop
>> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
>> at all).
>>
>> In my special case, I develop a network middleware system where
>> thread-safetiness is extremely important and it's more than realistic that
>> If I'd use non-thread-safe techniques, my modules will bite each other :)
>>
>> So I think you're good (but I'm still a Twisted noob).
>>
>> Cheers
>> Fabian
>>
>>
>> From: Jeroen van Veen <j.veenvan at gmail.com>
>>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Date: Tue, 20 Sep 2011 21:33:39 +0200
>>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>
>> For this websocket cms project im working on, i also run django in a wsgi
>> container. I wonder if im using  it the right way? (
>> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py)
>>
>> cheers,
>>
>> Jeroen
>>
>> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>>
>>>
>>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>>
>>> I feel quite happy with that solution till now (planning since 4 hours
>>> and
>>> it seems like it could be really working).
>>>
>>>
>>> Great, glad to hear it.  Let us know how it goes!
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>> _______________________________________________ Twisted-Python mailing
>> list Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
> _______________________________________________ Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/14a19f09/attachment.html>

From j.veenvan at gmail.com  Wed Sep 21 03:03:34 2011
From: j.veenvan at gmail.com (Jeroen van Veen)
Date: Wed, 21 Sep 2011 11:03:34 +0200
Subject: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
In-Reply-To: <CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>
References: <CAAh3Gi=1-M8my1eJgAyShr5bts+6eErPM-5OxT41gJ2506jkcw@mail.gmail.com>
	<CA9EC04A.1B61B%fabian.rothfuchs@gmail.com>
	<CAAh3Gi=wc1gWP0FE_CY3Xh_f9ssjratJgvgZNgKkv=wZd4Ry=w@mail.gmail.com>
Message-ID: <CAAh3Gikx9Tj6TtOQj=PWggPESWzMCR40+22dWsYkscwWpjcThw@mail.gmail.com>

Great source of information by the way.

2011/9/21 Jeroen van Veen <j.veenvan at gmail.com>

> Thanks, i'll read up about that. Still lots to learn about those topics.
>
>
> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>
>> That's probably the best Twisted Intro available in the net:
>> http://krondo.com/?page_id=1327
>>
>> The first chapter explains the differences between sync/async/threaded.
>>
>> Fabian
>>
>>
>> From: Jeroen van Veen <j.veenvan at gmail.com>
>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Date: Tue, 20 Sep 2011 22:10:02 +0200
>>
>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>
>> Thanks, it would be nice to see some more examples of django usage with
>> twisted. I've searched the web a while ago, but could only find a few
>> examples. Especially the
>> part about multi-threading/async would be nice to read something
>> about(doesn't make much sense to me yet). All i know is that i used a
>> single-threaded wsgi thing to make the autoreload
>> functionality work(useful for webdevving).
>>
>> cheers,
>>
>> Jeroen
>>
>> 2011/9/20 Fabian Rothfuchs <fabian.rothfuchs at googlemail.com>
>>
>>> Hey Jeroen,
>>>
>>> As I learned so far, using WSGI to combine Django and Twisted isn't a bad
>>> thing in general.
>>> It's just that you need to align your code and 'mental model' to develop
>>> multi-threaded (WSGI) or asynchronous (if that makes any difference to you
>>> at all).
>>>
>>> In my special case, I develop a network middleware system where
>>> thread-safetiness is extremely important and it's more than realistic that
>>> If I'd use non-thread-safe techniques, my modules will bite each other
>>> :)
>>>
>>> So I think you're good (but I'm still a Twisted noob).
>>>
>>> Cheers
>>> Fabian
>>>
>>>
>>> From: Jeroen van Veen <j.veenvan at gmail.com>
>>>
>>> Reply-To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>> Date: Tue, 20 Sep 2011 21:33:39 +0200
>>>
>>> To: Twisted general discussion <twisted-python at twistedmatrix.com>
>>> Subject: Re: [Twisted-Python] Twisted-Python Digest, Vol 90, Issue 16
>>>
>>> For this websocket cms project im working on, i also run django in a wsgi
>>> container. I wonder if im using  it the right way? (
>>> https://github.com/phrearch/hwios/blob/master/services/web_ui/service.py
>>> )
>>>
>>> cheers,
>>>
>>> Jeroen
>>>
>>> 2011/9/20 Glyph Lefkowitz <glyph at twistedmatrix.com>
>>>
>>>>
>>>> On Sep 20, 2011, at 1:12 PM, Fabian Rothfuchs wrote:
>>>>
>>>> I feel quite happy with that solution till now (planning since 4 hours
>>>> and
>>>> it seems like it could be really working).
>>>>
>>>>
>>>> Great, glad to hear it.  Let us know how it goes!
>>>>
>>>> _______________________________________________
>>>> Twisted-Python mailing list
>>>> Twisted-Python at twistedmatrix.com
>>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>>
>>>>
>>> _______________________________________________ Twisted-Python mailing
>>> list Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>>
>> _______________________________________________ Twisted-Python mailing
>> list Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/9e6aefb8/attachment.html>

From exarkun at twistedmatrix.com  Wed Sep 21 05:32:42 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Wed, 21 Sep 2011 11:32:42 -0000
Subject: [Twisted-Python] [Divmod-users] [ANN] Pyflakes 0.5.0
In-Reply-To: <CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>
References: <CAMcKhMQy_fnb13Co0s6y+LKgsizeMJTUFqGaPQocaUT0N=VgGQ@mail.gmail.com>
	<CAHZ8tnYW91swPPxOhfEDwm9eykYPceZB-CrMaPHD+TmkD0gcSg@mail.gmail.com>
	<CAMcKhMQLV_U2Z6ddFRS2-izD7iODVORo94ac68sAS2HtE8EBGA@mail.gmail.com>
	<CAHZ8tna9ob7bQm-qFXPqXwZVPb5M01apwhNVUPcG39esmkPGvw@mail.gmail.com>
	<CAMcKhMRE=7+ASO3mfTTLyQAqdSHArUKPXYp4MRb6qE2rxo-J8A@mail.gmail.com>
	<CAHZ8tnZQCb3NSivPQ886TXjRuvySX_hMNzvXi2Cw82xoq3G_1A@mail.gmail.com>
	<CAPkN8x+nm2FySKSmeWdrRn93XKiLeO1j_DxEfZoMdgsAVVa95w@mail.gmail.com>
Message-ID: <20110921113242.1808.559540104.divmod.xquotient.982@localhost.localdomain>

On 07:33 am, techtonik at gmail.com wrote:
>Hi,
>
>I faced the same problem - couldn't find repository for 0.5
>While people are trying to convert stuff - it worth to place a
>clearly visible pointer to a right direction on pyflakes code
>page.
>
>https://code.launchpad.net/pyflakes

There's no way to add custom text to that page.

Jean-Paul



From jessica.mckellar at gmail.com  Wed Sep 21 05:33:01 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Wed, 21 Sep 2011 07:33:01 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
Message-ID: <CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>

Hi Alex,

Thanks for checking in.

https://launchpad.net/~twisted-dev/+archive/ppa/ has the results of
some fumbling around with Natty and I have since moved the work to a
personal PPA so it doesn't pollute the twisted archive while I test
things.

Expect All The Progress to be made this weekend now that some of my
other commitments have come and gone. Anyone who already knows how to
do this should feel free to swoop in and get the new release on
launchpad, else I'll keep going at my snail's pace as I use this as an
opportunity to learn the packaging ropes. :)

-Jessica

2011/9/21 Алексей Кирпичников <alex.kirp at gmail.com>:
> Hi Jessica,
>
> Any luck with packaging?
>
> 2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
>> Hi folks,
>>
>>> It would be nice if the ppa were up to date, though.  Maybe someone who
>>> knows how to update it can share that information so that someone who
>>> has time to keep it up to date can take over the job.
>>
>> I would like to volunteer for this. I don't know much about packaging
>> and this seems like a good opportunity to learn.
>>
>> If there are no objections, what I'll do is:
>> a) learn more about the ideal Twisted PPA situation (if you have
>> thoughts on what that should be, tell me)
>> b) extract the existing Twisted PPA knowledge from people
>> c) add a PPA maintenance job description to
>> http://twistedmatrix.com/trac/wiki/ProjectJobs
>> d) get started updating the PPA
>>
>> If anyone else wants to help I'm happy to share the duties.
>>
>> Regards,
>> -Jessica
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jeandaniel.browne at gmail.com  Wed Sep 21 05:53:13 2011
From: jeandaniel.browne at gmail.com (Jean-Daniel)
Date: Wed, 21 Sep 2011 13:53:13 +0200
Subject: [Twisted-Python]  how to write a doc for Twisted with Sphinx?
Message-ID: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>

Hello,

Can we write a doc for Twisted using Sphinx at this point?

What is the status of the Lore to Sphinx transition project? I could find:

#4621 	lore2sphinx should make pretty links to included files.
#4586 	Code-listings generated by lore2sphinx should include line-numbers

Is there any other info/update available?

Cheers,



From kevin.horn at gmail.com  Wed Sep 21 06:31:40 2011
From: kevin.horn at gmail.com (Kevin Horn)
Date: Wed, 21 Sep 2011 07:31:40 -0500
Subject: [Twisted-Python] how to write a doc for Twisted with Sphinx?
In-Reply-To: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
References: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
Message-ID: <CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>

Currently this is waiting on changes to the Twisted release automation code.

Docs should still be written using Lore, and then you should check the Lore
buildbot to see if they are being translated to Sphinx properly.

If you care to take a look at the release automation code, please feel free.

Kevin Horn

On Wed, Sep 21, 2011 at 6:53 AM, Jean-Daniel <jeandaniel.browne at gmail.com>wrote:

> Hello,
>
> Can we write a doc for Twisted using Sphinx at this point?
>
> What is the status of the Lore to Sphinx transition project? I could find:
>
> #4621   lore2sphinx should make pretty links to included files.
> #4586   Code-listings generated by lore2sphinx should include line-numbers
>
> Is there any other info/update available?
>
> Cheers,
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/d8e7fb67/attachment.html>

From mithrandi at mithrandi.net  Wed Sep 21 08:28:20 2011
From: mithrandi at mithrandi.net (Tristan Seligmann)
Date: Wed, 21 Sep 2011 16:28:20 +0200
Subject: [Twisted-Python] Twisted plugins vs Python packaging
Message-ID: <CAMcKhMS0L0HeCQOHHK6gk_=Yg3M0DkEBbMrYg-LVhMVSdexOAg@mail.gmail.com>

I just kicked off a discussion (hopefully, anyway; it may turn out to
be a flamewar...) on distutils-sig[1] about $SUBJECT, continued from a
pip bug report I filed[2]. If you're interested in making Twisted play
better with the current crop of Python packaging systems and tools,
please follow along and/or chime in.

[1] http://mail.python.org/pipermail/distutils-sig/2011-September/018031.html

[2] https://github.com/pypa/pip/issues/355
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar



From diego.uribe.gamez at gmail.com  Wed Sep 21 09:34:25 2011
From: diego.uribe.gamez at gmail.com (Diego Uribe Gamez)
Date: Wed, 21 Sep 2011 10:34:25 -0500
Subject: [Twisted-Python] The idea is to put a reactor
Message-ID: <CAGiX-6V5LGM-=bQj+ktr=i-DeKRRC122p9p-uS4QqdGEnUmSQQ@mail.gmail.com>

hello:

I'm making a program that captures a GPS data from a ip port, it
I have an infinite loop to stay to listen, to finish out a
List each item, when the data reaches the List is displayed.

The idea is to put a reactor that allows me to use the variable "list"
without
regardless of the loop and direct it to another code. py can also be a
infinite loop or a file that is in need of the variable.

Files (source and input) are the same folder, do not know how to do it, I
would appreciate help.

Thank yo

-- 

Diego Alonso Uribe Gamez

Twitter: @DiegoUG <http://www.twitter.com/DiegoUG>

Google+: http://gplus.to/diegoug
------------------------------

Esta comunicación es confidencial, destinado únicamente para el llamado
destinatario (s) anterior y puede contener secretos comerciales u otra
información que está exenta de divulgación según la legislación aplicable.
Cualquier uso, difusión, distribución o copia de esta comunicación por
cualquier persona que no sea el destinatario con nombre (s) está
estrictamente prohibido.
------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/7148438d/attachment.html>

From glyph at twistedmatrix.com  Wed Sep 21 11:56:20 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Wed, 21 Sep 2011 13:56:20 -0400
Subject: [Twisted-Python] how to write a doc for Twisted with Sphinx?
In-Reply-To: <CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>
References: <CAHG3Bgi+33u5QocswgrkJTStRJO+szx6vv4HZ7Lvvenf1knxdg@mail.gmail.com>
	<CA+U=zK0g+Eg3Njf=v10q2eyAPcF4eykQ5kRjSx3d3SM-8_O97A@mail.gmail.com>
Message-ID: <59BF7129-A745-44BD-B1CC-239961C44166@twistedmatrix.com>

On Sep 21, 2011, at 8:31 AM, Kevin Horn wrote:

> Kevin Horn
> 
> On Wed, Sep 21, 2011 at 6:53 AM, Jean-Daniel <jeandaniel.browne at gmail.com> wrote:
> Hello,
> 
> Can we write a doc for Twisted using Sphinx at this point?
> 
> What is the status of the Lore to Sphinx transition project? I could find:
> 
> #4621   lore2sphinx should make pretty links to included files.
> #4586   Code-listings generated by lore2sphinx should include line-numbers
> 
> Is there any other info/update available?
> 
> Currently this is waiting on changes to the Twisted release automation code.
> 
> Docs should still be written using Lore, and then you should check the Lore buildbot to see if they are being translated to Sphinx properly.

Lore is just simple HTML with a few 'class' decorations for features like syntax highlighting (as you can see from the examples) so it should be easy enough to write.  If you want to write the document with Sphinx, someone on the development team would be happy to translate it manually - creating the content is much harder than writing the markup :).

> If you care to take a look at the release automation code, please feel free.

You can see the milestone here:

	<http://twistedmatrix.com/trac/milestone/Lore%20to%20Sphinx>

and the ticket for actually doing the conversion is here:

	<http://twistedmatrix.com/trac/ticket/4500>

there's already some commentary on that ticket explaining what needs to be done next.

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/d73d3020/attachment-0001.html>

From diego.uribe.gamez at gmail.com  Wed Sep 21 11:59:57 2011
From: diego.uribe.gamez at gmail.com (Diego Alonso Uribe Gamez)
Date: Wed, 21 Sep 2011 17:59:57 +0000 (UTC)
Subject: [Twisted-Python] Join my network on LinkedIn through Rainmaker
Message-ID: <1057355643.2696857.1316627997463.JavaMail.app@ela4-bed78.prod>

I would like to connect with you on LinkedIn.

Diego Alonso Uribe Gamez
Desarrollador Web at 1publicidad
Colombia

Confirm that you know Diego Alonso Uribe Gamez:
https://www.linkedin.com/e/-b9k943-gsumbcpg-3/isd/4302356319/gyjgdPuw/?hs=false&tok=1JiPi7OiPTRkU1

--
You are receiving Invitation to Connect emails. Click to unsubscribe:
http://www.linkedin.com/e/-b9k943-gsumbcpg-3/UGoRR-kmaZN3cQCGtaNE-BBynaTgDBi6TGSB-kimZG9krgZr/goo/twisted-python%40twistedmatrix%2Ecom/20061/I1488829854_1/?hs=false&tok=3ilQ9NIzDTRkU1

(c) 2011 LinkedIn Corporation. 2029 Stierlin Ct, Mountain View, CA 94043, USA.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110921/d0f33c6a/attachment.html>

From a.libran at gmail.com  Thu Sep 22 07:19:38 2011
From: a.libran at gmail.com (David Kao)
Date: Thu, 22 Sep 2011 21:19:38 +0800
Subject: [Twisted-Python] I see,
 remote_method can also return a deferred. Perhaps we could document
 that?
Message-ID: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>

I almost gave up choosing twisted until I found this explanation

http://twistedmatrix.com/pipermail/twisted-python/2004-April/007517.html

which basically says a remote_method can return a deferred. In this
case, the PB server won't return the result of the Deferred back to
the client until the server-side callback fires. The result of the
remote_method is then returned to the client, which then triggers
client side's deferred callback.

So, I thought one of the following would be helpful:

1) An example showing remote_method returning a deferred

and/or

2) A section named "Server side remote_* methods can be async by
returning deferreds" could be added as a 7th item in

http://twistedmatrix.com/documents/current/core/howto/pb-usage.html

.

I spent some quality 30+ hours carefully reading 90% of the

http://twistedmatrix.com/documents/current/core/howto/index.html

and I do not remember picking this subtlety up. (Or you can point me
the right place in doc.) (great doc btw.)

Should I submit an improvement ticket for this? I could also make the
server side example using Echoer, remote_echo, and deferToThread just
so that whoever fixes the ticket can just copy and paste.

David Kao



From a.libran at gmail.com  Thu Sep 22 07:26:05 2011
From: a.libran at gmail.com (David Kao)
Date: Thu, 22 Sep 2011 21:26:05 +0800
Subject: [Twisted-Python] I see,
 remote_method can also return a deferred. Perhaps we could document
 that?
In-Reply-To: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>
References: <CAG4NAK6CWmeZNyzEjYNRPV94zvYyc4OjGiaEvHw_4bs8xkd51w@mail.gmail.com>
Message-ID: <CAG4NAK6rumR=mAyvPJVX6kbd-=oG8pPchCh=3CDS7fkH-AXoqg@mail.gmail.com>

Or we could just use Brian's example.

David Kao



On Thu, Sep 22, 2011 at 9:19 PM, David Kao <a.libran at gmail.com> wrote:
> I almost gave up choosing twisted until I found this explanation
>
> http://twistedmatrix.com/pipermail/twisted-python/2004-April/007517.html
>
> which basically says a remote_method can return a deferred. In this
> case, the PB server won't return the result of the Deferred back to
> the client until the server-side callback fires. The result of the
> remote_method is then returned to the client, which then triggers
> client side's deferred callback.
>
> So, I thought one of the following would be helpful:
>
> 1) An example showing remote_method returning a deferred
>
> and/or
>
> 2) A section named "Server side remote_* methods can be async by
> returning deferreds" could be added as a 7th item in
>
> http://twistedmatrix.com/documents/current/core/howto/pb-usage.html
>
> .
>
> I spent some quality 30+ hours carefully reading 90% of the
>
> http://twistedmatrix.com/documents/current/core/howto/index.html
>
> and I do not remember picking this subtlety up. (Or you can point me
> the right place in doc.) (great doc btw.)
>
> Should I submit an improvement ticket for this? I could also make the
> server side example using Echoer, remote_echo, and deferToThread just
> so that whoever fixes the ticket can just copy and paste.
>
> David Kao
>



From garyjefferson123 at gmail.com  Fri Sep 23 13:33:45 2011
From: garyjefferson123 at gmail.com (gary jefferson)
Date: Fri, 23 Sep 2011 13:33:45 -0600
Subject: [Twisted-Python] async->sync
Message-ID: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>

I know this is a topic that comes up occasionally, and every thread
I've see ends the same way: don't try it.

Here's my problem. I am trying to integrate some async twisted code
with pyfilesystem. Methods in pyfilesystem, such as listdir() and
open() that I need to implement expect synchronous results.

So, as far as I can tell, I only have one option: re-implement all my
client networking code outside of twisted and use the non-twisted
version for integration with this (and for other things like
command-line tools).

That solution is pretty dismal; maintaining one client-side codebase
is hard enough. Keeping two up to date sounds like a nightmare.

So, am I missing some other more elegant solution? Is there really no
way to turn async, deferred-returning twisted code into synchronous
result-returning code, via clever use of wrappers etc?

Thanks,
Gary



From glyph at twistedmatrix.com  Fri Sep 23 13:37:38 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 23 Sep 2011 15:37:38 -0400
Subject: [Twisted-Python] async->sync
In-Reply-To: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
References: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
Message-ID: <4B41F4C2-47A7-445F-A5B7-2E32C9007E5D@twistedmatrix.com>

On Sep 23, 2011, at 3:33 PM, gary jefferson wrote:

> So, am I missing some other more elegant solution? Is there really no
> way to turn async, deferred-returning twisted code into synchronous
> result-returning code, via clever use of wrappers etc?

Run the reactor in a background thread and do .blockingCallFromThread().

If you can't run a background thread, then you're probably out of luck - sorry :).

-glyph
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110923/fe723128/attachment-0001.html>

From exarkun at twistedmatrix.com  Sat Sep 24 22:05:25 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 25 Sep 2011 04:05:25 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1316923525.17.1129339506@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110925/c9094a43/attachment-0001.html>

From p.mayers at imperial.ac.uk  Mon Sep 26 01:48:49 2011
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 26 Sep 2011 08:48:49 +0100
Subject: [Twisted-Python] async->sync
In-Reply-To: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
References: <CAJcq2s0+ahN9mWXfCTzuZGyVfP6VsZ=uJJKyfU9vV_OcS7p-9A@mail.gmail.com>
Message-ID: <4E802E61.6050603@imperial.ac.uk>

On 23/09/11 20:33, gary jefferson wrote:

> So, am I missing some other more elegant solution? Is there really no
> way to turn async, deferred-returning twisted code into synchronous
> result-returning code, via clever use of wrappers etc?

Run the reactor in another thread, or another process and communicate 
via IPC.



From _ at lvh.cc  Mon Sep 26 05:37:16 2011
From: _ at lvh.cc (Laurens Van Houtven)
Date: Mon, 26 Sep 2011 13:37:16 +0200
Subject: [Twisted-Python] Running the same trial test suite against a live
	server and a mock server
Message-ID: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>

Hey,


In order to properly test txievery (a twisted library for dealing with
Paypal's APIs), I'm building a mock Paypal server. The idea is to run the
same high-level tests (which basically use the API and eventually make it
make real HTTPS requests) against both the mock server and the Paypal
Sandbox.

The problem is that using the Paypal Sandbox requires extra information:
specifically, username, password, and an SSL certificate (I don't intend to
support "signature" authentication. It's a horrible alternative for
environments too stupid to make requests given a client cert).  My mock
sandbox also requires all of that, but I just have fake credentials. When
you run the test suite against the Paypal Sandbox, obviously you're going to
need Paypal-blessed credentials.

The obvious solution is to have a makeClient function defined in module
scope for the given test module. I could then have a bin/liveTest.py that
takes a username, password and cert, and monkeypatches that module. I'm
assuming it can't be hard to tell trial to just take a test module and run
it...

Are there any better ways to pass test data to trial?

cheers
lvh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110926/4a1eab69/attachment-0001.html>

From a.libran at gmail.com  Mon Sep 26 06:13:45 2011
From: a.libran at gmail.com (David Kao)
Date: Mon, 26 Sep 2011 20:13:45 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
Message-ID: <CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>

Regarding

>  The process ''starting'' is different from `ProcessProtocol` methods being
>  called.  `ProcessProtocol.processEnded` is ''not'' called until the
>  reactor is running.

On my own VMs, the processEnded gets called


[root at master1 play]# cat fun.py
from twisted.internet import reactor

from twisted.internet import reactor, protocol

class OneRun(protocol.ProcessProtocol):
    def processEnded(self, reason):
        print "Process ended\n"


reactor.spawnProcess(OneRun(), executable="echo", args=["echo",
"hello"], childFDs={0:0, 1:1, 2:2})
[root at master1 play]# python fun.py
hello
Process ended

[root at master1 play]#


But once again, on a different VM, I only see "hello" and processEnded
isn't called.

Both VMs run Python 2.7.1 and Twisted 11.0.0

What is going on?

David Kao



On Mon, Sep 26, 2011 at 8:03 PM, Twisted <trac at twistedmatrix.com> wrote:
> #5272: In the core doc, do not call reactor.stop directly in processEnded
> ------------------------+---------------------------------------------------
>     Reporter:  dkdog   |           Owner:
>         Type:  defect  |          Status:  closed
>     Priority:  normal  |       Milestone:
>    Component:  core    |      Resolution:  worksforme
>     Keywords:          |          Branch:
> Branch_author:          |   Launchpad_bug:
> ------------------------+---------------------------------------------------
> Changes (by exarkun):
>
>  * status:  reopened => closed
>  * resolution:  => worksforme
>
>
> Comment:
>
>  > I just found out that reactor.spawnProcess could spawn the subprocess
>  right away **before** reactor.run is executed.
>
>  This doesn't seem related to this ticket.
>
>  > I get the impression that most stuff don't get run until the reactor
>  event loop is up and running with reactor.run()
>
>  That's true.  Most stuff.
>
>  > In this case, who's answering all the ProcessProtocol's methods like
>  processEnded then, without an event loop?
>
>  The process ''starting'' is different from `ProcessProtocol` methods being
>  called.  `ProcessProtocol.processEnded` is ''not'' called until the
>  reactor is running.
>
>  Further discussion should be moved to the mailing list.  Thanks.
>
> --
> Ticket URL: <http://twistedmatrix.com/trac/ticket/5272#comment:8>
> Twisted <http://twistedmatrix.com/trac/>
> Engine of your Internet
>



From exarkun at twistedmatrix.com  Mon Sep 26 07:27:39 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Mon, 26 Sep 2011 13:27:39 -0000
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
Message-ID: <20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>

On 12:13 pm, a.libran at gmail.com wrote:
>Regarding
>>  The process ''starting'' is different from `ProcessProtocol` methods 
>>being
>>  called.  `ProcessProtocol.processEnded` is ''not'' called until the
>>  reactor is running.
>
>On my own VMs, the processEnded gets called
>
>
>[root at master1 play]# cat fun.py
>from twisted.internet import reactor
>
>from twisted.internet import reactor, protocol
>
>class OneRun(protocol.ProcessProtocol):
>    def processEnded(self, reason):
>        print "Process ended\n"
>
>
>reactor.spawnProcess(OneRun(), executable="echo", args=["echo",
>"hello"], childFDs={0:0, 1:1, 2:2})
>[root at master1 play]# python fun.py
>hello
>Process ended
>
>[root at master1 play]#
>
>
>But once again, on a different VM, I only see "hello" and processEnded
>isn't called.
>
>Both VMs run Python 2.7.1 and Twisted 11.0.0
>
>What is going on?

Thanks for this follow-up.  I noticed that in this snippet, there's no 
`reactor.run()� call at all.  This is a better example, since it shows 
`processEnded� being called even though there's no chance of the reactor 
ever being running.  Investigating this, I see that there is an early- 
exit case in process support (in `twisted/internet/process.py�, line 65) 
which may call `processEnded� even when the reactor is not running. 
Inserting a sleep(1) before the `os.waitpid� call in that function makes 
it much more likely to trigger this case, since it gives the child 
plenty of time to exit.

This strikes me as a bug.  Can you file a new ticket for this?

Thanks again,
Jean-Paul
>David Kao
>
>
>
>On Mon, Sep 26, 2011 at 8:03 PM, Twisted <trac at twistedmatrix.com> 
>wrote:
>>#5272: In the core doc, do not call reactor.stop directly in 
>>processEnded
>>------------------------+---------------------------------------------------
>>� � Reporter: �dkdog � | � � � � � Owner:
>>� � � � Type: �defect �| � � � � �Status: �closed
>>� � Priority: �normal �| � � � Milestone:
>>� �Component: �core � �| � � �Resolution: �worksforme
>>� � Keywords: � � � � �| � � � � �Branch:
>>Branch_author: � � � � �| � Launchpad_bug:
>>------------------------+---------------------------------------------------
>>Changes (by exarkun):
>>
>>�* status: �reopened => closed
>>�* resolution: �=> worksforme
>>
>>
>>Comment:
>>
>>�> I just found out that reactor.spawnProcess could spawn the 
>>subprocess
>>�right away **before** reactor.run is executed.
>>
>>�This doesn't seem related to this ticket.
>>
>>�> I get the impression that most stuff don't get run until the 
>>reactor
>>�event loop is up and running with reactor.run()
>>
>>�That's true. �Most stuff.
>>
>>�> In this case, who's answering all the ProcessProtocol's methods 
>>like
>>�processEnded then, without an event loop?
>>
>>�The process ''starting'' is different from `ProcessProtocol` methods 
>>being
>>�called. �`ProcessProtocol.processEnded` is ''not'' called until the
>>�reactor is running.
>>
>>�Further discussion should be moved to the mailing list. �Thanks.
>>
>>--
>>Ticket URL: <http://twistedmatrix.com/trac/ticket/5272#comment:8>
>>Twisted <http://twistedmatrix.com/trac/>
>>Engine of your Internet
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From glyph at twistedmatrix.com  Mon Sep 26 16:24:14 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Mon, 26 Sep 2011 18:24:14 -0400
Subject: [Twisted-Python] Running the same trial test suite against a
	live server and a mock server
In-Reply-To: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
References: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
Message-ID: <65DEEACA-ECB1-49DF-A9E3-B44B4BD5FE21@twistedmatrix.com>


On Sep 26, 2011, at 7:37 AM, Laurens Van Houtven wrote:

> Are there any better ways to pass test data to trial?

Environment variables.

This isn't a great option, but I'd say it's definitely a better one than modules which monkeypatch stuff.

You can also have your test cases synthesize stuff out of data files or config files in your environment.

I'm not really inclined to make this super easy, since tests should by definition not be terribly configurable: the more knobs like this you have to turn, the less meaningful your test suite is likely to be.

So, today, I'd write something like this:

TXIEVERY_USERNAME=foo TXIEVERY_PW=bar TXIEVERY_CERT=baz.pem trial txievery

but if someone has a better thought, please chime in - this is by no means the last word on this.  And I'm facing a similar issue soon so I'd love to hear some diversity of opinion here.

-glyph

PS: love the module name.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110926/30e21946/attachment.html>

From screwtape at froup.com  Mon Sep 26 17:29:30 2011
From: screwtape at froup.com (Tim Allen)
Date: Tue, 27 Sep 2011 09:29:30 +1000
Subject: [Twisted-Python] Running the same trial test suite against a
 live server and a mock server
In-Reply-To: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
References: <CAE_Hg6bc7cwwr9-r7kDBY+z+uC0VdRgveKe3QzkgpMpHv4kE0w@mail.gmail.com>
Message-ID: <20110926232930.GD26665@boombah.thristian.org>

On Mon, Sep 26, 2011 at 01:37:16PM +0200, Laurens Van Houtven wrote:
> The obvious solution is to have a makeClient function defined in module
> scope for the given test module. I could then have a bin/liveTest.py that
> takes a username, password and cert, and monkeypatches that module. I'm
> assuming it can't be hard to tell trial to just take a test module and run
> it...
> 
> Are there any better ways to pass test data to trial?

If you have a particular set of tests you want to run against a mock
server and a real server, I'd be highly tempted to use inheritance:


    class ServerTestMixin:

	def _get_server_details(self):
	    raise NotImplementedError

	def test_foo(self):
	    server = self._get_server_details()
	    ...
	

    class MockServerTest(ServerTestMixin, unittest.TestCase):

	def setUp(self):
	    # start mock server
	
	def tearDown(self):
	    # shutdown mock server.

	def _get_server_details(self):
	    return MOCK_SERVER_DETAILS

    
    class LiveServerTest(ServerTestMixin, unittest.TestCase):

	def _get_server_details(self):
	    return LIVE_SERVER_DETAILS


The other trick I've used in a similar situation is to define
ServerTestMixin and MockServerTest in a module matching "test_*.py" so
that Trial will find it by default, and define LiveServerTest in
a module like "integration_tests.py" that won't be automatically run.

That way, you can test your code with trial and random fluctuations in
the live server won't cause spurious test failures, but you can pretty
easily run your tests against the live server whenever you want. If
you're using continuous integration, you could have a script that fails
if the unit tests break, but just warns if the integration tests break,
etc.



From donne.cn at gmail.com  Mon Sep 26 17:48:20 2011
From: donne.cn at gmail.com (Don Li)
Date: Tue, 27 Sep 2011 07:48:20 +0800
Subject: [Twisted-Python] How to explicitly free memory in twisted daemon
	process
Message-ID: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>

Hi,

I have facing a problem:
  "According to the Python memory pool mechanism, the memory usage will take
up more and more in a long-running daemon process.
  "In the long sustained logon and logout logic by a lot of users , Twisted
process MUST stop restarting because the memory usage."

With "meliae" tested, and no memory leaks occur.

Hope you can give me some advice, thank you.
-- 
Don Li

TipCat Interactive Inc.
MSN    : edon at live.com
SKYPE: don.sz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/afc06d14/attachment.html>

From andrew at bemusement.org  Mon Sep 26 18:01:32 2011
From: andrew at bemusement.org (Andrew Bennetts)
Date: Tue, 27 Sep 2011 10:01:32 +1000
Subject: [Twisted-Python] How to explicitly free memory in twisted
 daemon process
In-Reply-To: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>
References: <CAK9OTsvNx55fEx_i0uvf+mMhnXzJJZzJ8FA_R86pFzLY_332EA@mail.gmail.com>
Message-ID: <20110927000132.GB22433@flay.puzzling.org>

On Tue, Sep 27, 2011 at 07:48:20AM +0800, Don Li wrote:
> Hi,
> 
> I have facing a problem:
>   "According to the Python memory pool mechanism, the memory usage will take
> up more and more in a long-running daemon process.
>   "In the long sustained logon and logout logic by a lot of users , Twisted
> process MUST stop restarting because the memory usage."

Where are you quoting that problem from?

The short answer is that if your code doesn't leak, you probably have nothing to
worry about.

It's true enough that CPython's memory consumption will tend to grow over time
in a long-running daemon — but probably not unbounded, unless your code has a
leak.  If there's no leak, you'd expect memory consumption grow asymptotically
to some upper bound, i.e. the memory usage will grow more and more slowly.

Are you actually experiencing a problem, or just trying to anticipate one?

Either way, actual data is good: you know that meliae reports no leaks, so what
does the OS report for memory consumption over time?  Are you doing anything to
try reproduce unwanted memory usage (e.g. running load tests against your
daemon)?

-Andrew.




From victorhooi at yahoo.com  Mon Sep 26 22:09:25 2011
From: victorhooi at yahoo.com (Victor Hooi)
Date: Tue, 27 Sep 2011 14:09:25 +1000
Subject: [Twisted-Python] Client/Server to stream text logfiles?
Message-ID: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>

Hi,

We have several Solaris 10 running an application that generates large text
logfiles

We need to stream these logfiles in realtime to a central monitoring server.

Unfortunately (for both technical and non-technical reasons), we can't use
an NFS-mount. At the moment, we're using SSH with tail -f to stream the
files from the servers to the monitoring box.

However, I was going to look at hacking a client/server up in Python to
monitor for filesystem events, and then stream any updates.

In terms of filesystem monitoring, this is Solaris 10, so there's not really
that much available it seems. Gamin seems to be the best bet, otherwise I
might have to fallback to polling.

On the Twisted side, is the above something that's fairly easy to
accomplish? I haven't used Twisted before, so I thought this might be a good
excuse to learn it. Any thoughts or caveats I should be aware of? Any
existing projects I might be able to leverage off? Good starting docs for
this sort of thing?

Thanks,
Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/c4628b59/attachment.html>

From a.libran at gmail.com  Tue Sep 27 02:33:15 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 16:33:15 +0800
Subject: [Twisted-Python] How do I know the server from reactor.listenTCP
	already started listening?
Message-ID: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>

When the call to listenTCP returns, is the server actively waiting for
TCP connections?

Let's say reactor.run() has been called. Can I do the following back-to-back?

reactor.listenTCP(4321, serverfactory)
reactor.connectTCP("localhost", 4321, clientfactory)

Basically, I am almost starting a server and a client back-to-back
that connects to each other. I would like to know if the server is in
"listening" state before my client attempts to connect.

Thanks.

David Kao



From enriquejr at gmail.com  Tue Sep 27 03:12:53 2011
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Tue, 27 Sep 2011 17:12:53 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
Message-ID: <CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>

On Tue, Sep 27, 2011 at 4:33 PM, David Kao <a.libran at gmail.com> wrote:

> When the call to listenTCP returns, is the server actively waiting for
> TCP connections?
>
Looking at the code
here<http://twistedmatrix.com/trac/browser/tags/releases/twisted-11.0.0/twisted/internet/tcp.py#L857>,
I would think so.


>
> Let's say reactor.run() has been called. Can I do the following
> back-to-back?
>
> reactor.listenTCP(4321, serverfactory)
> reactor.connectTCP("localhost", 4321, clientfactory)


> Basically, I am almost starting a server and a client back-to-back
> that connects to each other.

Just curious, why are you doing this?


> I would like to know if the server is in
> "listening" state before my client attempts to connect.
>
> Thanks.
>
> David Kao
>

--Enrique
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/1361cb07/attachment.html>

From a.libran at gmail.com  Tue Sep 27 03:28:12 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 17:28:12 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
Message-ID: <CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>

I have an existing program that connects to a TCP port to serve data. I need to

1) start a TCPServer
2) start my program and tell it which port to connect to

Actually, I want to do all this in twistd. And now I am looking at
something like this which is even a bigger headache

internet.TCPServer( 4321, serverFactory ),setServiceParent(serviceCollection)

I revise my question.

Can I rely on reactor.listenTCP being called right after
serverFactory.startFactory is called?

I hope listenTCP isn't queued as a reactor "task" after
serverFactory.startFactory. If it's done all in one uninterrupted
thread execution, then I can just queue "start_the_other_program"
inside startFactory via a reactor.callLater. Correct?

Enrique, thanks for the link. I think I saw that too. I traced it
since reactor.listenTCP returns a port, and so on and so forth.

However, I have not been able to find code for internet.TCPServer. I
would like to be able to trace the code top down. Can someone help?
Thanks!

David Kao



On Tue, Sep 27, 2011 at 5:12 PM, Enrique Samson Jr. <enriquejr at gmail.com> wrote:
> On Tue, Sep 27, 2011 at 4:33 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> When the call to listenTCP returns, is the server actively waiting for
>> TCP connections?
>
> Looking at the code here, I would think so.
>
>>
>> Let's say reactor.run() has been called. Can I do the following
>> back-to-back?
>>
>> reactor.listenTCP(4321, serverfactory)
>> reactor.connectTCP("localhost", 4321, clientfactory)
>>
>> Basically, I am almost starting a server and a client back-to-back
>> that connects to each other.
>
> Just curious, why are you doing this?
>
>>
>> I would like to know if the server is in
>> "listening" state before my client attempts to connect.
>>
>> Thanks.
>>
>> David Kao
>
> --Enrique
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From enriquejr at gmail.com  Tue Sep 27 03:53:05 2011
From: enriquejr at gmail.com (Enrique Samson Jr.)
Date: Tue, 27 Sep 2011 17:53:05 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
Message-ID: <CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>

On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:

> I have an existing program that connects to a TCP port to serve data. I
> need to
>
> 1) start a TCPServer

2) start my program and tell it which port to connect to
>

In case you already did, you might want to take a deeper look again at the
Twisted Core Documentation. The Writing a TCP
Server<http://twistedmatrix.com/documents/current/core/howto/servers.html>section
answers your question #1, Writing
a TCP Client<http://twistedmatrix.com/documents/current/core/howto/clients.html>section
answers your question #2.


>
> Actually, I want to do all this in twistd. And now I am looking at
> something like this which is even a bigger headache
>
> internet.TCPServer( 4321, serverFactory
> ),setServiceParent(serviceCollection)
>
Of course you can do all these in twisted. But in this context, it doesn't
make sense to run both in the same twisted application.


>
> I revise my question.
>
> Can I rely on reactor.listenTCP being called right after
> serverFactory.startFactory is called?


> I hope listenTCP isn't queued as a reactor "task" after
> serverFactory.startFactory. If it's done all in one uninterrupted
> thread execution, then I can just queue "start_the_other_program"
> inside startFactory via a reactor.callLater. Correct?
>
The reverse is what is guaranteed: serverFactory.startFactory will be called
when you do reactor.listenTCP.


>
> Enrique, thanks for the link. I think I saw that too. I traced it
> since reactor.listenTCP returns a port, and so on and so forth.
>
> However, I have not been able to find code for internet.TCPServer. I
> would like to be able to trace the code top down. Can someone help?
>
You can find it
here<http://twistedmatrix.com/documents/current/core/howto/tutorial/index.html>
.


> Thanks!
>
> David Kao
>
>
--Enrique
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/708f3277/attachment.html>

From a.libran at gmail.com  Tue Sep 27 04:55:34 2011
From: a.libran at gmail.com (David Kao)
Date: Tue, 27 Sep 2011 18:55:34 +0800
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
	<CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
Message-ID: <CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>

My bad for not being clear, but actually, the client program is a
separate binary that I plan to spawn as a subprocess, which should
connect to the server.

Basically, the answer I am getting now is that I am never sure when
the server starts listening on a port. I need to take it on faith that
within 1 sec of running twistd the port is being listened. Or perhaps
check it using netstat or something from the outside ... ugly.

I have gone through almost the entire tutorial. I am looking for the
**source code** for internet.TCPServer

David Kao



On Tue, Sep 27, 2011 at 5:53 PM, Enrique Samson Jr. <enriquejr at gmail.com> wrote:
> On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> I have an existing program that connects to a TCP port to serve data. I
>> need to
>>
>> 1) start a TCPServer
>>
>> 2) start my program and tell it which port to connect to
>
> In case you already did, you might want to take a deeper look again at the
> Twisted Core Documentation. The Writing a TCP Server section answers your
> question #1, Writing a TCP Client section answers your question #2.
>
>>
>> Actually, I want to do all this in twistd. And now I am looking at
>> something like this which is even a bigger headache
>>
>> internet.TCPServer( 4321, serverFactory
>> ),setServiceParent(serviceCollection)
>
> Of course you can do all these in twisted. But in this context, it doesn't
> make sense to run both in the same twisted application.
>
>>
>> I revise my question.
>>
>> Can I rely on reactor.listenTCP being called right after
>> serverFactory.startFactory is called?
>>
>> I hope listenTCP isn't queued as a reactor "task" after
>> serverFactory.startFactory. If it's done all in one uninterrupted
>> thread execution, then I can just queue "start_the_other_program"
>> inside startFactory via a reactor.callLater. Correct?
>
> The reverse is what is guaranteed: serverFactory.startFactory will be called
> when you do reactor.listenTCP.
>
>>
>> Enrique, thanks for the link. I think I saw that too. I traced it
>> since reactor.listenTCP returns a port, and so on and so forth.
>>
>> However, I have not been able to find code for internet.TCPServer. I
>> would like to be able to trace the code top down. Can someone help?
>
> You can find it here.
>
>>
>> Thanks!
>>
>> David Kao
>>
>
> --Enrique
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From ypercube at gmail.com  Tue Sep 27 05:08:52 2011
From: ypercube at gmail.com (Pantelis Theodosiou)
Date: Tue, 27 Sep 2011 14:08:52 +0300
Subject: [Twisted-Python] How do I know the server from
 reactor.listenTCP already started listening?
In-Reply-To: <CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
	<CABnc-1euZx3p0HayBpLXC_TYG=7xSttceGcsi3a8-cg2MxkGzw@mail.gmail.com>
	<CAG4NAK4R3M83FUN-dF_S1R4XAGdO9vEMQaV+VmyjdWAQhuHC9g@mail.gmail.com>
	<CABnc-1dM05Lgit2k-mP9CsJYmB820qxuUc9XPjNF9fNic66c5w@mail.gmail.com>
	<CAG4NAK5YfQ7oH1DRie6bXt75ouGtTWM7GCsu-M_VhEVZJ+bMRQ@mail.gmail.com>
Message-ID: <CAE3TBxxthmDLO7E8AhTE5K_jCSWmzrVgdfiQ8khXwctT0dzdRA@mail.gmail.com>

On Tue, Sep 27, 2011 at 1:55 PM, David Kao <a.libran at gmail.com> wrote:

> My bad for not being clear, but actually, the client program is a
> separate binary that I plan to spawn as a subprocess, which should
> connect to the server.
>
> Basically, the answer I am getting now is that I am never sure when
> the server starts listening on a port. I need to take it on faith that
> within 1 sec of running twistd the port is being listened. Or perhaps
> check it using netstat or something from the outside ... ugly.
>

So, you want to be sure that the server is listening before trying to
connect from an independent client? Why?
Shouldn't this client just try to connect and act accordingly if there is no
server listening?

It's as if you want to be sure that http://www.google.com/ is up and will
answer you.
Why not just type http://www.google.com/  in a browser?


>
> I have gone through almost the entire tutorial. I am looking for the
> **source code** for internet.TCPServer
>
> David Kao
>
>
>
> On Tue, Sep 27, 2011 at 5:53 PM, Enrique Samson Jr. <enriquejr at gmail.com>
> wrote:
> > On Tue, Sep 27, 2011 at 5:28 PM, David Kao <a.libran at gmail.com> wrote:
> >>
> >> I have an existing program that connects to a TCP port to serve data. I
> >> need to
> >>
> >> 1) start a TCPServer
> >>
> >> 2) start my program and tell it which port to connect to
> >
> > In case you already did, you might want to take a deeper look again at
> the
> > Twisted Core Documentation. The Writing a TCP Server section answers your
> > question #1, Writing a TCP Client section answers your question #2.
> >
> >>
> >> Actually, I want to do all this in twistd. And now I am looking at
> >> something like this which is even a bigger headache
> >>
> >> internet.TCPServer( 4321, serverFactory
> >> ),setServiceParent(serviceCollection)
> >
> > Of course you can do all these in twisted. But in this context, it
> doesn't
> > make sense to run both in the same twisted application.
> >
> >>
> >> I revise my question.
> >>
> >> Can I rely on reactor.listenTCP being called right after
> >> serverFactory.startFactory is called?
> >>
> >> I hope listenTCP isn't queued as a reactor "task" after
> >> serverFactory.startFactory. If it's done all in one uninterrupted
> >> thread execution, then I can just queue "start_the_other_program"
> >> inside startFactory via a reactor.callLater. Correct?
> >
> > The reverse is what is guaranteed: serverFactory.startFactory will be
> called
> > when you do reactor.listenTCP.
> >
> >>
> >> Enrique, thanks for the link. I think I saw that too. I traced it
> >> since reactor.listenTCP returns a port, and so on and so forth.
> >>
> >> However, I have not been able to find code for internet.TCPServer. I
> >> would like to be able to trace the code top down. Can someone help?
> >
> > You can find it here.
> >
> >>
> >> Thanks!
> >>
> >> David Kao
> >>
> >
> > --Enrique
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/12e40882/attachment.html>

From jessica.mckellar at gmail.com  Tue Sep 27 05:27:38 2011
From: jessica.mckellar at gmail.com (Jessica McKellar)
Date: Tue, 27 Sep 2011 07:27:38 -0400
Subject: [Twisted-Python] 11.0 in PPA
In-Reply-To: <CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>
References: <CADGOwRTb=D7RZuK_4RjFeT=MuKS_uQTdUmjhOtM6720Sj=BS9w@mail.gmail.com>
	<634914A010D0B943A035D226786325D422BFBFC67C@EXVMBX020-12.exch020.serverdata.net>
	<CADGOwRTwyEe8NKvGMpbHC9m6pwY7jHhn7bPfAbVWhPD0LMzVyw@mail.gmail.com>
	<1313416146.6861.6.camel@blake>
	<20110815142933.13284.982759488.divmod.xquotient.144@localhost.localdomain>
	<CAKDZRchSoC3JWwZDH0ean+CzmK6B1DwDpQeN-FMJZNAAvgZgag@mail.gmail.com>
	<CADGOwRR5kJhndkiQYfMfqbYXWbE1jqBoG-J1a0Jd7hrTA6FE5A@mail.gmail.com>
	<CAKDZRchyTbWm9SvrqU7bmgHHkBEy9uYAvUZO4-oHb4J5AmSwDw@mail.gmail.com>
Message-ID: <CAKDZRcjrPLNj_CzMVSxSeysDEm2h2CikqbEbYofvhwmxNVBzyw@mail.gmail.com>

Hi folks,

https://launchpad.net/~jesstess/+archive/twisted-testing2 has Twisted
core packages for Natty, Maverick, and Lucid. They build with
pbuilder, I installed them in VMs and ran the test suite, and exarkun
gave a quick once-over. Let me know if you notice anything awry.

I plan to get Hardy and the subprojects done this weekend, do a final
round of testing, and copy everything over to the Twisted PPA.

-Jessica

2011/9/21 Jessica McKellar <jessica.mckellar at gmail.com>:
> Hi Alex,
>
> Thanks for checking in.
>
> https://launchpad.net/~twisted-dev/+archive/ppa/ has the results of
> some fumbling around with Natty and I have since moved the work to a
> personal PPA so it doesn't pollute the twisted archive while I test
> things.
>
> Expect All The Progress to be made this weekend now that some of my
> other commitments have come and gone. Anyone who already knows how to
> do this should feel free to swoop in and get the new release on
> launchpad, else I'll keep going at my snail's pace as I use this as an
> opportunity to learn the packaging ropes. :)
>
> -Jessica
>
> 2011/9/21 Алексей Кирпичников <alex.kirp at gmail.com>:
>> Hi Jessica,
>>
>> Any luck with packaging?
>>
>> 2011/8/15 Jessica McKellar <jessica.mckellar at gmail.com>:
>>> Hi folks,
>>>
>>>> It would be nice if the ppa were up to date, though.  Maybe someone who
>>>> knows how to update it can share that information so that someone who
>>>> has time to keep it up to date can take over the job.
>>>
>>> I would like to volunteer for this. I don't know much about packaging
>>> and this seems like a good opportunity to learn.
>>>
>>> If there are no objections, what I'll do is:
>>> a) learn more about the ideal Twisted PPA situation (if you have
>>> thoughts on what that should be, tell me)
>>> b) extract the existing Twisted PPA knowledge from people
>>> c) add a PPA maintenance job description to
>>> http://twistedmatrix.com/trac/wiki/ProjectJobs
>>> d) get started updating the PPA
>>>
>>> If anyone else wants to help I'm happy to share the duties.
>>>
>>> Regards,
>>> -Jessica
>>>
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>



From exarkun at twistedmatrix.com  Tue Sep 27 05:44:10 2011
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Tue, 27 Sep 2011 11:44:10 -0000
Subject: [Twisted-Python] How do I know the server from
	reactor.listenTCP	already started listening?
In-Reply-To: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
References: <CAG4NAK6igXtCqQHZpOWwc0QkzXOgPXdE6asAdCcMywtZjo3piQ@mail.gmail.com>
Message-ID: <20110927114410.2214.914887338.divmod.xquotient.133@localhost.localdomain>

On 08:33 am, a.libran at gmail.com wrote:
>When the call to listenTCP returns, is the server actively waiting for
>TCP connections?

Yes.

Jean-Paul
>
>Let's say reactor.run() has been called. Can I do the following back- 
>to-back?
>
>reactor.listenTCP(4321, serverfactory)
>reactor.connectTCP("localhost", 4321, clientfactory)
>
>Basically, I am almost starting a server and a client back-to-back
>that connects to each other. I would like to know if the server is in
>"listening" state before my client attempts to connect.
>
>Thanks.
>
>David Kao
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From jrennie at gmail.com  Tue Sep 27 07:13:59 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Tue, 27 Sep 2011 09:13:59 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <CA+Pf4UC5g8fAJAc8yuS1wcES_=GXfB85n+Y2rQ+MruC6bVf0=g@mail.gmail.com>

Sounds like your project would be appropriate for twisted.  You'll have the
easiest time if the reading and writing can each be implemented as a
separate process (independent of other jobs on the machines).  Be sure to
read the following documentation:

http://twistedmatrix.com/documents/current/core/howto/servers.html
http://twistedmatrix.com/documents/current/core/howto/clients.html
http://twistedmatrix.com/documents/current/core/howto/defer.html

Here are references you'll likely make use of:

http://twistedmatrix.com/documents/current/api/twisted.protocols.basic.LineReceiver.html
http://twistedmatrix.com/documents/current/api/twisted.internet.protocol.ReconnectingClientFactory.html

I wonder if using a ProcessProtocol (
http://twistedmatrix.com/documents/current/core/howto/process.html) with
"tail -f" would be an option for monitoring changes to the log(s)?  Though,
this may not be robust to failure (how to do you find the place where you
left off if the watching process dies unexpectedly?)  I'm not very familiar
with twisted file-related code, but, the "fdesc" module might be useful:

http://twistedmatrix.com/documents/current/api/twisted.internet.fdesc.html

Do any twisted experts have recommendations for monitoring changes to a
file?

Victor, let me suggest that you explore whether twisted can satisfy all your
requirements before you start coding as it is can be nontrivial to use
twisted with non-twisted-friendly libraries.

Cheers,

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/b4df6843/attachment.html>

From glyph at twistedmatrix.com  Tue Sep 27 17:19:30 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Tue, 27 Sep 2011 19:19:30 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>


On Sep 27, 2011, at 12:09 AM, Victor Hooi wrote:

> Hi,
> 
> We have several Solaris 10 running an application that generates large text logfiles
> 
> We need to stream these logfiles in realtime to a central monitoring server.
> 
> Unfortunately (for both technical and non-technical reasons), we can't use an NFS-mount. At the moment, we're using SSH with tail -f to stream the files from the servers to the monitoring box.
> 
> However, I was going to look at hacking a client/server up in Python to monitor for filesystem events, and then stream any updates.
> 
> In terms of filesystem monitoring, this is Solaris 10, so there's not really that much available it seems. Gamin seems to be the best bet, otherwise I might have to fallback to polling.
> 
> On the Twisted side, is the above something that's fairly easy to accomplish? I haven't used Twisted before, so I thought this might be a good excuse to learn it. Any thoughts or caveats I should be aware of? Any existing projects I might be able to leverage off? Good starting docs for this sort of thing?

Hi Victor,

This should be pretty easy to accomplish; this kind of thing is generally very straightforward using Twisted.  Obviously you'd have to implement a protocol for talking to Gamin, but I think the protocol involved is well-documented and very straightforward.

However, you should be aware that Solaris 10 is not currently a supported platform.  You can see the list of supported platforms along the left-hand side of this page: <http://buildbot.twistedmatrix.com/boxes-supported>.

The primary impediment to supporting Solaris is the lack of a buildbot that can tell us whether it works or not.  We don't even have an unsupported Solaris builder (see <http://buildbot.twistedmatrix.com/boxes-all> for all the currently running buildbots, including those which are known to fail).

Most likely, Twisted will work just fine on Solaris, since it's quite a lot like a lot of other platforms we do support, and especially we've recently improved support for various less popular UNIXes like the *BSD family.

Contributing a buildbot to Twisted is pretty easy though, and we can probably even supply the hardware for you (assuming that Solaris 10 can run happily in an x86[_64] qemu/kvm-style VM) if you'd just volunteer to install the OS and make sure it's configured properly.

Do you have any interest in helping us make Solaris a supported platform?

Thanks,

-glyph

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110927/ed91a6d5/attachment-0001.html>

From johan.rydberg at edgeware.tv  Wed Sep 28 00:34:00 2011
From: johan.rydberg at edgeware.tv (Johan Rydberg)
Date: Wed, 28 Sep 2011 08:34:00 +0200
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
	<BD93E0CA-7BCF-4D4F-8D0B-7BFEF345DE71@twistedmatrix.com>
Message-ID: <4E82BFD8.5060203@edgeware.tv>

On 9/28/11 1:19 AM, Glyph Lefkowitz wrote:
> Hi Victor,
>
> This /should/ be pretty easy to accomplish; this kind of thing is 
> generally very straightforward using Twisted.  Obviously you'd have to 
> implement a protocol for talking to Gamin, but I think the protocol 
> involved is well-documented and very straightforward.
I would say that streaming logs in a _reliable_ fashion is a non-trivial 
problem.

If you want to make sure that you do not miss any log lines, you cannot 
simply just
push them over the connection.  You will never know what messages was 
received on the
other side after a loss of the connection.

That's why people have developed things like 
http://www.librelp.com/relp.html and
Scribe.

I guess it all depends on your requirements.

I would also like to point out that Twisted would be a perfect match for 
writing
such a thing.

-- 
Johan Rydberg
Product Designer

Edgeware AB
Mäster Samuelsgatan 56
SE-111 21 Stockholm, Sweden




From victorhooi at yahoo.com  Thu Sep 29 08:37:51 2011
From: victorhooi at yahoo.com (Victor Hooi)
Date: Fri, 30 Sep 2011 00:37:51 +1000
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
Message-ID: <CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>

heya,

Thanks to everybody for their replies =).

@Jason Rennie: Thanks for the links - I suspect there's going to be a bit of
a curve to me getting on board with Twisted =).

Still not sure if Twisted will satisfy all of my requirements, but I'll need
to do some more investigation.

However, what did you mean by it may be "nontrivial to use twisted with
non-twisted friendly libraries"? What would make a library non-Twisted
friendly?

Not sure what libraries we'll be depending on, but watchdog (
http://packages.python.org/watchdog/installation.html) might be just one
example.

@Glyph Lefkowitz: Aha, thanks for the headsup about Solaris. I probably
should have checked that myself...lol.

In terms of the buildbot, I'm not sure I'm the most suitable person. The
primary reason I use Solaris is because my workplace is partly a Solaris
shop - and even then, I have minimal contact with most sysadmin aspects of
it.

And my experience with OpenCSW and the awesome team there shows that some of
the quirks on the Solaris platform (particularly the older versions) can be
a pain to work around, and getting stuff to build cleanly on it can often be
non-trivial, at least if you're not experienced with the platform.

@Johan Rydberg: Reliable delivery is definitely an issue - one of the
production management guys today said "whatever you're hacking up, we want
to make sure we don't miss any lines."

The Scribe logging server you (https://github.com/facebook/scribe/wiki)
mentioned actually looks very interesting.

Another avenue I'm looking at the moment is RabbitMQ - the idea being I hook
up a pseudo "tail -f" in Python, and use that to publish
to a RabbitMQ instance. (I have little experience with messaging buses
before this - it's only something I'm learning about now, to be honest).

Then, I just get each application that needs to monitor log events to just
subscribe to the appropriate queue. The thing I like about this approach is
that it decouples the producers/consumers somewhat - we can have multiple
different applications spread across several monitoring boxes subscribing to
the same events. That, and I suspect it might scale a little bit better than
any slipshod job with Twisted I'm able to hack together in the time I have.
Thoughts?

Cheers,
Victor

On Tue, Sep 27, 2011 at 14:09, Victor Hooi <victorhooi at yahoo.com> wrote:

> Hi,
>
> We have several Solaris 10 running an application that generates large text
> logfiles
>
> We need to stream these logfiles in realtime to a central monitoring
> server.
>
> Unfortunately (for both technical and non-technical reasons), we can't use
> an NFS-mount. At the moment, we're using SSH with tail -f to stream the
> files from the servers to the monitoring box.
>
> However, I was going to look at hacking a client/server up in Python to
> monitor for filesystem events, and then stream any updates.
>
> In terms of filesystem monitoring, this is Solaris 10, so there's not
> really that much available it seems. Gamin seems to be the best bet,
> otherwise I might have to fallback to polling.
>
> On the Twisted side, is the above something that's fairly easy to
> accomplish? I haven't used Twisted before, so I thought this might be a good
> excuse to learn it. Any thoughts or caveats I should be aware of? Any
> existing projects I might be able to leverage off? Good starting docs for
> this sort of thing?
>
> Thanks,
> Victor
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110930/dd5c1297/attachment-0001.html>

From jrennie at gmail.com  Thu Sep 29 11:00:49 2011
From: jrennie at gmail.com (Jason Rennie)
Date: Thu, 29 Sep 2011 13:00:49 -0400
Subject: [Twisted-Python] Client/Server to stream text logfiles?
In-Reply-To: <CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>
References: <CAMnnoUJH+s7UL5_XN+cs9zcL_6_a+gQS-MfD4NZJTVvSvJLvsw@mail.gmail.com>
	<CAMnnoU+xCgyttcqb4NVnvDoSv8QCVknKBUZ-wJ-L48B8Vv8g6w@mail.gmail.com>
Message-ID: <CA+Pf4UADmw0=NsVWmNa7Riu94ggEg9hDy-hV7nmMX29SXq-Lqg@mail.gmail.com>

On Thu, Sep 29, 2011 at 10:37 AM, Victor Hooi <victorhooi at yahoo.com> wrote:

> However, what did you mean by it may be "nontrivial to use twisted with
> non-twisted friendly libraries"? What would make a library non-Twisted
> friendly?
>

Most important, I think, is for non-reactor code to not block.  E.g. if
you're using a library to read from a database, the database library code
should release control between the time you make a request and the time the
library delivers the results of that request.  For example, a "nice" request
call might have a callback argument and return immediately, triggering the
callback when results are ready.

Note that if you *must* use a library which is blocking, a possible solution
is to execute the blocking code in a thread.  But, this isn't easy to get
right and the python GIL can cause problems if you need a lot of threads.

Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/6d94d08e/attachment.html>

From deldotdr at gmail.com  Thu Sep 29 15:28:50 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 14:28:50 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
Message-ID: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>

Hello,

I am confused about how the FingerService gets started in the
finger/finger.py makeService function. It is never assigned a service parent
and it can't service getUser requests if its startService method isn't
called; you get an AttributeError: "no attribute 'users'" the way it works
now. Is this a bug?

The most sensible thing, in this case, seems to be setting the
FingerServiceparent to be the
MultiService container that all of the interent services are added to in the
makeService function. Is that correct?

I'm wondering if their are any other strategies people use for starting
non-internet services.
For instance, if instead of reading a file to get to my user db, I might
want to start a redis client and read from redis to service a getUser call.
But that means I'd want to make sure the startService call succeeded (the
redis connection was made) before one of the internet services tries to use
the FingerService (a timing problem that doesn't exist when just reading a
file)...or something. Maybe I'm really just wondering how the twisted
application framework handles exceptions that occur for startService calls.
Maybe I need something else to handle that kind of thing?

I'm also wondering if it's ever a good idea to make a extension of
ServerFactory (that adapts a Service) that calls Service.startService
when Factory.startServer
is called (and Service.stopService when Factory.stopFactory is called)?

And I'm looking for more use cases/projects (beyond the finger tutorial)
that really showcase the twisted application framework. Any references would
be appreciated!

Thanks!
-Dorian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/695dc7a3/attachment.html>

From a.libran at gmail.com  Thu Sep 29 15:44:51 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 05:44:51 +0800
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
Message-ID: <CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>

I'll take care of the first question.

>From The Evolution of Finger: making a finger library,

h = internet.TCPServer(79, IFingerFactory(f))

notice IFingerFactory? If you read the earlier parts of the tutorial,
you'll see stuff like components.registerAdapter. It's just magic to
create a FingerFactoryFromService, giving its constructor f, the
"Finger Service". What happens here is that "f", the Finger Service,
is different from the service.Service within the Twisted Framework.
You might as well call "f", the Finger Service, "Finger Shared Data".

What really happens here is

h is the service that has parent s, MultiService. s is then returned
and started by the application.

h contains a factory that gets run.

The factory knows "f", the Finger Service, which has nothing to do
with twisted's mechanism. It's more of a demo for the component based
framework. f is a way to share data and methods and states across
multiple factories.

I am also very new to twisted, so I **hope** this understanding of
mine is correct ...

I strongly recommend you read through the entire tutorial. They build
very incrementally, so most of the time the code is repeated so you
can just skim through it if you had started from the beginning.

David Kao



On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> Hello,
> I am confused about how the FingerService gets started in the
> finger/finger.py makeService function. It is never assigned a service parent
> and it can't service getUser requests if its startService method isn't
> called; you get an AttributeError: "no attribute 'users'" the way it works
> now. Is this a bug?
> The most sensible thing, in this case, seems to be setting the FingerService
> parent to be the MultiService container that all of the interent services
> are added to in the makeService function. Is that correct?
> I'm wondering if their are any other strategies people use for starting
> non-internet services.
> For instance, if instead of reading a file to get to my user db, I might
> want to start a redis client and read from redis to service a getUser call.
> But that means I'd want to make sure the startService call succeeded (the
> redis connection was made) before one of the internet services tries to use
> the FingerService (a timing problem that doesn't exist when just reading a
> file)...or something. Maybe I'm really just wondering how the twisted
> application framework handles exceptions that occur for startService calls.
> Maybe I need something else to handle that kind of thing?
> I'm also wondering if it's ever a good idea to make a extension
> of ServerFactory (that adapts a Service) that calls Service.startService
> when Factory.startServer is called (and Service.stopService when
> Factory.stopFactory is called)?
> And I'm looking for more use cases/projects (beyond the finger tutorial)
> that really showcase the twisted application framework. Any references would
> be appreciated!
> Thanks!
> -Dorian
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From deldotdr at gmail.com  Thu Sep 29 16:10:03 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 15:10:03 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
Message-ID: <CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>

On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:

> I'll take care of the first question.
>
> From The Evolution of Finger: making a finger library,
>
> h = internet.TCPServer(79, IFingerFactory(f))
>
> notice IFingerFactory? If you read the earlier parts of the tutorial,
> you'll see stuff like components.registerAdapter. It's just magic to
> create a FingerFactoryFromService, giving its constructor f, the
> "Finger Service". What happens here is that "f", the Finger Service,
> is different from the service.Service within the Twisted Framework.
>

The FingerService inherits service.Service and implements the
startServiceevent, so it *is* a service that can be run by the service
framework; it
just isn't one of the twisted.application.internet services, like
internet.TCPServer.
Moreover, it needs to have startService called, somehow... and what I'm
saying is that in the full example (provided in
 twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it is not
called, and if you actually try using it, it doesn't work.


You might as well call "f", the Finger Service, "Finger Shared Data".
>
> What really happens here is
>
> h is the service that has parent s, MultiService. s is then returned
> and started by the application.
>
> h contains a factory that gets run.
>
> The factory knows "f", the Finger Service, which has nothing to do
> with twisted's mechanism. It's more of a demo for the component based
> framework. f is a way to share data and methods and states across
> multiple factories.
>
> I am also very new to twisted, so I **hope** this understanding of
> mine is correct ...
>
> I strongly recommend you read through the entire tutorial. They build
> very incrementally, so most of the time the code is repeated so you
> can just skim through it if you had started from the beginning.
>

I've read it many times over the years ;) It's surprisingly complete as an
example...you just don't know that in the beginning.

The topic area of this question is something I'm trying to squeeze out of
this tutorial series; I'm encountering conceptual questions beyond the
mechanics of how the framework works (which the tutorial does a great job of
explaining) like:
should I ever make a tree of dependent services?
What if I do something in a startService method that I want to make sure
works before other services get their startService called?
If I create a bunch of business services (that just provide pure
functionality) that I then adapt for deployment in different t.a.internet
services, should I put the business services in their own MultiService and
the internet services in their own MutiService container?

Like I said, more showcasing of use cases would help suggest answers to
these kind of questions. I see a lot of possibilities, but haven't put in
the time in the trenches to try them all out ;)

Thanks,
-Dorian



> David Kao
>
>
>
> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> > Hello,
> > I am confused about how the FingerService gets started in the
> > finger/finger.py makeService function. It is never assigned a service
> parent
> > and it can't service getUser requests if its startService method isn't
> > called; you get an AttributeError: "no attribute 'users'" the way it
> works
> > now. Is this a bug?
> > The most sensible thing, in this case, seems to be setting the
> FingerService
> > parent to be the MultiService container that all of the interent services
> > are added to in the makeService function. Is that correct?
> > I'm wondering if their are any other strategies people use for starting
> > non-internet services.
> > For instance, if instead of reading a file to get to my user db, I might
> > want to start a redis client and read from redis to service a getUser
> call.
> > But that means I'd want to make sure the startService call succeeded (the
> > redis connection was made) before one of the internet services tries to
> use
> > the FingerService (a timing problem that doesn't exist when just reading
> a
> > file)...or something. Maybe I'm really just wondering how the twisted
> > application framework handles exceptions that occur for startService
> calls.
> > Maybe I need something else to handle that kind of thing?
> > I'm also wondering if it's ever a good idea to make a extension
> > of ServerFactory (that adapts a Service) that calls Service.startService
> > when Factory.startServer is called (and Service.stopService when
> > Factory.stopFactory is called)?
> > And I'm looking for more use cases/projects (beyond the finger tutorial)
> > that really showcase the twisted application framework. Any references
> would
> > be appreciated!
> > Thanks!
> > -Dorian
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/3313469e/attachment.html>

From a.libran at gmail.com  Thu Sep 29 16:23:42 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 06:23:42 +0800
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
	<CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
Message-ID: <CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>

On Fri, Sep 30, 2011 at 6:10 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
>
>
> On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:
>>
>> I'll take care of the first question.
>>
>> From The Evolution of Finger: making a finger library,
>>
>> h = internet.TCPServer(79, IFingerFactory(f))
>>
>> notice IFingerFactory? If you read the earlier parts of the tutorial,
>> you'll see stuff like components.registerAdapter. It's just magic to
>> create a FingerFactoryFromService, giving its constructor f, the
>> "Finger Service". What happens here is that "f", the Finger Service,
>> is different from the service.Service within the Twisted Framework.
>
> The FingerService inherits service.Service and implements the startService
> event, so it *is* a service that can be run by the service framework; it
> just isn't one of the twisted.application.internet services, like
> internet.TCPServer.
> Moreover, it needs to have startService called, somehow... and what I'm
> saying is that in the full example (provided
> in twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it is
> not called, and if you actually try using it, it doesn't work.
>

Yes you are right. It's just the two concepts (adapter and service)
are different but are presented together. In this case, it happens
that FingerService needs initialization, and that initialization is
usually done via startService, which, I agree, isn't called. And it's
funky here because you don't want FingerService to be the service
here, because it doesn't know how to listen to TCP. bahhh ... yea the
example is not super great. It seems like you understand the examples
anyways.


>>
>> You might as well call "f", the Finger Service, "Finger Shared Data".
>>
>> What really happens here is
>>
>> h is the service that has parent s, MultiService. s is then returned
>> and started by the application.
>>
>> h contains a factory that gets run.
>>
>> The factory knows "f", the Finger Service, which has nothing to do
>> with twisted's mechanism. It's more of a demo for the component based
>> framework. f is a way to share data and methods and states across
>> multiple factories.
>>
>> I am also very new to twisted, so I **hope** this understanding of
>> mine is correct ...
>>
>> I strongly recommend you read through the entire tutorial. They build
>> very incrementally, so most of the time the code is repeated so you
>> can just skim through it if you had started from the beginning.
>
> I've read it many times over the years ;) It's surprisingly complete as an
> example...you just don't know that in the beginning.
> The topic area of this question is something I'm trying to squeeze out of
> this tutorial series; I'm encountering conceptual questions beyond the
> mechanics of how the framework works (which the tutorial does a great job of
> explaining) like:
> should I ever make a tree of dependent services?
> What if I do something in a startService method that I want to make sure
> works before other services get their startService called?
> If I create a bunch of business services (that just provide pure
> functionality) that I then adapt for deployment in different t.a.internet
> services, should I put the business services in their own MultiService and
> the internet services in their own MutiService container?
> Like I said, more showcasing of use cases would help suggest answers to
> these kind of questions. I see a lot of possibilities, but haven't put in
> the time in the trenches to try them all out ;)
> Thanks,
> -Dorian
>

Totally agree with your suggestion.

I have the exact same problem here. In the end I just start doing
things using reactor.listenTCP and forget about services since it
isn't clear in the docs the order in which services are started. I
sort of use one big setup service as "Main()", and then do my own
hooks using "fake service" inside each factory, and the call
reactor.listenTCP on those factories.

It might just be services are meant to be really independent and
parallel to each other. I dunno ... I'll let the veterans speak now.

>>
>> David Kao
>>
>>
>>
>> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
>> > Hello,
>> > I am confused about how the FingerService gets started in the
>> > finger/finger.py makeService function. It is never assigned a service
>> > parent
>> > and it can't service getUser requests if its startService method isn't
>> > called; you get an AttributeError: "no attribute 'users'" the way it
>> > works
>> > now. Is this a bug?
>> > The most sensible thing, in this case, seems to be setting the
>> > FingerService
>> > parent to be the MultiService container that all of the interent
>> > services
>> > are added to in the makeService function. Is that correct?
>> > I'm wondering if their are any other strategies people use for starting
>> > non-internet services.
>> > For instance, if instead of reading a file to get to my user db, I might
>> > want to start a redis client and read from redis to service a getUser
>> > call.
>> > But that means I'd want to make sure the startService call succeeded
>> > (the
>> > redis connection was made) before one of the internet services tries to
>> > use
>> > the FingerService (a timing problem that doesn't exist when just reading
>> > a
>> > file)...or something. Maybe I'm really just wondering how the twisted
>> > application framework handles exceptions that occur for startService
>> > calls.
>> > Maybe I need something else to handle that kind of thing?
>> > I'm also wondering if it's ever a good idea to make a extension
>> > of ServerFactory (that adapts a Service) that calls Service.startService
>> > when Factory.startServer is called (and Service.stopService when
>> > Factory.stopFactory is called)?
>> > And I'm looking for more use cases/projects (beyond the finger tutorial)
>> > that really showcase the twisted application framework. Any references
>> > would
>> > be appreciated!
>> > Thanks!
>> > -Dorian
>> > _______________________________________________
>> > Twisted-Python mailing list
>> > Twisted-Python at twistedmatrix.com
>> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>> >
>> >
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From deldotdr at gmail.com  Thu Sep 29 16:41:58 2011
From: deldotdr at gmail.com (Dorian Raymer)
Date: Thu, 29 Sep 2011 15:41:58 -0700
Subject: [Twisted-Python] Bug in Finger Tutorial?
In-Reply-To: <CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>
References: <CALUPC+HuCpS3ipPZHYK8Pvwq-_CA8aSRZC6ZM4LMu_=5CQaZxg@mail.gmail.com>
	<CAG4NAK5sHvGcUzdiE+WytBnhYC3pPBBuJ4hFLc=LAd-F1LOULA@mail.gmail.com>
	<CALUPC+EeYCt=ZXSqxbsDQ_YK0XniSKx3zA1pvOuTdw8h37+qTg@mail.gmail.com>
	<CAG4NAK5PpB7uagS_qheB2J6XG-ZnVHHNjTrNvUNQ186XewQGeg@mail.gmail.com>
Message-ID: <CALUPC+F6fCd_8jm+86KQ=Nq-no4681Z2igmkVd=Qun21Q24CbA@mail.gmail.com>

On Thu, Sep 29, 2011 at 3:23 PM, David Kao <a.libran at gmail.com> wrote:

> On Fri, Sep 30, 2011 at 6:10 AM, Dorian Raymer <deldotdr at gmail.com> wrote:
> >
> >
> > On Thu, Sep 29, 2011 at 2:44 PM, David Kao <a.libran at gmail.com> wrote:
> >>
> >> I'll take care of the first question.
> >>
> >> From The Evolution of Finger: making a finger library,
> >>
> >> h = internet.TCPServer(79, IFingerFactory(f))
> >>
> >> notice IFingerFactory? If you read the earlier parts of the tutorial,
> >> you'll see stuff like components.registerAdapter. It's just magic to
> >> create a FingerFactoryFromService, giving its constructor f, the
> >> "Finger Service". What happens here is that "f", the Finger Service,
> >> is different from the service.Service within the Twisted Framework.
> >
> > The FingerService inherits service.Service and implements the
> startService
> > event, so it *is* a service that can be run by the service framework; it
> > just isn't one of the twisted.application.internet services, like
> > internet.TCPServer.
> > Moreover, it needs to have startService called, somehow... and what I'm
> > saying is that in the full example (provided
> > in twisted/doc/core/howto/tutorial/listings/finger/finger/finger.py) it
> is
> > not called, and if you actually try using it, it doesn't work.
> >
>
> Yes you are right. It's just the two concepts (adapter and service)
> are different but are presented together. In this case, it happens
> that FingerService needs initialization, and that initialization is
> usually done via startService, which, I agree, isn't called. And it's
> funky here because you don't want FingerService to be the service
> here, because it doesn't know how to listen to TCP. bahhh ... yea the
> example is not super great. It seems like you understand the examples
> anyways.
>
>
> >>
> >> You might as well call "f", the Finger Service, "Finger Shared Data".
> >>
> >> What really happens here is
> >>
> >> h is the service that has parent s, MultiService. s is then returned
> >> and started by the application.
> >>
> >> h contains a factory that gets run.
> >>
> >> The factory knows "f", the Finger Service, which has nothing to do
> >> with twisted's mechanism. It's more of a demo for the component based
> >> framework. f is a way to share data and methods and states across
> >> multiple factories.
> >>
> >> I am also very new to twisted, so I **hope** this understanding of
> >> mine is correct ...
> >>
> >> I strongly recommend you read through the entire tutorial. They build
> >> very incrementally, so most of the time the code is repeated so you
> >> can just skim through it if you had started from the beginning.
> >
> > I've read it many times over the years ;) It's surprisingly complete as
> an
> > example...you just don't know that in the beginning.
> > The topic area of this question is something I'm trying to squeeze out of
> > this tutorial series; I'm encountering conceptual questions beyond the
> > mechanics of how the framework works (which the tutorial does a great job
> of
> > explaining) like:
> > should I ever make a tree of dependent services?
> > What if I do something in a startService method that I want to make sure
> > works before other services get their startService called?
> > If I create a bunch of business services (that just provide pure
> > functionality) that I then adapt for deployment in different t.a.internet
> > services, should I put the business services in their own MultiService
> and
> > the internet services in their own MutiService container?
> > Like I said, more showcasing of use cases would help suggest answers to
> > these kind of questions. I see a lot of possibilities, but haven't put in
> > the time in the trenches to try them all out ;)
> > Thanks,
> > -Dorian
> >
>
> Totally agree with your suggestion.
>
> I have the exact same problem here. In the end I just start doing
> things using reactor.listenTCP and forget about services since it
> isn't clear in the docs the order in which services are started. I
> sort of use one big setup service as "Main()", and then do my own
> hooks using "fake service" inside each factory, and the call
> reactor.listenTCP on those factories.
>
> Cool, yeah I do similar things as well.


> It might just be services are meant to be really independent and
> parallel to each other. I dunno ... I'll let the veterans speak now.
>
> Yeah, there is definitely a lot of value in keeping the
transport enabling services separate from the functional services. Keeping
them independent and parallel seems like the better way to go. Maybe my
misunderstanding is what the scope of Twisted Services was intended to
be...Up to now, I've been thinking about designing applications that use
Twisted Services for both pure business functionality AND for things that
provide network transport. I briefly looked at how erlang/OTP handles
starting dependencies in apps. The rabbitmq app blocks/waits for each major
component to start (which would be like a Twisted Service.startService
returning a Deferred). I guess this is just a hard problem, or maybe I'm
missing a concept.

Thanks,
-Dorian



> >>
> >> David Kao
> >>
> >>
> >>
> >> On Fri, Sep 30, 2011 at 5:28 AM, Dorian Raymer <deldotdr at gmail.com>
> wrote:
> >> > Hello,
> >> > I am confused about how the FingerService gets started in the
> >> > finger/finger.py makeService function. It is never assigned a service
> >> > parent
> >> > and it can't service getUser requests if its startService method isn't
> >> > called; you get an AttributeError: "no attribute 'users'" the way it
> >> > works
> >> > now. Is this a bug?
> >> > The most sensible thing, in this case, seems to be setting the
> >> > FingerService
> >> > parent to be the MultiService container that all of the interent
> >> > services
> >> > are added to in the makeService function. Is that correct?
> >> > I'm wondering if their are any other strategies people use for
> starting
> >> > non-internet services.
> >> > For instance, if instead of reading a file to get to my user db, I
> might
> >> > want to start a redis client and read from redis to service a getUser
> >> > call.
> >> > But that means I'd want to make sure the startService call succeeded
> >> > (the
> >> > redis connection was made) before one of the internet services tries
> to
> >> > use
> >> > the FingerService (a timing problem that doesn't exist when just
> reading
> >> > a
> >> > file)...or something. Maybe I'm really just wondering how the twisted
> >> > application framework handles exceptions that occur for startService
> >> > calls.
> >> > Maybe I need something else to handle that kind of thing?
> >> > I'm also wondering if it's ever a good idea to make a extension
> >> > of ServerFactory (that adapts a Service) that
> calls Service.startService
> >> > when Factory.startServer is called (and Service.stopService when
> >> > Factory.stopFactory is called)?
> >> > And I'm looking for more use cases/projects (beyond the finger
> tutorial)
> >> > that really showcase the twisted application framework. Any references
> >> > would
> >> > be appreciated!
> >> > Thanks!
> >> > -Dorian
> >> > _______________________________________________
> >> > Twisted-Python mailing list
> >> > Twisted-Python at twistedmatrix.com
> >> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >> >
> >> >
> >>
> >> _______________________________________________
> >> Twisted-Python mailing list
> >> Twisted-Python at twistedmatrix.com
> >> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/fa589ee7/attachment.html>

From croepha at gmail.com  Thu Sep 29 21:41:47 2011
From: croepha at gmail.com (Croepha)
Date: Thu, 29 Sep 2011 22:41:47 -0500
Subject: [Twisted-Python] Question about "starving" the reactor
In-Reply-To: <1308587021.18253.57.camel@behemoth>
References: <80B89FFF-293D-426D-AF57-CBB07A689A44@orestis.gr>
	<4DFF1C9A.9000101@imperial.ac.uk>
	<F99E1BA5-0573-4481-A3BF-8C5DDB838717@orestis.gr>
	<4DFF316A.8090506@imperial.ac.uk>
	<2C44BF64-4D79-4A0A-8F43-99E5FB722725@twistedmatrix.com>
	<1308587021.18253.57.camel@behemoth>
Message-ID: <CANm61jcvHuHVias02VPMNYeQ6PhuNSaK5WkF8e2jByS7r100sQ@mail.gmail.com>

On Mon, Jun 20, 2011 at 11:23 AM, Luke Marsden <
luke-lists at hybrid-logic.co.uk> wrote:

> On Mon, 2011-06-20 at 11:09 -0400, Glyph Lefkowitz wrote:
> > On Jun 20, 2011, at 7:39 AM, Phil Mayers wrote:
> > > On 20/06/11 11:29, Orestis Markou wrote:
> > >> It might be there's no way to do guarantee something like that, so it
> > >> might be just that everyone should be careful about this.
> > >
> > > I don't think you can stop callers of a function doing silly things
> with
> > > the return value.
> >
> > +1.  The best way to deal with this is to make your APIs nice and
> > simple, and their implementation straightforward.  If you try to do
> > weird tricks to make callbacks on your Deferreds cooperative, then you
> > might break an otherwise reasonable strategy on the part of the client
> > code to be well-behaved on their part.
> >
> > For the code that is itself trying to be well-behaved, there are
> > things like twisted.internet.task.cooperate.
>
> There might not be any way to stop consumers of your Deferreds executing
> blocking operations, but when trying to track down which pieces of code
> are the culprits, I found exarkun's BigTimesliceTimer very useful:
>
> http://twistedmatrix.com/trac/browser/sandbox/exarkun/btt.py


On that note, I made an updated version of the btt:
http://pastebin.com/uBbSuDr6

I know i'm digging up ancient history here, but I thought it was relevant


>
> It uses a reactor-independent timing mechanism (the setitimer sigcall on
> Linux, contact me if you want the FreeBSD version) to set an alarm which
> the reactor then has to "race" to unset, else the itimer handler gets
> pre-emptively executed.  When the alarm runs, it prints a traceback of
> the current execution point in the "client" code.  By setting the alarm
> frequency sufficiently low and by watching for sufficiently long you can
> "sample" the code which is running while the reactor is blocked.  Code
> paths which show up frequently are therefore *more likely* to be the
> culprits.
>
> One day it would be nice to turn this into some kind of statistical tool
> for highlighting which code paths are the "hot-spots" in your code, so
> that you can optimise the "blockiest" bits first.  Premature
> optimisation, etc.
>
> Hope this helps; it helped me :-)
>
> --
> Best Regards,
> Luke Marsden
> CTO, Hybrid Logic Ltd.
>
> Web: http://www.hybrid-cluster.com/
> Hybrid Web Cluster - cloud web hosting
>
> Phone: +447791750420
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/24cb5fc1/attachment.html>

From glyph at twistedmatrix.com  Thu Sep 29 21:52:52 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Thu, 29 Sep 2011 23:52:52 -0400
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
Message-ID: <9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>


On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:

> This strikes me as a bug.  Can you file a new ticket for this?

Since we didn't hear back about this, I filed <http://twistedmatrix.com/trac/ticket/5287>.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20110929/60f089c2/attachment-0001.html>

From a.libran at gmail.com  Thu Sep 29 22:05:51 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 12:05:51 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
Message-ID: <CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>

My bad. I filed

http://twistedmatrix.com/trac/ticket/5274

You can close either.

David Kao



On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
<glyph at twistedmatrix.com> wrote:
>
> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>
> This strikes me as a bug.  Can you file a new ticket for this?
>
> Since we didn't hear back about this, I filed
> <http://twistedmatrix.com/trac/ticket/5287>.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From a.libran at gmail.com  Thu Sep 29 22:22:24 2011
From: a.libran at gmail.com (David Kao)
Date: Fri, 30 Sep 2011 12:22:24 +0800
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
 do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
	<CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
Message-ID: <CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>

OK I marked mine as duplicate. I think yours seem like a better
description anyways.

David Kao



On Fri, Sep 30, 2011 at 12:05 PM, David Kao <a.libran at gmail.com> wrote:
> My bad. I filed
>
> http://twistedmatrix.com/trac/ticket/5274
>
> You can close either.
>
> David Kao
>
>
>
> On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
> <glyph at twistedmatrix.com> wrote:
>>
>> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>>
>> This strikes me as a bug.  Can you file a new ticket for this?
>>
>> Since we didn't hear back about this, I filed
>> <http://twistedmatrix.com/trac/ticket/5287>.
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>>
>



From glyph at twistedmatrix.com  Thu Sep 29 23:18:59 2011
From: glyph at twistedmatrix.com (Glyph Lefkowitz)
Date: Fri, 30 Sep 2011 01:18:59 -0400
Subject: [Twisted-Python] [Twisted] #5272: In the core doc,
	do not call reactor.stop directly in processEnded
In-Reply-To: <CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>
References: <047.81f69e6b9841a989f4eb3a3ceba02c04@twistedmatrix.com>
	<056.679602c6314dd3c4ad5b70791a0ddc86@twistedmatrix.com>
	<CAG4NAK6McvYkXJKRtDYba4dTdomMLGiOwRgC+RMk7JEVqpbvRQ@mail.gmail.com>
	<20110926132739.2214.1902455747.divmod.xquotient.13@localhost.localdomain>
	<9F2396FD-725D-49CB-BDEC-B19CD8C6FCAE@twistedmatrix.com>
	<CAG4NAK6bxiK6jGVxaCrryOhsfUTqio6yWOjVcQaQz-e9wz2=aw@mail.gmail.com>
	<CAG4NAK6jn8bUOHqrQEYtNPef+HmO8kP_U1vHjej_c7mqR3rV=A@mail.gmail.com>
Message-ID: <9954A4D7-21EE-47DE-9BA5-8F7EF9193A9F@twistedmatrix.com>

Wish I'd noticed yours first - thanks for filing it!  But yeah, I think my description was a bit more descriptive.

On Sep 30, 2011, at 12:22 AM, David Kao wrote:

> OK I marked mine as duplicate. I think yours seem like a better
> description anyways.
> 
> David Kao
> 
> 
> 
> On Fri, Sep 30, 2011 at 12:05 PM, David Kao <a.libran at gmail.com> wrote:
>> My bad. I filed
>> 
>> http://twistedmatrix.com/trac/ticket/5274
>> 
>> You can close either.
>> 
>> David Kao
>> 
>> 
>> 
>> On Fri, Sep 30, 2011 at 11:52 AM, Glyph Lefkowitz
>> <glyph at twistedmatrix.com> wrote:
>>> 
>>> On Sep 26, 2011, at 9:27 AM, exarkun at twistedmatrix.com wrote:
>>> 
>>> This strikes me as a bug.  Can you file a new ticket for this?
>>> 
>>> Since we didn't hear back about this, I filed
>>> <http://twistedmatrix.com/trac/ticket/5287>.
>>> 
>>> _______________________________________________
>>> Twisted-Python mailing list
>>> Twisted-Python at twistedmatrix.com
>>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>> 
>>> 
>> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From zooko at zooko.com  Fri Sep 30 20:43:31 2011
From: zooko at zooko.com (Zooko O'Whielacronx)
Date: Fri, 30 Sep 2011 20:43:31 -0600
Subject: [Twisted-Python] Moving Twisted off Trac and SVN to somewhere
	nicer
In-Reply-To: <CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>
References: <BANLkTi=7+0MALmdmExE3HNuYRMtDJuh2pg@mail.gmail.com>
	<CAFTeXi2A77pn6a7rsfF7EZ4CZjL-4fKqMy=y_hXgNY-h4UGu7A@mail.gmail.com>
	<349A5D33-7742-4B3D-8F0E-23CC3CECDC2B@orestis.gr>
	<4E12E5E1.7080309@silveregg.co.jp>
	<CAE_Hg6Z5rf-nPp--ege1H+5kDpKUr0EdFk368AbkY3v7sMRegA@mail.gmail.com>
	<CA+U=zK3wwgr1ip-JagT52hLvf6y7xKfbE0JNZNCZJf309pXSrA@mail.gmail.com>
	<CAE_Hg6YiL3SOmJZT-LCPdgXEr3HCGcZFkPcOWbbvXJh6Gp=enw@mail.gmail.com>
	<CA+U=zK0_0Tv2fN=jFKMxK4nCZ=Ab01D=kZE+=-85zO+9HxXqnw@mail.gmail.com>
Message-ID: <CANdZDc62=K+5L=Lhb7B5DaKmdnb1Hu6jewNQd6Cr8iq3eyi=gQ@mail.gmail.com>

Hi, I actually have contributed a few small patches to Twisted. I've
attempted to contribute a few more which never made it in. I intend to
contribute more in the future.

I prefer launchpad over github because of its issue tracker,
especially the ability to crosslink issues which affect more than one
project or distribution. Also because the launchpad implementation is
open source.

But, I'll be happy to use whatever you folks want.

Regards,

Zooko



