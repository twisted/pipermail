From jeff at jamcupboard.co.uk  Tue Mar  1 12:48:58 2005
From: jeff at jamcupboard.co.uk (Jeff Silver)
Date: Tue, 1 Mar 2005 17:48:58 +0000
Subject: [Twisted-Python] Re: Patch to support DNS updates
In-Reply-To: <E1D5yF6-0004IU-03@pyramid.twistedmatrix.com>
Message-ID: <H0000065000016a2.1109698830.moses@MHS>

> Size of python data types is pretty irrelevant when DNS SOA serial
> number is an unsigned 32-bit number. January 1st, 2043 would be
> 
> 4301010000
> YYMMDDHHMM
> 
> which is > 2**32, and thus invalid.

Ahhh! I see. Thanks. I'll do something different.

> This is all pretty academical, of course. It's just that you've created
> a totally new _class_ of y2k-like bugs, with your
> YYYYMMDDHHMM - 200000000000 scheme, and I think that's worth some kind
> of a prize.

How kind! Maybe that balances out the one real y2k bug I fixed in 1999.
I'm still looking forward to the year 2008 bug that no-one seems to be worried
about (2-digit year read by a program/language that treats leading zero as an
octal indicator - and yes, I have seen an example).

Thanks again for your comments.




From TheBadBob at gmail.com  Wed Mar  2 09:58:32 2005
From: TheBadBob at gmail.com (Bad_Bob)
Date: Wed, 02 Mar 2005 14:58:32 +0000
Subject: [Twisted-Python] Need SSH help
Message-ID: <200503021458.32250.TheBadBob@gmail.com>

I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).

I am trying to understand twisted's ssh.  Thanks to the helpful people on 
#twisted I have am able to get the twisted client to send messages to the 
twisted server.  This works when I use the keys provided in the example.  
However when I try to generate my own keys it always complains that they are 
not password.

This is the code I am using to generate public/private key pairs:

twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename': 
os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)

This is the error I get:

2005/03/02 14:37 UTC [-] Log opened.
2005/03/02 14:37 UTC [-] Traceback (most recent call last):
2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in 
ExampleFactory
2005/03/02 14:37 UTC [-]    privateKeys = {
2005/03/02 14:37 UTC [-]  File 
"/usr/lib/python2.3/site-packages/twisted/conch/ssh/keys.py", line 180, in 
getPrivateKeyObject
2005/03/02 14:37 UTC [-]    return getPrivateKeyObject_openssh(data, 
passphrase)
2005/03/02 14:37 UTC [-]  File 
"/usr/lib/python2.3/site-packages/twisted/conch/ssh/keys.py", line 207, in 
getPrivateKeyObject_openssh
2005/03/02 14:37 UTC [-]    raise BadKeyError, 'encrypted key with no 
passphrase'
2005/03/02 14:37 UTC [-] twisted.conch.ssh.keys.BadKeyError: encrypted key 
with no passphrase

Is there another way I should generate the keys?

Thanks



From z3p at twistedmatrix.com  Wed Mar  2 16:00:32 2005
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 02 Mar 2005 16:00:32 -0500
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <200503021458.32250.TheBadBob@gmail.com>
References: <200503021458.32250.TheBadBob@gmail.com>
Message-ID: <1109797232.19830.2.camel@petra>

On Wed, 2005-03-02 at 14:58 +0000, Bad_Bob wrote:
>I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).
>
>I am trying to understand twisted's ssh.  Thanks to the helpful people on 
>#twisted I have am able to get the twisted client to send messages to the 
>twisted server.  This works when I use the keys provided in the example.  
>However when I try to generate my own keys it always complains that they are 
>not password.
>
>This is the code I am using to generate public/private key pairs:
>
>twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename': 
>os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)
>
>This is the error I get:
>
>2005/03/02 14:37 UTC [-] Log opened.
>2005/03/02 14:37 UTC [-] Traceback (most recent call last):
>2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
>2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
>2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in 
>ExampleFactory
>2005/03/02 14:37 UTC [-]    privateKeys = {

The problem is on the next line:
        'ssh-rsa': keys.getPrivateKeyObject(data=privateKey)

That means that getPrivateKeyObject doesn't expect the key to be
encrypted.  If it is, you need to also pass in the passphrase kwarg with
the passphrase.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/  _o)
//\    z3p at twistedmatrix.com        /\\
V_/_   AIM: z3penguin              _\_V->
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050302/7c669cf2/attachment.pgp 

From TheBadBob at gmail.com  Wed Mar  2 11:21:44 2005
From: TheBadBob at gmail.com (Bad_Bob)
Date: Wed, 02 Mar 2005 16:21:44 +0000
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <1109797232.19830.2.camel@petra>
References: <200503021458.32250.TheBadBob@gmail.com>
	<1109797232.19830.2.camel@petra>
Message-ID: <200503021621.44831.TheBadBob@gmail.com>

Thanks, that worked!

One more question: 
How do I authenticate with public keys?

What I am trying to get this to do it to authenticate based on the public key, 
not based on the password.  The program will have a list of trusted public 
keys, and only allow those to connect.  They could use a password, but if 
they have the wrong public key, I don't want them to connect.

Thanks,
Bob

Am Mittwoch, 2. M?rz 2005 21:00 schrieb Paul Swartz:
> On Wed, 2005-03-02 at 14:58 +0000, Bad_Bob wrote:
> >I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).
> >
> >I am trying to understand twisted's ssh.  Thanks to the helpful people on
> >#twisted I have am able to get the twisted client to send messages to the
> >twisted server.  This works when I use the keys provided in the example.
> >However when I try to generate my own keys it always complains that they
> > are not password.
> >
> >This is the code I am using to generate public/private key pairs:
> >
> >twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename':
> >os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)
> >
> >This is the error I get:
> >
> >2005/03/02 14:37 UTC [-] Log opened.
> >2005/03/02 14:37 UTC [-] Traceback (most recent call last):
> >2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
> >2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
> >2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in
> >ExampleFactory
> >2005/03/02 14:37 UTC [-]    privateKeys = {
>
> The problem is on the next line:
>         'ssh-rsa': keys.getPrivateKeyObject(data=privateKey)
>
> That means that getPrivateKeyObject doesn't expect the key to be
> encrypted.  If it is, you need to also pass in the passphrase kwarg with
> the passphrase.
>
> -p



From z3p at twistedmatrix.com  Wed Mar  2 16:46:57 2005
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 02 Mar 2005 16:46:57 -0500
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <200503021621.44831.TheBadBob@gmail.com>
References: <200503021458.32250.TheBadBob@gmail.com>
	<1109797232.19830.2.camel@petra>
	<200503021621.44831.TheBadBob@gmail.com>
Message-ID: <1109800017.19830.9.camel@petra>

On Wed, 2005-03-02 at 16:21 +0000, Bad_Bob wrote:
>Thanks, that worked!
>
>One more question: 
>How do I authenticate with public keys?

I assume you mean authenticate the client to the server using public
keys?
You need to set up a CredentialChecker that checks ISSHPublicKey.  Take
a look at t.c.checkers.SSHPublicKeyDatabase.  If you're not familiar
with how Cred works, you should also look at the Cred HOWTO.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/  _o)
//\    z3p at twistedmatrix.com        /\\
V_/_   AIM: z3penguin              _\_V->
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050302/417b613d/attachment.pgp 

From leszczynscy at yahoo.com  Wed Mar  2 20:39:00 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Wed, 02 Mar 2005 19:39:00 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events loop
Message-ID: <42266AB4.1020104@yahoo.com>

Python 2.3, one of the latest Twisted version:

I noted that under Linux there is not way to Control-C the reactor loop. 
After digging a little I found that following change helps:

[root at d1501-0a10109c internet]# diff base.py{,.ori}
 >
302d301
<       print "1",sysEvtTriggers
305d303
<       print "2",`self._eventTriggers`
307,308c305
<         for callable, args, kw in sysEvtTriggers[1]:
<           print "3"
---
 >
 >         for callable, args, kw in sysEvtTriggers[0]:
317d313
<           print "4"
320d315
<           print "5",`eventType`


Of course it is quick work around, not a permanent fix, but it really helps.


Please advice, Andy



From anthony at interlink.com.au  Thu Mar  3 10:05:03 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 4 Mar 2005 02:05:03 +1100
Subject: [Twisted-Python] anyone interested in helping work on a UPnP server?
Message-ID: <200503040205.05770.anthony@interlink.com.au>

Hey there,

I want to look at extending shtoom's UPnP support to create a UPnP server for
Linux &c. I can do the work for the UPnP side, but I'm not particularly clear 
on the commands needed to insert the relevant ipchains or whatever rules.
If you're up on this stuff, and want to help out, drop me an email.

Thanks,
Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From andrea at cpushare.com  Thu Mar  3 11:14:52 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 3 Mar 2005 17:14:52 +0100
Subject: [Twisted-Python] streaming producer
Message-ID: <20050303161452.GL8880@opteron.random>

Could somebody explain the semantics of the streaming parameter to
registerProducer? I believe I have to set it to 1.

I need to stop data coming from a process protocol, and to do so I need
to register a producer somehow. I need to stop the process protocol when
the TCP transport buffer (or the sendstring buffer or both? I'm using
int32protocol) grows too much (let's say 10mbytes, I like to allow huge
buffering, but at the same time I can't avoid the producer or people
could trigger oom conditions trivially). I don't understand exactly how
I have to setup the thing. I've two protocols, one is the tcp protocol,
the other is the process protocol.

I will probably make the max buffer size configurable dynamically and
accounted in the ram_mbytes selection as well.

It seems twcgi has the very same issue, so I'm taking ideas from there ;).

Thanks!



From gmcdonald at infocomp.com  Thu Mar  3 17:19:40 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Fri, 4 Mar 2005 09:19:40 +1100 
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and the GIL
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CBD@XCHANGE>

Hi everyone,

I have a threading question regarding Twisted and the explanation is a bit
long-winded but please bear with me.

The scenario:

I have created an automated build system in Python for PowerBuilder (awful
language) that allows a scheduler to assign build jobs to dispatcher
programs across a network.  These dispatchers have a GUI component coded in
wxPython.  The initial implementation involved also creating a separate
builder program that was spawned by the dispatchers when a build job was
received.  The builder code called an extension module to interface with the
low-level PowerBuilder compiler library.  This was done due to the fact the
calls to rebuild the application and deploy it are exceptionally
CPU-intensive and don't return for many minutes (approx. 30 or so for a
large application) and all attempts to include this in the dispatcher
resulted in the user interface freezing.

Recently I came across twisted documentation with regards to programming
using twisted threads.  As an experiment on this concept I amalgamated the
dispatcher and 
builder programs and called the builder code using the following:

d = threads.deferToThread(self.builder.newbuild(buildJob))
d.addCallback(self.builderFinished)

It should be noted that the extension module (a pyrex extension I have
created myself) implements the releasing and re-acquiring of the Global
Interpreter Lock for all blocking calls.  From my understanding this should
work but the user interface freezes.  Can someone please point me in the
direction of a solution?

Thanks,

Grant McDonald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050304/58583981/attachment.htm 

From gmcdonald at infocomp.com  Thu Mar  3 17:41:35 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Fri, 4 Mar 2005 09:41:35 +1100 
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and th
	e GIL
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CBE@XCHANGE>

I just realised after re-reading my post that the call to deferToThread
should have been:
 
d = threads.deferToThread(self.builder.newbuild, buildJob)
d.addCallback(self.builderFinished)

How silly of me, i'll test it now and see if there are still problems!

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Grant McDonald
Sent: 04 March 2005 09:20
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and the GIL



Hi everyone, 

I have a threading question regarding Twisted and the explanation is a bit
long-winded but please bear with me. 

The scenario: 

I have created an automated build system in Python for PowerBuilder (awful
language) that allows a scheduler to assign build jobs to dispatcher
programs across a network.  These dispatchers have a GUI component coded in
wxPython.  The initial implementation involved also creating a separate
builder program that was spawned by the dispatchers when a build job was
received.  The builder code called an extension module to interface with the
low-level PowerBuilder compiler library.  This was done due to the fact the
calls to rebuild the application and deploy it are exceptionally
CPU-intensive and don't return for many minutes (approx. 30 or so for a
large application) and all attempts to include this in the dispatcher
resulted in the user interface freezing.

Recently I came across twisted documentation with regards to programming
using twisted threads.  As an experiment on this concept I amalgamated the
dispatcher and 

builder programs and called the builder code using the following: 

d = threads.deferToThread(self.builder.newbuild(buildJob)) 
d.addCallback(self.builderFinished) 

It should be noted that the extension module (a pyrex extension I have
created myself) implements the releasing and re-acquiring of the Global
Interpreter Lock for all blocking calls.  From my understanding this should
work but the user interface freezes.  Can someone please point me in the
direction of a solution?

Thanks, 

Grant McDonald 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050304/04d6379e/attachment.htm 

From leszczynscy at yahoo.com  Fri Mar  4 08:38:05 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Fri, 04 Mar 2005 07:38:05 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
References: <42266AB4.1020104@yahoo.com>
Message-ID: <422864BD.5000802@yahoo.com>

Andrzej Leszczynski wrote:
> Python 2.3, one of the latest Twisted version:

Is this list alive. If no, what is the place I might ask for a help. I 
am quite new to the Python (but no to the development), so sorry for 
asking such a question.

Also I used ACE before, and find Twisted very similar in many regards. 
What if I would like to contribute to the Twisted project?

Thx, A.



From solipsis at pitrou.net  Fri Mar  4 09:03:13 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Fri, 04 Mar 2005 15:03:13 +0100
Subject: [Twisted-Python] potential bug in the reactor's handling
	events loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
References: <42266AB4.1020104@yahoo.com>
Message-ID: <1109944993.2750.1.camel@p-dhcp-333-72.rd.francetelecom.fr>

Le mercredi 02 mars 2005 ? 19:39 -0600, Andrzej Leszczynski a ?crit :
> Python 2.3, one of the latest Twisted version:
> 
> I noted that under Linux there is not way to Control-C the reactor loop. 

Here it works. (Mandrake Cooker packages)
Maybe you should try to upgrade to the latest packages, and then see if
it still happens.






From exarkun at divmod.com  Fri Mar  4 11:29:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 04 Mar 2005 16:29:20 GMT
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
Message-ID: <20050304162920.2951.667830422.divmod.quotient.16345@ohm>



On Wed, 02 Mar 2005 19:39:00 -0600, Andrzej Leszczynski <leszczynscy at yahoo.com> wrote:
>Python 2.3, one of the latest Twisted version:
> 
> I noted that under Linux there is not way to Control-C the reactor loop. 
> After digging a little I found that following change helps:
> 
> [root at d1501-0a10109c internet]# diff base.py{,.ori}
>  >
> 302d301
> <       print "1",sysEvtTriggers
> 305d303
> <       print "2",`self._eventTriggers`
> 307,308c305
> <         for callable, args, kw in sysEvtTriggers[1]:
> <           print "3"
> ---
>  >
>  >         for callable, args, kw in sysEvtTriggers[0]:
> 317d313
> <           print "4"
> 320d315
> <           print "5",`eventType`
> 
> 
> Of course it is quick work around, not a permanent fix, but it really helps.
> 

  The change is completely broken, unfortunately :)  It executes the "during" triggers in the "before" phase, and entirely skips the "before" triggers.

  I'll hazard a guess that you're trying to run and stop the reactor twice, and that it only fails on the second attempt.  This behavior isn't supported (reactor.run() can only be called once in a process's lifetime).  

  If this isn't the case, could you include a minimal (but complete and self-contained) example which reproduces the undesirable behavior?

  Jp



From mustafa at liqia.com  Fri Mar  4 11:40:36 2005
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Fri, 04 Mar 2005 18:40:36 +0200
Subject: [Twisted-Python] PB Error (printing exceptions in deferreds)
Message-ID: <42288F84.709@liqia.com>

Hi all,

I am trying to develop an application with twisted and using Pb. I have 
a trouble that I couldn't fix. I tried googling to find an solution, but 
didn't find an exact answer.

The problem is "I don't want exceptions be printed in server side". The 
solution already exists in Pb, if I raise an exception derived from 
pb.Error in a (view, execute, ...) method. However, if I raise the same 
exception in a deferred or callback function, the exception is printed. 
Here is an example,

server.py : Works as I expect
server2.py : Prints the exceptions, which I don't want
client.py : Catches the exception in both ways

Is there a solution which works in any way to avoid printing for 
specific exceptions.

Best regards,
Musti

============== server.py (works well)============
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor

class MyError(pb.Error):
    pass

class One(pb.Root):
    def remote_broken(self):
        msg = "fall down go boom"
        raise MyError(msg)

def main():
    reactor.listenTCP(8800, pb.PBServerFactory(One()))
    reactor.run()

if __name__ == '__main__':
    main()
=======================================

=========== server2.py (prints exceptions)============
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor
from twisted.internet import defer

class MyError(pb.Error):
    pass

class One(pb.Root):

    def badFoo(self, result):
        msg = "fall down go boom"
        raise MyError(msg)

    def remote_broken(self):
       d = defer.Deferred()
       d.addCallback(self.badFoo)
       d.callback(0)
       return d
   
def main():
    reactor.listenTCP(8800, pb.PBServerFactory(One()))
    reactor.run()

if __name__ == '__main__':
    main()
==========================================

=== client.py (works same for both server and server2)=======
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor

def main():
    factory = pb.PBClientFactory()
    reactor.connectTCP("localhost", 8800, factory)
    d = factory.getRootObject()
    d.addCallbacks(got_obj)
    reactor.run()

def got_obj(obj):
    # change "broken" into "broken2" to demonstrate an unhandled exception
    d2 = obj.callRemote("broken")
    d2.addCallback(working)
    d2.addErrback(broken)

def working():
    print "erm, it wasn't *supposed* to work.."

def broken(reason):
    print "got remote Exception"
    print " .type =", reason.type
    reactor.stop()

main()
=============================================



From foom at fuhm.net  Fri Mar  4 12:34:28 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Mar 2005 12:34:28 -0500
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <422864BD.5000802@yahoo.com>
References: <42266AB4.1020104@yahoo.com> <422864BD.5000802@yahoo.com>
Message-ID: <3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>

On Mar 4, 2005, at 8:38 AM, Andrzej Leszczynski wrote:
> Andrzej Leszczynski wrote:
>> Python 2.3, one of the latest Twisted version:
>
> Is this list alive. If no, what is the place I might ask for a help. I 
> am quite new to the Python (but no to the development), so sorry for 
> asking such a question.

I ignored your message because 1) The patch is unreadable, and 
backwards (please use unified diff format) 2) at first glance appears 
to just add print statements, and 3) It's not a problem that I've ever 
had.

I suspect other people did the same.

James




From jarrod.roberson at gmail.com  Fri Mar  4 17:31:27 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 4 Mar 2005 17:31:27 -0500
Subject: [Twisted-Python] Anyone have any code or links to code related to
	using ZeroConf / Rendezous with Twisted?
Message-ID: <2389d473050304143116f2f601@mail.gmail.com>

What I have found on google is lots of talk no implemenation, and the
little implementation that is talked about is a dead link :-(

I wanted to make sure I was not re-inventing the wheel before I start
on this myself.



From peterk at bayarea.net  Fri Mar  4 17:51:13 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Fri, 04 Mar 2005 14:51:13 -0800
Subject: [Twisted-Python] Anyone have any code or links to code related
	to	using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <4228E661.5040108@bayarea.net>

I've been looking into this lately, too. What I've found is that
http://sourceforge.net/projects/pyzeroconf is a zeroconf implementation 
in Python that looks to be good. It's not based on twisted but for my 
use, I don't think that matters yet.

- Peter


jarrod roberson wrote:
> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(
> 
> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From screwtape at froup.com  Fri Mar  4 19:19:09 2005
From: screwtape at froup.com (Tim Allen)
Date: Sat, 5 Mar 2005 11:19:09 +1100
Subject: [Twisted-Python] Anyone have any code or links to code related to
	using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <5a7c703b87d5f1453c3e8a70e47fcf41@froup.com>

On 5 Mar 2005, at 09:31, jarrod roberson wrote:
> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(

Yeah, that'd be me. I sort of wrote half an mDNS responder, posted it 
to the list, and got little to no feedback or interest.

I forget where I uploaded it last time, but for now, I've uploaded it 
again:

	http://members.optusnet.com.au/thristian/mDNS-0.5.tar.gz

> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.

The main reason I gave up and moved on was that I didn't have any real 
*need* for a ZeroConf implementation, I just thought it'd be neat to 
write. The second reason I gave up was that apparently only one process 
on a host can bind to a multicast UDP socket at a time, which means 
only one ZeroConf implementation per machine. Since I don't have easy 
access to any Linux boxes at the moment and my main home PC is a Mac 
G5, that makes development rather difficult.

The Right Solution, as far as I can see, would be to take Apple's 
ZeroConf implementation (Available for Linux under the Apple Public 
Source License), give it a pretty Python wrapper, and somehow integrate 
that with Twisted. That gives your application an extra dependency, but 
as ZeroConf gets more popular, your app becomes *less* likely to break, 
instead of *more*.




From foom at fuhm.net  Fri Mar  4 23:16:38 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Mar 2005 23:16:38 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <cb38b16096c892df193ba30d4519862d@fuhm.net>

Bug summary
______________________
Since 2005-02-26 07:36:08.640000:
  Bugs opened: 12   Bugs closed: 17   Total open bugs: 334 (-5)
   Urgent: 7 (+0)
   Bug: 131 (-5)
   Feature: 129 (+1)
   Wish: 67 (-1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
plugins.tml doesn't work with split up packages  (5 days ago)
        http://twistedmatrix.com/bugs/issue906 opened by exarkun

[CORE] [PATCH] pollreactor fails to cleanup client sockets properly  (5 
days ago)
CLOSED http://twistedmatrix.com/bugs/issue907 opened by spiv

                     ==== Bug ====
[PATCH] fix twisted.words.protocols.jabber.jid to add stringprep  (2 
days ago)
        http://twistedmatrix.com/bugs/issue912 opened by ralphm

[PATCH] rename xish.xpath's intern to internQuery  (yesterday)
        http://twistedmatrix.com/bugs/issue913 opened by ralphm

microdom getElementsByTagName  (4 days ago)
        http://twistedmatrix.com/bugs/issue909 opened by int

[TRIAL] Trial --tbformat=emacs now shows plain-style tracebacks  (3 
months ago)
        http://twistedmatrix.com/bugs/issue783 opened by radix

[CORE] [PATCH] make LoopingCall.stop() stop the loop immediately  (3 
days ago)
        http://twistedmatrix.com/bugs/issue911 opened by zooko

MSN File Transfer  (4 days ago)
        http://twistedmatrix.com/bugs/issue908 opened by cphsu

[CONCH] No ProtocolWrapper defined in twisted/conch/ssh/session.py  (5 
days ago)
        http://twistedmatrix.com/bugs/issue905 opened by spiv

[CONCH] _scanDirectory broken  (5 days ago)
        http://twistedmatrix.com/bugs/issue904 opened by spiv

[TRIAL] Control-C in trial sometimes doesn't stop it.  (9 months ago)
        http://twistedmatrix.com/bugs/issue628 opened by jknight

                     ==== Feature ====
[CORE] [PATCH] weak tasks  (3 days ago)
        http://twistedmatrix.com/bugs/issue910 opened by zooko



Bugs Closed
______________________
                     ==== Urgent ====
[CORE] [PATCH] pollreactor fails to cleanup client sockets properly  (5 
days ago)
        http://twistedmatrix.com/bugs/issue907 opened by spiv, closed by 
spiv

[TRIAL] Trial timeout handling is totally broken, won't accept even the 
default value  (1 month ago)
        http://twistedmatrix.com/bugs/issue866 opened by Tv, closed by 
jknight

                     ==== Bug ====
[XISH] twisted.xish.domish.ExpatElementStream tries to pop empty 
namespace stack  (6 months ago)
        http://twistedmatrix.com/bugs/issue673 opened by horatio, closed 
by ralphm

[XISH] [PATCH] xish.domish chokes on namespaced attributes  (12 months 
ago)
        http://twistedmatrix.com/bugs/issue535 opened by ssweens, closed 
by ralphm

[XISH] [PATCH] Jabber xmlstream parse bug (with patch and unit test)  
(6 months ago)
        http://twistedmatrix.com/bugs/issue701 opened by delx, closed by 
spiv

[PB] datetime support in jelly/unjelly  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue894 opened by kkinder, closed 
by glyph

[TRIAL] Intermittent twisted.trial.test.test_util.TestMktemp failure  
(3 months ago)
        http://twistedmatrix.com/bugs/issue799 opened by exarkun, closed 
by exarkun

[CORE, TRIAL] Undesirable ValueError exception masking by namedAny()  
(2 months ago)
        http://twistedmatrix.com/bugs/issue808 opened by exarkun, closed 
by exarkun

testCyclicAliases in t.mail.test_mail is weird  (2 months ago)
        http://twistedmatrix.com/bugs/issue810 opened by marienz, closed 
by exarkun

[WEBSITE] Website still refers to copyright assignment  (1 week ago)
        http://twistedmatrix.com/bugs/issue903 opened by hypatia, closed 
by hypatia

[TRIAL] [not a bug] trial --until-failure does not stop on cleanup 
errors  (1 week ago)
        http://twistedmatrix.com/bugs/issue901 opened by spiv, closed by 
spiv

[NEWS] [PATCH]twisted.protocols.nntp is broken  (19 months ago)
        http://twistedmatrix.com/bugs/issue65 opened by smurf, closed by 
exarkun

[MAIL] [PATCH] twisted.mail.smtp.SMTP fails on whitespace preceeding a 
client command.  (1 month ago)
        http://twistedmatrix.com/bugs/issue865 opened by dw, closed by 
exarkun

[CORE] socket is not closed when connection failed  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue895 opened by maoy, closed by 
exarkun

manhole tests don't deal well with failure and are cwd-sensitive  (1 
month ago)
        http://twistedmatrix.com/bugs/issue878 opened by jknight, closed 
by exarkun

[TRIAL] "trial --until-failure --debug" totally broken  (2 months ago)
        http://twistedmatrix.com/bugs/issue834 opened by exarkun, closed 
by jknight

                     ==== Wish ====
[NAMES] [PATCH] t.names shouldn't depend on t.flow  (1 week ago)
        http://twistedmatrix.com/bugs/issue902 opened by marienz, closed 
by jknight




From nico at tekNico.net  Sat Mar  5 02:52:09 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 05 Mar 2005 08:52:09 +0100
Subject: [Twisted-Python] Re: Anyone have any code or links to code related
 to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <d0bo5e$an5$1@sea.gmane.org>

> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(
> 
> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.

Itamar ST started an implementation of a multicast DNS server in his sandbox:

http://svn.twistedmatrix.com/cvs/sandbox/itamar/mdns/?root=Twisted

-- 
Nicola Larosa - nico at tekNico.net

Q: I understand that when I browse the web my computer caches the
pages, images and stylesheets automatically so I don't need to manually
'install' multiple PNG images to see a page, but software is different!
A: Why?
 -- From the Zero Install FAQ ( http://www.zero-install.org/faq.html )




From jarrod.roberson at gmail.com  Sat Mar  5 14:33:28 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sat, 5 Mar 2005 14:33:28 -0500
Subject: [Twisted-Python] Re: Anyone have any code or links to code
	related to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <d0bo5e$an5$1@sea.gmane.org>
References: <2389d473050304143116f2f601@mail.gmail.com>
	<d0bo5e$an5$1@sea.gmane.org>
Message-ID: <2389d47305030511336698babc@mail.gmail.com>

thanks for the responses I will post what I come up with back to the list

Here is what I want to do, any feedback (positive and especially
negative ) is welcome.

I want my Twisted server to auto-identify and connect to other
instances on other machines to sync with then for clustering.

I want client processes to auto-idenitfy and connect to my Twisted server.

I was originally thinking of making the ZeroConf server just another
couple of Protocols in the Twisted server, but I am trying to decide
now if embedding ZeroConf into the Twisted server is the right
approach.

I am now thinking that I might should have my servers register
themselves with a standalone ZeroConf  server(s) and de-register them
selves on clean shut down and use a short say 15 min TTL on the DNS
entries.

Any thoughts?



From ken at kenkinder.com  Sat Mar  5 14:57:57 2005
From: ken at kenkinder.com (ken at kenkinder.com)
Date: Sat, 5 Mar 2005 12:57:57 -0700 (MST)
Subject: [Twisted-Python] Re: Anyone have any code or links to code 
	related to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d47305030511336698babc@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
	<d0bo5e$an5$1@sea.gmane.org>
	<2389d47305030511336698babc@mail.gmail.com>
Message-ID: <1473.64.218.218.1.1110052677.squirrel@64.218.218.1>

Heh. We had a similar need for a clustered system although we forewent
auto-discovery for a config file we can copy to each of the servers with
the information on the other nodes on the cluster. If we add or remove a
node from the cluster, you just propagate the config file.

Is there any reason you need something like ZeroConf or a specialized
protocol for this? Can't you just connect via Perspective Broker and
communicate your basic information that way? I'm asking because at some
point, we'll probably want auto-discovery and I'd like to hear what you're
doing.

> thanks for the responses I will post what I come up with back to the list
>
> Here is what I want to do, any feedback (positive and especially
> negative ) is welcome.
>
> I want my Twisted server to auto-identify and connect to other
> instances on other machines to sync with then for clustering.
>
> I want client processes to auto-idenitfy and connect to my Twisted server.
>
> I was originally thinking of making the ZeroConf server just another
> couple of Protocols in the Twisted server, but I am trying to decide
> now if embedding ZeroConf into the Twisted server is the right
> approach.
>
> I am now thinking that I might should have my servers register
> themselves with a standalone ZeroConf  server(s) and de-register them
> selves on clean shut down and use a short say 15 min TTL on the DNS
> entries.
>
> Any thoughts?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From golux at comcast.net  Sat Mar  5 15:16:18 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 05 Mar 2005 15:16:18 -0500
Subject: [Twisted-Python] Re: Anyone have any code or links to code	related
	to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d47305030511336698babc@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>	<d0bo5e$an5$1@sea.gmane.org>
	<2389d47305030511336698babc@mail.gmail.com>
Message-ID: <422A1392.7020105@comcast.net>

jarrod roberson wrote:
> Here is what I want to do, any feedback (positive and especially
> negative ) is welcome.
> 
> I want my Twisted server to auto-identify and connect to other
> instances on other machines to sync with then for clustering.

This is a capability I'm interested in also.

> I was originally thinking of making the ZeroConf server just another
> couple of Protocols in the Twisted server, but I am trying to decide
> now if embedding ZeroConf into the Twisted server is the right
> approach.

Wouldn't it have more the character of a service than a
protocol?  I.e., a service that might have one or more
protocols associated with it, and be configured depending
on the environment and requirements of the application
that wants to use the connection.

ken at kenkinder.com wrote:
> Heh. We had a similar need for a clustered system although we forewent
> auto-discovery for a config file we can copy to each of the servers with
> the information on the other nodes on the cluster. If we add or remove a
> node from the cluster, you just propagate the config file.
> 
> Is there any reason you need something like ZeroConf or a specialized
> protocol for this? Can't you just connect via Perspective Broker and
> communicate your basic information that way? I'm asking because at some
> point, we'll probably want auto-discovery and I'd like to hear what you're
> doing.

Good points.  I guess auto-discovery is the only capability
I need in addition to what's already provided by PB, which
I would expect could manage the configuration of clustering,
etc.  Once autodiscovery was done, the peers could use PB
to work out the configuration details.

Steve



From boomberschloss at yahoo.com  Sun Mar  6 12:48:30 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 6 Mar 2005 09:48:30 -0800 (PST)
Subject: [Twisted-Python] process directory or alike in Twisted?
Message-ID: <20050306174831.93551.qmail@web53105.mail.yahoo.com>

I am thinking about using twisted as the framework of
my distributed application, and I have some questions
about it.

I want the application to be divided into processes,
each dealing with a specific aspect of the
application; some in a central server and some in
arbitrary machines in a local network. I?ll use the
Perspective Broker protocol for communication, but I
want each process to know the addresses of all the
others and be able to communicate with the others
without prior knowledge of their location. How is it
usual to do such a thing? 

I thought of a central server holding the addresses of
processes, such that each process registers its
details at start-up, and gets notified when there are
changes in the list of processes (similarly to the
Pyro name server). To detect the location of the
central server I suppose a broadcast mechanism should
be used, although I don?t know what a broadcast
mechanism is exactly and whether it is supported by
Twisted or not. Is there anything like this already
implemented in Twisted?

Thanks,

Joe.



	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From boomberschloss at yahoo.com  Sun Mar  6 12:49:11 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 6 Mar 2005 09:49:11 -0800 (PST)
Subject: [Twisted-Python] clients of perspective brokers
Message-ID: <20050306174911.69544.qmail@web53106.mail.yahoo.com>

I have a question about clients of perspective
brokers: I want the processes of my application to be
able to connect arbitrarily to other processes in a
local network without assuming their existence or
location in advance. In the Twisted examples and
how-tos, however, the idiom seems to be defining
a-priori the other clients and servers in the network
(usually before calling reactor.run, or as part of an
application?s configuration). My question is, are
there any restrictions on calling reactor.connectTCP
(or similar) arbitrarily during the execution of the
program, is there any cleanup to do when not requiring
the other party anymore, etc.

Also, it is unclear to me how reconnection works for
perspective broker clients. If a connection is dropped
by the server, and then a clients tries to make a
method call on a remote object, will the client
factory try to reconnect before making the request, or
will the request fail, and re-connection be attempted
the next time, etc.?

Thanks,

Joe.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From daverz at gmail.com  Sun Mar  6 20:12:58 2005
From: daverz at gmail.com (Dave Cook)
Date: Sun, 6 Mar 2005 17:12:58 -0800
Subject: [Twisted-Python] clients of perspective brokers
In-Reply-To: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
References: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
Message-ID: <7a59f025050306171278176c64@mail.gmail.com>

On Sun, 6 Mar 2005 09:49:11 -0800 (PST), Joachim Boomberschloss
<boomberschloss at yahoo.com> wrote:

> I have a question about clients of perspective
> brokers: I want the processes of my application to be
> able to connect arbitrarily to other processes in a
> local network without assuming their existence or
> location in advance. 

You might find this thread useful: 

http://twistedmatrix.com/pipermail/twisted-python/2005-February/009579.html

Dave Cook



From Jeff.Silver at edl.uk.eds.com  Mon Mar  7 03:27:56 2005
From: Jeff.Silver at edl.uk.eds.com (Jeff.Silver at edl.uk.eds.com)
Date: Mon, 7 Mar 2005 08:27:56 -0000 
Subject: [Twisted-Python] process directory or alike in Twisted?
Message-ID: <6C5F0F3099DC5B45B87D78EE2A37830D1AC8E4@ukhkm001.edsadewd.edl.uk.eds.com>

> I want the application to be divided into processes,
> each dealing with a specific aspect of the
> application; some in a central server and some in
> arbitrary machines in a local network. I'll use the
> Perspective Broker protocol for communication, but I
> want each process to know the addresses of all the
> others and be able to communicate with the others
> without prior knowledge of their location. How is it
> usual to do such a thing? 

I suggest you look at Zeroconf, and read the current thread:  Anyone have
any code or links to code related to using ZeroConf / Rendezous with
Twisted?

I think that Zeroconf has the sort of capability you're after.

The bad news is that it is not (yet?) in twisted. Hence the thread.

Jeff.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050307/86444ac0/attachment.htm 

From twisted at opti.cgi.net  Mon Mar  7 18:58:02 2005
From: twisted at opti.cgi.net (Dan)
Date: Mon, 07 Mar 2005 17:58:02 -0600
Subject: [Twisted-Python] Daemonize
Message-ID: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>


There are lots of nice examples in the Twisted documentation on how to 
write a server but I can't seem to find anywhere that making it daemonize 
is mentioned.  All the examples hold onto the terminal after reactor.run() 
is called.  If I want a Twisted server to return the terminal and run as a 
daemon how would I accomplish that aside from starting it with nohup?

Thanks!

Dan




From mary-twisted at puzzling.org  Mon Mar  7 19:05:52 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 8 Mar 2005 11:05:52 +1100
Subject: [Twisted-Python] Daemonize
In-Reply-To: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>
References: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>
Message-ID: <20050308000552.GA19611@home.puzzling.org>

On Mon, Mar 07, 2005, Dan wrote:
> 
> There are lots of nice examples in the Twisted documentation on how to 
> write a server but I can't seem to find anywhere that making it daemonize 
> is mentioned.  All the examples hold onto the terminal after reactor.run() 
> is called.  If I want a Twisted server to return the terminal and run as a 
> daemon how would I accomplish that aside from starting it with nohup?

You'd write a .tac file and run it with "twistd -y [tac file]".

The documentation is at
http://twistedmatrix.com/documents/current/howto/application but is
terse and desperately short on examples.

Several of the examples use that setup:

http://twistedmatrix.com/documents/current/examples/chatserver.py
http://twistedmatrix.com/documents/current/examples/emailserver.py

At the end of the tutorial intro, the finger code is converted to a tac
file too:
http://twistedmatrix.com/documents/current/howto/tutorial/intro

The crucial step is creating the object called 'application' at the
global level -- this is what twistd seeks.

-Mary



From db3l at fitlinxx.com  Mon Mar  7 19:37:10 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 07 Mar 2005 19:37:10 -0500
Subject: [Twisted-Python] Re: clients of perspective brokers
References: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
Message-ID: <u3bv72csp.fsf@fitlinxx.com>

Joachim Boomberschloss <boomberschloss at yahoo.com> writes:

> Also, it is unclear to me how reconnection works for
> perspective broker clients. If a connection is dropped
> by the server, and then a clients tries to make a
> method call on a remote object, will the client
> factory try to reconnect before making the request, or
> will the request fail, and re-connection be attempted
> the next time, etc.?

There are no automatic reconnects by default.  Additionally once you
have lost a connection, all existing references held by the client to
objects on the server will be invalid from that point on.

There is a general purpose ReconnectingClientFactory in the
twisted.internet.protocols module, but it only handles making the
basic socket reconnection, and not any higher level re-establishment
of protocol communication.  There was also some work on a more
persistent remote reference scheme (in the sturdy module).

The problem with handling reconnects is that PB object references are
only good for a particular session (since they match up with broker
object dictionaries that are part of the remote protocol instance and
go away when the session drops).  So even if you re-establish the raw
PB connection, none of the object references previously held by the
client will be valid any longer.  Even the sturdy module only seemed
to work for the root object and not other random references held by
the application.  Back when I was looking to solve the same issue, I
didn't really find anything suitable in the twisted code base itself.

So it's mostly up to your application to handle these sorts of
scenarios.  To be honest though, since your application knows the most
about how it is using references and objects, it can often have the
simplest implementation.

For example, in our application we make use of a registry of
components, and when distributing the application, the client starts
with a remote registry (a Referenceable), and then retrieves remote
component references (also Referenceables) for any component they
interact with.  Pretty much everything else is a normal remote copy (a
Copyable rather than Referenceable).  So the registry and components
provided a great control point to handle network outages.  Also, the
components whose references are long lived in the client (and who we
care about maintaining across an outage) are independent of the remote
session - that is they exist independently on the server.  So recovery
from loss of a network connection is simply re-accessing the prior
remote component.  That makes handling such outages in a transparent
manner fairly straight forward since we can use the original
connection information to perform a reconnect without re-involving
high level application code.

We ended up with  three main parts to the recovery system:

* A remote registry wrapper that works just like a local registry but
  automatically wraps references to remote components in a component wrapper.
* A remote component wrapper that handles wrapping a remote reference both
  to control method access (so we can specially handle some methods locally)
  but also to isolate the application from directly holding onto a PB
  reference for the remote component object.
* Our own PBClientFactory subclass that handles connectivity issues, and
  automatically wraps a reference to a remote registry (which is obtained
  through our Root object) in the remote registry wrapper.

In addition, we tie them together with various signals (currently
using the pyDispatcher package).

A client app starts with the client factory, which knows how to
connect, reconnect after a failure (with a prescribed retry timing
mechanism), periodically ping the remote root object for a live
session, and emit signals when the connection goes up or down.  The
application asks the client factory for the remote registry, and gets
back a remote registry wrapper.  Since the wrapper operates as a local
registry, the application code can work locally or remotely.  If the
client factory sees the connection drop, once it reconnects, it emits
a connection signal which includes the new registry wrapper.

The client factory also gives us a good place to perform a series of
steps we need to do with the remote root object in order to get access
to the remote registry, providing for those operations to complete
before giving the registry back to the application either during
initial connection (through a waiting deferred) or on a reconnect (via
the connection signal).

The remote component wrappers (which also include the remote registry
wrapper) handle the low level potential for failures.  The wrapper
handles failures during any PB request (both DeadReferenceError and
PBConnectionLost) and in addition to passing up the error, it emits
its own signal for a failed request.  The client factory listens for
such signals, which it uses to initiate an immediate ping test - which
in turn can lead to notifying the entire system that the connection is
down.

We did patch our Twisted so the DeadReferenceError was returned as a
deferred rather than raised inline.  But once everything centralized
around the remote wrappers, technically that became unnecessary
because that's the only place (aside from the client factory) that
issues the callRemote call, so it's not that hard to handle both the
local exception or the deferred error.

In the other direction, the wrappers all listen for the client
factory's connected signal, and upon receipt, they use the supplied
remote registry to re-query the component they wrap (information on
which they saved when created) in order to get a new remote reference.
Because all of the higher level application code is holding a
reference (Python-wise) to the wrapper object and not the PB
reference, we can adjust to a new reference inside the wrapper without
anything in the application being the wiser or needing to change.

Having the network connect/disconnect signals from the client factory
also permits any other part of the application to perform certain
operations during an outage (so sometimes at our top level UI we'll
put up a "temporary outage" message during downtime).

While this is fairly specific to our environment, it lets us take an
application that is running locally, and with a single change to get
its registry from our client factory instead of locally, everything
works remotely, including automatic reconnects and re-establishment of
all remote object references.  Hopefully detailing some of the steps
might help you envision how to do something similar for your
application.

-- David




From qhfgva at gmail.com  Tue Mar  8 00:21:14 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Mon, 7 Mar 2005 22:21:14 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
Message-ID: <b75caff405030721216aebf5a@mail.gmail.com>

So I've made my first twisted application, an xmlrpc server, using
authentication and ssl.  Kinds scary how easy it was actually.  I now
need to add some sort of queuing or scheduling capabilities.  Don't
know if this is something that twisted knows how to do natively or if
it's something I need to grow from scratch.  My googling hasn't turned
up anything that seems to fit.

Basically the idea is that the server will receive a variety of
requests to perform tasks.  Some of these will be very quick to do and
some will take several minutes (perhaps up to an hour).  Some tasks
must run alone and some can run in parallel with others.  Even just a
simple FIFO type queuing would be fine to start.

Any pointers on how to proceed?

Thanks.

-- 
Dustin Lee
qhfgva=rot13(dustin)



From andrew-twisted at puzzling.org  Tue Mar  8 00:59:11 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 16:59:11 +1100
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <b75caff405030721216aebf5a@mail.gmail.com>
References: <b75caff405030721216aebf5a@mail.gmail.com>
Message-ID: <20050308055911.GM7812@trogdor.home.puzzling.org>

On Mon, Mar 07, 2005 at 10:21:14PM -0700, Dustin Lee wrote:
[...]
> 
> Basically the idea is that the server will receive a variety of
> requests to perform tasks.  Some of these will be very quick to do and
> some will take several minutes (perhaps up to an hour).  Some tasks
> must run alone and some can run in parallel with others.  Even just a
> simple FIFO type queuing would be fine to start.
> 
> Any pointers on how to proceed?

The DeferredQueue class in SVN might be a good starting point:

    http://svn.twistedmatrix.com/cvs/trunk/twisted/internet/defer.py?view=auto&rev=12970&root=Twisted

-Andrew.




From michele.petrazzo at unipex.it  Tue Mar  8 04:48:38 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Tue, 08 Mar 2005 10:48:38 +0100
Subject: [Twisted-Python] wxreactor and dialog on win xp problem
Message-ID: <422D74F6.5090005@unipex.it>

I have a problem with wxreactor on win xp.

I insert a ShowModal() of a TextEntryDialog after an event of a button
in a frame.

The ShowModal function of the dialog, don't return me the control after
the dialog has close, but only when the global application has closed.
I try this with a bit of print.

Show the example for tests.

On my linux-box, with the same wxpython and twisted version, all work
well.

python 2.3.4
wx 2.5.3.1
twisted 1.3.0

Thanks,
Michele
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wx_test.py
Type: text/x-python
Size: 1938 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050308/09128227/attachment.py 

From Henning.Ramm at mediapro-gmbh.de  Tue Mar  8 05:27:35 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 8 Mar 2005 11:27:35 +0100
Subject: [Twisted-Python] watch a directory (Win32)
Message-ID: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>

Hello twisted folks!

Last week I found this great framework that seems to do most of what I need. But it's a bit hard to get into, as you know...

I'm on WinXP with Python 2.3. I need to watch a directory for new files and found this recipe using Win32 events:
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/156178

I'd like to use a twisted reactor instead of that while loop, but don't understand how to handle those Win32 notifies using deferreds.

Or perhaps there is a better twisted solution, that I didn't find in the docs?

I'd prefer a portable way (my script could also run on AIX or MacOS X), but as far as I found, it's heavily system dependent (Win32: win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From andrew-twisted at puzzling.org  Tue Mar  8 06:27:04 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 22:27:04 +1100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
Message-ID: <20050308112704.GO7812@trogdor.home.puzzling.org>

On Tue, Mar 08, 2005 at 11:27:35AM +0100, Henning.Ramm at mediapro-gmbh.de wrote:
[...]
> 
> I'd prefer a portable way (my script could also run on AIX or MacOS X),
> but as far as I found, it's heavily system dependent (Win32:
> win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)

I haven't tried using it with Twisted (yet), but something like the python
bindings for gamin would probably be a good start.  It can use the new
inotify stuff in Linux, or do simple polling.
    http://www.gnome.org/~veillard/gamin/index.html

-Andrew.




From andrew-twisted at puzzling.org  Tue Mar  8 06:30:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 22:30:24 +1100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <20050308112704.GO7812@trogdor.home.puzzling.org>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
	<20050308112704.GO7812@trogdor.home.puzzling.org>
Message-ID: <20050308113024.GP7812@trogdor.home.puzzling.org>

On Tue, Mar 08, 2005 at 10:27:04PM +1100, Andrew Bennetts wrote:
> On Tue, Mar 08, 2005 at 11:27:35AM +0100, Henning.Ramm at mediapro-gmbh.de wrote:
> [...]
> > 
> > I'd prefer a portable way (my script could also run on AIX or MacOS X),
> > but as far as I found, it's heavily system dependent (Win32:
> > win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)
> 
> I haven't tried using it with Twisted (yet), but something like the python
> bindings for gamin would probably be a good start.  It can use the new
> inotify stuff in Linux, or do simple polling.
>     http://www.gnome.org/~veillard/gamin/index.html

...although I suspect it might not work on win32 :/

-Andrew.






From digi at treepy.com  Tue Mar  8 08:18:21 2005
From: digi at treepy.com (Patrick Lauber)
Date: Tue, 08 Mar 2005 14:18:21 +0100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
Message-ID: <422DA61D.8030303@treepy.com>

just add something like this in your pathwather.py:

def waiting():
  try:
    old_path_contents = os.listdir (path_to_watch)
    result = win32event.WaitForSingleObject (change_handle, 500)

    #
    # If the WaitFor... returned because of a notification (as
    #  opposed to timing out or some error) then look for the
    #  changes in the directory contents.
    #
    if result == win32con.WAIT_OBJECT_0:
      new_path_contents = os.listdir (path_to_watch)
      files_added = [f for f in new_path_contents if not f in 
old_path_contents]
      files_deleted = [f for f in old_path_contents if not f in 
new_path_contents]

      if files_added:
        print
        print time.asctime ()
        print "<Added file=\""+ files_added[0]+"\"/>"
        return "<Added file=\""+ files_added[0]+"\"/>"
      if files_deleted:
        print "<Deleted file=\""+files_deleted[0]+"\"/>"
        return "<Deleted file=\""+files_deleted[0]+"/\">"
       

      win32file.FindNextChangeNotification (change_handle)
  finally:
    pass
    #win32file.FindCloseChangeNotification (change_handle)

and call it with reactor.callLater(0,someFunctionThatCallsWaiting)   
regualary

cheers p@




From Henning.Ramm at mediapro-gmbh.de  Tue Mar  8 08:40:29 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 8 Mar 2005 14:40:29 +0100
Subject: [Twisted-Python] watch a directory (Win32)
Message-ID: <F92274058556DE42B94B148EEFB9183949E63F@exchange-03.suedkurier.de>

>... and call it with reactor.callLater(0,someFunctionThatCallsWaiting)   
>regularily

Oh, sure, thanks. I just didn't understand how stupid and non-magic these Win32 functions are.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From smilner at trinityz.com  Tue Mar  8 08:42:56 2005
From: smilner at trinityz.com (Steve Milner)
Date: Tue, 08 Mar 2005 08:42:56 -0500
Subject: [Twisted-Python] Help With Twisted as a Client (newbie warning)
In-Reply-To: <1108666158.1129.61.camel@sheriffpony>
References: <4214C58D.6030005@trinityz.com>
	<1108666158.1129.61.camel@sheriffpony>
Message-ID: <422DABE0.4020604@trinityz.com>

Hello List,

I'm still stuck at mainly the same point. I've noticed that inside the 
class itself I can call transport.write and it writes to the server, but 
if I try to access it outside the class (even through a function) it 
gives an attribute error (AttributeError: 'NoneType' object has no 
attribute 'write'). I'm a bit lost. All help is much appreciated.

---
factory = CUClientFactory()

factory.clients = []
sslFactory = ClientContextFactory()
factory.protocol = xmlclient
client = xmlclient()
application = service.Application(client)
reactor.connectSSL("server", 1026, factory, sslFactory)

client.transport.write('ya')

reactor.run()
----

Itamar Shtull-Trauring wrote:

>On Thu, 2005-02-17 at 11:25 -0500, Steve Milner wrote:
>
>  
>
>>factory.clients = []
>>sslFactory = ClientContextFactory()
>>application = service.Application("xmlclient")
>>reactor.connectSSL("__example__.com", 1026, factory, sslFactory)
>></snip>
>>
>>Is there a way I can access xmlxlient inside application?
>>    
>>
>
>The application object is not used for that (and certainly can't be used
>if it doesn't have a reference to the factory, it doesn't magically get
>one). Hand a reference to the factory to whichever objects wishes to
>control the instance
>  
>



From anthony at interlink.com.au  Tue Mar  8 09:29:48 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Wed, 9 Mar 2005 01:29:48 +1100
Subject: [Twisted-Python] wxreactor and dialog on win xp problem
In-Reply-To: <422D74F6.5090005@unipex.it>
References: <422D74F6.5090005@unipex.it>
Message-ID: <200503090129.48921.anthony@interlink.com.au>

On Tuesday 08 March 2005 20:48, Michele Petrazzo wrote:
> I have a problem with wxreactor on win xp.
>
> I insert a ShowModal() of a TextEntryDialog after an event of a button
> in a frame.

wx and Twisted cannot be made to play together nicely - both wxreactor
and wxsupport have issues. In one of them, modals and popups cause
the reactor to block, in the other, you can't get accurate callLater (wx
guarantees "no worse than 1s resolution"). You need to run wx and 
twisted in separate threads - wx in the main, twisted in the child thread.

Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From itamar at itamarst.org  Tue Mar  8 10:45:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Mar 2005 10:45:21 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of
	BlockingResolver by default - the thread import issue is moot,
	PyOpenSSL imports thread unconditionally.
In-Reply-To: <E1D8XJt-0002Bg-00@wolfwood>
References: <E1D8XJt-0002Bg-00@wolfwood>
Message-ID: <1110296721.28532.55.camel@sheriffpony>

On Mon, 2005-03-07 at 22:31 -0700, Jp Calderone wrote:

> Use ThreadedResolver instead of BlockingResolver by default - the thread import issue is moot, PyOpenSSL imports thread unconditionally.

Not true. Some BSDs don't do threading in Python, and we need to support
them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
does the import unconditionally is a bug.




From exarkun at divmod.com  Tue Mar  8 14:18:35 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 08 Mar 2005 19:18:35 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of
	BlockingResolver by default - the thread import issue is moot,
	PyOpenSSL imports thread unconditionally.
In-Reply-To: <1110296721.28532.55.camel@sheriffpony>
Message-ID: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>

On Tue, 08 Mar 2005 10:45:21 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2005-03-07 at 22:31 -0700, Jp Calderone wrote:
> 
> > Use ThreadedResolver instead of BlockingResolver by default - the thread import issue is moot, PyOpenSSL imports thread unconditionally.
> 
> Not true. Some BSDs don't do threading in Python, and we need to support
> them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
> does the import unconditionally is a bug.
> 

  I don't have access to a platform without threading support.  There isn't even a buildslave running on one.  If someone sets that up, I'll fix failures it reports.

  Jp



From ww at groovy.net  Tue Mar  8 14:52:28 2005
From: ww at groovy.net (William Waites)
Date: Tue, 8 Mar 2005 14:52:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the
	thread import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
References: <1110296721.28532.55.camel@sheriffpony>
	<20050308191835.2951.921202377.divmod.quotient.24102@ohm>
Message-ID: <20050308195228.GF12950@groovy.net>

On Tue, Mar 08, 2005 at 07:18:35PM +0000, Jp Calderone wrote:
> On Tue, 08 Mar 2005 10:45:21 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > 
> > Not true. Some BSDs don't do threading in Python, and we need to support
> > them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
> > does the import unconditionally is a bug.
> > 
> 
>   I don't have access to a platform without threading support. 
> There isn't even a buildslave running on one.  If someone sets
> that up, I'll fix failures it reports.

NetBSD earlier than (and including) 1.6.2 lacked threading
support (except for the pth userspace cooperative threading)

Unfortunately all of my NetBSD boxes have are now running
2.0/2.0.1/-current, so I don't have one you can use to build.

-w



From maoy at cis.upenn.edu  Tue Mar  8 15:00:50 2005
From: maoy at cis.upenn.edu (Yun Mao)
Date: Tue, 8 Mar 2005 15:00:50 -0500 (EST)
Subject: [Twisted-Python] setTimeout in Deferred
Message-ID: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>

This is the doc of setTimeout:

         """Set a timeout function to be triggered if I am not called.

         @param seconds: How long to wait (from now) before firing the
         timeoutFunc.

         @param timeoutFunc: will receive the Deferred and *args, **kw as 
its
         arguments.  The default timeoutFunc will call the errback with a
         L{TimeoutError}.

         DON'T USE THIS! It's a bad idea! Use a function called by 
reactor.callLater instead
         to accomplish the same thing!

         YOU HAVE BEEN WARNED!
         """

Any reason why not? It seems to me that setTimeout just calls 
reactor.callLater()

Yun




From itamar at itamarst.org  Tue Mar  8 15:06:49 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Mar 2005 15:06:49 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the thread
	import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
References: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
Message-ID: <1110312409.28538.68.camel@sheriffpony>

On Tue, 2005-03-08 at 19:18 +0000, Jp Calderone wrote:

>   I don't have access to a platform without threading support.  There
> isn't even a buildslave running on one. 

That doesn't mean you ought to *break* it. Can't you put the
installation of ThreadedResolver in as a try/except over import thread?
Or can we have twisted.python.runtime.threadingSupported()? or
something. But we oughtn't break support for non-threaded platforms when
it's easy enough to test for it (sys.module["thread"] = None and then
run code as usual).





From radeex at gmail.com  Tue Mar  8 17:35:54 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 09:35:54 +1100
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
Message-ID: <60ed19d405030814357c08ccff@mail.gmail.com>

On Tue, 8 Mar 2005 15:00:50 -0500 (EST), Yun Mao <maoy at cis.upenn.edu> wrote:
> This is the doc of setTimeout:
...
> Any reason why not? It seems to me that setTimeout just calls
> reactor.callLater()

It's a bit more complex than that, and its input and behavior makes
some wrong assumptions and has some bad implications. It is the
end-user of a Deferred who usually wants to specify the timeout before
cancelling the operation. However, it is the creator of the Deferred
who needs to specify _how_ cancelling an operation works -- it's
different for every protocol / kind of operation. Putting the timeout
and the canceller next to each other is a bad idea. In practice, using
setTimeout leads to a bunch of stupid AlreadyCalled errors when the
end-user of a Deferred specifies a timeout and the framework code
doesn't know about it.

The best way to offer timeout support in your code is to modify your
API. If you have a function like getPage which connects to an HTTP
server and downloads a resource, that getPage function should take a
timeout parameter. If set, the HTTP-downloader should disconnect from
the server when the timeout is reached, and simply send an errback to
the deferred.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From paul at ref.nmedia.net  Tue Mar  8 20:43:46 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Tue, 8 Mar 2005 17:43:46 -0800
Subject: [Twisted-Python] Twisted Allen-Bradley PLC Protocol
In-Reply-To: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
References: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
Message-ID: <20050309014346.GA5267@ref.nmedia.net>

I've successfully gotten twisted to talk to Allen Bradley PLC 5's using
Ron Gage's "ABEL" library as a template. Needless to say, the twisted way
is cleaner and easier to maintain (in my opinion at least).

However, there's a slight twist to the code and I'm trying to think if there's
a better way, and the protocol is similar to so many other things (SSL comes
to mind).

To communicate with AB PLC's, first you initiate a TCP/IP connection. This
is text book twisted. Second, you initiate communication using a "link layer"
protocol. Once that is established, THEN communication progresses using yet
another protocol layer ("PCCC" or "DF-1" or "CSP" depending on what document
you are reading).

Right now, I simply wrote my "connectionMade" function set self.attached=0 and
then initiate a "send connect command" function. The "received connection"
function sets self.attached=1. All other commands simply to a
reactor.callLater(1,self.func) and float around in the reactor buffer until
self.attach==1 returns with good news.

It seems to me that what we have here is really a protocol stack, similar in
nature to the "LineReceiver" type protocol or perhaps it should be set up
as an adapter (component architecture). Then in this case, the packet/protocol
gets passed up through the layers and the "link layer" occupies the correct
status of being a lower level layer. Or else to support say serial
communication on an RS-232 or RS-485 network later, it could be done as a
component arrangement.

So, does this make any sense? What is the "design pattern" in this case in
twisted?



From glyph at divmod.com  Tue Mar  8 20:58:57 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 08 Mar 2005 20:58:57 -0500
Subject: [Twisted-Python] Twisted Allen-Bradley PLC Protocol
In-Reply-To: <20050309014346.GA5267@ref.nmedia.net>
References: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
	<20050309014346.GA5267@ref.nmedia.net>
Message-ID: <422E5861.8010803@divmod.com>

Paul Campbell wrote:

> So, does this make any sense? What is the "design pattern" in this case in
> twisted?

It depends: Twisted really ought to provide some layer-factoring code in 
the core, but it doesn't, so to some extent you're on your own.

However, if there is no official "design pattern", there are certain 
trends which have been repeating themselves.  Twisted's 
twisted.application.strports and twisted.spread.pb, as well as Divmod's 
mantissa.q2q, seem to all be taking the approach of: build one, 
high-level API that allows you to do a complete end-to-end connection 
conveniently with one line of code, and provide at least some basis for 
abstracting the components of that line so that they can be plugged in.

PB's method is "login", strports has 'service' and 'listen', and Q2Q has 
service.connectQ2Q.



From exarkun at divmod.com  Tue Mar  8 20:58:34 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 01:58:34 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the thread
	import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <1110312409.28538.68.camel@sheriffpony>
Message-ID: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>

On Tue, 08 Mar 2005 15:06:49 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2005-03-08 at 19:18 +0000, Jp Calderone wrote:
> 
> >   I don't have access to a platform without threading support.  There
> > isn't even a buildslave running on one. 
> 
> That doesn't mean you ought to *break* it. Can't you put the
> installation of ThreadedResolver in as a try/except over import thread?
> Or can we have twisted.python.runtime.threadingSupported()? or
> something. But we oughtn't break support for non-threaded platforms when
> it's easy enough to test for it (sys.module["thread"] = None and then
> run code as usual).
> 

  Yes.  There are lots of ways it could work.  How can I implement any of them, though, if I can't run a unit test and have it pass?

  I could probably figure out a way to get it working without a buildslave, but this goes to a larger issue.  I'm not going to waste my time trying to support a feature that we think we would like to support.  Either we want to support it, in which case we need to test it, or we don't.

  Anyway, I've had an idea while reading the posts in this thread.  Python can be compiled without thread support intentionally.

  Anyone want to volunteer a reliable host on which to run such a slave?

  Jp


> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From glyph at divmod.com  Tue Mar  8 21:08:09 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 08 Mar 2005 21:08:09 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 -
	Use	ThreadedResolver
	instead of BlockingResolver by default - the thread	import issue is
	moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>
References: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>
Message-ID: <422E5A89.3030804@divmod.com>

Jp Calderone wrote:

>   Anyone want to volunteer a reliable host on which to run such a slave?

I actually have a few hosts hanging around here that I could put online 
(in particular, I have a mac that isn't doing anything, and the OS-X 
buildslave is offline) but figuring out how to set up a buildbot got me 
stuck last time.

Is there any updated documentation of this procedure?



From gmcdonald at infocomp.com  Tue Mar  8 23:06:50 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 15:06:50 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CCB@XCHANGE>

Hi All,

I am translating a twisted UDP implementation to a TCP implementation and i
have come across some unexpected errors related to the amount of data
written to a TCP transport. When a large amount of data is written to a TCP
connection (approx. 9KB) the connection is dropped and transmission is
unsuccessful. Between about 4KB-9KB (approx.) the connection is not dropped
but the transmission is incomplete as the unpickling raises a ValueError
(insecure pickle string). Under 4KB transmission is faultless. Is this a
known limitation? I was aware of the 8KB of UDP packets but assumed that
there were no such limitations on TCP connections. Can someone please
enlighten me?

Regards,

Grant McDonald

PS. these are very approximate sizes - if need be i can narrow them down
some more.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/e5498da2/attachment.htm 

From exarkun at divmod.com  Tue Mar  8 23:16:06 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 04:16:06 GMT
Subject: [Twisted-Python] TCP Packet Size Considerations
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CCB@XCHANGE>
Message-ID: <20050309041606.2951.31537748.divmod.quotient.24769@ohm>

On Wed, 9 Mar 2005 15:06:50 +1100, Grant McDonald <gmcdonald at infocomp.com> wrote:
>Hi All,
> 
> I am translating a twisted UDP implementation to a TCP implementation and i
> have come across some unexpected errors related to the amount of data
> written to a TCP transport. When a large amount of data is written to a TCP
> connection (approx. 9KB) the connection is dropped and transmission is
> unsuccessful. Between about 4KB-9KB (approx.) the connection is not dropped
> but the transmission is incomplete as the unpickling raises a ValueError
> (insecure pickle string). Under 4KB transmission is faultless. Is this a
> known limitation? I was aware of the 8KB of UDP packets but assumed that
> there were no such limitations on TCP connections. Can someone please
> enlighten me?

  There are no such known limits.  I might even go as far to say that there are no such limits, if I were feeling daring. :)  Do you have a short program which demonstrates this behavior that you can share?  Perhaps after looking at that someone can suggest the cause of the disconnects.

  Jp



From gmcdonald at infocomp.com  Wed Mar  9 00:10:21 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 16:10:21 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>

JP wrote:

> There are no such known limits.  I might even go as far to say that there
> are no such limits, if I were feeling daring. :)  Do you have a short
> program which demonstrates this behavior that you can share?  
> Perhaps after looking at that someone can suggest the cause of the
disconnects.

After looking into it some more myself i realised an uncaught exception was
dropping the connection but the after cutting my test code back to minimal
functionality the inconsistency with received data was still there. The last
4KB of the data was received and the first 14KB discarded somewhere!

I have created a minimal example from my initial test code. Start the
simpleserver with twistd.py -y simpleserver.py and just run the
simpleclient.py the builder.dat file is just a nonsense file that is about
18KB in size. Testing on my machine produced a received.dat file which was
4KB in size. I am currently using Python 2.3.3 and Twisted 1.3.0. The code
is as follows (and is also attached for convenient running):

### ------------ simpleclient.py ---------------------------------

from twisted.internet.protocol import Protocol
import twisted.internet.error
from simpleprotos import SimpleClientFactory
factory = SimpleClientFactory()

# open a large nonsense file to send (18KB)
f = file('builder.dat')
data = f.read()
print len(data)
f.close()

from twisted.internet import reactor
reactor.connectTCP('127.0.0.1', 10000, factory)
reactor.callLater(1.0, factory.sendMessage, data)
reactor.run()

### ------------- end ---------------------------------------------

### ------------ simpleserver.py ----------------------------------

from twisted.application import internet # services that run TCP/SSL/etc.
from twisted.application import service
from simpleprotos import ServerDataConnection, SimpleFactory

def makeService():
    factory = SimpleFactory() # here we create a ConnectionManager
    return internet.TCPServer(10000, factory)

application = service.Application("Connection Manager")
sc = service.IServiceCollection(application)
sc.addService(makeService())

### ------------- end ---------------------------------------------

### ------------ simpleprotos.py ----------------------------------

from twisted.internet.protocol import ClientFactory, Factory, Protocol

class SimpleClientFactory(ClientFactory):
    def buildProtocol(self, addr):
        self.p = ClientDataConnection()
        self.p.factory = self
        return self.p
    
    def sendMessage(self, data):
        if hasattr(self, 'p'):
            self.p.sendData(data)

class SimpleFactory(Factory):
    def buildProtocol(self, addr):
        self.p = ServerDataConnection()
        self.p.factory = self
        return self.p

class ServerDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
    
    def dataReceived(self, data):
        f = file('received.dat', 'w')
        f.write(data)
        f.close()


class ClientDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
    
    def sendData(self, data):
        self.transport.write(data)

### ------------- end ---------------------------------------------

Regards,

Grant McDonald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment.htm 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleserver.py
Type: application/octet-stream
Size: 438 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleprotos.py
Type: application/octet-stream
Size: 910 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleclient.py
Type: application/octet-stream
Size: 417 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: builder.dat
Type: application/octet-stream
Size: 16837 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0003.obj 

From gmcdonald at infocomp.com  Wed Mar  9 00:56:19 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 16:56:19 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>

After adding some code to report the transmission size i can confirm that
16837 bytes are sent and 8077 bytes are received via the previous code.

Regards,

Grant
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/9beeb390/attachment.htm 

From gmcdonald at infocomp.com  Wed Mar  9 01:05:20 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 17:05:20 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>

Now i do feel stupid! The documentation doesn't mention anything about
sending multiple packets..... how can i tell if a packet is part of a
multiple packet set?
After looking at the output more carefully i realised that it was sending a
packet the size of 8760 and 8077 which together total 16837.  Where is the
information to say it is a split transmission?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Grant McDonald
Sent: 09 March 2005 16:56
To: 'twisted-python at twistedmatrix.com'
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info



After adding some code to report the transmission size i can confirm that
16837 bytes are sent and 8077 bytes are received via the previous code.

Regards, 

Grant 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050309/438ce645/attachment.htm 

From andrew-twisted at puzzling.org  Wed Mar  9 01:06:47 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 9 Mar 2005 17:06:47 +1100
Subject: [Twisted-Python] TCP Packet Size Considerations
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>
	<61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>
	<61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>
Message-ID: <20050309060647.GA27280@trogdor.home.puzzling.org>

On Wed, Mar 09, 2005 at 04:10:21PM +1100, Grant McDonald wrote:
[...]
> 
> class ServerDataConnection(Protocol):
>     def closeConnection(self):
>         self.transport.loseConnection()
>    
>     def dataReceived(self, data):
>         f = file('received.dat', 'w')
>         f.write(data)
>         f.close()
[...]

On Wed, Mar 09, 2005 at 04:56:19PM +1100, Grant McDonald wrote:
> After adding some code to report the transmission size i can confirm that 16837
> bytes are sent and 8077 bytes are received via the previous code.

This is because while TCP is a byte-stream, the data can be delivered in
arbitrarily small pieces, depending on things like the MTU.  Your
ServerDataConnection is buggy, in that it only keeps the most recent chunk
received, rather than the full stream.  A better implementation would be:

class ServerDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
 
    def connectionMade(self):
        self.f = file('received.dat', 'w')
   
    def dataReceived(self, data):
        self.f.write(data)
 
    def connectionLost(self):
        f.close()

See also the "Protocol Design" articles linked from http://itamarst.org/.

-Andrew.




From tv at twistedmatrix.com  Wed Mar  9 02:17:45 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 09 Mar 2005 09:17:45 +0200
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>
Message-ID: <422EA319.7070102@twistedmatrix.com>

Grant McDonald wrote:
> Now i do feel stupid! The documentation doesn't mention anything about
> sending multiple packets..... how can i tell if a packet is part of a
> multiple packet set?
> After looking at the output more carefully i realised that it was sending a
> packet the size of 8760 and 8077 which together total 16837.  Where is the
> information to say it is a split transmission?

You don't, and there is no such information. TCP is a stream of bytes.
If you want "packets", you need to provide them on top of the stream.
grep for twisted.protocols.basic.NetstringReceiver is one such
implementation.



From andrea at cpushare.com  Wed Mar  9 03:27:21 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 9 Mar 2005 09:27:21 +0100
Subject: [Twisted-Python] streaming producer
In-Reply-To: <20050303161452.GL8880@opteron.random>
References: <20050303161452.GL8880@opteron.random>
Message-ID: <20050309082721.GE26348@opteron.random>

It wasn't difficult to throttle the process stdout after
understanding the registerProducer mechanism. This patch did
the trick just fine. I didn't find docs covering the details,
but the transport code was very readable.

I should be ok with the streaming version since I don't need
resumeProducing to be recalled every time the socket returns writeable
(I only need resumeProducing to be recalled if the socket returns
writeable and the process-protocol is in paused state).

Index: cpushare/seccomp.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/seccomp.py,v
retrieving revision 1.11
diff -u -p -r1.11 seccomp.py
--- cpushare/seccomp.py	3 Mar 2005 05:56:50 -0000	1.11
+++ cpushare/seccomp.py	9 Mar 2005 07:38:01 -0000
@@ -29,6 +29,8 @@ class seccomp_protocol_class(protocol.Pr
 		self.d = deferred
 		self.outReceived = self.enable_seccomp_mode
 	def connectionMade(self):
+		self.seccomp.cpushare_protocol.seccomp_protocols.append(self)
+		self.seccomp.cpushare_protocol.transport.registerProducer(self, 1)
 		self.transport.closeChildFD(2) # close stderr right away
 		self.transport.writeToChild(0, self.seccomp.header + self.seccomp.text_data)
 	def enable_seccomp_mode(self, data):
@@ -50,12 +52,14 @@ class seccomp_protocol_class(protocol.Pr
 		self.outReceived = self.send_to_server
 		self.transport.writeToChild(0, MAGIC_GOT_SECCOMP)
 	def send_to_server(self, data):
-		self.seccomp.state_machine.protocol.sendString(PROTO_SECCOMP_FORWARD + data)
+		self.seccomp.cpushare_protocol.sendString(PROTO_SECCOMP_FORWARD + data)
 	def recv_from_server(self, data):
 		self.transport.writeToChild(0, data)
 	def errReceived(self, data):
 		raise "shouldn't happen"
 	def processEnded(self, status):
+		self.seccomp.cpushare_protocol.seccomp_protocols.remove(self)
+		self.seccomp.cpushare_protocol.transport.unregisterProducer()
 		if status.value.exitCode:
 			if status.value.exitCode == 4:
 				print 'Failure in setting the stack size to %d bytes.' % self.seccomp.stack
@@ -70,11 +74,19 @@ class seccomp_protocol_class(protocol.Pr
 		if self.transport.pid is not None:
 			os.kill(self.transport.pid, signal.SIGKILL)
 
+	def resumeProducing(self):
+		self.transport.resumeProducing()
+	def pauseProducing(self):
+		self.transport.pauseProducing()
+	def stopProducing(self):
+		self.transport.loseConnection()
+
 class seccomp_class(object):
 	header_fmt = 'iiiIIiiI'
 
 	def __init__(self, header, state_machine):
 		self.state_machine = state_machine
+		self.cpushare_protocol = state_machine.protocol
 
 		size = struct.calcsize(self.header_fmt)
 		assert size + struct.calcsize('I') + 16 == len(header), "corrupted header"

> I will probably make the max buffer size configurable dynamically and

It should be enough to override the bufferSize in the cpushare_protocol
implementation if I want to enlarge the buffer (default is 64k).



From radeex at gmail.com  Wed Mar  9 04:34:35 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 20:34:35 +1100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
Message-ID: <60ed19d4050309013462785b23@mail.gmail.com>

So I did a Twisted 2.0 prerelease.

  http://twistedmatrix.com/users/radix/2.0/

There is now a TwistedSumo tarball, which contains Twisted and all of
its subprojects as well as Zope Interface. Thanks to James Knight for
providing the setup.py for this.

Despite the crappy web presence, this is a real 2.0 prerelease. I will
try to get this published to the web site by this weekend.  Please
download anything relevant to you and give it a try, and be sure to
post your experience to this thread even if it went smoothly.

Differences between this prerelease and the pre-prerelease:
 * It no longer includes *.pyc or *.bak files
 * It includes loreified documentation
 * All version numbers should be correct (according to distutils,
package.__version__, and README files)
 * It includes the LICENSE file
 * Probably other stuff

Have fun,

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From radeex at gmail.com  Wed Mar  9 04:54:25 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 20:54:25 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
Message-ID: <60ed19d405030901547b5d4bd6@mail.gmail.com>

I plan on releasing 2.0 *for real* early next week.

First, please take a look at the bug tracker. There are a few urgent
issues left which I'm interested in, as well as a bunch of
trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
on doing some of that this weekend.

I'm also planning on getting the totally reworked project-oriented
website (thanks much to Mary Gardiner) polished off and deployed some
time this weekend.

I need help on doing the release notes for 2.0. Traditionally this has
been Itamar's job, but James also recently volunteered. It'd be really
awesome if someone could do this for me so I don't have to think about
it. :-)

Project Maintainers!

Twisted: Glyph, Itamar, Jp
Conch: Paul
Flow: Clark
Lore: Andrew, Moshe
Mail, Names, News: Jp
Pair: Tommi
Runner: Andrew
Web: Donovan
Words: Jp, Glyph, ...?
Xish: Uh, what's that guy's name? Dave or something? I don't think
he's been very involved.

Please update your README files and tell me what version number you
want your project to have. Currently I'm assuming everything is at
0.1.0 except for conch and web which are both at 0.5.0. Also take a
look at your setup.py file and any other topfiles for your project to
make sure they're what you want (In case you've been under a rock,
those are located in Twisted/twisted/<yourproj>/topfiles/ in the
repository).

Packagers!

Get cracking.


If I think of anything else, feel safe knowing I will bug you about it.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From mary-twisted at puzzling.org  Wed Mar  9 05:18:22 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 9 Mar 2005 21:18:22 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <20050309101822.GC10163@sourdust.home.puzzling.org>

On Wed, Mar 09, 2005, Christopher Armstrong wrote:
> First, please take a look at the bug tracker. There are a few urgent
> issues left which I'm interested in, as well as a bunch of
> trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
> on doing some of that this weekend.

I don't know whether 670 is one of the ones you're going to want done
but I'd appreciate some help from someone if it is. Essentially, someone
needs to answer the question: "Are the pid and status attributes of
Process transports meant to be public?" as per the bug. It's not a
decision I feel at all qualified to make.

Further comment welcome at: http://twistedmatrix.com/bugs/issue670

-Mary



From Henning.Ramm at mediapro-gmbh.de  Wed Mar  9 07:22:21 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 9 Mar 2005 13:22:21 +0100
Subject: [Twisted-Python] Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>

Is there already an integration of Python 2.3 standard logging module into twisted?
Or can I just use it without any asynchronous wrapper?

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From pf_moore at yahoo.co.uk  Wed Mar  9 07:56:41 2005
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Wed, 9 Mar 2005 12:56:41 +0000 (UTC)
Subject: [Twisted-Python] Re: Twisted 2.0 prerelease (close!!)
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <loom.20050309T135046-717@post.gmane.org>

Christopher Armstrong <radeex <at> gmail.com> writes:
> 
> So I did a Twisted 2.0 prerelease.
> 
>   http://twistedmatrix.com/users/radix/2.0/
> 
> There is now a TwistedSumo tarball, which contains Twisted and all of
> its subprojects as well as Zope Interface. Thanks to James Knight for
> providing the setup.py for this.

I thought I'd have a try at building this (under Windows, using the mingw
compiler). Some issues:

1. (In the sumo setup.py) Windows doesn't have os.spawnvp. On the other
   hand, os.spawnv works fine, as sys.executable is absolute on Windows.
2. (In twisted\topfiles\setup.py) There's no win32/twisted_postinstall.py
   anywhere. I don't know if there should be one - for now, I just removed
   the reference to it.
3. If I do python setup.py bdist_wininst, the resulting installer calls
   itself Twisted-Web-0.5.0. I'd expect (prefer) it to be called Twisted-2.0.
   If that's not acceptable, I'd rather see the sumo setup.py build
   multiple installers, one for each subpackage (but that's very suboptimal,
   as I would much rather just install a "batteries included" Twisted
   package).

Hope this is of some help,
Paul.




From Henning.Ramm at mediapro-gmbh.de  Wed Mar  9 08:17:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 9 Mar 2005 14:17:16 +0100
Subject: [Twisted-Python] application design / threads
Message-ID: <F92274058556DE42B94B148EEFB9183949E646@exchange-03.suedkurier.de>

Hi again!

Being a bloody newbie I'm quite unsure how to construct my application; twisted has so much possibilities, perhaps you can provide some hints.

The whole thing becomes a workflow manager that collects information about processed newspaper pages. I'm planning to connect several modules (running on different machines) with PB. The server will handle a database connection and perhaps cache some data that the clients might request. Later the server will provide some status information via http (praise twisted).

One part is an Acrobat Distiller wrapper (via win32com.client):

I created a library with makepy and implemented an event handler class that catches Distiller's events, e.g. "OnJobStart".
That handler class is inherited from a base class by makepy. Each event calls one predefined method.
The handler class is connected with the distiller class like
dist = acrobatdistiller.PdfDistiller()
win32com.client.WithEvents(dist, DistEventHandler)
There can be only one Distiller instance. I guess I should keep that as long as possible, for several files to distill.
-> How should I handle these events with twisted? Do I need multiple inheritance to inherit my handler also from some twisted class?

Before a PostScript file gets distilled [dist.FileToPDF(source, target, joboptions)], I must patch it (write some pdfmarks into it). I guess I should use a thread for those blocking operations (distilling can take several minutes).
-> One thread for both, just work blocking?
-> Do I need a thread for every copy/move operation (large files via network)?

Another part reads some XML files (using minidom) and writes the mangled content into a database.
I guess I can't split XML parsing into smaller non-blocking portions -> one thread for every file?
For the database stuff I'm using runInteraction, seems to be the best solution.

A general issue is logging. I'm used to log4perl/log4net (same as log4j from apache), but dropped log4py in favour of the similar Python 2.3 standard logging. I already asked in my last mail to this list how I can integrate that with twisted. 
-> Is it possible to get correct linenumbers if using deferreds? Or can I trust logging to be non-blocking?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From twisted at ralphm.ik.nu  Wed Mar  9 09:17:43 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 9 Mar 2005 15:17:43 +0100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <20050309141743.GA52519@ik.nu>

On Wed, Mar 09, 2005 at 08:54:25PM +1100, Christopher Armstrong wrote:
> I plan on releasing 2.0 *for real* early next week.
>
> [...]
> 
> Words: Jp, Glyph, ...?
> Xish: Uh, what's that guy's name? Dave or something? I don't think
> he's been very involved.

Dave Smith (dizzyd). He's currently occupied with other, non-Twisted stuff. For
a while now, I have been talking with Dave about taking over his job of
maintaining the Jabber related bits in Twisted, which includes what has now
been moved to words/protocols/jabber and xish.

Last week, I've gone over all of the issues that were assigned to him, and
added some patches for most of them. Dave committed these for me last weekend,
so most of his issues are closed, now. There's one issue, 912, that adds
stringprep checking to Jabber IDs, which I would very much like to have in
before 2.0 is released. It only needs a few test cases, which I will fix up
later today.

In short, and in agreement with Dave, I'd like to offer maintainership of these
modules. I have some plans about future developments, but that can be discussed
later, I guess.

-- 
Groetjes,

ralphm



From itamar at itamarst.org  Wed Mar  9 10:03:14 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 09 Mar 2005 10:03:14 -0500
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
Message-ID: <1110380594.28532.99.camel@sheriffpony>

On Wed, 2005-03-09 at 13:22 +0100, Henning.Ramm at mediapro-gmbh.de wrote:
> Is there already an integration of Python 2.3 standard logging module into twisted?

You can have Twisted  logged events go to Python logging.
twisted.python.log.addObserver(f). f() gets called with dictionary
whicch you can look at and pass to logging.msg or whatever it's called.

> Or can I just use it without any asynchronous wrapper?

If you use a blocking backend to logging (sockets, database, syslog -
writing to file is fine, mostly) this will make your twisted app
unresponsive. Otherwise that should be fine.





From glyph at divmod.com  Wed Mar  9 10:54:56 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 09 Mar 2005 10:54:56 -0500
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
Message-ID: <422F1C50.6040200@divmod.com>

Henning.Ramm at mediapro-gmbh.de wrote:
> Is there already an integration of Python 2.3 standard logging module into twisted?
> Or can I just use it without any asynchronous wrapper?

Twisted doesn't *stop* you from blocking, it just suggests you don't :).

For more discussion of stdlib logging specifically:

http://twistedmatrix.com/bugs/issue307



From alengarbage at yahoo.com  Wed Mar  9 12:28:49 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 09:28:49 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
Message-ID: <20050309172849.19747.qmail@web31507.mail.mud.yahoo.com>

Suppose I am using twisted.web.client.getPage() to
retrieve webpages.  I am setting a callback and an
errback for the result, and this all works
fantastically.

But what about the case where the webserver simply
hangs with the connection open, never returning with
either a result or an error?

I assume that my errback will get called if the socket
times out and closes (right?).  But what if I don't
want to wait that long -- what if I want to do my own
timeout after N seconds/minutes?

I've been looking for examples of how to do this, and
monkeying with reactor.callLater() with partial
success.  If I save the id from callLater(), I can
cancel the timeout in callback() or errback(). 
However, if the timeout does get fired, I get:

[Failure instance: Traceback:
twisted.internet.error.AlreadyCalled, Tried to cancel
an already-called event.
/usr/lib/python2.3/site-packages/twisted/internet/defer.py:338:_runCallbacks
/tmp/deferred2.py:21:errback
/usr/lib/python2.3/site-packages/twisted/internet/base.py:82:cancel
]

Am I going about this the wrong way?  Perhaps twisted
has some built-ins that I'm not aware of to do
essentially the same thing?

I have a modified example from the Defer Howto that
exhibits this behavior.  I can post if the above
explanation isn't enough.

    thanks,
    Lenny


	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From exarkun at divmod.com  Wed Mar  9 13:34:28 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 18:34:28 GMT
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: <20050309172849.19747.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <20050309183428.2951.323277874.divmod.quotient.25926@ohm>

On Wed, 9 Mar 2005 09:28:49 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>Suppose I am using twisted.web.client.getPage() to
> retrieve webpages.  I am setting a callback and an
> errback for the result, and this all works
> fantastically.
> 
> But what about the case where the webserver simply
> hangs with the connection open, never returning with
> either a result or an error?
> 
> I assume that my errback will get called if the socket
> times out and closes (right?).  But what if I don't
> want to wait that long -- what if I want to do my own
> timeout after N seconds/minutes?
> 
> I've been looking for examples of how to do this, and
> monkeying with reactor.callLater() with partial
> success.  If I save the id from callLater(), I can
> cancel the timeout in callback() or errback(). 
> However, if the timeout does get fired, I get:
> 
> [Failure instance: Traceback:
> twisted.internet.error.AlreadyCalled, Tried to cancel
> an already-called event.
> /usr/lib/python2.3/site-packages/twisted/internet/defer.py:338:_runCallbacks
> /tmp/deferred2.py:21:errback
> /usr/lib/python2.3/site-packages/twisted/internet/base.py:82:cancel
> ]
> 
> Am I going about this the wrong way?  Perhaps twisted
> has some built-ins that I'm not aware of to do
> essentially the same thing?
> 
> I have a modified example from the Defer Howto that
> exhibits this behavior.  I can post if the above
> explanation isn't enough.
> 

  As was recently mentioned on the list, timeout support needs 
to be part of the result-generating API.  Luckily, in the case 
of getPage, it is, as demonstrated by this manhole session:

    >>> from twisted.web import client
    >>> client.getPage('http://google.com', timeout=0.001)
    <Deferred #0>
    Deferred #0 failed: 'Getting http://google.com took longer than 0.001
    seconds.'
    >>> 

  Jp



From alengarbage at yahoo.com  Wed Mar  9 14:17:58 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 11:17:58 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: 6667
Message-ID: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>


--- Jp Calderone <exarkun at divmod.com> wrote:
> 
>   As was recently mentioned on the list, timeout
> support needs 
> to be part of the result-generating API.  Luckily,
> in the case 
> of getPage, it is, as demonstrated by this manhole
> session:
> 
>     >>> from twisted.web import client
>     >>> client.getPage('http://google.com',
> timeout=0.001)
>     <Deferred #0>
>     Deferred #0 failed: 'Getting http://google.com
> took longer than 0.001
>     seconds.'
>     >>> 

  Thanks for the pointer, Jp.  I just stumbled on some
of the threads on the mailing list stretching back to
as far as 2002 about whether being able to cancel
Deferreds was a good idea or not.

  So the above solution works.  Where do I catch, or
otherwise react to, the error printed above?  When the
Deferred times out, is there a way to inject another
callback in there ("timeoutcallback"?) so that I can
do some processing on timeout?

  It looks like I could override HTTPClientFactory's
timeout() method if I had a handle to it, but
getPage() doesn't give me access.  Am I barking up the
wrong tree?

    Lenny


	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From mcfletch at rogers.com  Wed Mar  9 15:09:54 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 09 Mar 2005 15:09:54 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <422F5812.7000702@rogers.com>

Christopher Armstrong wrote:

>So I did a Twisted 2.0 prerelease.
>
>  http://twistedmatrix.com/users/radix/2.0/
>
>There is now a TwistedSumo tarball, which contains Twisted and all of
>its subprojects as well as Zope Interface. Thanks to James Knight for
>providing the setup.py for this.
>
>Despite the crappy web presence, this is a real 2.0 prerelease. I will
>try to get this published to the web site by this weekend.  Please
>download anything relevant to you and give it a try, and be sure to
>post your experience to this thread even if it went smoothly.
>  
>
TwistedSumo install went smoothly installing on Gentoo AMD64 as an 
unprivileged user, TwistedSNMP test suite runs fine.  Much larger 
internal project also seems to run fine once I updated Nevow to latest 
SVN to eliminate the large number of deprecation warnings.

Thanks for all the work, everybody,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From radeex at gmail.com  Wed Mar  9 17:54:12 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 10 Mar 2005 09:54:12 +1100
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
Message-ID: <60ed19d40503091454a3c7299@mail.gmail.com>

On Wed, 9 Mar 2005 11:17:58 -0800 (PST), Lenny G Arbage
<alengarbage at yahoo.com> wrote:
> >     <Deferred #0>
> >     Deferred #0 failed: 'Getting http://google.com
> > took longer than 0.001
> >     seconds.'
> >     >>>
> 
>   Thanks for the pointer, Jp.  I just stumbled on some
> of the threads on the mailing list stretching back to
> as far as 2002 about whether being able to cancel
> Deferreds was a good idea or not.
> 
>   So the above solution works.  Where do I catch, or
> otherwise react to, the error printed above?  When the
> Deferred times out, is there a way to inject another
> callback in there ("timeoutcallback"?) so that I can
> do some processing on timeout?


It's just a regular errback. Handle it with d.addErrback(myHandler).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From jasper at peak.org  Wed Mar  9 19:58:17 2005
From: jasper at peak.org (Jasper)
Date: Wed, 09 Mar 2005 16:58:17 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <60ed19d40503091454a3c7299@mail.gmail.com>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
	<60ed19d40503091454a3c7299@mail.gmail.com>
Message-ID: <422F9BA9.2050805@peak.org>

I'm trying to set a python property on a PB client descended from 
pb.Referenceable, but it seems that properties don't work on old style 
classes and that Referenceable is descended from Jellyable, an old style 
class.  Moreover, I see this is still true for 2.0.0a2...

Is there any intention of switching to new classes, or should I just 
hack around this?
-Jasper



From jasper at peak.org  Wed Mar  9 21:15:27 2005
From: jasper at peak.org (Jasper)
Date: Wed, 09 Mar 2005 18:15:27 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <422F9BA9.2050805@peak.org>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org>
Message-ID: <422FADBF.1090506@peak.org>

Jasper wrote:

> I'm trying to set a python property on a PB client descended from 
> pb.Referenceable, but it seems that properties don't work on old style 
> classes and that Referenceable is descended from Jellyable, an old 
> style class.  Moreover, I see this is still true for 2.0.0a2...
>
> Is there any intention of switching to new classes, or should I just 
> hack around this?


Turns out that the simple hack of Client( object, pb.Referenceable ) 
seems to work.  Sorry for the trouble!

-Jasper



From alengarbage at yahoo.com  Wed Mar  9 23:00:29 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 20:00:29 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: 6667
Message-ID: <20050310040029.51009.qmail@web31511.mail.mud.yahoo.com>


--- Christopher Armstrong <radeex at gmail.com> wrote:

> It's just a regular errback. Handle it with
> d.addErrback(myHandler).

  Thanks Christopher.  I made the newbie mistake of
not always returning from my chained call/errbacks, so
I wasn't seeing this.  But after fixing that, it works
just as described.  Very slick.

  I've spent some time (in a previous life) doing
libasync coding, and twisted compares very favorably
(and doesn't have to go through so many hoops since it
relies on python language goodness that C doesn't have
by default).  Nice stuff.

  Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From maoy at cis.upenn.edu  Wed Mar  9 23:53:58 2005
From: maoy at cis.upenn.edu (Yun Mao)
Date: Wed, 9 Mar 2005 23:53:58 -0500 (EST)
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <60ed19d405030814357c08ccff@mail.gmail.com>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
	<60ed19d405030814357c08ccff@mail.gmail.com>
Message-ID: <Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>



On Wed, 9 Mar 2005, Christopher Armstrong wrote:

> It's a bit more complex than that, and its input and behavior makes
> some wrong assumptions and has some bad implications. It is the
> end-user of a Deferred who usually wants to specify the timeout before
> cancelling the operation. However, it is the creator of the Deferred
> who needs to specify _how_ cancelling an operation works -- it's
> different for every protocol / kind of operation. Putting the timeout
> and the canceller next to each other is a bad idea. In practice, using
> setTimeout leads to a bunch of stupid AlreadyCalled errors when the
> end-user of a Deferred specifies a timeout and the framework code
> doesn't know about it.
>
> The best way to offer timeout support in your code is to modify your
> API. If you have a function like getPage which connects to an HTTP
> server and downloads a resource, that getPage function should take a
> timeout parameter. If set, the HTTP-downloader should disconnect from
> the server when the timeout is reached, and simply send an errback to
> the deferred.
>

Thanks for the insight.

The problem is: many of the result-generating APIs do not have a timeout 
option, for example, XMLRPC calls, Database queries, etc. What can we do?
Are you suggesting to modify those APIs? I believe the framework should 
have something related to that.

I could imagine to write a TimerDeferred class or something to wrap the 
original Deferred, which handles timeout, and prevents AlreadyCalledError 
from happening. The tricky thing is, when those timed out calls return 
with callback/errback, there should be cancellation handlers to clean up 
the resources, like lateCallback(), lateErrback(). Of course, the simplest 
solution is to discard the results (just like what DeferredList does 
when fireOnOneCallback/errback is specified), but it is protocol specific.

Even with APIs that have the timeout option, there could also be problems 
when you use them in some form of combination. E.g. I'd write a procedure 
which involves one DNSLookup and one getPage() sequentially. I could 
specify timeout value with 2 seconds each, however what I really want the 
total time to be less than 4 seconds in which case DNS could take longer. 
It is not terribly hard to implement base on what we have now but it would 
be nice if there is a framework support that can calculate the correct 
timers for me.

Another form of "cancellation" is also related to the chaining effect. 
Suppose I want to start following two jobs at the same time:

1: A()->B()-C()
2: D()->E()

However, I only need the result from any of of them. i.e. as long as one 
of them is finished, the other thread is useless and should be canceled 
ASAP to prevent from resource consuming. Right now, I'm using 
DeferredList, but it doesn't cancel the other thread. A similar 
requirement is that if either one of them got errback, the other should be 
canceled.

Anyway, being able to schedule flexible timers is a very big advantage in 
async programming over multithreading to me. Otherwise, signals, locks, 
etc could just drive me nuts. However, I still believe in Twisted has the 
potential to have better framework support.

Yun




From golux at comcast.net  Thu Mar 10 00:25:41 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 00:25:41 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <422FDA55.2010300@comcast.net>

Christopher Armstrong wrote:
> So I did a Twisted 2.0 prerelease....
> ....  Please
> download anything relevant to you and give it a try, and be sure to
> post your experience to this thread even if it went smoothly.

Hey Chris,

I'd like to heartily second Mike's "Thanks for all the
work"!!  I remember at last year's PyCon the discussion of
potentially gnarly issues with the Great Refactorization,
so I know you and all the minions have dealt with a lot, but
the new Twisted is looking just fine!

Since I'm now running Debian unstable on my dev machines, which
I suspect you are too, it's probably no surprise that I had
no problems installing and running TwistedSumo.  All the
PanGalactic tests ran fine (good news because you don't even
wanna know how long it takes to reboot a galaxy ... heh :).

But I noticed one little hiccup that I hadn't seen before
in my server log.  Here's an excerpt (which will probably get
wrapped and look like shit, but anyway):

-------------------------------------------------------------
2005/03/09 16:53 EST [-] pgercred.BasicAuthResource request: <POST /RPC2 HTTP/1.0>
2005/03/09 16:53 EST [admin:PgerXmlrpcService] yo
2005/03/09 16:53 EST [-] 127.0.0.1 - - [09/Mar/2005:21:53:28 +0000] "POST /RPC2 HTTP/1.0" 200 128 "-" "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: exceptions.UserWarning: SSL connection shutdown possibly unreliable, please upgrade to ver 0.XX
-------------------------------------------------------------

I had never seen that warning before, and it only seems to appear in
this one place (client "login"), but *all* the client/server interactions
use ssl and never get this, so maybe it's just be an over-zealous warning
triggered by a very short interaction:  in the login interaction that
corresponds to these log messages, the client just sends a "yo"
(in xmlrpc) to the server, which then sends a "yo" back to the client,
and that's it (the client then decides that it's "logged in").  I looked
at tcp.py and noticed that some comments around that warning code seemed
to express something less than complete confidence in the appropriateness
of the test that raises that exception, so ...

Thoughts?

Cheers,
Steve



From andrew-twisted at puzzling.org  Thu Mar 10 01:16:04 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Mar 2005 17:16:04 +1100
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
	<60ed19d405030814357c08ccff@mail.gmail.com>
	<Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>
Message-ID: <20050310061604.GB15800@trogdor.home.puzzling.org>

On Wed, Mar 09, 2005 at 11:53:58PM -0500, Yun Mao wrote:
[...]
> 
> The problem is: many of the result-generating APIs do not have a timeout 
> option, for example, XMLRPC calls, Database queries, etc. What can we do?
> Are you suggesting to modify those APIs? I believe the framework should 
> have something related to that.

At the moment, the best thing to do is to modify those APIs, yes.
Fundamentally, cancellation needs to be supported by whatever code is
managing the operation that the Deferred is waiting on. 

There may be a better way to do this, see the discussion in
http://twistedmatrix.com/bugs/issue178 (and the mailing list thread it links
to).  Realistically, not all operations can be cancelled, even though the
clients of those operations may no longer care about the result.  Any
solution needs to have sensible support for this case, and at the moment
setTimeout doesn't.

[...]
> Even with APIs that have the timeout option, there could also be problems 
> when you use them in some form of combination. E.g. I'd write a procedure 
> which involves one DNSLookup and one getPage() sequentially. I could 
> specify timeout value with 2 seconds each, however what I really want the 
> total time to be less than 4 seconds in which case DNS could take longer. 
> It is not terribly hard to implement base on what we have now but it would 
> be nice if there is a framework support that can calculate the correct 
> timers for me.

Right, what is actually the case there is there are three different
operations:

   1. the DNS lookup
   2. the getPage
   3. your procedure that invokes 1 and 2.

The code responsible for 3 would also be responsible for cancelling 1 and 2
when 3 is cancelled.  No fancy timeout calculations would be required.

Currently we lack ways to cancel in-progress getPage operations (and
probably DNS lookups, I haven't looked), and we certainly lack any standard
APIs or framework for supporting cancellations.  This is the root problem
that needs fixing, rather than timeouts, I think.

> Another form of "cancellation" is also related to the chaining effect. 
> Suppose I want to start following two jobs at the same time:
> 
> 1: A()->B()-C()
> 2: D()->E()
> 
> However, I only need the result from any of of them. i.e. as long as one 
> of them is finished, the other thread is useless and should be canceled 
> ASAP to prevent from resource consuming. Right now, I'm using 
> DeferredList, but it doesn't cancel the other thread. A similar 
> requirement is that if either one of them got errback, the other should be 
> canceled.

Yeah, this would be nice... but of course there's no generic way to kill
another thread in python.  The thread needs to co-operate somehow.

> Anyway, being able to schedule flexible timers is a very big advantage in 
> async programming over multithreading to me. Otherwise, signals, locks, 
> etc could just drive me nuts. However, I still believe in Twisted has the 
> potential to have better framework support.

Magic bullets welcome ;)

-Andrew.




From foom at fuhm.net  Thu Mar 10 01:18:48 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 01:18:48 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <422FDA55.2010300@comcast.net>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<422FDA55.2010300@comcast.net>
Message-ID: <f7a73940f10317f3c534bd499db80322@fuhm.net>


On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
> /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
> exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
> please upgrade to ver 0.XX

I think I'll just remove that warning. It's warning about a situation 
which I believe *may* never actually be able to happen: during final 
connection shutdown, the socket is reported writable, but OpenSSL is 
for some reason unable to write the final packet. I looked through the 
code, and while I wasn't able to convince myself it couldn't happen, I 
did convince myself that it was rather unlikely, at least. If that does 
happen somehow, (and you aren't using "0.XX" of pyOpenSSL), twisted has 
no way of ever finding out. Thus the warning telling you to upgrade.

About the "0.XX": Back around the beginning of November, I sent some 
patches to the maintainer of PyOpenSSL to add the requisite new method 
to it. While he responded in the affirmative that the patches were 
good, there has been no activity since then. Thus the lack of a real 
version number.

James




From foom at fuhm.net  Thu Mar 10 01:23:07 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 01:23:07 -0500
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <422FADBF.1090506@peak.org>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org> <422FADBF.1090506@peak.org>
Message-ID: <ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>

On Mar 9, 2005, at 9:15 PM, Jasper wrote:
> Jasper wrote:
>
>> I'm trying to set a python property on a PB client descended from 
>> pb.Referenceable, but it seems that properties don't work on old 
>> style classes and that Referenceable is descended from Jellyable, an 
>> old style class.  Moreover, I see this is still true for 2.0.0a2...
>>
>> Is there any intention of switching to new classes, or should I just 
>> hack around this?
>
>
> Turns out that the simple hack of Client( object, pb.Referenceable ) 
> seems to work.  Sorry for the trouble!

You really don't want to do that. Then, if pb.Referenceable ever does 
become a new-style class (for example because a new version of python 
gets rid of oldstyle classes, or because twisted is changed), then 
you'll get an MRO construction error. Always put object last in the 
inheritance line.

E.g.:
class Foo: pass
class Bar(object, Foo): pass # Fine

class Foo(object): pass
class Bar(object, Foo): pass # BOOM

James




From glyph at divmod.com  Thu Mar 10 01:35:35 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 Mar 2005 06:35:35 GMT
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <f7a73940f10317f3c534bd499db80322@fuhm.net>
Message-ID: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>



On Thu, 10 Mar 2005 01:18:48 -0500, James Y Knight <foom at fuhm.net> wrote:
>
> On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> > 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
> > /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
> > exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
> > please upgrade to ver 0.XX
> 
> I think I'll just remove that warning. It's warning about a situation 
> which I believe *may* never actually be able to happen: during final 
> connection shutdown, the socket is reported writable, but OpenSSL is 
> for some reason unable to write the final packet. I looked through the 
> code, and while I wasn't able to convince myself it couldn't happen, I 
> did convince myself that it was rather unlikely, at least. If that does 
> happen somehow, (and you aren't using "0.XX" of pyOpenSSL), twisted has 
> no way of ever finding out. Thus the warning telling you to upgrade.

In fact I believe this situation can and does happen: if the other side of the connection suddenly and totally goes away (and is also filtering all ICMP including port-unreachable), the connection will hang forever.

This looks like another use-case for a 'killConnection' method...



From golux at comcast.net  Thu Mar 10 02:21:32 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 02:21:32 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <f7a73940f10317f3c534bd499db80322@fuhm.net>
References: <60ed19d4050309013462785b23@mail.gmail.com>	<422FDA55.2010300@comcast.net>
	<f7a73940f10317f3c534bd499db80322@fuhm.net>
Message-ID: <422FF57C.5060701@comcast.net>

James Y Knight wrote:
> 
> On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> 
>> 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
>> /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
>> exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
>> please upgrade to ver 0.XX
> 
> 
> I think I'll just remove that warning. It's warning about a situation 
> which I believe *may* never actually be able to happen ...

Thanks for the explanation James -- lucid as usual.
I think I can live with that one (at least until
pyOpenSSL 0.XX comes out. ;)

Cheers,
Steve



From Henning.Ramm at mediapro-gmbh.de  Thu Mar 10 03:59:34 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 10 Mar 2005 09:59:34 +0100
Subject: [Twisted-Python] Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E64A@exchange-03.suedkurier.de>

>For more discussion of stdlib logging specifically:
>http://twistedmatrix.com/bugs/issue307

Thank you. I won't question that your points are valid.

I'm very much used to "standard logging" with its possibilities to write all the stuff to a file, send a mail on error and filter everything after source, level etc. And because it's kind of standard I can simply use the same logging format from Perl, VB.NET and Python. (Draw your wreath of garlic, but here's a lot of different code to keep together.)

I'm convinced twisted's possibilities are better, but its logging isn't that extensive (yet). And I find the logging API rather chaotic.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From jasper at peak.org  Thu Mar 10 09:26:37 2005
From: jasper at peak.org (Jasper)
Date: Thu, 10 Mar 2005 06:26:37 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>	<422F9BA9.2050805@peak.org>
	<422FADBF.1090506@peak.org>
	<ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>
Message-ID: <4230591D.9040703@peak.org>

James Y Knight wrote:

> On Mar 9, 2005, at 9:15 PM, Jasper wrote:
>
>> Jasper wrote:
>>
>>> I'm trying to set a python property on a PB client descended from 
>>> pb.Referenceable, but it seems that properties don't work on old 
>>> style classes and that Referenceable is descended from Jellyable, an 
>>> old style class.  Moreover, I see this is still true for 2.0.0a2...
>>>
>>> Is there any intention of switching to new classes, or should I just 
>>> hack around this?
>>
>>
>>
>> Turns out that the simple hack of Client( object, pb.Referenceable ) 
>> seems to work.  Sorry for the trouble!
>
>
> You really don't want to do that. Then, if pb.Referenceable ever does 
> become a new-style class (for example because a new version of python 
> gets rid of oldstyle classes, or because twisted is changed), then 
> you'll get an MRO construction error. Always put object last in the 
> inheritance line.
>
> E.g.:
> class Foo: pass
> class Bar(object, Foo): pass # Fine
>
> class Foo(object): pass
> class Bar(object, Foo): pass # BOOM

Actually, I prefer it to blow up to help remember when to stop using 
this ugly comment requiring hack..

I have absolute control over the version of Python and Twisted I'm 
using, and so the worst that can happen is that I'll have to change a 
single line of code when and if I upgrade to such a version of Twisted 
or Python.

-Jasper



From jarrod.roberson at gmail.com  Thu Mar 10 11:12:18 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 11:12:18 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
Message-ID: <2389d47305031008121bc8a882@mail.gmail.com>

I am having a hard time getting multicast to work in Twisted. Code
snippets/examples I have found are either too old or just incorrect.

what is the correct way to write a protocol handler that will
multilisten on a multicast socket?

I am trying to add mDNS responder functionality to my application and
twisted complains that port 5353 is already in use. I know I can run
multiple copies of mDNSResponder from Apple, is this just a problem
with twisted on OSX or is it worse than that.

regardless is there a fix to get twisted to work, this application
will eventually be deployed in an linux or solaris environment so if
it is an OSX thing I can just find another box to test it on.



From itamar at itamarst.org  Thu Mar 10 11:43:56 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 11:43:56 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d47305031008121bc8a882@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
Message-ID: <1110473036.28542.165.camel@sheriffpony>

On Thu, 2005-03-10 at 11:12 -0500, jarrod roberson wrote:

> what is the correct way to write a protocol handler that will
> multilisten on a multicast socket?

In Twisted 2.0 there's a flag to listenMulticast that lets you do this.
Also look in my sandbox for some prelim zeroconf code (enough to be able
to read info, not good enough to publish).

> regardless is there a fix to get twisted to work, this application
> will eventually be deployed in an linux or solaris environment so if
> it is an OSX thing I can just find another box to test it on.

On Linux there seems to be a movement to standardize on the howl
mdnsresponder, but that'll take a while. Probably you want your mdns
library to use system version if available, otherwise its own.




From jarrod.roberson at gmail.com  Thu Mar 10 14:14:59 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 14:14:59 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110473036.28542.165.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
Message-ID: <2389d47305031011147d5be7e1@mail.gmail.com>

On Thu, 10 Mar 2005 11:43:56 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 11:12 -0500, jarrod roberson wrote:
> 
> > what is the correct way to write a protocol handler that will
> > multilisten on a multicast socket?
> 
> In Twisted 2.0 there's a flag to listenMulticast that lets you do this.
> Also look in my sandbox for some prelim zeroconf code (enough to be able
> to read info, not good enough to publish).
> 

what I am trying to get done first is a responder for my application
to reply to queries / publish
I got the lastest version of Twisted from subversion ( 13109 ) and
installed it by doing a
python setup.py all install

now I get this error on all my code ( and the mdns.py code from your sandbox )

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    from twisted.internet import protocol
  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/protocol.py",
line 18, in ?
    from zope.interface import implements
ImportError: No module named zope.interface
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

is there a dependancy on Zope with Twisted 2.x?

I did find the protocol.py file the line from zope.interface import implements

what am I missing here?



From int at mtx.ru  Thu Mar 10 14:22:17 2005
From: int at mtx.ru (Pavel Volkovitskiy)
Date: Thu, 10 Mar 2005 22:22:17 +0300
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <42309E69.6040903@mtx.ru>

Christopher Armstrong wrote:

>So I did a Twisted 2.0 prerelease.
>  
>
Is it possible to fix this (1) microdom bug:
    http://twistedmatrix.com/bugs/issue909

-- 
Pavel



From itamar at itamarst.org  Thu Mar 10 14:57:01 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 14:57:01 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d47305031011147d5be7e1@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
Message-ID: <1110484621.28542.180.camel@sheriffpony>

On Thu, 2005-03-10 at 14:14 -0500, jarrod roberson wrote:

> is there a dependancy on Zope with Twisted 2.x?

There's a dependency on zope.interface in 2.0:
http://www.zope.org/Products/ZopeInterface/






From foom at fuhm.net  Thu Mar 10 16:13:26 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:13:26 -0500
Subject: [Twisted-Python] ChangeLog
Message-ID: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>

So, it looks like we've generally included two change listings in our 
releases: ChangeLog and NEWS. It's pretty obvious what NEWS is supposed 
to be: a human edited list of the most important changes in the 
release. There is some question, though, about what a ChangeLog should 
be. Right now, it is useless, as nobody updates it. Who wants to write 
two commit messages rather than one, afterall?

If we actually want a change log separate from an "important changes" 
NEWS file, I think it'd be fine to simply autogenerate it from our SVN 
log messages, because if you want a more concise explanation of what 
changed, that's what NEWS is for. The advantage of doing this is that 
people who don't follow SVN get to see all the things we changed, the 
disadvantage being that it's 6500 lines long and contains some 
irrelevant parts. E.g. merging trial, reverting merge, merging trial, 
reverting merge, repeat like 200 more times. Also, things lilke "Use 
ThreadedResolver instead of BlockingResolver by default" in one commit, 
and "Tra la la la la, like extra flowers" in the next when you realize 
you screwed up the first and need to do a 4-character fix. :)

On the other hand, perhaps all we really want is a single human-edited 
changes file, describing in a bit more detail than the 1.3 NEWS file 
what's changed, but more concise than a full changelog. What do people 
think?

James




From foom at fuhm.net  Thu Mar 10 16:14:52 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:14:52 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
Message-ID: <2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>


On Mar 10, 2005, at 1:35 AM, glyph at divmod.com wrote:
> In fact I believe this situation can and does happen: if the other 
> side of the connection suddenly and totally goes away (and is also 
> filtering all ICMP including port-unreachable), the connection will 
> hang forever.
>
> This looks like another use-case for a 'killConnection' method...

No, you've got the situation backwards. The situation doesn't involve 
any hanging, it involves possible data loss of the last packet. We will 
make a single attempt to do the final write (via calling SSL_shutdown), 
and if it fails to write because of some transient error, we have no 
way to know, so we close the connection anyways, even though we 
should've retried.

James




From jarrod.roberson at gmail.com  Thu Mar 10 16:19:38 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 16:19:38 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110484621.28542.180.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
Message-ID: <2389d473050310131958f19ae9@mail.gmail.com>

On Thu, 10 Mar 2005 14:57:01 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 14:14 -0500, jarrod roberson wrote:
> 
> > is there a dependancy on Zope with Twisted 2.x?
> 
> There's a dependency on zope.interface in 2.0:
> http://www.zope.org/Products/ZopeInterface/
>

ok you only need the zope.interface product and not the entire zope
server, that is better
I got zope.interface installed and everything is working but I am
getting lots of exceptions related to unicode and what not.



From foom at fuhm.net  Thu Mar 10 16:42:28 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:42:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13111 - Fix process unit
	test when there is no twisted installed yet.
In-Reply-To: <E1D9VHc-0000NT-00@wolfwood>
References: <E1D9VHc-0000NT-00@wolfwood>
Message-ID: <6ffdda17ff3eac56d3a801542060361c@fuhm.net>

On Mar 10, 2005, at 4:33 PM, Tommi Virtanen wrote:
> Fix process unit test when there is no twisted installed yet.

We need to decide on a standard mechanism for doing this. Every test 
that runs processes does it a *different* way now. At least on unix, 
sys.path can never have relative paths in it, so we should standardize 
on the simple:  'env = {"PYTHONPATH": os.pathsep.join(sys.path)}'.

James




From itamar at itamarst.org  Thu Mar 10 16:51:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 16:51:19 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d473050310131958f19ae9@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
	<2389d473050310131958f19ae9@mail.gmail.com>
Message-ID: <1110491479.28536.185.camel@sheriffpony>

On Thu, 2005-03-10 at 16:19 -0500, jarrod roberson wrote:

> I got zope.interface installed and everything is working but I am
> getting lots of exceptions related to unicode and what not.

There's a reason it's in the sandbox.




From radeex at gmail.com  Thu Mar 10 17:32:36 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:32:36 +1100
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
Message-ID: <60ed19d40503101432e8e5744@mail.gmail.com>

On Thu, 10 Mar 2005 16:13:26 -0500, James Y Knight <foom at fuhm.net> wrote:
> On the other hand, perhaps all we really want is a single human-edited
> changes file, describing in a bit more detail than the 1.3 NEWS file
> what's changed, but more concise than a full changelog. What do people
> think?

+1, sounds good to me.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From paul at ref.nmedia.net  Thu Mar 10 17:37:25 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Thu, 10 Mar 2005 14:37:25 -0800
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <E1D96Pd-0002IA-01@pyramid.twistedmatrix.com>
References: <E1D96Pd-0002IA-01@pyramid.twistedmatrix.com>
Message-ID: <20050310223725.GA30170@ref.nmedia.net>

> 
> The whole thing becomes a workflow manager that collects information about processed newspaper pages. I'm planning to connect several modules (running on different machines) with PB. The server will handle a database connection and perhaps cache some data that the clients might request. Later the server will provide some status information via http (praise twisted).
> 
> One part is an Acrobat Distiller wrapper (via win32com.client):
> 
> I created a library with makepy and implemented an event handler class that catches Distiller's events, e.g. "OnJobStart".
> That handler class is inherited from a base class by makepy. Each event calls one predefined method.
> The handler class is connected with the distiller class like
> dist = acrobatdistiller.PdfDistiller()
> win32com.client.WithEvents(dist, DistEventHandler)
> There can be only one Distiller instance. I guess I should keep that as long as possible, for several files to distill.
> -> How should I handle these events with twisted? Do I need multiple inheritance to inherit my handler also from some twisted class?

This problem has come up before. Basically, you need to queue up your series
of commands and then send them one at a time. Obviously, blocking is a bad
thing. In this case, your PDF handler can be isolated into a separate
process and/or thread. Twisted supports this. Read the threading stuff
very carefully. The threading support has specific hooks designed to run a
process in just this situation.

So architecturally, you'd have your PDF application running in a thread. Every
time it finishes a job, it sends a signal over to the twisted code signalling
that the job is complete. The twisted code then schedules another one on an
as-needed basis.

On the twisted side, you can write a server. The server either queues a job
or sends it immediately. Either way, it can return immediately and it won't
be a problem blocking-wise since the time to execute the code is minimal (you
hid all the blocking stuff in the side-thread where your PDF driver runs).
The "return" function essentially is either an outright "pull a command out
of the queue and send it over" function or you could set it up as a
reactor.calllater(0.0001, functionToQcheduleQueuedPdfJob)

> Before a PostScript file gets distilled [dist.FileToPDF(source, target, joboptions)], I must patch it (write some pdfmarks into it). I guess I should use a thread for those blocking operations (distilling can take several minutes).
> -> One thread for both, just work blocking?

This can be in your threaded code as mentioned earlier since it's all one
long process.

> -> Do I need a thread for every copy/move operation (large files via network)?

Nope. That's the beauty of twisted code. I've written this sort of handling
multiple packet trains many times. Write a protocol. There are two ways to
do this. First, you can write one protocol per file transfer. The factory
sets up the protocol to do the file transfer. At the end of the file, the
protocol then saves the file to disk and tears down the connection. Then
on return to the factory, the factory can call the code to write the PDF
file. The protocol code simply shovels the data from the network to a file.
As each packet arrives, it executes for a short period of time before
returning (which releases control back to the reactor). No blocking is
necessary at all. The protocol itself will be little more than a modification
of the Echo example protocol except you may want to add some headers or
something to send a file size and/or CRC to make sure that the file comes
through intact.

> Another part reads some XML files (using minidom) and writes the mangled content into a database.
> I guess I can't split XML parsing into smaller non-blocking portions -> one thread for every file?

I ran into long processing problems before. There's a simple solution. Pick
something convenient such as simply chunking everything up into processing one
line at a time. Store your state in a "utility class". A utility class is
something like this:

class Utility:
    pass

Then you can store anything you want. First, initialize it:
storage = Utility()

Then attach whatever data you need for your state:
storage.data = something
storage.header = something else.

Then, whenever you want to chunk your code into discrete steps, simply pass
it along in a chain of functions, each one ending with:

reactor.calllater(0.0001, nextstep, storage)

The functions will look like:

def nextstep(storage):
    ...

There are some other ways of handling this. You can get really creative with
your constructs using deferreds. And the Flow module allows you to go even
further than the hard coded version I'm suggesting here. Try reading through
the Flow module documentation. Just don't get hung up about using it. For my
purposes, it was usually better just to have the basic concept in mind than
to actually use Flow.

> For the database stuff I'm using runInteraction, seems to be the best solution.

Yep. Frequently, this is where I'd run a deferred() just after sending the
request to the known-to-be-slow process. Read that section carefully too. Then
your code gets called back immediately when the process completes. You will
need to understand deferred's to fully utilize twisted's threading interface,
and then you'll realize that you probably don't need threads.

> A general issue is logging. I'm used to log4perl/log4net (same as log4j from apache), but dropped log4py in favour of the similar Python 2.3 standard logging. I already asked in my last mail to this list how I can integrate that with twisted. 
> -> Is it possible to get correct linenumbers if using deferreds? Or can I trust logging to be non-blocking?

Deferred's work fine. It's just a programming construct that is a work-around
for a lack of a real continuation. On the other hand, deferred's are much
easier to use than continuations. The code seems VERY unnatural to write at
first but once you get used to it, deferred's seem just well...obvious.

As to logging itself...it might be easier to just write your own. Usually I
haven't been overly thrilled with the mechanical-looking output of
off-the-shelf loggers and logging is little more than just printing to a file
anyways, sometimes with some extra (chop it up and reclaim space) features
added.



From radeex at gmail.com  Thu Mar 10 17:44:42 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:44:42 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <cba01a4105030906572bd38b40@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
	<20050309141743.GA52519@ik.nu>
	<cba01a4105030906572bd38b40@mail.gmail.com>
Message-ID: <60ed19d40503101444311c6b13@mail.gmail.com>

On Wed, 9 Mar 2005 07:57:27 -0700, Dave Smith <dizzyd at gmail.com> wrote:
> I am David "dizzy" Smith, and I endorse this message. :)

> On Wed, 9 Mar 2005 15:17:43 +0100, Ralph Meijer <twisted at ralphm.ik.nu> wrote:
> > In short, and in agreement with Dave, I'd like to offer maintainership of these
> > modules. I have some plans about future developments, but that can be discussed
> > later, I guess.

Well, ok. I suggest people commit ralphm's patches if they have unit
tests and seem reasonable. Eventually we can work out SVN access (man
I wish we had separate repositories).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From golux at comcast.net  Thu Mar 10 17:45:53 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 17:45:53 -0500
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <60ed19d40503101432e8e5744@mail.gmail.com>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
	<60ed19d40503101432e8e5744@mail.gmail.com>
Message-ID: <4230CE21.2080502@comcast.net>

Christopher Armstrong wrote:
> On Thu, 10 Mar 2005 16:13:26 -0500, James Y Knight <foom at fuhm.net> wrote:
> 
>>On the other hand, perhaps all we really want is a single human-edited
>>changes file, describing in a bit more detail than the 1.3 NEWS file
>>what's changed, but more concise than a full changelog. What do people
>>think?
> 
> +1, sounds good to me.

I agree.  If people want more detail than is in NEWS, they should
probably just subscribe to the commits list anyway (as I did), or
they can access the svn logs themselves as desired.

Steve



From radeex at gmail.com  Thu Mar 10 17:51:17 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:51:17 +1100
Subject: [Twisted-Python] Bug Squashing Weekend
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <60ed19d40503101451505fc6a9@mail.gmail.com>

On Wed, 9 Mar 2005 20:54:25 +1100, Christopher Armstrong
<radeex at gmail.com> wrote:
> First, please take a look at the bug tracker. There are a few urgent
> issues left which I'm interested in, as well as a bunch of
> trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
> on doing some of that this weekend.

Is anyone interested in making this a more official "bug squashing
party" for the weekend? Is anyone willing to allocate some time
specifically to going through the tracker and bashing bugs this
weekend? (I'll be available for all of it).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From itamar at itamarst.org  Thu Mar 10 18:09:11 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 18:09:11 -0500
Subject: [Twisted-Python] Bug Squashing Weekend
In-Reply-To: <60ed19d40503101451505fc6a9@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
	<60ed19d40503101451505fc6a9@mail.gmail.com>
Message-ID: <1110496151.28534.188.camel@sheriffpony>

On Fri, 2005-03-11 at 09:51 +1100, Christopher Armstrong wrote:

> Is anyone interested in making this a more official "bug squashing
> party" for the weekend? Is anyone willing to allocate some time
> specifically to going through the tracker and bashing bugs this
> weekend? (I'll be available for all of it).

If we do this - assign the bug you are looking at to yourself, so other
people don't spend time on same bug.




From jarrod.roberson at gmail.com  Thu Mar 10 18:14:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 18:14:44 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110491479.28536.185.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
	<2389d473050310131958f19ae9@mail.gmail.com>
	<1110491479.28536.185.camel@sheriffpony>
Message-ID: <2389d47305031015145cd73cf@mail.gmail.com>

On Thu, 10 Mar 2005 16:51:19 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 16:19 -0500, jarrod roberson wrote:
> 
> > I got zope.interface installed and everything is working but I am
> > getting lots of exceptions related to unicode and what not.
> 
> There's a reason it's in the sandbox.
> 

:-)

Thanks for the help, I have a basic twisted mDNSListener working now
in very few lines of code.
When I get the mDNSResponder finished I will post that back to
community. Maybe it might even make it into twisted proper :-)

When I get it a little more full features I will post links to my code
for other peoples use.



From db3l at fitlinxx.com  Thu Mar 10 18:05:00 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 10 Mar 2005 18:05:00 -0500
Subject: [Twisted-Python] Re: Python properties and pb.Referenceable...
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org> <422FADBF.1090506@peak.org>
Message-ID: <ull8vp0f7.fsf@fitlinxx.com>

Jasper <jasper at peak.org> writes:

> Turns out that the simple hack of Client( object, pb.Referenceable )
> seems to work.  Sorry for the trouble!

One problem you might then run into is that the jelly layer doesn't
like passing new style objects.  In our case we just patched jelly.py
to handle them (using a suggested change from twisted bug 462 I
believe).

-- David




From alengarbage at yahoo.com  Thu Mar 10 18:46:42 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 10 Mar 2005 15:46:42 -0800 (PST)
Subject: [Twisted-Python] POSTing http requests
In-Reply-To: 6667
Message-ID: <20050310234642.89487.qmail@web31508.mail.mud.yahoo.com>

How do I correctly set up the payload for a POST file
upload?  I see that I can add a "method='POST'" and
"postdata=something" to getPage(), but it's that
'something' that I'm stuck on.  I'm wondering if there
isn't a convenience method for putting the right stuff
in the HTTP header (Content-Type: multipart...") and
in the body (-----seperator, etc).

I haven't been able to find an answer in the mailing
list for the above (and google doesn't seem to know,
either), but I'm sure there's a really simple way to
do it.

    Thanks in advance
    Lenny G.


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - 250MB free storage. Do more. Manage less. 
http://info.mail.yahoo.com/mail_250



From alengarbage at yahoo.com  Fri Mar 11 00:32:11 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 10 Mar 2005 21:32:11 -0800 (PST)
Subject: [Twisted-Python] POSTing http requests
In-Reply-To: 6667
Message-ID: <20050311053211.50552.qmail@web31513.mail.mud.yahoo.com>


  I just realized that this is a bit more involved
than I at first expected.  It would be nice to be able
to send the upload request without holding all of
postdata in memory, and getPage(), even when I get
past the below problem (which can be done by calling
something like encode_multipart_formdata() as defined
at
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/146306),
doesn't seem to allow for that.

  Fabian Seisen's urllib2_file at
http://fabien.seisen.org/python/urllib2_multipart.html,
 does work without requiring the upload to sit in
memory all at once, but it doesn't appear to be
asynchronous and it doesn't appear to work with Python
2.4 right now, either.

  Is there some way I can make this work with
HTTPClientFactory?  If not, what should I be looking
at?  In the case of large file uploads, wouldn't it be
advisable to send the headers/seperators first, then
do a chunk by chunk read of the file and send these
chunks one at a time (but in quick succession).  To do
that, it seems like a write() method is necessary --
is that in the IConsumer interface?

  Thanks for any guidance you can give me -- as you
can tell I'm new to twisted.

    Thanks
    Lenny G.


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> How do I correctly set up the payload for a POST
> file
> upload?  I see that I can add a "method='POST'" and
> "postdata=something" to getPage(), but it's that
> 'something' that I'm stuck on.  I'm wondering if
> there
> isn't a convenience method for putting the right
> stuff
> in the HTTP header (Content-Type: multipart...") and
> in the body (-----seperator, etc).
> 
> I haven't been able to find an answer in the mailing
> list for the above (and google doesn't seem to know,
> either), but I'm sure there's a really simple way to
> do it.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From andrea at cpushare.com  Fri Mar 11 03:59:53 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Fri, 11 Mar 2005 09:59:53 +0100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
Message-ID: <20050311085952.GK26348@opteron.random>

On Thu, Mar 10, 2005 at 04:14:52PM -0500, James Y Knight wrote:
> No, you've got the situation backwards. The situation doesn't involve 
> any hanging, it involves possible data loss of the last packet. We will 
> make a single attempt to do the final write (via calling SSL_shutdown), 
> and if it fails to write because of some transient error, we have no 
> way to know, so we close the connection anyways, even though we 
> should've retried.

Thanks for the explanation. I've also got those messages, could you post
the patch so I can apply it to pyOpenSSL until it's merged? Thanks.



From Henning.Ramm at mediapro-gmbh.de  Fri Mar 11 05:31:09 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 11 Mar 2005 11:31:09 +0100
Subject: [Twisted-Python] App design / Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E653@exchange-03.suedkurier.de>

Paul, thank you very much for taking the time to answer my confusion.

>> -> Do I need a thread for every copy/move operation (large 
>files via network)?
>
>Nope. That's the beauty of twisted code. I've written this 
>sort of handling
>multiple packet trains many times. Write a protocol.

Hm, sounds like using FTP and not shutil.move via system's SMB?
Or is there already something better in twisted?

If I'd write my own protocol to wrap shutil.move,
the operation would be blocking because I don't
work on file block level and the protocol doesn't make sense.
I'm not feeling like writing file transfer code on file block level.
Or do you think it would be worth the hassle?

>> Another part reads some XML files (using minidom) and writes 
...
>I ran into long processing problems before. There's a simple 
>solution. Pick
>something convenient such as simply chunking everything up 
>into processing one line at a time.

So not using DOM but per-line XML handling.
Not that convenient, because I use only small bits
of all the XML data that are spread all over the files,
but I guess it would become better twisted code.

>your constructs using deferreds. And the Flow module allows 
>you to go even
>further than the hard coded version I'm suggesting here. Try 
>reading through
>the Flow module documentation. Just don't get hung up about 
>using it. For my
>purposes, it was usually better just to have the basic concept 
>in mind than to actually use Flow.

That's perhaps a general problem with twisted: There are great
solutions for everything, but you need to know them in detail
to know which fits your problem. Or you must know how you should
reshape your problem to fit in some twisted solution...

I know twisted "does it all"(TM), but was is "it"? ;-)


>Yep. Frequently, this is where I'd run a deferred() just after 
>sending the request to the known-to-be-slow process.
>Read that section carefully too. Then
>your code gets called back immediately when the process 
>completes. You will
>need to understand deferred's to fully utilize twisted's 
>threading interface,
>and then you'll realize that you probably don't need threads.

I'm just trying to write a simple directory watcher (I need
this at every corner of my app), Patrick Lauber wrote an answer
to my initial question on that, but that wasn't really what I needed.

It works so far that it calls a deferred callback if it gets a
notify on a new/changed file, but only once; next time I get an
"AlreadyCalledError" - looks like I don't yet understand deferreds.

At the moment it's inherited from pb.Root, because I'll need it to
run remotely sometimes, but perhaps it would be better to use a
service or something else -- it should run "all the time" if not
stopped and call a callback for every file.
I attached the file, perhaps someone can point out my biggest mistakes?


>first but once you get used to it, deferred's seem just well...obvious.

I hope to get into that higher state of mind soon. ;-)

>As to logging itself...it might be easier to just write your 
>own. Usually I
>haven't been overly thrilled with the mechanical-looking output of
>off-the-shelf loggers and logging is little more than just 
>printing to a file
>anyways, sometimes with some extra (chop it up and reclaim 
>space) features added.

I enjoyed being able to switch the logging output, e.g. from file to
database or email per config file without the need to go into the code.
I don't feel like re-inventing the wheel, but as Glyph pointed out,
the config syntax of standard logging is just ugly and messy; the
config syntax of log4[j|perl|net] ist much more logical. Perhaps
someone should write a log4twisted module...


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dirwatcher.py
Type: application/octet-stream
Size: 2570 bytes
Desc: dirwatcher.py
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050311/1e803d04/attachment.obj 

From justinjohnson at gmail.com  Fri Mar 11 09:01:29 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 11 Mar 2005 08:01:29 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e7050110191537664713@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
Message-ID: <94a776e705031106014270dafe@mail.gmail.com>

Dave,

Can you comment again on what you think should be done here?  I'd like
to get this functionality into 2.0 if possible.  If you're okay with
my patch than I will try to get the tests written before the release. 
Otherwise I'm wondering if there is an alternative implementation that
can be added before the release.  I'd prefer not having to maintain
local mods to Twisted.

As a reminder for anyone else reading this, this is related to
http://twistedmatrix.com/bugs/issue844.

Thanks.
Justin


On Mon, 10 Jan 2005 21:15:08 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> See comments below.
> 
> On 07 Jan 2005 16:20:08 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> [snip]
> >
> > Sorry on the delay - holidays and then I forgot about it :-(
> >
> > I'm still on the fence with respect to having independent "jellyable"
> > checks.  My concern would be that having the independent checks of
> > what is suitable for jellying can be fragile with respect to coupling
> > with the actual jelly operation.  Even with the jellyable and security
> > checks there are some paths in the jellier code that could still fail
> > the operation.
> 
> Can you clarify here?  What paths are you referring to?  I'd prefer to
> not duplicate those checks as well, but it seemed like the simplist
> way to accomplish my goal.  It does sound like your understanding of
> the code is better than mine though.
> 
> > I also think I liked your earlier attempts at keeping the change
> > within the CopyableFailure class (I may have missed why that changed),
> > although even there you'd have a double jelly since you'd have to
> > check the jelly attempt in getStateToCopy.  Although alternatively,
> > CopyableFailure could just implement its own jellyFor (rather than
> > getStateToCopy) which handled that more gracefully and with a single
> > jelly attempt on the value.
> >
> > -- David
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From justinjohnson at gmail.com  Fri Mar 11 09:02:40 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 11 Mar 2005 08:02:40 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e705031106014270dafe@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
Message-ID: <94a776e705031106023658a2c1@mail.gmail.com>

On Fri, 11 Mar 2005 08:01:29 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Dave,

I mean David.  :-)



From thomas at apestaart.org  Fri Mar 11 09:29:09 2005
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Fri, 11 Mar 2005 15:29:09 +0100
Subject: [Twisted-Python] [OT] Looking for Twisted/Python developers
Message-ID: <1110551349.6606.67.camel@otto.amantes>

Hi,

Fluendo (http://www.fluendo.com) is looking for someone interested in
developing on some of the products we're working on.  We are looking for
someone well-versed or willing to get up to speed with Twisted and
Python.  The initial focus would be on working on our on-demand
streaming platform integrated with Flumotion, our live streaming server.
Willingness to relocate to Spain is a plus but not absolutely necessary.

Questions, queries, sample projects, CV: send to me.

Thanks,
Thomas


Dave/Dina : future TV today ! - http://www.davedina.org/
<-*- thomas (dot) apestaart (dot) org -*->
I should dress you up in pearl
Finest silk to touch your skin
Don't know how to write a love song
But don't leave
<-*- thomas (at) apestaart (dot) org -*->
URGent, best radio on the net - 24/7 ! - http://urgent.fm/






From tv at twistedmatrix.com  Fri Mar 11 11:34:59 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 11 Mar 2005 18:34:59 +0200
Subject: [Twisted-Python] multicast multi-listen not working or just	not
	working on OSX?
In-Reply-To: <1110473036.28542.165.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
Message-ID: <4231C8B3.2010503@twistedmatrix.com>

Itamar Shtull-Trauring wrote:
> On Linux there seems to be a movement to standardize on the howl
> mdnsresponder, but that'll take a while. Probably you want your mdns
> library to use system version if available, otherwise its own.

ITYM http://www.freedesktop.org/Software/Avahi, HTH, HAND.



From tv at twistedmatrix.com  Fri Mar 11 11:40:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 11 Mar 2005 18:40:48 +0200
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
Message-ID: <4231CA10.2080100@twistedmatrix.com>

James Y Knight wrote:
> On the other hand, perhaps all we really want is a single human-edited 
> changes file, describing in a bit more detail than the 1.3 NEWS file 
> what's changed, but more concise than a full changelog. What do people 
> think?

What I do with ldaptor is take the SVN commit messages, clean them up,
categorize and prioritize. People who want just high-level can read
the first section only, people who are only admins/users can read the
first two sections, and developers can pick the parts they are
interested in. I also take care to trim out anything that isn't relevant
-- e.g. things that are a continuation of work committed after 0.0.30
was released. On the other hand, I don't bother providing a NEWS file,
atleast for now.

Looks like this:

ldaptor (0.0.31) unstable; urgency=low

   * Conceptual changes:
     - Service-specific passwords: added a mechanism that allows having
       "subpasswords" that are only used with particular services; e.g.
       let the userPassword attribute be used only for SSH logins, and use
       additional "mail" and "web" password, stored in an attribute called
       "servicePassword". The value is two whitespace-separated fields:
       service name and userPassword-style password digest. See
       ServiceBindingProxy for more.
     - LDIFTree allows LDAP server data storage an a one entry per file
       format, with nice unixy semantics.

   * Applications changes:
     - WebUI:
       - Add pretty label to search form submit button.
       - Service-specific password editing support. Closes: ldaptor#17.
     - Server:
       - New LDIFTree storage backend, storing the LDAP as a filesystem
         directory tree, with one entry per file in LDIF format.
       - Add LDAP proxy support.
       - Add ServiceBindingProxy, an LDAP proxy that handles non-anonymous
         bind requests specially. Closes: ldaptor#15.

   * API changes:
     - Get rid of MutableString:
       - Add pureber.berDecodeObject, remove pureber.ber2object.
       - Add pureber.berDecodeLength, remove pureber.berlen2int.
       - Switch LDAPClient and LDAPServer buffers to be plain strings.
       - Remove MutableString.
     - Change the BER decoding mechanism:
       - Add classmethod fromBER instead of using __init__ in two
         roles.
       - Remove old-style decode support.
     - Add pureber.berDecodeMultiple, mainly for use by subclasses of
       BERSequence.
     - Large lengths appeared to be negative, switched berlen2int to
       using longs.
     - Split LDAPServer to BaseLDAPServer, so one has a choice of
       inheriting something without any handle_* methods.
     - Make ldapsyntax.LDAPEntryWithClient.move() remove the old RDN.
     - Make ldapsyntax.LDAPEntryWithClient.move() change the entry's idea
       of its own DN.

   * Refactorings to adapt to Ldaptor APIs:
     - Use connectAnonymously in parallelsearch example.

   * Refactorings to adapt to Twisted/Nevow APIs:
     - Nevow ISerializable is deprecated.
     - ctx.{allPatterns,patternGenerator} are now called
       ctx.tag.allPatterns etc.
     - all IRequest APIs take a context.
     - switch from getDynamicChild to childFactory.
     - addSlash where appropriate.
     - return URLs instead of explicit redirects.
     - switch from renderHTTP to child_.
     - switch from locateChild to childFactory.
     - Twisted >1.3 moves SRVConnector to twisted.names.srvconnect.

   * Bugfixes:
     - Fix BER length encoding for lengths greater than 127, add unit
       tests.
     - Make many __repr__'s work even when __init__ failed.
     - Make sure every LDAP wire class takes a tag argument.
     - Make LDAPDelRequest also understand keyword argument value, as
       that is what LDAPString uses.
     - Fix and test handling of unknown match types.
     - Fix and unit test saltless non-client setPassword.
     - Fix DistinguishedName order comparison.
     - Make sure configuration does not interfere with the lmPasswords in
       the unit tests.
     - Make nevow data access to LDAP entry attributes work.
     - Add items() to LDAPEntry IContainer adapter's attributes child;
       webui search needs it.
     - Webui edit can now edit attributes that are in the RDN. Closes:
       ldaptor#5.
     - Improve handling of missing baseDN in configuration.

   * Cleanups:
     - Remove dead code.
     - Remove the hack-and-slashed RFC file that served as a TODO note.
     - Override IOPump to pass around more than one byte at a time, saves
       >10 seconds in unit tests and protocol decoding of partial messages
       is unit tested elsewhere anyway.
     - Improve ldaptor.testutil error messages, accept any true/false value
       and not just 1 and 0.
     - Clean up LDAPServer.handleUnknown.
     - Prettify LDAPMessage.__repr__
     - Prettify LDAPResult.__repr__
     - If ldapsyntax.LDAPEntryWithClient.search gets a bad response from
       the LDAP server, raise a real exception and not an assert.
     - When converting delta Modifications to LDAP, convert them to basic
       data types for easier debugging and unit testing.
     - Be consistent and use "ctx" everywhere in webui change_password.
     - Add nevow renderer that produces zebra tables.
     - Make ldapsyntax.LDAPEntryWithClient.move() accept strings etc. as
       newDN, add unit test.
     - Make epydoc happy.
     - Simplify ldap-intro document generation.

   * Packaging:
     - Depend on Nevow v0.3.0 or later.
     - Depend on Twisted v1.3.0 or later.
     - Switch to CDBS.
     - Add an ldaptor-common package to contain conffiles.
     - Run unit tests before building debs.
     - Include the unit tests in the distributed files.

   * Administrivia:
     - Add TODO notes.
     - Update ignore file lists to match currently generated files.
     - Export dia files to format png-libart, not just png. This makes the
       export reliable. Hint from Debian bug#275959.

  -- Tommi Virtanen <tv at debian.org>  Fri, 10 Dec 2004 17:39:36 +0200



From foom at fuhm.net  Fri Mar 11 11:55:31 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 11 Mar 2005 11:55:31 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <20050311085952.GK26348@opteron.random>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
	<20050311085952.GK26348@opteron.random>
Message-ID: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>

On Mar 11, 2005, at 3:59 AM, Andrea Arcangeli wrote:
> Thanks for the explanation. I've also got those messages, could you 
> post
> the patch so I can apply it to pyOpenSSL until it's merged? Thanks.

Here ya go. The last file is actually an unrelated patch that lets you 
pass None as the verify callback instead of using an empty lambda.

James

Index: src/ssl/connection.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/connection.c,v
retrieving revision 1.28
diff -u -r1.28 connection.c
--- src/ssl/connection.c        6 Aug 2004 10:21:56 -0000       1.28
+++ src/ssl/connection.c        23 Feb 2005 02:42:29 -0000
@@ -756,6 +756,43 @@
      return Py_None;
  }

+static char ssl_Connection_get_shutdown_doc[] = "\n\
+Get shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be empty\n\
+Returns:   The shutdown state, a bitmask of SENT_SHUTDOWN, 
RECEIVED_SHUTDOWN.\n\
+";
+static PyObject *
+ssl_Connection_get_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    if (!PyArg_ParseTuple(args, ":get_shutdown"))
+        return NULL;
+
+       return PyInt_FromLong((long)SSL_get_shutdown(self->ssl));
+}
+
+static char ssl_Connection_set_shutdown_doc[] = "\n\
+Set shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be\n\
+             shutdown state - bitmask of SENT_SHUTDOWN, 
RECEIVED_SHUTDOWN.\n\
+Returns:   None\n\
+";
+static PyObject *
+ssl_Connection_set_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    int shutdown;
+
+    if (!PyArg_ParseTuple(args, "i:set_shutdown", &shutdown))
+        return NULL;
+
+       SSL_set_shutdown(self->ssl, shutdown);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
  static char ssl_Connection_state_string_doc[] = "\n\
  Get a verbose state description\n\
  \n\
@@ -888,6 +925,8 @@
      ADD_METHOD(makefile),
      ADD_METHOD(get_app_data),
      ADD_METHOD(set_app_data),
+    ADD_METHOD(get_shutdown),
+    ADD_METHOD(set_shutdown),
      ADD_METHOD(state_string),
      ADD_METHOD(sock_shutdown),
      ADD_METHOD(get_peer_certificate),
Index: src/ssl/ssl.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/ssl.c,v
retrieving revision 1.12
diff -u -r1.12 ssl.c
--- src/ssl/ssl.c       10 Aug 2004 21:42:51 -0000      1.12
+++ src/ssl/ssl.c       23 Feb 2005 02:42:30 -0000
@@ -180,6 +180,10 @@
      PyModule_AddIntConstant(module, "OP_NETSCAPE_CA_DN_BUG", 
SSL_OP_NETSCAPE_CA_DN_BUG);
      PyModule_AddIntConstant(module, 
"OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG", 
SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG);

+       /* For SSL_set_shutdown */
+    PyModule_AddIntConstant(module, "SENT_SHUTDOWN", 
SSL_SENT_SHUTDOWN);
+    PyModule_AddIntConstant(module, "RECEIVED_SHUTDOWN", 
SSL_RECEIVED_SHUTDOWN);
+
      dict = PyModule_GetDict(module);
      if (!init_ssl_context(dict))
          goto error;
Index: src/ssl/context.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/context.c,v
retrieving revision 1.17
diff -u -r1.17 context.c
--- src/ssl/context.c   6 Aug 2004 10:21:56 -0000       1.17
+++ src/ssl/context.c   23 Feb 2005 02:42:29 -0000
@@ -562,8 +562,8 @@

      if (!PyArg_ParseTuple(args, "iO:set_verify", &mode, &callback))
          return NULL;
-
-    if (!PyCallable_Check(callback))
+
+    if (callback != Py_None && !PyCallable_Check(callback))
      {
          PyErr_SetString(PyExc_TypeError, "expected PyCallable");
          return NULL;
@@ -572,8 +572,11 @@
      Py_DECREF(self->verify_callback);
      Py_INCREF(callback);
      self->verify_callback = callback;
-    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
-
+       if (callback == Py_None)
+               SSL_CTX_set_verify(self->ctx, mode, NULL);
+       else
+               SSL_CTX_set_verify(self->ctx, mode, 
global_verify_callback);
+
      Py_INCREF(Py_None);
      return Py_None;
  }





From glyph at divmod.com  Fri Mar 11 12:14:25 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 11 Mar 2005 12:14:25 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>	<20050311085952.GK26348@opteron.random>
	<7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
Message-ID: <4231D1F1.4010509@divmod.com>

James Y Knight wrote:

> Here ya go. The last file is actually an unrelated patch that lets you 
> pass None as the verify callback instead of using an empty lambda.

As long as you're writing unrelated patches for PyOpenSSL, how about 
adding an accessor for the expiration date of a certificate? :)



From jason at smileproject.com  Fri Mar 11 16:31:21 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Fri, 11 Mar 2005 16:31:21 -0500
Subject: [Twisted-Python] twisted installation mac
Message-ID: <200503111631.AA5112090@mail.smileproject.com>

Hi, 

I am attempting to install twisted on os x.3.  I did not find the package in the package manager as the installation instructions suggest.  I found this thread here:  http://twistedmatrix.com/pipermail/twisted-python/2005-February/009613.html - 
but it does not state what installation to use.  Can someone please point me in the right direction?

Thank You, 
J 



From jadestorm at nc.rr.com  Fri Mar 11 16:53:03 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Fri, 11 Mar 2005 16:53:03 -0500 (EST)
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <200503111631.AA5112090@mail.smileproject.com>
References: <200503111631.AA5112090@mail.smileproject.com>
Message-ID: <36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>

If you are a fink user, I build a fink package for twisted. 
http://fink.sourceforge.net/
http://fink.sourceforge.net/pdb/search.php?summary=twisted

(it's in the unstable tree though)

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> Hi,
>
> I am attempting to install twisted on os x.3.  I did not find the package
> in the package manager as the installation instructions suggest.  I found
> this thread here:
> http://twistedmatrix.com/pipermail/twisted-python/2005-February/009613.html
> -
> but it does not state what installation to use.  Can someone please point
> me in the right direction?
>
> Thank You,
> J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From jason at smileproject.com  Fri Mar 11 17:15:36 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Fri, 11 Mar 2005 17:15:36 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>
References: <200503111631.AA5112090@mail.smileproject.com>
	<36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>
Message-ID: <90a1cef53afabc9e2d990be85b9dede3@smileproject.com>

Thanks - but  I am still a bit stunted on the linux lingo.  Is this  
straight forward?

J


On Mar 11, 2005, at 4:53 PM, Daniel Henninger wrote:

> If you are a fink user, I build a fink package for twisted.
> http://fink.sourceforge.net/
> http://fink.sourceforge.net/pdb/search.php?summary=twisted
>
> (it's in the unstable tree though)
>
> Daniel
>
> --  
> "The most addictive drug in the world is music."
>      - The Lost Boyz
>
>> Hi,
>>
>> I am attempting to install twisted on os x.3.  I did not find the  
>> package
>> in the package manager as the installation instructions suggest.  I  
>> found
>> this thread here:
>> http://twistedmatrix.com/pipermail/twisted-python/2005-February/ 
>> 009613.html
>> -
>> but it does not state what installation to use.  Can someone please  
>> point
>> me in the right direction?
>>
>> Thank You,
>> J
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>




From jarrod.roberson at gmail.com  Fri Mar 11 17:51:41 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 11 Mar 2005 17:51:41 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <200503111631.AA5112090@mail.smileproject.com>
References: <200503111631.AA5112090@mail.smileproject.com>
Message-ID: <2389d47305031114516a7a4aee@mail.gmail.com>

just get the latest stable version 1.3 and all you have to do is run
the setup.py to install it.

or you can do as I have had to and get the latest build from the
subversion repository and just install that.

Very simple and very straight foward with either way, once you get it
un-tar/zipped just cd to where ever the setup.py program is and

sudo setup.py all install

it will take care of installing itself in the correct places



From jarrod.roberson at gmail.com  Fri Mar 11 18:31:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 11 Mar 2005 18:31:44 -0500
Subject: [Twisted-Python] sending queries and responses with the new dns
	module
Message-ID: <2389d47305031115312c629933@mail.gmail.com>

can someone give me a quick code snippet on how to say construct and
send a simple query and construct and send a simple response using the
new dns module?

I have a nice mdns listener written and I can see all the traffic
flying around but I have not had any luck in sending queries or
responses . . .



From mcfletch at rogers.com  Fri Mar 11 19:37:50 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 11 Mar 2005 19:37:50 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <423239DE.9050208@rogers.com>

Christopher Armstrong wrote:
...

>Despite the crappy web presence, this is a real 2.0 prerelease. I will
>try to get this published to the web site by this weekend.  Please
>download anything relevant to you and give it a try, and be sure to
>post your experience to this thread even if it went smoothly.
>  
>
Built fine on FreeBSD, but I wound up having a problem with the older 
version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible with 
Twisted (crashed somewhere deep in twisted trying to manipulate 
something in the interface module IIRC), once the old Zope was removed 
and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything 
ran fine.

Have fun,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From radeex at gmail.com  Fri Mar 11 20:07:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Mar 2005 12:07:08 +1100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <423239DE.9050208@rogers.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<423239DE.9050208@rogers.com>
Message-ID: <60ed19d4050311170745302526@mail.gmail.com>

On Fri, 11 Mar 2005 19:37:50 -0500, Mike C. Fletcher
<mcfletch at rogers.com> wrote:
> Built fine on FreeBSD, but I wound up having a problem with the older
> version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible with
> Twisted (crashed somewhere deep in twisted trying to manipulate
> something in the interface module IIRC), once the old Zope was removed
> and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything
> ran fine.

Thanks a lot, I'll mention this in README files.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From foom at fuhm.net  Fri Mar 11 20:52:25 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 11 Mar 2005 20:52:25 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050311170745302526@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<423239DE.9050208@rogers.com>
	<60ed19d4050311170745302526@mail.gmail.com>
Message-ID: <409dffc50df69259c336c03ec14b7566@fuhm.net>


On Mar 11, 2005, at 8:07 PM, Christopher Armstrong wrote:

> On Fri, 11 Mar 2005 19:37:50 -0500, Mike C. Fletcher
> <mcfletch at rogers.com> wrote:
>> Built fine on FreeBSD, but I wound up having a problem with the older
>> version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible 
>> with
>> Twisted (crashed somewhere deep in twisted trying to manipulate
>> something in the interface module IIRC), once the old Zope was removed
>> and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything
>> ran fine.
>
> Thanks a lot, I'll mention this in README files.

Twisted requires Zope-Interface >= 3.0.1. (it will *mostly* work with 
previous versions, but there is a subtle bug). We need to mention that. 
I don't know what version of ZopeX includes that version, but if we're 
going to tell people about Zope at all (vs Zope-Interface), we need to 
make sure to get the version right.

James




From foom at fuhm.net  Sat Mar 12 01:44:45 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Mar 2005 01:44:45 -0500
Subject: [Twisted-Python] NEWS file
Message-ID: <90de319edead3c540010341e838bbf66@fuhm.net>

Devs, please read the NEWS file, and if there's anything missing, add  
it.

http://svn.twistedmatrix.com/cvs/trunk/twisted/topfiles/NEWS? 
view=auto&rev=13133&root=Twisted

James




From radeex at gmail.com  Sat Mar 12 02:13:26 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Mar 2005 18:13:26 +1100
Subject: [Twisted-Python] NEWS file
In-Reply-To: <90de319edead3c540010341e838bbf66@fuhm.net>
References: <90de319edead3c540010341e838bbf66@fuhm.net>
Message-ID: <60ed19d4050311231311da2ad0@mail.gmail.com>

On Sat, 12 Mar 2005 01:44:45 -0500, James Y Knight <foom at fuhm.net> wrote:
> Devs, please read the NEWS file, and if there's anything missing, add
> it.
> 
> http://svn.twistedmatrix.com/cvs/trunk/twisted/topfiles/NEWS?
> view=auto&rev=13133&root=Twisted

I split out all of the non-core news out of that file into individual
NEWS files for each project. That file notw only has the twisted core
news. See twisted/yourproj/topfiles/NEWS.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From jason at smileproject.com  Sat Mar 12 08:15:13 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Sat, 12 Mar 2005 08:15:13 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <2389d47305031114516a7a4aee@mail.gmail.com>
References: <200503111631.AA5112090@mail.smileproject.com>
	<2389d47305031114516a7a4aee@mail.gmail.com>
Message-ID: <3217d6aa4490a3165568af57f15420c6@smileproject.com>

Thanks - that worked.

(I did not include the "all" part in the command - but it seems fine as 
is).

J


On Mar 11, 2005, at 5:51 PM, jarrod roberson wrote:

> just get the latest stable version 1.3 and all you have to do is run
> the setup.py to install it.
>
> or you can do as I have had to and get the latest build from the
> subversion repository and just install that.
>
> Very simple and very straight foward with either way, once you get it
> un-tar/zipped just cd to where ever the setup.py program is and
>
> sudo setup.py all install
>
> it will take care of installing itself in the correct places
>




From andrea at cpushare.com  Sat Mar 12 08:21:39 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 12 Mar 2005 14:21:39 +0100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
	<20050311085952.GK26348@opteron.random>
	<7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
Message-ID: <20050312132139.GG9270@opteron.random>

On Fri, Mar 11, 2005 at 11:55:31AM -0500, James Y Knight wrote:
> Here ya go. The last file is actually an unrelated patch that lets you 
> pass None as the verify callback instead of using an empty lambda.

Thanks a lot, works fine, I verified loseConnection now calls
set/get/set shutdown with printf.

I'll bug the pyopenssl maintainer too about this.

This is the patch against CVS head.

Index: pyOpenSSL/src/ssl/connection.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/connection.c,v
retrieving revision 1.28
diff -u -p -r1.28 connection.c
--- pyOpenSSL/src/ssl/connection.c	6 Aug 2004 10:21:56 -0000	1.28
+++ pyOpenSSL/src/ssl/connection.c	12 Mar 2005 13:19:13 -0000
@@ -756,6 +756,43 @@ ssl_Connection_set_app_data(ssl_Connecti
     return Py_None;
 }
 
+static char ssl_Connection_get_shutdown_doc[] = "\n\
+Get shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be empty\n\
+Returns:   The shutdown state, a bitmask of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.\n\
+";
+static PyObject *
+ssl_Connection_get_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    if (!PyArg_ParseTuple(args, ":get_shutdown"))
+        return NULL;
+
+    return PyInt_FromLong((long)SSL_get_shutdown(self->ssl));
+}
+
+static char ssl_Connection_set_shutdown_doc[] = "\n\
+Set shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be\n\
+             shutdown state - bitmask of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.\n\
+Returns:   None\n\
+";
+static PyObject *
+ssl_Connection_set_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    int shutdown;
+
+    if (!PyArg_ParseTuple(args, "i:set_shutdown", &shutdown))
+        return NULL;
+
+    SSL_set_shutdown(self->ssl, shutdown);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
 static char ssl_Connection_state_string_doc[] = "\n\
 Get a verbose state description\n\
 \n\
@@ -888,6 +925,8 @@ static PyMethodDef ssl_Connection_method
     ADD_METHOD(makefile),
     ADD_METHOD(get_app_data),
     ADD_METHOD(set_app_data),
+    ADD_METHOD(get_shutdown),
+    ADD_METHOD(set_shutdown),
     ADD_METHOD(state_string),
     ADD_METHOD(sock_shutdown),
     ADD_METHOD(get_peer_certificate),
Index: pyOpenSSL/src/ssl/context.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/context.c,v
retrieving revision 1.17
diff -u -p -r1.17 context.c
--- pyOpenSSL/src/ssl/context.c	6 Aug 2004 10:21:56 -0000	1.17
+++ pyOpenSSL/src/ssl/context.c	12 Mar 2005 13:19:13 -0000
@@ -244,7 +244,7 @@ ssl_Context_set_passwd_cb(ssl_ContextObj
     if (!PyArg_ParseTuple(args, "O|O:set_passwd_cb", &callback, &userdata))
         return NULL;
 
-    if (!PyCallable_Check(callback))
+    if (callback != Py_None && !PyCallable_Check(callback))
     {
         PyErr_SetString(PyExc_TypeError, "expected PyCallable");
         return NULL;
@@ -572,7 +572,10 @@ ssl_Context_set_verify(ssl_ContextObj *s
     Py_DECREF(self->verify_callback);
     Py_INCREF(callback);
     self->verify_callback = callback;
-    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
+    if (callback == Py_None)
+	    SSL_CTX_set_verify(self->ctx, mode, NULL);
+    else
+	    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
 
     Py_INCREF(Py_None);
     return Py_None;
Index: pyOpenSSL/src/ssl/ssl.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/ssl.c,v
retrieving revision 1.12
diff -u -p -r1.12 ssl.c
--- pyOpenSSL/src/ssl/ssl.c	10 Aug 2004 21:42:51 -0000	1.12
+++ pyOpenSSL/src/ssl/ssl.c	12 Mar 2005 13:19:13 -0000
@@ -180,6 +180,10 @@ do {                                    
     PyModule_AddIntConstant(module, "OP_NETSCAPE_CA_DN_BUG", SSL_OP_NETSCAPE_CA_DN_BUG);
     PyModule_AddIntConstant(module, "OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG", SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG);
 
+    /* For SSL_set_shutdown */
+    PyModule_AddIntConstant(module, "SENT_SHUTDOWN", SSL_SENT_SHUTDOWN);
+    PyModule_AddIntConstant(module, "RECEIVED_SHUTDOWN", SSL_RECEIVED_SHUTDOWN);
+
     dict = PyModule_GetDict(module);
     if (!init_ssl_context(dict))
         goto error;

You folks are doing a great job. Keep up the great work!



From remy.cool at smartology.nl  Sat Mar 12 10:49:12 2005
From: remy.cool at smartology.nl (Remy C Cool)
Date: Sat, 12 Mar 2005 16:49:12 +0100
Subject: [Twisted-Python] Design question: xmlrpc server - deferreds - adbapi
Message-ID: <42330F78.1080300@smartology.nl>

Hello Twisters,

As a Twisted newbie, I'm not sure if, what i've coded is the Twisted way 
to go.

In this test, I've created a simple XMLRPC server

def main():
     # initialize factory
     factory = server.Site(XMLRPC())
     factory.resource.base = factory

     # initialize server
     reactor.listenTCP(8000, factory)

     try:
         try:
             reactor.run()
         except KeyboardInterrupt:
             print 'CTRL-C received, shutting down server.'
         except Exception, err:
             print 'Problem with running server: %s' % err
     finally:
         reactor.stop()


# The XMLRPC class:

class XMLRPC(xmlrpc.XMLRPC):

     def xmlrpc_test(self, text):
	d = defer.maybeDeferred(test, text)
         return d


# The test function

def test(text):
     # do something with the text
     return dbPool.pg.runInteraction(getTestData, text)	


# The getTestData function

def getTestData(cursor, text):
    # do queries using cursor
    return result

dbPool is a class which sets up dbpools for different databases 
according to a config file.

This setup seems to work, but I'm not sure about the way I'm using the 
deferreds.

Comments welcome :)

Grtz,
Remi Cool



From alengarbage at yahoo.com  Sat Mar 12 11:18:28 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sat, 12 Mar 2005 08:18:28 -0800 (PST)
Subject: [Twisted-Python] deferToThread()
In-Reply-To: 6667
Message-ID: <20050312161828.20788.qmail@web31509.mail.mud.yahoo.com>

Can someone explain why the following example (lifted
straight out of
http://twistedmatrix.com/documents/current/howto/threading)
doesn't work?

from twisted.internet import threads

def doLongCalculation():
  #time.sleep(3)
  return 3

def printResult(x):
  print "deferred returned "+str(x)

d = threads.deferToThread(doLongCalculation)
d.addCallback(printResult)
print "just waiting for deferred..."


Running the above, with or without time.sleep(),
results in a hanging process.  When run "just waiting
for deferred..." prints but the callback is never
invoked and the process hangs.

I'm using twisted 1.3, python 2.3.4 under Linux (FC3).

  Lenny G


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From alengarbage at yahoo.com  Sat Mar 12 11:58:40 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sat, 12 Mar 2005 08:58:40 -0800 (PST)
Subject: [Twisted-Python] deferToThread()
In-Reply-To: 6667
Message-ID: <20050312165840.76456.qmail@web31511.mail.mud.yahoo.com>

Answer: the example seems to be incomplete.  The
following changes make things work:


from twisted.internet import reactor, threads
                                                      
                         
def doLongCalculation(y):
  #time.sleep(3)
  print "returning from doLongCalc"
  return 3
                                                      
                         
def printResult(x):
  print "deferred returned "+str(x)
  reactor.stop()
                                                      
                         
d = threads.deferToThread(doLongCalculation, 4)
d.addCallback(printResult)
print "just waiting for deferred..."
reactor.run()


  It isn't clear from the docs that deferToThread
relies on reactor.run() -- the howto states "The
utility methods are not part of the
twisted.internet.reactor APIs, but are implemented in
twisted.internet.threads".  But now, it seems
perfectly clear to me now that, "of course you need
the reactor."   Maybe the examples in the howto should
be updated to make this more clear?  It wasn't until I
found a snippet of code at
http://pig.slug.org.au/talks/Twisted2/slides.html that
I was able to sort this out.

  -- Lenny G


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> Can someone explain why the following example
> (lifted
> straight out of
>
http://twistedmatrix.com/documents/current/howto/threading)
> doesn't work?
> 
> from twisted.internet import threads
> 
> def doLongCalculation():
>   #time.sleep(3)
>   return 3
> 
> def printResult(x):
>   print "deferred returned "+str(x)
> 
> d = threads.deferToThread(doLongCalculation)
> d.addCallback(printResult)
> print "just waiting for deferred..."
> 
> 
> Running the above, with or without time.sleep(),
> results in a hanging process.  When run "just
> waiting
> for deferred..." prints but the callback is never
> invoked and the process hangs.
> 
> I'm using twisted 1.3, python 2.3.4 under Linux
> (FC3).
> 
>   Lenny G



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From paul at ref.nmedia.net  Sat Mar 12 23:49:31 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Sat, 12 Mar 2005 20:49:31 -0800
Subject: [Twisted-Python] App design / Twisted Logging?
In-Reply-To: <E1D9hQW-0000pT-01@pyramid.twistedmatrix.com>
References: <E1D9hQW-0000pT-01@pyramid.twistedmatrix.com>
Message-ID: <20050313044931.GB24296@ref.nmedia.net>

> >> -> Do I need a thread for every copy/move operation (large 
> >files via network)?
> >
> >Nope. That's the beauty of twisted code. I've written this 
> >sort of handling
> >multiple packet trains many times. Write a protocol.
> 
> Hm, sounds like using FTP and not shutil.move via system's SMB?
> Or is there already something better in twisted?
> 
> If I'd write my own protocol to wrap shutil.move,
> the operation would be blocking because I don't
> work on file block level and the protocol doesn't make sense.
> I'm not feeling like writing file transfer code on file block level.
> Or do you think it would be worth the hassle?

It is so darned easy to write your own protocols that there's really not
much point in reusing like you are attempting to do. Here's a simple
example:

from twisted.internet.protocol import Protocol, ClientFactory
from sys import stdout
from string import unpack

class FileXferProtocol(Protocol):
    """Handles receiving files. Fire off via the factory."""
    def dataReceived(self, data):
        if not hasattr(self, "filesize"):
            # First block of the file; get the final size
            self.filesize = unpack("!L", data[:4])
            data = data[4:]

        # Receiving blocks of the file
        self.openfile.write(data)
        self.recvdlen += len(data)
        if self.recvdlen == self.filesize:
            self.openfile.close()
            self.transport.loseConnection()
        return

class FileXferFactory(ClientFactory):
    """Creates protocols to receive files"""
    protocol = FileXferProtocol

    def __init__(self, filename):
        self.filename = filename
        self.openfile = file(filename)

if __name__ == '__main__':
    # First, create the factory protocol and initialize it
    f = FileXferFactory("tempfile")
    # Second, connect to a server to get a file (127.0.0.1:9999 in this case)
    reactor.connectTCP("127.0.0.1", 9999, f)
    reactor.run() # Call the reactor

You could get hung up on worrying about blocks and reassembly and whatnot
(and I have done so in the past), but why bother? About the only thing
necessary here is to install some sort of error checking. In the factory
code it might be appropriate to do some error checking (make sure the entire
file was received) and then to call the next piece of code (the file handler).

On the server side, simply read some bytes and shovel it onto the port. It
would look something like this:

class fileXferSend(Protocol):
    """Sends files"""
    def connectionMade(self):
        # The factory already set this up with a file to send
        self.openfile = open(self.filename)
        # Somewhat braindead code because the standard object won't give length
        self.openfile.seek(0,2)
        self.length = self.openfile.tell()
        # Start over
        self.openfile.seek(0, 0)
        block = self.openfile.read(500) # Prime the system
        self.transport.write(pack("!L", self.length) + block)
        reactor.callLater(0, self.sendBlocks)
    def sendBlocks(self):
        # Keep sending out blocks of the file until it is done
        block = self.openfile.read(1000)
        if len(block): # Keep repeating as long as there is data
            self.transport.write(block)
            reactor.callLater(0, self.sendBlocks)
        else:
            self.openfile.close()
        return

This works very easily because TCP already handles packet assembly and
ordering and checksums on all the blocks. So all you have to do is shovel
the data across the network. At least theoretically, you don't even have to
keep track of file length. Also, you could alternatively simply prepend a
byte at the beginning of the file. The byte could be say "C" for a
continuation or "E" for "eof of file". The code would work almost the
same. Or you could be very careful about monitoring the error codes that
come out of connectionLost to be sure whether it was a "normal" session
close from the host or a dropped session (error), and don't bother
implementing ANY sort of "find the end of the file" stuff.

> So not using DOM but per-line XML handling.
> Not that convenient, because I use only small bits
> of all the XML data that are spread all over the files,
> but I guess it would become better twisted code.

Perhaps. I'm not really familiar with minidom all that well. The above
code contains a perfect example of what I mean. If I had set the parameter
in the file.read() command to -1 or omitted it, then the .read() function
would have dumped the entire file into a string. Although this may have
serious memory implications, the basic problem is that it will also block
twisted while it is reading the entire file into memory. Instead, the above
code reads a chunk of file, sends a packet, and then returns to the reactor
in a short loop (reactor.callLater(0, ...)) which allows the reactor to
intersperse calls with other events.

> That's perhaps a general problem with twisted: There are great
> solutions for everything, but you need to know them in detail
> to know which fits your problem. Or you must know how you should
> reshape your problem to fit in some twisted solution...

Did you ever notice the same problem with basically every other framework
out there? I suggested that you read up on flows for a specific reason.
Flows allow you to do what you are suggesting in a very twisted way...you
can sequence your XML procedure so that you break it up into short bits of
execution that by themselves are effectively non-blocking. That is the
"twisted way". Flows let you manage this situation when you have a full
blown state machine, not just a linear sequence of steps. BUT, the 
documentation for Flows and Deferred's is really good at explaining how
to break your code up into small non-blocking pieces. So I wasn't really
pushing you to USE the Flows module, but to use the concepts that are in
it (just read the introductory parts to get the idea).


> I know twisted "does it all"(TM), but was is "it"? ;-)

That is the trouble with frameworks. WxWidgets is one of the best GUI
frameworks available that works well with Python (via wxPython). But
interestingly enough, wxWidgets includes it's own sockets library! However,
before you ask, it is not easy to get wxPython (and wxWidgets) to play well
with twisted. It is also reactor based, but unlike Python, the reactor in
wxWidgets is very unfriendly to all other reactor-based systems.

> I'm just trying to write a simple directory watcher (I need
> this at every corner of my app), Patrick Lauber wrote an answer
> to my initial question on that, but that wasn't really what I needed.
>
> It works so far that it calls a deferred callback if it gets a
> notify on a new/changed file, but only once; next time I get an
> "AlreadyCalledError" - looks like I don't yet understand deferreds.

Common error. A deferred is a promise to call back at some time in the
future, but only once (no more, no less)! Quite often,
reactor.callLater(0, xxx) is what you
want to do. On the face of it, reactor.callLater() appears to be a timer
mechanism. But what happens if you call it with the twisted idiom
reactor.callLater(0, function, parameters)?

This is a very common twisted idiom. What it does is schedule another
function to run immediately when the reactor is allowed to schedule (assuming
that there aren't several more functions that are already ready to run...
otherwise it waits in line). And (subject to buffer limits on pending calls),
you can call a function via the reactor as many times as you want.

Otherwise, your code can call back again and receive another
deferred, and eventually another callback. Also, you may be looking instead
for "deferredList". For instance, let's say that you are processing a list
of files in parallel. In threading-based code, you'd fire off a thread for
each file and then wait for each one to return (or perhaps never wait). In
deferred's, you'd do something similar:

dlist = list()
for i in filelist:
    dlist.append(handleFile(i) # handleFile returns a deferred
return defer.deferredList(dlist)

This routine will return a single Deferred, but the callback results will be
a list of the results (and their errback/callback status) from ALL of the
handleFile() calls.

> At the moment it's inherited from pb.Root, because I'll need it to
> run remotely sometimes, but perhaps it would be better to use a
> service or something else -- it should run "all the time" if not
> stopped and call a callback for every file.
> I attached the file, perhaps someone can point out my biggest mistakes?

pb is useful if you intend on using the Perspective Broker in the future
for twisted's own version of RPC's. If not, it is probably wise to stay
away. PB makes it very easy to refactor your code into PB form later on
if you so desire. My only problem with it is that you REALLY need to
control both ends of the pipe and you have to live within the limitations
of TCP/IP (a big limit in the certain P2P code which is better off with
very light weight RPC's).

> >first but once you get used to it, deferred's seem just well...obvious.
> 
> I hope to get into that higher state of mind soon. ;-)

Everywhere that you anticipate your code blocking on a procedure call,
the code itself needs to return a deferred early on (before it blocks). Then
later on, it uses the deferred to pass a result. Frequently, you will have
bits of code that read something like this:

d = defer.Deferred()
reactor.callLater(0.00001, nextStep, d)
return d

def nextStep(d):
    ...does something...
    d.callback(real return)

Then the caller commonly does something like:
state.x = <state is a utility class to pass around function state>
d=callDeferredCode(xxx)
d.addcallback(responseHandler, state)
return

def responseHandler(response, state):
    ...

This totally decouples the two routines. Essentially, the calling function
and the called function coordinate an orderly shutdown of the calling
function's code. Then the callee goes about it's business of running some
lengthy function (perhaps waiting on network transmissions) before finally
returning with a value in hand. The caller then picks up via the second
function and the saved state.

This pattern is a bit ugly but at least it is reasonably readable and it
gets around so many ugly details. Once you've written a couple of these,
you'll start to think about when and where and how to place the deferred
and reactor.callLater calls appropriately. At first, it's just a bit of
a challenge wrapping your head around the concept of continuations.

Oh...and the state thing...this gets mentioned once in a while and once
you use it, it is highly intuitive but new users frequently miss the
concept. First, create a "utility class":

class Utility:
    pass

What good is an empty class? Plenty! Within a class, you can always use
the self object for this. But outside of that, use the utility class as
a temporary storage bin with named slots. By this I mean,

state = Utility()

state.filename = "the file I don't want to forget about"
state.status = "The number I'll need later"


Also one other thing...once you create a deferred (defer.Deferred), you
can chain off of it as much as you want in both the caller and callee.
For instance, the callee may not bother creating the deferred but may instead
make calls to a deeper function and simply addCallback() before returning
the SAME deferred variable to the caller. Then when the deferred actually
fires, it can pre-proces the returned results before returning them to the
top-level caller.

Clear as much, right? Well, this situation happens for instance if you have
a function to clean up/process the raw results from a network I/O call
before returning the answers to a higher level. For instance, if you are
writing your own RPC handler to use UDP packets (which I've done), the
lowest level is responsible for handling network I/O. The next level up
is responsible for detecting and handling retransmissions. The next level
up is responsible for splitting/concatenating data that is too big to
fit inside a single packet. And the next level up is responsible for doing
a version of pickle/unpickle. So that the higher level routines communicate
essentially with "rpcSend(method, param1, param2, param3...) calls while the
lower level routines completely obscure the details (and are in turn
obscured from the lower level details of the protocol).

> I enjoyed being able to switch the logging output, e.g. from file to
> database or email per config file without the need to go into the code.
> I don't feel like re-inventing the wheel, but as Glyph pointed out,
> the config syntax of standard logging is just ugly and messy; the
> config syntax of log4[j|perl|net] ist much more logical. Perhaps
> someone should write a log4twisted module...

More likely, just a log4python, with sufficient room that log4twisted doesn't
really require too much. For instance, log4python can use the .next() call
to iterate over log entries (when reading from it). twisted code will just
use this interface (instead of .dumpEntireLog) to sanely read the log in
chunks.



From D.Sinang at spitech.com  Sun Mar 13 01:40:42 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Sun, 13 Mar 2005 14:40:42 +0800
Subject: [Twisted-Python] Choosing /reactors
Message-ID: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>

Hello,
 
I installed Twisted on a Mandrake Linux box and ran some test code
before reading on the Twisted website that the first thing I must do is
install my preferred "reactor".
 
So I assume my running my test code installed the default "reactor",
which is for select().
 
I've subsequently installed the poll() reactor, but am unsure how to
make Twisted use it or make it its default reactor().
 
Can anybody on this list help me ?
 
Also, is there a way to uninstall a reactor ?
 
Regards,

Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050313/224fcfd8/attachment.htm 

From radeex at gmail.com  Sun Mar 13 03:43:13 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 13 Mar 2005 19:43:13 +1100
Subject: [Twisted-Python] Choosing /reactors
In-Reply-To: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>
Message-ID: <60ed19d40503130043557eb132@mail.gmail.com>

On Sun, 13 Mar 2005 14:40:42 +0800, Sinang, Danny <D.Sinang at spitech.com> wrote:
>  
> Hello, 
>   
> I installed Twisted on a Mandrake Linux box and ran some test code before
> reading on the Twisted website that the first thing I must do is install my
> preferred "reactor". 
>   
> So I assume my running my test code installed the default "reactor", which
> is for select(). 
>   
> I've subsequently installed the poll() reactor, but am unsure how to make
> Twisted use it or make it its default reactor(). 
>   
> Can anybody on this list help me ? 
>   
> Also, is there a way to uninstall a reactor ? 

It's not so much "install" as "use". To specify a reactor to use with
twistd, for example, pass the --reactor argument. If you're not using
twistd, then make sure you "from twisted.internet import yourreactor;
yourreactor.install()" before anything imports
twisted.internet.reactor.

http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html
for more information.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrea at cpushare.com  Sun Mar 13 14:57:09 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sun, 13 Mar 2005 20:57:09 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050222171230.GN7247@opteron.random>
References: <20050221213644.GD7247@opteron.random>
	<20050222033322.12282.2037604333.divmod.quotient.9663@ohm>
	<20050222034843.GE7247@opteron.random>
	<20050222043540.GX1374@localhost.localdomain>
	<20050222171230.GN7247@opteron.random>
Message-ID: <20050313195709.GR9270@opteron.random>

This patch adds a check for transport.disconnecting to the int16/32
protocols, so that they don't keep firing stringReceived callbacks after
calling transport.loseConnection (in line with the linereceiver
protocol). This also adds the methods for pauseproducer in line with the
linereceiver protocol (as per previous patch in this thread).

If these two fixes to int32/16 are correct please apply to SVN.

Thanks.

Index: Twisted/twisted/protocols/basic.py
===================================================================
--- Twisted/twisted/protocols/basic.py	(revision 13177)
+++ Twisted/twisted/protocols/basic.py	(working copy)
@@ -166,9 +166,23 @@
         """
         return error.ConnectionLost('Line length exceeded')
     
+class PauseProducer(object):
+    paused = False
 
+    def pauseProducing(self):
+        self.paused = True
+        self.transport.pauseProducing()
 
-class LineReceiver(protocol.Protocol):
+    def resumeProducing(self):
+        self.paused = False
+        self.transport.resumeProducing()
+        self.dataReceived('')
+
+    def stopProducing(self):
+        self.paused = True
+        self.transport.stopProducing()
+
+class LineReceiver(protocol.Protocol, PauseProducer):
     """A protocol that receives lines and/or raw data, depending on mode.
     
     In line mode, each line that's received becomes a callback to
@@ -188,7 +202,6 @@
     __buffer = ''
     delimiter = '\r\n'
     MAX_LENGTH = 16384
-    paused = False
     
     def clearLineBuffer(self):
         """Clear buffered data."""
@@ -279,21 +292,8 @@
         """
         return self.transport.loseConnection()
 
-    def pauseProducing(self):
-        self.paused = True
-        self.transport.pauseProducing()
 
-    def resumeProducing(self):
-        self.paused = False
-        self.dataReceived('')
-        self.transport.resumeProducing()
-
-    def stopProducing(self):
-        self.paused = True
-        self.transport.stopProducing()
-
-
-class Int32StringReceiver(protocol.Protocol):
+class Int32StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int32-prefixed strings.
 
     An int32 string is a string prefixed by 4 bytes, the 32-bit length of
@@ -314,7 +314,7 @@
         """Convert int32 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 3:
+        while len(self.recvd) > 3 and not self.paused and not self.transport.disconnecting:
             length ,= struct.unpack("!i",self.recvd[:4])
             if length > self.MAX_LENGTH:
                 self.transport.loseConnection()
@@ -331,7 +331,7 @@
         self.transport.write(struct.pack("!i",len(data))+data)
 
 
-class Int16StringReceiver(protocol.Protocol):
+class Int16StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int16-prefixed strings.
 
     An int16 string is a string prefixed by 2 bytes, the 16-bit length of
@@ -351,7 +351,7 @@
         """Convert int16 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 1:
+        while len(self.recvd) > 1 and not self.paused and not self.transport.disconnecting:
             length = (ord(self.recvd[0]) * 256) + ord(self.recvd[1])
             if len(self.recvd) < length+2:
                 break



From andrea at cpushare.com  Sun Mar 13 19:05:18 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Mon, 14 Mar 2005 01:05:18 +0100
Subject: [Twisted-Python] which dia error from lore
Message-ID: <20050314000518.GU9270@opteron.random>

mktap is spawning an error (which dia not found), this fixed it

Index: Twisted/twisted/lore/latex.py
===================================================================
--- Twisted/twisted/lore/latex.py	(revision 13178)
+++ Twisted/twisted/lore/latex.py	(working copy)
@@ -104,7 +104,7 @@
 
     baseLevel = 0
     try:
-        diaHack = not not os.popen('which dia').read()
+        diaHack = not not os.popen('which dia 2>/dev/null').read()
     except:
         # That's a no, then.
         diaHack = 0



From itamar at itamarst.org  Sun Mar 13 23:33:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 13 Mar 2005 23:33:19 -0500
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314000518.GU9270@opteron.random>
References: <20050314000518.GU9270@opteron.random>
Message-ID: <1110774799.2990.82.camel@sheriffpony>

Could you please report bugs and patches to the issue tracker?
twistedmatrix.com/bugs/. Otherwise they might get lost. Thanks!




From D.Sinang at spitech.com  Mon Mar 14 00:52:36 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Mon, 14 Mar 2005 13:52:36 +0800
Subject: [Twisted-Python] Maximum sockets open
Message-ID: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>

Hello,
 
Is there a maximum number of sockets that Twisted supports ? If so, what
is the maximum, how do I see what it's current value, and how to I set
it to another value ?
 
Regards,

Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050314/2ce60088/attachment.htm 

From alengarbage at yahoo.com  Mon Mar 14 01:38:01 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sun, 13 Mar 2005 22:38:01 -0800 (PST)
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: 6667
Message-ID: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>


A couple of questions about twisted.web server's
memory management:

1- Is it normal for the server process to consume
large amounts of memory (and never free it) if large
requests are sent?

2- Assuming the answer to #1 is 'no,' what might I be
doing wrong?  I have subclassed Resource and added it
to the Site tree with putChild.  My Resource subclass
processes mutlipart/form-data style file uploads.  It
looks to me like the Request object that is passed in
contains /all/ the data in the request.  So if the
client sends a 100MB file, server consumes 100MB of
memory.  What I'm seeing is that if I send small file
uploads, server never consumes more than about 30MB
(7MB resident).  If I send a single ~100MB file, usage
mushrooms to over 200MB (~140MB resident), and the
memory is never returned to the system.

3- Assuming the answer to #1 is 'yes,' what is the
correct way to architect a solution.  Do I need to
subclass web.resource.Resource or web.site.Request to
do my own management of memory (doing partial reads of
the incoming data)?  Or is there some other pattern
that I should be using rather than .web.server?


Note that I've run gc with DEBUG_LEAK trying to spot
any problems, and it doesn't report anything.

If a code snippet that reproduces the above would
help, I'd be happy to produce one.

  Thanks -- Lenny G.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 04:58:20 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 10:58:20 +0100
Subject: [Twisted-Python] App design / Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E65A@exchange-03.suedkurier.de>

>It is so darned easy to write your own protocols that there's 
>really not much point in reusing like you are attempting to do. 
>Here's a simple example:

Thank you VERY much for all the code, explanation, fish and the rest of the universe!

I propose someone put that as a howto onto the twisted site.

>> the config syntax of standard logging is just ugly and messy; the
>> config syntax of log4[j|perl|net] ist much more logical. Perhaps
>> someone should write a log4twisted module...
>More likely, just a log4python, with sufficient room that 

There's a log4py already (http://sourceforge.net/projects/log4py, http://www.its4you.at/english/log4py.html), but it never was as complete as the other log4xs and seems abandoned since 2003 in favour of standard logging.

>log4twisted doesn't really require too much.
>For instance, log4python can use the .next() call
>to iterate over log entries (when reading from it). twisted 
>code will just
>use this interface (instead of .dumpEntireLog) to sanely read 
>the log in chunks.

Would be nice, but the natural way in OSS is "if you need it, write it yourself", and I can't start any more projects - Python is only a secondary scene for me, I'm more involved in publishing (newspaper workflow, InDesign, PostScript, PDF, TeX) and religious stuff (Unitarian magazine editor and webmaster).

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 05:08:48 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 11:08:48 +0100
Subject: [Twisted-Python] twisted installation mac
Message-ID: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>

>just get the latest stable version 1.3 and all you have to do is run
>the setup.py to install it.

That didn't work for me (on my Mac at home), the build process didn't find a bin directory with all the needed scripts. I just copied them out of the tree and stripped the .py extension, had no time to test yet if it really works and if these were the right files. "t-im" was still missing, I deleted it in setup.py

But I guess there must be a way to avoid those nasty hacks.
Perhaps it's only my Mac that is too badly screwed up...

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From radeex at gmail.com  Mon Mar 14 05:17:56 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 14 Mar 2005 21:17:56 +1100
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>
Message-ID: <60ed19d40503140217dea9fca@mail.gmail.com>

On Mon, 14 Mar 2005 11:08:48 +0100, Henning.Ramm at mediapro-gmbh.de
<Henning.Ramm at mediapro-gmbh.de> wrote:
> >just get the latest stable version 1.3 and all you have to do is run
> >the setup.py to install it.
> 
> That didn't work for me (on my Mac at home), the build process didn't find a bin directory with all the needed scripts. I just copied them out of the tree and stripped the .py extension, had no time to test yet if it really works and if these were the right files. "t-im" was still missing, I deleted it in setup.py

Hrm... Are you _sure_ that was Twisted 1.3?
http://twistedmatrix.com/products/download ? For a while there SVN was
broken wrt inclusion of some bin scripts (should all be good now).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 05:35:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 11:35:16 +0100
Subject: [Twisted-Python] twisted installation mac
Message-ID: <F92274058556DE42B94B148EEFB9183949E660@exchange-03.suedkurier.de>

>> That didn't work for me (on my Mac at home), the build 
>process didn't find a bin directory with all the needed 
>scripts. I just copied them out of the tree and stripped the 
>.py extension, had no time to test yet if it really works and 
>if these were the right files. "t-im" was still missing, I 
>deleted it in setup.py
>
>Hrm... Are you _sure_ that was Twisted 1.3?
>http://twistedmatrix.com/products/download ? For a while there SVN was
>broken wrt inclusion of some bin scripts (should all be good now).

Absolutely. I never try CVS or SVN access if I don't need to.

Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From tv at twistedmatrix.com  Mon Mar 14 07:29:01 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 14 Mar 2005 14:29:01 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13111 - Fix process unit
	test when there is no twisted installed yet.
In-Reply-To: <6ffdda17ff3eac56d3a801542060361c@fuhm.net>
References: <E1D9VHc-0000NT-00@wolfwood>
	<6ffdda17ff3eac56d3a801542060361c@fuhm.net>
Message-ID: <4235838D.8030802@twistedmatrix.com>

James Y Knight wrote:
>> Fix process unit test when there is no twisted installed yet.
> We need to decide on a standard mechanism for doing this. Every test 
> that runs processes does it a *different* way now. At least on unix, 
> sys.path can never have relative paths in it, so we should standardize 
> on the simple:  'env = {"PYTHONPATH": os.pathsep.join(sys.path)}'.

According to r13173, sys.path can contain relative paths on win32.



From exarkun at divmod.com  Mon Mar 14 07:55:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 12:55:04 GMT
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314000518.GU9270@opteron.random>
Message-ID: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>

On Mon, 14 Mar 2005 01:05:18 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>mktap is spawning an error (which dia not found), this fixed it
> 
> Index: Twisted/twisted/lore/latex.py
> ===================================================================
> --- Twisted/twisted/lore/latex.py	(revision 13178)
> +++ Twisted/twisted/lore/latex.py	(working copy)
> @@ -104,7 +104,7 @@
>  
>      baseLevel = 0
>      try:
> -        diaHack = not not os.popen('which dia').read()
> +        diaHack = not not os.popen('which dia 2>/dev/null').read()
>      except:
>          # That's a no, then.
>          diaHack = 0

  When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.

  Jp



From exarkun at divmod.com  Mon Mar 14 07:58:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 12:58:47 GMT
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050313195709.GR9270@opteron.random>
Message-ID: <20050314125847.13806.1461771439.divmod.quotient.1563@ohm>

On Sun, 13 Mar 2005 20:57:09 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>This patch adds a check for transport.disconnecting to the int16/32
> protocols, so that they don't keep firing stringReceived callbacks after
> calling transport.loseConnection (in line with the linereceiver
> protocol). This also adds the methods for pauseproducer in line with the
> linereceiver protocol (as per previous patch in this thread).
> 
> If these two fixes to int32/16 are correct please apply to SVN.

  transport.disconnecting is horrible (it's an implementation detail, it doesn't work on a lot of transports).  LineReceiver shouldn't be using it.  The feature LineReceiver uses it to implement may be reasonable, though, which is why its code is still how it is.

  If the feature is desired somewhere else, the best way to add it is to either find another way that doesn't rely on transport.disconnecting (and then we can fix LineReceiver too), or factor the code such that all protocols can provide the feature without having more than one method that relies on transport.disconnecting (then we can fix them all at once someday).

  Jp



From itamar at itamarst.org  Mon Mar 14 10:06:57 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 10:06:57 -0500
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
References: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
Message-ID: <1110812818.25210.0.camel@localhost.localdomain>

On Mon, 2005-03-14 at 12:55 +0000, Jp Calderone wrote:

> > -        diaHack = not not os.popen('which dia').read()
> > +        diaHack = not not os.popen('which dia 2>/dev/null').read()
> >      except:
> >          # That's a no, then.
> >          diaHack = 0
> 
>   When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.

We shouldn't be using "which dia" anyway, it's ugly and broken. Don't we
have a Python implementation of which() somewhere?




From ken at kenkinder.com  Mon Mar 14 11:37:15 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 10:37:15 -0600
Subject: [Twisted-Python] Design Pattern for Iterating Through Lists
Message-ID: <4235BDBB.4000609@kenkinder.com>

I've come almost to the point of making a template for this kind of 
operation:

    d = Deferred()
    d.callback(0)

    results = []

    def doItem(void, eggs):
        return whatever(eggs)

    def processResult(result):
        results.append(result)

    for spam in list:
        d.addCallback(doItem, spam['eggs'])
        d.addCallback(processResult)

    d.addCallback(lambda _: results)
    return d

The reason I'm calling back on doItem is that lambda will evaluate its 
variables one for the iteration, causing only the first evaluation of 
spam['eggs'] to be passed for each item in the list. Is there a more 
readable/efficient way of doing this? Note that I'm not using a 
DeferredList because I want everything processed serially, not in parallel.

-Ken




From ken at kenkinder.com  Mon Mar 14 11:46:58 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 10:46:58 -0600
Subject: [Twisted-Python] Maximum sockets open
In-Reply-To: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>
Message-ID: <4235C002.3070101@kenkinder.com>

A while ago, we were opening up a ton of sockets and got a "Too many 
files open" error. I don't know what you're getting, but if that's it, 
you might try (1) opening fewer sockets, (2) upping operating system 
limit (Twisted doesn't control that).

According to our admin, on Linux, that would be /proc/sys/fs/file-max 
and use "sysctl -w 'fs.file-max=<new limit>'" to up the limit.

-Ken

Sinang, Danny wrote:

> Hello,
>  
> Is there a maximum number of sockets that Twisted supports ? If so, 
> what is the maximum, how do I see what it's current value, and how to 
> I set it to another value ?
>  
> Regards,
> Danny
>  
>  
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From exarkun at divmod.com  Mon Mar 14 11:51:17 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 16:51:17 GMT
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <1110812818.25210.0.camel@localhost.localdomain>
Message-ID: <20050314165117.13806.611265878.divmod.quotient.1896@ohm>

On Mon, 14 Mar 2005 10:06:57 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2005-03-14 at 12:55 +0000, Jp Calderone wrote:
> 
> > > -        diaHack = not not os.popen('which dia').read()
> > > +        diaHack = not not os.popen('which dia 2>/dev/null').read()
> > >      except:
> > >          # That's a no, then.
> > >          diaHack = 0
> > 
> >   When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.
> 
> We shouldn't be using "which dia" anyway, it's ugly and broken. Don't we
> have a Python implementation of which() somewhere?
> 

  Yes.  I'd still like to know when this happens, though, as it would seem to indicate a bug in the plugin system or in the way I ported Lore's plugins.

  Jp



From exarkun at divmod.com  Mon Mar 14 12:04:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 17:04:04 GMT
Subject: [Twisted-Python] Design Pattern for Iterating Through Lists
In-Reply-To: <4235BDBB.4000609@kenkinder.com>
Message-ID: <20050314170404.13806.970821359.divmod.quotient.1915@ohm>

On Mon, 14 Mar 2005 10:37:15 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>I've come almost to the point of making a template for this kind of 
> operation:
> 
>     d = Deferred()
>     d.callback(0)
> 
>     results = []
> 
>     def doItem(void, eggs):
>         return whatever(eggs)
> 
>     def processResult(result):
>         results.append(result)
> 
>     for spam in list:
>         d.addCallback(doItem, spam['eggs'])
>         d.addCallback(processResult)
> 
>     d.addCallback(lambda _: results)
>     return d
> 
> The reason I'm calling back on doItem is that lambda will evaluate its 
> variables one for the iteration, causing only the first evaluation of 
> spam['eggs'] to be passed for each item in the list. Is there a more 
> readable/efficient way of doing this? Note that I'm not using a 
> DeferredList because I want everything processed serially, not in parallel.

  Actually, I think you meant "last evaluation" rather than first.

  One solution is just to wrap the above into a function:

    def serially(processor, items):
        results = []
        d = defer.Deferred()

        for elem in items:
            d.addCallback(lambda ign, elem=elem: processor(elem))
            d.addCallback(results.append)

        d.addCallback(lambda ign: results)
        d.callback(None)
        return d

  Now you can call serially whenever you need this operation and forget how unpleasant the implementation is :)

  Another approach involves building up the Deferred chain gradually rather than all at once:

    def serially(processor, items):
        results = []
        d = defer.Deferred()

        toBeProcessed = iter(items)

        def doItem(ignored):
            for elem in toBeProcessed:
                defer.maybeDeferred(
                    processor, elem).addCallback(
                    results.append).addCallback(
                    doItem)
                 break
            else:
                d.callback(results)

        return d

  It's a bit more code, and I'm still not sure how I feel about that abuse of for loops (but is handling StopIteration manually any better?  dunno), but it avoids building up a large stack inside the Deferred, which can be a good thing - a large number of synchronous results will probably cause Python to raise a RuntimeError in your version or my first version, since Deferred processes its callbacks recursively.

  Hope this helps,

  Jp



From general at eepatents.com  Mon Mar 14 12:33:23 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 09:33:23 -0800
Subject: [Twisted-Python] Python Xlib + Twisted
In-Reply-To: <7xmzt6b47q.fsf@brugd.ctrl-c.liu.se>
References: <7xmzt6b47q.fsf@brugd.ctrl-c.liu.se>
Message-ID: <200503140933.23489.general@eepatents.com>

Below is what I sent to python-xlib-users this morning. Hopefully 
there's some interest in getting a Twisted-driven version of Python 
Xlib done. I think I've learned the innards of Twisted well enough by 
now to do it myself (writing a new protocol for X events), but help and 
advice is of course welcome.

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com

-----
On Monday 14 March 2005 08:08 am, Peter Liljenberg wrote:
> Simon Forman, calroc99 at users.sourceforge.net, has kindly offered to
> maintain Python Xlib from now on.  Give him a big hand, folks.
>
> I'll resign as project admin, but will still lurk around and may even
> do the occasional CVS commit (here's hoping).
>
> /Peter Liljenberg

Python Xlib is a neat project, and I'm glad to see the continued 
activity.

One of the projects I've been planning for the near future is to add 
some functionality to the connection code of Python Xlib so that it can 
operate asynchronously using the Twisted networking framework rather 
than relying on blocking and threads. I'm planning to integrate the 
patched Python Xlib into WinDictator, a Windows-Linux bridge I wrote 
and use for running dictation software in VMware and having the 
keystrokes typed with X events.

Briefly, the Windows copy of WinDictator is a TCP server to a Linux 
client and presents a dictation window on the Windows machine. ?Using 
the dictation software's "direct dictation" feature, the user generates 
text in the dictation window, which is sent immediately to the Linux 
client. The Linux client then generates an X "KeyPress" event (followed 
by an X "KeyRelease" event) corresponding to the character sent from 
the Windows client. It is assumed that the (virtual) Windows machine is 
insecure and will be firewalled off from the Internet anyhow, so it is 
the TCP server. Plus, multiple Linux clients can connect to and use a 
single Windows server at different times.

Advantageously, the client-server pair allows "direct dictation" from a 
text entry window running on Windows (along with the Windows-only
dictation software) to whatever word processor the user is employing
under Linux. The text entry window can be viewed on a separate screen of
a separate Windows box, or can appear somewhere on the Linux computer's
display. The latter can be accomplished by emulation with VMware or (I 
think) QEMU, or by VNC operation of the separate Windows box.

Twisted's "Perspective Broker" maintains the client-server communication 
very nicely at a high level. WinDicator works great with the xte 
program "typing" the keystrokes, and I use it every day. But I want to 
improve it and need the finer-grained control of Python Xlib to do so. 
Ideally, I would like to see Python Xlib's networking integrated 
smoothly into Twisted's asynchronous event loop for performance, 
compatibility, and because it is just plain cool.

See http://twistedmatrix.com/services/twisted-advantage for more info 
about Twisted, if you're interested. It runs my web site plus my boss's 
site (http://valuablepatents.com), among other things, off of a single 
main python thread. 

Offers of cooperation, either to add Twisted capability to Python Xlib 
or with WinDictator (GPL) itself, would of course be welcomed.



From ken at kenkinder.com  Mon Mar 14 12:37:46 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 11:37:46 -0600
Subject: [Twisted-Python] Twisted and the Posh Module
Message-ID: <4235CBEA.4000907@kenkinder.com>

Has anyone tried playing with Twisted and the posh module? I need to do 
some CPU-intensive stuff inside the reactor, which unfortunately holds 
on to the GIL. I was thinking of just making a deferToPosh() type of 
method in the spirit of deferToThread(), but forking on each operation 
would be pretty expensive. Which brings up the question of having 
process pools.

Has anyone done anything like this? I don't really need any interaction 
between the worker processes and Twisted, so in theory I could spawn off 
some worker processes early and just communicate queues of tasks to 
complete, independent of Twisted and the reactor.

-Ken




From jarrod.roberson at gmail.com  Mon Mar 14 12:48:24 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 14 Mar 2005 12:48:24 -0500
Subject: [Twisted-Python] Re: sending queries and responses with the new dns
	module
In-Reply-To: <2389d47305031115312c629933@mail.gmail.com>
References: <2389d47305031115312c629933@mail.gmail.com>
Message-ID: <2389d473050314094860abcdd3@mail.gmail.com>

any pointers to any example code on using this stuff?



From alengarbage at yahoo.com  Mon Mar 14 13:13:06 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 14 Mar 2005 10:13:06 -0800 (PST)
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: 6667
Message-ID: <20050314181306.36312.qmail@web31511.mail.mud.yahoo.com>

Run the following web server (memoryhogserver.py) and
load the provided form (post.html) into a browser of
your choice and choose a large file (~100MB) to
submit.  Notice the memory usage of the python process
(on my machine, around 150MB resident).

memoryhogserver.py:

from twisted.web.resource import Resource
from twisted.web import server, resource
from twisted.internet import reactor
import os
                                                      
                         
class ROOT(Resource):
    def __init__(self):
        Resource.__init__(self)
                                                      
                         
    def getChild(self, name, request):
        if name == "":
            return self
        return Resource.getChild(self, name, request)
                                                      
                         
    def render_GET(self, request):
        return "<html>root dir</hrml>"
                                                      
                         
class UPLOAD(ROOT):
    def render_POST(self, request):
        f = open("/tmp/testfile","wb")
        f.write(request.args.get('filename')[0])
        f.close()
        return "<html>upload successful</html>"
    def render_GET(self, request):
        return "'upload' must use POST"
                                                      
                         
if __name__ == '__main__':
    root = ROOT()
    root.putChild('upload',UPLOAD())
    site = server.Site(root)
    reactor.listenTCP(7000, site)
    print "webserver listening on port 7000"
    reactor.run()


post.html:

<html>
    <form method="POST" enctype="multipart/form-data"
action="http://localhost:7000/upload">
        <input type="file" name="filename">
        <input type="submit">
    </form>
</html>


  (all in the spirit of replying to my own posts :)


  -- Lenny G.


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> 
> A couple of questions about twisted.web server's
> memory management:
 ...
> If a code snippet that reproduces the above would
> help, I'd be happy to produce one.



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From itamar at itamarst.org  Mon Mar 14 13:24:13 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 13:24:13 -0500
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>
References: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <1110824653.25210.41.camel@localhost.localdomain>

On Sun, 2005-03-13 at 22:38 -0800, Lenny G Arbage wrote:

> 1- Is it normal for the server process to consume
> large amounts of memory (and never free it) if large
> requests are sent?

Web questions should go to the twisted-web mailing list.

twisted.web's support for uploaded files is currently pretty broken (it
does it in memory). In twisted.web2 this will be fixable, though it is
not at the moment.




From general at eepatents.com  Mon Mar 14 13:59:51 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 10:59:51 -0800
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
Message-ID: <200503141059.51652.general@eepatents.com>

On Monday 14 March 2005 10:13 am, 
twisted-python-request at twistedmatrix.com wrote:
> Has anyone tried playing with Twisted and the posh module? I need to
> do some CPU-intensive stuff inside the reactor, which unfortunately
> holds on to the GIL. I was thinking of just making a deferToPosh()
> type of method in the spirit of deferToThread(), but forking on each
> operation would be pretty expensive. Which brings up the question of
> having process pools.
>
> Has anyone done anything like this? I don't really need any
> interaction between the worker processes and Twisted, so in theory I
> could spawn off some worker processes early and just communicate
> queues of tasks to complete, independent of Twisted and the reactor.

I think having some sort of process pool mangagement in Twisted is a 
great idea, especially with multi-core CPUs emerging on the scene. I 
have access to a dual-core Pentium Prescott CPU and it would be great 
to have that available to keep both cores humming on a certain 
CPU-intensive project I'm considering.

However, I'm not sure the best way to go about it would be with the posh 
module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
using Perspective Broker as an underlying message-passing mechanism 
with UNIX sockets and/or TCP. One thought might be to have a single 
master process start up and act as a PB server and process pool 
manager. Subsidiary processes could then make authenticated PB 
connections to the server to "volunteer" for work in the process pool. 

Note that pypar lets you easily find out how many CPUs you have under 
kernel control, with pypar.size(). Thus, the main process could start 
the process pool by spawning a subsidiary "volunteer" process for each 
CPU core present.

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From exarkun at divmod.com  Mon Mar 14 14:19:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 19:19:14 GMT
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141059.51652.general@eepatents.com>
Message-ID: <20050314191914.13806.499278931.divmod.quotient.2114@ohm>

On Mon, 14 Mar 2005 10:59:51 -0800, Ed Suominen <general at eepatents.com> wrote:
>On Monday 14 March 2005 10:13 am, 
> twisted-python-request at twistedmatrix.com wrote:
> > Has anyone tried playing with Twisted and the posh module? I need to
> > do some CPU-intensive stuff inside the reactor, which unfortunately
> > holds on to the GIL. I was thinking of just making a deferToPosh()
> > type of method in the spirit of deferToThread(), but forking on each
> > operation would be pretty expensive. Which brings up the question of
> > having process pools.
> >
> > Has anyone done anything like this? I don't really need any
> > interaction between the worker processes and Twisted, so in theory I
> > could spawn off some worker processes early and just communicate
> > queues of tasks to complete, independent of Twisted and the reactor.
> 
> I think having some sort of process pool mangagement in Twisted is a 
> great idea, especially with multi-core CPUs emerging on the scene. I 
> have access to a dual-core Pentium Prescott CPU and it would be great 
> to have that available to keep both cores humming on a certain 
> CPU-intensive project I'm considering.
> 
> However, I'm not sure the best way to go about it would be with the posh 
> module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
> using Perspective Broker as an underlying message-passing mechanism 
> with UNIX sockets and/or TCP. One thought might be to have a single 
> master process start up and act as a PB server and process pool 
> manager. Subsidiary processes could then make authenticated PB 
> connections to the server to "volunteer" for work in the process pool. 
> 
> Note that pypar lets you easily find out how many CPUs you have under 
> kernel control, with pypar.size(). Thus, the main process could start 
> the process pool by spawning a subsidiary "volunteer" process for each 
> CPU core present.

  Quotient currently uses Twisted's spawnProcess() to start up a worker process and communicates with it using PB over stdin/stdout.  The child process performs fulltext indexing and searches for the parent process.

  The code is currently about half transformed into a general process pool service.  Unfortunately I have not had time to work on this in several weeks, and probably will not have time to finish it for at least several more.  If anyone is interested in picking up development and finishing it, I'd be more than happy to accept patches :)  Once this is done, it should go into Twisted, since it is clearly a feature quite a few people using Twisted desire.

  Most of the code is currently in a module in a branch in the Quotient repository:

http://divmod.org/cvs/branches/exarkun/runnerup-2357/atop/runnerup.py?rev=7515&view=markup

  In particular, the ProcessController and ServiceController classes.

  Jp



From ken at kenkinder.com  Mon Mar 14 15:24:28 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 14:24:28 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141059.51652.general@eepatents.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
Message-ID: <4235F2FC.3020405@kenkinder.com>

Ed Suominen wrote:

>I think having some sort of process pool mangagement in Twisted is a 
>great idea, especially with multi-core CPUs emerging on the scene. I 
>have access to a dual-core Pentium Prescott CPU and it would be great 
>to have that available to keep both cores humming on a certain 
>CPU-intensive project I'm considering.
>
>However, I'm not sure the best way to go about it would be with the posh 
>module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
>using Perspective Broker as an underlying message-passing mechanism 
>with UNIX sockets and/or TCP. One thought might be to have a single 
>master process start up and act as a PB server and process pool 
>manager. Subsidiary processes could then make authenticated PB 
>connections to the server to "volunteer" for work in the process pool. 
>
>Note that pypar lets you easily find out how many CPUs you have under 
>kernel control, with pypar.size(). Thus, the main process could start 
>the process pool by spawning a subsidiary "volunteer" process for each 
>CPU core present.
>  
>
My goal is somewhat similar in that I have multiple CPU's that aren't 
being used very much, but the other problem is that certain libraries I 
use (PIL) grab the GIL for long-running operations like image 
modifications. I can thread them off, but it still liberally acquires 
the GIL and makes the server unresponsive for the duration of the operation.

I too had looked at using Perspective Broker to communicate with 
separate "worker" processes, and the only reason I'm not excited with 
that option is that the bandwidth between the master and worker 
processes involves a lot of large binary strings. Shared memory seemed 
more efficient than PB for transferring those strings.

So for that reason, finding out how many CPU's I have isn't that 
important, because I'll still want more worker processes than I have CPU's.




From bob at redivi.com  Mon Mar 14 15:42:55 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 14 Mar 2005 15:42:55 -0500
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <4235F2FC.3020405@kenkinder.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
	<4235F2FC.3020405@kenkinder.com>
Message-ID: <0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>


On Mar 14, 2005, at 3:24 PM, Ken Kinder wrote:

> Ed Suominen wrote:
>
>> I think having some sort of process pool mangagement in Twisted is a 
>> great idea, especially with multi-core CPUs emerging on the scene. I 
>> have access to a dual-core Pentium Prescott CPU and it would be 
>> great to have that available to keep both cores humming on a certain 
>> CPU-intensive project I'm considering.
>>
>> However, I'm not sure the best way to go about it would be with the 
>> posh module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), 
>> or just using Perspective Broker as an underlying message-passing 
>> mechanism with UNIX sockets and/or TCP. One thought might be to have 
>> a single master process start up and act as a PB server and process 
>> pool manager. Subsidiary processes could then make authenticated PB 
>> connections to the server to "volunteer" for work in the process 
>> pool.
>> Note that pypar lets you easily find out how many CPUs you have 
>> under kernel control, with pypar.size(). Thus, the main process 
>> could start the process pool by spawning a subsidiary "volunteer" 
>> process for each CPU core present.
>>
> My goal is somewhat similar in that I have multiple CPU's that aren't 
> being used very much, but the other problem is that certain libraries 
> I use (PIL) grab the GIL for long-running operations like image 
> modifications. I can thread them off, but it still liberally acquires 
> the GIL and makes the server unresponsive for the duration of the 
> operation.
>
> I too had looked at using Perspective Broker to communicate with 
> separate "worker" processes, and the only reason I'm not excited with 
> that option is that the bandwidth between the master and worker 
> processes involves a lot of large binary strings. Shared memory 
> seemed more efficient than PB for transferring those strings.
>
> So for that reason, finding out how many CPU's I have isn't that 
> important, because I'll still want more worker processes than I have 
> CPU's.

Ideally we'd have a message-passing system that could use multiple 
backends (i.e. shared memory, mmap, or sockets).  Using sockets is 
probably a better solution for now -- you're likely to do a lot of 
copying anyway, cause it's Python and PIL :)

With sockets, you can scale right to multiple computers.. with shared 
memory, you're stuck on a single box.  The API that POSH exposes 
(proxied non-blocking objects) can't scale well to multiple machines, 
where a socket-based API could be scaled down to actually use an 
efficient shared memory implementation at some point.

-bob





From foom at fuhm.net  Mon Mar 14 16:09:46 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 16:09:46 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13185 - Applied patch from
	Ralph Meijer for issue 448
In-Reply-To: <E1DAw2L-0003O2-00@wolfwood>
References: <E1DAw2L-0003O2-00@wolfwood>
Message-ID: <a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>

I'll pick on your commit message dizzyd, but this is a general request:

Can people not post log messages like this? It makes it impossible to 
write a NEWS file if commits look like this. I cannot go through and 
look at every bug report to see what the commit actually did, and I 
also cannot go back and read all the svn diffs. That would just take 
way too long. Any commits that looked like this I just completely 
ignored, which is a shame.

The messages don't need to be excruciatingly detailed, but please 
include at least *something* about what the change did, even if it's 
completely obvious from the patch, because I'm not looking at the 
patches: just the message.

E.g., in this case "Applied patch from Ralph Meijer for issue 448: 
fixes digest authentication in Jabber client" would be great.

James

On Mar 14, 2005, at 3:19 PM, Dave Smith wrote:
> Author: dizzyd
> Date: Mon Mar 14 13:19:36 2005
> New Revision: 13185
>
> Modified:
>    trunk/twisted/words/protocols/jabber/client.py
> Log:
> Applied patch from Ralph Meijer for issue 448




From nospam.list at unclassified.de  Mon Mar 14 16:13:53 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Mon, 14 Mar 2005 22:13:53 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
Message-ID: <4235FE91.8060302@unclassified.de>

Hi everybody,

I just installed Twisted 2.0.0a2 only to find it incompatible with the
application I wanted. Now I need to go back to version 1.3 or whatever
is the latest stable release before 2. Can I just install 1.3 over 2.0?
How can I uninstall version 2, there's no prepared mechanism for this
described where I can see it.

TIA

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)




From jarrod.roberson at gmail.com  Mon Mar 14 16:40:39 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 14 Mar 2005 16:40:39 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
References: <4235FE91.8060302@unclassified.de>
Message-ID: <2389d4730503141340274c438@mail.gmail.com>

On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen
<nospam.list at unclassified.de> wrote:
> Hi everybody,
> 
> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted. Now I need to go back to version 1.3 or whatever
> is the latest stable release before 2. Can I just install 1.3 over 2.0?
> How can I uninstall version 2, there's no prepared mechanism for this
> described where I can see it.
> 
> TIA

you should be able to simple delete the /twisted directory from your
/site-packages directory

and then just install 1.3



From foom at fuhm.net  Mon Mar 14 16:54:00 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 16:54:00 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <2389d4730503141340274c438@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<2389d4730503141340274c438@mail.gmail.com>
Message-ID: <9c4c1a1b4b6282d16ea5d3994d2e0eff@fuhm.net>

On Mar 14, 2005, at 4:40 PM, jarrod roberson wrote:
> On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen
> <nospam.list at unclassified.de> wrote:
>> Hi everybody,
>>
>> I just installed Twisted 2.0.0a2 only to find it incompatible with the
>> application I wanted. Now I need to go back to version 1.3 or whatever
>> is the latest stable release before 2. Can I just install 1.3 over 
>> 2.0?
>> How can I uninstall version 2, there's no prepared mechanism for this
>> described where I can see it.
>>
>> TIA
>
> you should be able to simple delete the /twisted directory from your
> /site-packages directory
>
> and then just install 1.3

...but before that, tell us what went wrong...if it's Twisted's fault, 
you'd want it to be fixed, right?

James




From exarkun at divmod.com  Mon Mar 14 16:56:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 21:56:04 GMT
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
Message-ID: <20050314215604.13806.1073922278.divmod.quotient.2344@ohm>

On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen <nospam.list at unclassified.de> wrote:
>Hi everybody,
> 
> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted. Now I need to go back to version 1.3 or whatever
> is the latest stable release before 2. Can I just install 1.3 over 2.0?
> How can I uninstall version 2, there's no prepared mechanism for this
> described where I can see it.

  I'm sure someone will answer the question you asked (although you didn't indicate your platform or how you installed either version of Twisted, so they'd just be guessing).

  Might I ask which application broke, and in what way (a traceback would be most excellent, if there is one)?  Perhaps we can just fix the incompatibility and then you won't have to downgrade :)

  Jp



From itamar at itamarst.org  Mon Mar 14 16:53:41 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 16:53:41 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
References: <4235FE91.8060302@unclassified.de>
Message-ID: <1110837221.3097.2.camel@localhost.localdomain>

On Mon, 2005-03-14 at 22:13 +0100, Yves Goergen wrote:

> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted.

In what way was it incompatible?





From jadestorm at nc.rr.com  Mon Mar 14 17:10:53 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Mon, 14 Mar 2005 17:10:53 -0500 (EST)
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <1110837221.3097.2.camel@localhost.localdomain>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
Message-ID: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>

Since it's my application he's referring to, I'll respond.  ;D  Basically,
it's this:
Traceback (most recent call last):
  File "main.py", line 23, in ?
    import xmlconfig
  File "/usr/local/pyicq-t/src/xmlconfig.py", line 4, in ?
    from tlib.domish import parseText, Element
  File "/usr/local/pyicq-t/src/tlib/domish.py", line 425, in ?
    from twisted.protocols import sux
  File
"/usr/local/lib/python2.4/site-packages/twisted/protocols/sux.py",
line 6, in ?
    globals())
  File
"/usr/local/lib/python2.4/site-packages/twisted/python/util.py", line
671, in moduleMovedForSplit
    raise ImportError("You need to have the Twisted %s "
ImportError: You need to have the Twisted Web package installed to use
twisted.protocols.sux. See http://twistedmatrix.com/projects/web.

When he went to that url and installed the web package, it still didn't
work.  I blame stuff on my end, not y'all's code. ;)

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Mon, 2005-03-14 at 22:13 +0100, Yves Goergen wrote:
>
>> I just installed Twisted 2.0.0a2 only to find it incompatible with the
>> application I wanted.
>
> In what way was it incompatible?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From general at eepatents.com  Mon Mar 14 17:27:16 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 14:27:16 -0800
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
Message-ID: <200503141427.16840.general@eepatents.com>

Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
scanning and window events when it's using PIL to generate a thumbnail 
of the last page scanned, despite my use of deferToThread. A unit test 
I wrote with time.sleep() passed just fine, and I threw my hands up and 
walked away. Thanks for shedding light on what was very confusing and 
frustrating behavior.

[1] spdf: "Scan to PDF," GPL. A Twisted-driven application with, 
shockingly, absolutely no networking. Coming soon to a download URL 
near you...

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com

On Monday 14 March 2005 02:11 pm, 
twisted-python-request at twistedmatrix.com wrote:
> My goal is somewhat similar in that I have multiple CPU's that aren't
> being used very much, but the other problem is that certain libraries
> I use (PIL) grab the GIL for long-running operations like image
> modifications. I can thread them off, but it still liberally acquires
> the GIL and makes the server unresponsive for the duration of the
> operation.



From jrust at rustyparts.com  Mon Mar 14 17:26:52 2005
From: jrust at rustyparts.com (Jason Rust)
Date: Mon, 14 Mar 2005 14:26:52 -0800
Subject: [Twisted-Python] Creating a dynamic FTP server
Message-ID: <200503141426.52805.jrust@rustyparts.com>

Hi,
I've been poking around in the code and documentation for a bit now and wanted 
to see if the following project would be doable with twisted before I 
actually started coding it:

We want a FTP server where all the files and directories are "virtual."  The 
actual files would be in a database and the folders shown to a user would be 
based on the time of day and who the user is.  When getting or putting a file 
it would pull or put it into the database backend.

Would something like this be possible with the twisted FTP module?
Thanks,
-Jason



From ken at kenkinder.com  Mon Mar 14 17:26:49 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 16:26:49 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
	<4235F2FC.3020405@kenkinder.com>
	<0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>
Message-ID: <42360FA9.9010707@kenkinder.com>

Bob Ippolito wrote:

> Ideally we'd have a message-passing system that could use multiple 
> backends (i.e. shared memory, mmap, or sockets).  Using sockets is 
> probably a better solution for now -- you're likely to do a lot of 
> copying anyway, cause it's Python and PIL :)
>
> With sockets, you can scale right to multiple computers.. with shared 
> memory, you're stuck on a single box.  The API that POSH exposes 
> (proxied non-blocking objects) can't scale well to multiple machines, 
> where a socket-based API could be scaled down to actually use an 
> efficient shared memory implementation at some point.

I'm not trying to distribute work among multiple boxes with this -- I 
already do that. :) The goal is to free up each node's GIL in an 
existing clustered application and make better use of multiple CPU's.

-Ken




From itamar at itamarst.org  Mon Mar 14 17:35:58 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 17:35:58 -0500
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141427.16840.general@eepatents.com>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
	<200503141427.16840.general@eepatents.com>
Message-ID: <1110839758.3097.6.camel@localhost.localdomain>

On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
> Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
> scanning and window events when it's using PIL to generate a thumbnail 
> of the last page scanned, despite my use of deferToThread. 

Arguably not releasing the GIL in C code is a bug, and someone should
probably report it.




From leszczynscy at yahoo.com  Mon Mar 14 17:44:02 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Mon, 14 Mar 2005 14:44:02 -0800 (PST)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: 6667
Message-ID: <20050314224402.71968.qmail@web30508.mail.mud.yahoo.com>

I am looking for a Twisted based LDAP protocol
implementation (both versions 2 and 3). Is anybody
aware of such, even in very early development phase.

If there are neither any activity in that area nor
actual plans, would Twisted be interested in adopting
one into its code base? What would be level of
interest of Twisted community?

I am interested in both client and server side.

Please advice,
AndyL






From nospam.list at unclassified.de  Mon Mar 14 17:55:38 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Mon, 14 Mar 2005 23:55:38 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <2389d4730503141340274c438@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<2389d4730503141340274c438@mail.gmail.com>
Message-ID: <4236166A.7010605@unclassified.de>

On 14.03.2005 22:40 (+0100), jarrod roberson wrote:
> you should be able to simple delete the /twisted directory from your
> /site-packages directory
> 
> and then just install 1.3

Thanks, seems to work fine. It's so easy, you just need to know where
all those files are located... ;)

Yes, there was a problem with PyICQ-t as Daniel already wrote in this
thread. I can start the application now with Twisted 1.3.

Thanks for your help.

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)



From foom at fuhm.net  Mon Mar 14 17:58:15 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 17:58:15 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <59672b805ae4956702dbeac278222268@fuhm.net>

Bug summary
______________________
Since 2005-03-05 04:13:21.060000:
  Bugs opened: 9   Bugs closed: 17   Total open bugs: 326 (-8)
   Urgent: 9 (+2)
   Bug: 118 (-13)
   Feature: 131 (+2)
   Wish: 68 (+1)

New / Reopened Bugs
______________________
                     ==== Bug ====
twisted.python.rebuild fails if python 2.4's decimal module is imported 
  (1 1/4 hours ago)
        http://twistedmatrix.com/bugs/issue921 opened by marienz

e-mail followup rejected  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue920 opened by zooko

roundup exception  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue919 opened by zooko

[CORE] If program has > 1024 fds, the select() used in t.i.process can 
fail  (3 days ago)
        http://twistedmatrix.com/bugs/issue918 opened by itamarst

[DOCUMENTATION] Not all the examples in the 
twisted.application.strports docstring are valid  (3 days ago)
        http://twistedmatrix.com/bugs/issue917 opened by exarkun

xmlrpc.QueryFactory failed to catch some exceptions  (5 days ago)
        http://twistedmatrix.com/bugs/issue914 opened by maoy

                     ==== Feature ====
.buildProtocol((host, port)) is unsuitable for e.g. UNIX domain 
sockets; use t.i.address  (4 days ago)
        http://twistedmatrix.com/bugs/issue915 opened by Tv

[CONCH] signal to conch to reconnect  (4 days ago)
        http://twistedmatrix.com/bugs/issue916 opened by z3p

                     ==== Wish ====
Add test cases for twisted.words.protocols.jabber.client  (12 minutes 
ago)
        http://twistedmatrix.com/bugs/issue922 opened by ralphm

Bugs Closed
______________________
                     ==== Urgent ====
[PATCH] fix twisted.words.protocols.jabber.jid to add stringprep  (1 
week ago)
        http://twistedmatrix.com/bugs/issue912 opened by ralphm, closed 
by ralphm

plugins.tml doesn't work with split up packages  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue906 opened by exarkun, closed 
by exarkun

[WIN32] problems with Twisted-2.0.0a1 on Windows  (1 month ago)
        http://twistedmatrix.com/bugs/issue891 opened by manlio, closed 
by radix

setgroups() raises when given too many groups, and nothing handles the 
error  (11 months ago)
        http://twistedmatrix.com/bugs/issue600 opened by exarkun, closed 
by jknight

[TRIAL] t.trial.util.wait deprecates, but doesn't replace  (3 months 
ago)
        http://twistedmatrix.com/bugs/issue795 opened by teratorn, 
closed by exarkun

[RELEASE MANAGEMENT] Change setup.cfg so bdist_rpm uses 
admin/twisted.spec  (18 months ago)
        http://twistedmatrix.com/bugs/issue260 opened by wkv, closed by 
radix

                     ==== Bug ====
[CHAT] [PATCH] Digest jabber authentication never tried  (14 months ago)
        http://twistedmatrix.com/bugs/issue448 opened by ralphm, closed 
by ralphm

e-mail followup rejected  (2 days ago)
        http://twistedmatrix.com/bugs/issue920 opened by zooko, closed 
by radix

roundup exception  (2 days ago)
        http://twistedmatrix.com/bugs/issue919 opened by zooko, closed 
by radix

twisted.cred.portal.IRealm docstring for parameters  (5 months ago)
        http://twistedmatrix.com/bugs/issue740 opened by thomasvs, 
closed by radix

adbapi prints value of connection password to log file  (1 month ago)
        http://twistedmatrix.com/bugs/issue871 opened by itamarst, 
closed by radix

t.test.test_application.TestConvert fails without t.web  (1 month ago)
        http://twistedmatrix.com/bugs/issue877 opened by marienz, closed 
by radix

[DOCUMENTATION] Make a separate tutorial index page  (1 month ago)
        http://twistedmatrix.com/bugs/issue889 opened by hypatia, closed 
by radix

t.names.client.ThreadedResolver should be in core?  (3 months ago)
        http://twistedmatrix.com/bugs/issue790 opened by jknight, closed 
by exarkun

[CORE] [PATCH] t.p.usage uses passed arguments rather than real 
defaults when displaying help  (5 months ago)
        http://twistedmatrix.com/bugs/issue743 opened by itamarst, 
closed by jml

[CONCH] _scanDirectory broken  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue904 opened by spiv, closed by 
z3p

[CONCH] No ProtocolWrapper defined in twisted/conch/ssh/session.py  (2 
weeks ago)
        http://twistedmatrix.com/bugs/issue905 opened by spiv, closed by 
z3p




From ken at kenkinder.com  Mon Mar 14 18:09:13 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 17:09:13 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <1110839758.3097.6.camel@localhost.localdomain>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>	<200503141427.16840.general@eepatents.com>
	<1110839758.3097.6.camel@localhost.localdomain>
Message-ID: <42361999.9090400@kenkinder.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
>  
>
>>Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
>>scanning and window events when it's using PIL to generate a thumbnail 
>>of the last page scanned, despite my use of deferToThread. 
>>    
>>
>
>Arguably not releasing the GIL in C code is a bug, and someone should
>probably report it.
>  
>
They are aware of it, and in the alpha version of PIL, *some* operations 
no longer acquire the GIL, but many still do.

-Ken




From foom at fuhm.net  Mon Mar 14 18:59:09 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 18:59:09 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
Message-ID: <100c51bb201d3227438b58d93445197d@fuhm.net>

On Mar 14, 2005, at 5:10 PM, Daniel Henninger wrote:
> ImportError: You need to have the Twisted Web package installed to use
> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.
>
> When he went to that url and installed the web package, it still didn't
> work.  I blame stuff on my end, not y'all's code. ;)

The "it still didn't work" error would be the more interesting to see, 
rather than the error message with the solution clearly spelled out in 
it. Or do you mean, "it still gives that error", which would point to 
some sort of installation problem.

James




From jadestorm at nc.rr.com  Mon Mar 14 19:40:38 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Mon, 14 Mar 2005 19:40:38 -0500 (EST)
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <100c51bb201d3227438b58d93445197d@fuhm.net>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<100c51bb201d3227438b58d93445197d@fuhm.net>
Message-ID: <53017.10.0.0.9.1110847238.squirrel@www.vorpalcloud.org>

That I don't know.  The person who actually tried it will have to speak on
that.  ;)  I'm just relaying part of what he said.

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Mar 14, 2005, at 5:10 PM, Daniel Henninger wrote:
>> ImportError: You need to have the Twisted Web package installed to use
>> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.
>>
>> When he went to that url and installed the web package, it still didn't
>> work.  I blame stuff on my end, not y'all's code. ;)
>
> The "it still didn't work" error would be the more interesting to see,
> rather than the error message with the solution clearly spelled out in
> it. Or do you mean, "it still gives that error", which would point to
> some sort of installation problem.
>
> James
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From db3l at fitlinxx.com  Mon Mar 14 20:00:14 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 14 Mar 2005 20:00:14 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
Message-ID: <uhdjdoh9d.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Can you comment again on what you think should be done here?  I'd like
> to get this functionality into 2.0 if possible.  If you're okay with
> my patch than I will try to get the tests written before the release. 
> Otherwise I'm wondering if there is an alternative implementation that
> can be added before the release.  I'd prefer not having to maintain
> local mods to Twisted.

Sorry - I'm pretty sure when I looked at things again, there were not
in fact, any paths not covered by your patch.  Having the support in
the CopyableFailure class versus the jellying code is still debatable,
but not enough that I have anything against the current patch.

-- David




From justinjohnson at gmail.com  Mon Mar 14 21:09:35 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 14 Mar 2005 20:09:35 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uhdjdoh9d.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
	<uhdjdoh9d.fsf@fitlinxx.com>
Message-ID: <94a776e70503141809682184b6@mail.gmail.com>

Okay, I'll see if I can get anyone to commit.


On 14 Mar 2005 20:00:14 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Can you comment again on what you think should be done here?  I'd like
> > to get this functionality into 2.0 if possible.  If you're okay with
> > my patch than I will try to get the tests written before the release.
> > Otherwise I'm wondering if there is an alternative implementation that
> > can be added before the release.  I'd prefer not having to maintain
> > local mods to Twisted.
> 
> Sorry - I'm pretty sure when I looked at things again, there were not
> in fact, any paths not covered by your patch.  Having the support in
> the CopyableFailure class versus the jellying code is still debatable,
> but not enough that I have anything against the current patch.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From D.Sinang at spitech.com  Mon Mar 14 21:38:51 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Tue, 15 Mar 2005 10:38:51 +0800
Subject: [Twisted-Python] Maximum sockets open
Message-ID: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>

Thanks Ken.

How do we determine (from the O.S.) how many sockets are currently open
?

Regards,
Danny 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ken
Kinder
Sent: Tuesday, March 15, 2005 12:47 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Maximum sockets open

A while ago, we were opening up a ton of sockets and got a "Too many
files open" error. I don't know what you're getting, but if that's it,
you might try (1) opening fewer sockets, (2) upping operating system
limit (Twisted doesn't control that).

According to our admin, on Linux, that would be /proc/sys/fs/file-max
and use "sysctl -w 'fs.file-max=<new limit>'" to up the limit.

-Ken

Sinang, Danny wrote:

> Hello,
>  
> Is there a maximum number of sockets that Twisted supports ? If so, 
> what is the maximum, how do I see what it's current value, and how to 
> I set it to another value ?
>  
> Regards,
> Danny
>  
>  
>
>-----------------------------------------------------------------------
>-
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at ralphm.ik.nu  Tue Mar 15 02:50:30 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 15 Mar 2005 08:50:30 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
Message-ID: <20050315075030.GA99510@ik.nu>

On Mon, Mar 14, 2005 at 05:10:53PM -0500, Daniel Henninger wrote:
> Since it's my application he's referring to, I'll respond.  ;D  Basically,
> it's this:
> Traceback (most recent call last):
>   File "main.py", line 23, in ?
>     import xmlconfig
>   File "/usr/local/pyicq-t/src/xmlconfig.py", line 4, in ?
>     from tlib.domish import parseText, Element
>   File "/usr/local/pyicq-t/src/tlib/domish.py", line 425, in ?
>     from twisted.protocols import sux
>   File
> "/usr/local/lib/python2.4/site-packages/twisted/protocols/sux.py",
> line 6, in ?
>     globals())
>   File
> "/usr/local/lib/python2.4/site-packages/twisted/python/util.py", line
> 671, in moduleMovedForSplit
>     raise ImportError("You need to have the Twisted %s "
> ImportError: You need to have the Twisted Web package installed to use
> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.

Well, since I know (of) pyicq-t, you might first want to look into the
fact that you have all xish and jabber support (from 1.3, with my personal
patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0 here.

It might be a good idea to get rid of the stuff, first. All my patches (better
and more) are in Twisted SVN now.

-- 
Groetjes,

ralphm



From troll at pld-linux.org  Tue Mar 15 03:45:48 2005
From: troll at pld-linux.org (Michal Chruszcz)
Date: Tue, 15 Mar 2005 09:45:48 +0100
Subject: [Twisted-Python] Maximum sockets open
In-Reply-To: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>
Message-ID: <200503150945.48690@tintia.doriath>

It seems like on Tuesday 15 of March 2005 03:38, Sinang, Danny typed:
> Thanks Ken.
>
> How do we determine (from the O.S.) how many sockets are currently open
> ?

Simply run netstat.

P.S. Please, don't reply above quotation...
-- 
Michal Chruszcz -=- Seen at http://1lo.sanok.pl/~troll/gallery.php



From nospam.list at unclassified.de  Tue Mar 15 04:08:53 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Tue, 15 Mar 2005 10:08:53 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <100c51bb201d3227438b58d93445197d@fuhm.net>
References: <4235FE91.8060302@unclassified.de>	<1110837221.3097.2.camel@localhost.localdomain>	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<100c51bb201d3227438b58d93445197d@fuhm.net>
Message-ID: <4236A625.10803@unclassified.de>

On 15.03.2005 00:59 (+0100), James Y Knight wrote:
> The "it still didn't work" error would be the more interesting to see, 
> rather than the error message with the solution clearly spelled out in 
> it. Or do you mean, "it still gives that error", which would point to 
> some sort of installation problem.

Well, installed Twisted 2.0.0a2, installed PyICQ-t latest tarball and it
said, I needed Twisted Web. Then installed latest Twisted Web I could
find and the error message was still the same. So I removed all Twisted
stuff, installed 1.3 and now it works fine. (Except for some problems
with the transport itself, but not runtime configuration related I think.)

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)



From tim at se.linux.org  Tue Mar 15 04:10:53 2005
From: tim at se.linux.org (=?iso-8859-1?Q?Tim_Terleg=E5rd?=)
Date: Tue, 15 Mar 2005 10:10:53 +0100 (CET)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050314224402.71968.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>

> I am looking for a Twisted based LDAP protocol
> implementation (both versions 2 and 3). Is anybody
> aware of such, even in very early development phase.

There is ldaptor. Not sure where to download it though, but it's
definately available in debian and friends.

Tim




From symbiont at berlios.de  Tue Mar 15 04:50:08 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Tue, 15 Mar 2005 17:50:08 +0800
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>
References: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>
Message-ID: <200503151750.08468.symbiont@berlios.de>

On Tuesday 15 March 2005 17:10, Tim Terleg?rd wrote:
> > I am looking for a Twisted based LDAP protocol
> > implementation (both versions 2 and 3). Is anybody
> > aware of such, even in very early development phase.
>
> There is ldaptor. Not sure where to download it though, but it's
> definately available in debian and friends.

Home: http://tv.debian.net/software/ldaptor
Download: 
http://ftp.debian.org/debian/pool/main/l/ldaptor/ldaptor_%{version}.tar.gz

Something like that.

-- 
-jeff



From mwh at python.net  Tue Mar 15 05:03:28 2005
From: mwh at python.net (Michael Hudson)
Date: Tue, 15 Mar 2005 10:03:28 +0000
Subject: [Twisted-Python] Re: Twisted and the Posh Module
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
	<200503141427.16840.general@eepatents.com>
	<1110839758.3097.6.camel@localhost.localdomain>
	<42361999.9090400@kenkinder.com>
Message-ID: <2mr7ihjken.fsf@starship.python.net>

Ken Kinder <ken at kenkinder.com> writes:

> Itamar Shtull-Trauring wrote:
>
>>On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
>>  
>>> Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses
>>> scanning and window events when it's using PIL to generate a
>>> thumbnail of the last page scanned, despite my use of
>>> deferToThread.    
>>
>>Arguably not releasing the GIL in C code is a bug, and someone should
>>probably report it.
>>  
> They are aware of it, and in the alpha version of PIL, *some*
> operations no longer acquire the GIL, but many still do.

Well, err, "some operations no longer acquire the GIL" reads slightly
backwards to me; "some operations now release the GIL" seems fairer --
PIL is only thwarting you passively, not actively :)

Cheers,
mwh

-- 
  Enlightenment is probably antithetical to impatience.
                                        -- Erik Naggum, comp.lang.lisp




From jadestorm at nc.rr.com  Tue Mar 15 07:56:28 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 07:56:28 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted   Was: How to uninstall 
	Twisted 2.0?
In-Reply-To: <20050315075030.GA99510@ik.nu>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
Message-ID: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>

> Well, since I know (of) pyicq-t, you might first want to look into the
> fact that you have all xish and jabber support (from 1.3, with my personal
> patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0
> here.

This is true, but is there yet an official release that we can point
people at that has all of the patches?  The problem before was we were
having to tell people to pull SVN, or download a patched version of
twisted, or something of that nature, and that was getting way too
confusing for the end user.  At this particular point in time, we can say
"just download straight out of the box 1.3.0 Twisted, install it, and you
are good to go".  There were a couple of patches submitted in the past
that never seemed to be accepted or even responded to, so honestly, I
think we kind of gave up.  (these patches weren't submitted by me)

oscar.py I explicitly pulled out after talking to the author.  I was also
to understand that the chat stuff was being pulled from Twisted core into
something else, so it appeared that pulling the jabber stuff was also
important.  Is this not true?  Domish was more of a "the current state was
causing us problems so we needed a fix" issue I believe.  Maybe this is a
good time to simply ask:

jabber tree... will this stay with Twisted core?  i'm not sure there is
anything we've actually changed with this tree.
oscar.py... is this indeed being pulled out?  We've done quite a few
enhancements to it so it's far from what it was in Twisted.  (at some
point when I consider it stable, I was going to send it back to the author
if he was interested)
msn.py... similar situation to oscar.py
domish.py/xmlstream.py... these are obviously important parts of twisted
itself but that weren't working well as is.  I can get more details on
this.  If both are fixed well in Twisted 2.0, we may be able to begin
pulling out tlib stuff and tell people to use Twisted 2.0 instead.  All in
all, we would like to be able to point people at a release, not an svn
tree.  Besides, I've run into numerous people that don't have/want svn
installed ( =( ), or who's company/whatever firewalls prevented getting to
svn trees.

Anyway, I've been extremely pleased with Twisted ever since I first
started working with it.  It's worked wonders for the functionality we
have used with PyICQ-t, PyAIM-t, and James's PyMSN-t.  So please don't
consider this a bash of Twisted or anything.  =)

Would it help if I popped in the irc chatroom for a bit to discuss these
things 'in person'?

Daniel

>
> It might be a good idea to get rid of the stuff, first. All my patches
> (better
> and more) are in Twisted SVN now.
>
> --
> Groetjes,
>
> ralphm
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From radeex at gmail.com  Tue Mar 15 08:14:41 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 00:14:41 +1100
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to uninstall
	Twisted 2.0?
In-Reply-To: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
Message-ID: <60ed19d405031505146af17721@mail.gmail.com>

On Tue, 15 Mar 2005 07:56:28 -0500 (EST), Daniel Henninger
<jadestorm at nc.rr.com> wrote:
> > Well, since I know (of) pyicq-t, you might first want to look into the
> > fact that you have all xish and jabber support (from 1.3, with my personal
> > patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0
> > here.

> oscar.py I explicitly pulled out after talking to the author.  I was also
> to understand that the chat stuff was being pulled from Twisted core into
> something else, so it appeared that pulling the jabber stuff was also
> important.  Is this not true?  Domish was more of a "the current state was
> causing us problems so we needed a fix" issue I believe.  Maybe this is a
> good time to simply ask:

Not so much "pulled from Twisted" as "Twisted being pulled apart". See
http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/split.xhtml
for more information.

> jabber tree... will this stay with Twisted core?  i'm not sure there is
> anything we've actually changed with this tree.
> oscar.py... is this indeed being pulled out?  We've done quite a few
> enhancements to it so it's far from what it was in Twisted.  (at some
> point when I consider it stable, I was going to send it back to the author
> if he was interested)
> msn.py... similar situation to oscar.py
> domish.py/xmlstream.py... these are obviously important parts of twisted
> itself but that weren't working well as is.  I can get more details on
> this.  If both are fixed well in Twisted 2.0, we may be able to begin
> pulling out tlib stuff and tell people to use Twisted 2.0 instead.  All in
> all, we would like to be able to point people at a release, not an svn
> tree.  Besides, I've run into numerous people that don't have/want svn
> installed ( =( ), or who's company/whatever firewalls prevented getting to
> svn trees.

None of this stuff is in "Twisted Core" any more, however, the chat
stuff is all in Twisted Words
(http://twistedmatrix.com/projects/words) and domish is in Twisted
Xish (http://twistedmatrix.com/projects/xish). This split is to help
us remain agile in project management / release / development, so I
urge you not to look on it as a bad thing. Being pulled out of the
core is probably going to *help* you. And 2.0 is going to be released
any day now (I was going to release the third prerelease today, but
ran into a bug. It'll go out tomorrow. The actual release will go out
shortly afterward).

> Would it help if I popped in the irc chatroom for a bit to discuss these
> things 'in person'?

Not a bad idea.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrea at cpushare.com  Tue Mar 15 08:37:50 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 14:37:50 +0100
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
References: <20050314000518.GU9270@opteron.random>
	<20050314125504.13806.632641844.divmod.quotient.1560@ohm>
Message-ID: <20050315133750.GQ7699@opteron.random>

On Mon, Mar 14, 2005 at 12:55:04PM +0000, Jp Calderone wrote:
>   When does this happen, exactly?  I don't have dia installed, either,
>   and I'm not seeing any mktap output related to it.

It happens when I run it as root to bind to port 80/443 (with
appropriate uid change). It catches /usr/bin/which instead of the shell
builtin. See the difference between which dia and /usr/bin/which dia.

It's only a minor warning...



From andrea at cpushare.com  Tue Mar 15 08:41:06 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 14:41:06 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
Message-ID: <20050315134106.GR7699@opteron.random>

On Mon, Mar 14, 2005 at 12:58:47PM +0000, Jp Calderone wrote:
>   If the feature is desired somewhere else, the best way to add it is
>   to either find another way that doesn't rely on
>   transport.disconnecting (and then we can fix LineReceiver too), or
>   factor the code such that all protocols can provide the feature
>   without having more than one method that relies on
>   transport.disconnecting (then we can fix them all at once someday).

If there's no real generic API and you're not planning on adding it
soon, perhaps we could check it with hasattr and spawn a warning if the
transport doens't provide .disconnecting?



From leszczynscy at yahoo.com  Tue Mar 15 08:42:54 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Tue, 15 Mar 2005 05:42:54 -0800 (PST)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: 6667
Message-ID: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>


--- Jeff Pitman <symbiont at berlios.de> wrote:
> On Tuesday 15 March 2005 17:10, Tim Terleg?rd wrote:
> > > I am looking for a Twisted based LDAP protocol
> > > implementation (both versions 2 and 3). Is
> anybody
> > > aware of such, even in very early development
> phase.
> >
> > There is ldaptor. Not sure where to download it
> though, but it's
> > definately available in debian and friends.
> 
> Home: http://tv.debian.net/software/ldaptor
> Download: 
>
http://ftp.debian.org/debian/pool/main/l/ldaptor/ldaptor_%{version}.tar.gz
> 
> Something like that.


Thanks for the link. Got it and will look at it. Just
out of the curiosity - what would be a reason it is
not integrated with Twisted core protocols?

AndyL




From twisted at ralphm.ik.nu  Tue Mar 15 09:34:20 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 15 Mar 2005 15:34:20 +0100
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to uninstall
	Twisted 2.0?
In-Reply-To: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
Message-ID: <20050315143420.GA10446@ik.nu>

On Tue, Mar 15, 2005 at 07:56:28AM -0500, Daniel Henninger wrote *a lot*.

I've personally taken up the task of getting all known issues related to Jabber
or Xish fixed before Twisted 2.0 is released. I think that is done now. Except
for some documentation requests, all issues in Twisted's issue tracker have
been closed.

If you find any, file a new bug at http://twistedmatrix.com/bugs and assign
it to me (ralphm).

-- 
Groetjes,

ralphm



From itamar at itamarst.org  Tue Mar 15 12:29:35 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Mar 2005 12:29:35 -0500
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050315134106.GR7699@opteron.random>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
	<20050315134106.GR7699@opteron.random>
Message-ID: <1110907775.9431.22.camel@localhost.localdomain>

On Tue, 2005-03-15 at 14:41 +0100, Andrea Arcangeli wrote:
> On Mon, Mar 14, 2005 at 12:58:47PM +0000, Jp Calderone wrote:
> >   If the feature is desired somewhere else, the best way to add it is
> >   to either find another way that doesn't rely on
> >   transport.disconnecting (and then we can fix LineReceiver too), or
> >   factor the code such that all protocols can provide the feature
> >   without having more than one method that relies on
> >   transport.disconnecting (then we can fix them all at once someday).
> 
> If there's no real generic API and you're not planning on adding it
> soon, perhaps we could check it with hasattr and spawn a warning if the
> transport doens't provide .disconnecting?

We probably ought to add an API, since the functionality appears to be
useful.




From andrea at cpushare.com  Tue Mar 15 13:14:52 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 19:14:52 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <1110907775.9431.22.camel@localhost.localdomain>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
	<20050315134106.GR7699@opteron.random>
	<1110907775.9431.22.camel@localhost.localdomain>
Message-ID: <20050315181452.GV7699@opteron.random>

On Tue, Mar 15, 2005 at 12:29:35PM -0500, Itamar Shtull-Trauring wrote:
> We probably ought to add an API, since the functionality appears to be
> useful.

What about just adding .disconnecting to the other transports too then?
That already exists and I don't see anything fundamentally wrong with it
(especially with the property feature of python that won't leave us
locked into a fixed value). Then incidentally my patch will become
correct too ;).



From jadestorm at nc.rr.com  Tue Mar 15 14:03:12 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 14:03:12 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to 
	uninstall	Twisted 2.0?
In-Reply-To: <60ed19d405031505146af17721@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
Message-ID: <42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>

> None of this stuff is in "Twisted Core" any more, however, the chat
> stuff is all in Twisted Words
> (http://twistedmatrix.com/projects/words) and domish is in Twisted
> Xish (http://twistedmatrix.com/projects/xish). This split is to help
> us remain agile in project management / release / development, so I
> urge you not to look on it as a bad thing. Being pulled out of the
> core is probably going to *help* you. And 2.0 is going to be released
> any day now (I was going to release the third prerelease today, but
> ran into a bug. It'll go out tomorrow. The actual release will go out
> shortly afterward).

No no!  I don't look at it as a bad thing at all!  I think it's great! 
All I'm saying is I don't want to have to tell people to pull SVN releases
of anything.  Just "pull X official release", even of X official release
is "pull words, core, and XXXXXXX".  I also believe I misunderstood my
original conversation about oscar.py, I ended up thinking that oscar.py
wasn't long for your dists at all.  Dooh!  =)

>> Would it help if I popped in the irc chatroom for a bit to discuss these
>> things 'in person'?
>
> Not a bad idea.

I've popped on there for the time being.  (though my attention isn't
entirely on that screen)

Do you all have any interest in my changes for oscar at some point . . .
or interest in me simply maintaining that particular module?  I have to
beat on it all the time so it's not like I don't have a vested interest in
making it be right.  ;)  No worries if that's not cool.

Daniel





From itamar at itamarst.org  Tue Mar 15 16:13:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Mar 2005 16:13:21 -0500
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to 
	uninstall	Twisted 2.0?
In-Reply-To: <42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
	<42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
Message-ID: <1110921201.9431.30.camel@localhost.localdomain>

On Tue, 2005-03-15 at 14:03 -0500, Daniel Henninger wrote:

> Do you all have any interest in my changes for oscar at some point . . .
> or interest in me simply maintaining that particular module?  I have to
> beat on it all the time so it's not like I don't have a vested interest in
> making it be right.  ;)  No worries if that's not cool.

Yes please! For starters add them to http://twistedmatrix.com/bugs/,
assign to z3p. Going onwards Subversion access might follow.




From jadestorm at nc.rr.com  Tue Mar 15 16:45:08 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 16:45:08 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How 
	to	uninstall	Twisted 2.0?
In-Reply-To: <1110921201.9431.30.camel@localhost.localdomain>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
	<42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
	<1110921201.9431.30.camel@localhost.localdomain>
Message-ID: <43426.152.1.4.40.1110923108.squirrel@www.vorpalcloud.org>

Ok  right now I have different oscar.py's for PyICQ and PyAIM  so I'll try
to merge them together in a sensible manner and hand in what I have right
now.  Suppose I should probably document a lot of it too.  ;D

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Tue, 2005-03-15 at 14:03 -0500, Daniel Henninger wrote:
>
>> Do you all have any interest in my changes for oscar at some point . . .
>> or interest in me simply maintaining that particular module?  I have to
>> beat on it all the time so it's not like I don't have a vested interest
>> in
>> making it be right.  ;)  No worries if that's not cool.
>
> Yes please! For starters add them to http://twistedmatrix.com/bugs/,
> assign to z3p. Going onwards Subversion access might follow.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From bob at redivi.com  Tue Mar 15 16:54:28 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 15 Mar 2005 16:54:28 -0500
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
References: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <495f707e6ae5670ab227b1fbd60f5b44@redivi.com>


On Mar 15, 2005, at 8:42, Andrzej Leszczynski wrote:

>
> --- Jeff Pitman <symbiont at berlios.de> wrote:
>> On Tuesday 15 March 2005 17:10, Tim Terleg?rd wrote:
>>>> I am looking for a Twisted based LDAP protocol
>>>> implementation (both versions 2 and 3). Is
>> anybody
>>>> aware of such, even in very early development
>> phase.
>>>
>>> There is ldaptor. Not sure where to download it
>> though, but it's
>>> definately available in debian and friends.
>>
>> Home: http://tv.debian.net/software/ldaptor
>> Download:
>>
> http://ftp.debian.org/debian/pool/main/l/ldaptor/ 
> ldaptor_%{version}.tar.gz
>>
>> Something like that.
>
>
> Thanks for the link. Got it and will look at it. Just
> out of the curiosity - what would be a reason it is
> not integrated with Twisted core protocols?

One reason is that it's LGPL.

-bob




From leszczynscy at yahoo.com  Tue Mar 15 17:57:20 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Tue, 15 Mar 2005 16:57:20 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>
References: <42266AB4.1020104@yahoo.com> <422864BD.5000802@yahoo.com>
	<3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>
Message-ID: <42376850.7080200@yahoo.com>

James Y Knight wrote:
> On Mar 4, 2005, at 8:38 AM, Andrzej Leszczynski wrote:
> 
>> Andrzej Leszczynski wrote:
>>
>>> Python 2.3, one of the latest Twisted version:
>>
>>
>> Is this list alive. If no, what is the place I might ask for a help. I 
>> am quite new to the Python (but no to the development), so sorry for 
>> asking such a question.
> 
> 
> I ignored your message because 1) The patch is unreadable, and backwards 
> (please use unified diff format) 2) at first glance appears to just add 
> print statements, and 3) It's not a problem that I've ever had.
> 
> I suspect other people did the same.
> 
> James

Sorry for the shortcuts.  It was not a patch but rather what I touched 
to make it working. I promise to use diff -u next time. print-s were my 
way of debugging.

Re the problem itself. I still encounter it under newest version of 
Twisted 1.3 and Python on Linux 2.4. But not on M$. Since it is a part 
of bigger construct I work on I can just send the sources. As soon as 
get some time I will send the narrowed down version.

For now I can suspect it is related to the threads I use in it 
extensively. I atested that reactor without those threads is ctrl-c-able.

I will come back to that at some point, it still intrigues me and is IMO 
the best way to learn internals of any framework ...

Thx,
A.



From exarkun at divmod.com  Tue Mar 15 19:54:45 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 16 Mar 2005 00:54:45 GMT
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050315181452.GV7699@opteron.random>
Message-ID: <20050316005445.13806.87754364.divmod.quotient.4641@ohm>

On Tue, 15 Mar 2005 19:14:52 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Tue, Mar 15, 2005 at 12:29:35PM -0500, Itamar Shtull-Trauring wrote:
> > We probably ought to add an API, since the functionality appears to be
> > useful.
> 
> What about just adding .disconnecting to the other transports too then?
> That already exists and I don't see anything fundamentally wrong with it
> (especially with the property feature of python that won't leave us
> locked into a fixed value). Then incidentally my patch will become
> correct too ;).
> 

  The right way would be to add a 'state' attribute to all transports and have one possible value of it be 'disconnecting' (or DISCONNECTING, whatever ;).  The disconnecting attribute is problematic as a symptom of a larger internal problem (a lack of clarity as to the possible states and state transitions a transport can be in and go through).

  Jp



From foom at fuhm.net  Wed Mar 16 00:56:29 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 16 Mar 2005 00:56:29 -0500
Subject: [Twisted-Python] New feature details for NEWS
Message-ID: <8aceec6a13dd2b9de47693dd719b22d8@fuhm.net>

So, if anyone wants to expand on items in this section of the NEWS 
file, that'd be great. I think we could do with more of an explanation 
about our major new features. If there are other important changes that 
you feel belong in this list, don't be shy, add them.

> Major new features
> -----------------------
>  - Replaced home-grown components system with zope.interface.
>  - Split Twisted into multiple pieces.
>  - Relicensed: Now under the MIT license, rather than LGPL.
>  - Python 2.4 compatibility fixes
>  - Major efficiency improvements in TCP buffering algorithm.
>  - Major efficiency improvements in reactor.callLater/DelayedCall.
>  - Half-close support for TCP/SSL. (loseWriteConnection).

Also, I somewhat punted on the trial section of the NEWS file. I'm 
really not sure what the new features are since 1.3. I know everything 
changed 500 times, but I don't know what the actual feature changes 
were. It was hard to tell from the commit messages, and I don't 
remember what trial was like back in 1.3 days. If someone more familiar 
with it would like it to say anything other than "Rewritten, a bunch of 
bugs fixed, a few more added", have at it.

James




From tv at twistedmatrix.com  Wed Mar 16 03:15:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 16 Mar 2005 10:15:48 +0200
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
References: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <4237EB34.3080209@twistedmatrix.com>

Andrzej Leszczynski wrote:
> Thanks for the link. Got it and will look at it. Just
> out of the curiosity - what would be a reason it is
> not integrated with Twisted core protocols?

It's way too big for that.



From tv at twistedmatrix.com  Wed Mar 16 03:19:27 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 16 Mar 2005 10:19:27 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13185 - Applied patch
	from	Ralph Meijer for issue 448
In-Reply-To: <a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>
References: <E1DAw2L-0003O2-00@wolfwood>
	<a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>
Message-ID: <4237EC0F.2000701@twistedmatrix.com>

James Y Knight wrote:
> E.g., in this case "Applied patch from Ralph Meijer for issue 448: fixes 
> digest authentication in Jabber client" would be great.

ITYM "Fix Jabber client digest authentication, closes issue448. From 
Ralph Meijer." HTH, HAND

PS. My pet peeve, too. Spend atleast 20 seconds on your commit message
or get ranted at on IRC.



From radeex at gmail.com  Wed Mar 16 04:29:23 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 20:29:23 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
Message-ID: <60ed19d405031601294c33b81c@mail.gmail.com>

Now with MD5 sums and release notes on the web pages!

http://twistedmatrix.com/projects/

No known release-critical bugs in this prerelease. If I don't receive
any reports of grave malfunction, then 2.0-for-real will be out in a
day or two.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From bob at redivi.com  Wed Mar 16 05:09:53 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Mar 2005 05:09:53 -0500
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031601294c33b81c@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
Message-ID: <e50796c3ead39b40bba58e57e484b297@redivi.com>


On Mar 16, 2005, at 4:29, Christopher Armstrong wrote:

> Now with MD5 sums and release notes on the web pages!
>
> http://twistedmatrix.com/projects/
>
> No known release-critical bugs in this prerelease. If I don't receive
> any reports of grave malfunction, then 2.0-for-real will be out in a
> day or two.

Where is the setup.py for sumo in svn?  I need to tweak it or write 
something similar so that Mac OS X packages can be built from it in a 
sane manner...

-bob




From D.Sinang at spitech.com  Wed Mar 16 05:21:47 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Wed, 16 Mar 2005 18:21:47 +0800
Subject: [Twisted-Python] How to accept connections faster
Message-ID: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>

Hello.
 
I ran the (Twisted) server code below and it accepts a client socket
connection every 1.3 seconds. The equivalent Synchronous socket code
accepts one every 2 seconds. 
 
Can anyone here suggest any code improvements for my Twisted server to
accept connections faster ?
 
I've include the Synchronous socket server code and the client generator
code below as well.
 
#
========================================================================
==================
# Twisted server code
#
========================================================================
==================
 
from twisted.protocols import basic
from twisted.internet import reactor, protocol
 
import time
 

class MyChat(basic.LineReceiver):
    def connectionMade(self):
 
        print "Got a connection from on " + time.asctime()
        self.transport.write("Welcome. You are client number : ")
        print "Looping..."
        for i in range(10000000):
            pass
        print "Looping done."
        self.transport.loseConnection()

    def connectionLost(self, reason):
        pass

    def lineReceived(self, line):
        for c in self.factory.clients:
            c.message(line)
 
    def message(self, message):
        self.transport.write(message + '\n')
 
    def __init__ (self) :
        self.x = 1
        self.duration = 60
 
print "Starting Twisted Async Server"
print
 
factory = protocol.ServerFactory()
factory.protocol = MyChat
factory.clients = []
 
reactor.listenTCP(7878,factory,10)
reactor.run()
    
#
========================================================================
=========
# Synchronous socket server code 
#
========================================================================
=========
 
from socket import *
import sys
import time
 
s = socket(AF_INET, SOCK_STREAM)
s.bind(('', 7878))
s.listen(10)
 
print 'Login Server started on port 7878' 
 
x = 1
 

while 1:
    client,addr = s.accept()
    print str(x) + ". Got a conection from " + str(addr) + " on " +
time.asctime()
    print "Looping..."  
    for i in range(10000000):
        pass
    print "Loop done. Ready for connection..."
    print
    client.sendall ("Welcome. You are client number : " + str(x))
    x += 1
 
#
========================================================================
=========
# Socket client code
#
========================================================================
=========
 
from socket import *
import sys
import time
 
s = socket(AF_INET, SOCK_STREAM)
 
print 'Creating 20 clients...' 
 
x = 1
duration = 60
for i in range(20):
    print "Client " + str(x) + "." + " connecting to localhost at " +
time.asctime()
    s = socket(AF_INET, SOCK_STREAM)
    s.connect (("127.0.0.1",7878))
    print "Client Connected..." , time.asctime()
    s.sendall("Hello\r\n")
    data = s.recv(1024)
    print data
    x += 1 
    s.close()
 
 
Regards,
Danny
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050316/320c8c3d/attachment.htm 

From radeex at gmail.com  Wed Mar 16 05:35:03 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 21:35:03 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <e50796c3ead39b40bba58e57e484b297@redivi.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<e50796c3ead39b40bba58e57e484b297@redivi.com>
Message-ID: <60ed19d4050316023575305996@mail.gmail.com>

On Wed, 16 Mar 2005 05:09:53 -0500, Bob Ippolito <bob at redivi.com> wrote:
> Where is the setup.py for sumo in svn?  I need to tweak it or write
> something similar so that Mac OS X packages can be built from it in a
> sane manner...

trunk/setup.py

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From bob at redivi.com  Wed Mar 16 05:39:48 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Mar 2005 05:39:48 -0500
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <b45856911f4c9e92e5b2c37d986262ca@redivi.com>


On Mar 16, 2005, at 5:21, Sinang, Danny wrote:

> I ran the (Twisted) server code below and it accepts a client socket 
> connection every?1.3 seconds. The?equivalent?Synchronous socket code 
> accepts?one every 2 seconds.
>  ?
> Can anyone here suggest any code?improvements for?my Twisted server to 
> accept connections faster ?
...
> ?
> ??????? for i in range(10000000):
> ??????????? pass
> ??????? print "Looping done."

That is blocking code and is not suitable for usage in a Twisted server 
if you expect good performance.  All functions that run in the 
reactor's thread should be designed to return quickly so that Twisted 
can handle events quickly.  You either need to refactor it to run 
iteratively (via successive callLater, LoopingCall, etc.), or in 
another thread (deferToThread).

-bob




From mary-twisted at puzzling.org  Wed Mar 16 05:40:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 16 Mar 2005 21:40:13 +1100
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <20050316104013.GA17105@sourdust.home.puzzling.org>

On Wed, Mar 16, 2005, Sinang, Danny wrote:
>         print "Looping..."
>         for i in range(10000000):
>             pass
>         print "Looping done."

Because this doesn't allow control to return to the main loop: it blocks
the entire process.

-Mary



From mcfletch at rogers.com  Wed Mar 16 05:41:43 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 16 Mar 2005 05:41:43 -0500
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <42380D67.4000404@rogers.com>

Danny, Twisted is an asynchronous system.  You *cannot* use that kind of 
blocking delay tactic in Twisted without totally destroying Twisted's 
functionality:

>         for i in range(10000000):
>             pass
>         print "Looping done."
>         self.transport.loseConnection()
>
should have been something like:

    def closeInABit( ):
        self.transport.loseConnection()
    reactor.callLater( 2, closeInABit ) # call after 2 seconds

You'll want to read up on asynchronous programming (e.g. on the Twisted 
web site) to get a feel for how this model of programming networked apps 
works.

Good luck,
Mike


Sinang, Danny wrote:

> Hello.
>  
> I ran the (Twisted) server code below and it accepts a client socket 
> connection every 1.3 seconds. The equivalent Synchronous socket code 
> accepts one every 2 seconds.
>  
> Can anyone here suggest any code improvements for my Twisted server to 
> accept connections faster ?
>  
> I've include the Synchronous socket server code and the client 
> generator code below as well.
>  

...
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From solipsis at pitrou.net  Wed Mar 16 05:44:04 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 16 Mar 2005 11:44:04 +0100
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <1110969844.32062.8.camel@p-dhcp-333-72.rd.francetelecom.fr>


>     def connectionMade(self):
>  
>         print "Got a connection from on " + time.asctime()
>         self.transport.write("Welcome. You are client number : ")
>         print "Looping..."
>         for i in range(10000000):
>             pass

Why are you doing that ?
An event loop-based server like Twisted is not multithreaded. It means
during the handling of any event (e.g. connectionMade), other events
will not be processed, they will just be queued (by the OS usually).
When you return from the event handler, the Twisted event loop will
resume and process other events.

If you really have heavy calculations and want to keep good latencies,
you have two solutions:
- either slice your calculations in small pieces and call them one after
the other with reactor.callLater(), which ensures that you let other
events slip by
- or defer the calculations to a helper thread or process, with which
you will have to synchronize in the traditional way
(reactor.callFromThread() and reactor.callInThread() may help... I don't
know)

Good luck

Antoine.





From Henning.Ramm at mediapro-gmbh.de  Wed Mar 16 06:58:04 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Mar 2005 12:58:04 +0100
Subject: [Twisted-Python] declare  pb.Copyable only once
Message-ID: <F92274058556DE42B94B148EEFB9183949E66D@exchange-03.suedkurier.de>

Hi there!

At the moment I'm trying to wrap my mind around pb objects.

I learned from the pb.Copyable howto (http://twistedmatrix.com/documents/current/howto/pb-copyable) that I must setUnjellyableForClass every object that could be sent from a client.

I need a simple empty utility class like this:

class Info(pb.Copyable):
    def __init__(self, obj=None):
        if obj: self.__dict__.update(obj.__dict__)

Because I can use such in server as well as in client, I defined the class in the server and imported it in the client.

Nevertheless I get an InsecureJelly exception in the server.

If I setUnjellyable... it in the server as in
pb.setUnjellyableForClass(Info, Info)
I get an AttributeError: Info instance has no attribute 'unjellyFor'

Is there any way to declare this class only once and not separate for server and client?


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From mikah at ceruleansoftware.com  Wed Mar 16 08:12:07 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Wed, 16 Mar 2005 21:12:07 +0800
Subject: [Twisted-Python] servers that are also clients? (newbie question)
Message-ID: <20050316131207.GA16347@ceruleansoftware.com>

Hello everyone,

  I've decided to implement my latest work project using
Twisted. I'm still in the design phase, and haven't actually
written any Twisted code. I'm still wading through the
documentation.

  My app is both a server and client at the same time. It takes
requests from some clients, and also relays these requests
(suitably reformatted) to a pair of third-party servers. In
this sense, it is acting as a client (I intend to use
ReconnectingClient for this).

  It essentially needs to seek confirmation from those other
servers before deciding how to respond to the 'real' clients.

  So, I understand how to write the server part of it (based on
the Howtos for mktap plugins and writing servers), but where
does the client part of the code come in?

  As I understand it, Services or Factories can encapsulate
code that should be independent of the Protocols. Should the
server-as-client code go there? 

  Thanks in advance! I hope someone can point me in the right
direction.

mikah





From leszczynscy at yahoo.com  Wed Mar 16 08:46:14 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Wed, 16 Mar 2005 05:46:14 -0800 (PST)
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: 6667
Message-ID: <20050316134614.91953.qmail@web30501.mail.mud.yahoo.com>

Hi,

>         print "Looping..."
>         for i in range(10000000):
>             pass
>         print "Looping done."

regardles I am not sure the reason of the loop and how
it fits into the design of Reactor, I wonder why it is
*only* 2 seconds. On my laptop 1.1GHz, 256MB RAM it
takes a way more to complete the loop and unblock the
Reactor's "select".

Second comment is why not xrange(10000000). With range
my  python2.3 starts allocating xxMB of memory.

What machine,OS,python version you use?
A.



From symbiont at berlios.de  Wed Mar 16 10:52:58 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Wed, 16 Mar 2005 23:52:58 +0800
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031601294c33b81c@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
Message-ID: <200503162352.58630.symbiont@berlios.de>

On Wednesday 16 March 2005 17:29, Christopher Armstrong wrote:
> Now with MD5 sums and release notes on the web pages!
>
> http://twistedmatrix.com/projects/
>
> No known release-critical bugs in this prerelease. If I don't receive
> any reports of grave malfunction, then 2.0-for-real will be out in a
> day or two.

Couple of questions:

1. Where did pair and web2 go?

2. Is it possible to get improved blurbs for the projects? (Words like 
"thing", "stuff", "ish", probably could be expounded upon.)  :-D

thanks,
-- 
-jeff



From continuum83 at yahoo.com  Wed Mar 16 11:23:36 2005
From: continuum83 at yahoo.com (Eric T)
Date: Wed, 16 Mar 2005 08:23:36 -0800 (PST)
Subject: [Twisted-Python] connecting with a FlashXML socket
Message-ID: <20050316162336.68212.qmail@web53302.mail.yahoo.com>

hey All,

my friend and i are attempting to use twisted as a
socket server to be able to accept connections from a
flash client.

here is the simple connection code on the serverside:

from twisted.protocols import basic

class TestApp(basic.LineReceiver):
    def connectionMade(self):
        print "new client\n"
        self.factory.clients.append(self)
        self.message("test")
        self.sendLine("another test");

    def connectionLost(self):
        print "lost client\n"
        self.factory.clients.remove(self)

    def lineReceived(self,line):
        print "recieved:", repr(line)
        for c in self.factory.clients:
            c.message(line)

    def message(self,msg):
        self.transport.write(msg + '\n')
        print msg + '\n'

this is basically the same as an example we were using
to help us get the code going. but when we run the
server, and then go to the client... the client
connects fine, but we cannt send/recieve any messages.

we tried setting the self.delimiter = "\0" since that
is a requirement for flashXML, but it still wouldnt
send/recieve.

the socket code on the flash-side is relative to the
following:
mySocket = new XMLSocket();

mySocket.onConnect = function(success)
{
	if (success)
		msgArea.htmlText += ";<b>Server connection
established!</b>"
	else
		msgArea.htmlText += "<b>Server connection
failed!</b>"
}

mySocket.onClose = function()
{
	msgArea.htmlText += "<b>Server connection lost</b>"
}

XMLSocket.prototype.onData = function(msg)
{
	trace("MSG: " + msg)
	msgArea.htmlText += msg
}

mySocket.connect("localhost", 9999)

function sendMsg()
{
mySocket.send(inputMsg.htmlText + "\n")
	}
}



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From continuum83 at yahoo.com  Wed Mar 16 11:25:31 2005
From: continuum83 at yahoo.com (Eric T)
Date: Wed, 16 Mar 2005 08:25:31 -0800 (PST)
Subject: [Twisted-Python] sorry about the last message (flashXML continued)
Message-ID: <20050316162531.7522.qmail@web53304.mail.yahoo.com>

sorry about that, hit the wrong key, and i sent my
message before i was able to finish. heh. i guess most
of it is there, but i just want to say thanks for any
help. sorry again.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From digi at treepy.com  Wed Mar 16 11:40:41 2005
From: digi at treepy.com (Patrick Lauber)
Date: Wed, 16 Mar 2005 17:40:41 +0100
Subject: [Twisted-Python] connecting with a FlashXML socket
In-Reply-To: <20050316162336.68212.qmail@web53302.mail.yahoo.com>
References: <20050316162336.68212.qmail@web53302.mail.yahoo.com>
Message-ID: <42386189.2040208@treepy.com>

i use a \x00 as a terminator....
this script below has an other class changhandler that looks if there is 
a new file in directory and sends that file (xml) to all connected 
clients... it's used for a web radio to push the meta infos to the clients.
have fun

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor
from xml.dom.minidom import parseString
import changehandler
class Radio(Protocol):
   
    def connectionMade(self):
        self.factory.clients.append(self)
        self.transport.write(self.factory.msg)
        self.ip=self.transport.getHost().host
        print self.ip+' connected'
    def dataReceived(self, data):
        print data
        try:
            doc=parseString(data[0:-1])
            if doc.nodeName == 'connect':
                if doc.attributes.has_key('service'):
                    self.service=doc.attributes['service']._value
                    print "new service"+self.sevice
                else:
                    print "connect was malformatted"
            else:
                pass
        except:
           print "parsing error"
       
       
    def connectionLost(self, reason='connectionDone'):
        print self.ip+' disconnected'
 


class XMLSocket(Factory):
    clients=[]
    msg='<hello>world</hello>\x00'
    protocol = Radio
    services = [["radio",Radio]]
    def __init__(self, protocol=None):
        self.protocol=protocol
        reactor.callLater(0,self.sendMsg)
    def sendMsg(self):
        msg=changehandler.waiting()
        if msg:
            for client in self.clients:
                client.transport.write(msg+"\x00")
        reactor.callLater(0,self.sendMsg)

reactor.listenTCP(8000, XMLSocket(Radio))
reactor.run()




From projects at reedflute.com  Wed Mar 16 12:01:12 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 16 Mar 2005 19:01:12 +0200
Subject: [Twisted-Python] servers that are also clients? (newbie question)
In-Reply-To: <20050316131207.GA16347@ceruleansoftware.com>
References: <20050316131207.GA16347@ceruleansoftware.com>
Message-ID: <42386658.6030209@reedflute.com>

mikah at ceruleansoftware.com wrote:

>  My app is both a server and client at the same time. It takes
>requests from some clients, and also relays these requests
>(suitably reformatted) to a pair of third-party servers. In
>this sense, it is acting as a client (I intend to use
>ReconnectingClient for this).
>
>  
>
I'm busy doing the same kind of thing.

I use a separate server/client factory which I connect with some 
abstraction layer I choose to call a conductor. The conductor also 
manages a buffer and uses callbacks into the server/client protocol 
instances.

I'm sure there must be a more clever Twisted way of doing this but I 
couldn't find any docs.

here is how the contraption starts up.

*************************************
from eva_config import EvaConfig
from eva_conductor import Conductor
from controller import ControllerFactory
from courier import CourierClientFactory
from twisted.application import service,internet

resourcemap=EvaConfig().getResourceMap()
conductor=Conductor(resourcemap).configure()
application=service.Application('eva',uid=1000,gid=100)
controllerfactory = ControllerFactory(conductor)
internet.TCPServer(8831,controllerfactory).setServiceParent( 
service.IServiceCollection(application))
courierclientfactory = CourierClientFactory(conductor)
internet.TCPClient("server1","ftp",courierclientfactory).setServiceParent( 
service.IServiceCollection(application))
****************************************

Works for me.

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From justinjohnson at gmail.com  Wed Mar 16 13:17:45 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 16 Mar 2005 12:17:45 -0600
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050315133750.GQ7699@opteron.random>
References: <20050314000518.GU9270@opteron.random>
	<20050314125504.13806.632641844.divmod.quotient.1560@ohm>
	<20050315133750.GQ7699@opteron.random>
Message-ID: <94a776e705031610172542f374@mail.gmail.com>

I got a similar problem trying to run "mktap names".  Since I didn't
see an existing issue I submitted
http://twistedmatrix.com/bugs/issue926.


On Tue, 15 Mar 2005 14:37:50 +0100, Andrea Arcangeli
<andrea at cpushare.com> wrote:
> On Mon, Mar 14, 2005 at 12:55:04PM +0000, Jp Calderone wrote:
> >   When does this happen, exactly?  I don't have dia installed, either,
> >   and I'm not seeing any mktap output related to it.
> 
> It happens when I run it as root to bind to port 80/443 (with
> appropriate uid change). It catches /usr/bin/which instead of the shell
> builtin. See the difference between which dia and /usr/bin/which dia.
> 
> It's only a minor warning...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mary-twisted at puzzling.org  Wed Mar 16 17:04:37 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 17 Mar 2005 09:04:37 +1100
Subject: Project pages (Re: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script)
In-Reply-To: <200503162352.58630.symbiont@berlios.de>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
Message-ID: <20050316220437.GA6002@home.puzzling.org>

On Wed, Mar 16, 2005, Jeff Pitman wrote:
> 2. Is it possible to get improved blurbs for the projects? (Words like
> "thing", "stuff", "ish", probably could be expounded upon.)  :-D

I'm not entirely sure, but I think this will be up to the maintainers.
Chris and I wrote most of those blurbs between us. Certainly, the
maintainers can do it faster than I can.

Maintainers: it would be great if this could be done ASAP -- the
relevant files are the .proj files in the WebSite's trunk:
http://svn.twistedmatrix.com/cvs/trunk/twistedmatrix.com/projects/data/?root=WebSite

The file format is rfc822, you should only have to edit the 'body' to
improve the longer descriptions. If you want to improve the shorter
description appearing on http://twistedmatrix.com/projects/, edit the
description field too.

It's not release critical I think because we can regenerate the website
post-release. But it would be nice.

-Mary



From bolsen at verio.net  Wed Mar 16 18:52:09 2005
From: bolsen at verio.net (Ben Olsen)
Date: Wed, 16 Mar 2005 16:52:09 -0700
Subject: [Twisted-Python] help with InsecureJelly for unkown objects in
	classes
Message-ID: <4238C6A9.5040204@verio.net>

I know there are at least a few game programmers on this list, so I'm 
hoping someone can help me out. I figured a simple NetPong game would be 
a great way to learn some Twisted and Pygame, and so far it's gone well. 
I was able to run a simple game by sending individual game status 
elements between client and server. Just today I tried to change things 
around to use pb.Copyable and pb.RemoteCopy to send a GameStatus class 
which contains all the game state details (player positions, ball 
position, etc). I've managed to send the class, but only if it contains 
standard objects. However, I'd like the GameStatus to include a really 
useful Pygame object, called Rect. Whenever I try to send that across 
the wire, I get:
twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
'Rect'> <rect(0, 0, 32, 32)>

I've tried a number of things, but I can't get Twisted to accept a Rect 
as a sendable object. One thing I tried was subclassing Rect:
class netRect(Rect, pb.Copyable, pb.RemoteCopy):
   pass
and using that in my GameState instead. Still get the same error. I 
tried calling pb.setUnjellyableForClass for it on both client and server 
side (only client is receiving, but the exception is thrown on server 
side), but it didn't help. I also tried inheriting from Jellyable and 
Unjellyable, but I don't really understand the specifics of how to use 
those.

Does anybody have tips on passing custom objects (such as pygame.Rect) 
in Copyable classes?

Ben Olsen




From radeex at gmail.com  Wed Mar 16 19:25:07 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 17 Mar 2005 11:25:07 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031613189cd97a1@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
	<60ed19d405031613189cd97a1@mail.gmail.com>
Message-ID: <60ed19d40503161625bc90e58@mail.gmail.com>

On Wed, 16 Mar 2005 23:52:58 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
> On Wednesday 16 March 2005 17:29, Christopher Armstrong wrote:
> > Now with MD5 sums and release notes on the web pages!
> >
> > http://twistedmatrix.com/projects/
> >
> > No known release-critical bugs in this prerelease. If I don't receive
> > any reports of grave malfunction, then 2.0-for-real will be out in a
> > day or two.
>
> Couple of questions:
>
> 1. Where did pair and web2 go?

huh, I guess I forgot to make a web page for pair. it's been released.
I'll make the page later today.

web2 is not being released yet, as per the main developer's request.

> 2. Is it possible to get improved blurbs for the projects? (Words like
> "thing", "stuff", "ish", probably could be expounded upon.)  :-D

DEVELOPERS:

svn checkout svn+ssh://svn.twistedmatrix.com/svn/WebSite/trunk WebSite
cd twistedmatrix.com/projects/data/
vi <yourproj>.data
svn commit

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From mary-twisted at puzzling.org  Wed Mar 16 19:28:50 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 17 Mar 2005 11:28:50 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d40503161625bc90e58@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
	<60ed19d405031613189cd97a1@mail.gmail.com>
	<60ed19d40503161625bc90e58@mail.gmail.com>
Message-ID: <20050317002850.GA13481@home.puzzling.org>

On Thu, Mar 17, 2005, Christopher Armstrong wrote:
> DEVELOPERS:
> 
> svn checkout svn+ssh://svn.twistedmatrix.com/svn/WebSite/trunk WebSite
> cd twistedmatrix.com/projects/data/
> vi <yourproj> .data
> svn commit
> 

I'll file bugs against maintainers who haven't already done this (except
maybe for core, there's already a bit of stuff for core) this afternoon.

-Mary



From D.Sinang at spitech.com  Wed Mar 16 20:25:58 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Thu, 17 Mar 2005 09:25:58 +0800
Subject: [Twisted-Python] How to accept connections faster
Message-ID: <048A40781D05D143842A596D7C78F40F054384D5@spi-mail2003.spitech.com>

Hi Mike,

Thanks for the tip. My code is indeed running faster now.

However, the reason for the loop was to somehow simulate late responses
from a remote database server.

I'm guessing I should put the database query code in the closeInABit
method you mentioned like this :

def closeInABit ():
        mydb = MySQLdb.Connect(db='mydatabase', host="10.10.10.10",
user="myuser", passwd="mypassword")
        cursor = mydb.cursor()

        retval = ''
        cursor = mydb.cursor()
        cursor.execute("SELECT * FROM Employees WHERE empnum = 'ABCD'")
	  retval = cursor.fetchone()
	  if retval == SomeValue:
		self.transport.write("Login Ok")
	  else:
		self.transport.write("Login not Ok")
        cursor.close()
        mydb.close()
 	  self.transport.loseConnection()

Is this ok ? Or should there be some special Asycn coding technique I
must also learn ?

Regards,
Danny

==================================================================

Mike C. Fletcher wrote :

Danny, Twisted is an asynchronous system.  You *cannot* use that kind of
blocking delay tactic in Twisted without totally destroying Twisted's
functionality:

>         for i in range(10000000):
>             pass
>         print "Looping done."
>         self.transport.loseConnection()
>
should have been something like:

    def closeInABit( ):
        self.transport.loseConnection()
    reactor.callLater( 2, closeInABit ) # call after 2 seconds

You'll want to read up on asynchronous programming (e.g. on the Twisted
web site) to get a feel for how this model of programming networked apps
works.

Good luck,
Mike


Sinang, Danny wrote:

> Hello.
>  
> I ran the (Twisted) server code below and it accepts a client socket 
> connection every 1.3 seconds. The equivalent Synchronous socket code 
> accepts one every 2 seconds.
>  
> Can anyone here suggest any code improvements for my Twisted server to

> accept connections faster ?
>  
> I've include the Synchronous socket server code and the client 
> generator code below as well.
>  

...
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From exarkun at divmod.com  Wed Mar 16 21:24:21 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 02:24:21 GMT
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F054384D5@spi-mail2003.spitech.com>
Message-ID: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>

On Thu, 17 Mar 2005 09:25:58 +0800, "Sinang, Danny" <d.sinang at spitech.com> wrote:
>Hi Mike,
> 
> Thanks for the tip. My code is indeed running faster now.
> 
> However, the reason for the loop was to somehow simulate late responses
> from a remote database server.
> 
> I'm guessing I should put the database query code in the closeInABit
> method you mentioned like this :
> [snip - blocking database code]
> 
> Is this ok ? Or should there be some special Asycn coding technique I
> must also learn ?

  Yea, async.  Async is nice.  Twisted comes with a moduled named "adbapi" that provides a non-blocking layer around standard DB-API 2.0 modules (such as MySQLdb).  You can read more about it here at <http://twistedmatrix.com/documents/current/howto/enterprise>.

  Jp



From Henning.Ramm at mediapro-gmbh.de  Thu Mar 17 02:51:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 17 Mar 2005 08:51:22 +0100
Subject: [Twisted-Python] help with InsecureJelly for unkown objects
	inclasses
Message-ID: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>

>twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
>'Rect'> <rect(0, 0, 32, 32)>

That's not related to pygame, but general pb behaviour.
See my question about "declare pb.Copyable once" and look at this howto:
http://twistedmatrix.com/documents/current/howto/pb-copyable


Best regards,
Henning Hraban Ramm
S?dkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From andrea at cpushare.com  Thu Mar 17 07:40:56 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 13:40:56 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting client
	factory
Message-ID: <20050317124056.GJ21597@opteron.random>

>From a client I'm getting this error:

2005/03/16 10:42 CET [cpushare_protocol,client] 'limit sell'
2005/03/17 06:31 CET [cpushare_protocol,client] Traceback (most recent call last):
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
            return func(*args,**kw)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/pollreactor.py", line 160, in _doReadOrWrite
            why = selectable.doRead()
        --- <exception caught here> ---
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 98, in doRead
            return Connection.doRead(self)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 239, in doRead
            data = self.socket.recv(self.bufferSize)
        OpenSSL.SSL.SysCallError: (110, 'Connection timed out')
        
2005/03/17 06:31 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
econds
2005/03/17 06:31 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/17 06:31 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
imeout caused connection failure.
2005/03/17 06:31 CET [-] ]
2005/03/17 06:31 CET [-] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>

This is a reconnecting client factory, the python version is 2.3.4 and twisted
version is 1.3.0a. The socket should sit in a idle state. No communication over
that socket will happen (the app is under development), but it should not go in
timeout unless the connection with the server ends and the keepalive events
triggers a disconnect (I enabled keepalive on the tcp level).

Even if it goes in timeout it must try to reconnect immediatly while it seems
like it's hanging after the "Stopping factory".


Earlier when I got the connection timed out event (for no apparent good reason)
at least it was immediatly trying to reconnect:

2005/03/14 05:30 CET [cpushare_protocol,client] 'limit sell'
2005/03/14 17:59 CET [cpushare_protocol,client] Traceback (most recent call last):
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
            return func(*args,**kw)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/pollreactor.py", line 160, in _doReadOrWrite
            why = selectable.doRead()
        --- <exception caught here> ---
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 98, in doRead
            return Connection.doRead(self)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 239, in doRead
            data = self.socket.recv(self.bufferSize)
        OpenSSL.SSL.SysCallError: (110, 'Connection timed out')
        
2005/03/14 17:59 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
econds
2005/03/14 17:59 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/14 17:59 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>


So my first priority is to understand why it stopped trying to reconnect (which
is the major bug) and the second priority is to understand why it was going in
timeout in the first place. (I can't exclude there have been a temporary network
disruption that caused the keepalive to trigger the disconnect.)

Could this be a bug in 1.3.0a? I expect the client will be mostly run with
1.3.0a, only on the server side I use SVN + pending fixes.

This is the reconnecting code:

class cpushare_factory(ReconnectingClientFactory):
	maxDelay = 600 # limit the maximum delay to 10 min

	protocol = cpushare_protocol

	def buildProtocol(self, addr):
		self.resetDelay()
		protocol = self.protocol()
		assert not hasattr(protocol, 'factory')
		protocol.factory = self
		return protocol

	def clientConnectionFailed(self, connector, reason):
		print 'Connection failed. Reason:', reason
		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

	def connectionMade(self):
		self.transport.setTcpKeepAlive(1)

Is the above correct? It works fine when the connection failed reason is
"ConnectionRefusedError" instead of TimeoutError.


What else should I do to prevent this error to leave the factory stopped?

2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
imeout caused connection failure.

Where does the "twisted.internet.error.TimeoutError" come from?


The full source is LGPL and downloadable here:

	https://www.cpushare.com/downloads/cpushare-0.11.tar.bz2

The server side logs are absolutely not-interesting, all I get is a
connectionLost event without any apparent error (server side is SVN-trunk).

Any help is greatly appreciated, thanks!



From exarkun at divmod.com  Thu Mar 17 09:28:06 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 14:28:06 GMT
Subject: [Twisted-Python] help with ssl timeout and not reconnecting client
	factory
In-Reply-To: <20050317124056.GJ21597@opteron.random>
Message-ID: <20050317142806.13806.1838714217.divmod.quotient.7796@ohm>

On Thu, 17 Mar 2005 13:40:56 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>>From a client I'm getting this error:
> 
> [snip -  traceback and log]
>         
> This is a reconnecting client factory, the python version is 2.3.4 and twisted
> version is 1.3.0a. The socket should sit in a idle state. No communication over
> that socket will happen (the app is under development), but it should not go in
> timeout unless the connection with the server ends and the keepalive events
> triggers a disconnect (I enabled keepalive on the tcp level).
> 
> Even if it goes in timeout it must try to reconnect immediatly while it seems
> like it's hanging after the "Stopping factory".
> 
> 
> Earlier when I got the connection timed out event (for no apparent good reason)
> at least it was immediatly trying to reconnect:
> 
> [snip - traceback and log]
>         
> 2005/03/14 17:59 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
> econds
> 2005/03/14 17:59 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
> 2005/03/14 17:59 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
> 
> 
> So my first priority is to understand why it stopped trying to reconnect (which
> is the major bug) and the second priority is to understand why it was going in
> timeout in the first place. (I can't exclude there have been a temporary network
> disruption that caused the keepalive to trigger the disconnect.)

  For some reason unfathomable to me, ReconnectingClientFactory _stops_ trying to reconnect if a UserError is the cause of failed connection.  Further, for some reason, error.TimeoutError subclasses UserError.  This has bitten at least one other project (buildbot).

> 
> Could this be a bug in 1.3.0a? I expect the client will be mostly run with
> 1.3.0a, only on the server side I use SVN + pending fixes.

  I'm inclined to say that it is indeed a bug.  I think ReconnectingClientFactory should always retry the connection, regardless of the exception with which the previous attempt fails.  If a program wants to allow a user to interrupt the retry logic, there is a "stopTrying" method.

> 
> This is the reconnecting code:
> 
> class cpushare_factory(ReconnectingClientFactory):
> 	maxDelay = 600 # limit the maximum delay to 10 min
> 
> 	protocol = cpushare_protocol
> 
> 	def buildProtocol(self, addr):
> 		self.resetDelay()
> 		protocol = self.protocol()
> 		assert not hasattr(protocol, 'factory')
> 		protocol.factory = self
> 		return protocol
> 
> 	def clientConnectionFailed(self, connector, reason):
> 		print 'Connection failed. Reason:', reason
> 		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

  If you look at twisted/internet/protocol.py for the definition of ReconnectingClientFactory.clientConnectionFailed, it should be pretty obvious how you want to redefine clientConnectionFailed to avoid the behavior you're seeing.

> 
> 	def connectionMade(self):
> 		self.transport.setTcpKeepAlive(1)
> 
> Is the above correct? It works fine when the connection failed reason is
> "ConnectionRefusedError" instead of TimeoutError.
> 
> 
> What else should I do to prevent this error to leave the factory stopped?
> 
> 2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
> imeout caused connection failure.
> 
> Where does the "twisted.internet.error.TimeoutError" come from?
> 

  It's generated internally by Twisted when the alloted connection time has elapsed without a connection being created.

  Most likely it _is_ network related problems that caused the connection to fail, but Twisted is certainly responsible for the decision to cease further reconnection attempts.

  Jp



From dizzyd at gmail.com  Thu Mar 17 10:58:14 2005
From: dizzyd at gmail.com (Dave Smith)
Date: Thu, 17 Mar 2005 08:58:14 -0700
Subject: [Twisted-Python] Commit Messages
Message-ID: <cba01a4105031707586d81c101@mail.gmail.com>

James/Tommi,

I didn't see your requests about commit messages until after
committing (yet another) patch this morning. I'll be more descriptive
from here on out.

One of the reasons that I typically write commit messages like the
above, is because I like to keep information about bug fixes in as few
places as possible -- i.e. the bug tracker is there for a reason. :)

That said, different cultures deal with commit messages in different
ways, so I'll try to fit into the local culture as best I can. :)

D.



From bolsen at verio.net  Thu Mar 17 11:58:08 2005
From: bolsen at verio.net (Ben Olsen)
Date: Thu, 17 Mar 2005 09:58:08 -0700
Subject: [Twisted-Python] help with InsecureJelly for unkown
	objects	inclasses
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>
Message-ID: <4239B720.60205@verio.net>

Henning,

I realize the error isn't specific to pygame in any way, I was just 
hoping to give everyone enough context. I'm getting the error because a 
pygame.Rect isn't a jellyable object. But so far I haven't been able to 
make a jellyable object out of it. The problem for me is that this Rect 
object is inside of another class (i.e. a GameState class). I can set 
pb.Copyable and pb.RemoteCopy on the GameState class, and it goes back 
and forth just fine, but *only* if I remove the pygame.Rect attributes 
from it.

I searched the twisted site for "declare pb.Copyable once," and even 
just the word "Henning," but I couldn't find any threads about this. And 
unfortunately the howto doesn't help, since all it shows is how to send 
a simple class back and forth, which I can do fine.

Any other suggestions for getting a class with non-standard objects in 
it to jelly properly?

Ben

Henning.Ramm at mediapro-gmbh.de wrote:

>>twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
>>'Rect'> <rect(0, 0, 32, 32)>
>>    
>>
>
>That's not related to pygame, but general pb behaviour.
>See my question about "declare pb.Copyable once" and look at this howto:
>http://twistedmatrix.com/documents/current/howto/pb-copyable
>
>
>Best regards,
>Henning Hraban Ramm
>S?dkurier Medienhaus / MediaPro
>Support/Admin/Development Dept.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>



From itamar at itamarst.org  Thu Mar 17 11:51:04 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Mar 2005 11:51:04 -0500
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317124056.GJ21597@opteron.random>
References: <20050317124056.GJ21597@opteron.random>
Message-ID: <1111078265.8749.12.camel@localhost.localdomain>

On Thu, 2005-03-17 at 13:40 +0100, Andrea Arcangeli wrote:

> Even if it goes in timeout it must try to reconnect immediatly while it seems
> like it's hanging after the "Stopping factory".

There was a bug in 1.3 in ReconnectingClientFactory that caused it to
not reconnect on TimeoutErrors. It's fixed in 2.0.




From itamar at itamarst.org  Thu Mar 17 11:52:06 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Mar 2005 11:52:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13213 - Connection timeouts
	raise _error.TimeoutError_, not defer.TimeoutError.
In-Reply-To: <E1DBwCq-0005Xi-00@wolfwood>
References: <E1DBwCq-0005Xi-00@wolfwood>
Message-ID: <1111078326.8749.14.camel@localhost.localdomain>

On Thu, 2005-03-17 at 07:42 -0700, Jp Calderone wrote:

>              self.connector = connector
> -            if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> +            if not reason.check(error.UserError) or reason.check(error.TimeoutError):
>                  self.retry()

Maybe we should just drop the UserError thing? It's causing way too many
bugs. Also, why are error.TimeoutError and defer.TimeoutError different?




From exarkun at divmod.com  Thu Mar 17 12:26:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 17:26:39 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13213 - Connection
	timeouts raise _error.TimeoutError_, not defer.TimeoutError.
In-Reply-To: <1111078326.8749.14.camel@localhost.localdomain>
Message-ID: <20050317172639.13806.1889717453.divmod.quotient.8043@ohm>

On Thu, 17 Mar 2005 11:52:06 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2005-03-17 at 07:42 -0700, Jp Calderone wrote:
> 
> >              self.connector = connector
> > -            if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> > +            if not reason.check(error.UserError) or reason.check(error.TimeoutError):
> >                  self.retry()
> 
> Maybe we should just drop the UserError thing? It's causing way too many
> bugs. Also, why are error.TimeoutError and defer.TimeoutError different?
> 

  error.TimeoutError is a general t.internet timeout error.  defer.TimeoutError is the except used when a setTimeout timeout expires.

  The latter should obviously not exist, since Deferred.setTimeout should not even exist.  I think the change I made is the most appropriate given the current proximity to 2.0.

  Jp



From qhfgva at gmail.com  Thu Mar 17 12:29:09 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Thu, 17 Mar 2005 10:29:09 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050308055911.GM7812@trogdor.home.puzzling.org>
References: <b75caff405030721216aebf5a@mail.gmail.com>
	<20050308055911.GM7812@trogdor.home.puzzling.org>
Message-ID: <b75caff4050317092951522774@mail.gmail.com>

So I've got a simple prototype of what I'm trying to achieve with my
"queued tasks" xmlrpc server.

I'd appreciate any comments, suggestions.  So far it seems to work
exactly I wanted but I have a feeling I'm abusing the intended use of
deferreds.  And that by polling I'm deviating from the twisted
workflow model.  But you have to start somewhere.

Here is the code and a test client.

xmlrpc_queued_tasks_server.py==============================
#!/usr/bin/env python

# Prototype for a xmlrpc server that
# - queues up potentially long, resource intensive tasks
# - run tasks in order received and only one at a time
# - keeping track of overdue tasks
# - doing no work for a task until it is its turn

# python modules
import time
import thread
import xmlrpclib

# twisted modules
from twisted.web import xmlrpc, server
from twisted.internet import defer

# GLOBALS
XMLRPC_PORT = 7080 
    
# ----------------------------------------------------------------------
def task_monitor(task_list):
    task_run_lengths = {}
    
    while 1:
        print '-' * 70
        print 'tasks in queue:', len(task_list)
        if len(task_list) == 0:
            print 'Nothing to do...'
            pass
        else:
            d,func,args = task_list[0]
            if d.paused == 1:
                print 'unpausing:', d 
                d.unpause() 
                print 'paused =',d.paused 
                def curried_func(*_args):
                    d.callback(func(*_args))
                thread.start_new(curried_func, args)
                task_run_lengths[d] = time.time()
            elif d.paused == 0 and d.called == 1:
                if len(d.callbacks) == 0:
                    print 'removing finished task from queue:', d
                    task_list.pop(0)
                    del task_run_lengths[d]
            else:
                #print task_run_lengths[d], time.time()
                if (time.time() - task_run_lengths[d]) > 5:
                    print 'WARNING: long running process!:', d,
int(time.time() - task_run_lengths[d])

        time.sleep(1)
# ----------------------------------------------------------------------
class QueuedXMLRPCServer(xmlrpc.XMLRPC):

    job_queue = []

    def __init__(self):
        thread.start_new(task_monitor, (self.job_queue,))
        xmlrpc.XMLRPC.__init__(self)

    def render(self,request):

        # MOSTLY COPIED FROM PARENT CLASS
        request.content.seek(0, 0)
        args, functionPath = xmlrpclib.loads(request.content.read())
        try:
            function = self._getFunction(functionPath)
        except xmlrpc.Fault, f:
            self._cbRender(f, request)
        else:
            request.setHeader("content-type", "text/xml")
            d = defer.Deferred()
            d.addErrback(
                self._ebRender
            ).addCallback(
                self._cbRender, request
            )
            d.pause()
            self.job_queue.append((d,function,args))
        return server.NOT_DONE_YET

    def xmlrpc_echo(self, x):
        """ Echo back to client."""
        if x.endswith('3'):
            # cause one task to trip the warning
            time.sleep(15)
        else:
            time.sleep(3)
        return x
    
# ----------------------------------------------------------------------
if __name__ == '__main__':

    from twisted.internet import reactor
    r = QueuedXMLRPCServer()

    # create a "listner" (TCP or SSL)
    reactor.listenTCP(XMLRPC_PORT, server.Site(r))
    reactor.run()


test_xmlrpc_queue.py ===================================

#! /usr/bin/env python

import thread
import xmlrpclib
import time

def echo_caller(x):
    print 'call made by:', x
    s = xmlrpclib.Server('http://my.server.xyz:7080/')
    print s.echo('call returned from %d' % x)

for x in range(10):
    time.sleep(1)
    thread.start_new_thread(echo_caller, (x,))
raw_input('> hit enter to end')




On Tue, 8 Mar 2005 16:59:11 +1100, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:
> On Mon, Mar 07, 2005 at 10:21:14PM -0700, Dustin Lee wrote:
> [...]
> >
> > Basically the idea is that the server will receive a variety of
> > requests to perform tasks.  Some of these will be very quick to do and
> > some will take several minutes (perhaps up to an hour).  Some tasks
> > must run alone and some can run in parallel with others.  Even just a
> > simple FIFO type queuing would be fine to start.
> >
> > Any pointers on how to proceed?
> 
> The DeferredQueue class in SVN might be a good starting point:
> 
>     http://svn.twistedmatrix.com/cvs/trunk/twisted/internet/defer.py?view=auto&rev=12970&root=Twisted
> 
> -Andrew.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Dustin Lee
qhfgva=rot13(dustin)



From exarkun at divmod.com  Thu Mar 17 12:44:18 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 17:44:18 GMT
Subject: [Twisted-Python] help with InsecureJelly for unkown
	objects	inclasses
In-Reply-To: <4239B720.60205@verio.net>
Message-ID: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>

On Thu, 17 Mar 2005 09:58:08 -0700, Ben Olsen <bolsen at verio.net> wrote:
>Henning,
> 
> I realize the error isn't specific to pygame in any way, I was just 
> hoping to give everyone enough context. I'm getting the error because a 
> pygame.Rect isn't a jellyable object. But so far I haven't been able to 
> make a jellyable object out of it. The problem for me is that this Rect 
> object is inside of another class (i.e. a GameState class). I can set 
> pb.Copyable and pb.RemoteCopy on the GameState class, and it goes back 
> and forth just fine, but *only* if I remove the pygame.Rect attributes 
> from it.
> 
> I searched the twisted site for "declare pb.Copyable once," and even 
> just the word "Henning," but I couldn't find any threads about this. And 
> unfortunately the howto doesn't help, since all it shows is how to send 
> a simple class back and forth, which I can do fine.
> 
> Any other suggestions for getting a class with non-standard objects in 
> it to jelly properly?

  One approach is to override getStateToCopy (or jellyFor, or getStateToCopyFor, or __getstate__, or several of the above, or all of the above, depending) on your GameState class.  Your implementation can do something like convert the rect to a tuple (or something else easily jellyable).  Similarly, your unjellier can convert the tuple back to a rect.

  Jp



From smilner at trinityz.com  Thu Mar 17 12:53:08 2005
From: smilner at trinityz.com (Steve Milner)
Date: Thu, 17 Mar 2005 12:53:08 -0500
Subject: [Twisted-Python] HTTP File Posting and Retrieving
Message-ID: <4239C404.1030107@trinityz.com>

Hello List,

I'm looking to use Twisted to download and upload files via HTTP. I've 
looked at the examples for web.client but am still a bit confused (and 
am wondering if maybe there is a different class I should be working 
with). My questions are:

1.) How can I upload a file
2.) How can I download a file and get the headers for parsing (size and 
whatnot).

Thanks in advance,
Steve



From exarkun at divmod.com  Thu Mar 17 13:17:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 18:17:15 GMT
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: 0
Message-ID: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>

On Thu, 17 Mar 2005 10:29:09 -0700, Dustin Lee <qhfgva at gmail.com> wrote:
>So I've got a simple prototype of what I'm trying to achieve with my
> "queued tasks" xmlrpc server.
> 
> I'd appreciate any comments, suggestions.  So far it seems to work
> exactly I wanted but I have a feeling I'm abusing the intended use of
> deferreds.  And that by polling I'm deviating from the twisted
> workflow model.  But you have to start somewhere.

  Yes, much abuse is present in this code.  A couple grievous wrongs:

    Deferreds (and almost all other Twisted APIs) are not thread-safe.  You cannot invoke their methods in a thread other than that of the reactor.

    The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.

  Attached is a modified version.  It has a problem with shutdown, which I imagine is related to not properly closing the reactor's threadpool.  Maybe someone else can suggest the correct way to deal with that.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xmlrpc_queued_tasks_server.py
Type: application/x-python
Size: 2816 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050317/f057c3ed/attachment.bin 

From qhfgva at gmail.com  Thu Mar 17 13:40:42 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Thu, 17 Mar 2005 11:40:42 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
References: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
Message-ID: <b75caff405031710404e2b2a39@mail.gmail.com>

Thanks for the response.  I will give it a look see.  Still have much
to learn about twisted, but I figure I'll learn more by trying out my
ideas than just reading the tutorials over and over...

dustin


On Thu, 17 Mar 2005 18:17:15 GMT, Jp Calderone <exarkun at divmod.com> wrote:
> On Thu, 17 Mar 2005 10:29:09 -0700, Dustin Lee <qhfgva at gmail.com> wrote:
> >So I've got a simple prototype of what I'm trying to achieve with my
> > "queued tasks" xmlrpc server.
> >
> > I'd appreciate any comments, suggestions.  So far it seems to work
> > exactly I wanted but I have a feeling I'm abusing the intended use of
> > deferreds.  And that by polling I'm deviating from the twisted
> > workflow model.  But you have to start somewhere.
> 
>   Yes, much abuse is present in this code.  A couple grievous wrongs:
> 
>     Deferreds (and almost all other Twisted APIs) are not thread-safe.  You cannot invoke their methods in a thread other than that of the reactor.
> 
>     The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.
> 
>   Attached is a modified version.  It has a problem with shutdown, which I imagine is related to not properly closing the reactor's threadpool.  Maybe someone else can suggest the correct way to deal with that.
> 
>   Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 


-- 
Dustin Lee
qhfgva=rot13(dustin)



From bolsen at verio.net  Thu Mar 17 15:03:43 2005
From: bolsen at verio.net (Ben Olsen)
Date: Thu, 17 Mar 2005 13:03:43 -0700
Subject: [Twisted-Python] help with InsecureJelly for
	unkown	objects	inclasses--solution
In-Reply-To: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>
References: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>
Message-ID: <4239E29F.8080001@verio.net>

Thanks Jp, someone else had that suggestion too, and it ended up working 
just fine. Using getStateToCopy and setCopyableState, I can convert a 
pygame.Rect to a tuple before sending, then convert it back when 
receiving. For those curious, the class looks something like this:

class GameState(pb.Copyable, pb.RemoteCopy):
    def __init__(self, id):
        ... define various game state properties ...
        self.ball = Rect([0,0,32,32])

    def getStateToCopy(self):
        ret = self.__dict__.copy()
        del ret['ball']
        ret['balltuple'] = (self.ball.x, self.ball.y, self.ball.w, 
self.ball.h)
        return ret
       
    def setCopyableState(self, state):
        self.ball = Rect(state['balltuple'])
        return self.__dict__

This class is inherited on both server and client. This makes passing 
the pygame.Rect transparent, so no work is required on either the server 
or client side.

Ben

Jp Calderone wrote:

>
>  One approach is to override getStateToCopy (or jellyFor, or getStateToCopyFor, or __getstate__, or several of the above, or all of the above, depending) on your GameState class.  Your implementation can do something like convert the rect to a tuple (or something else easily jellyable).  Similarly, your unjellier can convert the tuple back to a rect.
>
>  Jp
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>



From andrea at cpushare.com  Thu Mar 17 17:40:22 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 23:40:22 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317142806.13806.1838714217.divmod.quotient.7796@ohm>
References: <20050317124056.GJ21597@opteron.random>
	<20050317142806.13806.1838714217.divmod.quotient.7796@ohm>
Message-ID: <20050317224022.GT21597@opteron.random>

On Thu, Mar 17, 2005 at 02:28:06PM +0000, Jp Calderone wrote:
>   For some reason unfathomable to me, ReconnectingClientFactory
>   _stops_ trying to reconnect if a UserError is the cause of failed
>   connection.  Further, for some reason, error.TimeoutError subclasses
>   UserError.  This has bitten at least one other project (buildbot).

Ok great that you could explain it so quickly!

>   I'm inclined to say that it is indeed a bug.  I think
>   ReconnectingClientFactory should always retry the connection,
>   regardless of the exception with which the previous attempt fails.
>   If a program wants to allow a user to interrupt the retry logic,
>   there is a "stopTrying" method.

Definitely agreed.

I think at very least the error.TimeoutError should not stop the
reconnection (dunno about the others subclassing UserError).

For sure I'd rather prefer that it tries to reconnect no matter what.

>   If you look at twisted/internet/protocol.py for the definition of
>   ReconnectingClientFactory.clientConnectionFailed, it should be
>   pretty obvious how you want to redefine clientConnectionFailed to
>   avoid the behavior you're seeing.

I'll look into a workaround.

>   It's generated internally by Twisted when the alloted connection
>   time has elapsed without a connection being created.
> 
>   Most likely it _is_ network related problems that caused the
>   connection to fail, but Twisted is certainly responsible for the
>   decision to cease further reconnection attempts.

Ok.



From andrea at cpushare.com  Thu Mar 17 17:58:55 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 23:58:55 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <1111078265.8749.12.camel@localhost.localdomain>
References: <20050317124056.GJ21597@opteron.random>
	<1111078265.8749.12.camel@localhost.localdomain>
Message-ID: <20050317225855.GU21597@opteron.random>

On Thu, Mar 17, 2005 at 11:51:04AM -0500, Itamar Shtull-Trauring wrote:
> There was a bug in 1.3 in ReconnectingClientFactory that caused it to
> not reconnect on TimeoutErrors. It's fixed in 2.0.

Ok. This should workaround the bug in my app:

Index: cpushare/proto.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
retrieving revision 1.29
diff -u -p -r1.29 proto.py
--- cpushare/proto.py	13 Mar 2005 23:18:24 -0000	1.29
+++ cpushare/proto.py	17 Mar 2005 22:56:20 -0000
@@ -148,8 +148,24 @@ class cpushare_factory(ReconnectingClien
 		protocol.factory = self
 		return protocol
 
+	def clientConnectionLost(self, connector, reason):
+		print 'Lost connection. Reason:', reason
+		ReconnectingClientFactory.clientConnectionLost(self, connector, reason)
+
 	def clientConnectionFailed(self, connector, reason):
 		print 'Connection failed. Reason:', reason
+		# workaround for bug in 1.3.0 - start
+		from twisted.copyright import version
+		if '1.3.0' in version:
+			def workaround_clientConnectionFailed(connector, reason):
+				if self.continueTrying:
+					self.connector = connector
+					from twisted.internet import interfaces, error, defer
+					if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
+						self.retry()
+			workaround_clientConnectionFailed(connector, reason)
+			return
+		# workaround for bug in 1.3.0 - end
 		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)
 
 	def connectionMade(self):


Thanks Itamar and Jp for the help!



From andy at thecablelounge.com  Thu Mar 17 20:15:49 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 18 Mar 2005 11:15:49 +1000
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
References: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
Message-ID: <423A2BC5.5070905@thecablelounge.com>

Jp Calderone wrote:

>     The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.

Thinking over the recent deferred timeout thread:

http://marc.free.net.ph/message/20050225.195330.793c275f.en.html#twisted-python

it looks like methods like pause, unpause, cancel and timeout should all 
be handled by the source of the operation.  A common operation (job) api 
that exposed these methods would make building generic scheduling 
frameworks easier.

Dustin I don't know if you'd find this thread of interest:

http://twistedmatrix.com/pipermail/twisted-python/2004-March/007271.html

The problem with the DeferredPriorityQueue there for your case is if 
enough hour long jobs come to use up all available tokens, the server 
would be clogged up until they finish.  If the queue took jobs with an 
agreed on way of pausing them, long running jobs low priority jobs could 
be put on hold when higher priority jobs turn up ..

Andy.



From leszczynscy at yahoo.com  Fri Mar 18 00:59:16 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 17 Mar 2005 23:59:16 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
Message-ID: <423A6E34.6070800@yahoo.com>

Hi,
I need a help. In particural I need to allow plain users under Linux to 
run SMTP servers (in Python) under 25. Is there any way to remap it to 
the over 1024 space or just enable (without hacking the kernel). The 
varoius sudo or permissions solutions are not an options for me.

Thanks in advance, A.



From exarkun at divmod.com  Fri Mar 18 01:01:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 18 Mar 2005 06:01:20 GMT
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317225855.GU21597@opteron.random>
Message-ID: <20050318060120.13806.1844027975.divmod.quotient.9105@ohm>

On Thu, 17 Mar 2005 23:58:55 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Thu, Mar 17, 2005 at 11:51:04AM -0500, Itamar Shtull-Trauring wrote:
> > There was a bug in 1.3 in ReconnectingClientFactory that caused it to
> > not reconnect on TimeoutErrors. It's fixed in 2.0.
> 
> Ok. This should workaround the bug in my app:
> 
> Index: cpushare/proto.py
> ===================================================================
> RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
> retrieving revision 1.29
> diff -u -p -r1.29 proto.py
> --- cpushare/proto.py	13 Mar 2005 23:18:24 -0000	1.29
> +++ cpushare/proto.py	17 Mar 2005 22:56:20 -0000
> @@ -148,8 +148,24 @@ class cpushare_factory(ReconnectingClien
>  		protocol.factory = self
>  		return protocol
>  
> +	def clientConnectionLost(self, connector, reason):
> +		print 'Lost connection. Reason:', reason
> +		ReconnectingClientFactory.clientConnectionLost(self, connector, reason)
> +
>  	def clientConnectionFailed(self, connector, reason):
>  		print 'Connection failed. Reason:', reason
> +		# workaround for bug in 1.3.0 - start
> +		from twisted.copyright import version
> +		if '1.3.0' in version:
> +			def workaround_clientConnectionFailed(connector, reason):
> +				if self.continueTrying:
> +					self.connector = connector
> +					from twisted.internet import interfaces, error, defer
> +					if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> +						self.retry()
> +			workaround_clientConnectionFailed(connector, reason)
> +			return
> +		# workaround for bug in 1.3.0 - end
>  		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)
>  
>  	def connectionMade(self):
> 
> 
> Thanks Itamar and Jp for the help!
> 

  Glad to offer it :)  I wonder why you didn't go with the apparently equivalent but similar version of clientConnectionFailed, though:

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        # workaround for bug in 1.3.0 - start
        from twisted.copyright import version
        if '1.3.0' in version:
            if self.continueTrying:
                self.connector = connector
                self.retry()
            return
        # workaround for bug in 1.3.0 - end
        ReconnectingClientFactory.clientConnectionFailed(
            self, connector, reason)

  I guess I can see how defining a function for the logic further separates it from the rest of the code, but why define it inside the version test if suite? :)  Maybe that was just the most convenient place at the moment..  The main difference, though, is the total absense of the if guarding the call to self.retry().  It seems like you duplicated the 1.3 logic in the 1.3 work-around code.  Maybe I'm just misreading it, but it seems like you just want to omit that test and always retry().

  Jp



From andrew-twisted at puzzling.org  Fri Mar 18 01:11:38 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Mar 2005 17:11:38 +1100
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <423A6E34.6070800@yahoo.com>
References: <423A6E34.6070800@yahoo.com>
Message-ID: <20050318061138.GS15800@trogdor.home.puzzling.org>

On Thu, Mar 17, 2005 at 11:59:16PM -0600, Andrzej Leszczynski wrote:
> Hi,
> I need a help. In particural I need to allow plain users under Linux to 
> run SMTP servers (in Python) under 25. Is there any way to remap it to 
> the over 1024 space or just enable (without hacking the kernel). The 
> varoius sudo or permissions solutions are not an options for me.
> 
> Thanks in advance, A.

Use authbind(1).

-Andrew.




From leszczynscy at yahoo.com  Fri Mar 18 10:24:30 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Fri, 18 Mar 2005 09:24:30 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <20050318061138.GS15800@trogdor.home.puzzling.org>
References: <423A6E34.6070800@yahoo.com>
	<20050318061138.GS15800@trogdor.home.puzzling.org>
Message-ID: <423AF2AE.5030706@yahoo.com>

Andrew Bennetts wrote:
> On Thu, Mar 17, 2005 at 11:59:16PM -0600, Andrzej Leszczynski wrote:
> 
>>Hi,
>>I need a help. In particural I need to allow plain users under Linux to 
>>run SMTP servers (in Python) under 25. Is there any way to remap it to 
>>the over 1024 space or just enable (without hacking the kernel). The 
>>varoius sudo or permissions solutions are not an options for me.
>>
>>Thanks in advance, A.
> 
> 
> Use authbind(1).
> 
> -Andrew.

Does it work on non-Debain distros?

A.



From alengarbage at yahoo.com  Fri Mar 18 12:58:00 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 18 Mar 2005 09:58:00 -0800 (PST)
Subject: [Twisted-Python] Twisted website redesign
In-Reply-To: 6667
Message-ID: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>


  I don't see that anyone else has mentioned this, and
it has been broken for several days, so I thought the
interested parties might want to know that:

  1- links to project mailing lists from the project
pages are wrong ("No such Resource.  File not found").
 Links from the main page do work, however.
 
  2- links to documentation don't include links to the
API docs.  The API docs are still there if you have a
bookmark or ask google, but I can't see any way to
find them from the website.

  Other than that, the site looks great!

  I'd send this to the site maintainer instead of
posting it to the mailing list, but I can't seem to
find an email link on the site for that either.

  thanks, Lenny G.



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From mary-twisted at puzzling.org  Fri Mar 18 17:15:33 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 19 Mar 2005 09:15:33 +1100
Subject: [Twisted-Python] Twisted website redesign
In-Reply-To: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <20050318221533.GA31325@home.puzzling.org>

On Fri, Mar 18, 2005, Lenny G Arbage wrote:
>   I'd send this to the site maintainer instead of
> posting it to the mailing list, but I can't seem to
> find an email link on the site for that either.

I'm not sure there is a single site maintainer: the thing to do would be
to file a bug at the bug tracker and to mark it as topic "website" but I
appreciate that that's non-obvious.

The first is fairly easily fixed, I'll try and get to it today (Ubuntu's
suddenly broken my X settings, three weeks out from a stable release ;)
I'm living on borrowed computer.)

-Mary



From judson.bishop at eamc.org  Fri Mar 18 17:24:26 2005
From: judson.bishop at eamc.org (Judson Bishop)
Date: Fri, 18 Mar 2005 16:24:26 -0600
Subject: [Twisted-Python] both 'package' and 'py_modules'
Message-ID: <1111184666.4478.132.camel@colnago.eamc.org>

All,

Having trouble building Twisted on RHEL 3.  Using python-2.2.3-6.1.

# python setup.py build
running build
running build_py
error: build_py: supplying both 'packages' and 'py_modules' options is
not allowed
Error: Subprocess exited with result 1 for project core

Any help would be appreciated.

Jud




From exarkun at divmod.com  Fri Mar 18 17:29:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 18 Mar 2005 22:29:47 GMT
Subject: [Twisted-Python] both 'package' and 'py_modules'
In-Reply-To: <1111184666.4478.132.camel@colnago.eamc.org>
Message-ID: <20050318222947.13806.112063687.divmod.quotient.10523@ohm>

On Fri, 18 Mar 2005 16:24:26 -0600, Judson Bishop <judson.bishop at eamc.org> wrote:
>All,
> 
> Having trouble building Twisted on RHEL 3.  Using python-2.2.3-6.1.
> 
> # python setup.py build
> running build
> running build_py
> error: build_py: supplying both 'packages' and 'py_modules' options is
> not allowed
> Error: Subprocess exited with result 1 for project core
> 
> Any help would be appreciated.

  Try the patch attached to <http://twistedmatrix.com/bugs/issue933>.

  Jp



From andrew-twisted at puzzling.org  Fri Mar 18 19:34:29 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 19 Mar 2005 11:34:29 +1100
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <423AF2AE.5030706@yahoo.com>
References: <423A6E34.6070800@yahoo.com>
	<20050318061138.GS15800@trogdor.home.puzzling.org>
	<423AF2AE.5030706@yahoo.com>
Message-ID: <20050319003429.GC11947@trogdor.home.puzzling.org>

On Fri, Mar 18, 2005 at 09:24:30AM -0600, Andrzej Leszczynski wrote:
> Andrew Bennetts wrote:
[...]
> >
> >Use authbind(1).
> >
> >-Andrew.
> 
> Does it work on non-Debain distros?

I don't see any reason why not.  You can get a tarball from
http://ftp.debian.org/debian/pool/main/a/authbind/authbind_1.1.5.2-0.1.tar.gz,
or perhaps use alien to try convert a deb into your preferred packaging
format.

-Andrew.




From ken at kenkinder.com  Sat Mar 19 00:13:22 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 18 Mar 2005 23:13:22 -0600
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
Message-ID: <423BB4F2.1060108@kenkinder.com>

A day or two ago, I inquired on IRC about making calls from an existing 
synchronous script. The script is not related to any Twisted activity, 
so minimal intervention was sort of a goal. Obviously this doesn't work 
on non-transient objects such as Perspective Broker ones, but here's 
what I came up with... (See attached) Obviously there is some cleaning 
up to do, but it demonstrates the idea.

I have three questions: (1) I know this isn't the ideal way to use 
Twisted, but is there anything inherently problematic about my solution 
for one-off calls to Twisted. (2) I understand there are problems with 
running the same reactor twice. What are those problems and is there a 
recommended work around? (3) Are there any ideas on making a synchronous 
version of a Perspective Broker client to integrate into existing 
synchronous applications more easily?

Thanks
-Ken

-------------- next part --------------
A non-text attachment was scrubbed...
Name: waitDeferred.py
Type: application/x-python
Size: 627 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050318/74caac16/attachment.bin 

From D.Sinang at spitech.com  Sat Mar 19 00:42:01 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Sat, 19 Mar 2005 13:42:01 +0800
Subject: [Twisted-Python] listening on several ports
Message-ID: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>

Hello,
 
How do I make a server listen in on several ports ?
 
As far as I know, reactor.listenTCP() only accepts 1 port parameter.
 
 
Regards,
Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050319/789725aa/attachment.htm 

From ken at kenkinder.com  Sat Mar 19 01:00:48 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Sat, 19 Mar 2005 00:00:48 -0600
Subject: [Twisted-Python] listening on several ports
In-Reply-To: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>
Message-ID: <423BC010.3010006@kenkinder.com>

Sinang, Danny wrote:

> How do I make a server listen in on several ports ?
>  
> As far as I know, reactor.listenTCP() only accepts 1 port parameter.

Call reactor.listenTCP for each port you want to listen on.




From teratorn at twistedmatrix.com  Sat Mar 19 01:05:40 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 19 Mar 2005 16:05:40 +1000 (ChST)
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
References: <423BB4F2.1060108@kenkinder.com>
Message-ID: <34655.202.128.82.223.1111212340.squirrel@www.world-net.net>

Did anyone tell you about twisted.trial.util.deferredResult and
deferredError?

> A day or two ago, I inquired on IRC about making calls from an existing
> synchronous script. The script is not related to any Twisted activity,
> so minimal intervention was sort of a goal. Obviously this doesn't work
> on non-transient objects such as Perspective Broker ones, but here's
> what I came up with... (See attached) Obviously there is some cleaning
> up to do, but it demonstrates the idea.
>
> I have three questions: (1) I know this isn't the ideal way to use
> Twisted, but is there anything inherently problematic about my solution
> for one-off calls to Twisted. (2) I understand there are problems with
> running the same reactor twice. What are those problems and is there a
> recommended work around? (3) Are there any ideas on making a synchronous
> version of a Perspective Broker client to integrate into existing
> synchronous applications more easily?
>
> Thanks
> -Ken
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ken at kenkinder.com  Sat Mar 19 01:12:36 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Sat, 19 Mar 2005 00:12:36 -0600
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <34655.202.128.82.223.1111212340.squirrel@www.world-net.net>
References: <423BB4F2.1060108@kenkinder.com>
	<34655.202.128.82.223.1111212340.squirrel@www.world-net.net>
Message-ID: <423BC2D4.3000206@kenkinder.com>

No, and a google search reveals that there has been relatively little 
dicussion about them. They do look like at least part of what I need. It 
hadn't occured to me to even look in the unit testing stuff - thanks.

-Ken

Eric Mangold wrote:

>Did anyone tell you about twisted.trial.util.deferredResult and
>deferredError?
>
>  
>
>>A day or two ago, I inquired on IRC about making calls from an existing
>>synchronous script. The script is not related to any Twisted activity,
>>so minimal intervention was sort of a goal. Obviously this doesn't work
>>on non-transient objects such as Perspective Broker ones, but here's
>>what I came up with... (See attached) Obviously there is some cleaning
>>up to do, but it demonstrates the idea.
>>
>>I have three questions: (1) I know this isn't the ideal way to use
>>Twisted, but is there anything inherently problematic about my solution
>>for one-off calls to Twisted. (2) I understand there are problems with
>>running the same reactor twice. What are those problems and is there a
>>recommended work around? (3) Are there any ideas on making a synchronous
>>version of a Perspective Broker client to integrate into existing
>>synchronous applications more easily?
>>
>>Thanks
>>-Ken
>>
>>    
>>




From glyph at divmod.com  Sat Mar 19 02:48:34 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 19 Mar 2005 07:48:34 GMT
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
Message-ID: <20050319074834.13806.1948239396.divmod.quotient.11315@ohm>

On Fri, 18 Mar 2005 23:13:22 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>A day or two ago, I inquired on IRC about making calls from an existing 
> synchronous script. The script is not related to any Twisted activity, 
> so minimal intervention was sort of a goal. Obviously this doesn't work 
> on non-transient objects such as Perspective Broker ones, but here's 
> what I came up with... (See attached) Obviously there is some cleaning 
> up to do, but it demonstrates the idea.

I would suggest starting (using os.popen or suchlike) a separate python script which uses Twisted to generate the output that you require to standard output.

> I have three questions: (1) I know this isn't the ideal way to use 
> Twisted, but is there anything inherently problematic about my solution 
> for one-off calls to Twisted.

It's possible, insofar as the unit tests already do it.

It's extremely undesireable, because only one piece of synchronous code can be "driving" at a time.  Once you decide you'd want to integrate synchronous twisted-using code A with synchronous twisted-using code B, you're screwed. By contrast, any number of asynchronous pieces of code can be used in the same program.

> (2) I understand there are problems with 
> running the same reactor twice. What are those problems and is there a 
> recommended work around?

The problems boil down to this: the behavior is more or less undefined.  The recommended workaround is to fix about 30 or 40 extremely subtle bugs in various implementations of the reactor, define a sane behavior, and write unit tests to make sure that it is scrupulously followed by all implementations.  Sorry :).

The good news is that these bugs are almost entirely in the realm of service startup and shutdown.  If you're not using any Service objects, you're likely to run into relatively few problems.

> (3) Are there any ideas on making a synchronous 
> version of a Perspective Broker client to integrate into existing 
> synchronous applications more easily?

Unfortunately PB is inherently both asynchronous and symmetrical and either side can submit method calls to any available object at any time.  A synchronous frontend would make this impossible, and would produce some very confusing race-conditions in relatively normal PB code.

You might be able to specify a subset of PB as a strict request/response protocol with no reentrancy, but why bother?  If you're doing synchronous scripting I imagine it would be easier to add an XMLRPC frontend (which works fine in a synchronous context) to your Twisted server than to connect over PB and have these kind of integration headaches.



From foom at fuhm.net  Sat Mar 19 03:15:58 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 19 Mar 2005 03:15:58 -0500
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
References: <423BB4F2.1060108@kenkinder.com>
Message-ID: <cf89cdb9e36d2a83f189a3180ddaea8e@fuhm.net>

On Mar 19, 2005, at 12:13 AM, Ken Kinder wrote:
> A day or two ago, I inquired on IRC about making calls from an 
> existing synchronous script. The script is not related to any Twisted 
> activity, so minimal intervention was sort of a goal. Obviously this 
> doesn't work on non-transient objects such as Perspective Broker ones, 
> but here's what I came up with... (See attached) Obviously there is 
> some cleaning up to do, but it demonstrates the idea.
>
> I have three questions: (1) I know this isn't the ideal way to use 
> Twisted, but is there anything inherently problematic about my 
> solution for one-off calls to Twisted. (2) I understand there are 
> problems with running the same reactor twice. What are those problems 
> and is there a recommended work around? (3) Are there any ideas on 
> making a synchronous version of a Perspective Broker client to 
> integrate into existing synchronous applications more easily?

What happened to the idea of starting up a completely normal twisted 
event loop in a different thread and communicating via callFromThread 
and queue objects? That seemed like a relatively elegant way to do it, 
to me, as then you can have many different threads doing synchronousish 
stuff at the same time all using the same twisted event loop.

James




From leszczynscy at yahoo.com  Sat Mar 19 09:26:13 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Sat, 19 Mar 2005 08:26:13 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <20050319003429.GC11947@trogdor.home.puzzling.org>
References: <423A6E34.6070800@yahoo.com>	<20050318061138.GS15800@trogdor.home.puzzling.org>	<423AF2AE.5030706@yahoo.com>
	<20050319003429.GC11947@trogdor.home.puzzling.org>
Message-ID: <423C3685.10301@yahoo.com>

Andrew Bennetts wrote:
> On Fri, Mar 18, 2005 at 09:24:30AM -0600, Andrzej Leszczynski wrote:
> 
>>Andrew Bennetts wrote:
> 
> [...]
> 
>>>Use authbind(1).
>>>
>>>-Andrew.
>>
>>Does it work on non-Debain distros?
> 
> 
> I don't see any reason why not.  You can get a tarball from
> http://ftp.debian.org/debian/pool/main/a/authbind/authbind_1.1.5.2-0.1.tar.gz,
> or perhaps use alien to try convert a deb into your preferred packaging
> format.
> 
Thx for the info. I will give a try. For now I use: iptables -t nat -A 
PREROUTING -p tcp --dport 25 -i lo -j REDIRECT --to-port 2525.


A.






From foom at fuhm.net  Sat Mar 19 11:45:30 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 19 Mar 2005 11:45:30 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <1fceb2c30741cd5fb155317397dff497@fuhm.net>

Bug summary
______________________
Since 2005-03-14 22:20:50.500000:
  Bugs opened: 17   Bugs closed: 10   Total open bugs: 333 (+7)
   Urgent: 7 (-2)
   Bug: 127 (+9)
   Feature: 131 (+0)
   Wish: 68 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
BUG: Installer raises exception for Python 2.2  (yesterday)
        http://twistedmatrix.com/bugs/issue933 opened by exarkun

[WORDS, XISH] [PATCH] cleanup of docs and imports for xish and 
words/protocols/jabber  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue935 opened by ralphm

[PATCH] xmlstream ConnectAuthenticator bails on self.streamHost of type 
unicode  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue924 opened by ralphm

[PATCH] mktap is broken with new plugin system  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue923 opened by radix

                     ==== Bug ====
[XISH] restore priority sorting in xish/xpath.py  (yesterday)
        http://twistedmatrix.com/bugs/issue934 opened by ralphm

[WEBSITE] Sort out redirects from old products website hierachy  (4 
hours ago)
        http://twistedmatrix.com/bugs/issue938 opened by hypatia

[PAIR, WEBSITE] Add description of pair to its project site  (6 hours 
ago)
        http://twistedmatrix.com/bugs/issue937 opened by hypatia

[WEBSITE] minor website rendering problem  (yesterday)
        http://twistedmatrix.com/bugs/issue936 opened by teratorn

[WEBSITE, XISH] Add description of xish to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue932 opened by hypatia

[WEBSITE, WORDS] Add description of words to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue931 opened by hypatia

[RUNNER, WEBSITE] Add description of runner to its project site  (2 
days ago)
        http://twistedmatrix.com/bugs/issue930 opened by hypatia

[WEB, WEBSITE] Add description of Twisted Web to its project site  (2 
days ago)
        http://twistedmatrix.com/bugs/issue927 opened by hypatia

[FLOW, WEBSITE] Add description of flow to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue929 opened by hypatia

[LORE, WEBSITE] Add description of lore to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue928 opened by hypatia

"which: no dia" error when running mktap names  (2 days ago)
        http://twistedmatrix.com/bugs/issue926 opened by justinj

t.test.test_plugin doesn't work in "deployed" mode  (3 days ago)
        http://twistedmatrix.com/bugs/issue925 opened by marienz

Bugs Closed
______________________
                     ==== Urgent ====
[WEBSITE] Website needs to be suitable for 2.0  (5 months ago)
        http://twistedmatrix.com/bugs/issue728 opened by hypatia, closed 
by radix

[WORDS, XISH] [PATCH] cleanup of docs and imports for xish and 
words/protocols/jabber  (yesterday)
        http://twistedmatrix.com/bugs/issue935 opened by ralphm, closed 
by dizzyd

[PATCH] xmlstream ConnectAuthenticator bails on self.streamHost of type 
unicode  (4 days ago)
        http://twistedmatrix.com/bugs/issue924 opened by ralphm, closed 
by dizzyd

win32: reactor.spawnProcess does not grant permission to open sockets  
(2 months ago)
        http://twistedmatrix.com/bugs/issue837 opened by stefanomasini, 
closed by exarkun

[PATCH] mktap is broken with new plugin system  (4 days ago)
        http://twistedmatrix.com/bugs/issue923 opened by radix, closed 
by exarkun

                     ==== Bug ====
MANIFEST.in misses files  (9 months ago)
        http://twistedmatrix.com/bugs/issue629 opened by cmg, closed by 
radix

[PATCH] rename xish.xpath's intern to internQuery  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue913 opened by ralphm, closed 
by dizzyd

protocols/jabber/jid refers to jid.intern(), should be plain intern()  
(8 months ago)
        http://twistedmatrix.com/bugs/issue656 opened by ralphm, closed 
by dizzyd

[XISH] [PATCH] twisted.xish.domish.elementStream fails to parse xml  
(12 months ago)
        http://twistedmatrix.com/bugs/issue530 opened by naz, closed by 
dizzyd




From nico at tekNico.net  Sat Mar 19 12:47:23 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 19 Mar 2005 18:47:23 +0100
Subject: [Twisted-Python] Re: Twisted website redesign
In-Reply-To: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <d1hofs$pcg$1@sea.gmane.org>

>   Other than that, the site looks great!

Unless one sets the browser default background color to something
different from white. :-) It' surprising how many web developers still
*don't* do this. They should. ;-)

-- 
Nicola Larosa - nico at tekNico.net

...this particular abuse of the rules of procedure will make a great
textbook example for the lack of democracy in the EU. While the
Luxembourg Presidency quoted some vague "institutional reasons" for
their position, their reasoning actually serves to discredit the
institution of the Council, and the whole EU project with it.
 -- Karl-Friedrich Lenz, http://k.lenz.name/wordpress/index.php?p=26




From mary-twisted at puzzling.org  Sat Mar 19 16:38:20 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 20 Mar 2005 08:38:20 +1100
Subject: [Twisted-Python] Re: Twisted website redesign
In-Reply-To: <d1hofs$pcg$1@sea.gmane.org>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
	<d1hofs$pcg$1@sea.gmane.org>
Message-ID: <20050319213820.GC27854@titus.home.puzzling.org>

On Sat, Mar 19, 2005, Nicola Larosa wrote:
> Unless one sets the browser default background color to something
> different from white. :-) It' surprising how many web developers still
> *don't* do this. They should. ;-)

I committed a styleseet change that sets the entire background to white,
although I'm not entirely sure whether that's what you're suggesting
(the alternative is coming up with text colours that go with every
possible choice of background color though ;) )

Can further website look-n-feel issues go to the bugtracker at
http://twistedmatrix.com/bugs/ please? Mark them as topic "website" and
assign them to hypatia.

Thanks,

Mary



From slyphon at twistedmatrix.com  Sun Mar 20 02:27:37 2005
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Sun, 20 Mar 2005 02:27:37 -0500
Subject: [Twisted-Python] Creating a dynamic FTP server
In-Reply-To: <200503141426.52805.jrust@rustyparts.com>
References: <200503141426.52805.jrust@rustyparts.com>
Message-ID: <8cd353ab5973386225485e479724613b@twistedmatrix.com>


On Mar 14, 2005, at 5:26 PM, Jason Rust wrote:

> Hi,
> I've been poking around in the code and documentation for a bit now 
> and wanted
> to see if the following project would be doable with twisted before I
> actually started coding it:
>
> We want a FTP server where all the files and directories are 
> "virtual."  The
> actual files would be in a database and the folders shown to a user 
> would be
> based on the time of day and who the user is.  When getting or putting 
> a file
> it would pull or put it into the database backend.
>
> Would something like this be possible with the twisted FTP module?
> Thanks,
> -Jason
>
> __________________

well, it would, but you should be forewarned that the twisted FTP module
is buggy and messy. I know that because I wrote the server 
implementation. ;)

Oh, also there's no implementation for PUT, which kind of sucks.

But since you want to make the backend virtual, it shouldn't be too 
hard (well,
*impossible*) to make it work.

I've been meaning to go back and fix this code for a long time, but it 
just keeps
getting pushed off.

Anyway, if you have specific questions about the implementation, I may 
be able
to assist you.

-Jonathan Simms




From radeex at gmail.com  Sun Mar 20 08:21:56 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 21 Mar 2005 00:21:56 +1100
Subject: [Twisted-Python] Twisted a4 releases
Message-ID: <60ed19d4050320052176ad3593@mail.gmail.com>

I released a4 tonight, which includes fixes for all known
release-critical issues, notably the problem with installing on Python
2.2.

Please take a look and verify that this release is worthy of going out
For Real. Also thanks to Tim Stebbing for pushing the Big Red Release
Button and providing his dialup connection for the release tonight ;-)

http://twistedmatrix.com/projects/

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From boomberschloss at yahoo.com  Sun Mar 20 13:01:13 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 20 Mar 2005 10:01:13 -0800 (PST)
Subject: [Twisted-Python] Re: clients of perspective brokers
In-Reply-To: <u3bv72csp.fsf@fitlinxx.com>
Message-ID: <20050320180113.30178.qmail@web53110.mail.yahoo.com>

Thanks for the detailed response! It really helped me
to get a sturdier perspective on everything.

My situation is slightly different than what you
described. My application consists of multiple servers
and clients responsible for the different aspects of
data processing, acquisition and storage (there are,
for example, a database, a configuration server,
arbitrary GUI clients, etc.), and each server exposes
only one referencable object (the root) representing
the server's interface. One consequence, for example,
is that a unit may disappear and re-appear at a
different location (ex. the same user logging in at a
different machine).

I had in mind something very similar to your component
registry: a central server would act as a "unit
directory", containing a listing of units with unique
id's, contact information, and other arbitrary
details. Each unit in the system announces its
existence to the central server every once in a while,
and receives a remote cache of the listing, which gets
updated every time there is a change in the list.

In addition to the local copy of the central unit
directory that every unit holds, it would also hold a
pool of open connections. When a unit wants to contact
another unit, it would query the local copy of the
directory for the desired unit (ex. database, gui unit
of user "bob", etc.), get an address and port number,
and return a wrapper around the remote reference of
the other server's root containing the address
information, called a "friend". If the required
address is already connected to in the local pool of
connections, it is simply directed to use that
connection. When a call is made on the "friend"
object, it attempts to open a connection (if needed,
in which case the new connection is added to the
pool), and makes the remote method call. If it is an
old connection and the call fails, it would attempt to
make a new connection once and repeat the process,
after which the failure (if it persists) is reported
to the caller.

This covers nicely most situations, but with some I am
still struggling:

The main issue is this: it often happens that one unit
in the system wants to be notified when something
happens at another unit. The problems begin when there
are network problems. For example, let's suppose the
unit that wants to be notified sends its root object
as the object that should be kept by the notifying
unit and used as a remote reference to make the
notification. The question is how to handle such
notifications during network problems; for example,
assume that a notification request is made, then the
connection is lost, then network problems subside but
the connection is or is not resumed, and then the
event to notify about happens. Who's responsibility is
it to take care of that? I'm just asking if there is
any standard or common way to approach this, or if I'm
on my own.

Thanks a lot,

Joe.

--- David Bolen <db3l at fitlinxx.com> wrote:

> Joachim Boomberschloss <boomberschloss at yahoo.com>
> writes:
> 
> > Also, it is unclear to me how reconnection works
> for
> > perspective broker clients. If a connection is
> dropped
> > by the server, and then a clients tries to make a
> > method call on a remote object, will the client
> > factory try to reconnect before making the
> request, or
> > will the request fail, and re-connection be
> attempted
> > the next time, etc.?
> 
> There are no automatic reconnects by default. 
> Additionally once you
> have lost a connection, all existing references held
> by the client to
> objects on the server will be invalid from that
> point on.
> 
> There is a general purpose ReconnectingClientFactory
> in the
> twisted.internet.protocols module, but it only
> handles making the
> basic socket reconnection, and not any higher level
> re-establishment
> of protocol communication.  There was also some work
> on a more
> persistent remote reference scheme (in the sturdy
> module).
> 
> The problem with handling reconnects is that PB
> object references are
> only good for a particular session (since they match
> up with broker
> object dictionaries that are part of the remote
> protocol instance and
> go away when the session drops).  So even if you
> re-establish the raw
> PB connection, none of the object references
> previously held by the
> client will be valid any longer.  Even the sturdy
> module only seemed
> to work for the root object and not other random
> references held by
> the application.  Back when I was looking to solve
> the same issue, I
> didn't really find anything suitable in the twisted
> code base itself.
> 
> So it's mostly up to your application to handle
> these sorts of
> scenarios.  To be honest though, since your
> application knows the most
> about how it is using references and objects, it can
> often have the
> simplest implementation.
> 
> For example, in our application we make use of a
> registry of
> components, and when distributing the application,
> the client starts
> with a remote registry (a Referenceable), and then
> retrieves remote
> component references (also Referenceables) for any
> component they
> interact with.  Pretty much everything else is a
> normal remote copy (a
> Copyable rather than Referenceable).  So the
> registry and components
> provided a great control point to handle network
> outages.  Also, the
> components whose references are long lived in the
> client (and who we
> care about maintaining across an outage) are
> independent of the remote
> session - that is they exist independently on the
> server.  So recovery
> from loss of a network connection is simply
> re-accessing the prior
> remote component.  That makes handling such outages
> in a transparent
> manner fairly straight forward since we can use the
> original
> connection information to perform a reconnect
> without re-involving
> high level application code.
> 
> We ended up with  three main parts to the recovery
> system:
> 
> * A remote registry wrapper that works just like a
> local registry but
>   automatically wraps references to remote
> components in a component wrapper.
> * A remote component wrapper that handles wrapping a
> remote reference both
>   to control method access (so we can specially
> handle some methods locally)
>   but also to isolate the application from directly
> holding onto a PB
>   reference for the remote component object.
> * Our own PBClientFactory subclass that handles
> connectivity issues, and
>   automatically wraps a reference to a remote
> registry (which is obtained
>   through our Root object) in the remote registry
> wrapper.
> 
> In addition, we tie them together with various
> signals (currently
> using the pyDispatcher package).
> 
> A client app starts with the client factory, which
> knows how to
> connect, reconnect after a failure (with a
> prescribed retry timing
> mechanism), periodically ping the remote root object
> for a live
> session, and emit signals when the connection goes
> up or down.  The
> application asks the client factory for the remote
> registry, and gets
> back a remote registry wrapper.  Since the wrapper
> operates as a local
> registry, the application code can work locally or
> remotely.  If the
> client factory sees the connection drop, once it
> reconnects, it emits
> a connection signal which includes the new registry
> wrapper.
> 
> The client factory also gives us a good place to
> perform a series of
> steps we need to do with the remote root object in
> order to get access
> to the remote registry, providing for those
> operations to complete
> before giving the registry back to the application
> either during
> initial connection (through a waiting deferred) or
> on a reconnect (via
> the connection signal).
> 
> The remote component wrappers (which also include
> the remote registry
> wrapper) handle the low level potential for
> failures.  The wrapper
> handles failures during any PB request (both
> DeadReferenceError and
> PBConnectionLost) and in addition to passing up the
> error, it emits
> its own signal for a failed request.  The client
> factory listens for
> such signals, which it uses to initiate an immediate
> ping test - which
> in turn can lead to notifying the entire system that
> the connection is
> down.
> 
> We did patch our Twisted so the DeadReferenceError
> was returned as a
> deferred rather than raised inline.  But once
> everything centralized
> around the remote wrappers, technically that became
> unnecessary
> because that's the only place (aside from the client
> factory) that
> issues the callRemote call, so it's not that hard to
> handle both the
> local exception or the deferred error.
> 
> In the other direction, the wrappers all listen for
> the client
> factory's connected signal, and upon receipt, they
> use the supplied
> remote registry to re-query the component they wrap
> (information on
> which they saved when created) in order to get a new
> remote reference.
> Because all of the higher level application code is
> holding a
> reference (Python-wise) to the wrapper object and
> not the PB
> reference, we can adjust to a new reference inside
> the wrapper without
> anything in the application being the wiser or
> needing to change.
> 
> Having the network connect/disconnect signals from
> the client factory
> also permits any other part of the application to
> perform certain
> operations during an outage (so sometimes at our top
> level UI we'll
> put up a "temporary outage" message during
> downtime).
> 
> While this is fairly specific to our environment, it
> lets 
=== message truncated ===


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From mary-twisted at puzzling.org  Sun Mar 20 20:54:24 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 21 Mar 2005 12:54:24 +1100
Subject: [Twisted-Python] Reminder: Australian Twisted Sprint, Hobart,
	1-3 April
Message-ID: <20050321015424.GA15750@home.puzzling.org>

Just a reminder for people that the Australian Twisted Sprint is in two
weekend's time.

Details are available from the wiki at
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/FrontPage

We'd appreciate hearing from people who are coming, as per
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SprintAttendees
. Also, there's a few people on the "maybe" list who we have no way to
contact to confirm their attendence -- an email would be great.

Thanks,

Mary



From jarrod.roberson at gmail.com  Mon Mar 21 11:56:36 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 21 Mar 2005 11:56:36 -0500
Subject: [Twisted-Python] Creating a dynamic FTP server
In-Reply-To: <200503141426.52805.jrust@rustyparts.com>
References: <200503141426.52805.jrust@rustyparts.com>
Message-ID: <2389d4730503210856322e7f53@mail.gmail.com>

On Mon, 14 Mar 2005 14:26:52 -0800, Jason Rust <jrust at rustyparts.com> wrote:
> Hi,
> I've been poking around in the code and documentation for a bit now and wanted
> to see if the following project would be doable with twisted before I
> actually started coding it:
> 
> We want a FTP server where all the files and directories are "virtual."  The
> actual files would be in a database and the folders shown to a user would be
> based on the time of day and who the user is.  When getting or putting a file
> it would pull or put it into the database backend.
> 
> Would something like this be possible with the twisted FTP module?
> Thanks,
> -Jason
> 

unless you just HAVE to have FTP a WebDAV solution would be MUCH
better suited for "virtual" assests like you describe



From boomberschloss at yahoo.com  Mon Mar 21 14:02:47 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Mon, 21 Mar 2005 11:02:47 -0800 (PST)
Subject: [Twisted-Python] multi-threading in twisted
Message-ID: <20050321190247.53484.qmail@web53108.mail.yahoo.com>

Hi,

I just want to make sure I understand what the docs
say: can reactor.callFromThread be called from any
thread? and, is it blocking?

In my application I have a thread that comes up with
data to process every once in a while, and I want that
processing to be done in the main loop because it may
involve network communication, so I planned to copy
the data and then call reactor.callFromThread with the
method to do the processing. Does this sound sound?

Thanks,

Joe


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - Easier than ever with enhanced search. Learn more. 
http://info.mail.yahoo.com/mail_250



From smilner at trinityz.com  Mon Mar 21 16:12:42 2005
From: smilner at trinityz.com (Steve Milner)
Date: Mon, 21 Mar 2005 16:12:42 -0500
Subject: [Twisted-Python] HTTP File Posting and Retrieving
In-Reply-To: <4239C404.1030107@trinityz.com>
References: <4239C404.1030107@trinityz.com>
Message-ID: <423F38CA.1030009@trinityz.com>

Steve Milner wrote:

> Hello List,
>
> I'm looking to use Twisted to download and upload files via HTTP. I've 
> looked at the examples for web.client but am still a bit confused (and 
> am wondering if maybe there is a different class I should be working 
> with). My questions are:
>
> 1.) How can I upload a file
> 2.) How can I download a file and get the headers for parsing (size 
> and whatnot).
>
> Thanks in advance,
> Steve


I'm still having problems trying to get Twisted to do this. Can anyone 
point me to working code that does something similar (or can explain it 
on the list)?

Thanks,
Steve



From andrew-twisted at puzzling.org  Tue Mar 22 20:09:51 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 23 Mar 2005 12:09:51 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r13295 - WSGI input/error
	streams, pausing when write buffer is full, and file wrapper.
In-Reply-To: <E1DDsDD-0008Js-00@wolfwood>
References: <E1DDsDD-0008Js-00@wolfwood>
Message-ID: <20050323010951.GG26971@trogdor.home.puzzling.org>

On Tue, Mar 22, 2005 at 03:50:59PM -0700, James Knight wrote:
[...]
> +    
> +def callInReactor(__f, *__a, **__kw):
> +    from twisted.internet import reactor
> +    queue = Queue.Queue()
> +    reactor.callFromThread(__callFromThread, queue, __f, __a, __kw)
> +    result = queue.get()
> +    if isinstance(result, failure.Failure):
> +        result.raiseException()
> +    return result
> +
> +def __callFromThread(queue, f, a, kw):
> +    result = defer.maybeDeferred(f, *a, **kw)
> +    result.addBoth(queue.put)

I recall posting example code to do a similar job to the mailing list
recently, and also someone on the list (or irc channel?) asking how to do
this (make the thread that does callFromThread block on the result).

This should probably be turned into a proper API.

-Andrew.




From teratorn at twistedmatrix.com  Wed Mar 23 00:11:27 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 23 Mar 2005 15:11:27 +1000 (ChST)
Subject: [Twisted-Python] Note for 2.0 package maintainers
Message-ID: <49816.202.128.82.47.1111554687.squirrel@www.world-net.net>

If you're creating 2.0 packages there is one little thing you need to do
to make Zsh tab-completion work automatically.

The file twisted/python/_twisted_zsh_stub needs to be installed in the zsh
site-functions directory. Of course, where the site-functions directory is
located is system dependant. If you have zsh installed, you can see where
it is with this command:
    zsh -f -c 'echo ${(M)fpath:#/*/site-functions}'

-Eric






From gmcdonald at infocomp.com  Wed Mar 23 00:47:59 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 23 Mar 2005 16:47:59 +1100
Subject: [Twisted-Python] Creating an NT Service for a twistd script
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>

Hi All,

I am receiving the following error when i run the <filename>ctl.exe
generated with moonfallen's ntsvc module and py2exe:

Traceback (most recent call last):
  File "boot_service.py", line 21, in ?
RuntimeError: No service classes found

Can someone please point me in the right direction??

Grant

Important notice: This message is intended for the individual(s) and entity(s) addressed. The information contained in this transmission and any attached, may be confidential and may also be the subject of legal privilege, public interest immunity or legal professional privilege. Any review, retransmission, dissemination or other use of, taking of any action in reliance upon this information by person or entities other than the recipient is prohibited and requires authorization from the sender. If you are not the addressee indicated in this message (or responsible for delivery of the message to such person) you may not copy or deliver this message to anyone. In such cases you should destroy this message and kindly notify the sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no viruses are present in this e-mail, the company cannot accept responsibility for any loss or damage arising from the use of e-mail attachments.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050323/ef6919f0/attachment.htm 

From peterk at bayarea.net  Wed Mar 23 08:49:47 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Wed, 23 Mar 2005 05:49:47 -0800
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
Message-ID: <424173FB.9070406@bayarea.net>

In the Twisted pseudo-sprint yesterday, I made some changes to the 
doc/names/examples/testdns.py and twisted/names/dns.py to clean up the 
deprecation warnings. Attached are two svn diffs of the changes made. 
I've run the trials for twisted names and everything passes with the 
exception of testIPv6. That was skipped since I'm not using IPv6 on my 
laptop. Would someone please review them and commit the changes to SVN?

There's also a deprecation warning in twisted/names/client.py that I'll 
try to get to while at the pycon...

Thanks.

- Peter

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: testdns.py.svn_diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050323/c599f307/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dns.py.svn_diff
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050323/c599f307/attachment-0001.txt 

From xifxif at gmail.com  Wed Mar 23 13:36:49 2005
From: xifxif at gmail.com (xif xif)
Date: Wed, 23 Mar 2005 20:36:49 +0200
Subject: [Twisted-Python] Authenticating users and refering them to personal
	URLs based on the authentication result.
Message-ID: <975ab1d1050323103648096c5b@mail.gmail.com>

Hi

I'm just starting with Nevow, and wanted to know if this is possible,
and if so get a few leads.

I want:

1) to authenticate users (from a form with a "username" and a
"password" field) based on data stored in a database.

2) after authentication is performed, the user is sent to a URL  based
on some of the data from the database. For example, if the database
query revealed him to be named "John Smith", he shall be refered to
http://appserver.com/JohnDoe. Subsequently, he should remain at this
URL, and all links should refer to addresses "below" his personal
address. For example, http://appserver.com/JohnDoe/configuration,
http://appserver.com/JohnDoe/mail, etc.

Thanks in advance,

Xif



From andrew-twisted at puzzling.org  Wed Mar 23 14:56:00 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 24 Mar 2005 06:56:00 +1100
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <424173FB.9070406@bayarea.net>
References: <424173FB.9070406@bayarea.net>
Message-ID: <20050323195559.GB1347@trogdor.home.puzzling.org>

On Wed, Mar 23, 2005 at 05:49:47AM -0800, Peter Kropf wrote:
[...]
> @@ -1123,8 +1124,13 @@
>              self.resends[id] = 1
>          m = Message(id, recDes=1)
>          m.queries = queries
> -        d = self.liveMessages[id] = defer.Deferred()
> -        d.setTimeout(timeout, self._clearFailed, id)
> +
> +        from twisted.internet import reactor
> +        d = defer.Deferred()
> +        timeoutCall = reactor.callLater(
> +            timeout,
> +            lambda: d.called or self._clearFailed( d, id ) )
> +        self.liveMessages[id] = ( d, timeoutCall )
>          self.writeMessage(m, address)
>          return d

I think this would be better as:

        from twisted.internet import reactor
        d = defer.Deferred()
        timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
        def cancelTimeout(result, timeoutCall=timeoutCall):
            timeoutCall.cancel()
            return result
        d.addBoth(cancelTimeout)
        self.liveMessages[id] = ( d, timeoutCall )

'called' is not part of Deferred's public API.
        
-Andrew.




From peterk at bayarea.net  Wed Mar 23 15:21:32 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Wed, 23 Mar 2005 12:21:32 -0800
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <20050323195559.GB1347@trogdor.home.puzzling.org>
References: <424173FB.9070406@bayarea.net>
	<20050323195559.GB1347@trogdor.home.puzzling.org>
Message-ID: <4241CFCC.10600@bayarea.net>

                                                                          
Ok.

Out of curiousity, how would I find out the public API?

- Peter


Andrew Bennetts wrote:
> On Wed, Mar 23, 2005 at 05:49:47AM -0800, Peter Kropf wrote:
> [...]
> 
>>@@ -1123,8 +1124,13 @@
>>             self.resends[id] = 1
>>         m = Message(id, recDes=1)
>>         m.queries = queries
>>-        d = self.liveMessages[id] = defer.Deferred()
>>-        d.setTimeout(timeout, self._clearFailed, id)
>>+
>>+        from twisted.internet import reactor
>>+        d = defer.Deferred()
>>+        timeoutCall = reactor.callLater(
>>+            timeout,
>>+            lambda: d.called or self._clearFailed( d, id ) )
>>+        self.liveMessages[id] = ( d, timeoutCall )
>>         self.writeMessage(m, address)
>>         return d
> 
> 
> I think this would be better as:
> 
>         from twisted.internet import reactor
>         d = defer.Deferred()
>         timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
>         def cancelTimeout(result, timeoutCall=timeoutCall):
>             timeoutCall.cancel()
>             return result
>         d.addBoth(cancelTimeout)
>         self.liveMessages[id] = ( d, timeoutCall )
> 
> 'called' is not part of Deferred's public API.
>         
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Wed Mar 23 17:58:18 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 24 Mar 2005 09:58:18 +1100
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <4241CFCC.10600@bayarea.net>
References: <424173FB.9070406@bayarea.net>
	<20050323195559.GB1347@trogdor.home.puzzling.org>
	<4241CFCC.10600@bayarea.net>
Message-ID: <20050323225818.GC1347@trogdor.home.puzzling.org>

(I forgot to say so, but patches are best uploaded to the issue tracker,
rather than the mailing list where things can easily be forgotten.)

On Wed, Mar 23, 2005 at 12:21:32PM -0800, Peter Kropf wrote:
>                                                                          
> Ok.
> 
> Out of curiousity, how would I find out the public API?

The docstrings will mention it.  If the docstrings don't mention an
attribute, consider it an implementation detail.

Also, I made a small mistake in my hurry this morning:

> >        from twisted.internet import reactor
> >        d = defer.Deferred()
> >        timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
> >        def cancelTimeout(result, timeoutCall=timeoutCall):
> >            timeoutCall.cancel()

That bit needs to be:
               if timeoutCall.active():
                   timeoutCall.cancel()

-Andrew.




From ken at kenkinder.com  Wed Mar 23 19:59:34 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 23 Mar 2005 18:59:34 -0600
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
References: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
Message-ID: <424210F6.8050600@kenkinder.com>

Jp Calderone wrote:

>  Yea, async.  Async is nice.  Twisted comes with a moduled named "adbapi" that provides a non-blocking layer around standard DB-API 2.0 modules (such as MySQLdb).  You can read more about it here at <http://twistedmatrix.com/documents/current/howto/enterprise>.
>  
>
Keep in mind adbapi is just a wrapper for synchronous libraries that 
uses threading. Ideally you would write asynchronous clients for the SQL 
databases -- I've been thinking about doing just that for MySQL. That 
is, I've been thinking, NOT doing.




From gmcdonald at infocomp.com  Thu Mar 24 01:23:04 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 24 Mar 2005 17:23:04 +1100
Subject: [Twisted-Python] Bootstrapping Servers
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CF4@XCHANGE>

Dear All,

I have created some code to close all active connections to a server, spawn
a new instance of itself and call reactor.stop() to facilitate a remote
bootstrap restart of a server. The bootstrapping process takes place through
a loader where if passed an option to bootstrap the code pauses for 20 secs
to allow the previous process to exit:

import sys

if sys.argv[1] == "--bootstrap" or sys.argv[1] == "-b":
    print 'bootstrapping'
    del sys.argv[1]
    import time
    time.sleep(20.0)

from twisted.python.runtime import platformType
if platformType == "win32":
    from twisted.scripts.twistw import run
else:
    from twisted.scripts.twistd import run

run()

However the above code does not allow the server to start since twistd
complains that the port is in use:

2005/03/24 17:14 AUS Eastern Daylight Time [-] Log opened.
2005/03/24 17:14 AUS Eastern Daylight Time [-] twistd 1.3.0
(C:\Python23\python.exe 2.3.3) starting up
2005/03/24 17:14 AUS Eastern Daylight Time [-] reactor class:
twisted.internet.default.SelectReactor
2005/03/24 17:14 AUS Eastern Daylight Time [-] managers.ConnectionManager
starting on 12005
2005/03/24 17:14 AUS Eastern Daylight Time [-] Traceback (most recent call
last):
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File "D:\python
projects\programs\zcfscheduler\loader.py", line 15, in ?
2005/03/24 17:14 AUS Eastern Daylight Time [-]     run()

<-- snip -->

2005/03/24 17:14 AUS Eastern Daylight Time [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\default.py", line 283, in
listenTCP
2005/03/24 17:14 AUS Eastern Daylight Time [-]     p.startListening()
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 594, in
startListening
2005/03/24 17:14 AUS Eastern Daylight Time [-]     raise CannotListenError,
(self.interface, self.port, le)
2005/03/24 17:14 AUS Eastern Daylight Time [-]
twisted.internet.error.CannotListenError: Couldn't listen on any:12005:
(10048, 'Address already in use').

how can i get the server to stop, restart itself and release the port in the
process?

Regards,

Grant McDonald

Important notice: This message is intended for the individual(s) and entity(s) addressed. The information contained in this transmission and any attached, may be confidential and may also be the subject of legal privilege, public interest immunity or legal professional privilege. Any review, retransmission, dissemination or other use of, taking of any action in reliance upon this information by person or entities other than the recipient is prohibited and requires authorization from the sender. If you are not the addressee indicated in this message (or responsible for delivery of the message to such person) you may not copy or deliver this message to anyone. In such cases you should destroy this message and kindly notify the sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no viruses are present in this e-mail, the company cannot accept responsibility for any loss or damage arising from the use of e-mail attachments.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20050324/694c5fa3/attachment.htm 

From projects at reedflute.com  Thu Mar 24 04:01:12 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 24 Mar 2005 11:01:12 +0200
Subject: [Twisted-Python] looping in a non-blocking way
Message-ID: <424281D8.5000101@reedflute.com>

Hi everybody.

I have an application where I have  several polling protocol instances 
servicing an array of COM ports driven by  timers using 
reactor.callLater with typically 50 millisecond timing constants.  I'm 
also using  FTP client protocol instances to concurrently  refresh 
locally cached data from ftp servers. These files may be quite large and 
during the text parsing routines I end up with blocking loops which are 
undesirable.

Text files my be parsed in a loop with something like:

def importFromText(self,data):
               datalines=data.split("\r\n")
                for line in datalines:
                        arrin=[]
                        arrin.insert(0,line[0:10])
                        etc....

For large files the above blocks - starving the other COM port protocols 
drivers of processing time.

I have tried to "yield" to the reactor by calling reactor.iterate() in 
the above loop trying to do what you would normally accomplish with 
sleep(0) in a multithreaded  application. This solution seemed to 
partially solve the problem but I'm experiencing intermittent  stability 
problems with my polling protocol drivers that are normally quite 
robust  simply hanging up.

I'm now considering rewriting the above loop as a recursive function 
using reactor.callLater(0,recursiveTexParsingFunction(params)).

I'm aware of twisted.flow but the examples given are a bit sparse and 
obscure and having tried something like  
http://twistedmatrix.com/documents/current/api/twisted.flow.flow.html - 
it appears I don't understand how to apply twisted.flow  
(iterators/coroutines) solve my particular problem.

I hope I'm missing something obvious and more elegant since the above 
possible solutions seems like a lot of rework to solve a very simple 
problem.

Any thoughts/advise would be much appreciated.

regards,

Eugene Coetzee                  


Web                 -> www.reedflute.com
=============================================== 





From Harald.Nyman at astrazeneca.com  Thu Mar 24 07:44:23 2005
From: Harald.Nyman at astrazeneca.com (Harald.Nyman at astrazeneca.com)
Date: Thu, 24 Mar 2005 13:44:23 +0100
Subject: [Twisted-Python] Bootstrapping Servers
Message-ID: <9F028CC77827D611ACEE0002A5F12F070855157B@semldsntmsx208.seml.astrazeneca.net>

I do something similar with the help of a shell script - roughly like
 
#!/bin/sh
touch START_SERVER
while [ -f START_SERVER ]
do
  rm START_SERVER
  thisDir=`pwd | gawk -F '/' '{print $NF}'`
  twistd --pidfile=${thisDir}.pid -noy che.tac > /dev/null &
done
echo Server ${thisDir} stopped.

 
--------------------------------------------------------------------
# Close connections, tell clients whether we're stopping or restarting,
......
 
    def _stopServer(self, restart):
        if restart:
            f = open('START_SERVER', 'w')
            f.close()
        reactor.stop()
        sys.exit()

Harald

-----Original Message-----
From: Grant McDonald [mailto:gmcdonald at infocomp.com]
Sent: torsdag, 24 mars 2005 07:38
To: Twisted general discussion (E-mail)
Subject: [Twisted-Python] Bootstrapping Servers



Dear All, 

I have created some code to close all active connections to a server, spawn
a new instance of itself and call reactor.stop() to facilitate a remote
bootstrap restart of a server. The bootstrapping process takes place through
a loader where if passed an option to bootstrap the code pauses for 20 secs
to allow the previous process to exit:

import sys 

if sys.argv[1] == "--bootstrap" or sys.argv[1] == "-b": 
    print 'bootstrapping' 
    del sys.argv[1] 
    import time 
    time.sleep(20.0) 

from twisted.python.runtime import platformType 
if platformType == "win32": 
    from twisted.scripts.twistw import run 
else: 
    from twisted.scripts.twistd import run 

run() 

However the above code does not allow the server to start since twistd
complains that the port is in use: 

2005/03/24 17:14 AUS Eastern Daylight Time [-] Log opened. 
2005/03/24 17:14 AUS Eastern Daylight Time [-] twistd 1.3.0
(C:\Python23\python.exe 2.3.3) starting up 
2005/03/24 17:14 AUS Eastern Daylight Time [-] reactor class:
twisted.internet.default.SelectReactor 
2005/03/24 17:14 AUS Eastern Daylight Time [-] managers.ConnectionManager
starting on 12005 
2005/03/24 17:14 AUS Eastern Daylight Time [-] Traceback (most recent call
last): 
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File "D:\python
projects\programs\zcfscheduler\loader.py", line 15, in ?

2005/03/24 17:14 AUS Eastern Daylight Time [-]     run() 

<-- snip --> 

2005/03/24 17:14 AUS Eastern Daylight Time [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)

2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\default.py", line 283, in
listenTCP

2005/03/24 17:14 AUS Eastern Daylight Time [-]     p.startListening() 
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 594, in
startListening

2005/03/24 17:14 AUS Eastern Daylight Time [-]     raise CannotListenError,
(self.interface, self.port, le) 
2005/03/24 17:14 AUS Eastern Daylight Time [-]
twisted.internet.error.CannotListenError: Couldn't listen on any:12005:
(10048, 'Address already in use').

how can i get the server to stop, restart itself and release the port in the
process? 

Regards, 

Grant McDonald 

 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 8123 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050324/5234398e/attachment.bin 

From nico at tekNico.net  Thu Mar 24 08:53:50 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 24 Mar 2005 14:53:50 +0100
Subject: [Twisted-Python] Re: How to accept connections faster
In-Reply-To: <424210F6.8050600@kenkinder.com>
References: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
	<424210F6.8050600@kenkinder.com>
Message-ID: <d1ugp8$bpv$1@sea.gmane.org>

> Keep in mind adbapi is just a wrapper for synchronous libraries that
> uses threading. Ideally you would write asynchronous clients for the SQL
> databases -- I've been thinking about doing just that for MySQL. That
> is, I've been thinking, NOT doing.

There is an async adapter for PostgreSQL, PGasync:

http://www.jamwt.com/pgasync/

[Flames about MySQL deleted. ;-) ]

-- 
Nicola Larosa - nico at tekNico.net

...this particular abuse of the rules of procedure will make a great
textbook example for the lack of democracy in the EU. While the
Luxembourg Presidency quoted some vague "institutional reasons" for
their position, their reasoning actually serves to discredit the
institution of the Council, and the whole EU project with it.
 -- Karl-Friedrich Lenz, http://k.lenz.name/wordpress/index.php?p=26




From radeex at gmail.com  Thu Mar 24 11:40:30 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 25 Mar 2005 03:40:30 +1100
Subject: [Twisted-Python] ANN: Twisted version 2.0
Message-ID: <60ed19d405032408407409bc66@mail.gmail.com>

http://twistedmatrix.com/

TASMANIA (DP) -- Found on the Internet on 2005-03-22 by an anonymous
programmer, Twisted 2.0 was obtained by local authorities and kept
isolated for public safety and further study.  On 2005-03-25, however,
nano-probes were released from the package's surface and propagated
the software to the public.

Version 2.0 is said to have originated from ancient underground ruins
somewhere in Australia, but their existence has not yet been verified.
Christopher Armstrong, enslaved release archaeologist, was only able
to say "Aieeya!  Release??  What release?  I just found this here
tablet under some sand.  Ia!"  Project lead Glyph Lefkowitz was not
available for comment, as he has fled the planet in fear of the
repercussions of the software's new release.

Record-keeper Mary Gardiner said "It will be interesting to see if the
Twisted Sumo distribution collapses into a singularity.  I guess
there's a potential that Earth will be destroyed."

As of this release, radix's soul, which has been included in Twisted
since version 0.8.0, has been split off from the main project and
given back to him to maintain in a separate sub-project.

----

Twisted 2.0 is a major upgrade, changing many things not only in the
code but also in the structure of the project.  As of 2.0, Twisted was
split up into many sub-projects which you can read about in the
Twisted Split FAQ[1].

2.0 also marks the first release including the migration to the Zope
Interface framework as opposed to Twisted's own built-in
interface/adapter system.  Another FAQ was made available[2] for those
curious about the change.

Many, tons, and lots of other changes have been made in this release.
The NEWS[3] file contains a high-level overview of most of these
changes.  Changes in now-split subprojects are available on their
individual project pages[4].

Tarballs are currently available at the twistedmatrix.com site, and
packages for win32, Debian, and other OSes are currently on the way.

1: http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/split.html
2: http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/components.html
3: http://twistedmatrix.com/projects/core/NEWS.txt
4: http://twistedmatrix.com/projects/
----

WHAT IS TWISTED?

Twisted is an event-based framework for internet applications which
works on Python 2.2.X and 2.3.X.  The following are the (important)
modules included with Twisted:

  - twisted.application
    A "Service" system that allows you to organize your application in
    hierarchies with well-defined startup and dependency semantics,
  - twisted.cred
    A general credentials and authentication system that facilitates
    pluggable authentication backends,
  - twisted.enterprise
    Asynchronous database access, compatible with any Python DBAPI2.0
    modules,
  - twisted.internet
    Low-level asynchronous networking APIs that allow you to define
    your own protocols that run over certain transports,
  - twisted.manhole
    A tool for remote debugging of your services which gives you a
    Python interactive interpreter,
  - twisted.protocols
    Basic protocol implementations and helpers for your own protocol
    implementations,
  - twisted.python
    A large set of utilities for Python tricks, reflection, text
    processing, and anything else,
  - twisted.spread
    A secure, fast remote object system,
  - twisted.trial
    A unit testing framework that integrates well with Twisted-based code.


Twisted supports integration of the Tk, GTK+, GTK+ 2, Qt, Mac OS X, or
wxPython event loop with its main event loop. The Win32 event loop is
also supported.

For more information, visit http://www.twistedmatrix.com, or join the
list at
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

There are many official Twisted subprojects, including clients and
servers for web, mail, DNS, and more. You can find out more about
these projects at http://twistedmatrix.com/projects/



-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From tv at twistedmatrix.com  Thu Mar 24 14:20:54 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 24 Mar 2005 21:20:54 +0200
Subject: [Twisted-Python] looping in a non-blocking way
In-Reply-To: <424281D8.5000101@reedflute.com>
References: <424281D8.5000101@reedflute.com>
Message-ID: <42431316.9020803@twistedmatrix.com>

Eugene Coetzee wrote:
> def importFromText(self,data):
>               datalines=data.split("\r\n")
>                for line in datalines:
>                        arrin=[]
>                        arrin.insert(0,line[0:10])
>                        etc....


from twisted.internet import reactor

CHUNKSIZE = 100
def _parseSome(lines):
     for i in xrange(CHUNKSIZE):
         try:
             line = lines.pop(0)
         except IndexError:
             break
         # parse line here, maybe mutate a data
         # structured passed as an argument
     if lines:
         reactor.callLater(0, _parseSome, lines)
     else:
         # all done, probably should notify someone

def importFromText(self, data):
     datalines=data.split("\r\n")
     _parseSome(datalines)



From tjreedy at udel.edu  Thu Mar 24 18:52:39 2005
From: tjreedy at udel.edu (Terry Reedy)
Date: Thu, 24 Mar 2005 18:52:39 -0500
Subject: [Twisted-Python] Re: Twisted version 2.0
References: <60ed19d405032408407409bc66@mail.gmail.com>
Message-ID: <d1vjrt$4lj$1@sea.gmane.org>

> Twisted is an event-based framework for internet applications which
> works on Python 2.2.X and 2.3.X.

Was 2.4.X intentionally omitted?






From radeex at gmail.com  Fri Mar 25 00:28:04 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 25 Mar 2005 16:28:04 +1100
Subject: [Twisted-Python] Re: Twisted version 2.0
In-Reply-To: <d1vjrt$4lj$1@sea.gmane.org>
References: <60ed19d405032408407409bc66@mail.gmail.com>
	<d1vjrt$4lj$1@sea.gmane.org>
Message-ID: <60ed19d4050324212818381ee3@mail.gmail.com>

(I already responded to this on python-list, here it is for the sake
of twisted-python...)


On Thu, 24 Mar 2005 18:52:39 -0500, Terry Reedy <tjreedy at udel.edu> wrote:
> > Twisted is an event-based framework for internet applications which
> > works on Python 2.2.X and 2.3.X.
> 
> Was 2.4.X intentionally omitted?

No. It was an accident; Twisted 2.0 works on Python 2.4. The README
file has been updated.



-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From howe.steven at gmail.com  Fri Mar 25 12:10:34 2005
From: howe.steven at gmail.com (steven howe)
Date: Fri, 25 Mar 2005 09:10:34 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop using
	Twisted
Message-ID: <90151e50503250910694cea0e@mail.gmail.com>

Hello,
I'm looking for some example code I can use to build an app from. I
need to 'wait' or sleep for new data in a file. Then wake and process
the data.

The file is a regular file, not a pipe. It is the output of a existing
program (i.e., not mine to modify). Needless to say, the API for hugh.
I'm need some help finding the right tools.

Thanks, 

Steven Howe



From tv at twistedmatrix.com  Fri Mar 25 14:12:43 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 25 Mar 2005 21:12:43 +0200
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <424462AB.2010000@twistedmatrix.com>

steven howe wrote:
> Hello,
> I'm looking for some example code I can use to build an app from. I
> need to 'wait' or sleep for new data in a file. Then wake and process
> the data.
 >
 > The file is a regular file, not a pipe. It is the output of a existing

As far as I remember off-hand, the "tail -f" trick is this: every once
in a while (use LoopingCall or reactor.callLater), read until eof, and
do f.seek(0, 1) to reset the EOF.

 > program (i.e., not mine to modify). Needless to say, the API for hugh.

Huh?



From vaibhavatlnct at yahoo.com  Fri Mar 25 14:28:41 2005
From: vaibhavatlnct at yahoo.com (vaibhav gupta)
Date: Fri, 25 Mar 2005 11:28:41 -0800 (PST)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
Message-ID: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>


 hi
  me vaibhav gupta 
      doing bachelor of engineering in india
     i am making on project on smtp server through 
python            but dont no wher to start can any
one help me i will highly thankful to him by sending
me thre e books or any material iam searching for the
book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
JOHN GEORGEN.  




__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From howe.steven at gmail.com  Fri Mar 25 15:44:45 2005
From: howe.steven at gmail.com (steven howe)
Date: Fri, 25 Mar 2005 12:44:45 -0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
References: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
	<20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
Message-ID: <90151e505032512446851b8d5@mail.gmail.com>

Good point. I'm writing a daemon, which will be handling network
events. So twisted will be used. With that in mind I fingured I'd like
to use the event loop model in twisted (two birds sort of thing).

Steven

On Fri, 25 Mar 2005 11:28:41 -0800 (PST), vaibhav gupta
<vaibhavatlnct at yahoo.com> wrote:
> 
>  hi
>   me vaibhav gupta
>       doing bachelor of engineering in india
>      i am making on project on smtp server through
> python            but dont no wher to start can any
> one help me i will highly thankful to him by sending
> me thre e books or any material iam searching for the
> book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
> JOHN GEORGEN.
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarrod.roberson at gmail.com  Fri Mar 25 15:47:58 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 25 Mar 2005 15:47:58 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
References: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
	<20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
Message-ID: <2389d473050325124745a6e2f9@mail.gmail.com>

On Fri, 25 Mar 2005 11:28:41 -0800 (PST), vaibhav gupta
<vaibhavatlnct at yahoo.com> wrote:
> 
>  hi
>   me vaibhav gupta
>       doing bachelor of engineering in india
>      i am making on project on smtp server through
> python            but dont no wher to start can any
> one help me i will highly thankful to him by sending
> me thre e books or any material iam searching for the
> book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
> JOHN GEORGEN.
> 
> __________________________________________________


try a book store such as amazon.com



From ken at kenkinder.com  Fri Mar 25 19:39:53 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 25 Mar 2005 18:39:53 -0600
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <4244AF59.6060802@kenkinder.com>

It seems to me you probably will either check periodically in the 
reactor, like this:

    def checkFile():
        x = os.stat(file)
        ...
        reactor.callLater(.5, checkFile)

    reactor.callWhenRunning(checkFile)

Or just start another thread like this:

    def wakeUp():
        (action to take when file changes)

    def checker():
        while 1:
            (code that waits for file to change)
            reactor.callFromThread(wakeUp)

    reactor.callInThread(checker)

-Ken

steven howe wrote:

>Hello,
>I'm looking for some example code I can use to build an app from. I
>need to 'wait' or sleep for new data in a file. Then wake and process
>the data.
>
>The file is a regular file, not a pipe. It is the output of a existing
>program (i.e., not mine to modify). Needless to say, the API for hugh.
>I'm need some help finding the right tools.
>
>Thanks, 
>
>Steven Howe
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From exarkun at divmod.com  Fri Mar 25 23:28:58 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 26 Mar 2005 04:28:58 GMT
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <4244AF59.6060802@kenkinder.com>
Message-ID: <20050326042858.13806.1670865869.divmod.quotient.24348@ohm>

On Fri, 25 Mar 2005 18:39:53 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>It seems to me you probably will either check periodically in the 
> reactor, like this:
> 
>     def checkFile():
>         x = os.stat(file)
>         ...
>         reactor.callLater(.5, checkFile)
> 
>     reactor.callWhenRunning(checkFile)
> 
> Or just start another thread like this:
> 
>     def wakeUp():
>         (action to take when file changes)
> 
>     def checker():
>         while 1:
>             (code that waits for file to change)
>             reactor.callFromThread(wakeUp)
> 
>     reactor.callInThread(checker)

  The threaded version ties up an entire work thread from the pool for the lifetime of the application.  Unless you only want to watch one or two files, this is probably not ideal.  There's no real reason to use a thread for this at all.  Polling from the main loop is a perfectly reasonable solution (and Twisted can deal with polling at much greater frequency than twice a second, if necessary).  

  Additionally, there are actual event notification systems for this: dnotify and inotify on Linux, for example.  Twisted doesn't support these directly (although it might support inotify soon), but integrating them and other things like them is not extremely difficult.

  Jp



From daverz at gmail.com  Sat Mar 26 02:57:07 2005
From: daverz at gmail.com (Dave Cook)
Date: Fri, 25 Mar 2005 23:57:07 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <7a59f0250503252357594dd5de@mail.gmail.com>

Using Ken's first example, here's what I came up with:

import os
import stat
from twisted.internet import reactor

class FileWatcher:

    def __init__(self, period, filename):
        self.period = period
        self.filename = filename
        self.callbacks = []
        self.mtime = os.stat(filename)[stat.ST_MTIME]
        reactor.callWhenRunning(self.checkFile)

    def addCallback(self, callback):
        self.callbacks.append(callback)

    def removeCallback(self, callback):
        self.callbacks.remove(callback)
        
    def checkFile(self):
        mtime = os.stat(self.filename)[stat.ST_MTIME]
        if mtime > self.mtime:
            self.mtime = mtime
            for callback in self.callbacks:
                callback(self.filename, mtime)
        reactor.callLater(self.period, self.checkFile)


if __name__=='__main__':

    import time

    def changed(filename, mtime):
        print "%s modified at %s." % (filename, time.ctime(mtime))
        
    open('/tmp/foo', "w").close()
    FileWatcher(0.1, '/tmp/foo').addCallback(changed)
    reactor.run()

Run it in one terminal window, and in the other run

  touch /tmp/foo

to see what happens.



From glyph at divmod.com  Sat Mar 26 12:53:47 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 26 Mar 2005 12:53:47 -0500
Subject: [Twisted-Python] Authenticating users and refering them to
	personal URLs based on the authentication result.
In-Reply-To: <975ab1d1050323103648096c5b@mail.gmail.com>
References: <975ab1d1050323103648096c5b@mail.gmail.com>
Message-ID: <4245A1AB.3020001@divmod.com>

xif xif wrote:

> I'm just starting with Nevow, and wanted to know if this is possible,
> and if so get a few leads.

Please use the "twisted-web" mailing list for web-related questions.



From jarrod.roberson at gmail.com  Mon Mar 28 14:44:13 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 28 Mar 2005 14:44:13 -0500
Subject: [Twisted-Python] Twisted 2.x How To Fix : DeprecationWarning:
	Deferred.setTimeout is deprecated ?
Message-ID: <2389d47305032811443a00a75e@mail.gmail.com>

I have some older code that uses Deferred.setTimeout() what is the
appropriate change/replacement for this functionality? I looked at the
new code and don't understand the suggested solution to this warning

-- If you don't know what you want, you probably need a nap.



From foom at fuhm.net  Mon Mar 28 16:18:35 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 28 Mar 2005 16:18:35 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <f5376647fec3e38553ffdb85a8fd06e3@fuhm.net>

Bug summary
______________________
Since 2005-03-19 16:41:53.330000:
  Bugs opened: 13   Bugs closed: 13   Total open bugs: 333 (+0)
   Urgent: 3 (-4)
   Bug: 132 (+5)
   Feature: 130 (-1)
   Wish: 68 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
TypeError in serialize methods of twisted.xish.domish (patch included)  
(4 days ago)
        http://twistedmatrix.com/bugs/issue946 opened by syt

                     ==== Bug ====
Lore doesn't generate TOC correctly  (3 hours ago)
CLOSED http://twistedmatrix.com/bugs/issue951 opened by naz

API Reference link broken  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue944 opened by espeoneefi

websetroot: Completely fails fresh install of Twisted 2.0.0 and Twisted 
Web 0.5.0  (4 days ago)
        http://twistedmatrix.com/bugs/issue945 opened by levi

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue948 opened by ash

[WEBSITE] "Go Siege" project link in the "Success Stories" page is 
outdated.  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue941 opened by tirkal

[DOCUMENTATION, FLOW, WEBSITE] Broken documentation link for Twisted 
Flow  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue949 opened by ash

BUG: childFDs mapping in process support breaks process termination  
(yesterday)
        http://twistedmatrix.com/bugs/issue950 opened by exarkun

DeferredQueue mixes up and misapplies size and backlog parameters  (4 
days ago)
CLOSED http://twistedmatrix.com/bugs/issue947 opened by logan

Set up roundup buildslaves for individual Twisted subprojects  (5 days 
ago)
        http://twistedmatrix.com/bugs/issue943 opened by radix

New plugin unit tests should use directories beneath _trial_temp, not 
twisted/plugins/  (7 days ago)
        http://twistedmatrix.com/bugs/issue942 opened by exarkun

[CONCH, DOCUMENTATION] Missing man page for cftp  (1 week ago)
        http://twistedmatrix.com/bugs/issue939 opened by Tv

[DOCUMENTATION, LORE] Missing man page for bookify  (1 week ago)
        http://twistedmatrix.com/bugs/issue940 opened by Tv

Bugs Closed
______________________
                     ==== Urgent ====
Split Twisted into many packages and release 2.0  (12 months ago)
        http://twistedmatrix.com/bugs/issue567 opened by itamarst, 
closed by radix

[RELEASE MANAGEMENT] Don't include docs source .xhtml files in release 
tarballs  (15 months ago)
        http://twistedmatrix.com/bugs/issue455 opened by itamarst, 
closed by radix

t.test.test_plugin doesn't work in "deployed" mode  (1 week ago)
        http://twistedmatrix.com/bugs/issue925 opened by marienz, closed 
by exarkun

[DOCUMENTATION] Document "pid" and "status" attributes of Process 
transports  (7 months ago)
        http://twistedmatrix.com/bugs/issue670 opened by exarkun, closed 
by radix

BUG: Installer raises exception for Python 2.2  (1 week ago)
        http://twistedmatrix.com/bugs/issue933 opened by exarkun, closed 
by radix

                     ==== Bug ====
Lore doesn't generate TOC correctly  (3 hours ago)
        http://twistedmatrix.com/bugs/issue951 opened by naz, closed by 
naz

API Reference link broken  (4 days ago)
        http://twistedmatrix.com/bugs/issue944 opened by espeoneefi, 
closed by radix

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (3 days ago)
        http://twistedmatrix.com/bugs/issue948 opened by ash, closed by 
radix

[WEBSITE] "Go Siege" project link in the "Success Stories" page is 
outdated.  (1 week ago)
        http://twistedmatrix.com/bugs/issue941 opened by tirkal, closed 
by radix

[DOCUMENTATION, FLOW, WEBSITE] Broken documentation link for Twisted 
Flow  (3 days ago)
        http://twistedmatrix.com/bugs/issue949 opened by ash, closed by 
radix

DeferredQueue mixes up and misapplies size and backlog parameters  (4 
days ago)
        http://twistedmatrix.com/bugs/issue947 opened by logan, closed 
by exarkun

[XISH] [PATCH] restore priority sorting in xish/xpath.py  (1 week ago)
        http://twistedmatrix.com/bugs/issue934 opened by ralphm, closed 
by radix

                     ==== Feature ====
[CONCH] signal to conch to reconnect  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue916 opened by z3p, closed by 
z3p




From andrew-twisted at puzzling.org  Mon Mar 28 19:36:42 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 29 Mar 2005 10:36:42 +1000
Subject: [Twisted-Python] Twisted 2.x How To Fix : DeprecationWarning:
	Deferred.setTimeout is deprecated ?
In-Reply-To: <2389d47305032811443a00a75e@mail.gmail.com>
References: <2389d47305032811443a00a75e@mail.gmail.com>
Message-ID: <20050329003642.GA5803@frobozz>

On Mon, Mar 28, 2005 at 02:44:13PM -0500, jarrod roberson wrote:
> I have some older code that uses Deferred.setTimeout() what is the
> appropriate change/replacement for this functionality? I looked at the
> new code and don't understand the suggested solution to this warning

See http://twistedmatrix.com/bugs/issue178, and the mailing list thread it
links to for some discussion about this.

The short version is you should do it yourself with callLater.

-Andrew.




From bear at code-bear.com  Tue Mar 29 00:31:28 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 29 Mar 2005 00:31:28 -0500
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
Message-ID: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>

I've installed twisted 2.0 and Python 2.4 on my winxp test box and I've 
also installed the following packages:

postgresql 8.0
mysql 4.1
psycopg 1.1.2
mxTools 2.0 (needed by psycopg)
mysql-python 1.2.0

The mysql test ran without a problem but I had to modifiy the pgsql 
test so it would work -- I needed to add host='localhost' to 
psycopg.connect() call.

With that change it ran fine.

I'll be working on testing firebird, gadfly and sqlite hopefully 
tomorrow.

Also on my todo list is to create a win32 buildbot for twisted 2.0

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050329/c854c872/attachment.pgp 

From fog at initd.org  Tue Mar 29 05:09:10 2005
From: fog at initd.org (Federico Di Gregorio)
Date: Tue, 29 Mar 2005 12:09:10 +0200
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
In-Reply-To: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
References: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
Message-ID: <1112090950.7574.0.camel@iris>

Il giorno mar, 29-03-2005 alle 00:31 -0500, Mike Taylor ha scritto:
> I've installed twisted 2.0 and Python 2.4 on my winxp test box and I've 
> also installed the following packages:
> 
> postgresql 8.0
> mysql 4.1
> psycopg 1.1.2

1.1.2? I really hope you're not using 1.1.2 for real. Use 1.1.18, 1.1.19
to be released soon or 1.99.13 with all the adaptation goodies.  :)

federico





From itamar at itamarst.org  Tue Mar 29 11:16:58 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Mar 2005 11:16:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <E1DGJ8V-0002co-00@wolfwood>
References: <E1DGJ8V-0002co-00@wolfwood>
Message-ID: <1112113018.8361.16.camel@localhost.localdomain>

On Tue, 2005-03-29 at 09:00 -0700, James Knight wrote:
> Author: foom
> Date: Tue Mar 29 09:00:10 2005
> New Revision: 13334
> 
> Modified:
>    trunk/twisted/internet/posixbase.py
>    trunk/twisted/python/log.py
>    trunk/twisted/python/threadable.py
> Log:
> Make log.err and log.msg actually threadsafe, by executing them in the
> reactor-loop if not called from the main thread. 

I talked to glyph about this at some point, and he thought that we
shouldn't do this, if you want to make observers thread safe you should
do so yourself. I'm not sure I agree with glyph, though.




From bear at code-bear.com  Tue Mar 29 12:08:54 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 29 Mar 2005 12:08:54 -0500
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
In-Reply-To: <1112090950.7574.0.camel@iris>
References: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
	<1112090950.7574.0.camel@iris>
Message-ID: <76bfdad228116c8df2a7007097bdcfd7@code-bear.com>

On Mar 29, 2005, at 5:09 AM, Federico Di Gregorio wrote:

> Il giorno mar, 29-03-2005 alle 00:31 -0500, Mike Taylor ha scritto:
>> psycopg 1.1.2
>
> 1.1.2? I really hope you're not using 1.1.2 for real. Use 1.1.18, 
> 1.1.19
> to be released soon or 1.99.13 with all the adaptation goodies.  :)

1.1.2 was the first one I found that had a win32 binary installer - I 
would love to use the most recent version.

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050329/0d5166b9/attachment.pgp 

From python.programming at gmail.com  Tue Mar 29 15:11:03 2005
From: python.programming at gmail.com (Kevin)
Date: Tue, 29 Mar 2005 15:11:03 -0500
Subject: [Twisted-Python] Docs for twisted?
Message-ID: <d082fff805032912114ef0df98@mail.gmail.com>

I am new to twistesd and was wondering if there are any online docs
other then the ones at twistedmatrix.com, that could help me
understand it better.

Thanks

Kevin



From tim at se.linux.org  Tue Mar 29 15:21:22 2005
From: tim at se.linux.org (=?iso-8859-1?Q?Tim_Terleg=E5rd?=)
Date: Tue, 29 Mar 2005 22:21:22 +0200 (CEST)
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

And a book would be nice *wink*  :)

Tim




From python.programming at gmail.com  Tue Mar 29 15:22:27 2005
From: python.programming at gmail.com (Kevin)
Date: Tue, 29 Mar 2005 15:22:27 -0500
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>
References: <d082fff805032912114ef0df98@mail.gmail.com>
	<Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>
Message-ID: <d082fff805032912225b5897ba@mail.gmail.com>

ya but I'll talk what I can get lol


On Tue, 29 Mar 2005 22:21:22 +0200 (CEST), Tim Terleg?rd
<tim at se.linux.org> wrote:
> > I am new to twistesd and was wondering if there are any online docs
> > other then the ones at twistedmatrix.com, that could help me
> > understand it better.
> 
> And a book would be nice *wink*  :)
> 
> Tim
> 
>



From orbitz at ezabel.com  Tue Mar 29 17:17:56 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 29 Mar 2005 17:17:56 -0500
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <cc0f29db03ddb287a5752469d8c9bb92@ezabel.com>

There are a few random tutorials on the net I think.  Your best luck is 
to A) know python very very very well.  If you don't know Python that 
well then I think you are wasting your time trying to mess with twisted 
so soon.  But if the documentation isn't working out then you are 
always free to ask questions here and on the IRC channel.  People are 
always around and glad to answer your question as long as it's well 
thought out and you have done all you can to try to find the answer.

Good luck

On Mar 29, 2005, at 3:11 PM, Kevin wrote:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.
>
> Thanks
>
> Kevin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From daverz at gmail.com  Tue Mar 29 19:31:05 2005
From: daverz at gmail.com (Dave Cook)
Date: Tue, 29 Mar 2005 16:31:05 -0800
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <7a59f02505032916311c92bd69@mail.gmail.com>

On Tue, 29 Mar 2005 15:11:03 -0500, Kevin <python.programming at gmail.com> wrote:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

The manual on the website is pretty good. I printed it out and had
Kinkos bind it for me.

http://twistedmatrix.com/documents/current/howto/

That plus examples in the distribution, the FAQ, the mailing list, and
the helpful folks on IRC helped me to get comfortable in only a couple
months ;}.

Dave Cook



From exarkun at divmod.com  Tue Mar 29 21:21:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 02:21:14 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13342 - Tests are good,
	even if they are woefully incomplete.
In-Reply-To: <E1DGRAR-0002pG-00@wolfwood>
Message-ID: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>

On Tue, 29 Mar 2005 17:34:43 -0700, Alex Levy <mesozoic at wolfwood.twistedmatrix.com> wrote:
>Author: mesozoic
> Date: Tue Mar 29 17:34:41 2005
> New Revision: 13342
> 
> Added:
>    trunk/twisted/web2/test/test_wsgi.py
> Log:
> Tests are good, even if they are woefully incomplete.
> 

  Also, if they don't fail :)  Could the currently failing test_wsgi tests be set as todo or skip, or be fixed?

  Thanks,

  Jp



From dreid at dreid.org  Wed Mar 30 03:32:26 2005
From: dreid at dreid.org (David Reid)
Date: Wed, 30 Mar 2005 00:32:26 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r13342 - Tests are good,
	even if they are woefully incomplete.
In-Reply-To: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>
References: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>
Message-ID: <424A641A.6090800@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Just for the record, this has been fixed it was only failing on full-2.2
because 2.2 is broken in the way it os.environ.copy() works (or perhaps
2.3 and 2.4 are broken in the way that os.environ.copy() works)

Besides, this is what we have buildbots for right? :)

Jp Calderone wrote:
| On Tue, 29 Mar 2005 17:34:43 -0700, Alex Levy
<mesozoic at wolfwood.twistedmatrix.com> wrote:
|
|>Author: mesozoic
|>Date: Tue Mar 29 17:34:41 2005
|>New Revision: 13342
|>
|>Added:
|>   trunk/twisted/web2/test/test_wsgi.py
|>Log:
|>Tests are good, even if they are woefully incomplete.
|>
|
|
|   Also, if they don't fail :)  Could the currently failing test_wsgi
tests be set as todo or skip, or be fixed?
|
|   Thanks,
|
|   Jp
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFCSmQarsrO6aeULcgRAoREAJ9Y5XRxOi46XPDSgC/H18dAyWosLwCeN2oz
Vdu7ycT21fpFZw8Oms9JXRw=
=YzeM
-----END PGP SIGNATURE-----



From thomas at apestaart.org  Wed Mar 30 04:55:03 2005
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Wed, 30 Mar 2005 11:55:03 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err
	and log.msg actually threadsafe, by executing them in the
In-Reply-To: <1112113018.8361.16.camel@localhost.localdomain>
References: <E1DGJ8V-0002co-00@wolfwood>
	<1112113018.8361.16.camel@localhost.localdomain>
Message-ID: <1112176503.5535.0.camel@otto.amantes>


> > Make log.err and log.msg actually threadsafe, by executing them in the
> > reactor-loop if not called from the main thread. 
> 
> I talked to glyph about this at some point, and he thought that we
> shouldn't do this, if you want to make observers thread safe you should
> do so yourself. I'm not sure I agree with glyph, though.

If you make them threadsafe by marshalling to the reactor, is correct
ordering still guaranteed ?

Thomas


Dave/Dina : future TV today ! - http://www.davedina.org/
<-*- thomas (dot) apestaart (dot) org -*->
But you never lost your beauty
Although you lost your hope
And you made no mistake you couldn't wash away
with liar's tears pouring down your face
<-*- thomas (at) apestaart (dot) org -*->
URGent, best radio on the net - 24/7 ! - http://urgent.fm/






From anderson at pegasus.eti.br  Wed Mar 30 07:21:14 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Wed, 30 Mar 2005 09:21:14 -0300
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com> (Kevin's message of
	"Tue, 29 Mar 2005 15:11:03 -0500")
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <87d5thz5mt.fsf@gandalf.pegasus.eti.br>

Kevin <python.programming at gmail.com> writes:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

You may walk through examples directory and if you know Python pretty
well, you can use pydoc on each module you need to use. 

IRC on irc.freenode.net (channels #twisted and #twisted.web) is a good
resource too. 




From exarkun at divmod.com  Wed Mar 30 08:14:31 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 13:14:31 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err
	and log.msg actually threadsafe, by executing them in the
In-Reply-To: <1112176503.5535.0.camel@otto.amantes>
Message-ID: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>

On Wed, 30 Mar 2005 11:55:03 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>
> > > Make log.err and log.msg actually threadsafe, by executing them in the
> > > reactor-loop if not called from the main thread. 
> > 
> > I talked to glyph about this at some point, and he thought that we
> > shouldn't do this, if you want to make observers thread safe you should
> > do so yourself. I'm not sure I agree with glyph, though.
> 
> If you make them threadsafe by marshalling to the reactor, is correct
> ordering still guaranteed ?
> 
> Thomas
> 

  Calls to log.{msg,err} were already serialized, so I don't think any changes have been made to the order observers will be called with events.

  Another thing about the change, though, is that it makes Twisted even more broken on threadless platforms.  *poke foom*

  Jp



From foom at fuhm.net  Wed Mar 30 10:28:25 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Mar 2005 10:28:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>
References: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>
Message-ID: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>

On Mar 30, 2005, at 8:14 AM, Jp Calderone wrote:
>   Another thing about the change, though, is that it makes Twisted 
> even more broken on threadless platforms.  *poke foom*

Oughtn't. isInIOThread always returns true if you haven't initialized 
threads yet.

James




From exarkun at divmod.com  Wed Mar 30 10:51:03 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 15:51:03 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>
Message-ID: <20050330155103.13806.1026980900.divmod.quotient.33739@ohm>

On Wed, 30 Mar 2005 10:28:25 -0500, James Y Knight <foom at fuhm.net> wrote:
>On Mar 30, 2005, at 8:14 AM, Jp Calderone wrote:
> >   Another thing about the change, though, is that it makes Twisted 
> > even more broken on threadless platforms.  *poke foom*
> 
> Oughtn't. isInIOThread always returns true if you haven't initialized 
> threads yet.
> 
> James
> 

  Except when it raises an exception, instead. :)

  I started on a bunch of threadless fixes.  Now that 2.0 is out the door it might be time to pull them back into trunk.  The code is in /branches/exarkun/threadless/ if anyone wants to look/contribute.

  Jp



From corydodt at twistedmatrix.com  Wed Mar 30 12:26:53 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 30 Mar 2005 09:26:53 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
Message-ID: <424AE15D.4070501@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

These are to be considered "release candidates".  Testing is required to
determine if the installers are good enough to be considered final.  So please
try them and report problems. :-)

This is based on the 2.0.0 final release of Twisted, so the RC designation
only applies to the installers themselves.

Now available at
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc1)-py2.3.exe
and
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc1)-py2.4.exe

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
q22Vflhb70RV4xy/iKVUCps=
=Y2A8
-----END PGP SIGNATURE-----



From general at eepatents.com  Wed Mar 30 13:21:16 2005
From: general at eepatents.com (Ed Suominen)
Date: Wed, 30 Mar 2005 10:21:16 -0800
Subject: [Twisted-Python] Re: Docs for twisted?
Message-ID: <200503301021.16816.general@eepatents.com>

The lack of detailed, current documentation for Twisted is an ongoing 
problem, especially given how revolutionary and difficult to understand 
its underlying programming concepts are.  Dave Cook's "just use it for 
months" comment is not at all off the mark, but it's a frustrating and 
unproductive way to learn.  It particularly annoys me that the code 
contains so few docstrings -- Python's especially useful and convenient 
way to document your code -- and there are so many nonsensical "cute" 
names like jelly, banana, etc.

Putting my money where my mouth is, I would be willing to contribute a 
few hundred bucks to getting some more docstrings in the code and, 
consequently, to a somewhat better lore-generated API specification.

One thought would be to run a "bounty" program using an 
actively-generated, hyperlinked web rendition of the latest Twisted SVN 
code.  For example, participant donors could mark defs, classes, or 
blocks of code to indicate where they're willing to "sponsor" 
docstrings, and they could also click on newly added docstrings in such 
"sponsored" code portions to indicate acceptance and make a bounty 
payment from their contribution to the fund or whatever to the person 
who wrote the docstring.  The proportion of docstring submissions 
accepted by a given donor could be a score that potential writers could 
look at when deciding whether to do the work or not.

Any thoughts on that idea?  Anyone willing to step up as a 
co-contributor to such an effort, both financially and with some Nevow 
coding?

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From uwe at oss4u.com  Wed Mar 30 14:02:07 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Wed, 30 Mar 2005 11:02:07 -0800
Subject: [Twisted-Python] Threading traceback
Message-ID: <200503301102.07995.uwe@oss4u.com>


Hi everyone,

I'm using twisted in a thread together with wxPython. 
Everything works quite fine, but I'm getting a strange traceback when I exit 
the application.
here's the scenario:

wx runs in the main thread
twisted runs in a secondary thread which is started like:

        _daemon = DaemonLoop(self,self._port)
        _daemon.setDaemon(True)
        _daemon.start()

where Daemonloop is (partial):
class DaemonLoop(threading.Thread,pb.Referenceable):
        def __init__(self, wxEvtHandler, port):
            super(DaemonLoop, self).__init__()
            self.ui = UIProxy(wxEvtHandler)
            self.port=port

        def _error(self,error):
	    if self.ui:
	        self.ui._error(error)
        
        def run(self):
	    # Run reactor
            reactor.run(installSignalHandlers=0)

	def stop(self):
	    reactor.stop()

        def connectionLost(self):
            self.ui.connectionLost()
	    reactor.stop()
            

I stop the application from the main thread using

_daemon.stop() <- should kill the twisted reactor
wx.Exit() <- kills the main thread

The app exits (on linux), but I get this traceback:

Unhandled exception in thread started by <bound method DaemonLoop.__bootstrap 
of <DaemonLoop(Thread-1, stopped daemon)>>
Traceback (most recent call last):
  File "/usr/lib/python2.3/threading.py", line 451, in __bootstrap
    self.__stop()
  File "/usr/lib/python2.3/threading.py", line 460, in __stop
    self.__block.notifyAll()
  File "/usr/lib/python2.3/threading.py", line 256, in notifyAll
    self.notify(len(self.__waiters))
  File "/usr/lib/python2.3/threading.py", line 238, in notify
    currentThread() # for side-effect
TypeError: 'NoneType' object is not callable


The problem seems to be on windows. There the app doesn't exit all the time, 
just sometimes. On Win the window disappears, but in the process list is 
still the application process.
So this looks to me like there are still non daemon threads around which keep 
the application from exiting.
On a side note: I'm also using the "deferToThread" method for some longer 
running tasks, so it might well be that it's one of those threads causing the 
issue. Is there a way to figure out which thread doesn't die? 
Any pointers are highly appreciated.

Thanks

UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From foom at fuhm.net  Wed Mar 30 14:30:47 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Mar 2005 14:30:47 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13358 - brand as 2.0.0 and
	apply my mods from 13320
In-Reply-To: <E1DGgoo-0003Gf-00@wolfwood>
References: <E1DGgoo-0003Gf-00@wolfwood>
Message-ID: <0be396a332cbff142ccda533d7e66c94@fuhm.net>

On Mar 30, 2005, at 12:17 PM, Cory Dodt wrote:
> -version="SVN-Trunk"
> +version="2.0.0"

That's not the right way to set the version. It needs to be set in all 
projects?and in all other files which contain "SVN-Trunk". See what the 
release-twisted script does.

James



From bear at code-bear.com  Wed Mar 30 15:19:25 2005
From: bear at code-bear.com (Mike Taylor)
Date: Wed, 30 Mar 2005 15:19:25 -0500
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424AE15D.4070501@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
Message-ID: <d535279be3c4454c1c17c4d693894ea2@code-bear.com>

I just tried the python 2.4 installer and everything seemed to work  
fine - am running trial now to make sure.

One question I had, you are including the .pyc files it looks like.  I  
had always thought that wasn't a good thing to do - just curious.

During the un-install it seems that the site-packages\twisted\test  
directory remained - I'm going to test on a completely clean setup  
later to verify that it wasn't something I had left behind.

thanks,

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> These are to be considered "release candidates".  Testing is required  
> to
> determine if the installers are good enough to be considered final.   
> So please
> try them and report problems. :-)
>
> This is based on the 2.0.0 final release of Twisted, so the RC  
> designation
> only applies to the installers themselves.
>
> Now available at
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.3.exe
> and
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.4.exe
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org
>
> iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
> q22Vflhb70RV4xy/iKVUCps=
> =Y2A8
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050330/9073cbb8/attachment.pgp 

From bear at code-bear.com  Wed Mar 30 15:21:15 2005
From: bear at code-bear.com (Mike Taylor)
Date: Wed, 30 Mar 2005 15:21:15 -0500
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424AE15D.4070501@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
Message-ID: <5e89b96e10e2e953f813fc2f48bb4946@code-bear.com>

A quick follow-up to my previous post.

I had an ssh session open that had the twisted\test directory active -  
that's why un-install couldn't remove it.  sorry for the false report.

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> These are to be considered "release candidates".  Testing is required  
> to
> determine if the installers are good enough to be considered final.   
> So please
> try them and report problems. :-)
>
> This is based on the 2.0.0 final release of Twisted, so the RC  
> designation
> only applies to the installers themselves.
>
> Now available at
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.3.exe
> and
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.4.exe
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org
>
> iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
> q22Vflhb70RV4xy/iKVUCps=
> =Y2A8
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20050330/a457cf01/attachment.pgp 

From kwhitesell at adelphia.net  Wed Mar 30 16:10:53 2005
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Wed, 30 Mar 2005 16:10:53 -0500
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
Message-ID: <424B15DD.1060806@adelphia.net>

Three thoughts come to mind - coming from someone who has climbed 
the Twisted learning curve for the last year.

1) The docs I'd like to see would be of a more tutorial nature - it 
would seem to me that they would be the easiest way to reach a 
"lights on" stage. The sample code is good - and the finger tutorial 
is fine (for what it addresses) - but there are still lots of bits & 
pieces that seem to be hidden.

At some point, you reach the "Ah-ha!" stage. The learning curve 
greatly flattens out at that point. (At least that was my personal 
experience with Twisted-PB.) Once you reach that point, everything 
else becomes much easier to learn.

It helps a _whole_ lot to have a specific project / task in mind. 
Part of this is understanding your task sufficiently well to be able 
to divide it into the components as they apply to Twisted, and build 
carefully, step-by-step. (In my case, I built a multi-room chat 
server. Not a whole lot of code, but takes advantage of a number of 
different principles.)

I think it also helps, as painful as it may seem, to force yourself 
to work through the tutorials in the book by typing the code rather 
than just reading it. There's a more intimate association that you 
develop by going through the actual process than just running the 
existing code.

2) A current road map may help. I've seen various comments about 
modules being "not-quite-primetime" or "an old way of doing things" 
(specifically, I'm thinking about Enterprise, other than adbapi, and 
TAC / TAP files) Yes, Python (and Twisted) is the "Batteries 
Included" environment, but as someone pointed out to me at PyCon, 
some of those batteries are dead. I'd really like to know what 
modules I should avoid.

3) Even something like a directed HOWTO could be incredibly useful.
For example:

If you want to build a web server - read Chapter 7, Web 
Applications, section 7.1 and look at sample "xxx" - where sample 
"xxx" is the simplest and most straight forward first example of a 
web server.

There's a _lot_ there, and wading through it can be frustrating. The 
only way I managed it, was to print out the consolidated HOWTOs in 
the book.pdf file and read Chapter 6 repeatedly. After about the 
10th repetition, along with working through the samples, things just 
started falling into place.





From corydodt at twistedmatrix.com  Wed Mar 30 16:24:58 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 30 Mar 2005 13:24:58 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <d535279be3c4454c1c17c4d693894ea2@code-bear.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
Message-ID: <424B192A.70409@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

There's nothing wrong with including the .pyc files per se, except they
increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
etc.  The reason I tried including them is because it makes the install go
faster (no .pyc compile step).  If a significant number of people want a
smaller installer, I'll take them out.

Thanks for the report, glad to hear everything's working for you.

C



Mike Taylor wrote:
| I just tried the python 2.4 installer and everything seemed to work
| fine - am running trial now to make sure.
|
| One question I had, you are including the .pyc files it looks like.  I
| had always thought that wasn't a good thing to do - just curious.
|
| During the un-install it seems that the site-packages\twisted\test
| directory remained - I'm going to test on a completely clean setup
| later to verify that it wasn't something I had left behind.
|
| thanks,
|
| ---
| Bear
| http://code-bear.com
|
| Open Source Applications Foundation (OSAF)
| http://www.osafoundation.org
|
| PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
|
|
| On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
|
| These are to be considered "release candidates".  Testing is required  to
| determine if the installers are good enough to be considered final.
| So please
| try them and report problems. :-)
|
| This is based on the 2.0.0 final release of Twisted, so the RC
| designation
| only applies to the installers themselves.
|
| Now available at
| http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| rc1)-py2.3.exe
| and
| http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| rc1)-py2.4.exe
|
|>
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|>

| ------------------------------------------------------------------------

| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCSxkq3A5SrXAiHQcRAhIbAKCQJWkvaDQuMnfyMiNAhl+ByQYemQCeJI9u
ruuYS84MZGBelpHpl6nJrKY=
=Cc3M
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Wed Mar 30 18:44:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Mar 2005 09:44:24 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330155103.13806.1026980900.divmod.quotient.33739@ohm>
References: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>
	<20050330155103.13806.1026980900.divmod.quotient.33739@ohm>
Message-ID: <20050330234424.GK9620@frobozz>

On Wed, Mar 30, 2005 at 03:51:03PM +0000, Jp Calderone wrote:
[...]
> 
>   I started on a bunch of threadless fixes.  Now that 2.0 is out the door
>   it might be time to pull them back into trunk.  The code is in
>   /branches/exarkun/threadless/ if anyone wants to look/contribute.

Would this benefit from using the dummy_thread/dummy_threading modules from
Python 2.4?

-Andrew.




From andrew-twisted at puzzling.org  Wed Mar 30 18:46:31 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Mar 2005 09:46:31 +1000
Subject: [Twisted-Python] Re: Docs for twisted?
In-Reply-To: <200503301021.16816.general@eepatents.com>
References: <200503301021.16816.general@eepatents.com>
Message-ID: <20050330234631.GL9620@frobozz>

On Wed, Mar 30, 2005 at 10:21:16AM -0800, Ed Suominen wrote:
[...]
> 
> Putting my money where my mouth is, I would be willing to contribute a 
> few hundred bucks to getting some more docstrings in the code and, 
> consequently, to a somewhat better lore-generated API specification.

Minor correction: the API docs are generated by epydoc (with a bunch of
hacks -- see admin/epyrun in a SVN checkout).  Lore processes the Howtos.

-Andrew.




From exarkun at divmod.com  Wed Mar 30 19:26:07 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 31 Mar 2005 00:26:07 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330234424.GK9620@frobozz>
Message-ID: <20050331002607.13806.565501193.divmod.quotient.34506@ohm>

On Thu, 31 Mar 2005 09:44:24 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Wed, Mar 30, 2005 at 03:51:03PM +0000, Jp Calderone wrote:
> [...]
> > 
> >   I started on a bunch of threadless fixes.  Now that 2.0 is out the door
> >   it might be time to pull them back into trunk.  The code is in
> >   /branches/exarkun/threadless/ if anyone wants to look/contribute.
> 
> Would this benefit from using the dummy_thread/dummy_threading modules from
> Python 2.4?
> 
> -Andrew.
> 

  I don't think I understand the point of those modules.  As far as I can tell they are almost never useful.  For Twisted's main use (deferToThread), they definitely aren't.

  Even so, we still need to support 2.2 for a while.  The branch I referred to mainly just disables functionality until the parts of Twisted that really don't care about threads work again.

  Jp



From radeex at gmail.com  Wed Mar 30 19:38:30 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 31 Mar 2005 10:38:30 +1000
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424B192A.70409@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
Message-ID: <60ed19d405033016382a1c0b83@mail.gmail.com>

On Wed, 30 Mar 2005 13:24:58 -0800, Cory Dodt
<corydodt at twistedmatrix.com> wrote:
> There's nothing wrong with including the .pyc files per se, except they
> increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
> etc.  The reason I tried including them is because it makes the install go
> faster (no .pyc compile step).  If a significant number of people want a
> smaller installer, I'll take them out.
> 
> Thanks for the report, glad to hear everything's working for you.

They also break tracebacks, because PYCs refer to locations of
associated PY files, which is how the traceback renderers look up
lines of code to display in tracebacks.



From dripton at ripton.net  Wed Mar 30 22:23:11 2005
From: dripton at ripton.net (David Ripton)
Date: Wed, 30 Mar 2005 19:23:11 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <60ed19d405033016382a1c0b83@mail.gmail.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<60ed19d405033016382a1c0b83@mail.gmail.com>
Message-ID: <20050331032311.GA23326@vidar.dreamhost.com>

On 2005.03.31 10:38:30 +0000, Christopher Armstrong wrote:
> On Wed, 30 Mar 2005 13:24:58 -0800, Cory Dodt
> <corydodt at twistedmatrix.com> wrote:
> > There's nothing wrong with including the .pyc files per se, except they
> > increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
> > etc.  The reason I tried including them is because it makes the install go
> > faster (no .pyc compile step).  If a significant number of people want a
> > smaller installer, I'll take them out.
> > 
> > Thanks for the report, glad to hear everything's working for you.
> 
> They also break tracebacks, because PYCs refer to locations of
> associated PY files, which is how the traceback renderers look up
> lines of code to display in tracebacks.

They also break across Python versions.

$ python2.4 pysol_23.pyc
RuntimeError: Bad magic number in .pyc file

-- 
David Ripton    dripton at ripton.net



From anderson at pegasus.eti.br  Thu Mar 31 08:16:24 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Thu, 31 Mar 2005 10:16:24 -0300
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <424B15DD.1060806@adelphia.net> (Ken Whitesell's message of
	"Wed, 30 Mar 2005 16:10:53 -0500")
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
	<424B15DD.1060806@adelphia.net>
Message-ID: <877jjonefr.fsf@gandalf.pegasus.eti.br>

Ken Whitesell <kwhitesell at adelphia.net> writes:

> 1) The docs I'd like to see would be of a more tutorial nature - it
>    would seem to me that they would be the easiest way to reach a
>    "lights on" stage. The sample code is good - and the finger
>    tutorial is fine (for what it addresses) - but there are still lots
>    of bits & pieces that seem to be hidden.

I agree with you. Twisted may be easy for who know python very well and
can dig through pydoc, epydoc and so on. It's a pain for beginners. If
Twisted had a good documentation, tutorial, howtos, it would gain lots of
new users and developers. I am trying to write some tutorials by myself
and helping some friends who is trying to learn Twisted and
Twisted.web. This tutorial is on early stage, if someone else is doing
the same, I think we could join efforts and make a good tutorial and
also explore these pieces that seem to be hidden. 



From ken at kenkinder.com  Thu Mar 31 10:50:16 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 31 Mar 2005 09:50:16 -0600
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <877jjonefr.fsf@gandalf.pegasus.eti.br>
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>	<424B15DD.1060806@adelphia.net>
	<877jjonefr.fsf@gandalf.pegasus.eti.br>
Message-ID: <424C1C38.1080809@kenkinder.com>

Christiano Anderson wrote:

>I agree with you. Twisted may be easy for who know python very well and
>can dig through pydoc, epydoc and so on. It's a pain for beginners. If
>Twisted had a good documentation, tutorial, howtos, it would gain lots of
>new users and developers. I am trying to write some tutorials by myself
>and helping some friends who is trying to learn Twisted and
>Twisted.web. This tutorial is on early stage, if someone else is doing
>the same, I think we could join efforts and make a good tutorial and
>also explore these pieces that seem to be hidden. 
>  
>
The split of Twisted into separate projects is definitely progress in 
this direction, because tutorials for each project could be worked out 
on their own. When I first got into Twisted about a year and a half ago, 
I had relatively little trouble learning how to use the basics of 
Twisted, but figuring out how to use each component was (and is) 
intimidating. Developing a web page in Twisted and writing a chat 
server, for example, have radically different learning paths to follow.

You mentioned you're teaching someone Twisted Web -- is that just the 
twisted.web/old-woven stuff or are you taking on nevow?



From anderson at pegasus.eti.br  Thu Mar 31 11:32:08 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Thu, 31 Mar 2005 13:32:08 -0300
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <424C1C38.1080809@kenkinder.com> (Ken Kinder's message of "Thu,
	31 Mar 2005 09:50:16 -0600")
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
	<424B15DD.1060806@adelphia.net>
	<877jjonefr.fsf@gandalf.pegasus.eti.br>
	<424C1C38.1080809@kenkinder.com>
Message-ID: <87hdirn5dj.fsf@gandalf.pegasus.eti.br>

Ken Kinder <ken at kenkinder.com> writes:

> The split of Twisted into separate projects is definitely progress in
> this direction, because tutorials for each project could be worked out
> on their own. When I first got into Twisted about a year and a half
> ago, I had relatively little trouble learning how to use the basics of
> Twisted, but figuring out how to use each component was (and is)
> intimidating. Developing a web page in Twisted and writing a chat
> server, for example, have radically different learning paths to
> follow.

I had the same trouble when I first tried Twisted too.  :)


> You mentioned you're teaching someone Twisted Web -- is that just the
> twisted.web/old-woven stuff or are you taking on nevow?

I am using Nevow and trying to build some projects under it. My goal is
to create a complete webmail, based on Cyrus IMAP and its features
(Sieve, Shared Folders, etc). The frontend must be easy to customize for
each customer and I think nevow is the right templating system for
that. I tried Quotient, it is excellent, but it is not the right system
for my needs. 




From corydodt at twistedmatrix.com  Thu Mar 31 11:49:44 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 08:49:44 -0800
Subject: [Twisted-Python] RC2's of Win32 installers for 2.0.0
In-Reply-To: <424B192A.70409@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
Message-ID: <424C2A28.7000802@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

RC2's are out.  No pyc, lots of replacing SVN-Trunk with 2.0.0.

Get them while they're hot at
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.3.exe

C



Cory Dodt wrote:
| There's nothing wrong with including the .pyc files per se, except they
| increase the footprint a fair amount.  pyc is cross-platform,
| cross-machine,
| etc.  The reason I tried including them is because it makes the install go
| faster (no .pyc compile step).  If a significant number of people want a
| smaller installer, I'll take them out.
|
| Thanks for the report, glad to hear everything's working for you.
|
| C
|
|
|
| Mike Taylor wrote:
| | I just tried the python 2.4 installer and everything seemed to work
| | fine - am running trial now to make sure.
| |
| | One question I had, you are including the .pyc files it looks like.  I
| | had always thought that wasn't a good thing to do - just curious.
| |
| | During the un-install it seems that the site-packages\twisted\test
| | directory remained - I'm going to test on a completely clean setup
| | later to verify that it wasn't something I had left behind.
| |
| | thanks,
| |
| | ---
| | Bear
| | http://code-bear.com
| |
| | Open Source Applications Foundation (OSAF)
| | http://www.osafoundation.org
| |
| | PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
| |
| |
| | On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
| |
| | These are to be considered "release candidates".  Testing is required  to
| | determine if the installers are good enough to be considered final.
| | So please
| | try them and report problems. :-)
| |
| | This is based on the 2.0.0 final release of Twisted, so the RC
| | designation
| | only applies to the installers themselves.
| |
| | Now available at
| | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | rc1)-py2.3.exe
| | and
| | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | rc1)-py2.4.exe
| |
| |>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTCoo3A5SrXAiHQcRAiN2AJkB1F5vwysDTEkty3AkDJF34za8WACfRu3z
P7pA+/zTkSs6xM0Ogp6f0U8=
=XSz+
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Thu Mar 31 11:51:07 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 08:51:07 -0800
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
In-Reply-To: <424C2A28.7000802@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com>
Message-ID: <424C2A7B.3050307@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Urgh, here's the correct URLs:
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc2%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc2%29-py2.3.exe

C


Cory Dodt wrote:
| RC2's are out.  No pyc, lots of replacing SVN-Trunk with 2.0.0.
|
| Get them while they're hot at
|
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.4.exe

|
|
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.3.exe

|
|
| C
|
|
|
| Cory Dodt wrote:
| | There's nothing wrong with including the .pyc files per se, except they
| | increase the footprint a fair amount.  pyc is cross-platform,
| | cross-machine,
| | etc.  The reason I tried including them is because it makes the
| install go
| | faster (no .pyc compile step).  If a significant number of people want a
| | smaller installer, I'll take them out.
| |
| | Thanks for the report, glad to hear everything's working for you.
| |
| | C
| |
| |
| |
| | Mike Taylor wrote:
| | | I just tried the python 2.4 installer and everything seemed to work
| | | fine - am running trial now to make sure.
| | |
| | | One question I had, you are including the .pyc files it looks like.  I
| | | had always thought that wasn't a good thing to do - just curious.
| | |
| | | During the un-install it seems that the site-packages\twisted\test
| | | directory remained - I'm going to test on a completely clean setup
| | | later to verify that it wasn't something I had left behind.
| | |
| | | thanks,
| | |
| | | ---
| | | Bear
| | | http://code-bear.com
| | |
| | | Open Source Applications Foundation (OSAF)
| | | http://www.osafoundation.org
| | |
| | | PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
| | |
| | |
| | | On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
| | |
| | | These are to be considered "release candidates".  Testing is
| required  to
| | | determine if the installers are good enough to be considered final.
| | | So please
| | | try them and report problems. :-)
| | |
| | | This is based on the 2.0.0 final release of Twisted, so the RC
| | | designation
| | | only applies to the installers themselves.
| | |
| | | Now available at
| | | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | | rc1)-py2.3.exe
| | | and
| | | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | | rc1)-py2.4.exe
| | |
| | |>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTCp73A5SrXAiHQcRAhylAJ99lLClly+peM+MVvg67LOyz6lsYgCfTNDr
V+NvS1zzIc9C+t3R5VpPDEY=
=fqR7
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Thu Mar 31 12:37:30 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 09:37:30 -0800
Subject: [Twisted-Python] Creating an NT Service for a twistd script
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>
Message-ID: <424C355A.8030703@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Grant,

Been on vacation so I'm still catching up, sorry for the slow reply.  This
sounds like an unpatched py2exe.  Did you look at the README.txt in my
sandbox? There's a patch in there you need.  TH has already applied it to
py2exe's development codeline but there hasn't been a release yet.

C


Grant McDonald wrote:
| Hi All,
|
| I am receiving the following error when i run the <filename>ctl.exe
| generated with moonfallen's ntsvc module and py2exe:
|
| Traceback (most recent call last):
|   File "boot_service.py", line 21, in ?
| RuntimeError: No service classes found
|
| Can someone please point me in the right direction??
|
| Grant
|
|
|
| Important notice: This message is intended for the individual(s) and
| entity(s) addressed. The information contained in this transmission and
| any attached, may be confidential and may also be the subject of legal
| privilege, public interest immunity or legal professional privilege. Any
| review, retransmission, dissemination or other use of, taking of any
| action in reliance upon this information by person or entities other
| than the recipient is prohibited and requires authorization from the
| sender. If you are not the addressee indicated in this message (or
| responsible for delivery of the message to such person) you may not copy
| or deliver this message to anyone. In such cases you should destroy this
| message and kindly notify the sender by reply email.
|
| WARNING: Although Infocomp has taken reasonable precautions so that no
| viruses are present in this e-mail, the company cannot accept
| responsibility for any loss or damage arising from the use of e-mail
| attachments.
|
|
| ------------------------------------------------------------------------
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTDVa3A5SrXAiHQcRAs+6AKCmzny+kBHSSiEvowN7urQQvJyWIQCghaNu
At/NvfkCQXkiTT+kKkAGxOE=
=2uwz
-----END PGP SIGNATURE-----



From pf_moore at yahoo.co.uk  Thu Mar 31 14:51:59 2005
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu, 31 Mar 2005 20:51:59 +0100
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com>
Message-ID: <ufyybvbj4.fsf@yahoo.co.uk>

Cory Dodt <corydodt at twistedmatrix.com> writes:

> RC2's are out. No pyc, lots of replacing SVN-Trunk with 2.0.0.

Excuse the dumb question from someone who hasn't followed the split
very closely, but is this just twisted core or is it the sumo pachage?
The package seems to include twisted.web, but not (for example)
twisted.news. So I'm confused...

(If it's only core, what's the expectation on Windows binaries for
the other components?)

Paul.
-- 
Power corrupts. Absolute power is kind of neat. -- John Lehman




From jim.mccoy at gmail.com  Thu Mar 31 17:01:09 2005
From: jim.mccoy at gmail.com (Jim McCoy)
Date: Thu, 31 Mar 2005 14:01:09 -0800
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
In-Reply-To: <ufyybvbj4.fsf@yahoo.co.uk>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com> <ufyybvbj4.fsf@yahoo.co.uk>
Message-ID: <f01e368805033114013c5111ad@mail.gmail.com>

Not only that, it seems that at least rc2 neglects to include the zope
interface.

On Thu, 31 Mar 2005 20:51:59 +0100, Paul Moore <pf_moore at yahoo.co.uk> wrote:
> Cory Dodt <corydodt at twistedmatrix.com> writes:
> 
> > RC2's are out. No pyc, lots of replacing SVN-Trunk with 2.0.0.
> 
> Excuse the dumb question from someone who hasn't followed the split
> very closely, but is this just twisted core or is it the sumo pachage?
[...]



From howe.steven at gmail.com  Thu Mar 31 19:26:59 2005
From: howe.steven at gmail.com (steven howe)
Date: Thu, 31 Mar 2005 16:26:59 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <7a59f0250503252357594dd5de@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
	<7a59f0250503252357594dd5de@mail.gmail.com>
Message-ID: <90151e5050331162679d3c7b@mail.gmail.com>

Looks like a winner. Thank you very much.

Steven

On Fri, 25 Mar 2005 23:57:07 -0800, Dave Cook <daverz at gmail.com> wrote:
> Using Ken's first example, here's what I came up with:
> 
> import os
> import stat
> from twisted.internet import reactor
> 
> class FileWatcher:
> 
>     def __init__(self, period, filename):
>         self.period = period
>         self.filename = filename
>         self.callbacks = []
>         self.mtime = os.stat(filename)[stat.ST_MTIME]
>         reactor.callWhenRunning(self.checkFile)
> 
>     def addCallback(self, callback):
>         self.callbacks.append(callback)
> 
>     def removeCallback(self, callback):
>         self.callbacks.remove(callback)
> 
>     def checkFile(self):
>         mtime = os.stat(self.filename)[stat.ST_MTIME]
>         if mtime > self.mtime:
>             self.mtime = mtime
>             for callback in self.callbacks:
>                 callback(self.filename, mtime)
>         reactor.callLater(self.period, self.checkFile)
> 
> if __name__=='__main__':
> 
>     import time
> 
>     def changed(filename, mtime):
>         print "%s modified at %s." % (filename, time.ctime(mtime))
> 
>     open('/tmp/foo', "w").close()
>     FileWatcher(0.1, '/tmp/foo').addCallback(changed)
>     reactor.run()
> 
> Run it in one terminal window, and in the other run
> 
>   touch /tmp/foo
> 
> to see what happens.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radeex at gmail.com  Thu Mar 31 23:09:43 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 1 Apr 2005 14:09:43 +1000
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
Message-ID: <60ed19d405033120093e2f8a39@mail.gmail.com>

Hi Twisted,

One of the key problems that trial solves is the traversal of Python
modules and files, which is duplicated in at least two places in
Twisted: Twisted Conch's SFTP, Twisted Core's FTP, and Twisted Web's
Resource model.

Creating a unified resource hierarchy in Twisted has long been a goal
of the Twisted team, and every attempt has been mostly a failure. At
the Australian Twisted Sprint, we've recently come to the realization
that trial effectively already does this! So today we're starting to
implement a new VFS system that unifies all of these systems into a
single twisted.vfs module. This will enable things such as more secure
remote file system access, a better internal design of Trial, and
remote access to your unit tests.

Some other things we plan to do:
 * 3d visualisation of any vfs implementation.
 * Run trial on any VFS implementation. Just have it serve Python code!
 * Any VFS-using protocol should be able to access your unit tests and
run them.
  Just hit http://localhost/twisted/trial/test and it'll recursively
run all the tests in twisted.trial.test.
 * Integration with Imagination.

We'll be making heavy use of Facets in these new features.

Keep your eyes peeled for code arriving in Twisted trunk in the next few days.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From slyphon at twistedmatrix.com  Thu Mar 31 23:26:22 2005
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Thu, 31 Mar 2005 23:26:22 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <60ed19d405033120093e2f8a39@mail.gmail.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
Message-ID: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Mar 31, 2005, at 11:09 PM, Christopher Armstrong wrote:

> Hi Twisted,
>
> One of the key problems that trial solves is the traversal of Python
> modules and files,

wow...i did that? :-)

> Creating a unified resource hierarchy in Twisted has long been a goal
> of the Twisted team, and every attempt has been mostly a failure. At
> the Australian Twisted Sprint, we've recently come to the realization
> that trial effectively already does this!

yay! i am genus!

>  So today we're starting to
> implement a new VFS system that unifies all of these systems into a
> single twisted.vfs module. This will enable things such as more secure
> remote file system access, a better internal design of Trial, and
> remote access to your unit tests.
>

I have to say that when i first read the subject of this message i 
thought, "WTF? I just got done writing 2.0! They want to replace it 
*already*?!"

It's a nice feeling to know you did something right. :-)

If you guys need help, or need me to translate something fairly stinky 
in there, please CC me on any t-ml message, as I don't read the list as 
much as I used to.

Best of luck!
- -Jonathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (Darwin)

iD8DBQFCTM1uFARZQEMGIlgRAhaWAJ4lrZuLOeHJn0pyBGp1RtKEjSxvHgCfbpvH
VISq4pbmbcl7ClCtqOAb90c=
=y2Wp
-----END PGP SIGNATURE-----




From golux at comcast.net  Thu Mar 31 23:33:14 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 31 Mar 2005 23:33:14 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
	<27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
Message-ID: <424CCF0A.70103@comcast.net>

Jonathan Simms wrote:
> yay! i am genus!

... well we always suspected you were at *least* a *species*!  ;)



From jeff at jamcupboard.co.uk  Tue Mar  1 10:48:58 2005
From: jeff at jamcupboard.co.uk (Jeff Silver)
Date: Tue, 1 Mar 2005 17:48:58 +0000
Subject: [Twisted-Python] Re: Patch to support DNS updates
In-Reply-To: <E1D5yF6-0004IU-03@pyramid.twistedmatrix.com>
Message-ID: <H0000065000016a2.1109698830.moses@MHS>

> Size of python data types is pretty irrelevant when DNS SOA serial
> number is an unsigned 32-bit number. January 1st, 2043 would be
> 
> 4301010000
> YYMMDDHHMM
> 
> which is > 2**32, and thus invalid.

Ahhh! I see. Thanks. I'll do something different.

> This is all pretty academical, of course. It's just that you've created
> a totally new _class_ of y2k-like bugs, with your
> YYYYMMDDHHMM - 200000000000 scheme, and I think that's worth some kind
> of a prize.

How kind! Maybe that balances out the one real y2k bug I fixed in 1999.
I'm still looking forward to the year 2008 bug that no-one seems to be worried
about (2-digit year read by a program/language that treats leading zero as an
octal indicator - and yes, I have seen an example).

Thanks again for your comments.




From TheBadBob at gmail.com  Wed Mar  2 07:58:32 2005
From: TheBadBob at gmail.com (Bad_Bob)
Date: Wed, 02 Mar 2005 14:58:32 +0000
Subject: [Twisted-Python] Need SSH help
Message-ID: <200503021458.32250.TheBadBob@gmail.com>

I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).

I am trying to understand twisted's ssh.  Thanks to the helpful people on 
#twisted I have am able to get the twisted client to send messages to the 
twisted server.  This works when I use the keys provided in the example.  
However when I try to generate my own keys it always complains that they are 
not password.

This is the code I am using to generate public/private key pairs:

twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename': 
os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)

This is the error I get:

2005/03/02 14:37 UTC [-] Log opened.
2005/03/02 14:37 UTC [-] Traceback (most recent call last):
2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in 
ExampleFactory
2005/03/02 14:37 UTC [-]    privateKeys = {
2005/03/02 14:37 UTC [-]  File 
"/usr/lib/python2.3/site-packages/twisted/conch/ssh/keys.py", line 180, in 
getPrivateKeyObject
2005/03/02 14:37 UTC [-]    return getPrivateKeyObject_openssh(data, 
passphrase)
2005/03/02 14:37 UTC [-]  File 
"/usr/lib/python2.3/site-packages/twisted/conch/ssh/keys.py", line 207, in 
getPrivateKeyObject_openssh
2005/03/02 14:37 UTC [-]    raise BadKeyError, 'encrypted key with no 
passphrase'
2005/03/02 14:37 UTC [-] twisted.conch.ssh.keys.BadKeyError: encrypted key 
with no passphrase

Is there another way I should generate the keys?

Thanks



From z3p at twistedmatrix.com  Wed Mar  2 14:00:32 2005
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 02 Mar 2005 16:00:32 -0500
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <200503021458.32250.TheBadBob@gmail.com>
References: <200503021458.32250.TheBadBob@gmail.com>
Message-ID: <1109797232.19830.2.camel@petra>

On Wed, 2005-03-02 at 14:58 +0000, Bad_Bob wrote:
>I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).
>
>I am trying to understand twisted's ssh.  Thanks to the helpful people on 
>#twisted I have am able to get the twisted client to send messages to the 
>twisted server.  This works when I use the keys provided in the example.  
>However when I try to generate my own keys it always complains that they are 
>not password.
>
>This is the code I am using to generate public/private key pairs:
>
>twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename': 
>os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)
>
>This is the error I get:
>
>2005/03/02 14:37 UTC [-] Log opened.
>2005/03/02 14:37 UTC [-] Traceback (most recent call last):
>2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
>2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
>2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in 
>ExampleFactory
>2005/03/02 14:37 UTC [-]    privateKeys = {

The problem is on the next line:
        'ssh-rsa': keys.getPrivateKeyObject(data=privateKey)

That means that getPrivateKeyObject doesn't expect the key to be
encrypted.  If it is, you need to also pass in the passphrase kwarg with
the passphrase.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/  _o)
//\    z3p at twistedmatrix.com        /\\
V_/_   AIM: z3penguin              _\_V->
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050302/7c669cf2/attachment.sig>

From TheBadBob at gmail.com  Wed Mar  2 09:21:44 2005
From: TheBadBob at gmail.com (Bad_Bob)
Date: Wed, 02 Mar 2005 16:21:44 +0000
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <1109797232.19830.2.camel@petra>
References: <200503021458.32250.TheBadBob@gmail.com>
	<1109797232.19830.2.camel@petra>
Message-ID: <200503021621.44831.TheBadBob@gmail.com>

Thanks, that worked!

One more question: 
How do I authenticate with public keys?

What I am trying to get this to do it to authenticate based on the public key, 
not based on the password.  The program will have a list of trusted public 
keys, and only allow those to connect.  They could use a password, but if 
they have the wrong public key, I don't want them to connect.

Thanks,
Bob

Am Mittwoch, 2. März 2005 21:00 schrieb Paul Swartz:
> On Wed, 2005-03-02 at 14:58 +0000, Bad_Bob wrote:
> >I am trying to write an encrypted P2P program (cryptic6.sourceforge.net).
> >
> >I am trying to understand twisted's ssh.  Thanks to the helpful people on
> >#twisted I have am able to get the twisted client to send messages to the
> >twisted server.  This works when I use the keys provided in the example.
> >However when I try to generate my own keys it always complains that they
> > are not password.
> >
> >This is the code I am using to generate public/private key pairs:
> >
> >twisted.scripts.ckeygen.generateRSAkey({'bits':1048,'filename':
> >os.path.join(os.path.expanduser('~'),'.cryptic6/keys'),'pass':pass)
> >
> >This is the error I get:
> >
> >2005/03/02 14:37 UTC [-] Log opened.
> >2005/03/02 14:37 UTC [-] Traceback (most recent call last):
> >2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 97, in ?
> >2005/03/02 14:37 UTC [-]    class ExampleFactory(factory.SSHFactory):
> >2005/03/02 14:37 UTC [-]  File "sshsimpleserver.py", line 101, in
> >ExampleFactory
> >2005/03/02 14:37 UTC [-]    privateKeys = {
>
> The problem is on the next line:
>         'ssh-rsa': keys.getPrivateKeyObject(data=privateKey)
>
> That means that getPrivateKeyObject doesn't expect the key to be
> encrypted.  If it is, you need to also pass in the passphrase kwarg with
> the passphrase.
>
> -p



From z3p at twistedmatrix.com  Wed Mar  2 14:46:57 2005
From: z3p at twistedmatrix.com (Paul Swartz)
Date: Wed, 02 Mar 2005 16:46:57 -0500
Subject: [Twisted-Python] Need SSH help
In-Reply-To: <200503021621.44831.TheBadBob@gmail.com>
References: <200503021458.32250.TheBadBob@gmail.com>
	<1109797232.19830.2.camel@petra>
	<200503021621.44831.TheBadBob@gmail.com>
Message-ID: <1109800017.19830.9.camel@petra>

On Wed, 2005-03-02 at 16:21 +0000, Bad_Bob wrote:
>Thanks, that worked!
>
>One more question: 
>How do I authenticate with public keys?

I assume you mean authenticate the client to the server using public
keys?
You need to set up a CredentialChecker that checks ISSHPublicKey.  Take
a look at t.c.checkers.SSHPublicKeyDatabase.  If you're not familiar
with how Cred works, you should also look at the Cred HOWTO.

-p
-- 
       Paul Swartz
(o_    http://z3p.livejournal.com/  _o)
//\    z3p at twistedmatrix.com        /\\
V_/_   AIM: z3penguin              _\_V->
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050302/417b613d/attachment.sig>

From leszczynscy at yahoo.com  Wed Mar  2 18:39:00 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Wed, 02 Mar 2005 19:39:00 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events loop
Message-ID: <42266AB4.1020104@yahoo.com>

Python 2.3, one of the latest Twisted version:

I noted that under Linux there is not way to Control-C the reactor loop. 
After digging a little I found that following change helps:

[root at d1501-0a10109c internet]# diff base.py{,.ori}
 >
302d301
<       print "1",sysEvtTriggers
305d303
<       print "2",`self._eventTriggers`
307,308c305
<         for callable, args, kw in sysEvtTriggers[1]:
<           print "3"
---
 >
 >         for callable, args, kw in sysEvtTriggers[0]:
317d313
<           print "4"
320d315
<           print "5",`eventType`


Of course it is quick work around, not a permanent fix, but it really helps.


Please advice, Andy



From anthony at interlink.com.au  Thu Mar  3 08:05:03 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Fri, 4 Mar 2005 02:05:03 +1100
Subject: [Twisted-Python] anyone interested in helping work on a UPnP server?
Message-ID: <200503040205.05770.anthony@interlink.com.au>

Hey there,

I want to look at extending shtoom's UPnP support to create a UPnP server for
Linux &c. I can do the work for the UPnP side, but I'm not particularly clear 
on the commands needed to insert the relevant ipchains or whatever rules.
If you're up on this stuff, and want to help out, drop me an email.

Thanks,
Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From andrea at cpushare.com  Thu Mar  3 09:14:52 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 3 Mar 2005 17:14:52 +0100
Subject: [Twisted-Python] streaming producer
Message-ID: <20050303161452.GL8880@opteron.random>

Could somebody explain the semantics of the streaming parameter to
registerProducer? I believe I have to set it to 1.

I need to stop data coming from a process protocol, and to do so I need
to register a producer somehow. I need to stop the process protocol when
the TCP transport buffer (or the sendstring buffer or both? I'm using
int32protocol) grows too much (let's say 10mbytes, I like to allow huge
buffering, but at the same time I can't avoid the producer or people
could trigger oom conditions trivially). I don't understand exactly how
I have to setup the thing. I've two protocols, one is the tcp protocol,
the other is the process protocol.

I will probably make the max buffer size configurable dynamically and
accounted in the ram_mbytes selection as well.

It seems twcgi has the very same issue, so I'm taking ideas from there ;).

Thanks!



From gmcdonald at infocomp.com  Thu Mar  3 15:19:40 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Fri, 4 Mar 2005 09:19:40 +1100 
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and the GIL
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CBD@XCHANGE>

Hi everyone,

I have a threading question regarding Twisted and the explanation is a bit
long-winded but please bear with me.

The scenario:

I have created an automated build system in Python for PowerBuilder (awful
language) that allows a scheduler to assign build jobs to dispatcher
programs across a network.  These dispatchers have a GUI component coded in
wxPython.  The initial implementation involved also creating a separate
builder program that was spawned by the dispatchers when a build job was
received.  The builder code called an extension module to interface with the
low-level PowerBuilder compiler library.  This was done due to the fact the
calls to rebuild the application and deploy it are exceptionally
CPU-intensive and don't return for many minutes (approx. 30 or so for a
large application) and all attempts to include this in the dispatcher
resulted in the user interface freezing.

Recently I came across twisted documentation with regards to programming
using twisted threads.  As an experiment on this concept I amalgamated the
dispatcher and 
builder programs and called the builder code using the following:

d = threads.deferToThread(self.builder.newbuild(buildJob))
d.addCallback(self.builderFinished)

It should be noted that the extension module (a pyrex extension I have
created myself) implements the releasing and re-acquiring of the Global
Interpreter Lock for all blocking calls.  From my understanding this should
work but the user interface freezes.  Can someone please point me in the
direction of a solution?

Thanks,

Grant McDonald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050304/58583981/attachment.html>

From gmcdonald at infocomp.com  Thu Mar  3 15:41:35 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Fri, 4 Mar 2005 09:41:35 +1100 
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and th
	e GIL
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CBE@XCHANGE>

I just realised after re-reading my post that the call to deferToThread
should have been:
 
d = threads.deferToThread(self.builder.newbuild, buildJob)
d.addCallback(self.builderFinished)

How silly of me, i'll test it now and see if there are still problems!

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Grant McDonald
Sent: 04 March 2005 09:20
To: twisted-python at twistedmatrix.com
Subject: [Twisted-Python] Twisted, Threading, Extension Modules and the GIL



Hi everyone, 

I have a threading question regarding Twisted and the explanation is a bit
long-winded but please bear with me. 

The scenario: 

I have created an automated build system in Python for PowerBuilder (awful
language) that allows a scheduler to assign build jobs to dispatcher
programs across a network.  These dispatchers have a GUI component coded in
wxPython.  The initial implementation involved also creating a separate
builder program that was spawned by the dispatchers when a build job was
received.  The builder code called an extension module to interface with the
low-level PowerBuilder compiler library.  This was done due to the fact the
calls to rebuild the application and deploy it are exceptionally
CPU-intensive and don't return for many minutes (approx. 30 or so for a
large application) and all attempts to include this in the dispatcher
resulted in the user interface freezing.

Recently I came across twisted documentation with regards to programming
using twisted threads.  As an experiment on this concept I amalgamated the
dispatcher and 

builder programs and called the builder code using the following: 

d = threads.deferToThread(self.builder.newbuild(buildJob)) 
d.addCallback(self.builderFinished) 

It should be noted that the extension module (a pyrex extension I have
created myself) implements the releasing and re-acquiring of the Global
Interpreter Lock for all blocking calls.  From my understanding this should
work but the user interface freezes.  Can someone please point me in the
direction of a solution?

Thanks, 

Grant McDonald 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050304/04d6379e/attachment.html>

From leszczynscy at yahoo.com  Fri Mar  4 06:38:05 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Fri, 04 Mar 2005 07:38:05 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
References: <42266AB4.1020104@yahoo.com>
Message-ID: <422864BD.5000802@yahoo.com>

Andrzej Leszczynski wrote:
> Python 2.3, one of the latest Twisted version:

Is this list alive. If no, what is the place I might ask for a help. I 
am quite new to the Python (but no to the development), so sorry for 
asking such a question.

Also I used ACE before, and find Twisted very similar in many regards. 
What if I would like to contribute to the Twisted project?

Thx, A.



From solipsis at pitrou.net  Fri Mar  4 07:03:13 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Fri, 04 Mar 2005 15:03:13 +0100
Subject: [Twisted-Python] potential bug in the reactor's handling
	events loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
References: <42266AB4.1020104@yahoo.com>
Message-ID: <1109944993.2750.1.camel@p-dhcp-333-72.rd.francetelecom.fr>

Le mercredi 02 mars 2005 à 19:39 -0600, Andrzej Leszczynski a écrit :
> Python 2.3, one of the latest Twisted version:
> 
> I noted that under Linux there is not way to Control-C the reactor loop. 

Here it works. (Mandrake Cooker packages)
Maybe you should try to upgrade to the latest packages, and then see if
it still happens.






From exarkun at divmod.com  Fri Mar  4 09:29:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 04 Mar 2005 16:29:20 GMT
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <42266AB4.1020104@yahoo.com>
Message-ID: <20050304162920.2951.667830422.divmod.quotient.16345@ohm>



On Wed, 02 Mar 2005 19:39:00 -0600, Andrzej Leszczynski <leszczynscy at yahoo.com> wrote:
>Python 2.3, one of the latest Twisted version:
> 
> I noted that under Linux there is not way to Control-C the reactor loop. 
> After digging a little I found that following change helps:
> 
> [root at d1501-0a10109c internet]# diff base.py{,.ori}
>  >
> 302d301
> <       print "1",sysEvtTriggers
> 305d303
> <       print "2",`self._eventTriggers`
> 307,308c305
> <         for callable, args, kw in sysEvtTriggers[1]:
> <           print "3"
> ---
>  >
>  >         for callable, args, kw in sysEvtTriggers[0]:
> 317d313
> <           print "4"
> 320d315
> <           print "5",`eventType`
> 
> 
> Of course it is quick work around, not a permanent fix, but it really helps.
> 

  The change is completely broken, unfortunately :)  It executes the "during" triggers in the "before" phase, and entirely skips the "before" triggers.

  I'll hazard a guess that you're trying to run and stop the reactor twice, and that it only fails on the second attempt.  This behavior isn't supported (reactor.run() can only be called once in a process's lifetime).  

  If this isn't the case, could you include a minimal (but complete and self-contained) example which reproduces the undesirable behavior?

  Jp



From mustafa at liqia.com  Fri Mar  4 09:40:36 2005
From: mustafa at liqia.com (Mustafa Sakalsiz)
Date: Fri, 04 Mar 2005 18:40:36 +0200
Subject: [Twisted-Python] PB Error (printing exceptions in deferreds)
Message-ID: <42288F84.709@liqia.com>

Hi all,

I am trying to develop an application with twisted and using Pb. I have 
a trouble that I couldn't fix. I tried googling to find an solution, but 
didn't find an exact answer.

The problem is "I don't want exceptions be printed in server side". The 
solution already exists in Pb, if I raise an exception derived from 
pb.Error in a (view, execute, ...) method. However, if I raise the same 
exception in a deferred or callback function, the exception is printed. 
Here is an example,

server.py : Works as I expect
server2.py : Prints the exceptions, which I don't want
client.py : Catches the exception in both ways

Is there a solution which works in any way to avoid printing for 
specific exceptions.

Best regards,
Musti

============== server.py (works well)============
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor

class MyError(pb.Error):
    pass

class One(pb.Root):
    def remote_broken(self):
        msg = "fall down go boom"
        raise MyError(msg)

def main():
    reactor.listenTCP(8800, pb.PBServerFactory(One()))
    reactor.run()

if __name__ == '__main__':
    main()
=======================================

=========== server2.py (prints exceptions)============
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor
from twisted.internet import defer

class MyError(pb.Error):
    pass

class One(pb.Root):

    def badFoo(self, result):
        msg = "fall down go boom"
        raise MyError(msg)

    def remote_broken(self):
       d = defer.Deferred()
       d.addCallback(self.badFoo)
       d.callback(0)
       return d
   
def main():
    reactor.listenTCP(8800, pb.PBServerFactory(One()))
    reactor.run()

if __name__ == '__main__':
    main()
==========================================

=== client.py (works same for both server and server2)=======
#! /usr/bin/python

from twisted.spread import pb
from twisted.internet import reactor

def main():
    factory = pb.PBClientFactory()
    reactor.connectTCP("localhost", 8800, factory)
    d = factory.getRootObject()
    d.addCallbacks(got_obj)
    reactor.run()

def got_obj(obj):
    # change "broken" into "broken2" to demonstrate an unhandled exception
    d2 = obj.callRemote("broken")
    d2.addCallback(working)
    d2.addErrback(broken)

def working():
    print "erm, it wasn't *supposed* to work.."

def broken(reason):
    print "got remote Exception"
    print " .type =", reason.type
    reactor.stop()

main()
=============================================



From foom at fuhm.net  Fri Mar  4 10:34:28 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Mar 2005 12:34:28 -0500
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <422864BD.5000802@yahoo.com>
References: <42266AB4.1020104@yahoo.com> <422864BD.5000802@yahoo.com>
Message-ID: <3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>

On Mar 4, 2005, at 8:38 AM, Andrzej Leszczynski wrote:
> Andrzej Leszczynski wrote:
>> Python 2.3, one of the latest Twisted version:
>
> Is this list alive. If no, what is the place I might ask for a help. I 
> am quite new to the Python (but no to the development), so sorry for 
> asking such a question.

I ignored your message because 1) The patch is unreadable, and 
backwards (please use unified diff format) 2) at first glance appears 
to just add print statements, and 3) It's not a problem that I've ever 
had.

I suspect other people did the same.

James




From jarrod.roberson at gmail.com  Fri Mar  4 15:31:27 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 4 Mar 2005 17:31:27 -0500
Subject: [Twisted-Python] Anyone have any code or links to code related to
	using ZeroConf / Rendezous with Twisted?
Message-ID: <2389d473050304143116f2f601@mail.gmail.com>

What I have found on google is lots of talk no implemenation, and the
little implementation that is talked about is a dead link :-(

I wanted to make sure I was not re-inventing the wheel before I start
on this myself.



From peterk at bayarea.net  Fri Mar  4 15:51:13 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Fri, 04 Mar 2005 14:51:13 -0800
Subject: [Twisted-Python] Anyone have any code or links to code related
	to	using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <4228E661.5040108@bayarea.net>

I've been looking into this lately, too. What I've found is that
http://sourceforge.net/projects/pyzeroconf is a zeroconf implementation 
in Python that looks to be good. It's not based on twisted but for my 
use, I don't think that matters yet.

- Peter


jarrod roberson wrote:
> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(
> 
> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From screwtape at froup.com  Fri Mar  4 17:19:09 2005
From: screwtape at froup.com (Tim Allen)
Date: Sat, 5 Mar 2005 11:19:09 +1100
Subject: [Twisted-Python] Anyone have any code or links to code related to
	using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <5a7c703b87d5f1453c3e8a70e47fcf41@froup.com>

On 5 Mar 2005, at 09:31, jarrod roberson wrote:
> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(

Yeah, that'd be me. I sort of wrote half an mDNS responder, posted it 
to the list, and got little to no feedback or interest.

I forget where I uploaded it last time, but for now, I've uploaded it 
again:

	http://members.optusnet.com.au/thristian/mDNS-0.5.tar.gz

> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.

The main reason I gave up and moved on was that I didn't have any real 
*need* for a ZeroConf implementation, I just thought it'd be neat to 
write. The second reason I gave up was that apparently only one process 
on a host can bind to a multicast UDP socket at a time, which means 
only one ZeroConf implementation per machine. Since I don't have easy 
access to any Linux boxes at the moment and my main home PC is a Mac 
G5, that makes development rather difficult.

The Right Solution, as far as I can see, would be to take Apple's 
ZeroConf implementation (Available for Linux under the Apple Public 
Source License), give it a pretty Python wrapper, and somehow integrate 
that with Twisted. That gives your application an extra dependency, but 
as ZeroConf gets more popular, your app becomes *less* likely to break, 
instead of *more*.




From foom at fuhm.net  Fri Mar  4 21:16:38 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 4 Mar 2005 23:16:38 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <cb38b16096c892df193ba30d4519862d@fuhm.net>

Bug summary
______________________
Since 2005-02-26 07:36:08.640000:
  Bugs opened: 12   Bugs closed: 17   Total open bugs: 334 (-5)
   Urgent: 7 (+0)
   Bug: 131 (-5)
   Feature: 129 (+1)
   Wish: 67 (-1)

New / Reopened Bugs
______________________
                     ==== Urgent ====
plugins.tml doesn't work with split up packages  (5 days ago)
        http://twistedmatrix.com/bugs/issue906 opened by exarkun

[CORE] [PATCH] pollreactor fails to cleanup client sockets properly  (5 
days ago)
CLOSED http://twistedmatrix.com/bugs/issue907 opened by spiv

                     ==== Bug ====
[PATCH] fix twisted.words.protocols.jabber.jid to add stringprep  (2 
days ago)
        http://twistedmatrix.com/bugs/issue912 opened by ralphm

[PATCH] rename xish.xpath's intern to internQuery  (yesterday)
        http://twistedmatrix.com/bugs/issue913 opened by ralphm

microdom getElementsByTagName  (4 days ago)
        http://twistedmatrix.com/bugs/issue909 opened by int

[TRIAL] Trial --tbformat=emacs now shows plain-style tracebacks  (3 
months ago)
        http://twistedmatrix.com/bugs/issue783 opened by radix

[CORE] [PATCH] make LoopingCall.stop() stop the loop immediately  (3 
days ago)
        http://twistedmatrix.com/bugs/issue911 opened by zooko

MSN File Transfer  (4 days ago)
        http://twistedmatrix.com/bugs/issue908 opened by cphsu

[CONCH] No ProtocolWrapper defined in twisted/conch/ssh/session.py  (5 
days ago)
        http://twistedmatrix.com/bugs/issue905 opened by spiv

[CONCH] _scanDirectory broken  (5 days ago)
        http://twistedmatrix.com/bugs/issue904 opened by spiv

[TRIAL] Control-C in trial sometimes doesn't stop it.  (9 months ago)
        http://twistedmatrix.com/bugs/issue628 opened by jknight

                     ==== Feature ====
[CORE] [PATCH] weak tasks  (3 days ago)
        http://twistedmatrix.com/bugs/issue910 opened by zooko



Bugs Closed
______________________
                     ==== Urgent ====
[CORE] [PATCH] pollreactor fails to cleanup client sockets properly  (5 
days ago)
        http://twistedmatrix.com/bugs/issue907 opened by spiv, closed by 
spiv

[TRIAL] Trial timeout handling is totally broken, won't accept even the 
default value  (1 month ago)
        http://twistedmatrix.com/bugs/issue866 opened by Tv, closed by 
jknight

                     ==== Bug ====
[XISH] twisted.xish.domish.ExpatElementStream tries to pop empty 
namespace stack  (6 months ago)
        http://twistedmatrix.com/bugs/issue673 opened by horatio, closed 
by ralphm

[XISH] [PATCH] xish.domish chokes on namespaced attributes  (12 months 
ago)
        http://twistedmatrix.com/bugs/issue535 opened by ssweens, closed 
by ralphm

[XISH] [PATCH] Jabber xmlstream parse bug (with patch and unit test)  
(6 months ago)
        http://twistedmatrix.com/bugs/issue701 opened by delx, closed by 
spiv

[PB] datetime support in jelly/unjelly  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue894 opened by kkinder, closed 
by glyph

[TRIAL] Intermittent twisted.trial.test.test_util.TestMktemp failure  
(3 months ago)
        http://twistedmatrix.com/bugs/issue799 opened by exarkun, closed 
by exarkun

[CORE, TRIAL] Undesirable ValueError exception masking by namedAny()  
(2 months ago)
        http://twistedmatrix.com/bugs/issue808 opened by exarkun, closed 
by exarkun

testCyclicAliases in t.mail.test_mail is weird  (2 months ago)
        http://twistedmatrix.com/bugs/issue810 opened by marienz, closed 
by exarkun

[WEBSITE] Website still refers to copyright assignment  (1 week ago)
        http://twistedmatrix.com/bugs/issue903 opened by hypatia, closed 
by hypatia

[TRIAL] [not a bug] trial --until-failure does not stop on cleanup 
errors  (1 week ago)
        http://twistedmatrix.com/bugs/issue901 opened by spiv, closed by 
spiv

[NEWS] [PATCH]twisted.protocols.nntp is broken  (19 months ago)
        http://twistedmatrix.com/bugs/issue65 opened by smurf, closed by 
exarkun

[MAIL] [PATCH] twisted.mail.smtp.SMTP fails on whitespace preceeding a 
client command.  (1 month ago)
        http://twistedmatrix.com/bugs/issue865 opened by dw, closed by 
exarkun

[CORE] socket is not closed when connection failed  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue895 opened by maoy, closed by 
exarkun

manhole tests don't deal well with failure and are cwd-sensitive  (1 
month ago)
        http://twistedmatrix.com/bugs/issue878 opened by jknight, closed 
by exarkun

[TRIAL] "trial --until-failure --debug" totally broken  (2 months ago)
        http://twistedmatrix.com/bugs/issue834 opened by exarkun, closed 
by jknight

                     ==== Wish ====
[NAMES] [PATCH] t.names shouldn't depend on t.flow  (1 week ago)
        http://twistedmatrix.com/bugs/issue902 opened by marienz, closed 
by jknight




From nico at tekNico.net  Sat Mar  5 00:52:09 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 05 Mar 2005 08:52:09 +0100
Subject: [Twisted-Python] Re: Anyone have any code or links to code related
 to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d473050304143116f2f601@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
Message-ID: <d0bo5e$an5$1@sea.gmane.org>

> What I have found on google is lots of talk no implemenation, and the
> little implementation that is talked about is a dead link :-(
> 
> I wanted to make sure I was not re-inventing the wheel before I start
> on this myself.

Itamar ST started an implementation of a multicast DNS server in his sandbox:

http://svn.twistedmatrix.com/cvs/sandbox/itamar/mdns/?root=Twisted

-- 
Nicola Larosa - nico at tekNico.net

Q: I understand that when I browse the web my computer caches the
pages, images and stylesheets automatically so I don't need to manually
'install' multiple PNG images to see a page, but software is different!
A: Why?
 -- From the Zero Install FAQ ( http://www.zero-install.org/faq.html )




From jarrod.roberson at gmail.com  Sat Mar  5 12:33:28 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Sat, 5 Mar 2005 14:33:28 -0500
Subject: [Twisted-Python] Re: Anyone have any code or links to code
	related to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <d0bo5e$an5$1@sea.gmane.org>
References: <2389d473050304143116f2f601@mail.gmail.com>
	<d0bo5e$an5$1@sea.gmane.org>
Message-ID: <2389d47305030511336698babc@mail.gmail.com>

thanks for the responses I will post what I come up with back to the list

Here is what I want to do, any feedback (positive and especially
negative ) is welcome.

I want my Twisted server to auto-identify and connect to other
instances on other machines to sync with then for clustering.

I want client processes to auto-idenitfy and connect to my Twisted server.

I was originally thinking of making the ZeroConf server just another
couple of Protocols in the Twisted server, but I am trying to decide
now if embedding ZeroConf into the Twisted server is the right
approach.

I am now thinking that I might should have my servers register
themselves with a standalone ZeroConf  server(s) and de-register them
selves on clean shut down and use a short say 15 min TTL on the DNS
entries.

Any thoughts?



From ken at kenkinder.com  Sat Mar  5 12:57:57 2005
From: ken at kenkinder.com (ken at kenkinder.com)
Date: Sat, 5 Mar 2005 12:57:57 -0700 (MST)
Subject: [Twisted-Python] Re: Anyone have any code or links to code 
	related to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d47305030511336698babc@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>
	<d0bo5e$an5$1@sea.gmane.org>
	<2389d47305030511336698babc@mail.gmail.com>
Message-ID: <1473.64.218.218.1.1110052677.squirrel@64.218.218.1>

Heh. We had a similar need for a clustered system although we forewent
auto-discovery for a config file we can copy to each of the servers with
the information on the other nodes on the cluster. If we add or remove a
node from the cluster, you just propagate the config file.

Is there any reason you need something like ZeroConf or a specialized
protocol for this? Can't you just connect via Perspective Broker and
communicate your basic information that way? I'm asking because at some
point, we'll probably want auto-discovery and I'd like to hear what you're
doing.

> thanks for the responses I will post what I come up with back to the list
>
> Here is what I want to do, any feedback (positive and especially
> negative ) is welcome.
>
> I want my Twisted server to auto-identify and connect to other
> instances on other machines to sync with then for clustering.
>
> I want client processes to auto-idenitfy and connect to my Twisted server.
>
> I was originally thinking of making the ZeroConf server just another
> couple of Protocols in the Twisted server, but I am trying to decide
> now if embedding ZeroConf into the Twisted server is the right
> approach.
>
> I am now thinking that I might should have my servers register
> themselves with a standalone ZeroConf  server(s) and de-register them
> selves on clean shut down and use a short say 15 min TTL on the DNS
> entries.
>
> Any thoughts?
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From golux at comcast.net  Sat Mar  5 13:16:18 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Sat, 05 Mar 2005 15:16:18 -0500
Subject: [Twisted-Python] Re: Anyone have any code or links to code	related
	to using ZeroConf / Rendezous with Twisted?
In-Reply-To: <2389d47305030511336698babc@mail.gmail.com>
References: <2389d473050304143116f2f601@mail.gmail.com>	<d0bo5e$an5$1@sea.gmane.org>
	<2389d47305030511336698babc@mail.gmail.com>
Message-ID: <422A1392.7020105@comcast.net>

jarrod roberson wrote:
> Here is what I want to do, any feedback (positive and especially
> negative ) is welcome.
> 
> I want my Twisted server to auto-identify and connect to other
> instances on other machines to sync with then for clustering.

This is a capability I'm interested in also.

> I was originally thinking of making the ZeroConf server just another
> couple of Protocols in the Twisted server, but I am trying to decide
> now if embedding ZeroConf into the Twisted server is the right
> approach.

Wouldn't it have more the character of a service than a
protocol?  I.e., a service that might have one or more
protocols associated with it, and be configured depending
on the environment and requirements of the application
that wants to use the connection.

ken at kenkinder.com wrote:
> Heh. We had a similar need for a clustered system although we forewent
> auto-discovery for a config file we can copy to each of the servers with
> the information on the other nodes on the cluster. If we add or remove a
> node from the cluster, you just propagate the config file.
> 
> Is there any reason you need something like ZeroConf or a specialized
> protocol for this? Can't you just connect via Perspective Broker and
> communicate your basic information that way? I'm asking because at some
> point, we'll probably want auto-discovery and I'd like to hear what you're
> doing.

Good points.  I guess auto-discovery is the only capability
I need in addition to what's already provided by PB, which
I would expect could manage the configuration of clustering,
etc.  Once autodiscovery was done, the peers could use PB
to work out the configuration details.

Steve



From boomberschloss at yahoo.com  Sun Mar  6 10:48:30 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 6 Mar 2005 09:48:30 -0800 (PST)
Subject: [Twisted-Python] process directory or alike in Twisted?
Message-ID: <20050306174831.93551.qmail@web53105.mail.yahoo.com>

I am thinking about using twisted as the framework of
my distributed application, and I have some questions
about it.

I want the application to be divided into processes,
each dealing with a specific aspect of the
application; some in a central server and some in
arbitrary machines in a local network. I�ll use the
Perspective Broker protocol for communication, but I
want each process to know the addresses of all the
others and be able to communicate with the others
without prior knowledge of their location. How is it
usual to do such a thing? 

I thought of a central server holding the addresses of
processes, such that each process registers its
details at start-up, and gets notified when there are
changes in the list of processes (similarly to the
Pyro name server). To detect the location of the
central server I suppose a broadcast mechanism should
be used, although I don�t know what a broadcast
mechanism is exactly and whether it is supported by
Twisted or not. Is there anything like this already
implemented in Twisted?

Thanks,

Joe.



	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From boomberschloss at yahoo.com  Sun Mar  6 10:49:11 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 6 Mar 2005 09:49:11 -0800 (PST)
Subject: [Twisted-Python] clients of perspective brokers
Message-ID: <20050306174911.69544.qmail@web53106.mail.yahoo.com>

I have a question about clients of perspective
brokers: I want the processes of my application to be
able to connect arbitrarily to other processes in a
local network without assuming their existence or
location in advance. In the Twisted examples and
how-tos, however, the idiom seems to be defining
a-priori the other clients and servers in the network
(usually before calling reactor.run, or as part of an
application�s configuration). My question is, are
there any restrictions on calling reactor.connectTCP
(or similar) arbitrarily during the execution of the
program, is there any cleanup to do when not requiring
the other party anymore, etc.

Also, it is unclear to me how reconnection works for
perspective broker clients. If a connection is dropped
by the server, and then a clients tries to make a
method call on a remote object, will the client
factory try to reconnect before making the request, or
will the request fail, and re-connection be attempted
the next time, etc.?

Thanks,

Joe.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From daverz at gmail.com  Sun Mar  6 18:12:58 2005
From: daverz at gmail.com (Dave Cook)
Date: Sun, 6 Mar 2005 17:12:58 -0800
Subject: [Twisted-Python] clients of perspective brokers
In-Reply-To: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
References: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
Message-ID: <7a59f025050306171278176c64@mail.gmail.com>

On Sun, 6 Mar 2005 09:49:11 -0800 (PST), Joachim Boomberschloss
<boomberschloss at yahoo.com> wrote:

> I have a question about clients of perspective
> brokers: I want the processes of my application to be
> able to connect arbitrarily to other processes in a
> local network without assuming their existence or
> location in advance. 

You might find this thread useful: 

http://twistedmatrix.com/pipermail/twisted-python/2005-February/009579.html

Dave Cook



From Jeff.Silver at edl.uk.eds.com  Mon Mar  7 01:27:56 2005
From: Jeff.Silver at edl.uk.eds.com (Jeff.Silver at edl.uk.eds.com)
Date: Mon, 7 Mar 2005 08:27:56 -0000 
Subject: [Twisted-Python] process directory or alike in Twisted?
Message-ID: <6C5F0F3099DC5B45B87D78EE2A37830D1AC8E4@ukhkm001.edsadewd.edl.uk.eds.com>

> I want the application to be divided into processes,
> each dealing with a specific aspect of the
> application; some in a central server and some in
> arbitrary machines in a local network. I'll use the
> Perspective Broker protocol for communication, but I
> want each process to know the addresses of all the
> others and be able to communicate with the others
> without prior knowledge of their location. How is it
> usual to do such a thing? 

I suggest you look at Zeroconf, and read the current thread:  Anyone have
any code or links to code related to using ZeroConf / Rendezous with
Twisted?

I think that Zeroconf has the sort of capability you're after.

The bad news is that it is not (yet?) in twisted. Hence the thread.

Jeff.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050307/86444ac0/attachment.html>

From twisted at opti.cgi.net  Mon Mar  7 16:58:02 2005
From: twisted at opti.cgi.net (Dan)
Date: Mon, 07 Mar 2005 17:58:02 -0600
Subject: [Twisted-Python] Daemonize
Message-ID: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>


There are lots of nice examples in the Twisted documentation on how to 
write a server but I can't seem to find anywhere that making it daemonize 
is mentioned.  All the examples hold onto the terminal after reactor.run() 
is called.  If I want a Twisted server to return the terminal and run as a 
daemon how would I accomplish that aside from starting it with nohup?

Thanks!

Dan




From mary-twisted at puzzling.org  Mon Mar  7 17:05:52 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Tue, 8 Mar 2005 11:05:52 +1100
Subject: [Twisted-Python] Daemonize
In-Reply-To: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>
References: <6.1.2.0.2.20050307175523.048ccaa8@mail.pyxos.com>
Message-ID: <20050308000552.GA19611@home.puzzling.org>

On Mon, Mar 07, 2005, Dan wrote:
> 
> There are lots of nice examples in the Twisted documentation on how to 
> write a server but I can't seem to find anywhere that making it daemonize 
> is mentioned.  All the examples hold onto the terminal after reactor.run() 
> is called.  If I want a Twisted server to return the terminal and run as a 
> daemon how would I accomplish that aside from starting it with nohup?

You'd write a .tac file and run it with "twistd -y [tac file]".

The documentation is at
http://twistedmatrix.com/documents/current/howto/application but is
terse and desperately short on examples.

Several of the examples use that setup:

http://twistedmatrix.com/documents/current/examples/chatserver.py
http://twistedmatrix.com/documents/current/examples/emailserver.py

At the end of the tutorial intro, the finger code is converted to a tac
file too:
http://twistedmatrix.com/documents/current/howto/tutorial/intro

The crucial step is creating the object called 'application' at the
global level -- this is what twistd seeks.

-Mary



From db3l at fitlinxx.com  Mon Mar  7 17:37:10 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 07 Mar 2005 19:37:10 -0500
Subject: [Twisted-Python] Re: clients of perspective brokers
References: <20050306174911.69544.qmail@web53106.mail.yahoo.com>
Message-ID: <u3bv72csp.fsf@fitlinxx.com>

Joachim Boomberschloss <boomberschloss at yahoo.com> writes:

> Also, it is unclear to me how reconnection works for
> perspective broker clients. If a connection is dropped
> by the server, and then a clients tries to make a
> method call on a remote object, will the client
> factory try to reconnect before making the request, or
> will the request fail, and re-connection be attempted
> the next time, etc.?

There are no automatic reconnects by default.  Additionally once you
have lost a connection, all existing references held by the client to
objects on the server will be invalid from that point on.

There is a general purpose ReconnectingClientFactory in the
twisted.internet.protocols module, but it only handles making the
basic socket reconnection, and not any higher level re-establishment
of protocol communication.  There was also some work on a more
persistent remote reference scheme (in the sturdy module).

The problem with handling reconnects is that PB object references are
only good for a particular session (since they match up with broker
object dictionaries that are part of the remote protocol instance and
go away when the session drops).  So even if you re-establish the raw
PB connection, none of the object references previously held by the
client will be valid any longer.  Even the sturdy module only seemed
to work for the root object and not other random references held by
the application.  Back when I was looking to solve the same issue, I
didn't really find anything suitable in the twisted code base itself.

So it's mostly up to your application to handle these sorts of
scenarios.  To be honest though, since your application knows the most
about how it is using references and objects, it can often have the
simplest implementation.

For example, in our application we make use of a registry of
components, and when distributing the application, the client starts
with a remote registry (a Referenceable), and then retrieves remote
component references (also Referenceables) for any component they
interact with.  Pretty much everything else is a normal remote copy (a
Copyable rather than Referenceable).  So the registry and components
provided a great control point to handle network outages.  Also, the
components whose references are long lived in the client (and who we
care about maintaining across an outage) are independent of the remote
session - that is they exist independently on the server.  So recovery
from loss of a network connection is simply re-accessing the prior
remote component.  That makes handling such outages in a transparent
manner fairly straight forward since we can use the original
connection information to perform a reconnect without re-involving
high level application code.

We ended up with  three main parts to the recovery system:

* A remote registry wrapper that works just like a local registry but
  automatically wraps references to remote components in a component wrapper.
* A remote component wrapper that handles wrapping a remote reference both
  to control method access (so we can specially handle some methods locally)
  but also to isolate the application from directly holding onto a PB
  reference for the remote component object.
* Our own PBClientFactory subclass that handles connectivity issues, and
  automatically wraps a reference to a remote registry (which is obtained
  through our Root object) in the remote registry wrapper.

In addition, we tie them together with various signals (currently
using the pyDispatcher package).

A client app starts with the client factory, which knows how to
connect, reconnect after a failure (with a prescribed retry timing
mechanism), periodically ping the remote root object for a live
session, and emit signals when the connection goes up or down.  The
application asks the client factory for the remote registry, and gets
back a remote registry wrapper.  Since the wrapper operates as a local
registry, the application code can work locally or remotely.  If the
client factory sees the connection drop, once it reconnects, it emits
a connection signal which includes the new registry wrapper.

The client factory also gives us a good place to perform a series of
steps we need to do with the remote root object in order to get access
to the remote registry, providing for those operations to complete
before giving the registry back to the application either during
initial connection (through a waiting deferred) or on a reconnect (via
the connection signal).

The remote component wrappers (which also include the remote registry
wrapper) handle the low level potential for failures.  The wrapper
handles failures during any PB request (both DeadReferenceError and
PBConnectionLost) and in addition to passing up the error, it emits
its own signal for a failed request.  The client factory listens for
such signals, which it uses to initiate an immediate ping test - which
in turn can lead to notifying the entire system that the connection is
down.

We did patch our Twisted so the DeadReferenceError was returned as a
deferred rather than raised inline.  But once everything centralized
around the remote wrappers, technically that became unnecessary
because that's the only place (aside from the client factory) that
issues the callRemote call, so it's not that hard to handle both the
local exception or the deferred error.

In the other direction, the wrappers all listen for the client
factory's connected signal, and upon receipt, they use the supplied
remote registry to re-query the component they wrap (information on
which they saved when created) in order to get a new remote reference.
Because all of the higher level application code is holding a
reference (Python-wise) to the wrapper object and not the PB
reference, we can adjust to a new reference inside the wrapper without
anything in the application being the wiser or needing to change.

Having the network connect/disconnect signals from the client factory
also permits any other part of the application to perform certain
operations during an outage (so sometimes at our top level UI we'll
put up a "temporary outage" message during downtime).

While this is fairly specific to our environment, it lets us take an
application that is running locally, and with a single change to get
its registry from our client factory instead of locally, everything
works remotely, including automatic reconnects and re-establishment of
all remote object references.  Hopefully detailing some of the steps
might help you envision how to do something similar for your
application.

-- David




From qhfgva at gmail.com  Mon Mar  7 22:21:14 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Mon, 7 Mar 2005 22:21:14 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
Message-ID: <b75caff405030721216aebf5a@mail.gmail.com>

So I've made my first twisted application, an xmlrpc server, using
authentication and ssl.  Kinds scary how easy it was actually.  I now
need to add some sort of queuing or scheduling capabilities.  Don't
know if this is something that twisted knows how to do natively or if
it's something I need to grow from scratch.  My googling hasn't turned
up anything that seems to fit.

Basically the idea is that the server will receive a variety of
requests to perform tasks.  Some of these will be very quick to do and
some will take several minutes (perhaps up to an hour).  Some tasks
must run alone and some can run in parallel with others.  Even just a
simple FIFO type queuing would be fine to start.

Any pointers on how to proceed?

Thanks.

-- 
Dustin Lee
qhfgva=rot13(dustin)



From andrew-twisted at puzzling.org  Mon Mar  7 22:59:11 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 16:59:11 +1100
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <b75caff405030721216aebf5a@mail.gmail.com>
References: <b75caff405030721216aebf5a@mail.gmail.com>
Message-ID: <20050308055911.GM7812@trogdor.home.puzzling.org>

On Mon, Mar 07, 2005 at 10:21:14PM -0700, Dustin Lee wrote:
[...]
> 
> Basically the idea is that the server will receive a variety of
> requests to perform tasks.  Some of these will be very quick to do and
> some will take several minutes (perhaps up to an hour).  Some tasks
> must run alone and some can run in parallel with others.  Even just a
> simple FIFO type queuing would be fine to start.
> 
> Any pointers on how to proceed?

The DeferredQueue class in SVN might be a good starting point:

    http://svn.twistedmatrix.com/cvs/trunk/twisted/internet/defer.py?view=auto&rev=12970&root=Twisted

-Andrew.




From michele.petrazzo at unipex.it  Tue Mar  8 02:48:38 2005
From: michele.petrazzo at unipex.it (Michele Petrazzo)
Date: Tue, 08 Mar 2005 10:48:38 +0100
Subject: [Twisted-Python] wxreactor and dialog on win xp problem
Message-ID: <422D74F6.5090005@unipex.it>

I have a problem with wxreactor on win xp.

I insert a ShowModal() of a TextEntryDialog after an event of a button
in a frame.

The ShowModal function of the dialog, don't return me the control after
the dialog has close, but only when the global application has closed.
I try this with a bit of print.

Show the example for tests.

On my linux-box, with the same wxpython and twisted version, all work
well.

python 2.3.4
wx 2.5.3.1
twisted 1.3.0

Thanks,
Michele
-------------- next part --------------
A non-text attachment was scrubbed...
Name: wx_test.py
Type: text/x-python
Size: 1938 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050308/09128227/attachment-0002.py>

From Henning.Ramm at mediapro-gmbh.de  Tue Mar  8 03:27:35 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 8 Mar 2005 11:27:35 +0100
Subject: [Twisted-Python] watch a directory (Win32)
Message-ID: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>

Hello twisted folks!

Last week I found this great framework that seems to do most of what I need. But it's a bit hard to get into, as you know...

I'm on WinXP with Python 2.3. I need to watch a directory for new files and found this recipe using Win32 events:
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/156178

I'd like to use a twisted reactor instead of that while loop, but don't understand how to handle those Win32 notifies using deferreds.

Or perhaps there is a better twisted solution, that I didn't find in the docs?

I'd prefer a portable way (my script could also run on AIX or MacOS X), but as far as I found, it's heavily system dependent (Win32: win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From andrew-twisted at puzzling.org  Tue Mar  8 04:27:04 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 22:27:04 +1100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
Message-ID: <20050308112704.GO7812@trogdor.home.puzzling.org>

On Tue, Mar 08, 2005 at 11:27:35AM +0100, Henning.Ramm at mediapro-gmbh.de wrote:
[...]
> 
> I'd prefer a portable way (my script could also run on AIX or MacOS X),
> but as far as I found, it's heavily system dependent (Win32:
> win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)

I haven't tried using it with Twisted (yet), but something like the python
bindings for gamin would probably be a good start.  It can use the new
inotify stuff in Linux, or do simple polling.
    http://www.gnome.org/~veillard/gamin/index.html

-Andrew.




From andrew-twisted at puzzling.org  Tue Mar  8 04:30:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 8 Mar 2005 22:30:24 +1100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <20050308112704.GO7812@trogdor.home.puzzling.org>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
	<20050308112704.GO7812@trogdor.home.puzzling.org>
Message-ID: <20050308113024.GP7812@trogdor.home.puzzling.org>

On Tue, Mar 08, 2005 at 10:27:04PM +1100, Andrew Bennetts wrote:
> On Tue, Mar 08, 2005 at 11:27:35AM +0100, Henning.Ramm at mediapro-gmbh.de wrote:
> [...]
> > 
> > I'd prefer a portable way (my script could also run on AIX or MacOS X),
> > but as far as I found, it's heavily system dependent (Win32:
> > win32file.FindFirstChangeNotification, BSD/OSX: kqueue?, Linux: dnotify?)
> 
> I haven't tried using it with Twisted (yet), but something like the python
> bindings for gamin would probably be a good start.  It can use the new
> inotify stuff in Linux, or do simple polling.
>     http://www.gnome.org/~veillard/gamin/index.html

...although I suspect it might not work on win32 :/

-Andrew.






From digi at treepy.com  Tue Mar  8 06:18:21 2005
From: digi at treepy.com (Patrick Lauber)
Date: Tue, 08 Mar 2005 14:18:21 +0100
Subject: [Twisted-Python] watch a directory (Win32)
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E63D@exchange-03.suedkurier.de>
Message-ID: <422DA61D.8030303@treepy.com>

just add something like this in your pathwather.py:

def waiting():
  try:
    old_path_contents = os.listdir (path_to_watch)
    result = win32event.WaitForSingleObject (change_handle, 500)

    #
    # If the WaitFor... returned because of a notification (as
    #  opposed to timing out or some error) then look for the
    #  changes in the directory contents.
    #
    if result == win32con.WAIT_OBJECT_0:
      new_path_contents = os.listdir (path_to_watch)
      files_added = [f for f in new_path_contents if not f in 
old_path_contents]
      files_deleted = [f for f in old_path_contents if not f in 
new_path_contents]

      if files_added:
        print
        print time.asctime ()
        print "<Added file=\""+ files_added[0]+"\"/>"
        return "<Added file=\""+ files_added[0]+"\"/>"
      if files_deleted:
        print "<Deleted file=\""+files_deleted[0]+"\"/>"
        return "<Deleted file=\""+files_deleted[0]+"/\">"
       

      win32file.FindNextChangeNotification (change_handle)
  finally:
    pass
    #win32file.FindCloseChangeNotification (change_handle)

and call it with reactor.callLater(0,someFunctionThatCallsWaiting)   
regualary

cheers p@




From Henning.Ramm at mediapro-gmbh.de  Tue Mar  8 06:40:29 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Tue, 8 Mar 2005 14:40:29 +0100
Subject: [Twisted-Python] watch a directory (Win32)
Message-ID: <F92274058556DE42B94B148EEFB9183949E63F@exchange-03.suedkurier.de>

>... and call it with reactor.callLater(0,someFunctionThatCallsWaiting)   
>regularily

Oh, sure, thanks. I just didn't understand how stupid and non-magic these Win32 functions are.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From smilner at trinityz.com  Tue Mar  8 06:42:56 2005
From: smilner at trinityz.com (Steve Milner)
Date: Tue, 08 Mar 2005 08:42:56 -0500
Subject: [Twisted-Python] Help With Twisted as a Client (newbie warning)
In-Reply-To: <1108666158.1129.61.camel@sheriffpony>
References: <4214C58D.6030005@trinityz.com>
	<1108666158.1129.61.camel@sheriffpony>
Message-ID: <422DABE0.4020604@trinityz.com>

Hello List,

I'm still stuck at mainly the same point. I've noticed that inside the 
class itself I can call transport.write and it writes to the server, but 
if I try to access it outside the class (even through a function) it 
gives an attribute error (AttributeError: 'NoneType' object has no 
attribute 'write'). I'm a bit lost. All help is much appreciated.

---
factory = CUClientFactory()

factory.clients = []
sslFactory = ClientContextFactory()
factory.protocol = xmlclient
client = xmlclient()
application = service.Application(client)
reactor.connectSSL("server", 1026, factory, sslFactory)

client.transport.write('ya')

reactor.run()
----

Itamar Shtull-Trauring wrote:

>On Thu, 2005-02-17 at 11:25 -0500, Steve Milner wrote:
>
>  
>
>>factory.clients = []
>>sslFactory = ClientContextFactory()
>>application = service.Application("xmlclient")
>>reactor.connectSSL("__example__.com", 1026, factory, sslFactory)
>></snip>
>>
>>Is there a way I can access xmlxlient inside application?
>>    
>>
>
>The application object is not used for that (and certainly can't be used
>if it doesn't have a reference to the factory, it doesn't magically get
>one). Hand a reference to the factory to whichever objects wishes to
>control the instance
>  
>



From anthony at interlink.com.au  Tue Mar  8 07:29:48 2005
From: anthony at interlink.com.au (Anthony Baxter)
Date: Wed, 9 Mar 2005 01:29:48 +1100
Subject: [Twisted-Python] wxreactor and dialog on win xp problem
In-Reply-To: <422D74F6.5090005@unipex.it>
References: <422D74F6.5090005@unipex.it>
Message-ID: <200503090129.48921.anthony@interlink.com.au>

On Tuesday 08 March 2005 20:48, Michele Petrazzo wrote:
> I have a problem with wxreactor on win xp.
>
> I insert a ShowModal() of a TextEntryDialog after an event of a button
> in a frame.

wx and Twisted cannot be made to play together nicely - both wxreactor
and wxsupport have issues. In one of them, modals and popups cause
the reactor to block, in the other, you can't get accurate callLater (wx
guarantees "no worse than 1s resolution"). You need to run wx and 
twisted in separate threads - wx in the main, twisted in the child thread.

Anthony
-- 
Anthony Baxter     <anthony at interlink.com.au>
It's never too late to have a happy childhood.



From itamar at itamarst.org  Tue Mar  8 08:45:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Mar 2005 10:45:21 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of
	BlockingResolver by default - the thread import issue is moot,
	PyOpenSSL imports thread unconditionally.
In-Reply-To: <E1D8XJt-0002Bg-00@wolfwood>
References: <E1D8XJt-0002Bg-00@wolfwood>
Message-ID: <1110296721.28532.55.camel@sheriffpony>

On Mon, 2005-03-07 at 22:31 -0700, Jp Calderone wrote:

> Use ThreadedResolver instead of BlockingResolver by default - the thread import issue is moot, PyOpenSSL imports thread unconditionally.

Not true. Some BSDs don't do threading in Python, and we need to support
them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
does the import unconditionally is a bug.




From exarkun at divmod.com  Tue Mar  8 12:18:35 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Tue, 08 Mar 2005 19:18:35 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of
	BlockingResolver by default - the thread import issue is moot,
	PyOpenSSL imports thread unconditionally.
In-Reply-To: <1110296721.28532.55.camel@sheriffpony>
Message-ID: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>

On Tue, 08 Mar 2005 10:45:21 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2005-03-07 at 22:31 -0700, Jp Calderone wrote:
> 
> > Use ThreadedResolver instead of BlockingResolver by default - the thread import issue is moot, PyOpenSSL imports thread unconditionally.
> 
> Not true. Some BSDs don't do threading in Python, and we need to support
> them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
> does the import unconditionally is a bug.
> 

  I don't have access to a platform without threading support.  There isn't even a buildslave running on one.  If someone sets that up, I'll fix failures it reports.

  Jp



From ww at groovy.net  Tue Mar  8 12:52:28 2005
From: ww at groovy.net (William Waites)
Date: Tue, 8 Mar 2005 14:52:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the
	thread import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
References: <1110296721.28532.55.camel@sheriffpony>
	<20050308191835.2951.921202377.divmod.quotient.24102@ohm>
Message-ID: <20050308195228.GF12950@groovy.net>

On Tue, Mar 08, 2005 at 07:18:35PM +0000, Jp Calderone wrote:
> On Tue, 08 Mar 2005 10:45:21 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
> > 
> > Not true. Some BSDs don't do threading in Python, and we need to support
> > them. Remember, the pyOpenSSL support is optional. The fact pyOpenSSL
> > does the import unconditionally is a bug.
> > 
> 
>   I don't have access to a platform without threading support. 
> There isn't even a buildslave running on one.  If someone sets
> that up, I'll fix failures it reports.

NetBSD earlier than (and including) 1.6.2 lacked threading
support (except for the pth userspace cooperative threading)

Unfortunately all of my NetBSD boxes have are now running
2.0/2.0.1/-current, so I don't have one you can use to build.

-w



From maoy at cis.upenn.edu  Tue Mar  8 13:00:50 2005
From: maoy at cis.upenn.edu (Yun Mao)
Date: Tue, 8 Mar 2005 15:00:50 -0500 (EST)
Subject: [Twisted-Python] setTimeout in Deferred
Message-ID: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>

This is the doc of setTimeout:

         """Set a timeout function to be triggered if I am not called.

         @param seconds: How long to wait (from now) before firing the
         timeoutFunc.

         @param timeoutFunc: will receive the Deferred and *args, **kw as 
its
         arguments.  The default timeoutFunc will call the errback with a
         L{TimeoutError}.

         DON'T USE THIS! It's a bad idea! Use a function called by 
reactor.callLater instead
         to accomplish the same thing!

         YOU HAVE BEEN WARNED!
         """

Any reason why not? It seems to me that setTimeout just calls 
reactor.callLater()

Yun




From itamar at itamarst.org  Tue Mar  8 13:06:49 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 08 Mar 2005 15:06:49 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the thread
	import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
References: <20050308191835.2951.921202377.divmod.quotient.24102@ohm>
Message-ID: <1110312409.28538.68.camel@sheriffpony>

On Tue, 2005-03-08 at 19:18 +0000, Jp Calderone wrote:

>   I don't have access to a platform without threading support.  There
> isn't even a buildslave running on one. 

That doesn't mean you ought to *break* it. Can't you put the
installation of ThreadedResolver in as a try/except over import thread?
Or can we have twisted.python.runtime.threadingSupported()? or
something. But we oughtn't break support for non-threaded platforms when
it's easy enough to test for it (sys.module["thread"] = None and then
run code as usual).





From radeex at gmail.com  Tue Mar  8 15:35:54 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 09:35:54 +1100
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
Message-ID: <60ed19d405030814357c08ccff@mail.gmail.com>

On Tue, 8 Mar 2005 15:00:50 -0500 (EST), Yun Mao <maoy at cis.upenn.edu> wrote:
> This is the doc of setTimeout:
...
> Any reason why not? It seems to me that setTimeout just calls
> reactor.callLater()

It's a bit more complex than that, and its input and behavior makes
some wrong assumptions and has some bad implications. It is the
end-user of a Deferred who usually wants to specify the timeout before
cancelling the operation. However, it is the creator of the Deferred
who needs to specify _how_ cancelling an operation works -- it's
different for every protocol / kind of operation. Putting the timeout
and the canceller next to each other is a bad idea. In practice, using
setTimeout leads to a bunch of stupid AlreadyCalled errors when the
end-user of a Deferred specifies a timeout and the framework code
doesn't know about it.

The best way to offer timeout support in your code is to modify your
API. If you have a function like getPage which connects to an HTTP
server and downloads a resource, that getPage function should take a
timeout parameter. If set, the HTTP-downloader should disconnect from
the server when the timeout is reached, and simply send an errback to
the deferred.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From paul at ref.nmedia.net  Tue Mar  8 18:43:46 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Tue, 8 Mar 2005 17:43:46 -0800
Subject: [Twisted-Python] Twisted Allen-Bradley PLC Protocol
In-Reply-To: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
References: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
Message-ID: <20050309014346.GA5267@ref.nmedia.net>

I've successfully gotten twisted to talk to Allen Bradley PLC 5's using
Ron Gage's "ABEL" library as a template. Needless to say, the twisted way
is cleaner and easier to maintain (in my opinion at least).

However, there's a slight twist to the code and I'm trying to think if there's
a better way, and the protocol is similar to so many other things (SSL comes
to mind).

To communicate with AB PLC's, first you initiate a TCP/IP connection. This
is text book twisted. Second, you initiate communication using a "link layer"
protocol. Once that is established, THEN communication progresses using yet
another protocol layer ("PCCC" or "DF-1" or "CSP" depending on what document
you are reading).

Right now, I simply wrote my "connectionMade" function set self.attached=0 and
then initiate a "send connect command" function. The "received connection"
function sets self.attached=1. All other commands simply to a
reactor.callLater(1,self.func) and float around in the reactor buffer until
self.attach==1 returns with good news.

It seems to me that what we have here is really a protocol stack, similar in
nature to the "LineReceiver" type protocol or perhaps it should be set up
as an adapter (component architecture). Then in this case, the packet/protocol
gets passed up through the layers and the "link layer" occupies the correct
status of being a lower level layer. Or else to support say serial
communication on an RS-232 or RS-485 network later, it could be done as a
component arrangement.

So, does this make any sense? What is the "design pattern" in this case in
twisted?



From glyph at divmod.com  Tue Mar  8 18:58:57 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 08 Mar 2005 20:58:57 -0500
Subject: [Twisted-Python] Twisted Allen-Bradley PLC Protocol
In-Reply-To: <20050309014346.GA5267@ref.nmedia.net>
References: <E1D8jw8-0005dK-01@pyramid.twistedmatrix.com>
	<20050309014346.GA5267@ref.nmedia.net>
Message-ID: <422E5861.8010803@divmod.com>

Paul Campbell wrote:

> So, does this make any sense? What is the "design pattern" in this case in
> twisted?

It depends: Twisted really ought to provide some layer-factoring code in 
the core, but it doesn't, so to some extent you're on your own.

However, if there is no official "design pattern", there are certain 
trends which have been repeating themselves.  Twisted's 
twisted.application.strports and twisted.spread.pb, as well as Divmod's 
mantissa.q2q, seem to all be taking the approach of: build one, 
high-level API that allows you to do a complete end-to-end connection 
conveniently with one line of code, and provide at least some basis for 
abstracting the components of that line so that they can be plugged in.

PB's method is "login", strports has 'service' and 'listen', and Q2Q has 
service.connectQ2Q.



From exarkun at divmod.com  Tue Mar  8 18:58:34 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 01:58:34 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 - Use
	ThreadedResolver instead of BlockingResolver by default - the thread
	import issue is moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <1110312409.28538.68.camel@sheriffpony>
Message-ID: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>

On Tue, 08 Mar 2005 15:06:49 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Tue, 2005-03-08 at 19:18 +0000, Jp Calderone wrote:
> 
> >   I don't have access to a platform without threading support.  There
> > isn't even a buildslave running on one. 
> 
> That doesn't mean you ought to *break* it. Can't you put the
> installation of ThreadedResolver in as a try/except over import thread?
> Or can we have twisted.python.runtime.threadingSupported()? or
> something. But we oughtn't break support for non-threaded platforms when
> it's easy enough to test for it (sys.module["thread"] = None and then
> run code as usual).
> 

  Yes.  There are lots of ways it could work.  How can I implement any of them, though, if I can't run a unit test and have it pass?

  I could probably figure out a way to get it working without a buildslave, but this goes to a larger issue.  I'm not going to waste my time trying to support a feature that we think we would like to support.  Either we want to support it, in which case we need to test it, or we don't.

  Anyway, I've had an idea while reading the posts in this thread.  Python can be compiled without thread support intentionally.

  Anyone want to volunteer a reliable host on which to run such a slave?

  Jp


> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From glyph at divmod.com  Tue Mar  8 19:08:09 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Tue, 08 Mar 2005 21:08:09 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13090 -
	Use	ThreadedResolver
	instead of BlockingResolver by default - the thread	import issue is
	moot, PyOpenSSL imports thread unconditionally.
In-Reply-To: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>
References: <20050309015834.2951.491077948.divmod.quotient.24595@ohm>
Message-ID: <422E5A89.3030804@divmod.com>

Jp Calderone wrote:

>   Anyone want to volunteer a reliable host on which to run such a slave?

I actually have a few hosts hanging around here that I could put online 
(in particular, I have a mac that isn't doing anything, and the OS-X 
buildslave is offline) but figuring out how to set up a buildbot got me 
stuck last time.

Is there any updated documentation of this procedure?



From gmcdonald at infocomp.com  Tue Mar  8 21:06:50 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 15:06:50 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CCB@XCHANGE>

Hi All,

I am translating a twisted UDP implementation to a TCP implementation and i
have come across some unexpected errors related to the amount of data
written to a TCP transport. When a large amount of data is written to a TCP
connection (approx. 9KB) the connection is dropped and transmission is
unsuccessful. Between about 4KB-9KB (approx.) the connection is not dropped
but the transmission is incomplete as the unpickling raises a ValueError
(insecure pickle string). Under 4KB transmission is faultless. Is this a
known limitation? I was aware of the 8KB of UDP packets but assumed that
there were no such limitations on TCP connections. Can someone please
enlighten me?

Regards,

Grant McDonald

PS. these are very approximate sizes - if need be i can narrow them down
some more.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050309/e5498da2/attachment.html>

From exarkun at divmod.com  Tue Mar  8 21:16:06 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 04:16:06 GMT
Subject: [Twisted-Python] TCP Packet Size Considerations
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CCB@XCHANGE>
Message-ID: <20050309041606.2951.31537748.divmod.quotient.24769@ohm>

On Wed, 9 Mar 2005 15:06:50 +1100, Grant McDonald <gmcdonald at infocomp.com> wrote:
>Hi All,
> 
> I am translating a twisted UDP implementation to a TCP implementation and i
> have come across some unexpected errors related to the amount of data
> written to a TCP transport. When a large amount of data is written to a TCP
> connection (approx. 9KB) the connection is dropped and transmission is
> unsuccessful. Between about 4KB-9KB (approx.) the connection is not dropped
> but the transmission is incomplete as the unpickling raises a ValueError
> (insecure pickle string). Under 4KB transmission is faultless. Is this a
> known limitation? I was aware of the 8KB of UDP packets but assumed that
> there were no such limitations on TCP connections. Can someone please
> enlighten me?

  There are no such known limits.  I might even go as far to say that there are no such limits, if I were feeling daring. :)  Do you have a short program which demonstrates this behavior that you can share?  Perhaps after looking at that someone can suggest the cause of the disconnects.

  Jp



From gmcdonald at infocomp.com  Tue Mar  8 22:10:21 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 16:10:21 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>

JP wrote:

> There are no such known limits.  I might even go as far to say that there
> are no such limits, if I were feeling daring. :)  Do you have a short
> program which demonstrates this behavior that you can share?  
> Perhaps after looking at that someone can suggest the cause of the
disconnects.

After looking into it some more myself i realised an uncaught exception was
dropping the connection but the after cutting my test code back to minimal
functionality the inconsistency with received data was still there. The last
4KB of the data was received and the first 14KB discarded somewhere!

I have created a minimal example from my initial test code. Start the
simpleserver with twistd.py -y simpleserver.py and just run the
simpleclient.py the builder.dat file is just a nonsense file that is about
18KB in size. Testing on my machine produced a received.dat file which was
4KB in size. I am currently using Python 2.3.3 and Twisted 1.3.0. The code
is as follows (and is also attached for convenient running):

### ------------ simpleclient.py ---------------------------------

from twisted.internet.protocol import Protocol
import twisted.internet.error
from simpleprotos import SimpleClientFactory
factory = SimpleClientFactory()

# open a large nonsense file to send (18KB)
f = file('builder.dat')
data = f.read()
print len(data)
f.close()

from twisted.internet import reactor
reactor.connectTCP('127.0.0.1', 10000, factory)
reactor.callLater(1.0, factory.sendMessage, data)
reactor.run()

### ------------- end ---------------------------------------------

### ------------ simpleserver.py ----------------------------------

from twisted.application import internet # services that run TCP/SSL/etc.
from twisted.application import service
from simpleprotos import ServerDataConnection, SimpleFactory

def makeService():
    factory = SimpleFactory() # here we create a ConnectionManager
    return internet.TCPServer(10000, factory)

application = service.Application("Connection Manager")
sc = service.IServiceCollection(application)
sc.addService(makeService())

### ------------- end ---------------------------------------------

### ------------ simpleprotos.py ----------------------------------

from twisted.internet.protocol import ClientFactory, Factory, Protocol

class SimpleClientFactory(ClientFactory):
    def buildProtocol(self, addr):
        self.p = ClientDataConnection()
        self.p.factory = self
        return self.p
    
    def sendMessage(self, data):
        if hasattr(self, 'p'):
            self.p.sendData(data)

class SimpleFactory(Factory):
    def buildProtocol(self, addr):
        self.p = ServerDataConnection()
        self.p.factory = self
        return self.p

class ServerDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
    
    def dataReceived(self, data):
        f = file('received.dat', 'w')
        f.write(data)
        f.close()


class ClientDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
    
    def sendData(self, data):
        self.transport.write(data)

### ------------- end ---------------------------------------------

Regards,

Grant McDonald

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleserver.py
Type: application/octet-stream
Size: 438 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0008.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleprotos.py
Type: application/octet-stream
Size: 910 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0009.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simpleclient.py
Type: application/octet-stream
Size: 417 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0010.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: builder.dat
Type: application/octet-stream
Size: 16837 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050309/8f93b6d6/attachment-0011.obj>

From gmcdonald at infocomp.com  Tue Mar  8 22:56:19 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 16:56:19 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>

After adding some code to report the transmission size i can confirm that
16837 bytes are sent and 8077 bytes are received via the previous code.

Regards,

Grant
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050309/9beeb390/attachment.html>

From gmcdonald at infocomp.com  Tue Mar  8 23:05:20 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 9 Mar 2005 17:05:20 +1100 
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>

Now i do feel stupid! The documentation doesn't mention anything about
sending multiple packets..... how can i tell if a packet is part of a
multiple packet set?
After looking at the output more carefully i realised that it was sending a
packet the size of 8760 and 8077 which together total 16837.  Where is the
information to say it is a split transmission?

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Grant McDonald
Sent: 09 March 2005 16:56
To: 'twisted-python at twistedmatrix.com'
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info



After adding some code to report the transmission size i can confirm that
16837 bytes are sent and 8077 bytes are received via the previous code.

Regards, 

Grant 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050309/438ce645/attachment.html>

From andrew-twisted at puzzling.org  Tue Mar  8 23:06:47 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 9 Mar 2005 17:06:47 +1100
Subject: [Twisted-Python] TCP Packet Size Considerations
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>
	<61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CD0@XCHANGE>
	<61DA7719C45FD31185280008C733EF6E04AC4CCC@XCHANGE>
Message-ID: <20050309060647.GA27280@trogdor.home.puzzling.org>

On Wed, Mar 09, 2005 at 04:10:21PM +1100, Grant McDonald wrote:
[...]
> 
> class ServerDataConnection(Protocol):
>     def closeConnection(self):
>         self.transport.loseConnection()
>    
>     def dataReceived(self, data):
>         f = file('received.dat', 'w')
>         f.write(data)
>         f.close()
[...]

On Wed, Mar 09, 2005 at 04:56:19PM +1100, Grant McDonald wrote:
> After adding some code to report the transmission size i can confirm that 16837
> bytes are sent and 8077 bytes are received via the previous code.

This is because while TCP is a byte-stream, the data can be delivered in
arbitrarily small pieces, depending on things like the MTU.  Your
ServerDataConnection is buggy, in that it only keeps the most recent chunk
received, rather than the full stream.  A better implementation would be:

class ServerDataConnection(Protocol):
    def closeConnection(self):
        self.transport.loseConnection()
 
    def connectionMade(self):
        self.f = file('received.dat', 'w')
   
    def dataReceived(self, data):
        self.f.write(data)
 
    def connectionLost(self):
        f.close()

See also the "Protocol Design" articles linked from http://itamarst.org/.

-Andrew.




From tv at twistedmatrix.com  Wed Mar  9 00:17:45 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 09 Mar 2005 09:17:45 +0200
Subject: [Twisted-Python] TCP Packet Size Considerations: Extra Info
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CD1@XCHANGE>
Message-ID: <422EA319.7070102@twistedmatrix.com>

Grant McDonald wrote:
> Now i do feel stupid! The documentation doesn't mention anything about
> sending multiple packets..... how can i tell if a packet is part of a
> multiple packet set?
> After looking at the output more carefully i realised that it was sending a
> packet the size of 8760 and 8077 which together total 16837.  Where is the
> information to say it is a split transmission?

You don't, and there is no such information. TCP is a stream of bytes.
If you want "packets", you need to provide them on top of the stream.
grep for twisted.protocols.basic.NetstringReceiver is one such
implementation.



From andrea at cpushare.com  Wed Mar  9 01:27:21 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Wed, 9 Mar 2005 09:27:21 +0100
Subject: [Twisted-Python] streaming producer
In-Reply-To: <20050303161452.GL8880@opteron.random>
References: <20050303161452.GL8880@opteron.random>
Message-ID: <20050309082721.GE26348@opteron.random>

It wasn't difficult to throttle the process stdout after
understanding the registerProducer mechanism. This patch did
the trick just fine. I didn't find docs covering the details,
but the transport code was very readable.

I should be ok with the streaming version since I don't need
resumeProducing to be recalled every time the socket returns writeable
(I only need resumeProducing to be recalled if the socket returns
writeable and the process-protocol is in paused state).

Index: cpushare/seccomp.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/seccomp.py,v
retrieving revision 1.11
diff -u -p -r1.11 seccomp.py
--- cpushare/seccomp.py	3 Mar 2005 05:56:50 -0000	1.11
+++ cpushare/seccomp.py	9 Mar 2005 07:38:01 -0000
@@ -29,6 +29,8 @@ class seccomp_protocol_class(protocol.Pr
 		self.d = deferred
 		self.outReceived = self.enable_seccomp_mode
 	def connectionMade(self):
+		self.seccomp.cpushare_protocol.seccomp_protocols.append(self)
+		self.seccomp.cpushare_protocol.transport.registerProducer(self, 1)
 		self.transport.closeChildFD(2) # close stderr right away
 		self.transport.writeToChild(0, self.seccomp.header + self.seccomp.text_data)
 	def enable_seccomp_mode(self, data):
@@ -50,12 +52,14 @@ class seccomp_protocol_class(protocol.Pr
 		self.outReceived = self.send_to_server
 		self.transport.writeToChild(0, MAGIC_GOT_SECCOMP)
 	def send_to_server(self, data):
-		self.seccomp.state_machine.protocol.sendString(PROTO_SECCOMP_FORWARD + data)
+		self.seccomp.cpushare_protocol.sendString(PROTO_SECCOMP_FORWARD + data)
 	def recv_from_server(self, data):
 		self.transport.writeToChild(0, data)
 	def errReceived(self, data):
 		raise "shouldn't happen"
 	def processEnded(self, status):
+		self.seccomp.cpushare_protocol.seccomp_protocols.remove(self)
+		self.seccomp.cpushare_protocol.transport.unregisterProducer()
 		if status.value.exitCode:
 			if status.value.exitCode == 4:
 				print 'Failure in setting the stack size to %d bytes.' % self.seccomp.stack
@@ -70,11 +74,19 @@ class seccomp_protocol_class(protocol.Pr
 		if self.transport.pid is not None:
 			os.kill(self.transport.pid, signal.SIGKILL)
 
+	def resumeProducing(self):
+		self.transport.resumeProducing()
+	def pauseProducing(self):
+		self.transport.pauseProducing()
+	def stopProducing(self):
+		self.transport.loseConnection()
+
 class seccomp_class(object):
 	header_fmt = 'iiiIIiiI'
 
 	def __init__(self, header, state_machine):
 		self.state_machine = state_machine
+		self.cpushare_protocol = state_machine.protocol
 
 		size = struct.calcsize(self.header_fmt)
 		assert size + struct.calcsize('I') + 16 == len(header), "corrupted header"

> I will probably make the max buffer size configurable dynamically and

It should be enough to override the bufferSize in the cpushare_protocol
implementation if I want to enlarge the buffer (default is 64k).



From radeex at gmail.com  Wed Mar  9 02:34:35 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 20:34:35 +1100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
Message-ID: <60ed19d4050309013462785b23@mail.gmail.com>

So I did a Twisted 2.0 prerelease.

  http://twistedmatrix.com/users/radix/2.0/

There is now a TwistedSumo tarball, which contains Twisted and all of
its subprojects as well as Zope Interface. Thanks to James Knight for
providing the setup.py for this.

Despite the crappy web presence, this is a real 2.0 prerelease. I will
try to get this published to the web site by this weekend.  Please
download anything relevant to you and give it a try, and be sure to
post your experience to this thread even if it went smoothly.

Differences between this prerelease and the pre-prerelease:
 * It no longer includes *.pyc or *.bak files
 * It includes loreified documentation
 * All version numbers should be correct (according to distutils,
package.__version__, and README files)
 * It includes the LICENSE file
 * Probably other stuff

Have fun,

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From radeex at gmail.com  Wed Mar  9 02:54:25 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 9 Mar 2005 20:54:25 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
Message-ID: <60ed19d405030901547b5d4bd6@mail.gmail.com>

I plan on releasing 2.0 *for real* early next week.

First, please take a look at the bug tracker. There are a few urgent
issues left which I'm interested in, as well as a bunch of
trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
on doing some of that this weekend.

I'm also planning on getting the totally reworked project-oriented
website (thanks much to Mary Gardiner) polished off and deployed some
time this weekend.

I need help on doing the release notes for 2.0. Traditionally this has
been Itamar's job, but James also recently volunteered. It'd be really
awesome if someone could do this for me so I don't have to think about
it. :-)

Project Maintainers!

Twisted: Glyph, Itamar, Jp
Conch: Paul
Flow: Clark
Lore: Andrew, Moshe
Mail, Names, News: Jp
Pair: Tommi
Runner: Andrew
Web: Donovan
Words: Jp, Glyph, ...?
Xish: Uh, what's that guy's name? Dave or something? I don't think
he's been very involved.

Please update your README files and tell me what version number you
want your project to have. Currently I'm assuming everything is at
0.1.0 except for conch and web which are both at 0.5.0. Also take a
look at your setup.py file and any other topfiles for your project to
make sure they're what you want (In case you've been under a rock,
those are located in Twisted/twisted/<yourproj>/topfiles/ in the
repository).

Packagers!

Get cracking.


If I think of anything else, feel safe knowing I will bug you about it.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From mary-twisted at puzzling.org  Wed Mar  9 03:18:22 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 9 Mar 2005 21:18:22 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <20050309101822.GC10163@sourdust.home.puzzling.org>

On Wed, Mar 09, 2005, Christopher Armstrong wrote:
> First, please take a look at the bug tracker. There are a few urgent
> issues left which I'm interested in, as well as a bunch of
> trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
> on doing some of that this weekend.

I don't know whether 670 is one of the ones you're going to want done
but I'd appreciate some help from someone if it is. Essentially, someone
needs to answer the question: "Are the pid and status attributes of
Process transports meant to be public?" as per the bug. It's not a
decision I feel at all qualified to make.

Further comment welcome at: http://twistedmatrix.com/bugs/issue670

-Mary



From Henning.Ramm at mediapro-gmbh.de  Wed Mar  9 05:22:21 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 9 Mar 2005 13:22:21 +0100
Subject: [Twisted-Python] Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>

Is there already an integration of Python 2.3 standard logging module into twisted?
Or can I just use it without any asynchronous wrapper?

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From pf_moore at yahoo.co.uk  Wed Mar  9 05:56:41 2005
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Wed, 9 Mar 2005 12:56:41 +0000 (UTC)
Subject: [Twisted-Python] Re: Twisted 2.0 prerelease (close!!)
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <loom.20050309T135046-717@post.gmane.org>

Christopher Armstrong <radeex <at> gmail.com> writes:
> 
> So I did a Twisted 2.0 prerelease.
> 
>   http://twistedmatrix.com/users/radix/2.0/
> 
> There is now a TwistedSumo tarball, which contains Twisted and all of
> its subprojects as well as Zope Interface. Thanks to James Knight for
> providing the setup.py for this.

I thought I'd have a try at building this (under Windows, using the mingw
compiler). Some issues:

1. (In the sumo setup.py) Windows doesn't have os.spawnvp. On the other
   hand, os.spawnv works fine, as sys.executable is absolute on Windows.
2. (In twisted\topfiles\setup.py) There's no win32/twisted_postinstall.py
   anywhere. I don't know if there should be one - for now, I just removed
   the reference to it.
3. If I do python setup.py bdist_wininst, the resulting installer calls
   itself Twisted-Web-0.5.0. I'd expect (prefer) it to be called Twisted-2.0.
   If that's not acceptable, I'd rather see the sumo setup.py build
   multiple installers, one for each subpackage (but that's very suboptimal,
   as I would much rather just install a "batteries included" Twisted
   package).

Hope this is of some help,
Paul.




From Henning.Ramm at mediapro-gmbh.de  Wed Mar  9 06:17:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 9 Mar 2005 14:17:16 +0100
Subject: [Twisted-Python] application design / threads
Message-ID: <F92274058556DE42B94B148EEFB9183949E646@exchange-03.suedkurier.de>

Hi again!

Being a bloody newbie I'm quite unsure how to construct my application; twisted has so much possibilities, perhaps you can provide some hints.

The whole thing becomes a workflow manager that collects information about processed newspaper pages. I'm planning to connect several modules (running on different machines) with PB. The server will handle a database connection and perhaps cache some data that the clients might request. Later the server will provide some status information via http (praise twisted).

One part is an Acrobat Distiller wrapper (via win32com.client):

I created a library with makepy and implemented an event handler class that catches Distiller's events, e.g. "OnJobStart".
That handler class is inherited from a base class by makepy. Each event calls one predefined method.
The handler class is connected with the distiller class like
dist = acrobatdistiller.PdfDistiller()
win32com.client.WithEvents(dist, DistEventHandler)
There can be only one Distiller instance. I guess I should keep that as long as possible, for several files to distill.
-> How should I handle these events with twisted? Do I need multiple inheritance to inherit my handler also from some twisted class?

Before a PostScript file gets distilled [dist.FileToPDF(source, target, joboptions)], I must patch it (write some pdfmarks into it). I guess I should use a thread for those blocking operations (distilling can take several minutes).
-> One thread for both, just work blocking?
-> Do I need a thread for every copy/move operation (large files via network)?

Another part reads some XML files (using minidom) and writes the mangled content into a database.
I guess I can't split XML parsing into smaller non-blocking portions -> one thread for every file?
For the database stuff I'm using runInteraction, seems to be the best solution.

A general issue is logging. I'm used to log4perl/log4net (same as log4j from apache), but dropped log4py in favour of the similar Python 2.3 standard logging. I already asked in my last mail to this list how I can integrate that with twisted. 
-> Is it possible to get correct linenumbers if using deferreds? Or can I trust logging to be non-blocking?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From twisted at ralphm.ik.nu  Wed Mar  9 07:17:43 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Wed, 9 Mar 2005 15:17:43 +0100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <20050309141743.GA52519@ik.nu>

On Wed, Mar 09, 2005 at 08:54:25PM +1100, Christopher Armstrong wrote:
> I plan on releasing 2.0 *for real* early next week.
>
> [...]
> 
> Words: Jp, Glyph, ...?
> Xish: Uh, what's that guy's name? Dave or something? I don't think
> he's been very involved.

Dave Smith (dizzyd). He's currently occupied with other, non-Twisted stuff. For
a while now, I have been talking with Dave about taking over his job of
maintaining the Jabber related bits in Twisted, which includes what has now
been moved to words/protocols/jabber and xish.

Last week, I've gone over all of the issues that were assigned to him, and
added some patches for most of them. Dave committed these for me last weekend,
so most of his issues are closed, now. There's one issue, 912, that adds
stringprep checking to Jabber IDs, which I would very much like to have in
before 2.0 is released. It only needs a few test cases, which I will fix up
later today.

In short, and in agreement with Dave, I'd like to offer maintainership of these
modules. I have some plans about future developments, but that can be discussed
later, I guess.

-- 
Groetjes,

ralphm



From itamar at itamarst.org  Wed Mar  9 08:03:14 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 09 Mar 2005 10:03:14 -0500
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
Message-ID: <1110380594.28532.99.camel@sheriffpony>

On Wed, 2005-03-09 at 13:22 +0100, Henning.Ramm at mediapro-gmbh.de wrote:
> Is there already an integration of Python 2.3 standard logging module into twisted?

You can have Twisted  logged events go to Python logging.
twisted.python.log.addObserver(f). f() gets called with dictionary
whicch you can look at and pass to logging.msg or whatever it's called.

> Or can I just use it without any asynchronous wrapper?

If you use a blocking backend to logging (sockets, database, syslog -
writing to file is fine, mostly) this will make your twisted app
unresponsive. Otherwise that should be fine.





From glyph at divmod.com  Wed Mar  9 08:54:56 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Wed, 09 Mar 2005 10:54:56 -0500
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E645@exchange-03.suedkurier.de>
Message-ID: <422F1C50.6040200@divmod.com>

Henning.Ramm at mediapro-gmbh.de wrote:
> Is there already an integration of Python 2.3 standard logging module into twisted?
> Or can I just use it without any asynchronous wrapper?

Twisted doesn't *stop* you from blocking, it just suggests you don't :).

For more discussion of stdlib logging specifically:

http://twistedmatrix.com/bugs/issue307



From alengarbage at yahoo.com  Wed Mar  9 10:28:49 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 09:28:49 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
Message-ID: <20050309172849.19747.qmail@web31507.mail.mud.yahoo.com>

Suppose I am using twisted.web.client.getPage() to
retrieve webpages.  I am setting a callback and an
errback for the result, and this all works
fantastically.

But what about the case where the webserver simply
hangs with the connection open, never returning with
either a result or an error?

I assume that my errback will get called if the socket
times out and closes (right?).  But what if I don't
want to wait that long -- what if I want to do my own
timeout after N seconds/minutes?

I've been looking for examples of how to do this, and
monkeying with reactor.callLater() with partial
success.  If I save the id from callLater(), I can
cancel the timeout in callback() or errback(). 
However, if the timeout does get fired, I get:

[Failure instance: Traceback:
twisted.internet.error.AlreadyCalled, Tried to cancel
an already-called event.
/usr/lib/python2.3/site-packages/twisted/internet/defer.py:338:_runCallbacks
/tmp/deferred2.py:21:errback
/usr/lib/python2.3/site-packages/twisted/internet/base.py:82:cancel
]

Am I going about this the wrong way?  Perhaps twisted
has some built-ins that I'm not aware of to do
essentially the same thing?

I have a modified example from the Defer Howto that
exhibits this behavior.  I can post if the above
explanation isn't enough.

    thanks,
    Lenny


	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From exarkun at divmod.com  Wed Mar  9 11:34:28 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 09 Mar 2005 18:34:28 GMT
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: <20050309172849.19747.qmail@web31507.mail.mud.yahoo.com>
Message-ID: <20050309183428.2951.323277874.divmod.quotient.25926@ohm>

On Wed, 9 Mar 2005 09:28:49 -0800 (PST), Lenny G Arbage <alengarbage at yahoo.com> wrote:
>Suppose I am using twisted.web.client.getPage() to
> retrieve webpages.  I am setting a callback and an
> errback for the result, and this all works
> fantastically.
> 
> But what about the case where the webserver simply
> hangs with the connection open, never returning with
> either a result or an error?
> 
> I assume that my errback will get called if the socket
> times out and closes (right?).  But what if I don't
> want to wait that long -- what if I want to do my own
> timeout after N seconds/minutes?
> 
> I've been looking for examples of how to do this, and
> monkeying with reactor.callLater() with partial
> success.  If I save the id from callLater(), I can
> cancel the timeout in callback() or errback(). 
> However, if the timeout does get fired, I get:
> 
> [Failure instance: Traceback:
> twisted.internet.error.AlreadyCalled, Tried to cancel
> an already-called event.
> /usr/lib/python2.3/site-packages/twisted/internet/defer.py:338:_runCallbacks
> /tmp/deferred2.py:21:errback
> /usr/lib/python2.3/site-packages/twisted/internet/base.py:82:cancel
> ]
> 
> Am I going about this the wrong way?  Perhaps twisted
> has some built-ins that I'm not aware of to do
> essentially the same thing?
> 
> I have a modified example from the Defer Howto that
> exhibits this behavior.  I can post if the above
> explanation isn't enough.
> 

  As was recently mentioned on the list, timeout support needs 
to be part of the result-generating API.  Luckily, in the case 
of getPage, it is, as demonstrated by this manhole session:

    >>> from twisted.web import client
    >>> client.getPage('http://google.com', timeout=0.001)
    <Deferred #0>
    Deferred #0 failed: 'Getting http://google.com took longer than 0.001
    seconds.'
    >>> 

  Jp



From alengarbage at yahoo.com  Wed Mar  9 12:17:58 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 11:17:58 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: 6667
Message-ID: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>


--- Jp Calderone <exarkun at divmod.com> wrote:
> 
>   As was recently mentioned on the list, timeout
> support needs 
> to be part of the result-generating API.  Luckily,
> in the case 
> of getPage, it is, as demonstrated by this manhole
> session:
> 
>     >>> from twisted.web import client
>     >>> client.getPage('http://google.com',
> timeout=0.001)
>     <Deferred #0>
>     Deferred #0 failed: 'Getting http://google.com
> took longer than 0.001
>     seconds.'
>     >>> 

  Thanks for the pointer, Jp.  I just stumbled on some
of the threads on the mailing list stretching back to
as far as 2002 about whether being able to cancel
Deferreds was a good idea or not.

  So the above solution works.  Where do I catch, or
otherwise react to, the error printed above?  When the
Deferred times out, is there a way to inject another
callback in there ("timeoutcallback"?) so that I can
do some processing on timeout?

  It looks like I could override HTTPClientFactory's
timeout() method if I had a handle to it, but
getPage() doesn't give me access.  Am I barking up the
wrong tree?

    Lenny


	
		
__________________________________ 
Celebrate Yahoo!'s 10th Birthday! 
Yahoo! Netrospective: 100 Moments of the Web 
http://birthday.yahoo.com/netrospective/



From mcfletch at rogers.com  Wed Mar  9 13:09:54 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 09 Mar 2005 15:09:54 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <422F5812.7000702@rogers.com>

Christopher Armstrong wrote:

>So I did a Twisted 2.0 prerelease.
>
>  http://twistedmatrix.com/users/radix/2.0/
>
>There is now a TwistedSumo tarball, which contains Twisted and all of
>its subprojects as well as Zope Interface. Thanks to James Knight for
>providing the setup.py for this.
>
>Despite the crappy web presence, this is a real 2.0 prerelease. I will
>try to get this published to the web site by this weekend.  Please
>download anything relevant to you and give it a try, and be sure to
>post your experience to this thread even if it went smoothly.
>  
>
TwistedSumo install went smoothly installing on Gentoo AMD64 as an 
unprivileged user, TwistedSNMP test suite runs fine.  Much larger 
internal project also seems to run fine once I updated Nevow to latest 
SVN to eliminate the large number of deprecation warnings.

Thanks for all the work, everybody,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From radeex at gmail.com  Wed Mar  9 15:54:12 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 10 Mar 2005 09:54:12 +1100
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
Message-ID: <60ed19d40503091454a3c7299@mail.gmail.com>

On Wed, 9 Mar 2005 11:17:58 -0800 (PST), Lenny G Arbage
<alengarbage at yahoo.com> wrote:
> >     <Deferred #0>
> >     Deferred #0 failed: 'Getting http://google.com
> > took longer than 0.001
> >     seconds.'
> >     >>>
> 
>   Thanks for the pointer, Jp.  I just stumbled on some
> of the threads on the mailing list stretching back to
> as far as 2002 about whether being able to cancel
> Deferreds was a good idea or not.
> 
>   So the above solution works.  Where do I catch, or
> otherwise react to, the error printed above?  When the
> Deferred times out, is there a way to inject another
> callback in there ("timeoutcallback"?) so that I can
> do some processing on timeout?


It's just a regular errback. Handle it with d.addErrback(myHandler).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From jasper at peak.org  Wed Mar  9 17:58:17 2005
From: jasper at peak.org (Jasper)
Date: Wed, 09 Mar 2005 16:58:17 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <60ed19d40503091454a3c7299@mail.gmail.com>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
	<60ed19d40503091454a3c7299@mail.gmail.com>
Message-ID: <422F9BA9.2050805@peak.org>

I'm trying to set a python property on a PB client descended from 
pb.Referenceable, but it seems that properties don't work on old style 
classes and that Referenceable is descended from Jellyable, an old style 
class.  Moreover, I see this is still true for 2.0.0a2...

Is there any intention of switching to new classes, or should I just 
hack around this?
-Jasper



From jasper at peak.org  Wed Mar  9 19:15:27 2005
From: jasper at peak.org (Jasper)
Date: Wed, 09 Mar 2005 18:15:27 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <422F9BA9.2050805@peak.org>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org>
Message-ID: <422FADBF.1090506@peak.org>

Jasper wrote:

> I'm trying to set a python property on a PB client descended from 
> pb.Referenceable, but it seems that properties don't work on old style 
> classes and that Referenceable is descended from Jellyable, an old 
> style class.  Moreover, I see this is still true for 2.0.0a2...
>
> Is there any intention of switching to new classes, or should I just 
> hack around this?


Turns out that the simple hack of Client( object, pb.Referenceable ) 
seems to work.  Sorry for the trouble!

-Jasper



From alengarbage at yahoo.com  Wed Mar  9 21:00:29 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Wed, 9 Mar 2005 20:00:29 -0800 (PST)
Subject: [Twisted-Python] deferreds and hung connections
In-Reply-To: 6667
Message-ID: <20050310040029.51009.qmail@web31511.mail.mud.yahoo.com>


--- Christopher Armstrong <radeex at gmail.com> wrote:

> It's just a regular errback. Handle it with
> d.addErrback(myHandler).

  Thanks Christopher.  I made the newbie mistake of
not always returning from my chained call/errbacks, so
I wasn't seeing this.  But after fixing that, it works
just as described.  Very slick.

  I've spent some time (in a previous life) doing
libasync coding, and twisted compares very favorably
(and doesn't have to go through so many hoops since it
relies on python language goodness that C doesn't have
by default).  Nice stuff.

  Lenny

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From maoy at cis.upenn.edu  Wed Mar  9 21:53:58 2005
From: maoy at cis.upenn.edu (Yun Mao)
Date: Wed, 9 Mar 2005 23:53:58 -0500 (EST)
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <60ed19d405030814357c08ccff@mail.gmail.com>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
	<60ed19d405030814357c08ccff@mail.gmail.com>
Message-ID: <Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>



On Wed, 9 Mar 2005, Christopher Armstrong wrote:

> It's a bit more complex than that, and its input and behavior makes
> some wrong assumptions and has some bad implications. It is the
> end-user of a Deferred who usually wants to specify the timeout before
> cancelling the operation. However, it is the creator of the Deferred
> who needs to specify _how_ cancelling an operation works -- it's
> different for every protocol / kind of operation. Putting the timeout
> and the canceller next to each other is a bad idea. In practice, using
> setTimeout leads to a bunch of stupid AlreadyCalled errors when the
> end-user of a Deferred specifies a timeout and the framework code
> doesn't know about it.
>
> The best way to offer timeout support in your code is to modify your
> API. If you have a function like getPage which connects to an HTTP
> server and downloads a resource, that getPage function should take a
> timeout parameter. If set, the HTTP-downloader should disconnect from
> the server when the timeout is reached, and simply send an errback to
> the deferred.
>

Thanks for the insight.

The problem is: many of the result-generating APIs do not have a timeout 
option, for example, XMLRPC calls, Database queries, etc. What can we do?
Are you suggesting to modify those APIs? I believe the framework should 
have something related to that.

I could imagine to write a TimerDeferred class or something to wrap the 
original Deferred, which handles timeout, and prevents AlreadyCalledError 
from happening. The tricky thing is, when those timed out calls return 
with callback/errback, there should be cancellation handlers to clean up 
the resources, like lateCallback(), lateErrback(). Of course, the simplest 
solution is to discard the results (just like what DeferredList does 
when fireOnOneCallback/errback is specified), but it is protocol specific.

Even with APIs that have the timeout option, there could also be problems 
when you use them in some form of combination. E.g. I'd write a procedure 
which involves one DNSLookup and one getPage() sequentially. I could 
specify timeout value with 2 seconds each, however what I really want the 
total time to be less than 4 seconds in which case DNS could take longer. 
It is not terribly hard to implement base on what we have now but it would 
be nice if there is a framework support that can calculate the correct 
timers for me.

Another form of "cancellation" is also related to the chaining effect. 
Suppose I want to start following two jobs at the same time:

1: A()->B()-C()
2: D()->E()

However, I only need the result from any of of them. i.e. as long as one 
of them is finished, the other thread is useless and should be canceled 
ASAP to prevent from resource consuming. Right now, I'm using 
DeferredList, but it doesn't cancel the other thread. A similar 
requirement is that if either one of them got errback, the other should be 
canceled.

Anyway, being able to schedule flexible timers is a very big advantage in 
async programming over multithreading to me. Otherwise, signals, locks, 
etc could just drive me nuts. However, I still believe in Twisted has the 
potential to have better framework support.

Yun




From golux at comcast.net  Wed Mar  9 22:25:41 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 00:25:41 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <422FDA55.2010300@comcast.net>

Christopher Armstrong wrote:
> So I did a Twisted 2.0 prerelease....
> ....  Please
> download anything relevant to you and give it a try, and be sure to
> post your experience to this thread even if it went smoothly.

Hey Chris,

I'd like to heartily second Mike's "Thanks for all the
work"!!  I remember at last year's PyCon the discussion of
potentially gnarly issues with the Great Refactorization,
so I know you and all the minions have dealt with a lot, but
the new Twisted is looking just fine!

Since I'm now running Debian unstable on my dev machines, which
I suspect you are too, it's probably no surprise that I had
no problems installing and running TwistedSumo.  All the
PanGalactic tests ran fine (good news because you don't even
wanna know how long it takes to reboot a galaxy ... heh :).

But I noticed one little hiccup that I hadn't seen before
in my server log.  Here's an excerpt (which will probably get
wrapped and look like shit, but anyway):

-------------------------------------------------------------
2005/03/09 16:53 EST [-] pgercred.BasicAuthResource request: <POST /RPC2 HTTP/1.0>
2005/03/09 16:53 EST [admin:PgerXmlrpcService] yo
2005/03/09 16:53 EST [-] 127.0.0.1 - - [09/Mar/2005:21:53:28 +0000] "POST /RPC2 HTTP/1.0" 200 128 "-" "xmlrpclib.py/1.0.1 (by www.pythonware.com)"
2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: exceptions.UserWarning: SSL connection shutdown possibly unreliable, please upgrade to ver 0.XX
-------------------------------------------------------------

I had never seen that warning before, and it only seems to appear in
this one place (client "login"), but *all* the client/server interactions
use ssl and never get this, so maybe it's just be an over-zealous warning
triggered by a very short interaction:  in the login interaction that
corresponds to these log messages, the client just sends a "yo"
(in xmlrpc) to the server, which then sends a "yo" back to the client,
and that's it (the client then decides that it's "logged in").  I looked
at tcp.py and noticed that some comments around that warning code seemed
to express something less than complete confidence in the appropriateness
of the test that raises that exception, so ...

Thoughts?

Cheers,
Steve



From andrew-twisted at puzzling.org  Wed Mar  9 23:16:04 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 10 Mar 2005 17:16:04 +1100
Subject: [Twisted-Python] setTimeout in Deferred
In-Reply-To: <Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>
References: <Pine.LNX.4.61.0503081459390.21930@forty-thieves.cis.upenn.edu>
	<60ed19d405030814357c08ccff@mail.gmail.com>
	<Pine.LNX.4.61.0503091242320.21930@forty-thieves.cis.upenn.edu>
Message-ID: <20050310061604.GB15800@trogdor.home.puzzling.org>

On Wed, Mar 09, 2005 at 11:53:58PM -0500, Yun Mao wrote:
[...]
> 
> The problem is: many of the result-generating APIs do not have a timeout 
> option, for example, XMLRPC calls, Database queries, etc. What can we do?
> Are you suggesting to modify those APIs? I believe the framework should 
> have something related to that.

At the moment, the best thing to do is to modify those APIs, yes.
Fundamentally, cancellation needs to be supported by whatever code is
managing the operation that the Deferred is waiting on. 

There may be a better way to do this, see the discussion in
http://twistedmatrix.com/bugs/issue178 (and the mailing list thread it links
to).  Realistically, not all operations can be cancelled, even though the
clients of those operations may no longer care about the result.  Any
solution needs to have sensible support for this case, and at the moment
setTimeout doesn't.

[...]
> Even with APIs that have the timeout option, there could also be problems 
> when you use them in some form of combination. E.g. I'd write a procedure 
> which involves one DNSLookup and one getPage() sequentially. I could 
> specify timeout value with 2 seconds each, however what I really want the 
> total time to be less than 4 seconds in which case DNS could take longer. 
> It is not terribly hard to implement base on what we have now but it would 
> be nice if there is a framework support that can calculate the correct 
> timers for me.

Right, what is actually the case there is there are three different
operations:

   1. the DNS lookup
   2. the getPage
   3. your procedure that invokes 1 and 2.

The code responsible for 3 would also be responsible for cancelling 1 and 2
when 3 is cancelled.  No fancy timeout calculations would be required.

Currently we lack ways to cancel in-progress getPage operations (and
probably DNS lookups, I haven't looked), and we certainly lack any standard
APIs or framework for supporting cancellations.  This is the root problem
that needs fixing, rather than timeouts, I think.

> Another form of "cancellation" is also related to the chaining effect. 
> Suppose I want to start following two jobs at the same time:
> 
> 1: A()->B()-C()
> 2: D()->E()
> 
> However, I only need the result from any of of them. i.e. as long as one 
> of them is finished, the other thread is useless and should be canceled 
> ASAP to prevent from resource consuming. Right now, I'm using 
> DeferredList, but it doesn't cancel the other thread. A similar 
> requirement is that if either one of them got errback, the other should be 
> canceled.

Yeah, this would be nice... but of course there's no generic way to kill
another thread in python.  The thread needs to co-operate somehow.

> Anyway, being able to schedule flexible timers is a very big advantage in 
> async programming over multithreading to me. Otherwise, signals, locks, 
> etc could just drive me nuts. However, I still believe in Twisted has the 
> potential to have better framework support.

Magic bullets welcome ;)

-Andrew.




From foom at fuhm.net  Wed Mar  9 23:18:48 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 01:18:48 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <422FDA55.2010300@comcast.net>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<422FDA55.2010300@comcast.net>
Message-ID: <f7a73940f10317f3c534bd499db80322@fuhm.net>


On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
> /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
> exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
> please upgrade to ver 0.XX

I think I'll just remove that warning. It's warning about a situation 
which I believe *may* never actually be able to happen: during final 
connection shutdown, the socket is reported writable, but OpenSSL is 
for some reason unable to write the final packet. I looked through the 
code, and while I wasn't able to convince myself it couldn't happen, I 
did convince myself that it was rather unlikely, at least. If that does 
happen somehow, (and you aren't using "0.XX" of pyOpenSSL), twisted has 
no way of ever finding out. Thus the warning telling you to upgrade.

About the "0.XX": Back around the beginning of November, I sent some 
patches to the maintainer of PyOpenSSL to add the requisite new method 
to it. While he responded in the affirmative that the patches were 
good, there has been no activity since then. Thus the lack of a real 
version number.

James




From foom at fuhm.net  Wed Mar  9 23:23:07 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 01:23:07 -0500
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <422FADBF.1090506@peak.org>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org> <422FADBF.1090506@peak.org>
Message-ID: <ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>

On Mar 9, 2005, at 9:15 PM, Jasper wrote:
> Jasper wrote:
>
>> I'm trying to set a python property on a PB client descended from 
>> pb.Referenceable, but it seems that properties don't work on old 
>> style classes and that Referenceable is descended from Jellyable, an 
>> old style class.  Moreover, I see this is still true for 2.0.0a2...
>>
>> Is there any intention of switching to new classes, or should I just 
>> hack around this?
>
>
> Turns out that the simple hack of Client( object, pb.Referenceable ) 
> seems to work.  Sorry for the trouble!

You really don't want to do that. Then, if pb.Referenceable ever does 
become a new-style class (for example because a new version of python 
gets rid of oldstyle classes, or because twisted is changed), then 
you'll get an MRO construction error. Always put object last in the 
inheritance line.

E.g.:
class Foo: pass
class Bar(object, Foo): pass # Fine

class Foo(object): pass
class Bar(object, Foo): pass # BOOM

James




From glyph at divmod.com  Wed Mar  9 23:35:35 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 10 Mar 2005 06:35:35 GMT
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <f7a73940f10317f3c534bd499db80322@fuhm.net>
Message-ID: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>



On Thu, 10 Mar 2005 01:18:48 -0500, James Y Knight <foom at fuhm.net> wrote:
>
> On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> > 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
> > /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
> > exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
> > please upgrade to ver 0.XX
> 
> I think I'll just remove that warning. It's warning about a situation 
> which I believe *may* never actually be able to happen: during final 
> connection shutdown, the socket is reported writable, but OpenSSL is 
> for some reason unable to write the final packet. I looked through the 
> code, and while I wasn't able to convince myself it couldn't happen, I 
> did convince myself that it was rather unlikely, at least. If that does 
> happen somehow, (and you aren't using "0.XX" of pyOpenSSL), twisted has 
> no way of ever finding out. Thus the warning telling you to upgrade.

In fact I believe this situation can and does happen: if the other side of the connection suddenly and totally goes away (and is also filtering all ICMP including port-unreachable), the connection will hang forever.

This looks like another use-case for a 'killConnection' method...



From golux at comcast.net  Thu Mar 10 00:21:32 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 02:21:32 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <f7a73940f10317f3c534bd499db80322@fuhm.net>
References: <60ed19d4050309013462785b23@mail.gmail.com>	<422FDA55.2010300@comcast.net>
	<f7a73940f10317f3c534bd499db80322@fuhm.net>
Message-ID: <422FF57C.5060701@comcast.net>

James Y Knight wrote:
> 
> On Mar 10, 2005, at 12:25 AM, Stephen Waterbury wrote:
> 
>> 2005/03/09 16:53 EST [HTTPChannel,2,127.0.0.1] 
>> /usr/lib/python2.3/site-packages/twisted/internet/tcp.py:216: 
>> exceptions.UserWarning: SSL connection shutdown possibly unreliable, 
>> please upgrade to ver 0.XX
> 
> 
> I think I'll just remove that warning. It's warning about a situation 
> which I believe *may* never actually be able to happen ...

Thanks for the explanation James -- lucid as usual.
I think I can live with that one (at least until
pyOpenSSL 0.XX comes out. ;)

Cheers,
Steve



From Henning.Ramm at mediapro-gmbh.de  Thu Mar 10 01:59:34 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 10 Mar 2005 09:59:34 +0100
Subject: [Twisted-Python] Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E64A@exchange-03.suedkurier.de>

>For more discussion of stdlib logging specifically:
>http://twistedmatrix.com/bugs/issue307

Thank you. I won't question that your points are valid.

I'm very much used to "standard logging" with its possibilities to write all the stuff to a file, send a mail on error and filter everything after source, level etc. And because it's kind of standard I can simply use the same logging format from Perl, VB.NET and Python. (Draw your wreath of garlic, but here's a lot of different code to keep together.)

I'm convinced twisted's possibilities are better, but its logging isn't that extensive (yet). And I find the logging API rather chaotic.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From jasper at peak.org  Thu Mar 10 07:26:37 2005
From: jasper at peak.org (Jasper)
Date: Thu, 10 Mar 2005 06:26:37 -0800
Subject: [Twisted-Python] Python properties and pb.Referenceable...
In-Reply-To: <ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>	<60ed19d40503091454a3c7299@mail.gmail.com>	<422F9BA9.2050805@peak.org>
	<422FADBF.1090506@peak.org>
	<ca72dae23bc5d737e5d73629fdec5b7f@fuhm.net>
Message-ID: <4230591D.9040703@peak.org>

James Y Knight wrote:

> On Mar 9, 2005, at 9:15 PM, Jasper wrote:
>
>> Jasper wrote:
>>
>>> I'm trying to set a python property on a PB client descended from 
>>> pb.Referenceable, but it seems that properties don't work on old 
>>> style classes and that Referenceable is descended from Jellyable, an 
>>> old style class.  Moreover, I see this is still true for 2.0.0a2...
>>>
>>> Is there any intention of switching to new classes, or should I just 
>>> hack around this?
>>
>>
>>
>> Turns out that the simple hack of Client( object, pb.Referenceable ) 
>> seems to work.  Sorry for the trouble!
>
>
> You really don't want to do that. Then, if pb.Referenceable ever does 
> become a new-style class (for example because a new version of python 
> gets rid of oldstyle classes, or because twisted is changed), then 
> you'll get an MRO construction error. Always put object last in the 
> inheritance line.
>
> E.g.:
> class Foo: pass
> class Bar(object, Foo): pass # Fine
>
> class Foo(object): pass
> class Bar(object, Foo): pass # BOOM

Actually, I prefer it to blow up to help remember when to stop using 
this ugly comment requiring hack..

I have absolute control over the version of Python and Twisted I'm 
using, and so the worst that can happen is that I'll have to change a 
single line of code when and if I upgrade to such a version of Twisted 
or Python.

-Jasper



From jarrod.roberson at gmail.com  Thu Mar 10 09:12:18 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 11:12:18 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
Message-ID: <2389d47305031008121bc8a882@mail.gmail.com>

I am having a hard time getting multicast to work in Twisted. Code
snippets/examples I have found are either too old or just incorrect.

what is the correct way to write a protocol handler that will
multilisten on a multicast socket?

I am trying to add mDNS responder functionality to my application and
twisted complains that port 5353 is already in use. I know I can run
multiple copies of mDNSResponder from Apple, is this just a problem
with twisted on OSX or is it worse than that.

regardless is there a fix to get twisted to work, this application
will eventually be deployed in an linux or solaris environment so if
it is an OSX thing I can just find another box to test it on.



From itamar at itamarst.org  Thu Mar 10 09:43:56 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 11:43:56 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d47305031008121bc8a882@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
Message-ID: <1110473036.28542.165.camel@sheriffpony>

On Thu, 2005-03-10 at 11:12 -0500, jarrod roberson wrote:

> what is the correct way to write a protocol handler that will
> multilisten on a multicast socket?

In Twisted 2.0 there's a flag to listenMulticast that lets you do this.
Also look in my sandbox for some prelim zeroconf code (enough to be able
to read info, not good enough to publish).

> regardless is there a fix to get twisted to work, this application
> will eventually be deployed in an linux or solaris environment so if
> it is an OSX thing I can just find another box to test it on.

On Linux there seems to be a movement to standardize on the howl
mdnsresponder, but that'll take a while. Probably you want your mdns
library to use system version if available, otherwise its own.




From jarrod.roberson at gmail.com  Thu Mar 10 12:14:59 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 14:14:59 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110473036.28542.165.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
Message-ID: <2389d47305031011147d5be7e1@mail.gmail.com>

On Thu, 10 Mar 2005 11:43:56 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 11:12 -0500, jarrod roberson wrote:
> 
> > what is the correct way to write a protocol handler that will
> > multilisten on a multicast socket?
> 
> In Twisted 2.0 there's a flag to listenMulticast that lets you do this.
> Also look in my sandbox for some prelim zeroconf code (enough to be able
> to read info, not good enough to publish).
> 

what I am trying to get done first is a responder for my application
to reply to queries / publish
I got the lastest version of Twisted from subversion ( 13109 ) and
installed it by doing a
python setup.py all install

now I get this error on all my code ( and the mdns.py code from your sandbox )

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    from twisted.internet import protocol
  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/protocol.py",
line 18, in ?
    from zope.interface import implements
ImportError: No module named zope.interface
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

is there a dependancy on Zope with Twisted 2.x?

I did find the protocol.py file the line from zope.interface import implements

what am I missing here?



From int at mtx.ru  Thu Mar 10 12:22:17 2005
From: int at mtx.ru (Pavel Volkovitskiy)
Date: Thu, 10 Mar 2005 22:22:17 +0300
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <42309E69.6040903@mtx.ru>

Christopher Armstrong wrote:

>So I did a Twisted 2.0 prerelease.
>  
>
Is it possible to fix this (1) microdom bug:
    http://twistedmatrix.com/bugs/issue909

-- 
Pavel



From itamar at itamarst.org  Thu Mar 10 12:57:01 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 14:57:01 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d47305031011147d5be7e1@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
Message-ID: <1110484621.28542.180.camel@sheriffpony>

On Thu, 2005-03-10 at 14:14 -0500, jarrod roberson wrote:

> is there a dependancy on Zope with Twisted 2.x?

There's a dependency on zope.interface in 2.0:
http://www.zope.org/Products/ZopeInterface/






From foom at fuhm.net  Thu Mar 10 14:13:26 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:13:26 -0500
Subject: [Twisted-Python] ChangeLog
Message-ID: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>

So, it looks like we've generally included two change listings in our 
releases: ChangeLog and NEWS. It's pretty obvious what NEWS is supposed 
to be: a human edited list of the most important changes in the 
release. There is some question, though, about what a ChangeLog should 
be. Right now, it is useless, as nobody updates it. Who wants to write 
two commit messages rather than one, afterall?

If we actually want a change log separate from an "important changes" 
NEWS file, I think it'd be fine to simply autogenerate it from our SVN 
log messages, because if you want a more concise explanation of what 
changed, that's what NEWS is for. The advantage of doing this is that 
people who don't follow SVN get to see all the things we changed, the 
disadvantage being that it's 6500 lines long and contains some 
irrelevant parts. E.g. merging trial, reverting merge, merging trial, 
reverting merge, repeat like 200 more times. Also, things lilke "Use 
ThreadedResolver instead of BlockingResolver by default" in one commit, 
and "Tra la la la la, like extra flowers" in the next when you realize 
you screwed up the first and need to do a 4-character fix. :)

On the other hand, perhaps all we really want is a single human-edited 
changes file, describing in a bit more detail than the 1.3 NEWS file 
what's changed, but more concise than a full changelog. What do people 
think?

James




From foom at fuhm.net  Thu Mar 10 14:14:52 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:14:52 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
Message-ID: <2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>


On Mar 10, 2005, at 1:35 AM, glyph at divmod.com wrote:
> In fact I believe this situation can and does happen: if the other 
> side of the connection suddenly and totally goes away (and is also 
> filtering all ICMP including port-unreachable), the connection will 
> hang forever.
>
> This looks like another use-case for a 'killConnection' method...

No, you've got the situation backwards. The situation doesn't involve 
any hanging, it involves possible data loss of the last packet. We will 
make a single attempt to do the final write (via calling SSL_shutdown), 
and if it fails to write because of some transient error, we have no 
way to know, so we close the connection anyways, even though we 
should've retried.

James




From jarrod.roberson at gmail.com  Thu Mar 10 14:19:38 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 16:19:38 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110484621.28542.180.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
Message-ID: <2389d473050310131958f19ae9@mail.gmail.com>

On Thu, 10 Mar 2005 14:57:01 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 14:14 -0500, jarrod roberson wrote:
> 
> > is there a dependancy on Zope with Twisted 2.x?
> 
> There's a dependency on zope.interface in 2.0:
> http://www.zope.org/Products/ZopeInterface/
>

ok you only need the zope.interface product and not the entire zope
server, that is better
I got zope.interface installed and everything is working but I am
getting lots of exceptions related to unicode and what not.



From foom at fuhm.net  Thu Mar 10 14:42:28 2005
From: foom at fuhm.net (James Y Knight)
Date: Thu, 10 Mar 2005 16:42:28 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13111 - Fix process unit
	test when there is no twisted installed yet.
In-Reply-To: <E1D9VHc-0000NT-00@wolfwood>
References: <E1D9VHc-0000NT-00@wolfwood>
Message-ID: <6ffdda17ff3eac56d3a801542060361c@fuhm.net>

On Mar 10, 2005, at 4:33 PM, Tommi Virtanen wrote:
> Fix process unit test when there is no twisted installed yet.

We need to decide on a standard mechanism for doing this. Every test 
that runs processes does it a *different* way now. At least on unix, 
sys.path can never have relative paths in it, so we should standardize 
on the simple:  'env = {"PYTHONPATH": os.pathsep.join(sys.path)}'.

James




From itamar at itamarst.org  Thu Mar 10 14:51:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 16:51:19 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just
	not working on OSX?
In-Reply-To: <2389d473050310131958f19ae9@mail.gmail.com>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
	<2389d473050310131958f19ae9@mail.gmail.com>
Message-ID: <1110491479.28536.185.camel@sheriffpony>

On Thu, 2005-03-10 at 16:19 -0500, jarrod roberson wrote:

> I got zope.interface installed and everything is working but I am
> getting lots of exceptions related to unicode and what not.

There's a reason it's in the sandbox.




From radeex at gmail.com  Thu Mar 10 15:32:36 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:32:36 +1100
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
Message-ID: <60ed19d40503101432e8e5744@mail.gmail.com>

On Thu, 10 Mar 2005 16:13:26 -0500, James Y Knight <foom at fuhm.net> wrote:
> On the other hand, perhaps all we really want is a single human-edited
> changes file, describing in a bit more detail than the 1.3 NEWS file
> what's changed, but more concise than a full changelog. What do people
> think?

+1, sounds good to me.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From paul at ref.nmedia.net  Thu Mar 10 15:37:25 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Thu, 10 Mar 2005 14:37:25 -0800
Subject: [Twisted-Python] Twisted Logging?
In-Reply-To: <E1D96Pd-0002IA-01@pyramid.twistedmatrix.com>
References: <E1D96Pd-0002IA-01@pyramid.twistedmatrix.com>
Message-ID: <20050310223725.GA30170@ref.nmedia.net>

> 
> The whole thing becomes a workflow manager that collects information about processed newspaper pages. I'm planning to connect several modules (running on different machines) with PB. The server will handle a database connection and perhaps cache some data that the clients might request. Later the server will provide some status information via http (praise twisted).
> 
> One part is an Acrobat Distiller wrapper (via win32com.client):
> 
> I created a library with makepy and implemented an event handler class that catches Distiller's events, e.g. "OnJobStart".
> That handler class is inherited from a base class by makepy. Each event calls one predefined method.
> The handler class is connected with the distiller class like
> dist = acrobatdistiller.PdfDistiller()
> win32com.client.WithEvents(dist, DistEventHandler)
> There can be only one Distiller instance. I guess I should keep that as long as possible, for several files to distill.
> -> How should I handle these events with twisted? Do I need multiple inheritance to inherit my handler also from some twisted class?

This problem has come up before. Basically, you need to queue up your series
of commands and then send them one at a time. Obviously, blocking is a bad
thing. In this case, your PDF handler can be isolated into a separate
process and/or thread. Twisted supports this. Read the threading stuff
very carefully. The threading support has specific hooks designed to run a
process in just this situation.

So architecturally, you'd have your PDF application running in a thread. Every
time it finishes a job, it sends a signal over to the twisted code signalling
that the job is complete. The twisted code then schedules another one on an
as-needed basis.

On the twisted side, you can write a server. The server either queues a job
or sends it immediately. Either way, it can return immediately and it won't
be a problem blocking-wise since the time to execute the code is minimal (you
hid all the blocking stuff in the side-thread where your PDF driver runs).
The "return" function essentially is either an outright "pull a command out
of the queue and send it over" function or you could set it up as a
reactor.calllater(0.0001, functionToQcheduleQueuedPdfJob)

> Before a PostScript file gets distilled [dist.FileToPDF(source, target, joboptions)], I must patch it (write some pdfmarks into it). I guess I should use a thread for those blocking operations (distilling can take several minutes).
> -> One thread for both, just work blocking?

This can be in your threaded code as mentioned earlier since it's all one
long process.

> -> Do I need a thread for every copy/move operation (large files via network)?

Nope. That's the beauty of twisted code. I've written this sort of handling
multiple packet trains many times. Write a protocol. There are two ways to
do this. First, you can write one protocol per file transfer. The factory
sets up the protocol to do the file transfer. At the end of the file, the
protocol then saves the file to disk and tears down the connection. Then
on return to the factory, the factory can call the code to write the PDF
file. The protocol code simply shovels the data from the network to a file.
As each packet arrives, it executes for a short period of time before
returning (which releases control back to the reactor). No blocking is
necessary at all. The protocol itself will be little more than a modification
of the Echo example protocol except you may want to add some headers or
something to send a file size and/or CRC to make sure that the file comes
through intact.

> Another part reads some XML files (using minidom) and writes the mangled content into a database.
> I guess I can't split XML parsing into smaller non-blocking portions -> one thread for every file?

I ran into long processing problems before. There's a simple solution. Pick
something convenient such as simply chunking everything up into processing one
line at a time. Store your state in a "utility class". A utility class is
something like this:

class Utility:
    pass

Then you can store anything you want. First, initialize it:
storage = Utility()

Then attach whatever data you need for your state:
storage.data = something
storage.header = something else.

Then, whenever you want to chunk your code into discrete steps, simply pass
it along in a chain of functions, each one ending with:

reactor.calllater(0.0001, nextstep, storage)

The functions will look like:

def nextstep(storage):
    ...

There are some other ways of handling this. You can get really creative with
your constructs using deferreds. And the Flow module allows you to go even
further than the hard coded version I'm suggesting here. Try reading through
the Flow module documentation. Just don't get hung up about using it. For my
purposes, it was usually better just to have the basic concept in mind than
to actually use Flow.

> For the database stuff I'm using runInteraction, seems to be the best solution.

Yep. Frequently, this is where I'd run a deferred() just after sending the
request to the known-to-be-slow process. Read that section carefully too. Then
your code gets called back immediately when the process completes. You will
need to understand deferred's to fully utilize twisted's threading interface,
and then you'll realize that you probably don't need threads.

> A general issue is logging. I'm used to log4perl/log4net (same as log4j from apache), but dropped log4py in favour of the similar Python 2.3 standard logging. I already asked in my last mail to this list how I can integrate that with twisted. 
> -> Is it possible to get correct linenumbers if using deferreds? Or can I trust logging to be non-blocking?

Deferred's work fine. It's just a programming construct that is a work-around
for a lack of a real continuation. On the other hand, deferred's are much
easier to use than continuations. The code seems VERY unnatural to write at
first but once you get used to it, deferred's seem just well...obvious.

As to logging itself...it might be easier to just write your own. Usually I
haven't been overly thrilled with the mechanical-looking output of
off-the-shelf loggers and logging is little more than just printing to a file
anyways, sometimes with some extra (chop it up and reclaim space) features
added.



From radeex at gmail.com  Thu Mar 10 15:44:42 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:44:42 +1100
Subject: [Twisted-Python] Developers, I need your help with 2.0
In-Reply-To: <cba01a4105030906572bd38b40@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
	<20050309141743.GA52519@ik.nu>
	<cba01a4105030906572bd38b40@mail.gmail.com>
Message-ID: <60ed19d40503101444311c6b13@mail.gmail.com>

On Wed, 9 Mar 2005 07:57:27 -0700, Dave Smith <dizzyd at gmail.com> wrote:
> I am David "dizzy" Smith, and I endorse this message. :)

> On Wed, 9 Mar 2005 15:17:43 +0100, Ralph Meijer <twisted at ralphm.ik.nu> wrote:
> > In short, and in agreement with Dave, I'd like to offer maintainership of these
> > modules. I have some plans about future developments, but that can be discussed
> > later, I guess.

Well, ok. I suggest people commit ralphm's patches if they have unit
tests and seem reasonable. Eventually we can work out SVN access (man
I wish we had separate repositories).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From golux at comcast.net  Thu Mar 10 15:45:53 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 10 Mar 2005 17:45:53 -0500
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <60ed19d40503101432e8e5744@mail.gmail.com>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
	<60ed19d40503101432e8e5744@mail.gmail.com>
Message-ID: <4230CE21.2080502@comcast.net>

Christopher Armstrong wrote:
> On Thu, 10 Mar 2005 16:13:26 -0500, James Y Knight <foom at fuhm.net> wrote:
> 
>>On the other hand, perhaps all we really want is a single human-edited
>>changes file, describing in a bit more detail than the 1.3 NEWS file
>>what's changed, but more concise than a full changelog. What do people
>>think?
> 
> +1, sounds good to me.

I agree.  If people want more detail than is in NEWS, they should
probably just subscribe to the commits list anyway (as I did), or
they can access the svn logs themselves as desired.

Steve



From radeex at gmail.com  Thu Mar 10 15:51:17 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 11 Mar 2005 09:51:17 +1100
Subject: [Twisted-Python] Bug Squashing Weekend
In-Reply-To: <60ed19d405030901547b5d4bd6@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
Message-ID: <60ed19d40503101451505fc6a9@mail.gmail.com>

On Wed, 9 Mar 2005 20:54:25 +1100, Christopher Armstrong
<radeex at gmail.com> wrote:
> First, please take a look at the bug tracker. There are a few urgent
> issues left which I'm interested in, as well as a bunch of
> trivial-looking [PATCH]es that would be cool to get in for 2.0. I plan
> on doing some of that this weekend.

Is anyone interested in making this a more official "bug squashing
party" for the weekend? Is anyone willing to allocate some time
specifically to going through the tracker and bashing bugs this
weekend? (I'll be available for all of it).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From itamar at itamarst.org  Thu Mar 10 16:09:11 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 10 Mar 2005 18:09:11 -0500
Subject: [Twisted-Python] Bug Squashing Weekend
In-Reply-To: <60ed19d40503101451505fc6a9@mail.gmail.com>
References: <60ed19d405030901547b5d4bd6@mail.gmail.com>
	<60ed19d40503101451505fc6a9@mail.gmail.com>
Message-ID: <1110496151.28534.188.camel@sheriffpony>

On Fri, 2005-03-11 at 09:51 +1100, Christopher Armstrong wrote:

> Is anyone interested in making this a more official "bug squashing
> party" for the weekend? Is anyone willing to allocate some time
> specifically to going through the tracker and bashing bugs this
> weekend? (I'll be available for all of it).

If we do this - assign the bug you are looking at to yourself, so other
people don't spend time on same bug.




From jarrod.roberson at gmail.com  Thu Mar 10 16:14:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu, 10 Mar 2005 18:14:44 -0500
Subject: [Twisted-Python] multicast multi-listen not working or just not
	working on OSX?
In-Reply-To: <1110491479.28536.185.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
	<2389d47305031011147d5be7e1@mail.gmail.com>
	<1110484621.28542.180.camel@sheriffpony>
	<2389d473050310131958f19ae9@mail.gmail.com>
	<1110491479.28536.185.camel@sheriffpony>
Message-ID: <2389d47305031015145cd73cf@mail.gmail.com>

On Thu, 10 Mar 2005 16:51:19 -0500, Itamar Shtull-Trauring
<itamar at itamarst.org> wrote:
> On Thu, 2005-03-10 at 16:19 -0500, jarrod roberson wrote:
> 
> > I got zope.interface installed and everything is working but I am
> > getting lots of exceptions related to unicode and what not.
> 
> There's a reason it's in the sandbox.
> 

:-)

Thanks for the help, I have a basic twisted mDNSListener working now
in very few lines of code.
When I get the mDNSResponder finished I will post that back to
community. Maybe it might even make it into twisted proper :-)

When I get it a little more full features I will post links to my code
for other peoples use.



From db3l at fitlinxx.com  Thu Mar 10 16:05:00 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 10 Mar 2005 18:05:00 -0500
Subject: [Twisted-Python] Re: Python properties and pb.Referenceable...
References: <20050309191758.66574.qmail@web31513.mail.mud.yahoo.com>
	<60ed19d40503091454a3c7299@mail.gmail.com>
	<422F9BA9.2050805@peak.org> <422FADBF.1090506@peak.org>
Message-ID: <ull8vp0f7.fsf@fitlinxx.com>

Jasper <jasper at peak.org> writes:

> Turns out that the simple hack of Client( object, pb.Referenceable )
> seems to work.  Sorry for the trouble!

One problem you might then run into is that the jelly layer doesn't
like passing new style objects.  In our case we just patched jelly.py
to handle them (using a suggested change from twisted bug 462 I
believe).

-- David




From alengarbage at yahoo.com  Thu Mar 10 16:46:42 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 10 Mar 2005 15:46:42 -0800 (PST)
Subject: [Twisted-Python] POSTing http requests
In-Reply-To: 6667
Message-ID: <20050310234642.89487.qmail@web31508.mail.mud.yahoo.com>

How do I correctly set up the payload for a POST file
upload?  I see that I can add a "method='POST'" and
"postdata=something" to getPage(), but it's that
'something' that I'm stuck on.  I'm wondering if there
isn't a convenience method for putting the right stuff
in the HTTP header (Content-Type: multipart...") and
in the body (-----seperator, etc).

I haven't been able to find an answer in the mailing
list for the above (and google doesn't seem to know,
either), but I'm sure there's a really simple way to
do it.

    Thanks in advance
    Lenny G.


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - 250MB free storage. Do more. Manage less. 
http://info.mail.yahoo.com/mail_250



From alengarbage at yahoo.com  Thu Mar 10 22:32:11 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Thu, 10 Mar 2005 21:32:11 -0800 (PST)
Subject: [Twisted-Python] POSTing http requests
In-Reply-To: 6667
Message-ID: <20050311053211.50552.qmail@web31513.mail.mud.yahoo.com>


  I just realized that this is a bit more involved
than I at first expected.  It would be nice to be able
to send the upload request without holding all of
postdata in memory, and getPage(), even when I get
past the below problem (which can be done by calling
something like encode_multipart_formdata() as defined
at
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/146306),
doesn't seem to allow for that.

  Fabian Seisen's urllib2_file at
http://fabien.seisen.org/python/urllib2_multipart.html,
 does work without requiring the upload to sit in
memory all at once, but it doesn't appear to be
asynchronous and it doesn't appear to work with Python
2.4 right now, either.

  Is there some way I can make this work with
HTTPClientFactory?  If not, what should I be looking
at?  In the case of large file uploads, wouldn't it be
advisable to send the headers/seperators first, then
do a chunk by chunk read of the file and send these
chunks one at a time (but in quick succession).  To do
that, it seems like a write() method is necessary --
is that in the IConsumer interface?

  Thanks for any guidance you can give me -- as you
can tell I'm new to twisted.

    Thanks
    Lenny G.


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> How do I correctly set up the payload for a POST
> file
> upload?  I see that I can add a "method='POST'" and
> "postdata=something" to getPage(), but it's that
> 'something' that I'm stuck on.  I'm wondering if
> there
> isn't a convenience method for putting the right
> stuff
> in the HTTP header (Content-Type: multipart...") and
> in the body (-----seperator, etc).
> 
> I haven't been able to find an answer in the mailing
> list for the above (and google doesn't seem to know,
> either), but I'm sure there's a really simple way to
> do it.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From andrea at cpushare.com  Fri Mar 11 01:59:53 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Fri, 11 Mar 2005 09:59:53 +0100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
Message-ID: <20050311085952.GK26348@opteron.random>

On Thu, Mar 10, 2005 at 04:14:52PM -0500, James Y Knight wrote:
> No, you've got the situation backwards. The situation doesn't involve 
> any hanging, it involves possible data loss of the last packet. We will 
> make a single attempt to do the final write (via calling SSL_shutdown), 
> and if it fails to write because of some transient error, we have no 
> way to know, so we close the connection anyways, even though we 
> should've retried.

Thanks for the explanation. I've also got those messages, could you post
the patch so I can apply it to pyOpenSSL until it's merged? Thanks.



From Henning.Ramm at mediapro-gmbh.de  Fri Mar 11 03:31:09 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Fri, 11 Mar 2005 11:31:09 +0100
Subject: [Twisted-Python] App design / Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E653@exchange-03.suedkurier.de>

Paul, thank you very much for taking the time to answer my confusion.

>> -> Do I need a thread for every copy/move operation (large 
>files via network)?
>
>Nope. That's the beauty of twisted code. I've written this 
>sort of handling
>multiple packet trains many times. Write a protocol.

Hm, sounds like using FTP and not shutil.move via system's SMB?
Or is there already something better in twisted?

If I'd write my own protocol to wrap shutil.move,
the operation would be blocking because I don't
work on file block level and the protocol doesn't make sense.
I'm not feeling like writing file transfer code on file block level.
Or do you think it would be worth the hassle?

>> Another part reads some XML files (using minidom) and writes 
...
>I ran into long processing problems before. There's a simple 
>solution. Pick
>something convenient such as simply chunking everything up 
>into processing one line at a time.

So not using DOM but per-line XML handling.
Not that convenient, because I use only small bits
of all the XML data that are spread all over the files,
but I guess it would become better twisted code.

>your constructs using deferreds. And the Flow module allows 
>you to go even
>further than the hard coded version I'm suggesting here. Try 
>reading through
>the Flow module documentation. Just don't get hung up about 
>using it. For my
>purposes, it was usually better just to have the basic concept 
>in mind than to actually use Flow.

That's perhaps a general problem with twisted: There are great
solutions for everything, but you need to know them in detail
to know which fits your problem. Or you must know how you should
reshape your problem to fit in some twisted solution...

I know twisted "does it all"(TM), but was is "it"? ;-)


>Yep. Frequently, this is where I'd run a deferred() just after 
>sending the request to the known-to-be-slow process.
>Read that section carefully too. Then
>your code gets called back immediately when the process 
>completes. You will
>need to understand deferred's to fully utilize twisted's 
>threading interface,
>and then you'll realize that you probably don't need threads.

I'm just trying to write a simple directory watcher (I need
this at every corner of my app), Patrick Lauber wrote an answer
to my initial question on that, but that wasn't really what I needed.

It works so far that it calls a deferred callback if it gets a
notify on a new/changed file, but only once; next time I get an
"AlreadyCalledError" - looks like I don't yet understand deferreds.

At the moment it's inherited from pb.Root, because I'll need it to
run remotely sometimes, but perhaps it would be better to use a
service or something else -- it should run "all the time" if not
stopped and call a callback for every file.
I attached the file, perhaps someone can point out my biggest mistakes?


>first but once you get used to it, deferred's seem just well...obvious.

I hope to get into that higher state of mind soon. ;-)

>As to logging itself...it might be easier to just write your 
>own. Usually I
>haven't been overly thrilled with the mechanical-looking output of
>off-the-shelf loggers and logging is little more than just 
>printing to a file
>anyways, sometimes with some extra (chop it up and reclaim 
>space) features added.

I enjoyed being able to switch the logging output, e.g. from file to
database or email per config file without the need to go into the code.
I don't feel like re-inventing the wheel, but as Glyph pointed out,
the config syntax of standard logging is just ugly and messy; the
config syntax of log4[j|perl|net] ist much more logical. Perhaps
someone should write a log4twisted module...


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dirwatcher.py
Type: application/octet-stream
Size: 2570 bytes
Desc: dirwatcher.py
URL: </pipermail/twisted-python/attachments/20050311/1e803d04/attachment-0002.obj>

From justinjohnson at gmail.com  Fri Mar 11 07:01:29 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 11 Mar 2005 08:01:29 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e7050110191537664713@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
Message-ID: <94a776e705031106014270dafe@mail.gmail.com>

Dave,

Can you comment again on what you think should be done here?  I'd like
to get this functionality into 2.0 if possible.  If you're okay with
my patch than I will try to get the tests written before the release. 
Otherwise I'm wondering if there is an alternative implementation that
can be added before the release.  I'd prefer not having to maintain
local mods to Twisted.

As a reminder for anyone else reading this, this is related to
http://twistedmatrix.com/bugs/issue844.

Thanks.
Justin


On Mon, 10 Jan 2005 21:15:08 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> See comments below.
> 
> On 07 Jan 2005 16:20:08 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> [snip]
> >
> > Sorry on the delay - holidays and then I forgot about it :-(
> >
> > I'm still on the fence with respect to having independent "jellyable"
> > checks.  My concern would be that having the independent checks of
> > what is suitable for jellying can be fragile with respect to coupling
> > with the actual jelly operation.  Even with the jellyable and security
> > checks there are some paths in the jellier code that could still fail
> > the operation.
> 
> Can you clarify here?  What paths are you referring to?  I'd prefer to
> not duplicate those checks as well, but it seemed like the simplist
> way to accomplish my goal.  It does sound like your understanding of
> the code is better than mine though.
> 
> > I also think I liked your earlier attempts at keeping the change
> > within the CopyableFailure class (I may have missed why that changed),
> > although even there you'd have a double jelly since you'd have to
> > check the jelly attempt in getStateToCopy.  Although alternatively,
> > CopyableFailure could just implement its own jellyFor (rather than
> > getStateToCopy) which handled that more gracefully and with a single
> > jelly attempt on the value.
> >
> > -- David
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
>



From justinjohnson at gmail.com  Fri Mar 11 07:02:40 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Fri, 11 Mar 2005 08:02:40 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <94a776e705031106014270dafe@mail.gmail.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
Message-ID: <94a776e705031106023658a2c1@mail.gmail.com>

On Fri, 11 Mar 2005 08:01:29 -0600, Justin Johnson
<justinjohnson at gmail.com> wrote:
> Dave,

I mean David.  :-)



From thomas at apestaart.org  Fri Mar 11 07:29:09 2005
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Fri, 11 Mar 2005 15:29:09 +0100
Subject: [Twisted-Python] [OT] Looking for Twisted/Python developers
Message-ID: <1110551349.6606.67.camel@otto.amantes>

Hi,

Fluendo (http://www.fluendo.com) is looking for someone interested in
developing on some of the products we're working on.  We are looking for
someone well-versed or willing to get up to speed with Twisted and
Python.  The initial focus would be on working on our on-demand
streaming platform integrated with Flumotion, our live streaming server.
Willingness to relocate to Spain is a plus but not absolutely necessary.

Questions, queries, sample projects, CV: send to me.

Thanks,
Thomas


Dave/Dina : future TV today ! - http://www.davedina.org/
<-*- thomas (dot) apestaart (dot) org -*->
I should dress you up in pearl
Finest silk to touch your skin
Don't know how to write a love song
But don't leave
<-*- thomas (at) apestaart (dot) org -*->
URGent, best radio on the net - 24/7 ! - http://urgent.fm/






From tv at twistedmatrix.com  Fri Mar 11 09:34:59 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 11 Mar 2005 18:34:59 +0200
Subject: [Twisted-Python] multicast multi-listen not working or just	not
	working on OSX?
In-Reply-To: <1110473036.28542.165.camel@sheriffpony>
References: <2389d47305031008121bc8a882@mail.gmail.com>
	<1110473036.28542.165.camel@sheriffpony>
Message-ID: <4231C8B3.2010503@twistedmatrix.com>

Itamar Shtull-Trauring wrote:
> On Linux there seems to be a movement to standardize on the howl
> mdnsresponder, but that'll take a while. Probably you want your mdns
> library to use system version if available, otherwise its own.

ITYM http://www.freedesktop.org/Software/Avahi, HTH, HAND.



From tv at twistedmatrix.com  Fri Mar 11 09:40:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 11 Mar 2005 18:40:48 +0200
Subject: [Twisted-Python] ChangeLog
In-Reply-To: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
References: <73cbf4a194b5979458d07f2bb02d2115@fuhm.net>
Message-ID: <4231CA10.2080100@twistedmatrix.com>

James Y Knight wrote:
> On the other hand, perhaps all we really want is a single human-edited 
> changes file, describing in a bit more detail than the 1.3 NEWS file 
> what's changed, but more concise than a full changelog. What do people 
> think?

What I do with ldaptor is take the SVN commit messages, clean them up,
categorize and prioritize. People who want just high-level can read
the first section only, people who are only admins/users can read the
first two sections, and developers can pick the parts they are
interested in. I also take care to trim out anything that isn't relevant
-- e.g. things that are a continuation of work committed after 0.0.30
was released. On the other hand, I don't bother providing a NEWS file,
atleast for now.

Looks like this:

ldaptor (0.0.31) unstable; urgency=low

   * Conceptual changes:
     - Service-specific passwords: added a mechanism that allows having
       "subpasswords" that are only used with particular services; e.g.
       let the userPassword attribute be used only for SSH logins, and use
       additional "mail" and "web" password, stored in an attribute called
       "servicePassword". The value is two whitespace-separated fields:
       service name and userPassword-style password digest. See
       ServiceBindingProxy for more.
     - LDIFTree allows LDAP server data storage an a one entry per file
       format, with nice unixy semantics.

   * Applications changes:
     - WebUI:
       - Add pretty label to search form submit button.
       - Service-specific password editing support. Closes: ldaptor#17.
     - Server:
       - New LDIFTree storage backend, storing the LDAP as a filesystem
         directory tree, with one entry per file in LDIF format.
       - Add LDAP proxy support.
       - Add ServiceBindingProxy, an LDAP proxy that handles non-anonymous
         bind requests specially. Closes: ldaptor#15.

   * API changes:
     - Get rid of MutableString:
       - Add pureber.berDecodeObject, remove pureber.ber2object.
       - Add pureber.berDecodeLength, remove pureber.berlen2int.
       - Switch LDAPClient and LDAPServer buffers to be plain strings.
       - Remove MutableString.
     - Change the BER decoding mechanism:
       - Add classmethod fromBER instead of using __init__ in two
         roles.
       - Remove old-style decode support.
     - Add pureber.berDecodeMultiple, mainly for use by subclasses of
       BERSequence.
     - Large lengths appeared to be negative, switched berlen2int to
       using longs.
     - Split LDAPServer to BaseLDAPServer, so one has a choice of
       inheriting something without any handle_* methods.
     - Make ldapsyntax.LDAPEntryWithClient.move() remove the old RDN.
     - Make ldapsyntax.LDAPEntryWithClient.move() change the entry's idea
       of its own DN.

   * Refactorings to adapt to Ldaptor APIs:
     - Use connectAnonymously in parallelsearch example.

   * Refactorings to adapt to Twisted/Nevow APIs:
     - Nevow ISerializable is deprecated.
     - ctx.{allPatterns,patternGenerator} are now called
       ctx.tag.allPatterns etc.
     - all IRequest APIs take a context.
     - switch from getDynamicChild to childFactory.
     - addSlash where appropriate.
     - return URLs instead of explicit redirects.
     - switch from renderHTTP to child_.
     - switch from locateChild to childFactory.
     - Twisted >1.3 moves SRVConnector to twisted.names.srvconnect.

   * Bugfixes:
     - Fix BER length encoding for lengths greater than 127, add unit
       tests.
     - Make many __repr__'s work even when __init__ failed.
     - Make sure every LDAP wire class takes a tag argument.
     - Make LDAPDelRequest also understand keyword argument value, as
       that is what LDAPString uses.
     - Fix and test handling of unknown match types.
     - Fix and unit test saltless non-client setPassword.
     - Fix DistinguishedName order comparison.
     - Make sure configuration does not interfere with the lmPasswords in
       the unit tests.
     - Make nevow data access to LDAP entry attributes work.
     - Add items() to LDAPEntry IContainer adapter's attributes child;
       webui search needs it.
     - Webui edit can now edit attributes that are in the RDN. Closes:
       ldaptor#5.
     - Improve handling of missing baseDN in configuration.

   * Cleanups:
     - Remove dead code.
     - Remove the hack-and-slashed RFC file that served as a TODO note.
     - Override IOPump to pass around more than one byte at a time, saves
       >10 seconds in unit tests and protocol decoding of partial messages
       is unit tested elsewhere anyway.
     - Improve ldaptor.testutil error messages, accept any true/false value
       and not just 1 and 0.
     - Clean up LDAPServer.handleUnknown.
     - Prettify LDAPMessage.__repr__
     - Prettify LDAPResult.__repr__
     - If ldapsyntax.LDAPEntryWithClient.search gets a bad response from
       the LDAP server, raise a real exception and not an assert.
     - When converting delta Modifications to LDAP, convert them to basic
       data types for easier debugging and unit testing.
     - Be consistent and use "ctx" everywhere in webui change_password.
     - Add nevow renderer that produces zebra tables.
     - Make ldapsyntax.LDAPEntryWithClient.move() accept strings etc. as
       newDN, add unit test.
     - Make epydoc happy.
     - Simplify ldap-intro document generation.

   * Packaging:
     - Depend on Nevow v0.3.0 or later.
     - Depend on Twisted v1.3.0 or later.
     - Switch to CDBS.
     - Add an ldaptor-common package to contain conffiles.
     - Run unit tests before building debs.
     - Include the unit tests in the distributed files.

   * Administrivia:
     - Add TODO notes.
     - Update ignore file lists to match currently generated files.
     - Export dia files to format png-libart, not just png. This makes the
       export reliable. Hint from Debian bug#275959.

  -- Tommi Virtanen <tv at debian.org>  Fri, 10 Dec 2004 17:39:36 +0200



From foom at fuhm.net  Fri Mar 11 09:55:31 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 11 Mar 2005 11:55:31 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <20050311085952.GK26348@opteron.random>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
	<20050311085952.GK26348@opteron.random>
Message-ID: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>

On Mar 11, 2005, at 3:59 AM, Andrea Arcangeli wrote:
> Thanks for the explanation. I've also got those messages, could you 
> post
> the patch so I can apply it to pyOpenSSL until it's merged? Thanks.

Here ya go. The last file is actually an unrelated patch that lets you 
pass None as the verify callback instead of using an empty lambda.

James

Index: src/ssl/connection.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/connection.c,v
retrieving revision 1.28
diff -u -r1.28 connection.c
--- src/ssl/connection.c        6 Aug 2004 10:21:56 -0000       1.28
+++ src/ssl/connection.c        23 Feb 2005 02:42:29 -0000
@@ -756,6 +756,43 @@
      return Py_None;
  }

+static char ssl_Connection_get_shutdown_doc[] = "\n\
+Get shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be empty\n\
+Returns:   The shutdown state, a bitmask of SENT_SHUTDOWN, 
RECEIVED_SHUTDOWN.\n\
+";
+static PyObject *
+ssl_Connection_get_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    if (!PyArg_ParseTuple(args, ":get_shutdown"))
+        return NULL;
+
+       return PyInt_FromLong((long)SSL_get_shutdown(self->ssl));
+}
+
+static char ssl_Connection_set_shutdown_doc[] = "\n\
+Set shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be\n\
+             shutdown state - bitmask of SENT_SHUTDOWN, 
RECEIVED_SHUTDOWN.\n\
+Returns:   None\n\
+";
+static PyObject *
+ssl_Connection_set_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    int shutdown;
+
+    if (!PyArg_ParseTuple(args, "i:set_shutdown", &shutdown))
+        return NULL;
+
+       SSL_set_shutdown(self->ssl, shutdown);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
  static char ssl_Connection_state_string_doc[] = "\n\
  Get a verbose state description\n\
  \n\
@@ -888,6 +925,8 @@
      ADD_METHOD(makefile),
      ADD_METHOD(get_app_data),
      ADD_METHOD(set_app_data),
+    ADD_METHOD(get_shutdown),
+    ADD_METHOD(set_shutdown),
      ADD_METHOD(state_string),
      ADD_METHOD(sock_shutdown),
      ADD_METHOD(get_peer_certificate),
Index: src/ssl/ssl.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/ssl.c,v
retrieving revision 1.12
diff -u -r1.12 ssl.c
--- src/ssl/ssl.c       10 Aug 2004 21:42:51 -0000      1.12
+++ src/ssl/ssl.c       23 Feb 2005 02:42:30 -0000
@@ -180,6 +180,10 @@
      PyModule_AddIntConstant(module, "OP_NETSCAPE_CA_DN_BUG", 
SSL_OP_NETSCAPE_CA_DN_BUG);
      PyModule_AddIntConstant(module, 
"OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG", 
SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG);

+       /* For SSL_set_shutdown */
+    PyModule_AddIntConstant(module, "SENT_SHUTDOWN", 
SSL_SENT_SHUTDOWN);
+    PyModule_AddIntConstant(module, "RECEIVED_SHUTDOWN", 
SSL_RECEIVED_SHUTDOWN);
+
      dict = PyModule_GetDict(module);
      if (!init_ssl_context(dict))
          goto error;
Index: src/ssl/context.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/context.c,v
retrieving revision 1.17
diff -u -r1.17 context.c
--- src/ssl/context.c   6 Aug 2004 10:21:56 -0000       1.17
+++ src/ssl/context.c   23 Feb 2005 02:42:29 -0000
@@ -562,8 +562,8 @@

      if (!PyArg_ParseTuple(args, "iO:set_verify", &mode, &callback))
          return NULL;
-
-    if (!PyCallable_Check(callback))
+
+    if (callback != Py_None && !PyCallable_Check(callback))
      {
          PyErr_SetString(PyExc_TypeError, "expected PyCallable");
          return NULL;
@@ -572,8 +572,11 @@
      Py_DECREF(self->verify_callback);
      Py_INCREF(callback);
      self->verify_callback = callback;
-    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
-
+       if (callback == Py_None)
+               SSL_CTX_set_verify(self->ctx, mode, NULL);
+       else
+               SSL_CTX_set_verify(self->ctx, mode, 
global_verify_callback);
+
      Py_INCREF(Py_None);
      return Py_None;
  }





From glyph at divmod.com  Fri Mar 11 10:14:25 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Fri, 11 Mar 2005 12:14:25 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>	<20050311085952.GK26348@opteron.random>
	<7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
Message-ID: <4231D1F1.4010509@divmod.com>

James Y Knight wrote:

> Here ya go. The last file is actually an unrelated patch that lets you 
> pass None as the verify callback instead of using an empty lambda.

As long as you're writing unrelated patches for PyOpenSSL, how about 
adding an accessor for the expiration date of a certificate? :)



From jason at smileproject.com  Fri Mar 11 14:31:21 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Fri, 11 Mar 2005 16:31:21 -0500
Subject: [Twisted-Python] twisted installation mac
Message-ID: <200503111631.AA5112090@mail.smileproject.com>

Hi, 

I am attempting to install twisted on os x.3.  I did not find the package in the package manager as the installation instructions suggest.  I found this thread here:  http://twistedmatrix.com/pipermail/twisted-python/2005-February/009613.html - 
but it does not state what installation to use.  Can someone please point me in the right direction?

Thank You, 
J 



From jadestorm at nc.rr.com  Fri Mar 11 14:53:03 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Fri, 11 Mar 2005 16:53:03 -0500 (EST)
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <200503111631.AA5112090@mail.smileproject.com>
References: <200503111631.AA5112090@mail.smileproject.com>
Message-ID: <36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>

If you are a fink user, I build a fink package for twisted. 
http://fink.sourceforge.net/
http://fink.sourceforge.net/pdb/search.php?summary=twisted

(it's in the unstable tree though)

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> Hi,
>
> I am attempting to install twisted on os x.3.  I did not find the package
> in the package manager as the installation instructions suggest.  I found
> this thread here:
> http://twistedmatrix.com/pipermail/twisted-python/2005-February/009613.html
> -
> but it does not state what installation to use.  Can someone please point
> me in the right direction?
>
> Thank You,
> J
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From jason at smileproject.com  Fri Mar 11 15:15:36 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Fri, 11 Mar 2005 17:15:36 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>
References: <200503111631.AA5112090@mail.smileproject.com>
	<36085.152.1.4.40.1110577983.squirrel@www.vorpalcloud.org>
Message-ID: <90a1cef53afabc9e2d990be85b9dede3@smileproject.com>

Thanks - but  I am still a bit stunted on the linux lingo.  Is this  
straight forward?

J


On Mar 11, 2005, at 4:53 PM, Daniel Henninger wrote:

> If you are a fink user, I build a fink package for twisted.
> http://fink.sourceforge.net/
> http://fink.sourceforge.net/pdb/search.php?summary=twisted
>
> (it's in the unstable tree though)
>
> Daniel
>
> --  
> "The most addictive drug in the world is music."
>      - The Lost Boyz
>
>> Hi,
>>
>> I am attempting to install twisted on os x.3.  I did not find the  
>> package
>> in the package manager as the installation instructions suggest.  I  
>> found
>> this thread here:
>> http://twistedmatrix.com/pipermail/twisted-python/2005-February/ 
>> 009613.html
>> -
>> but it does not state what installation to use.  Can someone please  
>> point
>> me in the right direction?
>>
>> Thank You,
>> J
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>
>




From jarrod.roberson at gmail.com  Fri Mar 11 15:51:41 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 11 Mar 2005 17:51:41 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <200503111631.AA5112090@mail.smileproject.com>
References: <200503111631.AA5112090@mail.smileproject.com>
Message-ID: <2389d47305031114516a7a4aee@mail.gmail.com>

just get the latest stable version 1.3 and all you have to do is run
the setup.py to install it.

or you can do as I have had to and get the latest build from the
subversion repository and just install that.

Very simple and very straight foward with either way, once you get it
un-tar/zipped just cd to where ever the setup.py program is and

sudo setup.py all install

it will take care of installing itself in the correct places



From jarrod.roberson at gmail.com  Fri Mar 11 16:31:44 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 11 Mar 2005 18:31:44 -0500
Subject: [Twisted-Python] sending queries and responses with the new dns
	module
Message-ID: <2389d47305031115312c629933@mail.gmail.com>

can someone give me a quick code snippet on how to say construct and
send a simple query and construct and send a simple response using the
new dns module?

I have a nice mdns listener written and I can see all the traffic
flying around but I have not had any luck in sending queries or
responses . . .



From mcfletch at rogers.com  Fri Mar 11 17:37:50 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Fri, 11 Mar 2005 19:37:50 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050309013462785b23@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
Message-ID: <423239DE.9050208@rogers.com>

Christopher Armstrong wrote:
...

>Despite the crappy web presence, this is a real 2.0 prerelease. I will
>try to get this published to the web site by this weekend.  Please
>download anything relevant to you and give it a try, and be sure to
>post your experience to this thread even if it went smoothly.
>  
>
Built fine on FreeBSD, but I wound up having a problem with the older 
version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible with 
Twisted (crashed somewhere deep in twisted trying to manipulate 
something in the interface module IIRC), once the old Zope was removed 
and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything 
ran fine.

Have fun,
Mike

________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From radeex at gmail.com  Fri Mar 11 18:07:08 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Mar 2005 12:07:08 +1100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <423239DE.9050208@rogers.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<423239DE.9050208@rogers.com>
Message-ID: <60ed19d4050311170745302526@mail.gmail.com>

On Fri, 11 Mar 2005 19:37:50 -0500, Mike C. Fletcher
<mcfletch at rogers.com> wrote:
> Built fine on FreeBSD, but I wound up having a problem with the older
> version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible with
> Twisted (crashed somewhere deep in twisted trying to manipulate
> something in the interface module IIRC), once the old Zope was removed
> and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything
> ran fine.

Thanks a lot, I'll mention this in README files.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From foom at fuhm.net  Fri Mar 11 18:52:25 2005
From: foom at fuhm.net (James Y Knight)
Date: Fri, 11 Mar 2005 20:52:25 -0500
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <60ed19d4050311170745302526@mail.gmail.com>
References: <60ed19d4050309013462785b23@mail.gmail.com>
	<423239DE.9050208@rogers.com>
	<60ed19d4050311170745302526@mail.gmail.com>
Message-ID: <409dffc50df69259c336c03ec14b7566@fuhm.net>


On Mar 11, 2005, at 8:07 PM, Christopher Armstrong wrote:

> On Fri, 11 Mar 2005 19:37:50 -0500, Mike C. Fletcher
> <mcfletch at rogers.com> wrote:
>> Built fine on FreeBSD, but I wound up having a problem with the older
>> version of Zope (ZopeX3-0.0m4) whose interfaces were not compatible 
>> with
>> Twisted (crashed somewhere deep in twisted trying to manipulate
>> something in the interface module IIRC), once the old Zope was removed
>> and replaced with a later version of Zope (ZopeX3-3.0.0c1) everything
>> ran fine.
>
> Thanks a lot, I'll mention this in README files.

Twisted requires Zope-Interface >= 3.0.1. (it will *mostly* work with 
previous versions, but there is a subtle bug). We need to mention that. 
I don't know what version of ZopeX includes that version, but if we're 
going to tell people about Zope at all (vs Zope-Interface), we need to 
make sure to get the version right.

James




From foom at fuhm.net  Fri Mar 11 23:44:45 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 12 Mar 2005 01:44:45 -0500
Subject: [Twisted-Python] NEWS file
Message-ID: <90de319edead3c540010341e838bbf66@fuhm.net>

Devs, please read the NEWS file, and if there's anything missing, add  
it.

http://svn.twistedmatrix.com/cvs/trunk/twisted/topfiles/NEWS? 
view=auto&rev=13133&root=Twisted

James




From radeex at gmail.com  Sat Mar 12 00:13:26 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sat, 12 Mar 2005 18:13:26 +1100
Subject: [Twisted-Python] NEWS file
In-Reply-To: <90de319edead3c540010341e838bbf66@fuhm.net>
References: <90de319edead3c540010341e838bbf66@fuhm.net>
Message-ID: <60ed19d4050311231311da2ad0@mail.gmail.com>

On Sat, 12 Mar 2005 01:44:45 -0500, James Y Knight <foom at fuhm.net> wrote:
> Devs, please read the NEWS file, and if there's anything missing, add
> it.
> 
> http://svn.twistedmatrix.com/cvs/trunk/twisted/topfiles/NEWS?
> view=auto&rev=13133&root=Twisted

I split out all of the non-core news out of that file into individual
NEWS files for each project. That file notw only has the twisted core
news. See twisted/yourproj/topfiles/NEWS.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From jason at smileproject.com  Sat Mar 12 06:15:13 2005
From: jason at smileproject.com (Jason Van Anden)
Date: Sat, 12 Mar 2005 08:15:13 -0500
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <2389d47305031114516a7a4aee@mail.gmail.com>
References: <200503111631.AA5112090@mail.smileproject.com>
	<2389d47305031114516a7a4aee@mail.gmail.com>
Message-ID: <3217d6aa4490a3165568af57f15420c6@smileproject.com>

Thanks - that worked.

(I did not include the "all" part in the command - but it seems fine as 
is).

J


On Mar 11, 2005, at 5:51 PM, jarrod roberson wrote:

> just get the latest stable version 1.3 and all you have to do is run
> the setup.py to install it.
>
> or you can do as I have had to and get the latest build from the
> subversion repository and just install that.
>
> Very simple and very straight foward with either way, once you get it
> un-tar/zipped just cd to where ever the setup.py program is and
>
> sudo setup.py all install
>
> it will take care of installing itself in the correct places
>




From andrea at cpushare.com  Sat Mar 12 06:21:39 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sat, 12 Mar 2005 14:21:39 +0100
Subject: [Twisted-Python] Twisted 2.0 prerelease (close!!)
In-Reply-To: <7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
References: <20050310063535.2951.1600668155.divmod.quotient.26878@ohm>
	<2b5002f2ace69ae02821ccbf4413dd95@fuhm.net>
	<20050311085952.GK26348@opteron.random>
	<7bcdefe7917f30a6f202948915bb7ed7@fuhm.net>
Message-ID: <20050312132139.GG9270@opteron.random>

On Fri, Mar 11, 2005 at 11:55:31AM -0500, James Y Knight wrote:
> Here ya go. The last file is actually an unrelated patch that lets you 
> pass None as the verify callback instead of using an empty lambda.

Thanks a lot, works fine, I verified loseConnection now calls
set/get/set shutdown with printf.

I'll bug the pyopenssl maintainer too about this.

This is the patch against CVS head.

Index: pyOpenSSL/src/ssl/connection.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/connection.c,v
retrieving revision 1.28
diff -u -p -r1.28 connection.c
--- pyOpenSSL/src/ssl/connection.c	6 Aug 2004 10:21:56 -0000	1.28
+++ pyOpenSSL/src/ssl/connection.c	12 Mar 2005 13:19:13 -0000
@@ -756,6 +756,43 @@ ssl_Connection_set_app_data(ssl_Connecti
     return Py_None;
 }
 
+static char ssl_Connection_get_shutdown_doc[] = "\n\
+Get shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be empty\n\
+Returns:   The shutdown state, a bitmask of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.\n\
+";
+static PyObject *
+ssl_Connection_get_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    if (!PyArg_ParseTuple(args, ":get_shutdown"))
+        return NULL;
+
+    return PyInt_FromLong((long)SSL_get_shutdown(self->ssl));
+}
+
+static char ssl_Connection_set_shutdown_doc[] = "\n\
+Set shutdown state\n\
+\n\
+Arguments: self - The Connection object\n\
+           args - The Python argument tuple, should be\n\
+             shutdown state - bitmask of SENT_SHUTDOWN, RECEIVED_SHUTDOWN.\n\
+Returns:   None\n\
+";
+static PyObject *
+ssl_Connection_set_shutdown(ssl_ConnectionObj *self, PyObject *args)
+{
+    int shutdown;
+
+    if (!PyArg_ParseTuple(args, "i:set_shutdown", &shutdown))
+        return NULL;
+
+    SSL_set_shutdown(self->ssl, shutdown);
+    Py_INCREF(Py_None);
+    return Py_None;
+}
+
 static char ssl_Connection_state_string_doc[] = "\n\
 Get a verbose state description\n\
 \n\
@@ -888,6 +925,8 @@ static PyMethodDef ssl_Connection_method
     ADD_METHOD(makefile),
     ADD_METHOD(get_app_data),
     ADD_METHOD(set_app_data),
+    ADD_METHOD(get_shutdown),
+    ADD_METHOD(set_shutdown),
     ADD_METHOD(state_string),
     ADD_METHOD(sock_shutdown),
     ADD_METHOD(get_peer_certificate),
Index: pyOpenSSL/src/ssl/context.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/context.c,v
retrieving revision 1.17
diff -u -p -r1.17 context.c
--- pyOpenSSL/src/ssl/context.c	6 Aug 2004 10:21:56 -0000	1.17
+++ pyOpenSSL/src/ssl/context.c	12 Mar 2005 13:19:13 -0000
@@ -244,7 +244,7 @@ ssl_Context_set_passwd_cb(ssl_ContextObj
     if (!PyArg_ParseTuple(args, "O|O:set_passwd_cb", &callback, &userdata))
         return NULL;
 
-    if (!PyCallable_Check(callback))
+    if (callback != Py_None && !PyCallable_Check(callback))
     {
         PyErr_SetString(PyExc_TypeError, "expected PyCallable");
         return NULL;
@@ -572,7 +572,10 @@ ssl_Context_set_verify(ssl_ContextObj *s
     Py_DECREF(self->verify_callback);
     Py_INCREF(callback);
     self->verify_callback = callback;
-    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
+    if (callback == Py_None)
+	    SSL_CTX_set_verify(self->ctx, mode, NULL);
+    else
+	    SSL_CTX_set_verify(self->ctx, mode, global_verify_callback);
 
     Py_INCREF(Py_None);
     return Py_None;
Index: pyOpenSSL/src/ssl/ssl.c
===================================================================
RCS file: /u/cvs/pyopenssl/pyOpenSSL/src/ssl/ssl.c,v
retrieving revision 1.12
diff -u -p -r1.12 ssl.c
--- pyOpenSSL/src/ssl/ssl.c	10 Aug 2004 21:42:51 -0000	1.12
+++ pyOpenSSL/src/ssl/ssl.c	12 Mar 2005 13:19:13 -0000
@@ -180,6 +180,10 @@ do {                                    
     PyModule_AddIntConstant(module, "OP_NETSCAPE_CA_DN_BUG", SSL_OP_NETSCAPE_CA_DN_BUG);
     PyModule_AddIntConstant(module, "OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG", SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG);
 
+    /* For SSL_set_shutdown */
+    PyModule_AddIntConstant(module, "SENT_SHUTDOWN", SSL_SENT_SHUTDOWN);
+    PyModule_AddIntConstant(module, "RECEIVED_SHUTDOWN", SSL_RECEIVED_SHUTDOWN);
+
     dict = PyModule_GetDict(module);
     if (!init_ssl_context(dict))
         goto error;

You folks are doing a great job. Keep up the great work!



From remy.cool at smartology.nl  Sat Mar 12 08:49:12 2005
From: remy.cool at smartology.nl (Remy C Cool)
Date: Sat, 12 Mar 2005 16:49:12 +0100
Subject: [Twisted-Python] Design question: xmlrpc server - deferreds - adbapi
Message-ID: <42330F78.1080300@smartology.nl>

Hello Twisters,

As a Twisted newbie, I'm not sure if, what i've coded is the Twisted way 
to go.

In this test, I've created a simple XMLRPC server

def main():
     # initialize factory
     factory = server.Site(XMLRPC())
     factory.resource.base = factory

     # initialize server
     reactor.listenTCP(8000, factory)

     try:
         try:
             reactor.run()
         except KeyboardInterrupt:
             print 'CTRL-C received, shutting down server.'
         except Exception, err:
             print 'Problem with running server: %s' % err
     finally:
         reactor.stop()


# The XMLRPC class:

class XMLRPC(xmlrpc.XMLRPC):

     def xmlrpc_test(self, text):
	d = defer.maybeDeferred(test, text)
         return d


# The test function

def test(text):
     # do something with the text
     return dbPool.pg.runInteraction(getTestData, text)	


# The getTestData function

def getTestData(cursor, text):
    # do queries using cursor
    return result

dbPool is a class which sets up dbpools for different databases 
according to a config file.

This setup seems to work, but I'm not sure about the way I'm using the 
deferreds.

Comments welcome :)

Grtz,
Remi Cool



From alengarbage at yahoo.com  Sat Mar 12 09:18:28 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sat, 12 Mar 2005 08:18:28 -0800 (PST)
Subject: [Twisted-Python] deferToThread()
In-Reply-To: 6667
Message-ID: <20050312161828.20788.qmail@web31509.mail.mud.yahoo.com>

Can someone explain why the following example (lifted
straight out of
http://twistedmatrix.com/documents/current/howto/threading)
doesn't work?

from twisted.internet import threads

def doLongCalculation():
  #time.sleep(3)
  return 3

def printResult(x):
  print "deferred returned "+str(x)

d = threads.deferToThread(doLongCalculation)
d.addCallback(printResult)
print "just waiting for deferred..."


Running the above, with or without time.sleep(),
results in a hanging process.  When run "just waiting
for deferred..." prints but the callback is never
invoked and the process hangs.

I'm using twisted 1.3, python 2.3.4 under Linux (FC3).

  Lenny G


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From alengarbage at yahoo.com  Sat Mar 12 09:58:40 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sat, 12 Mar 2005 08:58:40 -0800 (PST)
Subject: [Twisted-Python] deferToThread()
In-Reply-To: 6667
Message-ID: <20050312165840.76456.qmail@web31511.mail.mud.yahoo.com>

Answer: the example seems to be incomplete.  The
following changes make things work:


from twisted.internet import reactor, threads
                                                      
                         
def doLongCalculation(y):
  #time.sleep(3)
  print "returning from doLongCalc"
  return 3
                                                      
                         
def printResult(x):
  print "deferred returned "+str(x)
  reactor.stop()
                                                      
                         
d = threads.deferToThread(doLongCalculation, 4)
d.addCallback(printResult)
print "just waiting for deferred..."
reactor.run()


  It isn't clear from the docs that deferToThread
relies on reactor.run() -- the howto states "The
utility methods are not part of the
twisted.internet.reactor APIs, but are implemented in
twisted.internet.threads".  But now, it seems
perfectly clear to me now that, "of course you need
the reactor."   Maybe the examples in the howto should
be updated to make this more clear?  It wasn't until I
found a snippet of code at
http://pig.slug.org.au/talks/Twisted2/slides.html that
I was able to sort this out.

  -- Lenny G


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> Can someone explain why the following example
> (lifted
> straight out of
>
http://twistedmatrix.com/documents/current/howto/threading)
> doesn't work?
> 
> from twisted.internet import threads
> 
> def doLongCalculation():
>   #time.sleep(3)
>   return 3
> 
> def printResult(x):
>   print "deferred returned "+str(x)
> 
> d = threads.deferToThread(doLongCalculation)
> d.addCallback(printResult)
> print "just waiting for deferred..."
> 
> 
> Running the above, with or without time.sleep(),
> results in a hanging process.  When run "just
> waiting
> for deferred..." prints but the callback is never
> invoked and the process hangs.
> 
> I'm using twisted 1.3, python 2.3.4 under Linux
> (FC3).
> 
>   Lenny G



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From paul at ref.nmedia.net  Sat Mar 12 21:49:31 2005
From: paul at ref.nmedia.net (Paul Campbell)
Date: Sat, 12 Mar 2005 20:49:31 -0800
Subject: [Twisted-Python] App design / Twisted Logging?
In-Reply-To: <E1D9hQW-0000pT-01@pyramid.twistedmatrix.com>
References: <E1D9hQW-0000pT-01@pyramid.twistedmatrix.com>
Message-ID: <20050313044931.GB24296@ref.nmedia.net>

> >> -> Do I need a thread for every copy/move operation (large 
> >files via network)?
> >
> >Nope. That's the beauty of twisted code. I've written this 
> >sort of handling
> >multiple packet trains many times. Write a protocol.
> 
> Hm, sounds like using FTP and not shutil.move via system's SMB?
> Or is there already something better in twisted?
> 
> If I'd write my own protocol to wrap shutil.move,
> the operation would be blocking because I don't
> work on file block level and the protocol doesn't make sense.
> I'm not feeling like writing file transfer code on file block level.
> Or do you think it would be worth the hassle?

It is so darned easy to write your own protocols that there's really not
much point in reusing like you are attempting to do. Here's a simple
example:

from twisted.internet.protocol import Protocol, ClientFactory
from sys import stdout
from string import unpack

class FileXferProtocol(Protocol):
    """Handles receiving files. Fire off via the factory."""
    def dataReceived(self, data):
        if not hasattr(self, "filesize"):
            # First block of the file; get the final size
            self.filesize = unpack("!L", data[:4])
            data = data[4:]

        # Receiving blocks of the file
        self.openfile.write(data)
        self.recvdlen += len(data)
        if self.recvdlen == self.filesize:
            self.openfile.close()
            self.transport.loseConnection()
        return

class FileXferFactory(ClientFactory):
    """Creates protocols to receive files"""
    protocol = FileXferProtocol

    def __init__(self, filename):
        self.filename = filename
        self.openfile = file(filename)

if __name__ == '__main__':
    # First, create the factory protocol and initialize it
    f = FileXferFactory("tempfile")
    # Second, connect to a server to get a file (127.0.0.1:9999 in this case)
    reactor.connectTCP("127.0.0.1", 9999, f)
    reactor.run() # Call the reactor

You could get hung up on worrying about blocks and reassembly and whatnot
(and I have done so in the past), but why bother? About the only thing
necessary here is to install some sort of error checking. In the factory
code it might be appropriate to do some error checking (make sure the entire
file was received) and then to call the next piece of code (the file handler).

On the server side, simply read some bytes and shovel it onto the port. It
would look something like this:

class fileXferSend(Protocol):
    """Sends files"""
    def connectionMade(self):
        # The factory already set this up with a file to send
        self.openfile = open(self.filename)
        # Somewhat braindead code because the standard object won't give length
        self.openfile.seek(0,2)
        self.length = self.openfile.tell()
        # Start over
        self.openfile.seek(0, 0)
        block = self.openfile.read(500) # Prime the system
        self.transport.write(pack("!L", self.length) + block)
        reactor.callLater(0, self.sendBlocks)
    def sendBlocks(self):
        # Keep sending out blocks of the file until it is done
        block = self.openfile.read(1000)
        if len(block): # Keep repeating as long as there is data
            self.transport.write(block)
            reactor.callLater(0, self.sendBlocks)
        else:
            self.openfile.close()
        return

This works very easily because TCP already handles packet assembly and
ordering and checksums on all the blocks. So all you have to do is shovel
the data across the network. At least theoretically, you don't even have to
keep track of file length. Also, you could alternatively simply prepend a
byte at the beginning of the file. The byte could be say "C" for a
continuation or "E" for "eof of file". The code would work almost the
same. Or you could be very careful about monitoring the error codes that
come out of connectionLost to be sure whether it was a "normal" session
close from the host or a dropped session (error), and don't bother
implementing ANY sort of "find the end of the file" stuff.

> So not using DOM but per-line XML handling.
> Not that convenient, because I use only small bits
> of all the XML data that are spread all over the files,
> but I guess it would become better twisted code.

Perhaps. I'm not really familiar with minidom all that well. The above
code contains a perfect example of what I mean. If I had set the parameter
in the file.read() command to -1 or omitted it, then the .read() function
would have dumped the entire file into a string. Although this may have
serious memory implications, the basic problem is that it will also block
twisted while it is reading the entire file into memory. Instead, the above
code reads a chunk of file, sends a packet, and then returns to the reactor
in a short loop (reactor.callLater(0, ...)) which allows the reactor to
intersperse calls with other events.

> That's perhaps a general problem with twisted: There are great
> solutions for everything, but you need to know them in detail
> to know which fits your problem. Or you must know how you should
> reshape your problem to fit in some twisted solution...

Did you ever notice the same problem with basically every other framework
out there? I suggested that you read up on flows for a specific reason.
Flows allow you to do what you are suggesting in a very twisted way...you
can sequence your XML procedure so that you break it up into short bits of
execution that by themselves are effectively non-blocking. That is the
"twisted way". Flows let you manage this situation when you have a full
blown state machine, not just a linear sequence of steps. BUT, the 
documentation for Flows and Deferred's is really good at explaining how
to break your code up into small non-blocking pieces. So I wasn't really
pushing you to USE the Flows module, but to use the concepts that are in
it (just read the introductory parts to get the idea).


> I know twisted "does it all"(TM), but was is "it"? ;-)

That is the trouble with frameworks. WxWidgets is one of the best GUI
frameworks available that works well with Python (via wxPython). But
interestingly enough, wxWidgets includes it's own sockets library! However,
before you ask, it is not easy to get wxPython (and wxWidgets) to play well
with twisted. It is also reactor based, but unlike Python, the reactor in
wxWidgets is very unfriendly to all other reactor-based systems.

> I'm just trying to write a simple directory watcher (I need
> this at every corner of my app), Patrick Lauber wrote an answer
> to my initial question on that, but that wasn't really what I needed.
>
> It works so far that it calls a deferred callback if it gets a
> notify on a new/changed file, but only once; next time I get an
> "AlreadyCalledError" - looks like I don't yet understand deferreds.

Common error. A deferred is a promise to call back at some time in the
future, but only once (no more, no less)! Quite often,
reactor.callLater(0, xxx) is what you
want to do. On the face of it, reactor.callLater() appears to be a timer
mechanism. But what happens if you call it with the twisted idiom
reactor.callLater(0, function, parameters)?

This is a very common twisted idiom. What it does is schedule another
function to run immediately when the reactor is allowed to schedule (assuming
that there aren't several more functions that are already ready to run...
otherwise it waits in line). And (subject to buffer limits on pending calls),
you can call a function via the reactor as many times as you want.

Otherwise, your code can call back again and receive another
deferred, and eventually another callback. Also, you may be looking instead
for "deferredList". For instance, let's say that you are processing a list
of files in parallel. In threading-based code, you'd fire off a thread for
each file and then wait for each one to return (or perhaps never wait). In
deferred's, you'd do something similar:

dlist = list()
for i in filelist:
    dlist.append(handleFile(i) # handleFile returns a deferred
return defer.deferredList(dlist)

This routine will return a single Deferred, but the callback results will be
a list of the results (and their errback/callback status) from ALL of the
handleFile() calls.

> At the moment it's inherited from pb.Root, because I'll need it to
> run remotely sometimes, but perhaps it would be better to use a
> service or something else -- it should run "all the time" if not
> stopped and call a callback for every file.
> I attached the file, perhaps someone can point out my biggest mistakes?

pb is useful if you intend on using the Perspective Broker in the future
for twisted's own version of RPC's. If not, it is probably wise to stay
away. PB makes it very easy to refactor your code into PB form later on
if you so desire. My only problem with it is that you REALLY need to
control both ends of the pipe and you have to live within the limitations
of TCP/IP (a big limit in the certain P2P code which is better off with
very light weight RPC's).

> >first but once you get used to it, deferred's seem just well...obvious.
> 
> I hope to get into that higher state of mind soon. ;-)

Everywhere that you anticipate your code blocking on a procedure call,
the code itself needs to return a deferred early on (before it blocks). Then
later on, it uses the deferred to pass a result. Frequently, you will have
bits of code that read something like this:

d = defer.Deferred()
reactor.callLater(0.00001, nextStep, d)
return d

def nextStep(d):
    ...does something...
    d.callback(real return)

Then the caller commonly does something like:
state.x = <state is a utility class to pass around function state>
d=callDeferredCode(xxx)
d.addcallback(responseHandler, state)
return

def responseHandler(response, state):
    ...

This totally decouples the two routines. Essentially, the calling function
and the called function coordinate an orderly shutdown of the calling
function's code. Then the callee goes about it's business of running some
lengthy function (perhaps waiting on network transmissions) before finally
returning with a value in hand. The caller then picks up via the second
function and the saved state.

This pattern is a bit ugly but at least it is reasonably readable and it
gets around so many ugly details. Once you've written a couple of these,
you'll start to think about when and where and how to place the deferred
and reactor.callLater calls appropriately. At first, it's just a bit of
a challenge wrapping your head around the concept of continuations.

Oh...and the state thing...this gets mentioned once in a while and once
you use it, it is highly intuitive but new users frequently miss the
concept. First, create a "utility class":

class Utility:
    pass

What good is an empty class? Plenty! Within a class, you can always use
the self object for this. But outside of that, use the utility class as
a temporary storage bin with named slots. By this I mean,

state = Utility()

state.filename = "the file I don't want to forget about"
state.status = "The number I'll need later"


Also one other thing...once you create a deferred (defer.Deferred), you
can chain off of it as much as you want in both the caller and callee.
For instance, the callee may not bother creating the deferred but may instead
make calls to a deeper function and simply addCallback() before returning
the SAME deferred variable to the caller. Then when the deferred actually
fires, it can pre-proces the returned results before returning them to the
top-level caller.

Clear as much, right? Well, this situation happens for instance if you have
a function to clean up/process the raw results from a network I/O call
before returning the answers to a higher level. For instance, if you are
writing your own RPC handler to use UDP packets (which I've done), the
lowest level is responsible for handling network I/O. The next level up
is responsible for detecting and handling retransmissions. The next level
up is responsible for splitting/concatenating data that is too big to
fit inside a single packet. And the next level up is responsible for doing
a version of pickle/unpickle. So that the higher level routines communicate
essentially with "rpcSend(method, param1, param2, param3...) calls while the
lower level routines completely obscure the details (and are in turn
obscured from the lower level details of the protocol).

> I enjoyed being able to switch the logging output, e.g. from file to
> database or email per config file without the need to go into the code.
> I don't feel like re-inventing the wheel, but as Glyph pointed out,
> the config syntax of standard logging is just ugly and messy; the
> config syntax of log4[j|perl|net] ist much more logical. Perhaps
> someone should write a log4twisted module...

More likely, just a log4python, with sufficient room that log4twisted doesn't
really require too much. For instance, log4python can use the .next() call
to iterate over log entries (when reading from it). twisted code will just
use this interface (instead of .dumpEntireLog) to sanely read the log in
chunks.



From D.Sinang at spitech.com  Sat Mar 12 23:40:42 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Sun, 13 Mar 2005 14:40:42 +0800
Subject: [Twisted-Python] Choosing /reactors
Message-ID: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>

Hello,
 
I installed Twisted on a Mandrake Linux box and ran some test code
before reading on the Twisted website that the first thing I must do is
install my preferred "reactor".
 
So I assume my running my test code installed the default "reactor",
which is for select().
 
I've subsequently installed the poll() reactor, but am unsure how to
make Twisted use it or make it its default reactor().
 
Can anybody on this list help me ?
 
Also, is there a way to uninstall a reactor ?
 
Regards,

Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050313/224fcfd8/attachment.html>

From radeex at gmail.com  Sun Mar 13 01:43:13 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Sun, 13 Mar 2005 19:43:13 +1100
Subject: [Twisted-Python] Choosing /reactors
In-Reply-To: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F053C86A8@spi-mail2003.spitech.com>
Message-ID: <60ed19d40503130043557eb132@mail.gmail.com>

On Sun, 13 Mar 2005 14:40:42 +0800, Sinang, Danny <D.Sinang at spitech.com> wrote:
>  
> Hello, 
>   
> I installed Twisted on a Mandrake Linux box and ran some test code before
> reading on the Twisted website that the first thing I must do is install my
> preferred "reactor". 
>   
> So I assume my running my test code installed the default "reactor", which
> is for select(). 
>   
> I've subsequently installed the poll() reactor, but am unsure how to make
> Twisted use it or make it its default reactor(). 
>   
> Can anybody on this list help me ? 
>   
> Also, is there a way to uninstall a reactor ? 

It's not so much "install" as "use". To specify a reactor to use with
twistd, for example, pass the --reactor argument. If you're not using
twistd, then make sure you "from twisted.internet import yourreactor;
yourreactor.install()" before anything imports
twisted.internet.reactor.

http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html
for more information.


-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrea at cpushare.com  Sun Mar 13 12:57:09 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Sun, 13 Mar 2005 20:57:09 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050222171230.GN7247@opteron.random>
References: <20050221213644.GD7247@opteron.random>
	<20050222033322.12282.2037604333.divmod.quotient.9663@ohm>
	<20050222034843.GE7247@opteron.random>
	<20050222043540.GX1374@localhost.localdomain>
	<20050222171230.GN7247@opteron.random>
Message-ID: <20050313195709.GR9270@opteron.random>

This patch adds a check for transport.disconnecting to the int16/32
protocols, so that they don't keep firing stringReceived callbacks after
calling transport.loseConnection (in line with the linereceiver
protocol). This also adds the methods for pauseproducer in line with the
linereceiver protocol (as per previous patch in this thread).

If these two fixes to int32/16 are correct please apply to SVN.

Thanks.

Index: Twisted/twisted/protocols/basic.py
===================================================================
--- Twisted/twisted/protocols/basic.py	(revision 13177)
+++ Twisted/twisted/protocols/basic.py	(working copy)
@@ -166,9 +166,23 @@
         """
         return error.ConnectionLost('Line length exceeded')
     
+class PauseProducer(object):
+    paused = False
 
+    def pauseProducing(self):
+        self.paused = True
+        self.transport.pauseProducing()
 
-class LineReceiver(protocol.Protocol):
+    def resumeProducing(self):
+        self.paused = False
+        self.transport.resumeProducing()
+        self.dataReceived('')
+
+    def stopProducing(self):
+        self.paused = True
+        self.transport.stopProducing()
+
+class LineReceiver(protocol.Protocol, PauseProducer):
     """A protocol that receives lines and/or raw data, depending on mode.
     
     In line mode, each line that's received becomes a callback to
@@ -188,7 +202,6 @@
     __buffer = ''
     delimiter = '\r\n'
     MAX_LENGTH = 16384
-    paused = False
     
     def clearLineBuffer(self):
         """Clear buffered data."""
@@ -279,21 +292,8 @@
         """
         return self.transport.loseConnection()
 
-    def pauseProducing(self):
-        self.paused = True
-        self.transport.pauseProducing()
 
-    def resumeProducing(self):
-        self.paused = False
-        self.dataReceived('')
-        self.transport.resumeProducing()
-
-    def stopProducing(self):
-        self.paused = True
-        self.transport.stopProducing()
-
-
-class Int32StringReceiver(protocol.Protocol):
+class Int32StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int32-prefixed strings.
 
     An int32 string is a string prefixed by 4 bytes, the 32-bit length of
@@ -314,7 +314,7 @@
         """Convert int32 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 3:
+        while len(self.recvd) > 3 and not self.paused and not self.transport.disconnecting:
             length ,= struct.unpack("!i",self.recvd[:4])
             if length > self.MAX_LENGTH:
                 self.transport.loseConnection()
@@ -331,7 +331,7 @@
         self.transport.write(struct.pack("!i",len(data))+data)
 
 
-class Int16StringReceiver(protocol.Protocol):
+class Int16StringReceiver(protocol.Protocol, PauseProducer):
     """A receiver for int16-prefixed strings.
 
     An int16 string is a string prefixed by 2 bytes, the 16-bit length of
@@ -351,7 +351,7 @@
         """Convert int16 prefixed strings into calls to stringReceived.
         """
         self.recvd = self.recvd + recd
-        while len(self.recvd) > 1:
+        while len(self.recvd) > 1 and not self.paused and not self.transport.disconnecting:
             length = (ord(self.recvd[0]) * 256) + ord(self.recvd[1])
             if len(self.recvd) < length+2:
                 break



From andrea at cpushare.com  Sun Mar 13 17:05:18 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Mon, 14 Mar 2005 01:05:18 +0100
Subject: [Twisted-Python] which dia error from lore
Message-ID: <20050314000518.GU9270@opteron.random>

mktap is spawning an error (which dia not found), this fixed it

Index: Twisted/twisted/lore/latex.py
===================================================================
--- Twisted/twisted/lore/latex.py	(revision 13178)
+++ Twisted/twisted/lore/latex.py	(working copy)
@@ -104,7 +104,7 @@
 
     baseLevel = 0
     try:
-        diaHack = not not os.popen('which dia').read()
+        diaHack = not not os.popen('which dia 2>/dev/null').read()
     except:
         # That's a no, then.
         diaHack = 0



From itamar at itamarst.org  Sun Mar 13 21:33:19 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Sun, 13 Mar 2005 23:33:19 -0500
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314000518.GU9270@opteron.random>
References: <20050314000518.GU9270@opteron.random>
Message-ID: <1110774799.2990.82.camel@sheriffpony>

Could you please report bugs and patches to the issue tracker?
twistedmatrix.com/bugs/. Otherwise they might get lost. Thanks!




From D.Sinang at spitech.com  Sun Mar 13 22:52:36 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Mon, 14 Mar 2005 13:52:36 +0800
Subject: [Twisted-Python] Maximum sockets open
Message-ID: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>

Hello,
 
Is there a maximum number of sockets that Twisted supports ? If so, what
is the maximum, how do I see what it's current value, and how to I set
it to another value ?
 
Regards,

Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050314/2ce60088/attachment.html>

From alengarbage at yahoo.com  Sun Mar 13 23:38:01 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Sun, 13 Mar 2005 22:38:01 -0800 (PST)
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: 6667
Message-ID: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>


A couple of questions about twisted.web server's
memory management:

1- Is it normal for the server process to consume
large amounts of memory (and never free it) if large
requests are sent?

2- Assuming the answer to #1 is 'no,' what might I be
doing wrong?  I have subclassed Resource and added it
to the Site tree with putChild.  My Resource subclass
processes mutlipart/form-data style file uploads.  It
looks to me like the Request object that is passed in
contains /all/ the data in the request.  So if the
client sends a 100MB file, server consumes 100MB of
memory.  What I'm seeing is that if I send small file
uploads, server never consumes more than about 30MB
(7MB resident).  If I send a single ~100MB file, usage
mushrooms to over 200MB (~140MB resident), and the
memory is never returned to the system.

3- Assuming the answer to #1 is 'yes,' what is the
correct way to architect a solution.  Do I need to
subclass web.resource.Resource or web.site.Request to
do my own management of memory (doing partial reads of
the incoming data)?  Or is there some other pattern
that I should be using rather than .web.server?


Note that I've run gc with DEBUG_LEAK trying to spot
any problems, and it doesn't report anything.

If a code snippet that reproduces the above would
help, I'd be happy to produce one.

  Thanks -- Lenny G.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 02:58:20 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 10:58:20 +0100
Subject: [Twisted-Python] App design / Twisted Logging?
Message-ID: <F92274058556DE42B94B148EEFB9183949E65A@exchange-03.suedkurier.de>

>It is so darned easy to write your own protocols that there's 
>really not much point in reusing like you are attempting to do. 
>Here's a simple example:

Thank you VERY much for all the code, explanation, fish and the rest of the universe!

I propose someone put that as a howto onto the twisted site.

>> the config syntax of standard logging is just ugly and messy; the
>> config syntax of log4[j|perl|net] ist much more logical. Perhaps
>> someone should write a log4twisted module...
>More likely, just a log4python, with sufficient room that 

There's a log4py already (http://sourceforge.net/projects/log4py, http://www.its4you.at/english/log4py.html), but it never was as complete as the other log4xs and seems abandoned since 2003 in favour of standard logging.

>log4twisted doesn't really require too much.
>For instance, log4python can use the .next() call
>to iterate over log entries (when reading from it). twisted 
>code will just
>use this interface (instead of .dumpEntireLog) to sanely read 
>the log in chunks.

Would be nice, but the natural way in OSS is "if you need it, write it yourself", and I can't start any more projects - Python is only a secondary scene for me, I'm more involved in publishing (newspaper workflow, InDesign, PostScript, PDF, TeX) and religious stuff (Unitarian magazine editor and webmaster).

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 03:08:48 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 11:08:48 +0100
Subject: [Twisted-Python] twisted installation mac
Message-ID: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>

>just get the latest stable version 1.3 and all you have to do is run
>the setup.py to install it.

That didn't work for me (on my Mac at home), the build process didn't find a bin directory with all the needed scripts. I just copied them out of the tree and stripped the .py extension, had no time to test yet if it really works and if these were the right files. "t-im" was still missing, I deleted it in setup.py

But I guess there must be a way to avoid those nasty hacks.
Perhaps it's only my Mac that is too badly screwed up...

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From radeex at gmail.com  Mon Mar 14 03:17:56 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 14 Mar 2005 21:17:56 +1100
Subject: [Twisted-Python] twisted installation mac
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E65C@exchange-03.suedkurier.de>
Message-ID: <60ed19d40503140217dea9fca@mail.gmail.com>

On Mon, 14 Mar 2005 11:08:48 +0100, Henning.Ramm at mediapro-gmbh.de
<Henning.Ramm at mediapro-gmbh.de> wrote:
> >just get the latest stable version 1.3 and all you have to do is run
> >the setup.py to install it.
> 
> That didn't work for me (on my Mac at home), the build process didn't find a bin directory with all the needed scripts. I just copied them out of the tree and stripped the .py extension, had no time to test yet if it really works and if these were the right files. "t-im" was still missing, I deleted it in setup.py

Hrm... Are you _sure_ that was Twisted 1.3?
http://twistedmatrix.com/products/download ? For a while there SVN was
broken wrt inclusion of some bin scripts (should all be good now).

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From Henning.Ramm at mediapro-gmbh.de  Mon Mar 14 03:35:16 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Mon, 14 Mar 2005 11:35:16 +0100
Subject: [Twisted-Python] twisted installation mac
Message-ID: <F92274058556DE42B94B148EEFB9183949E660@exchange-03.suedkurier.de>

>> That didn't work for me (on my Mac at home), the build 
>process didn't find a bin directory with all the needed 
>scripts. I just copied them out of the tree and stripped the 
>.py extension, had no time to test yet if it really works and 
>if these were the right files. "t-im" was still missing, I 
>deleted it in setup.py
>
>Hrm... Are you _sure_ that was Twisted 1.3?
>http://twistedmatrix.com/products/download ? For a while there SVN was
>broken wrt inclusion of some bin scripts (should all be good now).

Absolutely. I never try CVS or SVN access if I don't need to.

Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From tv at twistedmatrix.com  Mon Mar 14 05:29:01 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Mon, 14 Mar 2005 14:29:01 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13111 - Fix process unit
	test when there is no twisted installed yet.
In-Reply-To: <6ffdda17ff3eac56d3a801542060361c@fuhm.net>
References: <E1D9VHc-0000NT-00@wolfwood>
	<6ffdda17ff3eac56d3a801542060361c@fuhm.net>
Message-ID: <4235838D.8030802@twistedmatrix.com>

James Y Knight wrote:
>> Fix process unit test when there is no twisted installed yet.
> We need to decide on a standard mechanism for doing this. Every test 
> that runs processes does it a *different* way now. At least on unix, 
> sys.path can never have relative paths in it, so we should standardize 
> on the simple:  'env = {"PYTHONPATH": os.pathsep.join(sys.path)}'.

According to r13173, sys.path can contain relative paths on win32.



From exarkun at divmod.com  Mon Mar 14 05:55:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 12:55:04 GMT
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314000518.GU9270@opteron.random>
Message-ID: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>

On Mon, 14 Mar 2005 01:05:18 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>mktap is spawning an error (which dia not found), this fixed it
> 
> Index: Twisted/twisted/lore/latex.py
> ===================================================================
> --- Twisted/twisted/lore/latex.py	(revision 13178)
> +++ Twisted/twisted/lore/latex.py	(working copy)
> @@ -104,7 +104,7 @@
>  
>      baseLevel = 0
>      try:
> -        diaHack = not not os.popen('which dia').read()
> +        diaHack = not not os.popen('which dia 2>/dev/null').read()
>      except:
>          # That's a no, then.
>          diaHack = 0

  When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.

  Jp



From exarkun at divmod.com  Mon Mar 14 05:58:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 12:58:47 GMT
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050313195709.GR9270@opteron.random>
Message-ID: <20050314125847.13806.1461771439.divmod.quotient.1563@ohm>

On Sun, 13 Mar 2005 20:57:09 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>This patch adds a check for transport.disconnecting to the int16/32
> protocols, so that they don't keep firing stringReceived callbacks after
> calling transport.loseConnection (in line with the linereceiver
> protocol). This also adds the methods for pauseproducer in line with the
> linereceiver protocol (as per previous patch in this thread).
> 
> If these two fixes to int32/16 are correct please apply to SVN.

  transport.disconnecting is horrible (it's an implementation detail, it doesn't work on a lot of transports).  LineReceiver shouldn't be using it.  The feature LineReceiver uses it to implement may be reasonable, though, which is why its code is still how it is.

  If the feature is desired somewhere else, the best way to add it is to either find another way that doesn't rely on transport.disconnecting (and then we can fix LineReceiver too), or factor the code such that all protocols can provide the feature without having more than one method that relies on transport.disconnecting (then we can fix them all at once someday).

  Jp



From itamar at itamarst.org  Mon Mar 14 08:06:57 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 10:06:57 -0500
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
References: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
Message-ID: <1110812818.25210.0.camel@localhost.localdomain>

On Mon, 2005-03-14 at 12:55 +0000, Jp Calderone wrote:

> > -        diaHack = not not os.popen('which dia').read()
> > +        diaHack = not not os.popen('which dia 2>/dev/null').read()
> >      except:
> >          # That's a no, then.
> >          diaHack = 0
> 
>   When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.

We shouldn't be using "which dia" anyway, it's ugly and broken. Don't we
have a Python implementation of which() somewhere?




From ken at kenkinder.com  Mon Mar 14 09:37:15 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 10:37:15 -0600
Subject: [Twisted-Python] Design Pattern for Iterating Through Lists
Message-ID: <4235BDBB.4000609@kenkinder.com>

I've come almost to the point of making a template for this kind of 
operation:

    d = Deferred()
    d.callback(0)

    results = []

    def doItem(void, eggs):
        return whatever(eggs)

    def processResult(result):
        results.append(result)

    for spam in list:
        d.addCallback(doItem, spam['eggs'])
        d.addCallback(processResult)

    d.addCallback(lambda _: results)
    return d

The reason I'm calling back on doItem is that lambda will evaluate its 
variables one for the iteration, causing only the first evaluation of 
spam['eggs'] to be passed for each item in the list. Is there a more 
readable/efficient way of doing this? Note that I'm not using a 
DeferredList because I want everything processed serially, not in parallel.

-Ken




From ken at kenkinder.com  Mon Mar 14 09:46:58 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 10:46:58 -0600
Subject: [Twisted-Python] Maximum sockets open
In-Reply-To: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F053C882E@spi-mail2003.spitech.com>
Message-ID: <4235C002.3070101@kenkinder.com>

A while ago, we were opening up a ton of sockets and got a "Too many 
files open" error. I don't know what you're getting, but if that's it, 
you might try (1) opening fewer sockets, (2) upping operating system 
limit (Twisted doesn't control that).

According to our admin, on Linux, that would be /proc/sys/fs/file-max 
and use "sysctl -w 'fs.file-max=<new limit>'" to up the limit.

-Ken

Sinang, Danny wrote:

> Hello,
>  
> Is there a maximum number of sockets that Twisted supports ? If so, 
> what is the maximum, how do I see what it's current value, and how to 
> I set it to another value ?
>  
> Regards,
> Danny
>  
>  
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From exarkun at divmod.com  Mon Mar 14 09:51:17 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 16:51:17 GMT
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <1110812818.25210.0.camel@localhost.localdomain>
Message-ID: <20050314165117.13806.611265878.divmod.quotient.1896@ohm>

On Mon, 14 Mar 2005 10:06:57 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Mon, 2005-03-14 at 12:55 +0000, Jp Calderone wrote:
> 
> > > -        diaHack = not not os.popen('which dia').read()
> > > +        diaHack = not not os.popen('which dia 2>/dev/null').read()
> > >      except:
> > >          # That's a no, then.
> > >          diaHack = 0
> > 
> >   When does this happen, exactly?  I don't have dia installed, either, and I'm not seeing any mktap output related to it.
> 
> We shouldn't be using "which dia" anyway, it's ugly and broken. Don't we
> have a Python implementation of which() somewhere?
> 

  Yes.  I'd still like to know when this happens, though, as it would seem to indicate a bug in the plugin system or in the way I ported Lore's plugins.

  Jp



From exarkun at divmod.com  Mon Mar 14 10:04:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 17:04:04 GMT
Subject: [Twisted-Python] Design Pattern for Iterating Through Lists
In-Reply-To: <4235BDBB.4000609@kenkinder.com>
Message-ID: <20050314170404.13806.970821359.divmod.quotient.1915@ohm>

On Mon, 14 Mar 2005 10:37:15 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>I've come almost to the point of making a template for this kind of 
> operation:
> 
>     d = Deferred()
>     d.callback(0)
> 
>     results = []
> 
>     def doItem(void, eggs):
>         return whatever(eggs)
> 
>     def processResult(result):
>         results.append(result)
> 
>     for spam in list:
>         d.addCallback(doItem, spam['eggs'])
>         d.addCallback(processResult)
> 
>     d.addCallback(lambda _: results)
>     return d
> 
> The reason I'm calling back on doItem is that lambda will evaluate its 
> variables one for the iteration, causing only the first evaluation of 
> spam['eggs'] to be passed for each item in the list. Is there a more 
> readable/efficient way of doing this? Note that I'm not using a 
> DeferredList because I want everything processed serially, not in parallel.

  Actually, I think you meant "last evaluation" rather than first.

  One solution is just to wrap the above into a function:

    def serially(processor, items):
        results = []
        d = defer.Deferred()

        for elem in items:
            d.addCallback(lambda ign, elem=elem: processor(elem))
            d.addCallback(results.append)

        d.addCallback(lambda ign: results)
        d.callback(None)
        return d

  Now you can call serially whenever you need this operation and forget how unpleasant the implementation is :)

  Another approach involves building up the Deferred chain gradually rather than all at once:

    def serially(processor, items):
        results = []
        d = defer.Deferred()

        toBeProcessed = iter(items)

        def doItem(ignored):
            for elem in toBeProcessed:
                defer.maybeDeferred(
                    processor, elem).addCallback(
                    results.append).addCallback(
                    doItem)
                 break
            else:
                d.callback(results)

        return d

  It's a bit more code, and I'm still not sure how I feel about that abuse of for loops (but is handling StopIteration manually any better?  dunno), but it avoids building up a large stack inside the Deferred, which can be a good thing - a large number of synchronous results will probably cause Python to raise a RuntimeError in your version or my first version, since Deferred processes its callbacks recursively.

  Hope this helps,

  Jp



From general at eepatents.com  Mon Mar 14 10:33:23 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 09:33:23 -0800
Subject: [Twisted-Python] Python Xlib + Twisted
In-Reply-To: <7xmzt6b47q.fsf@brugd.ctrl-c.liu.se>
References: <7xmzt6b47q.fsf@brugd.ctrl-c.liu.se>
Message-ID: <200503140933.23489.general@eepatents.com>

Below is what I sent to python-xlib-users this morning. Hopefully 
there's some interest in getting a Twisted-driven version of Python 
Xlib done. I think I've learned the innards of Twisted well enough by 
now to do it myself (writing a new protocol for X events), but help and 
advice is of course welcome.

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com

-----
On Monday 14 March 2005 08:08 am, Peter Liljenberg wrote:
> Simon Forman, calroc99 at users.sourceforge.net, has kindly offered to
> maintain Python Xlib from now on.  Give him a big hand, folks.
>
> I'll resign as project admin, but will still lurk around and may even
> do the occasional CVS commit (here's hoping).
>
> /Peter Liljenberg

Python Xlib is a neat project, and I'm glad to see the continued 
activity.

One of the projects I've been planning for the near future is to add 
some functionality to the connection code of Python Xlib so that it can 
operate asynchronously using the Twisted networking framework rather 
than relying on blocking and threads. I'm planning to integrate the 
patched Python Xlib into WinDictator, a Windows-Linux bridge I wrote 
and use for running dictation software in VMware and having the 
keystrokes typed with X events.

Briefly, the Windows copy of WinDictator is a TCP server to a Linux 
client and presents a dictation window on the Windows machine.  Using 
the dictation software's "direct dictation" feature, the user generates 
text in the dictation window, which is sent immediately to the Linux 
client. The Linux client then generates an X "KeyPress" event (followed 
by an X "KeyRelease" event) corresponding to the character sent from 
the Windows client. It is assumed that the (virtual) Windows machine is 
insecure and will be firewalled off from the Internet anyhow, so it is 
the TCP server. Plus, multiple Linux clients can connect to and use a 
single Windows server at different times.

Advantageously, the client-server pair allows "direct dictation" from a 
text entry window running on Windows (along with the Windows-only
dictation software) to whatever word processor the user is employing
under Linux. The text entry window can be viewed on a separate screen of
a separate Windows box, or can appear somewhere on the Linux computer's
display. The latter can be accomplished by emulation with VMware or (I 
think) QEMU, or by VNC operation of the separate Windows box.

Twisted's "Perspective Broker" maintains the client-server communication 
very nicely at a high level. WinDicator works great with the xte 
program "typing" the keystrokes, and I use it every day. But I want to 
improve it and need the finer-grained control of Python Xlib to do so. 
Ideally, I would like to see Python Xlib's networking integrated 
smoothly into Twisted's asynchronous event loop for performance, 
compatibility, and because it is just plain cool.

See http://twistedmatrix.com/services/twisted-advantage for more info 
about Twisted, if you're interested. It runs my web site plus my boss's 
site (http://valuablepatents.com), among other things, off of a single 
main python thread. 

Offers of cooperation, either to add Twisted capability to Python Xlib 
or with WinDictator (GPL) itself, would of course be welcomed.



From ken at kenkinder.com  Mon Mar 14 10:37:46 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 11:37:46 -0600
Subject: [Twisted-Python] Twisted and the Posh Module
Message-ID: <4235CBEA.4000907@kenkinder.com>

Has anyone tried playing with Twisted and the posh module? I need to do 
some CPU-intensive stuff inside the reactor, which unfortunately holds 
on to the GIL. I was thinking of just making a deferToPosh() type of 
method in the spirit of deferToThread(), but forking on each operation 
would be pretty expensive. Which brings up the question of having 
process pools.

Has anyone done anything like this? I don't really need any interaction 
between the worker processes and Twisted, so in theory I could spawn off 
some worker processes early and just communicate queues of tasks to 
complete, independent of Twisted and the reactor.

-Ken




From jarrod.roberson at gmail.com  Mon Mar 14 10:48:24 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 14 Mar 2005 12:48:24 -0500
Subject: [Twisted-Python] Re: sending queries and responses with the new dns
	module
In-Reply-To: <2389d47305031115312c629933@mail.gmail.com>
References: <2389d47305031115312c629933@mail.gmail.com>
Message-ID: <2389d473050314094860abcdd3@mail.gmail.com>

any pointers to any example code on using this stuff?



From alengarbage at yahoo.com  Mon Mar 14 11:13:06 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Mon, 14 Mar 2005 10:13:06 -0800 (PST)
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: 6667
Message-ID: <20050314181306.36312.qmail@web31511.mail.mud.yahoo.com>

Run the following web server (memoryhogserver.py) and
load the provided form (post.html) into a browser of
your choice and choose a large file (~100MB) to
submit.  Notice the memory usage of the python process
(on my machine, around 150MB resident).

memoryhogserver.py:

from twisted.web.resource import Resource
from twisted.web import server, resource
from twisted.internet import reactor
import os
                                                      
                         
class ROOT(Resource):
    def __init__(self):
        Resource.__init__(self)
                                                      
                         
    def getChild(self, name, request):
        if name == "":
            return self
        return Resource.getChild(self, name, request)
                                                      
                         
    def render_GET(self, request):
        return "<html>root dir</hrml>"
                                                      
                         
class UPLOAD(ROOT):
    def render_POST(self, request):
        f = open("/tmp/testfile","wb")
        f.write(request.args.get('filename')[0])
        f.close()
        return "<html>upload successful</html>"
    def render_GET(self, request):
        return "'upload' must use POST"
                                                      
                         
if __name__ == '__main__':
    root = ROOT()
    root.putChild('upload',UPLOAD())
    site = server.Site(root)
    reactor.listenTCP(7000, site)
    print "webserver listening on port 7000"
    reactor.run()


post.html:

<html>
    <form method="POST" enctype="multipart/form-data"
action="http://localhost:7000/upload">
        <input type="file" name="filename">
        <input type="submit">
    </form>
</html>


  (all in the spirit of replying to my own posts :)


  -- Lenny G.


--- Lenny G Arbage <alengarbage at yahoo.com> wrote:
> 
> A couple of questions about twisted.web server's
> memory management:
 ...
> If a code snippet that reproduces the above would
> help, I'd be happy to produce one.



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From itamar at itamarst.org  Mon Mar 14 11:24:13 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 13:24:13 -0500
Subject: [Twisted-Python] twisted.web.server and memory
In-Reply-To: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>
References: <20050314063801.53756.qmail@web31510.mail.mud.yahoo.com>
Message-ID: <1110824653.25210.41.camel@localhost.localdomain>

On Sun, 2005-03-13 at 22:38 -0800, Lenny G Arbage wrote:

> 1- Is it normal for the server process to consume
> large amounts of memory (and never free it) if large
> requests are sent?

Web questions should go to the twisted-web mailing list.

twisted.web's support for uploaded files is currently pretty broken (it
does it in memory). In twisted.web2 this will be fixable, though it is
not at the moment.




From general at eepatents.com  Mon Mar 14 11:59:51 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 10:59:51 -0800
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
Message-ID: <200503141059.51652.general@eepatents.com>

On Monday 14 March 2005 10:13 am, 
twisted-python-request at twistedmatrix.com wrote:
> Has anyone tried playing with Twisted and the posh module? I need to
> do some CPU-intensive stuff inside the reactor, which unfortunately
> holds on to the GIL. I was thinking of just making a deferToPosh()
> type of method in the spirit of deferToThread(), but forking on each
> operation would be pretty expensive. Which brings up the question of
> having process pools.
>
> Has anyone done anything like this? I don't really need any
> interaction between the worker processes and Twisted, so in theory I
> could spawn off some worker processes early and just communicate
> queues of tasks to complete, independent of Twisted and the reactor.

I think having some sort of process pool mangagement in Twisted is a 
great idea, especially with multi-core CPUs emerging on the scene. I 
have access to a dual-core Pentium Prescott CPU and it would be great 
to have that available to keep both cores humming on a certain 
CPU-intensive project I'm considering.

However, I'm not sure the best way to go about it would be with the posh 
module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
using Perspective Broker as an underlying message-passing mechanism 
with UNIX sockets and/or TCP. One thought might be to have a single 
master process start up and act as a PB server and process pool 
manager. Subsidiary processes could then make authenticated PB 
connections to the server to "volunteer" for work in the process pool. 

Note that pypar lets you easily find out how many CPUs you have under 
kernel control, with pypar.size(). Thus, the main process could start 
the process pool by spawning a subsidiary "volunteer" process for each 
CPU core present.

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From exarkun at divmod.com  Mon Mar 14 12:19:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 19:19:14 GMT
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141059.51652.general@eepatents.com>
Message-ID: <20050314191914.13806.499278931.divmod.quotient.2114@ohm>

On Mon, 14 Mar 2005 10:59:51 -0800, Ed Suominen <general at eepatents.com> wrote:
>On Monday 14 March 2005 10:13 am, 
> twisted-python-request at twistedmatrix.com wrote:
> > Has anyone tried playing with Twisted and the posh module? I need to
> > do some CPU-intensive stuff inside the reactor, which unfortunately
> > holds on to the GIL. I was thinking of just making a deferToPosh()
> > type of method in the spirit of deferToThread(), but forking on each
> > operation would be pretty expensive. Which brings up the question of
> > having process pools.
> >
> > Has anyone done anything like this? I don't really need any
> > interaction between the worker processes and Twisted, so in theory I
> > could spawn off some worker processes early and just communicate
> > queues of tasks to complete, independent of Twisted and the reactor.
> 
> I think having some sort of process pool mangagement in Twisted is a 
> great idea, especially with multi-core CPUs emerging on the scene. I 
> have access to a dual-core Pentium Prescott CPU and it would be great 
> to have that available to keep both cores humming on a certain 
> CPU-intensive project I'm considering.
> 
> However, I'm not sure the best way to go about it would be with the posh 
> module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
> using Perspective Broker as an underlying message-passing mechanism 
> with UNIX sockets and/or TCP. One thought might be to have a single 
> master process start up and act as a PB server and process pool 
> manager. Subsidiary processes could then make authenticated PB 
> connections to the server to "volunteer" for work in the process pool. 
> 
> Note that pypar lets you easily find out how many CPUs you have under 
> kernel control, with pypar.size(). Thus, the main process could start 
> the process pool by spawning a subsidiary "volunteer" process for each 
> CPU core present.

  Quotient currently uses Twisted's spawnProcess() to start up a worker process and communicates with it using PB over stdin/stdout.  The child process performs fulltext indexing and searches for the parent process.

  The code is currently about half transformed into a general process pool service.  Unfortunately I have not had time to work on this in several weeks, and probably will not have time to finish it for at least several more.  If anyone is interested in picking up development and finishing it, I'd be more than happy to accept patches :)  Once this is done, it should go into Twisted, since it is clearly a feature quite a few people using Twisted desire.

  Most of the code is currently in a module in a branch in the Quotient repository:

http://divmod.org/cvs/branches/exarkun/runnerup-2357/atop/runnerup.py?rev=7515&view=markup

  In particular, the ProcessController and ServiceController classes.

  Jp



From ken at kenkinder.com  Mon Mar 14 13:24:28 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 14:24:28 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141059.51652.general@eepatents.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
Message-ID: <4235F2FC.3020405@kenkinder.com>

Ed Suominen wrote:

>I think having some sort of process pool mangagement in Twisted is a 
>great idea, especially with multi-core CPUs emerging on the scene. I 
>have access to a dual-core Pentium Prescott CPU and it would be great 
>to have that available to keep both cores humming on a certain 
>CPU-intensive project I'm considering.
>
>However, I'm not sure the best way to go about it would be with the posh 
>module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), or just 
>using Perspective Broker as an underlying message-passing mechanism 
>with UNIX sockets and/or TCP. One thought might be to have a single 
>master process start up and act as a PB server and process pool 
>manager. Subsidiary processes could then make authenticated PB 
>connections to the server to "volunteer" for work in the process pool. 
>
>Note that pypar lets you easily find out how many CPUs you have under 
>kernel control, with pypar.size(). Thus, the main process could start 
>the process pool by spawning a subsidiary "volunteer" process for each 
>CPU core present.
>  
>
My goal is somewhat similar in that I have multiple CPU's that aren't 
being used very much, but the other problem is that certain libraries I 
use (PIL) grab the GIL for long-running operations like image 
modifications. I can thread them off, but it still liberally acquires 
the GIL and makes the server unresponsive for the duration of the operation.

I too had looked at using Perspective Broker to communicate with 
separate "worker" processes, and the only reason I'm not excited with 
that option is that the bandwidth between the master and worker 
processes involves a lot of large binary strings. Shared memory seemed 
more efficient than PB for transferring those strings.

So for that reason, finding out how many CPU's I have isn't that 
important, because I'll still want more worker processes than I have CPU's.




From bob at redivi.com  Mon Mar 14 13:42:55 2005
From: bob at redivi.com (Bob Ippolito)
Date: Mon, 14 Mar 2005 15:42:55 -0500
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <4235F2FC.3020405@kenkinder.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
	<4235F2FC.3020405@kenkinder.com>
Message-ID: <0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>


On Mar 14, 2005, at 3:24 PM, Ken Kinder wrote:

> Ed Suominen wrote:
>
>> I think having some sort of process pool mangagement in Twisted is a 
>> great idea, especially with multi-core CPUs emerging on the scene. I 
>> have access to a dual-core Pentium Prescott CPU and it would be 
>> great to have that available to keep both cores humming on a certain 
>> CPU-intensive project I'm considering.
>>
>> However, I'm not sure the best way to go about it would be with the 
>> posh module, pypar (see http://datamining.anu.edu.au/~ole/pypar/), 
>> or just using Perspective Broker as an underlying message-passing 
>> mechanism with UNIX sockets and/or TCP. One thought might be to have 
>> a single master process start up and act as a PB server and process 
>> pool manager. Subsidiary processes could then make authenticated PB 
>> connections to the server to "volunteer" for work in the process 
>> pool.
>> Note that pypar lets you easily find out how many CPUs you have 
>> under kernel control, with pypar.size(). Thus, the main process 
>> could start the process pool by spawning a subsidiary "volunteer" 
>> process for each CPU core present.
>>
> My goal is somewhat similar in that I have multiple CPU's that aren't 
> being used very much, but the other problem is that certain libraries 
> I use (PIL) grab the GIL for long-running operations like image 
> modifications. I can thread them off, but it still liberally acquires 
> the GIL and makes the server unresponsive for the duration of the 
> operation.
>
> I too had looked at using Perspective Broker to communicate with 
> separate "worker" processes, and the only reason I'm not excited with 
> that option is that the bandwidth between the master and worker 
> processes involves a lot of large binary strings. Shared memory 
> seemed more efficient than PB for transferring those strings.
>
> So for that reason, finding out how many CPU's I have isn't that 
> important, because I'll still want more worker processes than I have 
> CPU's.

Ideally we'd have a message-passing system that could use multiple 
backends (i.e. shared memory, mmap, or sockets).  Using sockets is 
probably a better solution for now -- you're likely to do a lot of 
copying anyway, cause it's Python and PIL :)

With sockets, you can scale right to multiple computers.. with shared 
memory, you're stuck on a single box.  The API that POSH exposes 
(proxied non-blocking objects) can't scale well to multiple machines, 
where a socket-based API could be scaled down to actually use an 
efficient shared memory implementation at some point.

-bob





From foom at fuhm.net  Mon Mar 14 14:09:46 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 16:09:46 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13185 - Applied patch from
	Ralph Meijer for issue 448
In-Reply-To: <E1DAw2L-0003O2-00@wolfwood>
References: <E1DAw2L-0003O2-00@wolfwood>
Message-ID: <a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>

I'll pick on your commit message dizzyd, but this is a general request:

Can people not post log messages like this? It makes it impossible to 
write a NEWS file if commits look like this. I cannot go through and 
look at every bug report to see what the commit actually did, and I 
also cannot go back and read all the svn diffs. That would just take 
way too long. Any commits that looked like this I just completely 
ignored, which is a shame.

The messages don't need to be excruciatingly detailed, but please 
include at least *something* about what the change did, even if it's 
completely obvious from the patch, because I'm not looking at the 
patches: just the message.

E.g., in this case "Applied patch from Ralph Meijer for issue 448: 
fixes digest authentication in Jabber client" would be great.

James

On Mar 14, 2005, at 3:19 PM, Dave Smith wrote:
> Author: dizzyd
> Date: Mon Mar 14 13:19:36 2005
> New Revision: 13185
>
> Modified:
>    trunk/twisted/words/protocols/jabber/client.py
> Log:
> Applied patch from Ralph Meijer for issue 448




From nospam.list at unclassified.de  Mon Mar 14 14:13:53 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Mon, 14 Mar 2005 22:13:53 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
Message-ID: <4235FE91.8060302@unclassified.de>

Hi everybody,

I just installed Twisted 2.0.0a2 only to find it incompatible with the
application I wanted. Now I need to go back to version 1.3 or whatever
is the latest stable release before 2. Can I just install 1.3 over 2.0?
How can I uninstall version 2, there's no prepared mechanism for this
described where I can see it.

TIA

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)




From jarrod.roberson at gmail.com  Mon Mar 14 14:40:39 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 14 Mar 2005 16:40:39 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
References: <4235FE91.8060302@unclassified.de>
Message-ID: <2389d4730503141340274c438@mail.gmail.com>

On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen
<nospam.list at unclassified.de> wrote:
> Hi everybody,
> 
> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted. Now I need to go back to version 1.3 or whatever
> is the latest stable release before 2. Can I just install 1.3 over 2.0?
> How can I uninstall version 2, there's no prepared mechanism for this
> described where I can see it.
> 
> TIA

you should be able to simple delete the /twisted directory from your
/site-packages directory

and then just install 1.3



From foom at fuhm.net  Mon Mar 14 14:54:00 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 16:54:00 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <2389d4730503141340274c438@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<2389d4730503141340274c438@mail.gmail.com>
Message-ID: <9c4c1a1b4b6282d16ea5d3994d2e0eff@fuhm.net>

On Mar 14, 2005, at 4:40 PM, jarrod roberson wrote:
> On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen
> <nospam.list at unclassified.de> wrote:
>> Hi everybody,
>>
>> I just installed Twisted 2.0.0a2 only to find it incompatible with the
>> application I wanted. Now I need to go back to version 1.3 or whatever
>> is the latest stable release before 2. Can I just install 1.3 over 
>> 2.0?
>> How can I uninstall version 2, there's no prepared mechanism for this
>> described where I can see it.
>>
>> TIA
>
> you should be able to simple delete the /twisted directory from your
> /site-packages directory
>
> and then just install 1.3

...but before that, tell us what went wrong...if it's Twisted's fault, 
you'd want it to be fixed, right?

James




From exarkun at divmod.com  Mon Mar 14 14:56:04 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Mon, 14 Mar 2005 21:56:04 GMT
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
Message-ID: <20050314215604.13806.1073922278.divmod.quotient.2344@ohm>

On Mon, 14 Mar 2005 22:13:53 +0100, Yves Goergen <nospam.list at unclassified.de> wrote:
>Hi everybody,
> 
> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted. Now I need to go back to version 1.3 or whatever
> is the latest stable release before 2. Can I just install 1.3 over 2.0?
> How can I uninstall version 2, there's no prepared mechanism for this
> described where I can see it.

  I'm sure someone will answer the question you asked (although you didn't indicate your platform or how you installed either version of Twisted, so they'd just be guessing).

  Might I ask which application broke, and in what way (a traceback would be most excellent, if there is one)?  Perhaps we can just fix the incompatibility and then you won't have to downgrade :)

  Jp



From itamar at itamarst.org  Mon Mar 14 14:53:41 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 16:53:41 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <4235FE91.8060302@unclassified.de>
References: <4235FE91.8060302@unclassified.de>
Message-ID: <1110837221.3097.2.camel@localhost.localdomain>

On Mon, 2005-03-14 at 22:13 +0100, Yves Goergen wrote:

> I just installed Twisted 2.0.0a2 only to find it incompatible with the
> application I wanted.

In what way was it incompatible?





From jadestorm at nc.rr.com  Mon Mar 14 15:10:53 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Mon, 14 Mar 2005 17:10:53 -0500 (EST)
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <1110837221.3097.2.camel@localhost.localdomain>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
Message-ID: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>

Since it's my application he's referring to, I'll respond.  ;D  Basically,
it's this:
Traceback (most recent call last):
  File "main.py", line 23, in ?
    import xmlconfig
  File "/usr/local/pyicq-t/src/xmlconfig.py", line 4, in ?
    from tlib.domish import parseText, Element
  File "/usr/local/pyicq-t/src/tlib/domish.py", line 425, in ?
    from twisted.protocols import sux
  File
"/usr/local/lib/python2.4/site-packages/twisted/protocols/sux.py",
line 6, in ?
    globals())
  File
"/usr/local/lib/python2.4/site-packages/twisted/python/util.py", line
671, in moduleMovedForSplit
    raise ImportError("You need to have the Twisted %s "
ImportError: You need to have the Twisted Web package installed to use
twisted.protocols.sux. See http://twistedmatrix.com/projects/web.

When he went to that url and installed the web package, it still didn't
work.  I blame stuff on my end, not y'all's code. ;)

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Mon, 2005-03-14 at 22:13 +0100, Yves Goergen wrote:
>
>> I just installed Twisted 2.0.0a2 only to find it incompatible with the
>> application I wanted.
>
> In what way was it incompatible?
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From general at eepatents.com  Mon Mar 14 15:27:16 2005
From: general at eepatents.com (Ed Suominen)
Date: Mon, 14 Mar 2005 14:27:16 -0800
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
Message-ID: <200503141427.16840.general@eepatents.com>

Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
scanning and window events when it's using PIL to generate a thumbnail 
of the last page scanned, despite my use of deferToThread. A unit test 
I wrote with time.sleep() passed just fine, and I threw my hands up and 
walked away. Thanks for shedding light on what was very confusing and 
frustrating behavior.

[1] spdf: "Scan to PDF," GPL. A Twisted-driven application with, 
shockingly, absolutely no networking. Coming soon to a download URL 
near you...

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com

On Monday 14 March 2005 02:11 pm, 
twisted-python-request at twistedmatrix.com wrote:
> My goal is somewhat similar in that I have multiple CPU's that aren't
> being used very much, but the other problem is that certain libraries
> I use (PIL) grab the GIL for long-running operations like image
> modifications. I can thread them off, but it still liberally acquires
> the GIL and makes the server unresponsive for the duration of the
> operation.



From jrust at rustyparts.com  Mon Mar 14 15:26:52 2005
From: jrust at rustyparts.com (Jason Rust)
Date: Mon, 14 Mar 2005 14:26:52 -0800
Subject: [Twisted-Python] Creating a dynamic FTP server
Message-ID: <200503141426.52805.jrust@rustyparts.com>

Hi,
I've been poking around in the code and documentation for a bit now and wanted 
to see if the following project would be doable with twisted before I 
actually started coding it:

We want a FTP server where all the files and directories are "virtual."  The 
actual files would be in a database and the folders shown to a user would be 
based on the time of day and who the user is.  When getting or putting a file 
it would pull or put it into the database backend.

Would something like this be possible with the twisted FTP module?
Thanks,
-Jason



From ken at kenkinder.com  Mon Mar 14 15:26:49 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 16:26:49 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>
References: <E1DAu4W-00021V-02@pyramid.twistedmatrix.com>
	<200503141059.51652.general@eepatents.com>
	<4235F2FC.3020405@kenkinder.com>
	<0A2DF841-36F5-4B89-AEA0-C3866095A947@redivi.com>
Message-ID: <42360FA9.9010707@kenkinder.com>

Bob Ippolito wrote:

> Ideally we'd have a message-passing system that could use multiple 
> backends (i.e. shared memory, mmap, or sockets).  Using sockets is 
> probably a better solution for now -- you're likely to do a lot of 
> copying anyway, cause it's Python and PIL :)
>
> With sockets, you can scale right to multiple computers.. with shared 
> memory, you're stuck on a single box.  The API that POSH exposes 
> (proxied non-blocking objects) can't scale well to multiple machines, 
> where a socket-based API could be scaled down to actually use an 
> efficient shared memory implementation at some point.

I'm not trying to distribute work among multiple boxes with this -- I 
already do that. :) The goal is to free up each node's GIL in an 
existing clustered application and make better use of multiple CPU's.

-Ken




From itamar at itamarst.org  Mon Mar 14 15:35:58 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Mon, 14 Mar 2005 17:35:58 -0500
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <200503141427.16840.general@eepatents.com>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
	<200503141427.16840.general@eepatents.com>
Message-ID: <1110839758.3097.6.camel@localhost.localdomain>

On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
> Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
> scanning and window events when it's using PIL to generate a thumbnail 
> of the last page scanned, despite my use of deferToThread. 

Arguably not releasing the GIL in C code is a bug, and someone should
probably report it.




From leszczynscy at yahoo.com  Mon Mar 14 15:44:02 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Mon, 14 Mar 2005 14:44:02 -0800 (PST)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: 6667
Message-ID: <20050314224402.71968.qmail@web30508.mail.mud.yahoo.com>

I am looking for a Twisted based LDAP protocol
implementation (both versions 2 and 3). Is anybody
aware of such, even in very early development phase.

If there are neither any activity in that area nor
actual plans, would Twisted be interested in adopting
one into its code base? What would be level of
interest of Twisted community?

I am interested in both client and server side.

Please advice,
AndyL






From nospam.list at unclassified.de  Mon Mar 14 15:55:38 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Mon, 14 Mar 2005 23:55:38 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <2389d4730503141340274c438@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<2389d4730503141340274c438@mail.gmail.com>
Message-ID: <4236166A.7010605@unclassified.de>

On 14.03.2005 22:40 (+0100), jarrod roberson wrote:
> you should be able to simple delete the /twisted directory from your
> /site-packages directory
> 
> and then just install 1.3

Thanks, seems to work fine. It's so easy, you just need to know where
all those files are located... ;)

Yes, there was a problem with PyICQ-t as Daniel already wrote in this
thread. I can start the application now with Twisted 1.3.

Thanks for your help.

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)



From foom at fuhm.net  Mon Mar 14 15:58:15 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 17:58:15 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <59672b805ae4956702dbeac278222268@fuhm.net>

Bug summary
______________________
Since 2005-03-05 04:13:21.060000:
  Bugs opened: 9   Bugs closed: 17   Total open bugs: 326 (-8)
   Urgent: 9 (+2)
   Bug: 118 (-13)
   Feature: 131 (+2)
   Wish: 68 (+1)

New / Reopened Bugs
______________________
                     ==== Bug ====
twisted.python.rebuild fails if python 2.4's decimal module is imported 
  (1 1/4 hours ago)
        http://twistedmatrix.com/bugs/issue921 opened by marienz

e-mail followup rejected  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue920 opened by zooko

roundup exception  (2 days ago)
CLOSED http://twistedmatrix.com/bugs/issue919 opened by zooko

[CORE] If program has > 1024 fds, the select() used in t.i.process can 
fail  (3 days ago)
        http://twistedmatrix.com/bugs/issue918 opened by itamarst

[DOCUMENTATION] Not all the examples in the 
twisted.application.strports docstring are valid  (3 days ago)
        http://twistedmatrix.com/bugs/issue917 opened by exarkun

xmlrpc.QueryFactory failed to catch some exceptions  (5 days ago)
        http://twistedmatrix.com/bugs/issue914 opened by maoy

                     ==== Feature ====
.buildProtocol((host, port)) is unsuitable for e.g. UNIX domain 
sockets; use t.i.address  (4 days ago)
        http://twistedmatrix.com/bugs/issue915 opened by Tv

[CONCH] signal to conch to reconnect  (4 days ago)
        http://twistedmatrix.com/bugs/issue916 opened by z3p

                     ==== Wish ====
Add test cases for twisted.words.protocols.jabber.client  (12 minutes 
ago)
        http://twistedmatrix.com/bugs/issue922 opened by ralphm

Bugs Closed
______________________
                     ==== Urgent ====
[PATCH] fix twisted.words.protocols.jabber.jid to add stringprep  (1 
week ago)
        http://twistedmatrix.com/bugs/issue912 opened by ralphm, closed 
by ralphm

plugins.tml doesn't work with split up packages  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue906 opened by exarkun, closed 
by exarkun

[WIN32] problems with Twisted-2.0.0a1 on Windows  (1 month ago)
        http://twistedmatrix.com/bugs/issue891 opened by manlio, closed 
by radix

setgroups() raises when given too many groups, and nothing handles the 
error  (11 months ago)
        http://twistedmatrix.com/bugs/issue600 opened by exarkun, closed 
by jknight

[TRIAL] t.trial.util.wait deprecates, but doesn't replace  (3 months 
ago)
        http://twistedmatrix.com/bugs/issue795 opened by teratorn, 
closed by exarkun

[RELEASE MANAGEMENT] Change setup.cfg so bdist_rpm uses 
admin/twisted.spec  (18 months ago)
        http://twistedmatrix.com/bugs/issue260 opened by wkv, closed by 
radix

                     ==== Bug ====
[CHAT] [PATCH] Digest jabber authentication never tried  (14 months ago)
        http://twistedmatrix.com/bugs/issue448 opened by ralphm, closed 
by ralphm

e-mail followup rejected  (2 days ago)
        http://twistedmatrix.com/bugs/issue920 opened by zooko, closed 
by radix

roundup exception  (2 days ago)
        http://twistedmatrix.com/bugs/issue919 opened by zooko, closed 
by radix

twisted.cred.portal.IRealm docstring for parameters  (5 months ago)
        http://twistedmatrix.com/bugs/issue740 opened by thomasvs, 
closed by radix

adbapi prints value of connection password to log file  (1 month ago)
        http://twistedmatrix.com/bugs/issue871 opened by itamarst, 
closed by radix

t.test.test_application.TestConvert fails without t.web  (1 month ago)
        http://twistedmatrix.com/bugs/issue877 opened by marienz, closed 
by radix

[DOCUMENTATION] Make a separate tutorial index page  (1 month ago)
        http://twistedmatrix.com/bugs/issue889 opened by hypatia, closed 
by radix

t.names.client.ThreadedResolver should be in core?  (3 months ago)
        http://twistedmatrix.com/bugs/issue790 opened by jknight, closed 
by exarkun

[CORE] [PATCH] t.p.usage uses passed arguments rather than real 
defaults when displaying help  (5 months ago)
        http://twistedmatrix.com/bugs/issue743 opened by itamarst, 
closed by jml

[CONCH] _scanDirectory broken  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue904 opened by spiv, closed by 
z3p

[CONCH] No ProtocolWrapper defined in twisted/conch/ssh/session.py  (2 
weeks ago)
        http://twistedmatrix.com/bugs/issue905 opened by spiv, closed by 
z3p




From ken at kenkinder.com  Mon Mar 14 16:09:13 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Mon, 14 Mar 2005 17:09:13 -0600
Subject: [Twisted-Python] Re: Twisted and the Posh Module
In-Reply-To: <1110839758.3097.6.camel@localhost.localdomain>
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>	<200503141427.16840.general@eepatents.com>
	<1110839758.3097.6.camel@localhost.localdomain>
Message-ID: <42361999.9090400@kenkinder.com>

Itamar Shtull-Trauring wrote:

>On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
>  
>
>>Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses 
>>scanning and window events when it's using PIL to generate a thumbnail 
>>of the last page scanned, despite my use of deferToThread. 
>>    
>>
>
>Arguably not releasing the GIL in C code is a bug, and someone should
>probably report it.
>  
>
They are aware of it, and in the alpha version of PIL, *some* operations 
no longer acquire the GIL, but many still do.

-Ken




From foom at fuhm.net  Mon Mar 14 16:59:09 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 14 Mar 2005 18:59:09 -0500
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
Message-ID: <100c51bb201d3227438b58d93445197d@fuhm.net>

On Mar 14, 2005, at 5:10 PM, Daniel Henninger wrote:
> ImportError: You need to have the Twisted Web package installed to use
> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.
>
> When he went to that url and installed the web package, it still didn't
> work.  I blame stuff on my end, not y'all's code. ;)

The "it still didn't work" error would be the more interesting to see, 
rather than the error message with the solution clearly spelled out in 
it. Or do you mean, "it still gives that error", which would point to 
some sort of installation problem.

James




From jadestorm at nc.rr.com  Mon Mar 14 17:40:38 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Mon, 14 Mar 2005 19:40:38 -0500 (EST)
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <100c51bb201d3227438b58d93445197d@fuhm.net>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<100c51bb201d3227438b58d93445197d@fuhm.net>
Message-ID: <53017.10.0.0.9.1110847238.squirrel@www.vorpalcloud.org>

That I don't know.  The person who actually tried it will have to speak on
that.  ;)  I'm just relaying part of what he said.

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Mar 14, 2005, at 5:10 PM, Daniel Henninger wrote:
>> ImportError: You need to have the Twisted Web package installed to use
>> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.
>>
>> When he went to that url and installed the web package, it still didn't
>> work.  I blame stuff on my end, not y'all's code. ;)
>
> The "it still didn't work" error would be the more interesting to see,
> rather than the error message with the solution clearly spelled out in
> it. Or do you mean, "it still gives that error", which would point to
> some sort of installation problem.
>
> James
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From db3l at fitlinxx.com  Mon Mar 14 18:00:14 2005
From: db3l at fitlinxx.com (David Bolen)
Date: 14 Mar 2005 20:00:14 -0500
Subject: [Twisted-Python] Re: More on PB Copyable Errors
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e704122911477e36fb72@mail.gmail.com>
	<uis6kecui.fsf@fitlinxx.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
Message-ID: <uhdjdoh9d.fsf@fitlinxx.com>

Justin Johnson <justinjohnson at gmail.com> writes:

> Can you comment again on what you think should be done here?  I'd like
> to get this functionality into 2.0 if possible.  If you're okay with
> my patch than I will try to get the tests written before the release. 
> Otherwise I'm wondering if there is an alternative implementation that
> can be added before the release.  I'd prefer not having to maintain
> local mods to Twisted.

Sorry - I'm pretty sure when I looked at things again, there were not
in fact, any paths not covered by your patch.  Having the support in
the CopyableFailure class versus the jellying code is still debatable,
but not enough that I have anything against the current patch.

-- David




From justinjohnson at gmail.com  Mon Mar 14 19:09:35 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Mon, 14 Mar 2005 20:09:35 -0600
Subject: [Twisted-Python] Re: More on PB Copyable Errors
In-Reply-To: <uhdjdoh9d.fsf@fitlinxx.com>
References: <94a776e704122812321c78389@mail.gmail.com>
	<94a776e7041230074867d17cc6@mail.gmail.com>
	<94a776e704123007572b3dc57b@mail.gmail.com>
	<94a776e70412300827a0ec69d@mail.gmail.com>
	<uekh7hgou.fsf@fitlinxx.com>
	<94a776e704123010255c184077@mail.gmail.com>
	<uvfa9kkc7.fsf@fitlinxx.com>
	<94a776e7050110191537664713@mail.gmail.com>
	<94a776e705031106014270dafe@mail.gmail.com>
	<uhdjdoh9d.fsf@fitlinxx.com>
Message-ID: <94a776e70503141809682184b6@mail.gmail.com>

Okay, I'll see if I can get anyone to commit.


On 14 Mar 2005 20:00:14 -0500, David Bolen <db3l at fitlinxx.com> wrote:
> Justin Johnson <justinjohnson at gmail.com> writes:
> 
> > Can you comment again on what you think should be done here?  I'd like
> > to get this functionality into 2.0 if possible.  If you're okay with
> > my patch than I will try to get the tests written before the release.
> > Otherwise I'm wondering if there is an alternative implementation that
> > can be added before the release.  I'd prefer not having to maintain
> > local mods to Twisted.
> 
> Sorry - I'm pretty sure when I looked at things again, there were not
> in fact, any paths not covered by your patch.  Having the support in
> the CopyableFailure class versus the jellying code is still debatable,
> but not enough that I have anything against the current patch.
> 
> -- David
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From D.Sinang at spitech.com  Mon Mar 14 19:38:51 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Tue, 15 Mar 2005 10:38:51 +0800
Subject: [Twisted-Python] Maximum sockets open
Message-ID: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>

Thanks Ken.

How do we determine (from the O.S.) how many sockets are currently open
?

Regards,
Danny 

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com] On Behalf Of Ken
Kinder
Sent: Tuesday, March 15, 2005 12:47 AM
To: Twisted general discussion
Subject: Re: [Twisted-Python] Maximum sockets open

A while ago, we were opening up a ton of sockets and got a "Too many
files open" error. I don't know what you're getting, but if that's it,
you might try (1) opening fewer sockets, (2) upping operating system
limit (Twisted doesn't control that).

According to our admin, on Linux, that would be /proc/sys/fs/file-max
and use "sysctl -w 'fs.file-max=<new limit>'" to up the limit.

-Ken

Sinang, Danny wrote:

> Hello,
>  
> Is there a maximum number of sockets that Twisted supports ? If so, 
> what is the maximum, how do I see what it's current value, and how to 
> I set it to another value ?
>  
> Regards,
> Danny
>  
>  
>
>-----------------------------------------------------------------------
>-
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>


_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From twisted at ralphm.ik.nu  Tue Mar 15 00:50:30 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 15 Mar 2005 08:50:30 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
Message-ID: <20050315075030.GA99510@ik.nu>

On Mon, Mar 14, 2005 at 05:10:53PM -0500, Daniel Henninger wrote:
> Since it's my application he's referring to, I'll respond.  ;D  Basically,
> it's this:
> Traceback (most recent call last):
>   File "main.py", line 23, in ?
>     import xmlconfig
>   File "/usr/local/pyicq-t/src/xmlconfig.py", line 4, in ?
>     from tlib.domish import parseText, Element
>   File "/usr/local/pyicq-t/src/tlib/domish.py", line 425, in ?
>     from twisted.protocols import sux
>   File
> "/usr/local/lib/python2.4/site-packages/twisted/protocols/sux.py",
> line 6, in ?
>     globals())
>   File
> "/usr/local/lib/python2.4/site-packages/twisted/python/util.py", line
> 671, in moduleMovedForSplit
>     raise ImportError("You need to have the Twisted %s "
> ImportError: You need to have the Twisted Web package installed to use
> twisted.protocols.sux. See http://twistedmatrix.com/projects/web.

Well, since I know (of) pyicq-t, you might first want to look into the
fact that you have all xish and jabber support (from 1.3, with my personal
patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0 here.

It might be a good idea to get rid of the stuff, first. All my patches (better
and more) are in Twisted SVN now.

-- 
Groetjes,

ralphm



From troll at pld-linux.org  Tue Mar 15 01:45:48 2005
From: troll at pld-linux.org (Michal Chruszcz)
Date: Tue, 15 Mar 2005 09:45:48 +0100
Subject: [Twisted-Python] Maximum sockets open
In-Reply-To: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F054078C2@spi-mail2003.spitech.com>
Message-ID: <200503150945.48690@tintia.doriath>

It seems like on Tuesday 15 of March 2005 03:38, Sinang, Danny typed:
> Thanks Ken.
>
> How do we determine (from the O.S.) how many sockets are currently open
> ?

Simply run netstat.

P.S. Please, don't reply above quotation...
-- 
Michal Chruszcz -=- Seen at http://1lo.sanok.pl/~troll/gallery.php



From nospam.list at unclassified.de  Tue Mar 15 02:08:53 2005
From: nospam.list at unclassified.de (Yves Goergen)
Date: Tue, 15 Mar 2005 10:08:53 +0100
Subject: [Twisted-Python] How to uninstall Twisted 2.0?
In-Reply-To: <100c51bb201d3227438b58d93445197d@fuhm.net>
References: <4235FE91.8060302@unclassified.de>	<1110837221.3097.2.camel@localhost.localdomain>	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<100c51bb201d3227438b58d93445197d@fuhm.net>
Message-ID: <4236A625.10803@unclassified.de>

On 15.03.2005 00:59 (+0100), James Y Knight wrote:
> The "it still didn't work" error would be the more interesting to see, 
> rather than the error message with the solution clearly spelled out in 
> it. Or do you mean, "it still gives that error", which would point to 
> some sort of installation problem.

Well, installed Twisted 2.0.0a2, installed PyICQ-t latest tarball and it
said, I needed Twisted Web. Then installed latest Twisted Web I could
find and the error message was still the same. So I removed all Twisted
stuff, installed 1.3 and now it works fine. (Except for some problems
with the transport itself, but not runtime configuration related I think.)

-- 
Yves Goergen "LonelyPixel" <nospam.list at unclassified.de>

Unclassified NewsBoard Forum --> newsboard.unclassified.de
Free (GPL), easy to use and install, secure, innovative! (PHP+MySQL)



From tim at se.linux.org  Tue Mar 15 02:10:53 2005
From: tim at se.linux.org (=?iso-8859-1?Q?Tim_Terleg=E5rd?=)
Date: Tue, 15 Mar 2005 10:10:53 +0100 (CET)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050314224402.71968.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>

> I am looking for a Twisted based LDAP protocol
> implementation (both versions 2 and 3). Is anybody
> aware of such, even in very early development phase.

There is ldaptor. Not sure where to download it though, but it's
definately available in debian and friends.

Tim




From symbiont at berlios.de  Tue Mar 15 02:50:08 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Tue, 15 Mar 2005 17:50:08 +0800
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>
References: <Pine.LNX.4.44.0503151008130.15988-100000@naskur.se.linux.org>
Message-ID: <200503151750.08468.symbiont@berlios.de>

On Tuesday 15 March 2005 17:10, Tim Terlegård wrote:
> > I am looking for a Twisted based LDAP protocol
> > implementation (both versions 2 and 3). Is anybody
> > aware of such, even in very early development phase.
>
> There is ldaptor. Not sure where to download it though, but it's
> definately available in debian and friends.

Home: http://tv.debian.net/software/ldaptor
Download: 
http://ftp.debian.org/debian/pool/main/l/ldaptor/ldaptor_%{version}.tar.gz

Something like that.

-- 
-jeff



From mwh at python.net  Tue Mar 15 03:03:28 2005
From: mwh at python.net (Michael Hudson)
Date: Tue, 15 Mar 2005 10:03:28 +0000
Subject: [Twisted-Python] Re: Twisted and the Posh Module
References: <E1DAxmF-000583-02@pyramid.twistedmatrix.com>
	<200503141427.16840.general@eepatents.com>
	<1110839758.3097.6.camel@localhost.localdomain>
	<42361999.9090400@kenkinder.com>
Message-ID: <2mr7ihjken.fsf@starship.python.net>

Ken Kinder <ken at kenkinder.com> writes:

> Itamar Shtull-Trauring wrote:
>
>>On Mon, 2005-03-14 at 14:27 -0800, Ed Suominen wrote:
>>  
>>> Ah, so *that* is why the SANE GUI frontend I'm writing [1] pauses
>>> scanning and window events when it's using PIL to generate a
>>> thumbnail of the last page scanned, despite my use of
>>> deferToThread.    
>>
>>Arguably not releasing the GIL in C code is a bug, and someone should
>>probably report it.
>>  
> They are aware of it, and in the alpha version of PIL, *some*
> operations no longer acquire the GIL, but many still do.

Well, err, "some operations no longer acquire the GIL" reads slightly
backwards to me; "some operations now release the GIL" seems fairer --
PIL is only thwarting you passively, not actively :)

Cheers,
mwh

-- 
  Enlightenment is probably antithetical to impatience.
                                        -- Erik Naggum, comp.lang.lisp




From jadestorm at nc.rr.com  Tue Mar 15 05:56:28 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 07:56:28 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted   Was: How to uninstall 
	Twisted 2.0?
In-Reply-To: <20050315075030.GA99510@ik.nu>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
Message-ID: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>

> Well, since I know (of) pyicq-t, you might first want to look into the
> fact that you have all xish and jabber support (from 1.3, with my personal
> patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0
> here.

This is true, but is there yet an official release that we can point
people at that has all of the patches?  The problem before was we were
having to tell people to pull SVN, or download a patched version of
twisted, or something of that nature, and that was getting way too
confusing for the end user.  At this particular point in time, we can say
"just download straight out of the box 1.3.0 Twisted, install it, and you
are good to go".  There were a couple of patches submitted in the past
that never seemed to be accepted or even responded to, so honestly, I
think we kind of gave up.  (these patches weren't submitted by me)

oscar.py I explicitly pulled out after talking to the author.  I was also
to understand that the chat stuff was being pulled from Twisted core into
something else, so it appeared that pulling the jabber stuff was also
important.  Is this not true?  Domish was more of a "the current state was
causing us problems so we needed a fix" issue I believe.  Maybe this is a
good time to simply ask:

jabber tree... will this stay with Twisted core?  i'm not sure there is
anything we've actually changed with this tree.
oscar.py... is this indeed being pulled out?  We've done quite a few
enhancements to it so it's far from what it was in Twisted.  (at some
point when I consider it stable, I was going to send it back to the author
if he was interested)
msn.py... similar situation to oscar.py
domish.py/xmlstream.py... these are obviously important parts of twisted
itself but that weren't working well as is.  I can get more details on
this.  If both are fixed well in Twisted 2.0, we may be able to begin
pulling out tlib stuff and tell people to use Twisted 2.0 instead.  All in
all, we would like to be able to point people at a release, not an svn
tree.  Besides, I've run into numerous people that don't have/want svn
installed ( =( ), or who's company/whatever firewalls prevented getting to
svn trees.

Anyway, I've been extremely pleased with Twisted ever since I first
started working with it.  It's worked wonders for the functionality we
have used with PyICQ-t, PyAIM-t, and James's PyMSN-t.  So please don't
consider this a bash of Twisted or anything.  =)

Would it help if I popped in the irc chatroom for a bit to discuss these
things 'in person'?

Daniel

>
> It might be a good idea to get rid of the stuff, first. All my patches
> (better
> and more) are in Twisted SVN now.
>
> --
> Groetjes,
>
> ralphm
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From radeex at gmail.com  Tue Mar 15 06:14:41 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 00:14:41 +1100
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to uninstall
	Twisted 2.0?
In-Reply-To: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
Message-ID: <60ed19d405031505146af17721@mail.gmail.com>

On Tue, 15 Mar 2005 07:56:28 -0500 (EST), Daniel Henninger
<jadestorm at nc.rr.com> wrote:
> > Well, since I know (of) pyicq-t, you might first want to look into the
> > fact that you have all xish and jabber support (from 1.3, with my personal
> > patches) in the tlib directory, so you are mixing Twisted 1.3 and 2.0
> > here.

> oscar.py I explicitly pulled out after talking to the author.  I was also
> to understand that the chat stuff was being pulled from Twisted core into
> something else, so it appeared that pulling the jabber stuff was also
> important.  Is this not true?  Domish was more of a "the current state was
> causing us problems so we needed a fix" issue I believe.  Maybe this is a
> good time to simply ask:

Not so much "pulled from Twisted" as "Twisted being pulled apart". See
http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/split.xhtml
for more information.

> jabber tree... will this stay with Twisted core?  i'm not sure there is
> anything we've actually changed with this tree.
> oscar.py... is this indeed being pulled out?  We've done quite a few
> enhancements to it so it's far from what it was in Twisted.  (at some
> point when I consider it stable, I was going to send it back to the author
> if he was interested)
> msn.py... similar situation to oscar.py
> domish.py/xmlstream.py... these are obviously important parts of twisted
> itself but that weren't working well as is.  I can get more details on
> this.  If both are fixed well in Twisted 2.0, we may be able to begin
> pulling out tlib stuff and tell people to use Twisted 2.0 instead.  All in
> all, we would like to be able to point people at a release, not an svn
> tree.  Besides, I've run into numerous people that don't have/want svn
> installed ( =( ), or who's company/whatever firewalls prevented getting to
> svn trees.

None of this stuff is in "Twisted Core" any more, however, the chat
stuff is all in Twisted Words
(http://twistedmatrix.com/projects/words) and domish is in Twisted
Xish (http://twistedmatrix.com/projects/xish). This split is to help
us remain agile in project management / release / development, so I
urge you not to look on it as a bad thing. Being pulled out of the
core is probably going to *help* you. And 2.0 is going to be released
any day now (I was going to release the third prerelease today, but
ran into a bug. It'll go out tomorrow. The actual release will go out
shortly afterward).

> Would it help if I popped in the irc chatroom for a bit to discuss these
> things 'in person'?

Not a bad idea.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From andrea at cpushare.com  Tue Mar 15 06:37:50 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 14:37:50 +0100
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050314125504.13806.632641844.divmod.quotient.1560@ohm>
References: <20050314000518.GU9270@opteron.random>
	<20050314125504.13806.632641844.divmod.quotient.1560@ohm>
Message-ID: <20050315133750.GQ7699@opteron.random>

On Mon, Mar 14, 2005 at 12:55:04PM +0000, Jp Calderone wrote:
>   When does this happen, exactly?  I don't have dia installed, either,
>   and I'm not seeing any mktap output related to it.

It happens when I run it as root to bind to port 80/443 (with
appropriate uid change). It catches /usr/bin/which instead of the shell
builtin. See the difference between which dia and /usr/bin/which dia.

It's only a minor warning...



From andrea at cpushare.com  Tue Mar 15 06:41:06 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 14:41:06 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
Message-ID: <20050315134106.GR7699@opteron.random>

On Mon, Mar 14, 2005 at 12:58:47PM +0000, Jp Calderone wrote:
>   If the feature is desired somewhere else, the best way to add it is
>   to either find another way that doesn't rely on
>   transport.disconnecting (and then we can fix LineReceiver too), or
>   factor the code such that all protocols can provide the feature
>   without having more than one method that relies on
>   transport.disconnecting (then we can fix them all at once someday).

If there's no real generic API and you're not planning on adding it
soon, perhaps we could check it with hasattr and spawn a warning if the
transport doens't provide .disconnecting?



From leszczynscy at yahoo.com  Tue Mar 15 06:42:54 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Tue, 15 Mar 2005 05:42:54 -0800 (PST)
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: 6667
Message-ID: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>


--- Jeff Pitman <symbiont at berlios.de> wrote:
> On Tuesday 15 March 2005 17:10, Tim Terleg�rd wrote:
> > > I am looking for a Twisted based LDAP protocol
> > > implementation (both versions 2 and 3). Is
> anybody
> > > aware of such, even in very early development
> phase.
> >
> > There is ldaptor. Not sure where to download it
> though, but it's
> > definately available in debian and friends.
> 
> Home: http://tv.debian.net/software/ldaptor
> Download: 
>
http://ftp.debian.org/debian/pool/main/l/ldaptor/ldaptor_%{version}.tar.gz
> 
> Something like that.


Thanks for the link. Got it and will look at it. Just
out of the curiosity - what would be a reason it is
not integrated with Twisted core protocols?

AndyL




From twisted at ralphm.ik.nu  Tue Mar 15 07:34:20 2005
From: twisted at ralphm.ik.nu (Ralph Meijer)
Date: Tue, 15 Mar 2005 15:34:20 +0100
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to uninstall
	Twisted 2.0?
In-Reply-To: <54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
Message-ID: <20050315143420.GA10446@ik.nu>

On Tue, Mar 15, 2005 at 07:56:28AM -0500, Daniel Henninger wrote *a lot*.

I've personally taken up the task of getting all known issues related to Jabber
or Xish fixed before Twisted 2.0 is released. I think that is done now. Except
for some documentation requests, all issues in Twisted's issue tracker have
been closed.

If you find any, file a new bug at http://twistedmatrix.com/bugs and assign
it to me (ralphm).

-- 
Groetjes,

ralphm



From itamar at itamarst.org  Tue Mar 15 10:29:35 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Mar 2005 12:29:35 -0500
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050315134106.GR7699@opteron.random>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
	<20050315134106.GR7699@opteron.random>
Message-ID: <1110907775.9431.22.camel@localhost.localdomain>

On Tue, 2005-03-15 at 14:41 +0100, Andrea Arcangeli wrote:
> On Mon, Mar 14, 2005 at 12:58:47PM +0000, Jp Calderone wrote:
> >   If the feature is desired somewhere else, the best way to add it is
> >   to either find another way that doesn't rely on
> >   transport.disconnecting (and then we can fix LineReceiver too), or
> >   factor the code such that all protocols can provide the feature
> >   without having more than one method that relies on
> >   transport.disconnecting (then we can fix them all at once someday).
> 
> If there's no real generic API and you're not planning on adding it
> soon, perhaps we could check it with hasattr and spawn a warning if the
> transport doens't provide .disconnecting?

We probably ought to add an API, since the functionality appears to be
useful.




From andrea at cpushare.com  Tue Mar 15 11:14:52 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Tue, 15 Mar 2005 19:14:52 +0100
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <1110907775.9431.22.camel@localhost.localdomain>
References: <20050313195709.GR9270@opteron.random>
	<20050314125847.13806.1461771439.divmod.quotient.1563@ohm>
	<20050315134106.GR7699@opteron.random>
	<1110907775.9431.22.camel@localhost.localdomain>
Message-ID: <20050315181452.GV7699@opteron.random>

On Tue, Mar 15, 2005 at 12:29:35PM -0500, Itamar Shtull-Trauring wrote:
> We probably ought to add an API, since the functionality appears to be
> useful.

What about just adding .disconnecting to the other transports too then?
That already exists and I don't see anything fundamentally wrong with it
(especially with the property feature of python that won't leave us
locked into a fixed value). Then incidentally my patch will become
correct too ;).



From jadestorm at nc.rr.com  Tue Mar 15 12:03:12 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 14:03:12 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to 
	uninstall	Twisted 2.0?
In-Reply-To: <60ed19d405031505146af17721@mail.gmail.com>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
Message-ID: <42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>

> None of this stuff is in "Twisted Core" any more, however, the chat
> stuff is all in Twisted Words
> (http://twistedmatrix.com/projects/words) and domish is in Twisted
> Xish (http://twistedmatrix.com/projects/xish). This split is to help
> us remain agile in project management / release / development, so I
> urge you not to look on it as a bad thing. Being pulled out of the
> core is probably going to *help* you. And 2.0 is going to be released
> any day now (I was going to release the third prerelease today, but
> ran into a bug. It'll go out tomorrow. The actual release will go out
> shortly afterward).

No no!  I don't look at it as a bad thing at all!  I think it's great! 
All I'm saying is I don't want to have to tell people to pull SVN releases
of anything.  Just "pull X official release", even of X official release
is "pull words, core, and XXXXXXX".  I also believe I misunderstood my
original conversation about oscar.py, I ended up thinking that oscar.py
wasn't long for your dists at all.  Dooh!  =)

>> Would it help if I popped in the irc chatroom for a bit to discuss these
>> things 'in person'?
>
> Not a bad idea.

I've popped on there for the time being.  (though my attention isn't
entirely on that screen)

Do you all have any interest in my changes for oscar at some point . . .
or interest in me simply maintaining that particular module?  I have to
beat on it all the time so it's not like I don't have a vested interest in
making it be right.  ;)  No worries if that's not cool.

Daniel





From itamar at itamarst.org  Tue Mar 15 14:13:21 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 15 Mar 2005 16:13:21 -0500
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How to 
	uninstall	Twisted 2.0?
In-Reply-To: <42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
	<42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
Message-ID: <1110921201.9431.30.camel@localhost.localdomain>

On Tue, 2005-03-15 at 14:03 -0500, Daniel Henninger wrote:

> Do you all have any interest in my changes for oscar at some point . . .
> or interest in me simply maintaining that particular module?  I have to
> beat on it all the time so it's not like I don't have a vested interest in
> making it be right.  ;)  No worries if that's not cool.

Yes please! For starters add them to http://twistedmatrix.com/bugs/,
assign to z3p. Going onwards Subversion access might follow.




From jadestorm at nc.rr.com  Tue Mar 15 14:45:08 2005
From: jadestorm at nc.rr.com (Daniel Henninger)
Date: Tue, 15 Mar 2005 16:45:08 -0500 (EST)
Subject: [Twisted-Python] PyICQ-t and Twisted Was: How 
	to	uninstall	Twisted 2.0?
In-Reply-To: <1110921201.9431.30.camel@localhost.localdomain>
References: <4235FE91.8060302@unclassified.de>
	<1110837221.3097.2.camel@localhost.localdomain>
	<42634.152.1.4.40.1110838253.squirrel@www.vorpalcloud.org>
	<20050315075030.GA99510@ik.nu>
	<54633.10.0.0.9.1110891388.squirrel@www.vorpalcloud.org>
	<60ed19d405031505146af17721@mail.gmail.com>
	<42820.152.1.4.40.1110913392.squirrel@www.vorpalcloud.org>
	<1110921201.9431.30.camel@localhost.localdomain>
Message-ID: <43426.152.1.4.40.1110923108.squirrel@www.vorpalcloud.org>

Ok  right now I have different oscar.py's for PyICQ and PyAIM  so I'll try
to merge them together in a sensible manner and hand in what I have right
now.  Suppose I should probably document a lot of it too.  ;D

Daniel

-- 
"The most addictive drug in the world is music."
     - The Lost Boyz

> On Tue, 2005-03-15 at 14:03 -0500, Daniel Henninger wrote:
>
>> Do you all have any interest in my changes for oscar at some point . . .
>> or interest in me simply maintaining that particular module?  I have to
>> beat on it all the time so it's not like I don't have a vested interest
>> in
>> making it be right.  ;)  No worries if that's not cool.
>
> Yes please! For starters add them to http://twistedmatrix.com/bugs/,
> assign to z3p. Going onwards Subversion access might follow.
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>





From bob at redivi.com  Tue Mar 15 14:54:28 2005
From: bob at redivi.com (Bob Ippolito)
Date: Tue, 15 Mar 2005 16:54:28 -0500
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
References: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <495f707e6ae5670ab227b1fbd60f5b44@redivi.com>


On Mar 15, 2005, at 8:42, Andrzej Leszczynski wrote:

>
> --- Jeff Pitman <symbiont at berlios.de> wrote:
>> On Tuesday 15 March 2005 17:10, Tim Terlegård wrote:
>>>> I am looking for a Twisted based LDAP protocol
>>>> implementation (both versions 2 and 3). Is
>> anybody
>>>> aware of such, even in very early development
>> phase.
>>>
>>> There is ldaptor. Not sure where to download it
>> though, but it's
>>> definately available in debian and friends.
>>
>> Home: http://tv.debian.net/software/ldaptor
>> Download:
>>
> http://ftp.debian.org/debian/pool/main/l/ldaptor/ 
> ldaptor_%{version}.tar.gz
>>
>> Something like that.
>
>
> Thanks for the link. Got it and will look at it. Just
> out of the curiosity - what would be a reason it is
> not integrated with Twisted core protocols?

One reason is that it's LGPL.

-bob




From leszczynscy at yahoo.com  Tue Mar 15 15:57:20 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Tue, 15 Mar 2005 16:57:20 -0600
Subject: [Twisted-Python] potential bug in the reactor's handling events
	loop
In-Reply-To: <3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>
References: <42266AB4.1020104@yahoo.com> <422864BD.5000802@yahoo.com>
	<3f7576d1966e1ec12ba4f52fda5f30c9@fuhm.net>
Message-ID: <42376850.7080200@yahoo.com>

James Y Knight wrote:
> On Mar 4, 2005, at 8:38 AM, Andrzej Leszczynski wrote:
> 
>> Andrzej Leszczynski wrote:
>>
>>> Python 2.3, one of the latest Twisted version:
>>
>>
>> Is this list alive. If no, what is the place I might ask for a help. I 
>> am quite new to the Python (but no to the development), so sorry for 
>> asking such a question.
> 
> 
> I ignored your message because 1) The patch is unreadable, and backwards 
> (please use unified diff format) 2) at first glance appears to just add 
> print statements, and 3) It's not a problem that I've ever had.
> 
> I suspect other people did the same.
> 
> James

Sorry for the shortcuts.  It was not a patch but rather what I touched 
to make it working. I promise to use diff -u next time. print-s were my 
way of debugging.

Re the problem itself. I still encounter it under newest version of 
Twisted 1.3 and Python on Linux 2.4. But not on M$. Since it is a part 
of bigger construct I work on I can just send the sources. As soon as 
get some time I will send the narrowed down version.

For now I can suspect it is related to the threads I use in it 
extensively. I atested that reactor without those threads is ctrl-c-able.

I will come back to that at some point, it still intrigues me and is IMO 
the best way to learn internals of any framework ...

Thx,
A.



From exarkun at divmod.com  Tue Mar 15 17:54:45 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 16 Mar 2005 00:54:45 GMT
Subject: [Twisted-Python] loseConnection should stop the int32/int16
	stringReceived too
In-Reply-To: <20050315181452.GV7699@opteron.random>
Message-ID: <20050316005445.13806.87754364.divmod.quotient.4641@ohm>

On Tue, 15 Mar 2005 19:14:52 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Tue, Mar 15, 2005 at 12:29:35PM -0500, Itamar Shtull-Trauring wrote:
> > We probably ought to add an API, since the functionality appears to be
> > useful.
> 
> What about just adding .disconnecting to the other transports too then?
> That already exists and I don't see anything fundamentally wrong with it
> (especially with the property feature of python that won't leave us
> locked into a fixed value). Then incidentally my patch will become
> correct too ;).
> 

  The right way would be to add a 'state' attribute to all transports and have one possible value of it be 'disconnecting' (or DISCONNECTING, whatever ;).  The disconnecting attribute is problematic as a symptom of a larger internal problem (a lack of clarity as to the possible states and state transitions a transport can be in and go through).

  Jp



From foom at fuhm.net  Tue Mar 15 22:56:29 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 16 Mar 2005 00:56:29 -0500
Subject: [Twisted-Python] New feature details for NEWS
Message-ID: <8aceec6a13dd2b9de47693dd719b22d8@fuhm.net>

So, if anyone wants to expand on items in this section of the NEWS 
file, that'd be great. I think we could do with more of an explanation 
about our major new features. If there are other important changes that 
you feel belong in this list, don't be shy, add them.

> Major new features
> -----------------------
>  - Replaced home-grown components system with zope.interface.
>  - Split Twisted into multiple pieces.
>  - Relicensed: Now under the MIT license, rather than LGPL.
>  - Python 2.4 compatibility fixes
>  - Major efficiency improvements in TCP buffering algorithm.
>  - Major efficiency improvements in reactor.callLater/DelayedCall.
>  - Half-close support for TCP/SSL. (loseWriteConnection).

Also, I somewhat punted on the trial section of the NEWS file. I'm 
really not sure what the new features are since 1.3. I know everything 
changed 500 times, but I don't know what the actual feature changes 
were. It was hard to tell from the commit messages, and I don't 
remember what trial was like back in 1.3 days. If someone more familiar 
with it would like it to say anything other than "Rewritten, a bunch of 
bugs fixed, a few more added", have at it.

James




From tv at twistedmatrix.com  Wed Mar 16 01:15:48 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 16 Mar 2005 10:15:48 +0200
Subject: [Twisted-Python] Twisted based LDAP protocol implemenation
In-Reply-To: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
References: <20050315134255.60367.qmail@web30508.mail.mud.yahoo.com>
Message-ID: <4237EB34.3080209@twistedmatrix.com>

Andrzej Leszczynski wrote:
> Thanks for the link. Got it and will look at it. Just
> out of the curiosity - what would be a reason it is
> not integrated with Twisted core protocols?

It's way too big for that.



From tv at twistedmatrix.com  Wed Mar 16 01:19:27 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Wed, 16 Mar 2005 10:19:27 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13185 - Applied patch
	from	Ralph Meijer for issue 448
In-Reply-To: <a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>
References: <E1DAw2L-0003O2-00@wolfwood>
	<a287b48cb2e7474c236e5ec84dc235aa@fuhm.net>
Message-ID: <4237EC0F.2000701@twistedmatrix.com>

James Y Knight wrote:
> E.g., in this case "Applied patch from Ralph Meijer for issue 448: fixes 
> digest authentication in Jabber client" would be great.

ITYM "Fix Jabber client digest authentication, closes issue448. From 
Ralph Meijer." HTH, HAND

PS. My pet peeve, too. Spend atleast 20 seconds on your commit message
or get ranted at on IRC.



From radeex at gmail.com  Wed Mar 16 02:29:23 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 20:29:23 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
Message-ID: <60ed19d405031601294c33b81c@mail.gmail.com>

Now with MD5 sums and release notes on the web pages!

http://twistedmatrix.com/projects/

No known release-critical bugs in this prerelease. If I don't receive
any reports of grave malfunction, then 2.0-for-real will be out in a
day or two.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From bob at redivi.com  Wed Mar 16 03:09:53 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Mar 2005 05:09:53 -0500
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031601294c33b81c@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
Message-ID: <e50796c3ead39b40bba58e57e484b297@redivi.com>


On Mar 16, 2005, at 4:29, Christopher Armstrong wrote:

> Now with MD5 sums and release notes on the web pages!
>
> http://twistedmatrix.com/projects/
>
> No known release-critical bugs in this prerelease. If I don't receive
> any reports of grave malfunction, then 2.0-for-real will be out in a
> day or two.

Where is the setup.py for sumo in svn?  I need to tweak it or write 
something similar so that Mac OS X packages can be built from it in a 
sane manner...

-bob




From D.Sinang at spitech.com  Wed Mar 16 03:21:47 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Wed, 16 Mar 2005 18:21:47 +0800
Subject: [Twisted-Python] How to accept connections faster
Message-ID: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>

Hello.
 
I ran the (Twisted) server code below and it accepts a client socket
connection every 1.3 seconds. The equivalent Synchronous socket code
accepts one every 2 seconds. 
 
Can anyone here suggest any code improvements for my Twisted server to
accept connections faster ?
 
I've include the Synchronous socket server code and the client generator
code below as well.
 
#
========================================================================
==================
# Twisted server code
#
========================================================================
==================
 
from twisted.protocols import basic
from twisted.internet import reactor, protocol
 
import time
 

class MyChat(basic.LineReceiver):
    def connectionMade(self):
 
        print "Got a connection from on " + time.asctime()
        self.transport.write("Welcome. You are client number : ")
        print "Looping..."
        for i in range(10000000):
            pass
        print "Looping done."
        self.transport.loseConnection()

    def connectionLost(self, reason):
        pass

    def lineReceived(self, line):
        for c in self.factory.clients:
            c.message(line)
 
    def message(self, message):
        self.transport.write(message + '\n')
 
    def __init__ (self) :
        self.x = 1
        self.duration = 60
 
print "Starting Twisted Async Server"
print
 
factory = protocol.ServerFactory()
factory.protocol = MyChat
factory.clients = []
 
reactor.listenTCP(7878,factory,10)
reactor.run()
    
#
========================================================================
=========
# Synchronous socket server code 
#
========================================================================
=========
 
from socket import *
import sys
import time
 
s = socket(AF_INET, SOCK_STREAM)
s.bind(('', 7878))
s.listen(10)
 
print 'Login Server started on port 7878' 
 
x = 1
 

while 1:
    client,addr = s.accept()
    print str(x) + ". Got a conection from " + str(addr) + " on " +
time.asctime()
    print "Looping..."  
    for i in range(10000000):
        pass
    print "Loop done. Ready for connection..."
    print
    client.sendall ("Welcome. You are client number : " + str(x))
    x += 1
 
#
========================================================================
=========
# Socket client code
#
========================================================================
=========
 
from socket import *
import sys
import time
 
s = socket(AF_INET, SOCK_STREAM)
 
print 'Creating 20 clients...' 
 
x = 1
duration = 60
for i in range(20):
    print "Client " + str(x) + "." + " connecting to localhost at " +
time.asctime()
    s = socket(AF_INET, SOCK_STREAM)
    s.connect (("127.0.0.1",7878))
    print "Client Connected..." , time.asctime()
    s.sendall("Hello\r\n")
    data = s.recv(1024)
    print data
    x += 1 
    s.close()
 
 
Regards,
Danny
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050316/320c8c3d/attachment.html>

From radeex at gmail.com  Wed Mar 16 03:35:03 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Wed, 16 Mar 2005 21:35:03 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <e50796c3ead39b40bba58e57e484b297@redivi.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<e50796c3ead39b40bba58e57e484b297@redivi.com>
Message-ID: <60ed19d4050316023575305996@mail.gmail.com>

On Wed, 16 Mar 2005 05:09:53 -0500, Bob Ippolito <bob at redivi.com> wrote:
> Where is the setup.py for sumo in svn?  I need to tweak it or write
> something similar so that Mac OS X packages can be built from it in a
> sane manner...

trunk/setup.py

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From bob at redivi.com  Wed Mar 16 03:39:48 2005
From: bob at redivi.com (Bob Ippolito)
Date: Wed, 16 Mar 2005 05:39:48 -0500
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <b45856911f4c9e92e5b2c37d986262ca@redivi.com>


On Mar 16, 2005, at 5:21, Sinang, Danny wrote:

> I ran the (Twisted) server code below and it accepts a client socket 
> connection every 1.3 seconds. The equivalent Synchronous socket code 
> accepts one every 2 seconds.
>   
> Can anyone here suggest any code improvements for my Twisted server to 
> accept connections faster ?
...
>  
>         for i in range(10000000):
>             pass
>         print "Looping done."

That is blocking code and is not suitable for usage in a Twisted server 
if you expect good performance.  All functions that run in the 
reactor's thread should be designed to return quickly so that Twisted 
can handle events quickly.  You either need to refactor it to run 
iteratively (via successive callLater, LoopingCall, etc.), or in 
another thread (deferToThread).

-bob




From mary-twisted at puzzling.org  Wed Mar 16 03:40:13 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Wed, 16 Mar 2005 21:40:13 +1100
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <20050316104013.GA17105@sourdust.home.puzzling.org>

On Wed, Mar 16, 2005, Sinang, Danny wrote:
>         print "Looping..."
>         for i in range(10000000):
>             pass
>         print "Looping done."

Because this doesn't allow control to return to the main loop: it blocks
the entire process.

-Mary



From mcfletch at rogers.com  Wed Mar 16 03:41:43 2005
From: mcfletch at rogers.com (Mike C. Fletcher)
Date: Wed, 16 Mar 2005 05:41:43 -0500
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <42380D67.4000404@rogers.com>

Danny, Twisted is an asynchronous system.  You *cannot* use that kind of 
blocking delay tactic in Twisted without totally destroying Twisted's 
functionality:

>         for i in range(10000000):
>             pass
>         print "Looping done."
>         self.transport.loseConnection()
>
should have been something like:

    def closeInABit( ):
        self.transport.loseConnection()
    reactor.callLater( 2, closeInABit ) # call after 2 seconds

You'll want to read up on asynchronous programming (e.g. on the Twisted 
web site) to get a feel for how this model of programming networked apps 
works.

Good luck,
Mike


Sinang, Danny wrote:

> Hello.
>  
> I ran the (Twisted) server code below and it accepts a client socket 
> connection every 1.3 seconds. The equivalent Synchronous socket code 
> accepts one every 2 seconds.
>  
> Can anyone here suggest any code improvements for my Twisted server to 
> accept connections faster ?
>  
> I've include the Synchronous socket server code and the client 
> generator code below as well.
>  

...
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From solipsis at pitrou.net  Wed Mar 16 03:44:04 2005
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Wed, 16 Mar 2005 11:44:04 +0100
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F0540837E@spi-mail2003.spitech.com>
Message-ID: <1110969844.32062.8.camel@p-dhcp-333-72.rd.francetelecom.fr>


>     def connectionMade(self):
>  
>         print "Got a connection from on " + time.asctime()
>         self.transport.write("Welcome. You are client number : ")
>         print "Looping..."
>         for i in range(10000000):
>             pass

Why are you doing that ?
An event loop-based server like Twisted is not multithreaded. It means
during the handling of any event (e.g. connectionMade), other events
will not be processed, they will just be queued (by the OS usually).
When you return from the event handler, the Twisted event loop will
resume and process other events.

If you really have heavy calculations and want to keep good latencies,
you have two solutions:
- either slice your calculations in small pieces and call them one after
the other with reactor.callLater(), which ensures that you let other
events slip by
- or defer the calculations to a helper thread or process, with which
you will have to synchronize in the traditional way
(reactor.callFromThread() and reactor.callInThread() may help... I don't
know)

Good luck

Antoine.





From Henning.Ramm at mediapro-gmbh.de  Wed Mar 16 04:58:04 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Wed, 16 Mar 2005 12:58:04 +0100
Subject: [Twisted-Python] declare  pb.Copyable only once
Message-ID: <F92274058556DE42B94B148EEFB9183949E66D@exchange-03.suedkurier.de>

Hi there!

At the moment I'm trying to wrap my mind around pb objects.

I learned from the pb.Copyable howto (http://twistedmatrix.com/documents/current/howto/pb-copyable) that I must setUnjellyableForClass every object that could be sent from a client.

I need a simple empty utility class like this:

class Info(pb.Copyable):
    def __init__(self, obj=None):
        if obj: self.__dict__.update(obj.__dict__)

Because I can use such in server as well as in client, I defined the class in the server and imported it in the client.

Nevertheless I get an InsecureJelly exception in the server.

If I setUnjellyable... it in the server as in
pb.setUnjellyableForClass(Info, Info)
I get an AttributeError: Info instance has no attribute 'unjellyFor'

Is there any way to declare this class only once and not separate for server and client?


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From mikah at ceruleansoftware.com  Wed Mar 16 06:12:07 2005
From: mikah at ceruleansoftware.com (mikah at ceruleansoftware.com)
Date: Wed, 16 Mar 2005 21:12:07 +0800
Subject: [Twisted-Python] servers that are also clients? (newbie question)
Message-ID: <20050316131207.GA16347@ceruleansoftware.com>

Hello everyone,

  I've decided to implement my latest work project using
Twisted. I'm still in the design phase, and haven't actually
written any Twisted code. I'm still wading through the
documentation.

  My app is both a server and client at the same time. It takes
requests from some clients, and also relays these requests
(suitably reformatted) to a pair of third-party servers. In
this sense, it is acting as a client (I intend to use
ReconnectingClient for this).

  It essentially needs to seek confirmation from those other
servers before deciding how to respond to the 'real' clients.

  So, I understand how to write the server part of it (based on
the Howtos for mktap plugins and writing servers), but where
does the client part of the code come in?

  As I understand it, Services or Factories can encapsulate
code that should be independent of the Protocols. Should the
server-as-client code go there? 

  Thanks in advance! I hope someone can point me in the right
direction.

mikah





From leszczynscy at yahoo.com  Wed Mar 16 06:46:14 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Wed, 16 Mar 2005 05:46:14 -0800 (PST)
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: 6667
Message-ID: <20050316134614.91953.qmail@web30501.mail.mud.yahoo.com>

Hi,

>         print "Looping..."
>         for i in range(10000000):
>             pass
>         print "Looping done."

regardles I am not sure the reason of the loop and how
it fits into the design of Reactor, I wonder why it is
*only* 2 seconds. On my laptop 1.1GHz, 256MB RAM it
takes a way more to complete the loop and unblock the
Reactor's "select".

Second comment is why not xrange(10000000). With range
my  python2.3 starts allocating xxMB of memory.

What machine,OS,python version you use?
A.



From symbiont at berlios.de  Wed Mar 16 08:52:58 2005
From: symbiont at berlios.de (Jeff Pitman)
Date: Wed, 16 Mar 2005 23:52:58 +0800
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031601294c33b81c@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
Message-ID: <200503162352.58630.symbiont@berlios.de>

On Wednesday 16 March 2005 17:29, Christopher Armstrong wrote:
> Now with MD5 sums and release notes on the web pages!
>
> http://twistedmatrix.com/projects/
>
> No known release-critical bugs in this prerelease. If I don't receive
> any reports of grave malfunction, then 2.0-for-real will be out in a
> day or two.

Couple of questions:

1. Where did pair and web2 go?

2. Is it possible to get improved blurbs for the projects? (Words like 
"thing", "stuff", "ish", probably could be expounded upon.)  :-D

thanks,
-- 
-jeff



From continuum83 at yahoo.com  Wed Mar 16 09:23:36 2005
From: continuum83 at yahoo.com (Eric T)
Date: Wed, 16 Mar 2005 08:23:36 -0800 (PST)
Subject: [Twisted-Python] connecting with a FlashXML socket
Message-ID: <20050316162336.68212.qmail@web53302.mail.yahoo.com>

hey All,

my friend and i are attempting to use twisted as a
socket server to be able to accept connections from a
flash client.

here is the simple connection code on the serverside:

from twisted.protocols import basic

class TestApp(basic.LineReceiver):
    def connectionMade(self):
        print "new client\n"
        self.factory.clients.append(self)
        self.message("test")
        self.sendLine("another test");

    def connectionLost(self):
        print "lost client\n"
        self.factory.clients.remove(self)

    def lineReceived(self,line):
        print "recieved:", repr(line)
        for c in self.factory.clients:
            c.message(line)

    def message(self,msg):
        self.transport.write(msg + '\n')
        print msg + '\n'

this is basically the same as an example we were using
to help us get the code going. but when we run the
server, and then go to the client... the client
connects fine, but we cannt send/recieve any messages.

we tried setting the self.delimiter = "\0" since that
is a requirement for flashXML, but it still wouldnt
send/recieve.

the socket code on the flash-side is relative to the
following:
mySocket = new XMLSocket();

mySocket.onConnect = function(success)
{
	if (success)
		msgArea.htmlText += ";<b>Server connection
established!</b>"
	else
		msgArea.htmlText += "<b>Server connection
failed!</b>"
}

mySocket.onClose = function()
{
	msgArea.htmlText += "<b>Server connection lost</b>"
}

XMLSocket.prototype.onData = function(msg)
{
	trace("MSG: " + msg)
	msgArea.htmlText += msg
}

mySocket.connect("localhost", 9999)

function sendMsg()
{
mySocket.send(inputMsg.htmlText + "\n")
	}
}



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From continuum83 at yahoo.com  Wed Mar 16 09:25:31 2005
From: continuum83 at yahoo.com (Eric T)
Date: Wed, 16 Mar 2005 08:25:31 -0800 (PST)
Subject: [Twisted-Python] sorry about the last message (flashXML continued)
Message-ID: <20050316162531.7522.qmail@web53304.mail.yahoo.com>

sorry about that, hit the wrong key, and i sent my
message before i was able to finish. heh. i guess most
of it is there, but i just want to say thanks for any
help. sorry again.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From digi at treepy.com  Wed Mar 16 09:40:41 2005
From: digi at treepy.com (Patrick Lauber)
Date: Wed, 16 Mar 2005 17:40:41 +0100
Subject: [Twisted-Python] connecting with a FlashXML socket
In-Reply-To: <20050316162336.68212.qmail@web53302.mail.yahoo.com>
References: <20050316162336.68212.qmail@web53302.mail.yahoo.com>
Message-ID: <42386189.2040208@treepy.com>

i use a \x00 as a terminator....
this script below has an other class changhandler that looks if there is 
a new file in directory and sends that file (xml) to all connected 
clients... it's used for a web radio to push the meta infos to the clients.
have fun

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor
from xml.dom.minidom import parseString
import changehandler
class Radio(Protocol):
   
    def connectionMade(self):
        self.factory.clients.append(self)
        self.transport.write(self.factory.msg)
        self.ip=self.transport.getHost().host
        print self.ip+' connected'
    def dataReceived(self, data):
        print data
        try:
            doc=parseString(data[0:-1])
            if doc.nodeName == 'connect':
                if doc.attributes.has_key('service'):
                    self.service=doc.attributes['service']._value
                    print "new service"+self.sevice
                else:
                    print "connect was malformatted"
            else:
                pass
        except:
           print "parsing error"
       
       
    def connectionLost(self, reason='connectionDone'):
        print self.ip+' disconnected'
 


class XMLSocket(Factory):
    clients=[]
    msg='<hello>world</hello>\x00'
    protocol = Radio
    services = [["radio",Radio]]
    def __init__(self, protocol=None):
        self.protocol=protocol
        reactor.callLater(0,self.sendMsg)
    def sendMsg(self):
        msg=changehandler.waiting()
        if msg:
            for client in self.clients:
                client.transport.write(msg+"\x00")
        reactor.callLater(0,self.sendMsg)

reactor.listenTCP(8000, XMLSocket(Radio))
reactor.run()




From projects at reedflute.com  Wed Mar 16 10:01:12 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Wed, 16 Mar 2005 19:01:12 +0200
Subject: [Twisted-Python] servers that are also clients? (newbie question)
In-Reply-To: <20050316131207.GA16347@ceruleansoftware.com>
References: <20050316131207.GA16347@ceruleansoftware.com>
Message-ID: <42386658.6030209@reedflute.com>

mikah at ceruleansoftware.com wrote:

>  My app is both a server and client at the same time. It takes
>requests from some clients, and also relays these requests
>(suitably reformatted) to a pair of third-party servers. In
>this sense, it is acting as a client (I intend to use
>ReconnectingClient for this).
>
>  
>
I'm busy doing the same kind of thing.

I use a separate server/client factory which I connect with some 
abstraction layer I choose to call a conductor. The conductor also 
manages a buffer and uses callbacks into the server/client protocol 
instances.

I'm sure there must be a more clever Twisted way of doing this but I 
couldn't find any docs.

here is how the contraption starts up.

*************************************
from eva_config import EvaConfig
from eva_conductor import Conductor
from controller import ControllerFactory
from courier import CourierClientFactory
from twisted.application import service,internet

resourcemap=EvaConfig().getResourceMap()
conductor=Conductor(resourcemap).configure()
application=service.Application('eva',uid=1000,gid=100)
controllerfactory = ControllerFactory(conductor)
internet.TCPServer(8831,controllerfactory).setServiceParent( 
service.IServiceCollection(application))
courierclientfactory = CourierClientFactory(conductor)
internet.TCPClient("server1","ftp",courierclientfactory).setServiceParent( 
service.IServiceCollection(application))
****************************************

Works for me.

Eugene Coetzee

Web                 -> www.reedflute.com
=============================================== 





From justinjohnson at gmail.com  Wed Mar 16 11:17:45 2005
From: justinjohnson at gmail.com (Justin Johnson)
Date: Wed, 16 Mar 2005 12:17:45 -0600
Subject: [Twisted-Python] which dia error from lore
In-Reply-To: <20050315133750.GQ7699@opteron.random>
References: <20050314000518.GU9270@opteron.random>
	<20050314125504.13806.632641844.divmod.quotient.1560@ohm>
	<20050315133750.GQ7699@opteron.random>
Message-ID: <94a776e705031610172542f374@mail.gmail.com>

I got a similar problem trying to run "mktap names".  Since I didn't
see an existing issue I submitted
http://twistedmatrix.com/bugs/issue926.


On Tue, 15 Mar 2005 14:37:50 +0100, Andrea Arcangeli
<andrea at cpushare.com> wrote:
> On Mon, Mar 14, 2005 at 12:55:04PM +0000, Jp Calderone wrote:
> >   When does this happen, exactly?  I don't have dia installed, either,
> >   and I'm not seeing any mktap output related to it.
> 
> It happens when I run it as root to bind to port 80/443 (with
> appropriate uid change). It catches /usr/bin/which instead of the shell
> builtin. See the difference between which dia and /usr/bin/which dia.
> 
> It's only a minor warning...
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From mary-twisted at puzzling.org  Wed Mar 16 15:04:37 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 17 Mar 2005 09:04:37 +1100
Subject: Project pages (Re: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script)
In-Reply-To: <200503162352.58630.symbiont@berlios.de>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
Message-ID: <20050316220437.GA6002@home.puzzling.org>

On Wed, Mar 16, 2005, Jeff Pitman wrote:
> 2. Is it possible to get improved blurbs for the projects? (Words like
> "thing", "stuff", "ish", probably could be expounded upon.)  :-D

I'm not entirely sure, but I think this will be up to the maintainers.
Chris and I wrote most of those blurbs between us. Certainly, the
maintainers can do it faster than I can.

Maintainers: it would be great if this could be done ASAP -- the
relevant files are the .proj files in the WebSite's trunk:
http://svn.twistedmatrix.com/cvs/trunk/twistedmatrix.com/projects/data/?root=WebSite

The file format is rfc822, you should only have to edit the 'body' to
improve the longer descriptions. If you want to improve the shorter
description appearing on http://twistedmatrix.com/projects/, edit the
description field too.

It's not release critical I think because we can regenerate the website
post-release. But it would be nice.

-Mary



From bolsen at verio.net  Wed Mar 16 16:52:09 2005
From: bolsen at verio.net (Ben Olsen)
Date: Wed, 16 Mar 2005 16:52:09 -0700
Subject: [Twisted-Python] help with InsecureJelly for unkown objects in
	classes
Message-ID: <4238C6A9.5040204@verio.net>

I know there are at least a few game programmers on this list, so I'm 
hoping someone can help me out. I figured a simple NetPong game would be 
a great way to learn some Twisted and Pygame, and so far it's gone well. 
I was able to run a simple game by sending individual game status 
elements between client and server. Just today I tried to change things 
around to use pb.Copyable and pb.RemoteCopy to send a GameStatus class 
which contains all the game state details (player positions, ball 
position, etc). I've managed to send the class, but only if it contains 
standard objects. However, I'd like the GameStatus to include a really 
useful Pygame object, called Rect. Whenever I try to send that across 
the wire, I get:
twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
'Rect'> <rect(0, 0, 32, 32)>

I've tried a number of things, but I can't get Twisted to accept a Rect 
as a sendable object. One thing I tried was subclassing Rect:
class netRect(Rect, pb.Copyable, pb.RemoteCopy):
   pass
and using that in my GameState instead. Still get the same error. I 
tried calling pb.setUnjellyableForClass for it on both client and server 
side (only client is receiving, but the exception is thrown on server 
side), but it didn't help. I also tried inheriting from Jellyable and 
Unjellyable, but I don't really understand the specifics of how to use 
those.

Does anybody have tips on passing custom objects (such as pygame.Rect) 
in Copyable classes?

Ben Olsen




From radeex at gmail.com  Wed Mar 16 17:25:07 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 17 Mar 2005 11:25:07 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d405031613189cd97a1@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
	<60ed19d405031613189cd97a1@mail.gmail.com>
Message-ID: <60ed19d40503161625bc90e58@mail.gmail.com>

On Wed, 16 Mar 2005 23:52:58 +0800, Jeff Pitman <symbiont at berlios.de> wrote:
> On Wednesday 16 March 2005 17:29, Christopher Armstrong wrote:
> > Now with MD5 sums and release notes on the web pages!
> >
> > http://twistedmatrix.com/projects/
> >
> > No known release-critical bugs in this prerelease. If I don't receive
> > any reports of grave malfunction, then 2.0-for-real will be out in a
> > day or two.
>
> Couple of questions:
>
> 1. Where did pair and web2 go?

huh, I guess I forgot to make a web page for pair. it's been released.
I'll make the page later today.

web2 is not being released yet, as per the main developer's request.

> 2. Is it possible to get improved blurbs for the projects? (Words like
> "thing", "stuff", "ish", probably could be expounded upon.)  :-D

DEVELOPERS:

svn checkout svn+ssh://svn.twistedmatrix.com/svn/WebSite/trunk WebSite
cd twistedmatrix.com/projects/data/
vi <yourproj>.data
svn commit

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From mary-twisted at puzzling.org  Wed Mar 16 17:28:50 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Thu, 17 Mar 2005 11:28:50 +1100
Subject: [Twisted-Python] Twisted (and all subprojects) a3,
	fresh out of the release script
In-Reply-To: <60ed19d40503161625bc90e58@mail.gmail.com>
References: <60ed19d405031601294c33b81c@mail.gmail.com>
	<200503162352.58630.symbiont@berlios.de>
	<60ed19d405031613189cd97a1@mail.gmail.com>
	<60ed19d40503161625bc90e58@mail.gmail.com>
Message-ID: <20050317002850.GA13481@home.puzzling.org>

On Thu, Mar 17, 2005, Christopher Armstrong wrote:
> DEVELOPERS:
> 
> svn checkout svn+ssh://svn.twistedmatrix.com/svn/WebSite/trunk WebSite
> cd twistedmatrix.com/projects/data/
> vi <yourproj> .data
> svn commit
> 

I'll file bugs against maintainers who haven't already done this (except
maybe for core, there's already a bit of stuff for core) this afternoon.

-Mary



From D.Sinang at spitech.com  Wed Mar 16 18:25:58 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Thu, 17 Mar 2005 09:25:58 +0800
Subject: [Twisted-Python] How to accept connections faster
Message-ID: <048A40781D05D143842A596D7C78F40F054384D5@spi-mail2003.spitech.com>

Hi Mike,

Thanks for the tip. My code is indeed running faster now.

However, the reason for the loop was to somehow simulate late responses
from a remote database server.

I'm guessing I should put the database query code in the closeInABit
method you mentioned like this :

def closeInABit ():
        mydb = MySQLdb.Connect(db='mydatabase', host="10.10.10.10",
user="myuser", passwd="mypassword")
        cursor = mydb.cursor()

        retval = ''
        cursor = mydb.cursor()
        cursor.execute("SELECT * FROM Employees WHERE empnum = 'ABCD'")
	  retval = cursor.fetchone()
	  if retval == SomeValue:
		self.transport.write("Login Ok")
	  else:
		self.transport.write("Login not Ok")
        cursor.close()
        mydb.close()
 	  self.transport.loseConnection()

Is this ok ? Or should there be some special Asycn coding technique I
must also learn ?

Regards,
Danny

==================================================================

Mike C. Fletcher wrote :

Danny, Twisted is an asynchronous system.  You *cannot* use that kind of
blocking delay tactic in Twisted without totally destroying Twisted's
functionality:

>         for i in range(10000000):
>             pass
>         print "Looping done."
>         self.transport.loseConnection()
>
should have been something like:

    def closeInABit( ):
        self.transport.loseConnection()
    reactor.callLater( 2, closeInABit ) # call after 2 seconds

You'll want to read up on asynchronous programming (e.g. on the Twisted
web site) to get a feel for how this model of programming networked apps
works.

Good luck,
Mike


Sinang, Danny wrote:

> Hello.
>  
> I ran the (Twisted) server code below and it accepts a client socket 
> connection every 1.3 seconds. The equivalent Synchronous socket code 
> accepts one every 2 seconds.
>  
> Can anyone here suggest any code improvements for my Twisted server to

> accept connections faster ?
>  
> I've include the Synchronous socket server code and the client 
> generator code below as well.
>  

...
________________________________________________
  Mike C. Fletcher
  Designer, VR Plumber, Coder
  http://www.vrplumber.com
  http://blog.vrplumber.com
                              PyCon is coming...




From exarkun at divmod.com  Wed Mar 16 19:24:21 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 02:24:21 GMT
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <048A40781D05D143842A596D7C78F40F054384D5@spi-mail2003.spitech.com>
Message-ID: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>

On Thu, 17 Mar 2005 09:25:58 +0800, "Sinang, Danny" <d.sinang at spitech.com> wrote:
>Hi Mike,
> 
> Thanks for the tip. My code is indeed running faster now.
> 
> However, the reason for the loop was to somehow simulate late responses
> from a remote database server.
> 
> I'm guessing I should put the database query code in the closeInABit
> method you mentioned like this :
> [snip - blocking database code]
> 
> Is this ok ? Or should there be some special Asycn coding technique I
> must also learn ?

  Yea, async.  Async is nice.  Twisted comes with a moduled named "adbapi" that provides a non-blocking layer around standard DB-API 2.0 modules (such as MySQLdb).  You can read more about it here at <http://twistedmatrix.com/documents/current/howto/enterprise>.

  Jp



From Henning.Ramm at mediapro-gmbh.de  Thu Mar 17 00:51:22 2005
From: Henning.Ramm at mediapro-gmbh.de (Henning.Ramm at mediapro-gmbh.de)
Date: Thu, 17 Mar 2005 08:51:22 +0100
Subject: [Twisted-Python] help with InsecureJelly for unkown objects
	inclasses
Message-ID: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>

>twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
>'Rect'> <rect(0, 0, 32, 32)>

That's not related to pygame, but general pb behaviour.
See my question about "declare pb.Copyable once" and look at this howto:
http://twistedmatrix.com/documents/current/howto/pb-copyable


Best regards,
Henning Hraban Ramm
Südkurier Medienhaus / MediaPro
Support/Admin/Development Dept.



From andrea at cpushare.com  Thu Mar 17 05:40:56 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 13:40:56 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting client
	factory
Message-ID: <20050317124056.GJ21597@opteron.random>

>From a client I'm getting this error:

2005/03/16 10:42 CET [cpushare_protocol,client] 'limit sell'
2005/03/17 06:31 CET [cpushare_protocol,client] Traceback (most recent call last):
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
            return func(*args,**kw)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/pollreactor.py", line 160, in _doReadOrWrite
            why = selectable.doRead()
        --- <exception caught here> ---
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 98, in doRead
            return Connection.doRead(self)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 239, in doRead
            data = self.socket.recv(self.bufferSize)
        OpenSSL.SSL.SysCallError: (110, 'Connection timed out')
        
2005/03/17 06:31 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
econds
2005/03/17 06:31 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/17 06:31 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
imeout caused connection failure.
2005/03/17 06:31 CET [-] ]
2005/03/17 06:31 CET [-] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>

This is a reconnecting client factory, the python version is 2.3.4 and twisted
version is 1.3.0a. The socket should sit in a idle state. No communication over
that socket will happen (the app is under development), but it should not go in
timeout unless the connection with the server ends and the keepalive events
triggers a disconnect (I enabled keepalive on the tcp level).

Even if it goes in timeout it must try to reconnect immediatly while it seems
like it's hanging after the "Stopping factory".


Earlier when I got the connection timed out event (for no apparent good reason)
at least it was immediatly trying to reconnect:

2005/03/14 05:30 CET [cpushare_protocol,client] 'limit sell'
2005/03/14 17:59 CET [cpushare_protocol,client] Traceback (most recent call last):
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 65, in callWithLogger
            callWithContext({"system": lp}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/log.py", line 52, in callWithContext
            return context.call({ILogContext: newCtx}, func, *args, **kw)
          File "/usr/lib64/python2.3/site-packages/twisted/python/context.py", line 43, in callWithContext
            return func(*args,**kw)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/pollreactor.py", line 160, in _doReadOrWrite
            why = selectable.doRead()
        --- <exception caught here> ---
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 98, in doRead
            return Connection.doRead(self)
          File "/usr/lib64/python2.3/site-packages/twisted/internet/tcp.py", line 239, in doRead
            data = self.socket.recv(self.bufferSize)
        OpenSSL.SSL.SysCallError: (110, 'Connection timed out')
        
2005/03/14 17:59 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
econds
2005/03/14 17:59 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
2005/03/14 17:59 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>


So my first priority is to understand why it stopped trying to reconnect (which
is the major bug) and the second priority is to understand why it was going in
timeout in the first place. (I can't exclude there have been a temporary network
disruption that caused the keepalive to trigger the disconnect.)

Could this be a bug in 1.3.0a? I expect the client will be mostly run with
1.3.0a, only on the server side I use SVN + pending fixes.

This is the reconnecting code:

class cpushare_factory(ReconnectingClientFactory):
	maxDelay = 600 # limit the maximum delay to 10 min

	protocol = cpushare_protocol

	def buildProtocol(self, addr):
		self.resetDelay()
		protocol = self.protocol()
		assert not hasattr(protocol, 'factory')
		protocol.factory = self
		return protocol

	def clientConnectionFailed(self, connector, reason):
		print 'Connection failed. Reason:', reason
		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

	def connectionMade(self):
		self.transport.setTcpKeepAlive(1)

Is the above correct? It works fine when the connection failed reason is
"ConnectionRefusedError" instead of TimeoutError.


What else should I do to prevent this error to leave the factory stopped?

2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
imeout caused connection failure.

Where does the "twisted.internet.error.TimeoutError" come from?


The full source is LGPL and downloadable here:

	https://www.cpushare.com/downloads/cpushare-0.11.tar.bz2

The server side logs are absolutely not-interesting, all I get is a
connectionLost event without any apparent error (server side is SVN-trunk).

Any help is greatly appreciated, thanks!



From exarkun at divmod.com  Thu Mar 17 07:28:06 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 14:28:06 GMT
Subject: [Twisted-Python] help with ssl timeout and not reconnecting client
	factory
In-Reply-To: <20050317124056.GJ21597@opteron.random>
Message-ID: <20050317142806.13806.1838714217.divmod.quotient.7796@ohm>

On Thu, 17 Mar 2005 13:40:56 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>>From a client I'm getting this error:
> 
> [snip -  traceback and log]
>         
> This is a reconnecting client factory, the python version is 2.3.4 and twisted
> version is 1.3.0a. The socket should sit in a idle state. No communication over
> that socket will happen (the app is under development), but it should not go in
> timeout unless the connection with the server ends and the keepalive events
> triggers a disconnect (I enabled keepalive on the tcp level).
> 
> Even if it goes in timeout it must try to reconnect immediatly while it seems
> like it's hanging after the "Stopping factory".
> 
> 
> Earlier when I got the connection timed out event (for no apparent good reason)
> at least it was immediatly trying to reconnect:
> 
> [snip - traceback and log]
>         
> 2005/03/14 17:59 CET [cpushare_protocol,client] <twisted.internet.ssl.Connector instance at 0x2aaaac28d950> will retry in 2 s
> econds
> 2005/03/14 17:59 CET [cpushare_protocol,client] Stopping factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
> 2005/03/14 17:59 CET [-] Starting factory <cpushare.proto.cpushare_factory instance at 0x2aaaad414290>
> 
> 
> So my first priority is to understand why it stopped trying to reconnect (which
> is the major bug) and the second priority is to understand why it was going in
> timeout in the first place. (I can't exclude there have been a temporary network
> disruption that caused the keepalive to trigger the disconnect.)

  For some reason unfathomable to me, ReconnectingClientFactory _stops_ trying to reconnect if a UserError is the cause of failed connection.  Further, for some reason, error.TimeoutError subclasses UserError.  This has bitten at least one other project (buildbot).

> 
> Could this be a bug in 1.3.0a? I expect the client will be mostly run with
> 1.3.0a, only on the server side I use SVN + pending fixes.

  I'm inclined to say that it is indeed a bug.  I think ReconnectingClientFactory should always retry the connection, regardless of the exception with which the previous attempt fails.  If a program wants to allow a user to interrupt the retry logic, there is a "stopTrying" method.

> 
> This is the reconnecting code:
> 
> class cpushare_factory(ReconnectingClientFactory):
> 	maxDelay = 600 # limit the maximum delay to 10 min
> 
> 	protocol = cpushare_protocol
> 
> 	def buildProtocol(self, addr):
> 		self.resetDelay()
> 		protocol = self.protocol()
> 		assert not hasattr(protocol, 'factory')
> 		protocol.factory = self
> 		return protocol
> 
> 	def clientConnectionFailed(self, connector, reason):
> 		print 'Connection failed. Reason:', reason
> 		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)

  If you look at twisted/internet/protocol.py for the definition of ReconnectingClientFactory.clientConnectionFailed, it should be pretty obvious how you want to redefine clientConnectionFailed to avoid the behavior you're seeing.

> 
> 	def connectionMade(self):
> 		self.transport.setTcpKeepAlive(1)
> 
> Is the above correct? It works fine when the connection failed reason is
> "ConnectionRefusedError" instead of TimeoutError.
> 
> 
> What else should I do to prevent this error to leave the factory stopped?
> 
> 2005/03/17 06:31 CET [-] Connection failed. Reason: [Failure instance: Traceback: twisted.internet.error.TimeoutError, User t
> imeout caused connection failure.
> 
> Where does the "twisted.internet.error.TimeoutError" come from?
> 

  It's generated internally by Twisted when the alloted connection time has elapsed without a connection being created.

  Most likely it _is_ network related problems that caused the connection to fail, but Twisted is certainly responsible for the decision to cease further reconnection attempts.

  Jp



From dizzyd at gmail.com  Thu Mar 17 08:58:14 2005
From: dizzyd at gmail.com (Dave Smith)
Date: Thu, 17 Mar 2005 08:58:14 -0700
Subject: [Twisted-Python] Commit Messages
Message-ID: <cba01a4105031707586d81c101@mail.gmail.com>

James/Tommi,

I didn't see your requests about commit messages until after
committing (yet another) patch this morning. I'll be more descriptive
from here on out.

One of the reasons that I typically write commit messages like the
above, is because I like to keep information about bug fixes in as few
places as possible -- i.e. the bug tracker is there for a reason. :)

That said, different cultures deal with commit messages in different
ways, so I'll try to fit into the local culture as best I can. :)

D.



From bolsen at verio.net  Thu Mar 17 09:58:08 2005
From: bolsen at verio.net (Ben Olsen)
Date: Thu, 17 Mar 2005 09:58:08 -0700
Subject: [Twisted-Python] help with InsecureJelly for unkown
	objects	inclasses
In-Reply-To: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>
References: <F92274058556DE42B94B148EEFB9183949E671@exchange-03.suedkurier.de>
Message-ID: <4239B720.60205@verio.net>

Henning,

I realize the error isn't specific to pygame in any way, I was just 
hoping to give everyone enough context. I'm getting the error because a 
pygame.Rect isn't a jellyable object. But so far I haven't been able to 
make a jellyable object out of it. The problem for me is that this Rect 
object is inside of another class (i.e. a GameState class). I can set 
pb.Copyable and pb.RemoteCopy on the GameState class, and it goes back 
and forth just fine, but *only* if I remove the pygame.Rect attributes 
from it.

I searched the twisted site for "declare pb.Copyable once," and even 
just the word "Henning," but I couldn't find any threads about this. And 
unfortunately the howto doesn't help, since all it shows is how to send 
a simple class back and forth, which I can do fine.

Any other suggestions for getting a class with non-standard objects in 
it to jelly properly?

Ben

Henning.Ramm at mediapro-gmbh.de wrote:

>>twisted.spread.jelly.InsecureJelly: Type not allowed for object: <type 
>>'Rect'> <rect(0, 0, 32, 32)>
>>    
>>
>
>That's not related to pygame, but general pb behaviour.
>See my question about "declare pb.Copyable once" and look at this howto:
>http://twistedmatrix.com/documents/current/howto/pb-copyable
>
>
>Best regards,
>Henning Hraban Ramm
>Südkurier Medienhaus / MediaPro
>Support/Admin/Development Dept.
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>



From itamar at itamarst.org  Thu Mar 17 09:51:04 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Mar 2005 11:51:04 -0500
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317124056.GJ21597@opteron.random>
References: <20050317124056.GJ21597@opteron.random>
Message-ID: <1111078265.8749.12.camel@localhost.localdomain>

On Thu, 2005-03-17 at 13:40 +0100, Andrea Arcangeli wrote:

> Even if it goes in timeout it must try to reconnect immediatly while it seems
> like it's hanging after the "Stopping factory".

There was a bug in 1.3 in ReconnectingClientFactory that caused it to
not reconnect on TimeoutErrors. It's fixed in 2.0.




From itamar at itamarst.org  Thu Mar 17 09:52:06 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 17 Mar 2005 11:52:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13213 - Connection timeouts
	raise _error.TimeoutError_, not defer.TimeoutError.
In-Reply-To: <E1DBwCq-0005Xi-00@wolfwood>
References: <E1DBwCq-0005Xi-00@wolfwood>
Message-ID: <1111078326.8749.14.camel@localhost.localdomain>

On Thu, 2005-03-17 at 07:42 -0700, Jp Calderone wrote:

>              self.connector = connector
> -            if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> +            if not reason.check(error.UserError) or reason.check(error.TimeoutError):
>                  self.retry()

Maybe we should just drop the UserError thing? It's causing way too many
bugs. Also, why are error.TimeoutError and defer.TimeoutError different?




From exarkun at divmod.com  Thu Mar 17 10:26:39 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 17:26:39 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13213 - Connection
	timeouts raise _error.TimeoutError_, not defer.TimeoutError.
In-Reply-To: <1111078326.8749.14.camel@localhost.localdomain>
Message-ID: <20050317172639.13806.1889717453.divmod.quotient.8043@ohm>

On Thu, 17 Mar 2005 11:52:06 -0500, Itamar Shtull-Trauring <itamar at itamarst.org> wrote:
>On Thu, 2005-03-17 at 07:42 -0700, Jp Calderone wrote:
> 
> >              self.connector = connector
> > -            if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> > +            if not reason.check(error.UserError) or reason.check(error.TimeoutError):
> >                  self.retry()
> 
> Maybe we should just drop the UserError thing? It's causing way too many
> bugs. Also, why are error.TimeoutError and defer.TimeoutError different?
> 

  error.TimeoutError is a general t.internet timeout error.  defer.TimeoutError is the except used when a setTimeout timeout expires.

  The latter should obviously not exist, since Deferred.setTimeout should not even exist.  I think the change I made is the most appropriate given the current proximity to 2.0.

  Jp



From qhfgva at gmail.com  Thu Mar 17 10:29:09 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Thu, 17 Mar 2005 10:29:09 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050308055911.GM7812@trogdor.home.puzzling.org>
References: <b75caff405030721216aebf5a@mail.gmail.com>
	<20050308055911.GM7812@trogdor.home.puzzling.org>
Message-ID: <b75caff4050317092951522774@mail.gmail.com>

So I've got a simple prototype of what I'm trying to achieve with my
"queued tasks" xmlrpc server.

I'd appreciate any comments, suggestions.  So far it seems to work
exactly I wanted but I have a feeling I'm abusing the intended use of
deferreds.  And that by polling I'm deviating from the twisted
workflow model.  But you have to start somewhere.

Here is the code and a test client.

xmlrpc_queued_tasks_server.py==============================
#!/usr/bin/env python

# Prototype for a xmlrpc server that
# - queues up potentially long, resource intensive tasks
# - run tasks in order received and only one at a time
# - keeping track of overdue tasks
# - doing no work for a task until it is its turn

# python modules
import time
import thread
import xmlrpclib

# twisted modules
from twisted.web import xmlrpc, server
from twisted.internet import defer

# GLOBALS
XMLRPC_PORT = 7080 
    
# ----------------------------------------------------------------------
def task_monitor(task_list):
    task_run_lengths = {}
    
    while 1:
        print '-' * 70
        print 'tasks in queue:', len(task_list)
        if len(task_list) == 0:
            print 'Nothing to do...'
            pass
        else:
            d,func,args = task_list[0]
            if d.paused == 1:
                print 'unpausing:', d 
                d.unpause() 
                print 'paused =',d.paused 
                def curried_func(*_args):
                    d.callback(func(*_args))
                thread.start_new(curried_func, args)
                task_run_lengths[d] = time.time()
            elif d.paused == 0 and d.called == 1:
                if len(d.callbacks) == 0:
                    print 'removing finished task from queue:', d
                    task_list.pop(0)
                    del task_run_lengths[d]
            else:
                #print task_run_lengths[d], time.time()
                if (time.time() - task_run_lengths[d]) > 5:
                    print 'WARNING: long running process!:', d,
int(time.time() - task_run_lengths[d])

        time.sleep(1)
# ----------------------------------------------------------------------
class QueuedXMLRPCServer(xmlrpc.XMLRPC):

    job_queue = []

    def __init__(self):
        thread.start_new(task_monitor, (self.job_queue,))
        xmlrpc.XMLRPC.__init__(self)

    def render(self,request):

        # MOSTLY COPIED FROM PARENT CLASS
        request.content.seek(0, 0)
        args, functionPath = xmlrpclib.loads(request.content.read())
        try:
            function = self._getFunction(functionPath)
        except xmlrpc.Fault, f:
            self._cbRender(f, request)
        else:
            request.setHeader("content-type", "text/xml")
            d = defer.Deferred()
            d.addErrback(
                self._ebRender
            ).addCallback(
                self._cbRender, request
            )
            d.pause()
            self.job_queue.append((d,function,args))
        return server.NOT_DONE_YET

    def xmlrpc_echo(self, x):
        """ Echo back to client."""
        if x.endswith('3'):
            # cause one task to trip the warning
            time.sleep(15)
        else:
            time.sleep(3)
        return x
    
# ----------------------------------------------------------------------
if __name__ == '__main__':

    from twisted.internet import reactor
    r = QueuedXMLRPCServer()

    # create a "listner" (TCP or SSL)
    reactor.listenTCP(XMLRPC_PORT, server.Site(r))
    reactor.run()


test_xmlrpc_queue.py ===================================

#! /usr/bin/env python

import thread
import xmlrpclib
import time

def echo_caller(x):
    print 'call made by:', x
    s = xmlrpclib.Server('http://my.server.xyz:7080/')
    print s.echo('call returned from %d' % x)

for x in range(10):
    time.sleep(1)
    thread.start_new_thread(echo_caller, (x,))
raw_input('> hit enter to end')




On Tue, 8 Mar 2005 16:59:11 +1100, Andrew Bennetts
<andrew-twisted at puzzling.org> wrote:
> On Mon, Mar 07, 2005 at 10:21:14PM -0700, Dustin Lee wrote:
> [...]
> >
> > Basically the idea is that the server will receive a variety of
> > requests to perform tasks.  Some of these will be very quick to do and
> > some will take several minutes (perhaps up to an hour).  Some tasks
> > must run alone and some can run in parallel with others.  Even just a
> > simple FIFO type queuing would be fine to start.
> >
> > Any pointers on how to proceed?
> 
> The DeferredQueue class in SVN might be a good starting point:
> 
>     http://svn.twistedmatrix.com/cvs/trunk/twisted/internet/defer.py?view=auto&rev=12970&root=Twisted
> 
> -Andrew.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 


-- 
Dustin Lee
qhfgva=rot13(dustin)



From exarkun at divmod.com  Thu Mar 17 10:44:18 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 17:44:18 GMT
Subject: [Twisted-Python] help with InsecureJelly for unkown
	objects	inclasses
In-Reply-To: <4239B720.60205@verio.net>
Message-ID: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>

On Thu, 17 Mar 2005 09:58:08 -0700, Ben Olsen <bolsen at verio.net> wrote:
>Henning,
> 
> I realize the error isn't specific to pygame in any way, I was just 
> hoping to give everyone enough context. I'm getting the error because a 
> pygame.Rect isn't a jellyable object. But so far I haven't been able to 
> make a jellyable object out of it. The problem for me is that this Rect 
> object is inside of another class (i.e. a GameState class). I can set 
> pb.Copyable and pb.RemoteCopy on the GameState class, and it goes back 
> and forth just fine, but *only* if I remove the pygame.Rect attributes 
> from it.
> 
> I searched the twisted site for "declare pb.Copyable once," and even 
> just the word "Henning," but I couldn't find any threads about this. And 
> unfortunately the howto doesn't help, since all it shows is how to send 
> a simple class back and forth, which I can do fine.
> 
> Any other suggestions for getting a class with non-standard objects in 
> it to jelly properly?

  One approach is to override getStateToCopy (or jellyFor, or getStateToCopyFor, or __getstate__, or several of the above, or all of the above, depending) on your GameState class.  Your implementation can do something like convert the rect to a tuple (or something else easily jellyable).  Similarly, your unjellier can convert the tuple back to a rect.

  Jp



From smilner at trinityz.com  Thu Mar 17 10:53:08 2005
From: smilner at trinityz.com (Steve Milner)
Date: Thu, 17 Mar 2005 12:53:08 -0500
Subject: [Twisted-Python] HTTP File Posting and Retrieving
Message-ID: <4239C404.1030107@trinityz.com>

Hello List,

I'm looking to use Twisted to download and upload files via HTTP. I've 
looked at the examples for web.client but am still a bit confused (and 
am wondering if maybe there is a different class I should be working 
with). My questions are:

1.) How can I upload a file
2.) How can I download a file and get the headers for parsing (size and 
whatnot).

Thanks in advance,
Steve



From exarkun at divmod.com  Thu Mar 17 11:17:15 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 17 Mar 2005 18:17:15 GMT
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: 0
Message-ID: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>

On Thu, 17 Mar 2005 10:29:09 -0700, Dustin Lee <qhfgva at gmail.com> wrote:
>So I've got a simple prototype of what I'm trying to achieve with my
> "queued tasks" xmlrpc server.
> 
> I'd appreciate any comments, suggestions.  So far it seems to work
> exactly I wanted but I have a feeling I'm abusing the intended use of
> deferreds.  And that by polling I'm deviating from the twisted
> workflow model.  But you have to start somewhere.

  Yes, much abuse is present in this code.  A couple grievous wrongs:

    Deferreds (and almost all other Twisted APIs) are not thread-safe.  You cannot invoke their methods in a thread other than that of the reactor.

    The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.

  Attached is a modified version.  It has a problem with shutdown, which I imagine is related to not properly closing the reactor's threadpool.  Maybe someone else can suggest the correct way to deal with that.

  Jp
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xmlrpc_queued_tasks_server.py
Type: application/x-python
Size: 2816 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050317/f057c3ed/attachment-0002.bin>

From qhfgva at gmail.com  Thu Mar 17 11:40:42 2005
From: qhfgva at gmail.com (Dustin Lee)
Date: Thu, 17 Mar 2005 11:40:42 -0700
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
References: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
Message-ID: <b75caff405031710404e2b2a39@mail.gmail.com>

Thanks for the response.  I will give it a look see.  Still have much
to learn about twisted, but I figure I'll learn more by trying out my
ideas than just reading the tutorials over and over...

dustin


On Thu, 17 Mar 2005 18:17:15 GMT, Jp Calderone <exarkun at divmod.com> wrote:
> On Thu, 17 Mar 2005 10:29:09 -0700, Dustin Lee <qhfgva at gmail.com> wrote:
> >So I've got a simple prototype of what I'm trying to achieve with my
> > "queued tasks" xmlrpc server.
> >
> > I'd appreciate any comments, suggestions.  So far it seems to work
> > exactly I wanted but I have a feeling I'm abusing the intended use of
> > deferreds.  And that by polling I'm deviating from the twisted
> > workflow model.  But you have to start somewhere.
> 
>   Yes, much abuse is present in this code.  A couple grievous wrongs:
> 
>     Deferreds (and almost all other Twisted APIs) are not thread-safe.  You cannot invoke their methods in a thread other than that of the reactor.
> 
>     The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.
> 
>   Attached is a modified version.  It has a problem with shutdown, which I imagine is related to not properly closing the reactor's threadpool.  Maybe someone else can suggest the correct way to deal with that.
> 
>   Jp
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 


-- 
Dustin Lee
qhfgva=rot13(dustin)



From bolsen at verio.net  Thu Mar 17 13:03:43 2005
From: bolsen at verio.net (Ben Olsen)
Date: Thu, 17 Mar 2005 13:03:43 -0700
Subject: [Twisted-Python] help with InsecureJelly for
	unkown	objects	inclasses--solution
In-Reply-To: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>
References: <20050317174418.13806.591692018.divmod.quotient.8068@ohm>
Message-ID: <4239E29F.8080001@verio.net>

Thanks Jp, someone else had that suggestion too, and it ended up working 
just fine. Using getStateToCopy and setCopyableState, I can convert a 
pygame.Rect to a tuple before sending, then convert it back when 
receiving. For those curious, the class looks something like this:

class GameState(pb.Copyable, pb.RemoteCopy):
    def __init__(self, id):
        ... define various game state properties ...
        self.ball = Rect([0,0,32,32])

    def getStateToCopy(self):
        ret = self.__dict__.copy()
        del ret['ball']
        ret['balltuple'] = (self.ball.x, self.ball.y, self.ball.w, 
self.ball.h)
        return ret
       
    def setCopyableState(self, state):
        self.ball = Rect(state['balltuple'])
        return self.__dict__

This class is inherited on both server and client. This makes passing 
the pygame.Rect transparent, so no work is required on either the server 
or client side.

Ben

Jp Calderone wrote:

>
>  One approach is to override getStateToCopy (or jellyFor, or getStateToCopyFor, or __getstate__, or several of the above, or all of the above, depending) on your GameState class.  Your implementation can do something like convert the rect to a tuple (or something else easily jellyable).  Similarly, your unjellier can convert the tuple back to a rect.
>
>  Jp
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>



From andrea at cpushare.com  Thu Mar 17 15:40:22 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 23:40:22 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317142806.13806.1838714217.divmod.quotient.7796@ohm>
References: <20050317124056.GJ21597@opteron.random>
	<20050317142806.13806.1838714217.divmod.quotient.7796@ohm>
Message-ID: <20050317224022.GT21597@opteron.random>

On Thu, Mar 17, 2005 at 02:28:06PM +0000, Jp Calderone wrote:
>   For some reason unfathomable to me, ReconnectingClientFactory
>   _stops_ trying to reconnect if a UserError is the cause of failed
>   connection.  Further, for some reason, error.TimeoutError subclasses
>   UserError.  This has bitten at least one other project (buildbot).

Ok great that you could explain it so quickly!

>   I'm inclined to say that it is indeed a bug.  I think
>   ReconnectingClientFactory should always retry the connection,
>   regardless of the exception with which the previous attempt fails.
>   If a program wants to allow a user to interrupt the retry logic,
>   there is a "stopTrying" method.

Definitely agreed.

I think at very least the error.TimeoutError should not stop the
reconnection (dunno about the others subclassing UserError).

For sure I'd rather prefer that it tries to reconnect no matter what.

>   If you look at twisted/internet/protocol.py for the definition of
>   ReconnectingClientFactory.clientConnectionFailed, it should be
>   pretty obvious how you want to redefine clientConnectionFailed to
>   avoid the behavior you're seeing.

I'll look into a workaround.

>   It's generated internally by Twisted when the alloted connection
>   time has elapsed without a connection being created.
> 
>   Most likely it _is_ network related problems that caused the
>   connection to fail, but Twisted is certainly responsible for the
>   decision to cease further reconnection attempts.

Ok.



From andrea at cpushare.com  Thu Mar 17 15:58:55 2005
From: andrea at cpushare.com (Andrea Arcangeli)
Date: Thu, 17 Mar 2005 23:58:55 +0100
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <1111078265.8749.12.camel@localhost.localdomain>
References: <20050317124056.GJ21597@opteron.random>
	<1111078265.8749.12.camel@localhost.localdomain>
Message-ID: <20050317225855.GU21597@opteron.random>

On Thu, Mar 17, 2005 at 11:51:04AM -0500, Itamar Shtull-Trauring wrote:
> There was a bug in 1.3 in ReconnectingClientFactory that caused it to
> not reconnect on TimeoutErrors. It's fixed in 2.0.

Ok. This should workaround the bug in my app:

Index: cpushare/proto.py
===================================================================
RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
retrieving revision 1.29
diff -u -p -r1.29 proto.py
--- cpushare/proto.py	13 Mar 2005 23:18:24 -0000	1.29
+++ cpushare/proto.py	17 Mar 2005 22:56:20 -0000
@@ -148,8 +148,24 @@ class cpushare_factory(ReconnectingClien
 		protocol.factory = self
 		return protocol
 
+	def clientConnectionLost(self, connector, reason):
+		print 'Lost connection. Reason:', reason
+		ReconnectingClientFactory.clientConnectionLost(self, connector, reason)
+
 	def clientConnectionFailed(self, connector, reason):
 		print 'Connection failed. Reason:', reason
+		# workaround for bug in 1.3.0 - start
+		from twisted.copyright import version
+		if '1.3.0' in version:
+			def workaround_clientConnectionFailed(connector, reason):
+				if self.continueTrying:
+					self.connector = connector
+					from twisted.internet import interfaces, error, defer
+					if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
+						self.retry()
+			workaround_clientConnectionFailed(connector, reason)
+			return
+		# workaround for bug in 1.3.0 - end
 		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)
 
 	def connectionMade(self):


Thanks Itamar and Jp for the help!



From andy at thecablelounge.com  Thu Mar 17 18:15:49 2005
From: andy at thecablelounge.com (Andy Gayton)
Date: Fri, 18 Mar 2005 11:15:49 +1000
Subject: [Twisted-Python] newbie: scheduling/queuing tasks with xmlrpc
In-Reply-To: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
References: <20050317181715.13806.987246211.divmod.quotient.8116@ohm>
Message-ID: <423A2BC5.5070905@thecablelounge.com>

Jp Calderone wrote:

>     The called and paused Deferred attributes are not really public.  You should avoid using them if at all possible (and it almost always is).  Likewise, the pause() and unpause() methods are more for the convenience of Deferred's implementation and you should never need to call them.

Thinking over the recent deferred timeout thread:

http://marc.free.net.ph/message/20050225.195330.793c275f.en.html#twisted-python

it looks like methods like pause, unpause, cancel and timeout should all 
be handled by the source of the operation.  A common operation (job) api 
that exposed these methods would make building generic scheduling 
frameworks easier.

Dustin I don't know if you'd find this thread of interest:

http://twistedmatrix.com/pipermail/twisted-python/2004-March/007271.html

The problem with the DeferredPriorityQueue there for your case is if 
enough hour long jobs come to use up all available tokens, the server 
would be clogged up until they finish.  If the queue took jobs with an 
agreed on way of pausing them, long running jobs low priority jobs could 
be put on hold when higher priority jobs turn up ..

Andy.



From leszczynscy at yahoo.com  Thu Mar 17 22:59:16 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Thu, 17 Mar 2005 23:59:16 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
Message-ID: <423A6E34.6070800@yahoo.com>

Hi,
I need a help. In particural I need to allow plain users under Linux to 
run SMTP servers (in Python) under 25. Is there any way to remap it to 
the over 1024 space or just enable (without hacking the kernel). The 
varoius sudo or permissions solutions are not an options for me.

Thanks in advance, A.



From exarkun at divmod.com  Thu Mar 17 23:01:20 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 18 Mar 2005 06:01:20 GMT
Subject: [Twisted-Python] help with ssl timeout and not reconnecting
	client factory
In-Reply-To: <20050317225855.GU21597@opteron.random>
Message-ID: <20050318060120.13806.1844027975.divmod.quotient.9105@ohm>

On Thu, 17 Mar 2005 23:58:55 +0100, Andrea Arcangeli <andrea at cpushare.com> wrote:
>On Thu, Mar 17, 2005 at 11:51:04AM -0500, Itamar Shtull-Trauring wrote:
> > There was a bug in 1.3 in ReconnectingClientFactory that caused it to
> > not reconnect on TimeoutErrors. It's fixed in 2.0.
> 
> Ok. This should workaround the bug in my app:
> 
> Index: cpushare/proto.py
> ===================================================================
> RCS file: /home/andrea/crypto/cvs/cpushare/client/cpushare/cpushare/proto.py,v
> retrieving revision 1.29
> diff -u -p -r1.29 proto.py
> --- cpushare/proto.py	13 Mar 2005 23:18:24 -0000	1.29
> +++ cpushare/proto.py	17 Mar 2005 22:56:20 -0000
> @@ -148,8 +148,24 @@ class cpushare_factory(ReconnectingClien
>  		protocol.factory = self
>  		return protocol
>  
> +	def clientConnectionLost(self, connector, reason):
> +		print 'Lost connection. Reason:', reason
> +		ReconnectingClientFactory.clientConnectionLost(self, connector, reason)
> +
>  	def clientConnectionFailed(self, connector, reason):
>  		print 'Connection failed. Reason:', reason
> +		# workaround for bug in 1.3.0 - start
> +		from twisted.copyright import version
> +		if '1.3.0' in version:
> +			def workaround_clientConnectionFailed(connector, reason):
> +				if self.continueTrying:
> +					self.connector = connector
> +					from twisted.internet import interfaces, error, defer
> +					if not reason.check(error.UserError) or reason.check(defer.TimeoutError):
> +						self.retry()
> +			workaround_clientConnectionFailed(connector, reason)
> +			return
> +		# workaround for bug in 1.3.0 - end
>  		ReconnectingClientFactory.clientConnectionFailed(self, connector, reason)
>  
>  	def connectionMade(self):
> 
> 
> Thanks Itamar and Jp for the help!
> 

  Glad to offer it :)  I wonder why you didn't go with the apparently equivalent but similar version of clientConnectionFailed, though:

    def clientConnectionFailed(self, connector, reason):
        print 'Connection failed. Reason:', reason
        # workaround for bug in 1.3.0 - start
        from twisted.copyright import version
        if '1.3.0' in version:
            if self.continueTrying:
                self.connector = connector
                self.retry()
            return
        # workaround for bug in 1.3.0 - end
        ReconnectingClientFactory.clientConnectionFailed(
            self, connector, reason)

  I guess I can see how defining a function for the logic further separates it from the rest of the code, but why define it inside the version test if suite? :)  Maybe that was just the most convenient place at the moment..  The main difference, though, is the total absense of the if guarding the call to self.retry().  It seems like you duplicated the 1.3 logic in the 1.3 work-around code.  Maybe I'm just misreading it, but it seems like you just want to omit that test and always retry().

  Jp



From andrew-twisted at puzzling.org  Thu Mar 17 23:11:38 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Fri, 18 Mar 2005 17:11:38 +1100
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <423A6E34.6070800@yahoo.com>
References: <423A6E34.6070800@yahoo.com>
Message-ID: <20050318061138.GS15800@trogdor.home.puzzling.org>

On Thu, Mar 17, 2005 at 11:59:16PM -0600, Andrzej Leszczynski wrote:
> Hi,
> I need a help. In particural I need to allow plain users under Linux to 
> run SMTP servers (in Python) under 25. Is there any way to remap it to 
> the over 1024 space or just enable (without hacking the kernel). The 
> varoius sudo or permissions solutions are not an options for me.
> 
> Thanks in advance, A.

Use authbind(1).

-Andrew.




From leszczynscy at yahoo.com  Fri Mar 18 08:24:30 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Fri, 18 Mar 2005 09:24:30 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <20050318061138.GS15800@trogdor.home.puzzling.org>
References: <423A6E34.6070800@yahoo.com>
	<20050318061138.GS15800@trogdor.home.puzzling.org>
Message-ID: <423AF2AE.5030706@yahoo.com>

Andrew Bennetts wrote:
> On Thu, Mar 17, 2005 at 11:59:16PM -0600, Andrzej Leszczynski wrote:
> 
>>Hi,
>>I need a help. In particural I need to allow plain users under Linux to 
>>run SMTP servers (in Python) under 25. Is there any way to remap it to 
>>the over 1024 space or just enable (without hacking the kernel). The 
>>varoius sudo or permissions solutions are not an options for me.
>>
>>Thanks in advance, A.
> 
> 
> Use authbind(1).
> 
> -Andrew.

Does it work on non-Debain distros?

A.



From alengarbage at yahoo.com  Fri Mar 18 10:58:00 2005
From: alengarbage at yahoo.com (Lenny G Arbage)
Date: Fri, 18 Mar 2005 09:58:00 -0800 (PST)
Subject: [Twisted-Python] Twisted website redesign
In-Reply-To: 6667
Message-ID: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>


  I don't see that anyone else has mentioned this, and
it has been broken for several days, so I thought the
interested parties might want to know that:

  1- links to project mailing lists from the project
pages are wrong ("No such Resource.  File not found").
 Links from the main page do work, however.
 
  2- links to documentation don't include links to the
API docs.  The API docs are still there if you have a
bookmark or ask google, but I can't see any way to
find them from the website.

  Other than that, the site looks great!

  I'd send this to the site maintainer instead of
posting it to the mailing list, but I can't seem to
find an email link on the site for that either.

  thanks, Lenny G.



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Small Business - Try our new resources site!
http://smallbusiness.yahoo.com/resources/ 



From mary-twisted at puzzling.org  Fri Mar 18 15:15:33 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sat, 19 Mar 2005 09:15:33 +1100
Subject: [Twisted-Python] Twisted website redesign
In-Reply-To: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <20050318221533.GA31325@home.puzzling.org>

On Fri, Mar 18, 2005, Lenny G Arbage wrote:
>   I'd send this to the site maintainer instead of
> posting it to the mailing list, but I can't seem to
> find an email link on the site for that either.

I'm not sure there is a single site maintainer: the thing to do would be
to file a bug at the bug tracker and to mark it as topic "website" but I
appreciate that that's non-obvious.

The first is fairly easily fixed, I'll try and get to it today (Ubuntu's
suddenly broken my X settings, three weeks out from a stable release ;)
I'm living on borrowed computer.)

-Mary



From judson.bishop at eamc.org  Fri Mar 18 15:24:26 2005
From: judson.bishop at eamc.org (Judson Bishop)
Date: Fri, 18 Mar 2005 16:24:26 -0600
Subject: [Twisted-Python] both 'package' and 'py_modules'
Message-ID: <1111184666.4478.132.camel@colnago.eamc.org>

All,

Having trouble building Twisted on RHEL 3.  Using python-2.2.3-6.1.

# python setup.py build
running build
running build_py
error: build_py: supplying both 'packages' and 'py_modules' options is
not allowed
Error: Subprocess exited with result 1 for project core

Any help would be appreciated.

Jud




From exarkun at divmod.com  Fri Mar 18 15:29:47 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Fri, 18 Mar 2005 22:29:47 GMT
Subject: [Twisted-Python] both 'package' and 'py_modules'
In-Reply-To: <1111184666.4478.132.camel@colnago.eamc.org>
Message-ID: <20050318222947.13806.112063687.divmod.quotient.10523@ohm>

On Fri, 18 Mar 2005 16:24:26 -0600, Judson Bishop <judson.bishop at eamc.org> wrote:
>All,
> 
> Having trouble building Twisted on RHEL 3.  Using python-2.2.3-6.1.
> 
> # python setup.py build
> running build
> running build_py
> error: build_py: supplying both 'packages' and 'py_modules' options is
> not allowed
> Error: Subprocess exited with result 1 for project core
> 
> Any help would be appreciated.

  Try the patch attached to <http://twistedmatrix.com/bugs/issue933>.

  Jp



From andrew-twisted at puzzling.org  Fri Mar 18 17:34:29 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Sat, 19 Mar 2005 11:34:29 +1100
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <423AF2AE.5030706@yahoo.com>
References: <423A6E34.6070800@yahoo.com>
	<20050318061138.GS15800@trogdor.home.puzzling.org>
	<423AF2AE.5030706@yahoo.com>
Message-ID: <20050319003429.GC11947@trogdor.home.puzzling.org>

On Fri, Mar 18, 2005 at 09:24:30AM -0600, Andrzej Leszczynski wrote:
> Andrew Bennetts wrote:
[...]
> >
> >Use authbind(1).
> >
> >-Andrew.
> 
> Does it work on non-Debain distros?

I don't see any reason why not.  You can get a tarball from
http://ftp.debian.org/debian/pool/main/a/authbind/authbind_1.1.5.2-0.1.tar.gz,
or perhaps use alien to try convert a deb into your preferred packaging
format.

-Andrew.




From ken at kenkinder.com  Fri Mar 18 22:13:22 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 18 Mar 2005 23:13:22 -0600
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
Message-ID: <423BB4F2.1060108@kenkinder.com>

A day or two ago, I inquired on IRC about making calls from an existing 
synchronous script. The script is not related to any Twisted activity, 
so minimal intervention was sort of a goal. Obviously this doesn't work 
on non-transient objects such as Perspective Broker ones, but here's 
what I came up with... (See attached) Obviously there is some cleaning 
up to do, but it demonstrates the idea.

I have three questions: (1) I know this isn't the ideal way to use 
Twisted, but is there anything inherently problematic about my solution 
for one-off calls to Twisted. (2) I understand there are problems with 
running the same reactor twice. What are those problems and is there a 
recommended work around? (3) Are there any ideas on making a synchronous 
version of a Perspective Broker client to integrate into existing 
synchronous applications more easily?

Thanks
-Ken

-------------- next part --------------
A non-text attachment was scrubbed...
Name: waitDeferred.py
Type: application/x-python
Size: 628 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050318/74caac16/attachment-0002.bin>

From D.Sinang at spitech.com  Fri Mar 18 22:42:01 2005
From: D.Sinang at spitech.com (Sinang, Danny)
Date: Sat, 19 Mar 2005 13:42:01 +0800
Subject: [Twisted-Python] listening on several ports
Message-ID: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>

Hello,
 
How do I make a server listen in on several ports ?
 
As far as I know, reactor.listenTCP() only accepts 1 port parameter.
 
 
Regards,
Danny
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050319/789725aa/attachment.html>

From ken at kenkinder.com  Fri Mar 18 23:00:48 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Sat, 19 Mar 2005 00:00:48 -0600
Subject: [Twisted-Python] listening on several ports
In-Reply-To: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>
References: <048A40781D05D143842A596D7C78F40F05438E6C@spi-mail2003.spitech.com>
Message-ID: <423BC010.3010006@kenkinder.com>

Sinang, Danny wrote:

> How do I make a server listen in on several ports ?
>  
> As far as I know, reactor.listenTCP() only accepts 1 port parameter.

Call reactor.listenTCP for each port you want to listen on.




From teratorn at twistedmatrix.com  Fri Mar 18 23:05:40 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Sat, 19 Mar 2005 16:05:40 +1000 (ChST)
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
References: <423BB4F2.1060108@kenkinder.com>
Message-ID: <34655.202.128.82.223.1111212340.squirrel@www.world-net.net>

Did anyone tell you about twisted.trial.util.deferredResult and
deferredError?

> A day or two ago, I inquired on IRC about making calls from an existing
> synchronous script. The script is not related to any Twisted activity,
> so minimal intervention was sort of a goal. Obviously this doesn't work
> on non-transient objects such as Perspective Broker ones, but here's
> what I came up with... (See attached) Obviously there is some cleaning
> up to do, but it demonstrates the idea.
>
> I have three questions: (1) I know this isn't the ideal way to use
> Twisted, but is there anything inherently problematic about my solution
> for one-off calls to Twisted. (2) I understand there are problems with
> running the same reactor twice. What are those problems and is there a
> recommended work around? (3) Are there any ideas on making a synchronous
> version of a Perspective Broker client to integrate into existing
> synchronous applications more easily?
>
> Thanks
> -Ken
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From ken at kenkinder.com  Fri Mar 18 23:12:36 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Sat, 19 Mar 2005 00:12:36 -0600
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <34655.202.128.82.223.1111212340.squirrel@www.world-net.net>
References: <423BB4F2.1060108@kenkinder.com>
	<34655.202.128.82.223.1111212340.squirrel@www.world-net.net>
Message-ID: <423BC2D4.3000206@kenkinder.com>

No, and a google search reveals that there has been relatively little 
dicussion about them. They do look like at least part of what I need. It 
hadn't occured to me to even look in the unit testing stuff - thanks.

-Ken

Eric Mangold wrote:

>Did anyone tell you about twisted.trial.util.deferredResult and
>deferredError?
>
>  
>
>>A day or two ago, I inquired on IRC about making calls from an existing
>>synchronous script. The script is not related to any Twisted activity,
>>so minimal intervention was sort of a goal. Obviously this doesn't work
>>on non-transient objects such as Perspective Broker ones, but here's
>>what I came up with... (See attached) Obviously there is some cleaning
>>up to do, but it demonstrates the idea.
>>
>>I have three questions: (1) I know this isn't the ideal way to use
>>Twisted, but is there anything inherently problematic about my solution
>>for one-off calls to Twisted. (2) I understand there are problems with
>>running the same reactor twice. What are those problems and is there a
>>recommended work around? (3) Are there any ideas on making a synchronous
>>version of a Perspective Broker client to integrate into existing
>>synchronous applications more easily?
>>
>>Thanks
>>-Ken
>>
>>    
>>




From glyph at divmod.com  Sat Mar 19 00:48:34 2005
From: glyph at divmod.com (glyph at divmod.com)
Date: Sat, 19 Mar 2005 07:48:34 GMT
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
Message-ID: <20050319074834.13806.1948239396.divmod.quotient.11315@ohm>

On Fri, 18 Mar 2005 23:13:22 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>A day or two ago, I inquired on IRC about making calls from an existing 
> synchronous script. The script is not related to any Twisted activity, 
> so minimal intervention was sort of a goal. Obviously this doesn't work 
> on non-transient objects such as Perspective Broker ones, but here's 
> what I came up with... (See attached) Obviously there is some cleaning 
> up to do, but it demonstrates the idea.

I would suggest starting (using os.popen or suchlike) a separate python script which uses Twisted to generate the output that you require to standard output.

> I have three questions: (1) I know this isn't the ideal way to use 
> Twisted, but is there anything inherently problematic about my solution 
> for one-off calls to Twisted.

It's possible, insofar as the unit tests already do it.

It's extremely undesireable, because only one piece of synchronous code can be "driving" at a time.  Once you decide you'd want to integrate synchronous twisted-using code A with synchronous twisted-using code B, you're screwed. By contrast, any number of asynchronous pieces of code can be used in the same program.

> (2) I understand there are problems with 
> running the same reactor twice. What are those problems and is there a 
> recommended work around?

The problems boil down to this: the behavior is more or less undefined.  The recommended workaround is to fix about 30 or 40 extremely subtle bugs in various implementations of the reactor, define a sane behavior, and write unit tests to make sure that it is scrupulously followed by all implementations.  Sorry :).

The good news is that these bugs are almost entirely in the realm of service startup and shutdown.  If you're not using any Service objects, you're likely to run into relatively few problems.

> (3) Are there any ideas on making a synchronous 
> version of a Perspective Broker client to integrate into existing 
> synchronous applications more easily?

Unfortunately PB is inherently both asynchronous and symmetrical and either side can submit method calls to any available object at any time.  A synchronous frontend would make this impossible, and would produce some very confusing race-conditions in relatively normal PB code.

You might be able to specify a subset of PB as a strict request/response protocol with no reentrancy, but why bother?  If you're doing synchronous scripting I imagine it would be easier to add an XMLRPC frontend (which works fine in a synchronous context) to your Twisted server than to connect over PB and have these kind of integration headaches.



From foom at fuhm.net  Sat Mar 19 01:15:58 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 19 Mar 2005 03:15:58 -0500
Subject: [Twisted-Python] Synchronous Wrapper for Deferreds
In-Reply-To: <423BB4F2.1060108@kenkinder.com>
References: <423BB4F2.1060108@kenkinder.com>
Message-ID: <cf89cdb9e36d2a83f189a3180ddaea8e@fuhm.net>

On Mar 19, 2005, at 12:13 AM, Ken Kinder wrote:
> A day or two ago, I inquired on IRC about making calls from an 
> existing synchronous script. The script is not related to any Twisted 
> activity, so minimal intervention was sort of a goal. Obviously this 
> doesn't work on non-transient objects such as Perspective Broker ones, 
> but here's what I came up with... (See attached) Obviously there is 
> some cleaning up to do, but it demonstrates the idea.
>
> I have three questions: (1) I know this isn't the ideal way to use 
> Twisted, but is there anything inherently problematic about my 
> solution for one-off calls to Twisted. (2) I understand there are 
> problems with running the same reactor twice. What are those problems 
> and is there a recommended work around? (3) Are there any ideas on 
> making a synchronous version of a Perspective Broker client to 
> integrate into existing synchronous applications more easily?

What happened to the idea of starting up a completely normal twisted 
event loop in a different thread and communicating via callFromThread 
and queue objects? That seemed like a relatively elegant way to do it, 
to me, as then you can have many different threads doing synchronousish 
stuff at the same time all using the same twisted event loop.

James




From leszczynscy at yahoo.com  Sat Mar 19 07:26:13 2005
From: leszczynscy at yahoo.com (Andrzej Leszczynski)
Date: Sat, 19 Mar 2005 08:26:13 -0600
Subject: [Twisted-Python] enable ports 0-1023 to plain users
In-Reply-To: <20050319003429.GC11947@trogdor.home.puzzling.org>
References: <423A6E34.6070800@yahoo.com>	<20050318061138.GS15800@trogdor.home.puzzling.org>	<423AF2AE.5030706@yahoo.com>
	<20050319003429.GC11947@trogdor.home.puzzling.org>
Message-ID: <423C3685.10301@yahoo.com>

Andrew Bennetts wrote:
> On Fri, Mar 18, 2005 at 09:24:30AM -0600, Andrzej Leszczynski wrote:
> 
>>Andrew Bennetts wrote:
> 
> [...]
> 
>>>Use authbind(1).
>>>
>>>-Andrew.
>>
>>Does it work on non-Debain distros?
> 
> 
> I don't see any reason why not.  You can get a tarball from
> http://ftp.debian.org/debian/pool/main/a/authbind/authbind_1.1.5.2-0.1.tar.gz,
> or perhaps use alien to try convert a deb into your preferred packaging
> format.
> 
Thx for the info. I will give a try. For now I use: iptables -t nat -A 
PREROUTING -p tcp --dport 25 -i lo -j REDIRECT --to-port 2525.


A.






From foom at fuhm.net  Sat Mar 19 09:45:30 2005
From: foom at fuhm.net (James Y Knight)
Date: Sat, 19 Mar 2005 11:45:30 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <1fceb2c30741cd5fb155317397dff497@fuhm.net>

Bug summary
______________________
Since 2005-03-14 22:20:50.500000:
  Bugs opened: 17   Bugs closed: 10   Total open bugs: 333 (+7)
   Urgent: 7 (-2)
   Bug: 127 (+9)
   Feature: 131 (+0)
   Wish: 68 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
BUG: Installer raises exception for Python 2.2  (yesterday)
        http://twistedmatrix.com/bugs/issue933 opened by exarkun

[WORDS, XISH] [PATCH] cleanup of docs and imports for xish and 
words/protocols/jabber  (yesterday)
CLOSED http://twistedmatrix.com/bugs/issue935 opened by ralphm

[PATCH] xmlstream ConnectAuthenticator bails on self.streamHost of type 
unicode  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue924 opened by ralphm

[PATCH] mktap is broken with new plugin system  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue923 opened by radix

                     ==== Bug ====
[XISH] restore priority sorting in xish/xpath.py  (yesterday)
        http://twistedmatrix.com/bugs/issue934 opened by ralphm

[WEBSITE] Sort out redirects from old products website hierachy  (4 
hours ago)
        http://twistedmatrix.com/bugs/issue938 opened by hypatia

[PAIR, WEBSITE] Add description of pair to its project site  (6 hours 
ago)
        http://twistedmatrix.com/bugs/issue937 opened by hypatia

[WEBSITE] minor website rendering problem  (yesterday)
        http://twistedmatrix.com/bugs/issue936 opened by teratorn

[WEBSITE, XISH] Add description of xish to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue932 opened by hypatia

[WEBSITE, WORDS] Add description of words to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue931 opened by hypatia

[RUNNER, WEBSITE] Add description of runner to its project site  (2 
days ago)
        http://twistedmatrix.com/bugs/issue930 opened by hypatia

[WEB, WEBSITE] Add description of Twisted Web to its project site  (2 
days ago)
        http://twistedmatrix.com/bugs/issue927 opened by hypatia

[FLOW, WEBSITE] Add description of flow to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue929 opened by hypatia

[LORE, WEBSITE] Add description of lore to its project site  (2 days 
ago)
        http://twistedmatrix.com/bugs/issue928 opened by hypatia

"which: no dia" error when running mktap names  (2 days ago)
        http://twistedmatrix.com/bugs/issue926 opened by justinj

t.test.test_plugin doesn't work in "deployed" mode  (3 days ago)
        http://twistedmatrix.com/bugs/issue925 opened by marienz

Bugs Closed
______________________
                     ==== Urgent ====
[WEBSITE] Website needs to be suitable for 2.0  (5 months ago)
        http://twistedmatrix.com/bugs/issue728 opened by hypatia, closed 
by radix

[WORDS, XISH] [PATCH] cleanup of docs and imports for xish and 
words/protocols/jabber  (yesterday)
        http://twistedmatrix.com/bugs/issue935 opened by ralphm, closed 
by dizzyd

[PATCH] xmlstream ConnectAuthenticator bails on self.streamHost of type 
unicode  (4 days ago)
        http://twistedmatrix.com/bugs/issue924 opened by ralphm, closed 
by dizzyd

win32: reactor.spawnProcess does not grant permission to open sockets  
(2 months ago)
        http://twistedmatrix.com/bugs/issue837 opened by stefanomasini, 
closed by exarkun

[PATCH] mktap is broken with new plugin system  (4 days ago)
        http://twistedmatrix.com/bugs/issue923 opened by radix, closed 
by exarkun

                     ==== Bug ====
MANIFEST.in misses files  (9 months ago)
        http://twistedmatrix.com/bugs/issue629 opened by cmg, closed by 
radix

[PATCH] rename xish.xpath's intern to internQuery  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue913 opened by ralphm, closed 
by dizzyd

protocols/jabber/jid refers to jid.intern(), should be plain intern()  
(8 months ago)
        http://twistedmatrix.com/bugs/issue656 opened by ralphm, closed 
by dizzyd

[XISH] [PATCH] twisted.xish.domish.elementStream fails to parse xml  
(12 months ago)
        http://twistedmatrix.com/bugs/issue530 opened by naz, closed by 
dizzyd




From nico at tekNico.net  Sat Mar 19 10:47:23 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Sat, 19 Mar 2005 18:47:23 +0100
Subject: [Twisted-Python] Re: Twisted website redesign
In-Reply-To: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
Message-ID: <d1hofs$pcg$1@sea.gmane.org>

>   Other than that, the site looks great!

Unless one sets the browser default background color to something
different from white. :-) It' surprising how many web developers still
*don't* do this. They should. ;-)

-- 
Nicola Larosa - nico at tekNico.net

...this particular abuse of the rules of procedure will make a great
textbook example for the lack of democracy in the EU. While the
Luxembourg Presidency quoted some vague "institutional reasons" for
their position, their reasoning actually serves to discredit the
institution of the Council, and the whole EU project with it.
 -- Karl-Friedrich Lenz, http://k.lenz.name/wordpress/index.php?p=26




From mary-twisted at puzzling.org  Sat Mar 19 14:38:20 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Sun, 20 Mar 2005 08:38:20 +1100
Subject: [Twisted-Python] Re: Twisted website redesign
In-Reply-To: <d1hofs$pcg$1@sea.gmane.org>
References: <20050318175800.96516.qmail@web31512.mail.mud.yahoo.com>
	<d1hofs$pcg$1@sea.gmane.org>
Message-ID: <20050319213820.GC27854@titus.home.puzzling.org>

On Sat, Mar 19, 2005, Nicola Larosa wrote:
> Unless one sets the browser default background color to something
> different from white. :-) It' surprising how many web developers still
> *don't* do this. They should. ;-)

I committed a styleseet change that sets the entire background to white,
although I'm not entirely sure whether that's what you're suggesting
(the alternative is coming up with text colours that go with every
possible choice of background color though ;) )

Can further website look-n-feel issues go to the bugtracker at
http://twistedmatrix.com/bugs/ please? Mark them as topic "website" and
assign them to hypatia.

Thanks,

Mary



From slyphon at twistedmatrix.com  Sun Mar 20 00:27:37 2005
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Sun, 20 Mar 2005 02:27:37 -0500
Subject: [Twisted-Python] Creating a dynamic FTP server
In-Reply-To: <200503141426.52805.jrust@rustyparts.com>
References: <200503141426.52805.jrust@rustyparts.com>
Message-ID: <8cd353ab5973386225485e479724613b@twistedmatrix.com>


On Mar 14, 2005, at 5:26 PM, Jason Rust wrote:

> Hi,
> I've been poking around in the code and documentation for a bit now 
> and wanted
> to see if the following project would be doable with twisted before I
> actually started coding it:
>
> We want a FTP server where all the files and directories are 
> "virtual."  The
> actual files would be in a database and the folders shown to a user 
> would be
> based on the time of day and who the user is.  When getting or putting 
> a file
> it would pull or put it into the database backend.
>
> Would something like this be possible with the twisted FTP module?
> Thanks,
> -Jason
>
> __________________

well, it would, but you should be forewarned that the twisted FTP module
is buggy and messy. I know that because I wrote the server 
implementation. ;)

Oh, also there's no implementation for PUT, which kind of sucks.

But since you want to make the backend virtual, it shouldn't be too 
hard (well,
*impossible*) to make it work.

I've been meaning to go back and fix this code for a long time, but it 
just keeps
getting pushed off.

Anyway, if you have specific questions about the implementation, I may 
be able
to assist you.

-Jonathan Simms




From radeex at gmail.com  Sun Mar 20 06:21:56 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Mon, 21 Mar 2005 00:21:56 +1100
Subject: [Twisted-Python] Twisted a4 releases
Message-ID: <60ed19d4050320052176ad3593@mail.gmail.com>

I released a4 tonight, which includes fixes for all known
release-critical issues, notably the problem with installing on Python
2.2.

Please take a look and verify that this release is worthy of going out
For Real. Also thanks to Tim Stebbing for pushing the Big Red Release
Button and providing his dialup connection for the release tonight ;-)

http://twistedmatrix.com/projects/

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From boomberschloss at yahoo.com  Sun Mar 20 11:01:13 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Sun, 20 Mar 2005 10:01:13 -0800 (PST)
Subject: [Twisted-Python] Re: clients of perspective brokers
In-Reply-To: <u3bv72csp.fsf@fitlinxx.com>
Message-ID: <20050320180113.30178.qmail@web53110.mail.yahoo.com>

Thanks for the detailed response! It really helped me
to get a sturdier perspective on everything.

My situation is slightly different than what you
described. My application consists of multiple servers
and clients responsible for the different aspects of
data processing, acquisition and storage (there are,
for example, a database, a configuration server,
arbitrary GUI clients, etc.), and each server exposes
only one referencable object (the root) representing
the server's interface. One consequence, for example,
is that a unit may disappear and re-appear at a
different location (ex. the same user logging in at a
different machine).

I had in mind something very similar to your component
registry: a central server would act as a "unit
directory", containing a listing of units with unique
id's, contact information, and other arbitrary
details. Each unit in the system announces its
existence to the central server every once in a while,
and receives a remote cache of the listing, which gets
updated every time there is a change in the list.

In addition to the local copy of the central unit
directory that every unit holds, it would also hold a
pool of open connections. When a unit wants to contact
another unit, it would query the local copy of the
directory for the desired unit (ex. database, gui unit
of user "bob", etc.), get an address and port number,
and return a wrapper around the remote reference of
the other server's root containing the address
information, called a "friend". If the required
address is already connected to in the local pool of
connections, it is simply directed to use that
connection. When a call is made on the "friend"
object, it attempts to open a connection (if needed,
in which case the new connection is added to the
pool), and makes the remote method call. If it is an
old connection and the call fails, it would attempt to
make a new connection once and repeat the process,
after which the failure (if it persists) is reported
to the caller.

This covers nicely most situations, but with some I am
still struggling:

The main issue is this: it often happens that one unit
in the system wants to be notified when something
happens at another unit. The problems begin when there
are network problems. For example, let's suppose the
unit that wants to be notified sends its root object
as the object that should be kept by the notifying
unit and used as a remote reference to make the
notification. The question is how to handle such
notifications during network problems; for example,
assume that a notification request is made, then the
connection is lost, then network problems subside but
the connection is or is not resumed, and then the
event to notify about happens. Who's responsibility is
it to take care of that? I'm just asking if there is
any standard or common way to approach this, or if I'm
on my own.

Thanks a lot,

Joe.

--- David Bolen <db3l at fitlinxx.com> wrote:

> Joachim Boomberschloss <boomberschloss at yahoo.com>
> writes:
> 
> > Also, it is unclear to me how reconnection works
> for
> > perspective broker clients. If a connection is
> dropped
> > by the server, and then a clients tries to make a
> > method call on a remote object, will the client
> > factory try to reconnect before making the
> request, or
> > will the request fail, and re-connection be
> attempted
> > the next time, etc.?
> 
> There are no automatic reconnects by default. 
> Additionally once you
> have lost a connection, all existing references held
> by the client to
> objects on the server will be invalid from that
> point on.
> 
> There is a general purpose ReconnectingClientFactory
> in the
> twisted.internet.protocols module, but it only
> handles making the
> basic socket reconnection, and not any higher level
> re-establishment
> of protocol communication.  There was also some work
> on a more
> persistent remote reference scheme (in the sturdy
> module).
> 
> The problem with handling reconnects is that PB
> object references are
> only good for a particular session (since they match
> up with broker
> object dictionaries that are part of the remote
> protocol instance and
> go away when the session drops).  So even if you
> re-establish the raw
> PB connection, none of the object references
> previously held by the
> client will be valid any longer.  Even the sturdy
> module only seemed
> to work for the root object and not other random
> references held by
> the application.  Back when I was looking to solve
> the same issue, I
> didn't really find anything suitable in the twisted
> code base itself.
> 
> So it's mostly up to your application to handle
> these sorts of
> scenarios.  To be honest though, since your
> application knows the most
> about how it is using references and objects, it can
> often have the
> simplest implementation.
> 
> For example, in our application we make use of a
> registry of
> components, and when distributing the application,
> the client starts
> with a remote registry (a Referenceable), and then
> retrieves remote
> component references (also Referenceables) for any
> component they
> interact with.  Pretty much everything else is a
> normal remote copy (a
> Copyable rather than Referenceable).  So the
> registry and components
> provided a great control point to handle network
> outages.  Also, the
> components whose references are long lived in the
> client (and who we
> care about maintaining across an outage) are
> independent of the remote
> session - that is they exist independently on the
> server.  So recovery
> from loss of a network connection is simply
> re-accessing the prior
> remote component.  That makes handling such outages
> in a transparent
> manner fairly straight forward since we can use the
> original
> connection information to perform a reconnect
> without re-involving
> high level application code.
> 
> We ended up with  three main parts to the recovery
> system:
> 
> * A remote registry wrapper that works just like a
> local registry but
>   automatically wraps references to remote
> components in a component wrapper.
> * A remote component wrapper that handles wrapping a
> remote reference both
>   to control method access (so we can specially
> handle some methods locally)
>   but also to isolate the application from directly
> holding onto a PB
>   reference for the remote component object.
> * Our own PBClientFactory subclass that handles
> connectivity issues, and
>   automatically wraps a reference to a remote
> registry (which is obtained
>   through our Root object) in the remote registry
> wrapper.
> 
> In addition, we tie them together with various
> signals (currently
> using the pyDispatcher package).
> 
> A client app starts with the client factory, which
> knows how to
> connect, reconnect after a failure (with a
> prescribed retry timing
> mechanism), periodically ping the remote root object
> for a live
> session, and emit signals when the connection goes
> up or down.  The
> application asks the client factory for the remote
> registry, and gets
> back a remote registry wrapper.  Since the wrapper
> operates as a local
> registry, the application code can work locally or
> remotely.  If the
> client factory sees the connection drop, once it
> reconnects, it emits
> a connection signal which includes the new registry
> wrapper.
> 
> The client factory also gives us a good place to
> perform a series of
> steps we need to do with the remote root object in
> order to get access
> to the remote registry, providing for those
> operations to complete
> before giving the registry back to the application
> either during
> initial connection (through a waiting deferred) or
> on a reconnect (via
> the connection signal).
> 
> The remote component wrappers (which also include
> the remote registry
> wrapper) handle the low level potential for
> failures.  The wrapper
> handles failures during any PB request (both
> DeadReferenceError and
> PBConnectionLost) and in addition to passing up the
> error, it emits
> its own signal for a failed request.  The client
> factory listens for
> such signals, which it uses to initiate an immediate
> ping test - which
> in turn can lead to notifying the entire system that
> the connection is
> down.
> 
> We did patch our Twisted so the DeadReferenceError
> was returned as a
> deferred rather than raised inline.  But once
> everything centralized
> around the remote wrappers, technically that became
> unnecessary
> because that's the only place (aside from the client
> factory) that
> issues the callRemote call, so it's not that hard to
> handle both the
> local exception or the deferred error.
> 
> In the other direction, the wrappers all listen for
> the client
> factory's connected signal, and upon receipt, they
> use the supplied
> remote registry to re-query the component they wrap
> (information on
> which they saved when created) in order to get a new
> remote reference.
> Because all of the higher level application code is
> holding a
> reference (Python-wise) to the wrapper object and
> not the PB
> reference, we can adjust to a new reference inside
> the wrapper without
> anything in the application being the wiser or
> needing to change.
> 
> Having the network connect/disconnect signals from
> the client factory
> also permits any other part of the application to
> perform certain
> operations during an outage (so sometimes at our top
> level UI we'll
> put up a "temporary outage" message during
> downtime).
> 
> While this is fairly specific to our environment, it
> lets 
=== message truncated ===


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From mary-twisted at puzzling.org  Sun Mar 20 18:54:24 2005
From: mary-twisted at puzzling.org (Mary Gardiner)
Date: Mon, 21 Mar 2005 12:54:24 +1100
Subject: [Twisted-Python] Reminder: Australian Twisted Sprint, Hobart,
	1-3 April
Message-ID: <20050321015424.GA15750@home.puzzling.org>

Just a reminder for people that the Australian Twisted Sprint is in two
weekend's time.

Details are available from the wiki at
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/FrontPage

We'd appreciate hearing from people who are coming, as per
http://users.puzzling.org/users/mary/TwistedSprint/moin.cgi/SprintAttendees
. Also, there's a few people on the "maybe" list who we have no way to
contact to confirm their attendence -- an email would be great.

Thanks,

Mary



From jarrod.roberson at gmail.com  Mon Mar 21 09:56:36 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 21 Mar 2005 11:56:36 -0500
Subject: [Twisted-Python] Creating a dynamic FTP server
In-Reply-To: <200503141426.52805.jrust@rustyparts.com>
References: <200503141426.52805.jrust@rustyparts.com>
Message-ID: <2389d4730503210856322e7f53@mail.gmail.com>

On Mon, 14 Mar 2005 14:26:52 -0800, Jason Rust <jrust at rustyparts.com> wrote:
> Hi,
> I've been poking around in the code and documentation for a bit now and wanted
> to see if the following project would be doable with twisted before I
> actually started coding it:
> 
> We want a FTP server where all the files and directories are "virtual."  The
> actual files would be in a database and the folders shown to a user would be
> based on the time of day and who the user is.  When getting or putting a file
> it would pull or put it into the database backend.
> 
> Would something like this be possible with the twisted FTP module?
> Thanks,
> -Jason
> 

unless you just HAVE to have FTP a WebDAV solution would be MUCH
better suited for "virtual" assests like you describe



From boomberschloss at yahoo.com  Mon Mar 21 12:02:47 2005
From: boomberschloss at yahoo.com (Joachim Boomberschloss)
Date: Mon, 21 Mar 2005 11:02:47 -0800 (PST)
Subject: [Twisted-Python] multi-threading in twisted
Message-ID: <20050321190247.53484.qmail@web53108.mail.yahoo.com>

Hi,

I just want to make sure I understand what the docs
say: can reactor.callFromThread be called from any
thread? and, is it blocking?

In my application I have a thread that comes up with
data to process every once in a while, and I want that
processing to be done in the main loop because it may
involve network communication, so I planned to copy
the data and then call reactor.callFromThread with the
method to do the processing. Does this sound sound?

Thanks,

Joe


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - Easier than ever with enhanced search. Learn more. 
http://info.mail.yahoo.com/mail_250



From smilner at trinityz.com  Mon Mar 21 14:12:42 2005
From: smilner at trinityz.com (Steve Milner)
Date: Mon, 21 Mar 2005 16:12:42 -0500
Subject: [Twisted-Python] HTTP File Posting and Retrieving
In-Reply-To: <4239C404.1030107@trinityz.com>
References: <4239C404.1030107@trinityz.com>
Message-ID: <423F38CA.1030009@trinityz.com>

Steve Milner wrote:

> Hello List,
>
> I'm looking to use Twisted to download and upload files via HTTP. I've 
> looked at the examples for web.client but am still a bit confused (and 
> am wondering if maybe there is a different class I should be working 
> with). My questions are:
>
> 1.) How can I upload a file
> 2.) How can I download a file and get the headers for parsing (size 
> and whatnot).
>
> Thanks in advance,
> Steve


I'm still having problems trying to get Twisted to do this. Can anyone 
point me to working code that does something similar (or can explain it 
on the list)?

Thanks,
Steve



From andrew-twisted at puzzling.org  Tue Mar 22 18:09:51 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Wed, 23 Mar 2005 12:09:51 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r13295 - WSGI input/error
	streams, pausing when write buffer is full, and file wrapper.
In-Reply-To: <E1DDsDD-0008Js-00@wolfwood>
References: <E1DDsDD-0008Js-00@wolfwood>
Message-ID: <20050323010951.GG26971@trogdor.home.puzzling.org>

On Tue, Mar 22, 2005 at 03:50:59PM -0700, James Knight wrote:
[...]
> +    
> +def callInReactor(__f, *__a, **__kw):
> +    from twisted.internet import reactor
> +    queue = Queue.Queue()
> +    reactor.callFromThread(__callFromThread, queue, __f, __a, __kw)
> +    result = queue.get()
> +    if isinstance(result, failure.Failure):
> +        result.raiseException()
> +    return result
> +
> +def __callFromThread(queue, f, a, kw):
> +    result = defer.maybeDeferred(f, *a, **kw)
> +    result.addBoth(queue.put)

I recall posting example code to do a similar job to the mailing list
recently, and also someone on the list (or irc channel?) asking how to do
this (make the thread that does callFromThread block on the result).

This should probably be turned into a proper API.

-Andrew.




From teratorn at twistedmatrix.com  Tue Mar 22 22:11:27 2005
From: teratorn at twistedmatrix.com (Eric Mangold)
Date: Wed, 23 Mar 2005 15:11:27 +1000 (ChST)
Subject: [Twisted-Python] Note for 2.0 package maintainers
Message-ID: <49816.202.128.82.47.1111554687.squirrel@www.world-net.net>

If you're creating 2.0 packages there is one little thing you need to do
to make Zsh tab-completion work automatically.

The file twisted/python/_twisted_zsh_stub needs to be installed in the zsh
site-functions directory. Of course, where the site-functions directory is
located is system dependant. If you have zsh installed, you can see where
it is with this command:
    zsh -f -c 'echo ${(M)fpath:#/*/site-functions}'

-Eric






From gmcdonald at infocomp.com  Tue Mar 22 22:47:59 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Wed, 23 Mar 2005 16:47:59 +1100
Subject: [Twisted-Python] Creating an NT Service for a twistd script
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>

Hi All,

I am receiving the following error when i run the <filename>ctl.exe
generated with moonfallen's ntsvc module and py2exe:

Traceback (most recent call last):
  File "boot_service.py", line 21, in ?
RuntimeError: No service classes found

Can someone please point me in the right direction??

Grant

Important notice: This message is intended for the individual(s) and entity(s) addressed. The information contained in this transmission and any attached, may be confidential and may also be the subject of legal privilege, public interest immunity or legal professional privilege. Any review, retransmission, dissemination or other use of, taking of any action in reliance upon this information by person or entities other than the recipient is prohibited and requires authorization from the sender. If you are not the addressee indicated in this message (or responsible for delivery of the message to such person) you may not copy or deliver this message to anyone. In such cases you should destroy this message and kindly notify the sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no viruses are present in this e-mail, the company cannot accept responsibility for any loss or damage arising from the use of e-mail attachments.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050323/ef6919f0/attachment.html>

From peterk at bayarea.net  Wed Mar 23 06:49:47 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Wed, 23 Mar 2005 05:49:47 -0800
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
Message-ID: <424173FB.9070406@bayarea.net>

In the Twisted pseudo-sprint yesterday, I made some changes to the 
doc/names/examples/testdns.py and twisted/names/dns.py to clean up the 
deprecation warnings. Attached are two svn diffs of the changes made. 
I've run the trials for twisted names and everything passes with the 
exception of testIPv6. That was skipped since I'm not using IPv6 on my 
laptop. Would someone please review them and commit the changes to SVN?

There's also a deprecation warning in twisted/names/client.py that I'll 
try to get to while at the pycon...

Thanks.

- Peter

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: testdns.py.svn_diff
URL: </pipermail/twisted-python/attachments/20050323/c599f307/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: dns.py.svn_diff
URL: </pipermail/twisted-python/attachments/20050323/c599f307/attachment-0001.ksh>

From xifxif at gmail.com  Wed Mar 23 11:36:49 2005
From: xifxif at gmail.com (xif xif)
Date: Wed, 23 Mar 2005 20:36:49 +0200
Subject: [Twisted-Python] Authenticating users and refering them to personal
	URLs based on the authentication result.
Message-ID: <975ab1d1050323103648096c5b@mail.gmail.com>

Hi

I'm just starting with Nevow, and wanted to know if this is possible,
and if so get a few leads.

I want:

1) to authenticate users (from a form with a "username" and a
"password" field) based on data stored in a database.

2) after authentication is performed, the user is sent to a URL  based
on some of the data from the database. For example, if the database
query revealed him to be named "John Smith", he shall be refered to
http://appserver.com/JohnDoe. Subsequently, he should remain at this
URL, and all links should refer to addresses "below" his personal
address. For example, http://appserver.com/JohnDoe/configuration,
http://appserver.com/JohnDoe/mail, etc.

Thanks in advance,

Xif



From andrew-twisted at puzzling.org  Wed Mar 23 12:56:00 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 24 Mar 2005 06:56:00 +1100
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <424173FB.9070406@bayarea.net>
References: <424173FB.9070406@bayarea.net>
Message-ID: <20050323195559.GB1347@trogdor.home.puzzling.org>

On Wed, Mar 23, 2005 at 05:49:47AM -0800, Peter Kropf wrote:
[...]
> @@ -1123,8 +1124,13 @@
>              self.resends[id] = 1
>          m = Message(id, recDes=1)
>          m.queries = queries
> -        d = self.liveMessages[id] = defer.Deferred()
> -        d.setTimeout(timeout, self._clearFailed, id)
> +
> +        from twisted.internet import reactor
> +        d = defer.Deferred()
> +        timeoutCall = reactor.callLater(
> +            timeout,
> +            lambda: d.called or self._clearFailed( d, id ) )
> +        self.liveMessages[id] = ( d, timeoutCall )
>          self.writeMessage(m, address)
>          return d

I think this would be better as:

        from twisted.internet import reactor
        d = defer.Deferred()
        timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
        def cancelTimeout(result, timeoutCall=timeoutCall):
            timeoutCall.cancel()
            return result
        d.addBoth(cancelTimeout)
        self.liveMessages[id] = ( d, timeoutCall )

'called' is not part of Deferred's public API.
        
-Andrew.




From peterk at bayarea.net  Wed Mar 23 13:21:32 2005
From: peterk at bayarea.net (Peter Kropf)
Date: Wed, 23 Mar 2005 12:21:32 -0800
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <20050323195559.GB1347@trogdor.home.puzzling.org>
References: <424173FB.9070406@bayarea.net>
	<20050323195559.GB1347@trogdor.home.puzzling.org>
Message-ID: <4241CFCC.10600@bayarea.net>

                                                                          
Ok.

Out of curiousity, how would I find out the public API?

- Peter


Andrew Bennetts wrote:
> On Wed, Mar 23, 2005 at 05:49:47AM -0800, Peter Kropf wrote:
> [...]
> 
>>@@ -1123,8 +1124,13 @@
>>             self.resends[id] = 1
>>         m = Message(id, recDes=1)
>>         m.queries = queries
>>-        d = self.liveMessages[id] = defer.Deferred()
>>-        d.setTimeout(timeout, self._clearFailed, id)
>>+
>>+        from twisted.internet import reactor
>>+        d = defer.Deferred()
>>+        timeoutCall = reactor.callLater(
>>+            timeout,
>>+            lambda: d.called or self._clearFailed( d, id ) )
>>+        self.liveMessages[id] = ( d, timeoutCall )
>>         self.writeMessage(m, address)
>>         return d
> 
> 
> I think this would be better as:
> 
>         from twisted.internet import reactor
>         d = defer.Deferred()
>         timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
>         def cancelTimeout(result, timeoutCall=timeoutCall):
>             timeoutCall.cancel()
>             return result
>         d.addBoth(cancelTimeout)
>         self.liveMessages[id] = ( d, timeoutCall )
> 
> 'called' is not part of Deferred's public API.
>         
> -Andrew.
> 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 



From andrew-twisted at puzzling.org  Wed Mar 23 15:58:18 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 24 Mar 2005 09:58:18 +1100
Subject: [Twisted-Python] Twisted Names Deprecation Warning Fixes
In-Reply-To: <4241CFCC.10600@bayarea.net>
References: <424173FB.9070406@bayarea.net>
	<20050323195559.GB1347@trogdor.home.puzzling.org>
	<4241CFCC.10600@bayarea.net>
Message-ID: <20050323225818.GC1347@trogdor.home.puzzling.org>

(I forgot to say so, but patches are best uploaded to the issue tracker,
rather than the mailing list where things can easily be forgotten.)

On Wed, Mar 23, 2005 at 12:21:32PM -0800, Peter Kropf wrote:
>                                                                          
> Ok.
> 
> Out of curiousity, how would I find out the public API?

The docstrings will mention it.  If the docstrings don't mention an
attribute, consider it an implementation detail.

Also, I made a small mistake in my hurry this morning:

> >        from twisted.internet import reactor
> >        d = defer.Deferred()
> >        timeoutCall = reactor.callLater(timeout, self._clearFailed, d, id)
> >        def cancelTimeout(result, timeoutCall=timeoutCall):
> >            timeoutCall.cancel()

That bit needs to be:
               if timeoutCall.active():
                   timeoutCall.cancel()

-Andrew.




From ken at kenkinder.com  Wed Mar 23 17:59:34 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Wed, 23 Mar 2005 18:59:34 -0600
Subject: [Twisted-Python] How to accept connections faster
In-Reply-To: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
References: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
Message-ID: <424210F6.8050600@kenkinder.com>

Jp Calderone wrote:

>  Yea, async.  Async is nice.  Twisted comes with a moduled named "adbapi" that provides a non-blocking layer around standard DB-API 2.0 modules (such as MySQLdb).  You can read more about it here at <http://twistedmatrix.com/documents/current/howto/enterprise>.
>  
>
Keep in mind adbapi is just a wrapper for synchronous libraries that 
uses threading. Ideally you would write asynchronous clients for the SQL 
databases -- I've been thinking about doing just that for MySQL. That 
is, I've been thinking, NOT doing.




From gmcdonald at infocomp.com  Wed Mar 23 23:23:04 2005
From: gmcdonald at infocomp.com (Grant McDonald)
Date: Thu, 24 Mar 2005 17:23:04 +1100
Subject: [Twisted-Python] Bootstrapping Servers
Message-ID: <61DA7719C45FD31185280008C733EF6E04AC4CF4@XCHANGE>

Dear All,

I have created some code to close all active connections to a server, spawn
a new instance of itself and call reactor.stop() to facilitate a remote
bootstrap restart of a server. The bootstrapping process takes place through
a loader where if passed an option to bootstrap the code pauses for 20 secs
to allow the previous process to exit:

import sys

if sys.argv[1] == "--bootstrap" or sys.argv[1] == "-b":
    print 'bootstrapping'
    del sys.argv[1]
    import time
    time.sleep(20.0)

from twisted.python.runtime import platformType
if platformType == "win32":
    from twisted.scripts.twistw import run
else:
    from twisted.scripts.twistd import run

run()

However the above code does not allow the server to start since twistd
complains that the port is in use:

2005/03/24 17:14 AUS Eastern Daylight Time [-] Log opened.
2005/03/24 17:14 AUS Eastern Daylight Time [-] twistd 1.3.0
(C:\Python23\python.exe 2.3.3) starting up
2005/03/24 17:14 AUS Eastern Daylight Time [-] reactor class:
twisted.internet.default.SelectReactor
2005/03/24 17:14 AUS Eastern Daylight Time [-] managers.ConnectionManager
starting on 12005
2005/03/24 17:14 AUS Eastern Daylight Time [-] Traceback (most recent call
last):
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File "D:\python
projects\programs\zcfscheduler\loader.py", line 15, in ?
2005/03/24 17:14 AUS Eastern Daylight Time [-]     run()

<-- snip -->

2005/03/24 17:14 AUS Eastern Daylight Time [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\default.py", line 283, in
listenTCP
2005/03/24 17:14 AUS Eastern Daylight Time [-]     p.startListening()
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 594, in
startListening
2005/03/24 17:14 AUS Eastern Daylight Time [-]     raise CannotListenError,
(self.interface, self.port, le)
2005/03/24 17:14 AUS Eastern Daylight Time [-]
twisted.internet.error.CannotListenError: Couldn't listen on any:12005:
(10048, 'Address already in use').

how can i get the server to stop, restart itself and release the port in the
process?

Regards,

Grant McDonald

Important notice: This message is intended for the individual(s) and entity(s) addressed. The information contained in this transmission and any attached, may be confidential and may also be the subject of legal privilege, public interest immunity or legal professional privilege. Any review, retransmission, dissemination or other use of, taking of any action in reliance upon this information by person or entities other than the recipient is prohibited and requires authorization from the sender. If you are not the addressee indicated in this message (or responsible for delivery of the message to such person) you may not copy or deliver this message to anyone. In such cases you should destroy this message and kindly notify the sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no viruses are present in this e-mail, the company cannot accept responsibility for any loss or damage arising from the use of e-mail attachments.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20050324/694c5fa3/attachment.html>

From projects at reedflute.com  Thu Mar 24 02:01:12 2005
From: projects at reedflute.com (Eugene Coetzee)
Date: Thu, 24 Mar 2005 11:01:12 +0200
Subject: [Twisted-Python] looping in a non-blocking way
Message-ID: <424281D8.5000101@reedflute.com>

Hi everybody.

I have an application where I have  several polling protocol instances 
servicing an array of COM ports driven by  timers using 
reactor.callLater with typically 50 millisecond timing constants.  I'm 
also using  FTP client protocol instances to concurrently  refresh 
locally cached data from ftp servers. These files may be quite large and 
during the text parsing routines I end up with blocking loops which are 
undesirable.

Text files my be parsed in a loop with something like:

def importFromText(self,data):
               datalines=data.split("\r\n")
                for line in datalines:
                        arrin=[]
                        arrin.insert(0,line[0:10])
                        etc....

For large files the above blocks - starving the other COM port protocols 
drivers of processing time.

I have tried to "yield" to the reactor by calling reactor.iterate() in 
the above loop trying to do what you would normally accomplish with 
sleep(0) in a multithreaded  application. This solution seemed to 
partially solve the problem but I'm experiencing intermittent  stability 
problems with my polling protocol drivers that are normally quite 
robust  simply hanging up.

I'm now considering rewriting the above loop as a recursive function 
using reactor.callLater(0,recursiveTexParsingFunction(params)).

I'm aware of twisted.flow but the examples given are a bit sparse and 
obscure and having tried something like  
http://twistedmatrix.com/documents/current/api/twisted.flow.flow.html - 
it appears I don't understand how to apply twisted.flow  
(iterators/coroutines) solve my particular problem.

I hope I'm missing something obvious and more elegant since the above 
possible solutions seems like a lot of rework to solve a very simple 
problem.

Any thoughts/advise would be much appreciated.

regards,

Eugene Coetzee                  


Web                 -> www.reedflute.com
=============================================== 





From Harald.Nyman at astrazeneca.com  Thu Mar 24 05:44:23 2005
From: Harald.Nyman at astrazeneca.com (Harald.Nyman at astrazeneca.com)
Date: Thu, 24 Mar 2005 13:44:23 +0100
Subject: [Twisted-Python] Bootstrapping Servers
Message-ID: <9F028CC77827D611ACEE0002A5F12F070855157B@semldsntmsx208.seml.astrazeneca.net>

I do something similar with the help of a shell script - roughly like
 
#!/bin/sh
touch START_SERVER
while [ -f START_SERVER ]
do
  rm START_SERVER
  thisDir=`pwd | gawk -F '/' '{print $NF}'`
  twistd --pidfile=${thisDir}.pid -noy che.tac > /dev/null &
done
echo Server ${thisDir} stopped.

 
--------------------------------------------------------------------
# Close connections, tell clients whether we're stopping or restarting,
......
 
    def _stopServer(self, restart):
        if restart:
            f = open('START_SERVER', 'w')
            f.close()
        reactor.stop()
        sys.exit()

Harald

-----Original Message-----
From: Grant McDonald [mailto:gmcdonald at infocomp.com]
Sent: torsdag, 24 mars 2005 07:38
To: Twisted general discussion (E-mail)
Subject: [Twisted-Python] Bootstrapping Servers



Dear All, 

I have created some code to close all active connections to a server, spawn
a new instance of itself and call reactor.stop() to facilitate a remote
bootstrap restart of a server. The bootstrapping process takes place through
a loader where if passed an option to bootstrap the code pauses for 20 secs
to allow the previous process to exit:

import sys 

if sys.argv[1] == "--bootstrap" or sys.argv[1] == "-b": 
    print 'bootstrapping' 
    del sys.argv[1] 
    import time 
    time.sleep(20.0) 

from twisted.python.runtime import platformType 
if platformType == "win32": 
    from twisted.scripts.twistw import run 
else: 
    from twisted.scripts.twistd import run 

run() 

However the above code does not allow the server to start since twistd
complains that the port is in use: 

2005/03/24 17:14 AUS Eastern Daylight Time [-] Log opened. 
2005/03/24 17:14 AUS Eastern Daylight Time [-] twistd 1.3.0
(C:\Python23\python.exe 2.3.3) starting up 
2005/03/24 17:14 AUS Eastern Daylight Time [-] reactor class:
twisted.internet.default.SelectReactor 
2005/03/24 17:14 AUS Eastern Daylight Time [-] managers.ConnectionManager
starting on 12005 
2005/03/24 17:14 AUS Eastern Daylight Time [-] Traceback (most recent call
last): 
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File "D:\python
projects\programs\zcfscheduler\loader.py", line 15, in ?

2005/03/24 17:14 AUS Eastern Daylight Time [-]     run() 

<-- snip --> 

2005/03/24 17:14 AUS Eastern Daylight Time [-]     return getattr(reactor,
'listen'+self.method)(*self.args, **self.kwargs)

2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\default.py", line 283, in
listenTCP

2005/03/24 17:14 AUS Eastern Daylight Time [-]     p.startListening() 
2005/03/24 17:14 AUS Eastern Daylight Time [-]   File
"C:\Python23\lib\site-packages\twisted\internet\tcp.py", line 594, in
startListening

2005/03/24 17:14 AUS Eastern Daylight Time [-]     raise CannotListenError,
(self.interface, self.port, le) 
2005/03/24 17:14 AUS Eastern Daylight Time [-]
twisted.internet.error.CannotListenError: Couldn't listen on any:12005:
(10048, 'Address already in use').

how can i get the server to stop, restart itself and release the port in the
process? 

Regards, 

Grant McDonald 

 

Important notice: This message is intended for the individual(s) and
entity(s) addressed. The information contained in this transmission and any
attached, may be confidential and may also be the subject of legal
privilege, public interest immunity or legal professional privilege. Any
review, retransmission, dissemination or other use of, taking of any action
in reliance upon this information by person or entities other than the
recipient is prohibited and requires authorization from the sender. If you
are not the addressee indicated in this message (or responsible for delivery
of the message to such person) you may not copy or deliver this message to
anyone. In such cases you should destroy this message and kindly notify the
sender by reply email. 

WARNING: Although Infocomp has taken reasonable precautions so that no
viruses are present in this e-mail, the company cannot accept responsibility
for any loss or damage arising from the use of e-mail attachments.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/ms-tnef
Size: 8123 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20050324/5234398e/attachment-0002.bin>

From nico at tekNico.net  Thu Mar 24 06:53:50 2005
From: nico at tekNico.net (Nicola Larosa)
Date: Thu, 24 Mar 2005 14:53:50 +0100
Subject: [Twisted-Python] Re: How to accept connections faster
In-Reply-To: <424210F6.8050600@kenkinder.com>
References: <20050317022421.13806.241650123.divmod.quotient.6761@ohm>
	<424210F6.8050600@kenkinder.com>
Message-ID: <d1ugp8$bpv$1@sea.gmane.org>

> Keep in mind adbapi is just a wrapper for synchronous libraries that
> uses threading. Ideally you would write asynchronous clients for the SQL
> databases -- I've been thinking about doing just that for MySQL. That
> is, I've been thinking, NOT doing.

There is an async adapter for PostgreSQL, PGasync:

http://www.jamwt.com/pgasync/

[Flames about MySQL deleted. ;-) ]

-- 
Nicola Larosa - nico at tekNico.net

...this particular abuse of the rules of procedure will make a great
textbook example for the lack of democracy in the EU. While the
Luxembourg Presidency quoted some vague "institutional reasons" for
their position, their reasoning actually serves to discredit the
institution of the Council, and the whole EU project with it.
 -- Karl-Friedrich Lenz, http://k.lenz.name/wordpress/index.php?p=26




From radeex at gmail.com  Thu Mar 24 09:40:30 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 25 Mar 2005 03:40:30 +1100
Subject: [Twisted-Python] ANN: Twisted version 2.0
Message-ID: <60ed19d405032408407409bc66@mail.gmail.com>

http://twistedmatrix.com/

TASMANIA (DP) -- Found on the Internet on 2005-03-22 by an anonymous
programmer, Twisted 2.0 was obtained by local authorities and kept
isolated for public safety and further study.  On 2005-03-25, however,
nano-probes were released from the package's surface and propagated
the software to the public.

Version 2.0 is said to have originated from ancient underground ruins
somewhere in Australia, but their existence has not yet been verified.
Christopher Armstrong, enslaved release archaeologist, was only able
to say "Aieeya!  Release??  What release?  I just found this here
tablet under some sand.  Ia!"  Project lead Glyph Lefkowitz was not
available for comment, as he has fled the planet in fear of the
repercussions of the software's new release.

Record-keeper Mary Gardiner said "It will be interesting to see if the
Twisted Sumo distribution collapses into a singularity.  I guess
there's a potential that Earth will be destroyed."

As of this release, radix's soul, which has been included in Twisted
since version 0.8.0, has been split off from the main project and
given back to him to maintain in a separate sub-project.

----

Twisted 2.0 is a major upgrade, changing many things not only in the
code but also in the structure of the project.  As of 2.0, Twisted was
split up into many sub-projects which you can read about in the
Twisted Split FAQ[1].

2.0 also marks the first release including the migration to the Zope
Interface framework as opposed to Twisted's own built-in
interface/adapter system.  Another FAQ was made available[2] for those
curious about the change.

Many, tons, and lots of other changes have been made in this release.
The NEWS[3] file contains a high-level overview of most of these
changes.  Changes in now-split subprojects are available on their
individual project pages[4].

Tarballs are currently available at the twistedmatrix.com site, and
packages for win32, Debian, and other OSes are currently on the way.

1: http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/split.html
2: http://twistedmatrix.com/projects/core/documentation/upgrades/2.0/components.html
3: http://twistedmatrix.com/projects/core/NEWS.txt
4: http://twistedmatrix.com/projects/
----

WHAT IS TWISTED?

Twisted is an event-based framework for internet applications which
works on Python 2.2.X and 2.3.X.  The following are the (important)
modules included with Twisted:

  - twisted.application
    A "Service" system that allows you to organize your application in
    hierarchies with well-defined startup and dependency semantics,
  - twisted.cred
    A general credentials and authentication system that facilitates
    pluggable authentication backends,
  - twisted.enterprise
    Asynchronous database access, compatible with any Python DBAPI2.0
    modules,
  - twisted.internet
    Low-level asynchronous networking APIs that allow you to define
    your own protocols that run over certain transports,
  - twisted.manhole
    A tool for remote debugging of your services which gives you a
    Python interactive interpreter,
  - twisted.protocols
    Basic protocol implementations and helpers for your own protocol
    implementations,
  - twisted.python
    A large set of utilities for Python tricks, reflection, text
    processing, and anything else,
  - twisted.spread
    A secure, fast remote object system,
  - twisted.trial
    A unit testing framework that integrates well with Twisted-based code.


Twisted supports integration of the Tk, GTK+, GTK+ 2, Qt, Mac OS X, or
wxPython event loop with its main event loop. The Win32 event loop is
also supported.

For more information, visit http://www.twistedmatrix.com, or join the
list at
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

There are many official Twisted subprojects, including clients and
servers for web, mail, DNS, and more. You can find out more about
these projects at http://twistedmatrix.com/projects/



-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From tv at twistedmatrix.com  Thu Mar 24 12:20:54 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Thu, 24 Mar 2005 21:20:54 +0200
Subject: [Twisted-Python] looping in a non-blocking way
In-Reply-To: <424281D8.5000101@reedflute.com>
References: <424281D8.5000101@reedflute.com>
Message-ID: <42431316.9020803@twistedmatrix.com>

Eugene Coetzee wrote:
> def importFromText(self,data):
>               datalines=data.split("\r\n")
>                for line in datalines:
>                        arrin=[]
>                        arrin.insert(0,line[0:10])
>                        etc....


from twisted.internet import reactor

CHUNKSIZE = 100
def _parseSome(lines):
     for i in xrange(CHUNKSIZE):
         try:
             line = lines.pop(0)
         except IndexError:
             break
         # parse line here, maybe mutate a data
         # structured passed as an argument
     if lines:
         reactor.callLater(0, _parseSome, lines)
     else:
         # all done, probably should notify someone

def importFromText(self, data):
     datalines=data.split("\r\n")
     _parseSome(datalines)



From tjreedy at udel.edu  Thu Mar 24 16:52:39 2005
From: tjreedy at udel.edu (Terry Reedy)
Date: Thu, 24 Mar 2005 18:52:39 -0500
Subject: [Twisted-Python] Re: Twisted version 2.0
References: <60ed19d405032408407409bc66@mail.gmail.com>
Message-ID: <d1vjrt$4lj$1@sea.gmane.org>

> Twisted is an event-based framework for internet applications which
> works on Python 2.2.X and 2.3.X.

Was 2.4.X intentionally omitted?






From radeex at gmail.com  Thu Mar 24 22:28:04 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 25 Mar 2005 16:28:04 +1100
Subject: [Twisted-Python] Re: Twisted version 2.0
In-Reply-To: <d1vjrt$4lj$1@sea.gmane.org>
References: <60ed19d405032408407409bc66@mail.gmail.com>
	<d1vjrt$4lj$1@sea.gmane.org>
Message-ID: <60ed19d4050324212818381ee3@mail.gmail.com>

(I already responded to this on python-list, here it is for the sake
of twisted-python...)


On Thu, 24 Mar 2005 18:52:39 -0500, Terry Reedy <tjreedy at udel.edu> wrote:
> > Twisted is an event-based framework for internet applications which
> > works on Python 2.2.X and 2.3.X.
> 
> Was 2.4.X intentionally omitted?

No. It was an accident; Twisted 2.0 works on Python 2.4. The README
file has been updated.



-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From howe.steven at gmail.com  Fri Mar 25 10:10:34 2005
From: howe.steven at gmail.com (steven howe)
Date: Fri, 25 Mar 2005 09:10:34 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop using
	Twisted
Message-ID: <90151e50503250910694cea0e@mail.gmail.com>

Hello,
I'm looking for some example code I can use to build an app from. I
need to 'wait' or sleep for new data in a file. Then wake and process
the data.

The file is a regular file, not a pipe. It is the output of a existing
program (i.e., not mine to modify). Needless to say, the API for hugh.
I'm need some help finding the right tools.

Thanks, 

Steven Howe



From tv at twistedmatrix.com  Fri Mar 25 12:12:43 2005
From: tv at twistedmatrix.com (Tommi Virtanen)
Date: Fri, 25 Mar 2005 21:12:43 +0200
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <424462AB.2010000@twistedmatrix.com>

steven howe wrote:
> Hello,
> I'm looking for some example code I can use to build an app from. I
> need to 'wait' or sleep for new data in a file. Then wake and process
> the data.
 >
 > The file is a regular file, not a pipe. It is the output of a existing

As far as I remember off-hand, the "tail -f" trick is this: every once
in a while (use LoopingCall or reactor.callLater), read until eof, and
do f.seek(0, 1) to reset the EOF.

 > program (i.e., not mine to modify). Needless to say, the API for hugh.

Huh?



From vaibhavatlnct at yahoo.com  Fri Mar 25 12:28:41 2005
From: vaibhavatlnct at yahoo.com (vaibhav gupta)
Date: Fri, 25 Mar 2005 11:28:41 -0800 (PST)
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
Message-ID: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>


 hi
  me vaibhav gupta 
      doing bachelor of engineering in india
     i am making on project on smtp server through 
python            but dont no wher to start can any
one help me i will highly thankful to him by sending
me thre e books or any material iam searching for the
book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
JOHN GEORGEN.  




__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 



From howe.steven at gmail.com  Fri Mar 25 13:44:45 2005
From: howe.steven at gmail.com (steven howe)
Date: Fri, 25 Mar 2005 12:44:45 -0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
References: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
	<20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
Message-ID: <90151e505032512446851b8d5@mail.gmail.com>

Good point. I'm writing a daemon, which will be handling network
events. So twisted will be used. With that in mind I fingured I'd like
to use the event loop model in twisted (two birds sort of thing).

Steven

On Fri, 25 Mar 2005 11:28:41 -0800 (PST), vaibhav gupta
<vaibhavatlnct at yahoo.com> wrote:
> 
>  hi
>   me vaibhav gupta
>       doing bachelor of engineering in india
>      i am making on project on smtp server through
> python            but dont no wher to start can any
> one help me i will highly thankful to him by sending
> me thre e books or any material iam searching for the
> book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
> JOHN GEORGEN.
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From jarrod.roberson at gmail.com  Fri Mar 25 13:47:58 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri, 25 Mar 2005 15:47:58 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 12, Issue 43
In-Reply-To: <20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
References: <E1DEu2O-0007f5-02@pyramid.twistedmatrix.com>
	<20050325192841.17117.qmail@web31707.mail.mud.yahoo.com>
Message-ID: <2389d473050325124745a6e2f9@mail.gmail.com>

On Fri, 25 Mar 2005 11:28:41 -0800 (PST), vaibhav gupta
<vaibhavatlnct at yahoo.com> wrote:
> 
>  hi
>   me vaibhav gupta
>       doing bachelor of engineering in india
>      i am making on project on smtp server through
> python            but dont no wher to start can any
> one help me i will highly thankful to him by sending
> me thre e books or any material iam searching for the
> book FUNDAMENTALS OF NETWORK PROGRAMING ON PYTHON BY
> JOHN GEORGEN.
> 
> __________________________________________________


try a book store such as amazon.com



From ken at kenkinder.com  Fri Mar 25 17:39:53 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Fri, 25 Mar 2005 18:39:53 -0600
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <4244AF59.6060802@kenkinder.com>

It seems to me you probably will either check periodically in the 
reactor, like this:

    def checkFile():
        x = os.stat(file)
        ...
        reactor.callLater(.5, checkFile)

    reactor.callWhenRunning(checkFile)

Or just start another thread like this:

    def wakeUp():
        (action to take when file changes)

    def checker():
        while 1:
            (code that waits for file to change)
            reactor.callFromThread(wakeUp)

    reactor.callInThread(checker)

-Ken

steven howe wrote:

>Hello,
>I'm looking for some example code I can use to build an app from. I
>need to 'wait' or sleep for new data in a file. Then wake and process
>the data.
>
>The file is a regular file, not a pipe. It is the output of a existing
>program (i.e., not mine to modify). Needless to say, the API for hugh.
>I'm need some help finding the right tools.
>
>Thanks, 
>
>Steven Howe
>
>_______________________________________________
>Twisted-Python mailing list
>Twisted-Python at twistedmatrix.com
>http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>  
>




From exarkun at divmod.com  Fri Mar 25 21:28:58 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Sat, 26 Mar 2005 04:28:58 GMT
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using	Twisted
In-Reply-To: <4244AF59.6060802@kenkinder.com>
Message-ID: <20050326042858.13806.1670865869.divmod.quotient.24348@ohm>

On Fri, 25 Mar 2005 18:39:53 -0600, Ken Kinder <ken at kenkinder.com> wrote:
>It seems to me you probably will either check periodically in the 
> reactor, like this:
> 
>     def checkFile():
>         x = os.stat(file)
>         ...
>         reactor.callLater(.5, checkFile)
> 
>     reactor.callWhenRunning(checkFile)
> 
> Or just start another thread like this:
> 
>     def wakeUp():
>         (action to take when file changes)
> 
>     def checker():
>         while 1:
>             (code that waits for file to change)
>             reactor.callFromThread(wakeUp)
> 
>     reactor.callInThread(checker)

  The threaded version ties up an entire work thread from the pool for the lifetime of the application.  Unless you only want to watch one or two files, this is probably not ideal.  There's no real reason to use a thread for this at all.  Polling from the main loop is a perfectly reasonable solution (and Twisted can deal with polling at much greater frequency than twice a second, if necessary).  

  Additionally, there are actual event notification systems for this: dnotify and inotify on Linux, for example.  Twisted doesn't support these directly (although it might support inotify soon), but integrating them and other things like them is not extremely difficult.

  Jp



From daverz at gmail.com  Sat Mar 26 00:57:07 2005
From: daverz at gmail.com (Dave Cook)
Date: Fri, 25 Mar 2005 23:57:07 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <90151e50503250910694cea0e@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
Message-ID: <7a59f0250503252357594dd5de@mail.gmail.com>

Using Ken's first example, here's what I came up with:

import os
import stat
from twisted.internet import reactor

class FileWatcher:

    def __init__(self, period, filename):
        self.period = period
        self.filename = filename
        self.callbacks = []
        self.mtime = os.stat(filename)[stat.ST_MTIME]
        reactor.callWhenRunning(self.checkFile)

    def addCallback(self, callback):
        self.callbacks.append(callback)

    def removeCallback(self, callback):
        self.callbacks.remove(callback)
        
    def checkFile(self):
        mtime = os.stat(self.filename)[stat.ST_MTIME]
        if mtime > self.mtime:
            self.mtime = mtime
            for callback in self.callbacks:
                callback(self.filename, mtime)
        reactor.callLater(self.period, self.checkFile)


if __name__=='__main__':

    import time

    def changed(filename, mtime):
        print "%s modified at %s." % (filename, time.ctime(mtime))
        
    open('/tmp/foo', "w").close()
    FileWatcher(0.1, '/tmp/foo').addCallback(changed)
    reactor.run()

Run it in one terminal window, and in the other run

  touch /tmp/foo

to see what happens.



From glyph at divmod.com  Sat Mar 26 10:53:47 2005
From: glyph at divmod.com (Glyph Lefkowitz)
Date: Sat, 26 Mar 2005 12:53:47 -0500
Subject: [Twisted-Python] Authenticating users and refering them to
	personal URLs based on the authentication result.
In-Reply-To: <975ab1d1050323103648096c5b@mail.gmail.com>
References: <975ab1d1050323103648096c5b@mail.gmail.com>
Message-ID: <4245A1AB.3020001@divmod.com>

xif xif wrote:

> I'm just starting with Nevow, and wanted to know if this is possible,
> and if so get a few leads.

Please use the "twisted-web" mailing list for web-related questions.



From jarrod.roberson at gmail.com  Mon Mar 28 12:44:13 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon, 28 Mar 2005 14:44:13 -0500
Subject: [Twisted-Python] Twisted 2.x How To Fix : DeprecationWarning:
	Deferred.setTimeout is deprecated ?
Message-ID: <2389d47305032811443a00a75e@mail.gmail.com>

I have some older code that uses Deferred.setTimeout() what is the
appropriate change/replacement for this functionality? I looked at the
new code and don't understand the suggested solution to this warning

-- If you don't know what you want, you probably need a nap.



From foom at fuhm.net  Mon Mar 28 14:18:35 2005
From: foom at fuhm.net (James Y Knight)
Date: Mon, 28 Mar 2005 16:18:35 -0500
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: <f5376647fec3e38553ffdb85a8fd06e3@fuhm.net>

Bug summary
______________________
Since 2005-03-19 16:41:53.330000:
  Bugs opened: 13   Bugs closed: 13   Total open bugs: 333 (+0)
   Urgent: 3 (-4)
   Bug: 132 (+5)
   Feature: 130 (-1)
   Wish: 68 (+0)

New / Reopened Bugs
______________________
                     ==== Urgent ====
TypeError in serialize methods of twisted.xish.domish (patch included)  
(4 days ago)
        http://twistedmatrix.com/bugs/issue946 opened by syt

                     ==== Bug ====
Lore doesn't generate TOC correctly  (3 hours ago)
CLOSED http://twistedmatrix.com/bugs/issue951 opened by naz

API Reference link broken  (4 days ago)
CLOSED http://twistedmatrix.com/bugs/issue944 opened by espeoneefi

websetroot: Completely fails fresh install of Twisted 2.0.0 and Twisted 
Web 0.5.0  (4 days ago)
        http://twistedmatrix.com/bugs/issue945 opened by levi

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue948 opened by ash

[WEBSITE] "Go Siege" project link in the "Success Stories" page is 
outdated.  (1 week ago)
CLOSED http://twistedmatrix.com/bugs/issue941 opened by tirkal

[DOCUMENTATION, FLOW, WEBSITE] Broken documentation link for Twisted 
Flow  (3 days ago)
CLOSED http://twistedmatrix.com/bugs/issue949 opened by ash

BUG: childFDs mapping in process support breaks process termination  
(yesterday)
        http://twistedmatrix.com/bugs/issue950 opened by exarkun

DeferredQueue mixes up and misapplies size and backlog parameters  (4 
days ago)
CLOSED http://twistedmatrix.com/bugs/issue947 opened by logan

Set up roundup buildslaves for individual Twisted subprojects  (5 days 
ago)
        http://twistedmatrix.com/bugs/issue943 opened by radix

New plugin unit tests should use directories beneath _trial_temp, not 
twisted/plugins/  (7 days ago)
        http://twistedmatrix.com/bugs/issue942 opened by exarkun

[CONCH, DOCUMENTATION] Missing man page for cftp  (1 week ago)
        http://twistedmatrix.com/bugs/issue939 opened by Tv

[DOCUMENTATION, LORE] Missing man page for bookify  (1 week ago)
        http://twistedmatrix.com/bugs/issue940 opened by Tv

Bugs Closed
______________________
                     ==== Urgent ====
Split Twisted into many packages and release 2.0  (12 months ago)
        http://twistedmatrix.com/bugs/issue567 opened by itamarst, 
closed by radix

[RELEASE MANAGEMENT] Don't include docs source .xhtml files in release 
tarballs  (15 months ago)
        http://twistedmatrix.com/bugs/issue455 opened by itamarst, 
closed by radix

t.test.test_plugin doesn't work in "deployed" mode  (1 week ago)
        http://twistedmatrix.com/bugs/issue925 opened by marienz, closed 
by exarkun

[DOCUMENTATION] Document "pid" and "status" attributes of Process 
transports  (7 months ago)
        http://twistedmatrix.com/bugs/issue670 opened by exarkun, closed 
by radix

BUG: Installer raises exception for Python 2.2  (1 week ago)
        http://twistedmatrix.com/bugs/issue933 opened by exarkun, closed 
by radix

                     ==== Bug ====
Lore doesn't generate TOC correctly  (3 hours ago)
        http://twistedmatrix.com/bugs/issue951 opened by naz, closed by 
naz

API Reference link broken  (4 days ago)
        http://twistedmatrix.com/bugs/issue944 opened by espeoneefi, 
closed by radix

[DOCUMENTATION, WEBSITE] No PDF or PS versions of new docs on the 
website  (3 days ago)
        http://twistedmatrix.com/bugs/issue948 opened by ash, closed by 
radix

[WEBSITE] "Go Siege" project link in the "Success Stories" page is 
outdated.  (1 week ago)
        http://twistedmatrix.com/bugs/issue941 opened by tirkal, closed 
by radix

[DOCUMENTATION, FLOW, WEBSITE] Broken documentation link for Twisted 
Flow  (3 days ago)
        http://twistedmatrix.com/bugs/issue949 opened by ash, closed by 
radix

DeferredQueue mixes up and misapplies size and backlog parameters  (4 
days ago)
        http://twistedmatrix.com/bugs/issue947 opened by logan, closed 
by exarkun

[XISH] [PATCH] restore priority sorting in xish/xpath.py  (1 week ago)
        http://twistedmatrix.com/bugs/issue934 opened by ralphm, closed 
by radix

                     ==== Feature ====
[CONCH] signal to conch to reconnect  (2 weeks ago)
        http://twistedmatrix.com/bugs/issue916 opened by z3p, closed by 
z3p




From andrew-twisted at puzzling.org  Mon Mar 28 17:36:42 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Tue, 29 Mar 2005 10:36:42 +1000
Subject: [Twisted-Python] Twisted 2.x How To Fix : DeprecationWarning:
	Deferred.setTimeout is deprecated ?
In-Reply-To: <2389d47305032811443a00a75e@mail.gmail.com>
References: <2389d47305032811443a00a75e@mail.gmail.com>
Message-ID: <20050329003642.GA5803@frobozz>

On Mon, Mar 28, 2005 at 02:44:13PM -0500, jarrod roberson wrote:
> I have some older code that uses Deferred.setTimeout() what is the
> appropriate change/replacement for this functionality? I looked at the
> new code and don't understand the suggested solution to this warning

See http://twistedmatrix.com/bugs/issue178, and the mailing list thread it
links to for some discussion about this.

The short version is you should do it yourself with callLater.

-Andrew.




From bear at code-bear.com  Mon Mar 28 22:31:28 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 29 Mar 2005 00:31:28 -0500
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
Message-ID: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>

I've installed twisted 2.0 and Python 2.4 on my winxp test box and I've 
also installed the following packages:

postgresql 8.0
mysql 4.1
psycopg 1.1.2
mxTools 2.0 (needed by psycopg)
mysql-python 1.2.0

The mysql test ran without a problem but I had to modifiy the pgsql 
test so it would work -- I needed to add host='localhost' to 
psycopg.connect() call.

With that change it ran fine.

I'll be working on testing firebird, gadfly and sqlite hopefully 
tomorrow.

Also on my todo list is to create a win32 buildbot for twisted 2.0

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050329/c854c872/attachment.sig>

From fog at initd.org  Tue Mar 29 03:09:10 2005
From: fog at initd.org (Federico Di Gregorio)
Date: Tue, 29 Mar 2005 12:09:10 +0200
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
In-Reply-To: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
References: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
Message-ID: <1112090950.7574.0.camel@iris>

Il giorno mar, 29-03-2005 alle 00:31 -0500, Mike Taylor ha scritto:
> I've installed twisted 2.0 and Python 2.4 on my winxp test box and I've 
> also installed the following packages:
> 
> postgresql 8.0
> mysql 4.1
> psycopg 1.1.2

1.1.2? I really hope you're not using 1.1.2 for real. Use 1.1.18, 1.1.19
to be released soon or 1.99.13 with all the adaptation goodies.  :)

federico





From itamar at itamarst.org  Tue Mar 29 09:16:58 2005
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Tue, 29 Mar 2005 11:16:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <E1DGJ8V-0002co-00@wolfwood>
References: <E1DGJ8V-0002co-00@wolfwood>
Message-ID: <1112113018.8361.16.camel@localhost.localdomain>

On Tue, 2005-03-29 at 09:00 -0700, James Knight wrote:
> Author: foom
> Date: Tue Mar 29 09:00:10 2005
> New Revision: 13334
> 
> Modified:
>    trunk/twisted/internet/posixbase.py
>    trunk/twisted/python/log.py
>    trunk/twisted/python/threadable.py
> Log:
> Make log.err and log.msg actually threadsafe, by executing them in the
> reactor-loop if not called from the main thread. 

I talked to glyph about this at some point, and he thought that we
shouldn't do this, if you want to make observers thread safe you should
do so yourself. I'm not sure I agree with glyph, though.




From bear at code-bear.com  Tue Mar 29 10:08:54 2005
From: bear at code-bear.com (Mike Taylor)
Date: Tue, 29 Mar 2005 12:08:54 -0500
Subject: [Twisted-Python] test_adbapi under twisted 2.0 on win32
In-Reply-To: <1112090950.7574.0.camel@iris>
References: <efb3f4558f1bb144a08ca521fb84293d@code-bear.com>
	<1112090950.7574.0.camel@iris>
Message-ID: <76bfdad228116c8df2a7007097bdcfd7@code-bear.com>

On Mar 29, 2005, at 5:09 AM, Federico Di Gregorio wrote:

> Il giorno mar, 29-03-2005 alle 00:31 -0500, Mike Taylor ha scritto:
>> psycopg 1.1.2
>
> 1.1.2? I really hope you're not using 1.1.2 for real. Use 1.1.18, 
> 1.1.19
> to be released soon or 1.99.13 with all the adaptation goodies.  :)

1.1.2 was the first one I found that had a win32 binary installer - I 
would love to use the most recent version.

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050329/0d5166b9/attachment.sig>

From python.programming at gmail.com  Tue Mar 29 13:11:03 2005
From: python.programming at gmail.com (Kevin)
Date: Tue, 29 Mar 2005 15:11:03 -0500
Subject: [Twisted-Python] Docs for twisted?
Message-ID: <d082fff805032912114ef0df98@mail.gmail.com>

I am new to twistesd and was wondering if there are any online docs
other then the ones at twistedmatrix.com, that could help me
understand it better.

Thanks

Kevin



From tim at se.linux.org  Tue Mar 29 13:21:22 2005
From: tim at se.linux.org (=?iso-8859-1?Q?Tim_Terleg=E5rd?=)
Date: Tue, 29 Mar 2005 22:21:22 +0200 (CEST)
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

And a book would be nice *wink*  :)

Tim




From python.programming at gmail.com  Tue Mar 29 13:22:27 2005
From: python.programming at gmail.com (Kevin)
Date: Tue, 29 Mar 2005 15:22:27 -0500
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>
References: <d082fff805032912114ef0df98@mail.gmail.com>
	<Pine.LNX.4.44.0503292220490.30194-100000@naskur.se.linux.org>
Message-ID: <d082fff805032912225b5897ba@mail.gmail.com>

ya but I'll talk what I can get lol


On Tue, 29 Mar 2005 22:21:22 +0200 (CEST), Tim Terlegård
<tim at se.linux.org> wrote:
> > I am new to twistesd and was wondering if there are any online docs
> > other then the ones at twistedmatrix.com, that could help me
> > understand it better.
> 
> And a book would be nice *wink*  :)
> 
> Tim
> 
>



From orbitz at ezabel.com  Tue Mar 29 15:17:56 2005
From: orbitz at ezabel.com (orbitz at ezabel.com)
Date: Tue, 29 Mar 2005 17:17:56 -0500
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <cc0f29db03ddb287a5752469d8c9bb92@ezabel.com>

There are a few random tutorials on the net I think.  Your best luck is 
to A) know python very very very well.  If you don't know Python that 
well then I think you are wasting your time trying to mess with twisted 
so soon.  But if the documentation isn't working out then you are 
always free to ask questions here and on the IRC channel.  People are 
always around and glad to answer your question as long as it's well 
thought out and you have done all you can to try to find the answer.

Good luck

On Mar 29, 2005, at 3:11 PM, Kevin wrote:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.
>
> Thanks
>
> Kevin
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>




From daverz at gmail.com  Tue Mar 29 17:31:05 2005
From: daverz at gmail.com (Dave Cook)
Date: Tue, 29 Mar 2005 16:31:05 -0800
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com>
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <7a59f02505032916311c92bd69@mail.gmail.com>

On Tue, 29 Mar 2005 15:11:03 -0500, Kevin <python.programming at gmail.com> wrote:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

The manual on the website is pretty good. I printed it out and had
Kinkos bind it for me.

http://twistedmatrix.com/documents/current/howto/

That plus examples in the distribution, the FAQ, the mailing list, and
the helpful folks on IRC helped me to get comfortable in only a couple
months ;}.

Dave Cook



From exarkun at divmod.com  Tue Mar 29 19:21:14 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 02:21:14 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13342 - Tests are good,
	even if they are woefully incomplete.
In-Reply-To: <E1DGRAR-0002pG-00@wolfwood>
Message-ID: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>

On Tue, 29 Mar 2005 17:34:43 -0700, Alex Levy <mesozoic at wolfwood.twistedmatrix.com> wrote:
>Author: mesozoic
> Date: Tue Mar 29 17:34:41 2005
> New Revision: 13342
> 
> Added:
>    trunk/twisted/web2/test/test_wsgi.py
> Log:
> Tests are good, even if they are woefully incomplete.
> 

  Also, if they don't fail :)  Could the currently failing test_wsgi tests be set as todo or skip, or be fixed?

  Thanks,

  Jp



From dreid at dreid.org  Wed Mar 30 01:32:26 2005
From: dreid at dreid.org (David Reid)
Date: Wed, 30 Mar 2005 00:32:26 -0800
Subject: [Twisted-Python] Re: [Twisted-commits] r13342 - Tests are good,
	even if they are woefully incomplete.
In-Reply-To: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>
References: <20050330022114.13806.678831117.divmod.quotient.32549@ohm>
Message-ID: <424A641A.6090800@dreid.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Just for the record, this has been fixed it was only failing on full-2.2
because 2.2 is broken in the way it os.environ.copy() works (or perhaps
2.3 and 2.4 are broken in the way that os.environ.copy() works)

Besides, this is what we have buildbots for right? :)

Jp Calderone wrote:
| On Tue, 29 Mar 2005 17:34:43 -0700, Alex Levy
<mesozoic at wolfwood.twistedmatrix.com> wrote:
|
|>Author: mesozoic
|>Date: Tue Mar 29 17:34:41 2005
|>New Revision: 13342
|>
|>Added:
|>   trunk/twisted/web2/test/test_wsgi.py
|>Log:
|>Tests are good, even if they are woefully incomplete.
|>
|
|
|   Also, if they don't fail :)  Could the currently failing test_wsgi
tests be set as todo or skip, or be fixed?
|
|   Thanks,
|
|   Jp
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFCSmQarsrO6aeULcgRAoREAJ9Y5XRxOi46XPDSgC/H18dAyWosLwCeN2oz
Vdu7ycT21fpFZw8Oms9JXRw=
=YzeM
-----END PGP SIGNATURE-----



From thomas at apestaart.org  Wed Mar 30 02:55:03 2005
From: thomas at apestaart.org (Thomas Vander Stichele)
Date: Wed, 30 Mar 2005 11:55:03 +0200
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err
	and log.msg actually threadsafe, by executing them in the
In-Reply-To: <1112113018.8361.16.camel@localhost.localdomain>
References: <E1DGJ8V-0002co-00@wolfwood>
	<1112113018.8361.16.camel@localhost.localdomain>
Message-ID: <1112176503.5535.0.camel@otto.amantes>


> > Make log.err and log.msg actually threadsafe, by executing them in the
> > reactor-loop if not called from the main thread. 
> 
> I talked to glyph about this at some point, and he thought that we
> shouldn't do this, if you want to make observers thread safe you should
> do so yourself. I'm not sure I agree with glyph, though.

If you make them threadsafe by marshalling to the reactor, is correct
ordering still guaranteed ?

Thomas


Dave/Dina : future TV today ! - http://www.davedina.org/
<-*- thomas (dot) apestaart (dot) org -*->
But you never lost your beauty
Although you lost your hope
And you made no mistake you couldn't wash away
with liar's tears pouring down your face
<-*- thomas (at) apestaart (dot) org -*->
URGent, best radio on the net - 24/7 ! - http://urgent.fm/






From anderson at pegasus.eti.br  Wed Mar 30 05:21:14 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Wed, 30 Mar 2005 09:21:14 -0300
Subject: [Twisted-Python] Docs for twisted?
In-Reply-To: <d082fff805032912114ef0df98@mail.gmail.com> (Kevin's message of
	"Tue, 29 Mar 2005 15:11:03 -0500")
References: <d082fff805032912114ef0df98@mail.gmail.com>
Message-ID: <87d5thz5mt.fsf@gandalf.pegasus.eti.br>

Kevin <python.programming at gmail.com> writes:

> I am new to twistesd and was wondering if there are any online docs
> other then the ones at twistedmatrix.com, that could help me
> understand it better.

You may walk through examples directory and if you know Python pretty
well, you can use pydoc on each module you need to use. 

IRC on irc.freenode.net (channels #twisted and #twisted.web) is a good
resource too. 




From exarkun at divmod.com  Wed Mar 30 06:14:31 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 13:14:31 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err
	and log.msg actually threadsafe, by executing them in the
In-Reply-To: <1112176503.5535.0.camel@otto.amantes>
Message-ID: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>

On Wed, 30 Mar 2005 11:55:03 +0200, Thomas Vander Stichele <thomas at apestaart.org> wrote:
>
> > > Make log.err and log.msg actually threadsafe, by executing them in the
> > > reactor-loop if not called from the main thread. 
> > 
> > I talked to glyph about this at some point, and he thought that we
> > shouldn't do this, if you want to make observers thread safe you should
> > do so yourself. I'm not sure I agree with glyph, though.
> 
> If you make them threadsafe by marshalling to the reactor, is correct
> ordering still guaranteed ?
> 
> Thomas
> 

  Calls to log.{msg,err} were already serialized, so I don't think any changes have been made to the order observers will be called with events.

  Another thing about the change, though, is that it makes Twisted even more broken on threadless platforms.  *poke foom*

  Jp



From foom at fuhm.net  Wed Mar 30 08:28:25 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Mar 2005 10:28:25 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>
References: <20050330131431.13806.1981147048.divmod.quotient.33492@ohm>
Message-ID: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>

On Mar 30, 2005, at 8:14 AM, Jp Calderone wrote:
>   Another thing about the change, though, is that it makes Twisted 
> even more broken on threadless platforms.  *poke foom*

Oughtn't. isInIOThread always returns true if you haven't initialized 
threads yet.

James




From exarkun at divmod.com  Wed Mar 30 08:51:03 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Wed, 30 Mar 2005 15:51:03 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>
Message-ID: <20050330155103.13806.1026980900.divmod.quotient.33739@ohm>

On Wed, 30 Mar 2005 10:28:25 -0500, James Y Knight <foom at fuhm.net> wrote:
>On Mar 30, 2005, at 8:14 AM, Jp Calderone wrote:
> >   Another thing about the change, though, is that it makes Twisted 
> > even more broken on threadless platforms.  *poke foom*
> 
> Oughtn't. isInIOThread always returns true if you haven't initialized 
> threads yet.
> 
> James
> 

  Except when it raises an exception, instead. :)

  I started on a bunch of threadless fixes.  Now that 2.0 is out the door it might be time to pull them back into trunk.  The code is in /branches/exarkun/threadless/ if anyone wants to look/contribute.

  Jp



From corydodt at twistedmatrix.com  Wed Mar 30 10:26:53 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 30 Mar 2005 09:26:53 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
Message-ID: <424AE15D.4070501@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

These are to be considered "release candidates".  Testing is required to
determine if the installers are good enough to be considered final.  So please
try them and report problems. :-)

This is based on the 2.0.0 final release of Twisted, so the RC designation
only applies to the installers themselves.

Now available at
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc1)-py2.3.exe
and
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-rc1)-py2.4.exe

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
q22Vflhb70RV4xy/iKVUCps=
=Y2A8
-----END PGP SIGNATURE-----



From general at eepatents.com  Wed Mar 30 11:21:16 2005
From: general at eepatents.com (Ed Suominen)
Date: Wed, 30 Mar 2005 10:21:16 -0800
Subject: [Twisted-Python] Re: Docs for twisted?
Message-ID: <200503301021.16816.general@eepatents.com>

The lack of detailed, current documentation for Twisted is an ongoing 
problem, especially given how revolutionary and difficult to understand 
its underlying programming concepts are.  Dave Cook's "just use it for 
months" comment is not at all off the mark, but it's a frustrating and 
unproductive way to learn.  It particularly annoys me that the code 
contains so few docstrings -- Python's especially useful and convenient 
way to document your code -- and there are so many nonsensical "cute" 
names like jelly, banana, etc.

Putting my money where my mouth is, I would be willing to contribute a 
few hundred bucks to getting some more docstrings in the code and, 
consequently, to a somewhat better lore-generated API specification.

One thought would be to run a "bounty" program using an 
actively-generated, hyperlinked web rendition of the latest Twisted SVN 
code.  For example, participant donors could mark defs, classes, or 
blocks of code to indicate where they're willing to "sponsor" 
docstrings, and they could also click on newly added docstrings in such 
"sponsored" code portions to indicate acceptance and make a bounty 
payment from their contribution to the fund or whatever to the person 
who wrote the docstring.  The proportion of docstring submissions 
accepted by a given donor could be a score that potential writers could 
look at when deciding whether to do the work or not.

Any thoughts on that idea?  Anyone willing to step up as a 
co-contributor to such an effort, both financially and with some Nevow 
coding?

---
Ed Suominen
Registered Patent Agent
Open-Source Software Author (yes, both...)
Web Site: http://www.eepatents.com



From uwe at oss4u.com  Wed Mar 30 12:02:07 2005
From: uwe at oss4u.com (Uwe C. Schroeder)
Date: Wed, 30 Mar 2005 11:02:07 -0800
Subject: [Twisted-Python] Threading traceback
Message-ID: <200503301102.07995.uwe@oss4u.com>


Hi everyone,

I'm using twisted in a thread together with wxPython. 
Everything works quite fine, but I'm getting a strange traceback when I exit 
the application.
here's the scenario:

wx runs in the main thread
twisted runs in a secondary thread which is started like:

        _daemon = DaemonLoop(self,self._port)
        _daemon.setDaemon(True)
        _daemon.start()

where Daemonloop is (partial):
class DaemonLoop(threading.Thread,pb.Referenceable):
        def __init__(self, wxEvtHandler, port):
            super(DaemonLoop, self).__init__()
            self.ui = UIProxy(wxEvtHandler)
            self.port=port

        def _error(self,error):
	    if self.ui:
	        self.ui._error(error)
        
        def run(self):
	    # Run reactor
            reactor.run(installSignalHandlers=0)

	def stop(self):
	    reactor.stop()

        def connectionLost(self):
            self.ui.connectionLost()
	    reactor.stop()
            

I stop the application from the main thread using

_daemon.stop() <- should kill the twisted reactor
wx.Exit() <- kills the main thread

The app exits (on linux), but I get this traceback:

Unhandled exception in thread started by <bound method DaemonLoop.__bootstrap 
of <DaemonLoop(Thread-1, stopped daemon)>>
Traceback (most recent call last):
  File "/usr/lib/python2.3/threading.py", line 451, in __bootstrap
    self.__stop()
  File "/usr/lib/python2.3/threading.py", line 460, in __stop
    self.__block.notifyAll()
  File "/usr/lib/python2.3/threading.py", line 256, in notifyAll
    self.notify(len(self.__waiters))
  File "/usr/lib/python2.3/threading.py", line 238, in notify
    currentThread() # for side-effect
TypeError: 'NoneType' object is not callable


The problem seems to be on windows. There the app doesn't exit all the time, 
just sometimes. On Win the window disappears, but in the process list is 
still the application process.
So this looks to me like there are still non daemon threads around which keep 
the application from exiting.
On a side note: I'm also using the "deferToThread" method for some longer 
running tasks, so it might well be that it's one of those threads causing the 
issue. Is there a way to figure out which thread doesn't die? 
Any pointers are highly appreciated.

Thanks

UC

--
Open Source Solutions 4U, LLC	2570 Fleetwood Drive
Phone:  +1 650 872 2425		San Bruno, CA 94066
Cell:   +1 650 302 2405		United States
Fax:    +1 650 872 2417



From foom at fuhm.net  Wed Mar 30 12:30:47 2005
From: foom at fuhm.net (James Y Knight)
Date: Wed, 30 Mar 2005 14:30:47 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r13358 - brand as 2.0.0 and
	apply my mods from 13320
In-Reply-To: <E1DGgoo-0003Gf-00@wolfwood>
References: <E1DGgoo-0003Gf-00@wolfwood>
Message-ID: <0be396a332cbff142ccda533d7e66c94@fuhm.net>

On Mar 30, 2005, at 12:17 PM, Cory Dodt wrote:
> -version="SVN-Trunk"
> +version="2.0.0"

That's not the right way to set the version. It needs to be set in all 
projects and in all other files which contain "SVN-Trunk". See what the 
release-twisted script does.

James



From bear at code-bear.com  Wed Mar 30 13:19:25 2005
From: bear at code-bear.com (Mike Taylor)
Date: Wed, 30 Mar 2005 15:19:25 -0500
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424AE15D.4070501@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
Message-ID: <d535279be3c4454c1c17c4d693894ea2@code-bear.com>

I just tried the python 2.4 installer and everything seemed to work  
fine - am running trial now to make sure.

One question I had, you are including the .pyc files it looks like.  I  
had always thought that wasn't a good thing to do - just curious.

During the un-install it seems that the site-packages\twisted\test  
directory remained - I'm going to test on a completely clean setup  
later to verify that it wasn't something I had left behind.

thanks,

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> These are to be considered "release candidates".  Testing is required  
> to
> determine if the installers are good enough to be considered final.   
> So please
> try them and report problems. :-)
>
> This is based on the 2.0.0 final release of Twisted, so the RC  
> designation
> only applies to the installers themselves.
>
> Now available at
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.3.exe
> and
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.4.exe
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org
>
> iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
> q22Vflhb70RV4xy/iKVUCps=
> =Y2A8
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050330/9073cbb8/attachment.sig>

From bear at code-bear.com  Wed Mar 30 13:21:15 2005
From: bear at code-bear.com (Mike Taylor)
Date: Wed, 30 Mar 2005 15:21:15 -0500
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424AE15D.4070501@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
Message-ID: <5e89b96e10e2e953f813fc2f48bb4946@code-bear.com>

A quick follow-up to my previous post.

I had an ssh session open that had the twisted\test directory active -  
that's why un-install couldn't remove it.  sorry for the false report.

---
Bear
http://code-bear.com

Open Source Applications Foundation (OSAF)
http://www.osafoundation.org

PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29


On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> These are to be considered "release candidates".  Testing is required  
> to
> determine if the installers are good enough to be considered final.   
> So please
> try them and report problems. :-)
>
> This is based on the 2.0.0 final release of Twisted, so the RC  
> designation
> only applies to the installers themselves.
>
> Now available at
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.3.exe
> and
> http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer- 
> rc1)-py2.4.exe
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.1 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org
>
> iD8DBQFCSuFd3A5SrXAiHQcRAlHDAJ0bPKkefqKCzCYoj0M1zmNvGLFfdwCgiz9u
> q22Vflhb70RV4xy/iKVUCps=
> =Y2A8
> -----END PGP SIGNATURE-----
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: This is a digitally signed message part
URL: </pipermail/twisted-python/attachments/20050330/a457cf01/attachment.sig>

From kwhitesell at adelphia.net  Wed Mar 30 14:10:53 2005
From: kwhitesell at adelphia.net (Ken Whitesell)
Date: Wed, 30 Mar 2005 16:10:53 -0500
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
Message-ID: <424B15DD.1060806@adelphia.net>

Three thoughts come to mind - coming from someone who has climbed 
the Twisted learning curve for the last year.

1) The docs I'd like to see would be of a more tutorial nature - it 
would seem to me that they would be the easiest way to reach a 
"lights on" stage. The sample code is good - and the finger tutorial 
is fine (for what it addresses) - but there are still lots of bits & 
pieces that seem to be hidden.

At some point, you reach the "Ah-ha!" stage. The learning curve 
greatly flattens out at that point. (At least that was my personal 
experience with Twisted-PB.) Once you reach that point, everything 
else becomes much easier to learn.

It helps a _whole_ lot to have a specific project / task in mind. 
Part of this is understanding your task sufficiently well to be able 
to divide it into the components as they apply to Twisted, and build 
carefully, step-by-step. (In my case, I built a multi-room chat 
server. Not a whole lot of code, but takes advantage of a number of 
different principles.)

I think it also helps, as painful as it may seem, to force yourself 
to work through the tutorials in the book by typing the code rather 
than just reading it. There's a more intimate association that you 
develop by going through the actual process than just running the 
existing code.

2) A current road map may help. I've seen various comments about 
modules being "not-quite-primetime" or "an old way of doing things" 
(specifically, I'm thinking about Enterprise, other than adbapi, and 
TAC / TAP files) Yes, Python (and Twisted) is the "Batteries 
Included" environment, but as someone pointed out to me at PyCon, 
some of those batteries are dead. I'd really like to know what 
modules I should avoid.

3) Even something like a directed HOWTO could be incredibly useful.
For example:

If you want to build a web server - read Chapter 7, Web 
Applications, section 7.1 and look at sample "xxx" - where sample 
"xxx" is the simplest and most straight forward first example of a 
web server.

There's a _lot_ there, and wading through it can be frustrating. The 
only way I managed it, was to print out the consolidated HOWTOs in 
the book.pdf file and read Chapter 6 repeatedly. After about the 
10th repetition, along with working through the samples, things just 
started falling into place.





From corydodt at twistedmatrix.com  Wed Mar 30 14:24:58 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Wed, 30 Mar 2005 13:24:58 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <d535279be3c4454c1c17c4d693894ea2@code-bear.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
Message-ID: <424B192A.70409@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

There's nothing wrong with including the .pyc files per se, except they
increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
etc.  The reason I tried including them is because it makes the install go
faster (no .pyc compile step).  If a significant number of people want a
smaller installer, I'll take them out.

Thanks for the report, glad to hear everything's working for you.

C



Mike Taylor wrote:
| I just tried the python 2.4 installer and everything seemed to work
| fine - am running trial now to make sure.
|
| One question I had, you are including the .pyc files it looks like.  I
| had always thought that wasn't a good thing to do - just curious.
|
| During the un-install it seems that the site-packages\twisted\test
| directory remained - I'm going to test on a completely clean setup
| later to verify that it wasn't something I had left behind.
|
| thanks,
|
| ---
| Bear
| http://code-bear.com
|
| Open Source Applications Foundation (OSAF)
| http://www.osafoundation.org
|
| PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
|
|
| On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
|
| These are to be considered "release candidates".  Testing is required  to
| determine if the installers are good enough to be considered final.
| So please
| try them and report problems. :-)
|
| This is based on the 2.0.0 final release of Twisted, so the RC
| designation
| only applies to the installers themselves.
|
| Now available at
| http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| rc1)-py2.3.exe
| and
| http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| rc1)-py2.4.exe
|
|>
_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
|>

| ------------------------------------------------------------------------

| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCSxkq3A5SrXAiHQcRAhIbAKCQJWkvaDQuMnfyMiNAhl+ByQYemQCeJI9u
ruuYS84MZGBelpHpl6nJrKY=
=Cc3M
-----END PGP SIGNATURE-----



From andrew-twisted at puzzling.org  Wed Mar 30 16:44:24 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Mar 2005 09:44:24 +1000
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330155103.13806.1026980900.divmod.quotient.33739@ohm>
References: <b183298090473a79d6c5d6b659dc63ce@fuhm.net>
	<20050330155103.13806.1026980900.divmod.quotient.33739@ohm>
Message-ID: <20050330234424.GK9620@frobozz>

On Wed, Mar 30, 2005 at 03:51:03PM +0000, Jp Calderone wrote:
[...]
> 
>   I started on a bunch of threadless fixes.  Now that 2.0 is out the door
>   it might be time to pull them back into trunk.  The code is in
>   /branches/exarkun/threadless/ if anyone wants to look/contribute.

Would this benefit from using the dummy_thread/dummy_threading modules from
Python 2.4?

-Andrew.




From andrew-twisted at puzzling.org  Wed Mar 30 16:46:31 2005
From: andrew-twisted at puzzling.org (Andrew Bennetts)
Date: Thu, 31 Mar 2005 09:46:31 +1000
Subject: [Twisted-Python] Re: Docs for twisted?
In-Reply-To: <200503301021.16816.general@eepatents.com>
References: <200503301021.16816.general@eepatents.com>
Message-ID: <20050330234631.GL9620@frobozz>

On Wed, Mar 30, 2005 at 10:21:16AM -0800, Ed Suominen wrote:
[...]
> 
> Putting my money where my mouth is, I would be willing to contribute a 
> few hundred bucks to getting some more docstrings in the code and, 
> consequently, to a somewhat better lore-generated API specification.

Minor correction: the API docs are generated by epydoc (with a bunch of
hacks -- see admin/epyrun in a SVN checkout).  Lore processes the Howtos.

-Andrew.




From exarkun at divmod.com  Wed Mar 30 17:26:07 2005
From: exarkun at divmod.com (Jp Calderone)
Date: Thu, 31 Mar 2005 00:26:07 GMT
Subject: [Twisted-Python] Re: [Twisted-commits] r13334 - Make log.err and
	log.msg actually threadsafe, by executing them in the
In-Reply-To: <20050330234424.GK9620@frobozz>
Message-ID: <20050331002607.13806.565501193.divmod.quotient.34506@ohm>

On Thu, 31 Mar 2005 09:44:24 +1000, Andrew Bennetts <andrew-twisted at puzzling.org> wrote:
>On Wed, Mar 30, 2005 at 03:51:03PM +0000, Jp Calderone wrote:
> [...]
> > 
> >   I started on a bunch of threadless fixes.  Now that 2.0 is out the door
> >   it might be time to pull them back into trunk.  The code is in
> >   /branches/exarkun/threadless/ if anyone wants to look/contribute.
> 
> Would this benefit from using the dummy_thread/dummy_threading modules from
> Python 2.4?
> 
> -Andrew.
> 

  I don't think I understand the point of those modules.  As far as I can tell they are almost never useful.  For Twisted's main use (deferToThread), they definitely aren't.

  Even so, we still need to support 2.2 for a while.  The branch I referred to mainly just disables functionality until the parts of Twisted that really don't care about threads work again.

  Jp



From radeex at gmail.com  Wed Mar 30 17:38:30 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Thu, 31 Mar 2005 10:38:30 +1000
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <424B192A.70409@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
Message-ID: <60ed19d405033016382a1c0b83@mail.gmail.com>

On Wed, 30 Mar 2005 13:24:58 -0800, Cory Dodt
<corydodt at twistedmatrix.com> wrote:
> There's nothing wrong with including the .pyc files per se, except they
> increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
> etc.  The reason I tried including them is because it makes the install go
> faster (no .pyc compile step).  If a significant number of people want a
> smaller installer, I'll take them out.
> 
> Thanks for the report, glad to hear everything's working for you.

They also break tracebacks, because PYCs refer to locations of
associated PY files, which is how the traceback renderers look up
lines of code to display in tracebacks.



From dripton at ripton.net  Wed Mar 30 20:23:11 2005
From: dripton at ripton.net (David Ripton)
Date: Wed, 30 Mar 2005 19:23:11 -0800
Subject: [Twisted-Python] RC's of Win32 installers for 2.0.0
In-Reply-To: <60ed19d405033016382a1c0b83@mail.gmail.com>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<60ed19d405033016382a1c0b83@mail.gmail.com>
Message-ID: <20050331032311.GA23326@vidar.dreamhost.com>

On 2005.03.31 10:38:30 +0000, Christopher Armstrong wrote:
> On Wed, 30 Mar 2005 13:24:58 -0800, Cory Dodt
> <corydodt at twistedmatrix.com> wrote:
> > There's nothing wrong with including the .pyc files per se, except they
> > increase the footprint a fair amount.  pyc is cross-platform, cross-machine,
> > etc.  The reason I tried including them is because it makes the install go
> > faster (no .pyc compile step).  If a significant number of people want a
> > smaller installer, I'll take them out.
> > 
> > Thanks for the report, glad to hear everything's working for you.
> 
> They also break tracebacks, because PYCs refer to locations of
> associated PY files, which is how the traceback renderers look up
> lines of code to display in tracebacks.

They also break across Python versions.

$ python2.4 pysol_23.pyc
RuntimeError: Bad magic number in .pyc file

-- 
David Ripton    dripton at ripton.net



From anderson at pegasus.eti.br  Thu Mar 31 06:16:24 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Thu, 31 Mar 2005 10:16:24 -0300
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <424B15DD.1060806@adelphia.net> (Ken Whitesell's message of
	"Wed, 30 Mar 2005 16:10:53 -0500")
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
	<424B15DD.1060806@adelphia.net>
Message-ID: <877jjonefr.fsf@gandalf.pegasus.eti.br>

Ken Whitesell <kwhitesell at adelphia.net> writes:

> 1) The docs I'd like to see would be of a more tutorial nature - it
>    would seem to me that they would be the easiest way to reach a
>    "lights on" stage. The sample code is good - and the finger
>    tutorial is fine (for what it addresses) - but there are still lots
>    of bits & pieces that seem to be hidden.

I agree with you. Twisted may be easy for who know python very well and
can dig through pydoc, epydoc and so on. It's a pain for beginners. If
Twisted had a good documentation, tutorial, howtos, it would gain lots of
new users and developers. I am trying to write some tutorials by myself
and helping some friends who is trying to learn Twisted and
Twisted.web. This tutorial is on early stage, if someone else is doing
the same, I think we could join efforts and make a good tutorial and
also explore these pieces that seem to be hidden. 



From ken at kenkinder.com  Thu Mar 31 08:50:16 2005
From: ken at kenkinder.com (Ken Kinder)
Date: Thu, 31 Mar 2005 09:50:16 -0600
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <877jjonefr.fsf@gandalf.pegasus.eti.br>
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>	<424B15DD.1060806@adelphia.net>
	<877jjonefr.fsf@gandalf.pegasus.eti.br>
Message-ID: <424C1C38.1080809@kenkinder.com>

Christiano Anderson wrote:

>I agree with you. Twisted may be easy for who know python very well and
>can dig through pydoc, epydoc and so on. It's a pain for beginners. If
>Twisted had a good documentation, tutorial, howtos, it would gain lots of
>new users and developers. I am trying to write some tutorials by myself
>and helping some friends who is trying to learn Twisted and
>Twisted.web. This tutorial is on early stage, if someone else is doing
>the same, I think we could join efforts and make a good tutorial and
>also explore these pieces that seem to be hidden. 
>  
>
The split of Twisted into separate projects is definitely progress in 
this direction, because tutorials for each project could be worked out 
on their own. When I first got into Twisted about a year and a half ago, 
I had relatively little trouble learning how to use the basics of 
Twisted, but figuring out how to use each component was (and is) 
intimidating. Developing a web page in Twisted and writing a chat 
server, for example, have radically different learning paths to follow.

You mentioned you're teaching someone Twisted Web -- is that just the 
twisted.web/old-woven stuff or are you taking on nevow?



From anderson at pegasus.eti.br  Thu Mar 31 09:32:08 2005
From: anderson at pegasus.eti.br (Christiano Anderson)
Date: Thu, 31 Mar 2005 13:32:08 -0300
Subject: [Twisted-Python] Docs for twisted
In-Reply-To: <424C1C38.1080809@kenkinder.com> (Ken Kinder's message of "Thu,
	31 Mar 2005 09:50:16 -0600")
References: <E1DGiQ7-0000uq-01@pyramid.twistedmatrix.com>
	<424B15DD.1060806@adelphia.net>
	<877jjonefr.fsf@gandalf.pegasus.eti.br>
	<424C1C38.1080809@kenkinder.com>
Message-ID: <87hdirn5dj.fsf@gandalf.pegasus.eti.br>

Ken Kinder <ken at kenkinder.com> writes:

> The split of Twisted into separate projects is definitely progress in
> this direction, because tutorials for each project could be worked out
> on their own. When I first got into Twisted about a year and a half
> ago, I had relatively little trouble learning how to use the basics of
> Twisted, but figuring out how to use each component was (and is)
> intimidating. Developing a web page in Twisted and writing a chat
> server, for example, have radically different learning paths to
> follow.

I had the same trouble when I first tried Twisted too.  :)


> You mentioned you're teaching someone Twisted Web -- is that just the
> twisted.web/old-woven stuff or are you taking on nevow?

I am using Nevow and trying to build some projects under it. My goal is
to create a complete webmail, based on Cyrus IMAP and its features
(Sieve, Shared Folders, etc). The frontend must be easy to customize for
each customer and I think nevow is the right templating system for
that. I tried Quotient, it is excellent, but it is not the right system
for my needs. 




From corydodt at twistedmatrix.com  Thu Mar 31 09:49:44 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 08:49:44 -0800
Subject: [Twisted-Python] RC2's of Win32 installers for 2.0.0
In-Reply-To: <424B192A.70409@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
Message-ID: <424C2A28.7000802@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

RC2's are out.  No pyc, lots of replacing SVN-Trunk with 2.0.0.

Get them while they're hot at
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.3.exe

C



Cory Dodt wrote:
| There's nothing wrong with including the .pyc files per se, except they
| increase the footprint a fair amount.  pyc is cross-platform,
| cross-machine,
| etc.  The reason I tried including them is because it makes the install go
| faster (no .pyc compile step).  If a significant number of people want a
| smaller installer, I'll take them out.
|
| Thanks for the report, glad to hear everything's working for you.
|
| C
|
|
|
| Mike Taylor wrote:
| | I just tried the python 2.4 installer and everything seemed to work
| | fine - am running trial now to make sure.
| |
| | One question I had, you are including the .pyc files it looks like.  I
| | had always thought that wasn't a good thing to do - just curious.
| |
| | During the un-install it seems that the site-packages\twisted\test
| | directory remained - I'm going to test on a completely clean setup
| | later to verify that it wasn't something I had left behind.
| |
| | thanks,
| |
| | ---
| | Bear
| | http://code-bear.com
| |
| | Open Source Applications Foundation (OSAF)
| | http://www.osafoundation.org
| |
| | PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
| |
| |
| | On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
| |
| | These are to be considered "release candidates".  Testing is required  to
| | determine if the installers are good enough to be considered final.
| | So please
| | try them and report problems. :-)
| |
| | This is based on the 2.0.0 final release of Twisted, so the RC
| | designation
| | only applies to the installers themselves.
| |
| | Now available at
| | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | rc1)-py2.3.exe
| | and
| | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | rc1)-py2.4.exe
| |
| |>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTCoo3A5SrXAiHQcRAiN2AJkB1F5vwysDTEkty3AkDJF34za8WACfRu3z
P7pA+/zTkSs6xM0Ogp6f0U8=
=XSz+
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Thu Mar 31 09:51:07 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 08:51:07 -0800
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
In-Reply-To: <424C2A28.7000802@twistedmatrix.com>
References: <424AE15D.4070501@twistedmatrix.com>	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com>
Message-ID: <424C2A7B.3050307@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Urgh, here's the correct URLs:
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc2%29-py2.4.exe
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc2%29-py2.3.exe

C


Cory Dodt wrote:
| RC2's are out.  No pyc, lots of replacing SVN-Trunk with 2.0.0.
|
| Get them while they're hot at
|
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.4.exe

|
|
http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32%28installer-rc1%29-py2.3.exe

|
|
| C
|
|
|
| Cory Dodt wrote:
| | There's nothing wrong with including the .pyc files per se, except they
| | increase the footprint a fair amount.  pyc is cross-platform,
| | cross-machine,
| | etc.  The reason I tried including them is because it makes the
| install go
| | faster (no .pyc compile step).  If a significant number of people want a
| | smaller installer, I'll take them out.
| |
| | Thanks for the report, glad to hear everything's working for you.
| |
| | C
| |
| |
| |
| | Mike Taylor wrote:
| | | I just tried the python 2.4 installer and everything seemed to work
| | | fine - am running trial now to make sure.
| | |
| | | One question I had, you are including the .pyc files it looks like.  I
| | | had always thought that wasn't a good thing to do - just curious.
| | |
| | | During the un-install it seems that the site-packages\twisted\test
| | | directory remained - I'm going to test on a completely clean setup
| | | later to verify that it wasn't something I had left behind.
| | |
| | | thanks,
| | |
| | | ---
| | | Bear
| | | http://code-bear.com
| | |
| | | Open Source Applications Foundation (OSAF)
| | | http://www.osafoundation.org
| | |
| | | PGP Fingerprint = 9996 719F 973D B11B E111  D770 9331 E822 40B3 CD29
| | |
| | |
| | | On Mar 30, 2005, at 12:26 PM, Cory Dodt wrote:
| | |
| | | These are to be considered "release candidates".  Testing is
| required  to
| | | determine if the installers are good enough to be considered final.
| | | So please
| | | try them and report problems. :-)
| | |
| | | This is based on the 2.0.0 final release of Twisted, so the RC
| | | designation
| | | only applies to the installers themselves.
| | |
| | | Now available at
| | | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | | rc1)-py2.3.exe
| | | and
| | | http://twisted.sourceforge.net/Twisted_NoDocs-2.0.0.win32(installer-
| | | rc1)-py2.4.exe
| | |
| | |>
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTCp73A5SrXAiHQcRAhylAJ99lLClly+peM+MVvg67LOyz6lsYgCfTNDr
V+NvS1zzIc9C+t3R5VpPDEY=
=fqR7
-----END PGP SIGNATURE-----



From corydodt at twistedmatrix.com  Thu Mar 31 10:37:30 2005
From: corydodt at twistedmatrix.com (Cory Dodt)
Date: Thu, 31 Mar 2005 09:37:30 -0800
Subject: [Twisted-Python] Creating an NT Service for a twistd script
In-Reply-To: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>
References: <61DA7719C45FD31185280008C733EF6E04AC4CF3@XCHANGE>
Message-ID: <424C355A.8030703@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Grant,

Been on vacation so I'm still catching up, sorry for the slow reply.  This
sounds like an unpatched py2exe.  Did you look at the README.txt in my
sandbox? There's a patch in there you need.  TH has already applied it to
py2exe's development codeline but there hasn't been a release yet.

C


Grant McDonald wrote:
| Hi All,
|
| I am receiving the following error when i run the <filename>ctl.exe
| generated with moonfallen's ntsvc module and py2exe:
|
| Traceback (most recent call last):
|   File "boot_service.py", line 21, in ?
| RuntimeError: No service classes found
|
| Can someone please point me in the right direction??
|
| Grant
|
|
|
| Important notice: This message is intended for the individual(s) and
| entity(s) addressed. The information contained in this transmission and
| any attached, may be confidential and may also be the subject of legal
| privilege, public interest immunity or legal professional privilege. Any
| review, retransmission, dissemination or other use of, taking of any
| action in reliance upon this information by person or entities other
| than the recipient is prohibited and requires authorization from the
| sender. If you are not the addressee indicated in this message (or
| responsible for delivery of the message to such person) you may not copy
| or deliver this message to anyone. In such cases you should destroy this
| message and kindly notify the sender by reply email.
|
| WARNING: Although Infocomp has taken reasonable precautions so that no
| viruses are present in this e-mail, the company cannot accept
| responsibility for any loss or damage arising from the use of e-mail
| attachments.
|
|
| ------------------------------------------------------------------------
|
| _______________________________________________
| Twisted-Python mailing list
| Twisted-Python at twistedmatrix.com
| http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.1 (MingW32)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFCTDVa3A5SrXAiHQcRAs+6AKCmzny+kBHSSiEvowN7urQQvJyWIQCghaNu
At/NvfkCQXkiTT+kKkAGxOE=
=2uwz
-----END PGP SIGNATURE-----



From pf_moore at yahoo.co.uk  Thu Mar 31 12:51:59 2005
From: pf_moore at yahoo.co.uk (Paul Moore)
Date: Thu, 31 Mar 2005 20:51:59 +0100
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com>
Message-ID: <ufyybvbj4.fsf@yahoo.co.uk>

Cory Dodt <corydodt at twistedmatrix.com> writes:

> RC2's are out. No pyc, lots of replacing SVN-Trunk with 2.0.0.

Excuse the dumb question from someone who hasn't followed the split
very closely, but is this just twisted core or is it the sumo pachage?
The package seems to include twisted.web, but not (for example)
twisted.news. So I'm confused...

(If it's only core, what's the expectation on Windows binaries for
the other components?)

Paul.
-- 
Power corrupts. Absolute power is kind of neat. -- John Lehman




From jim.mccoy at gmail.com  Thu Mar 31 15:01:09 2005
From: jim.mccoy at gmail.com (Jim McCoy)
Date: Thu, 31 Mar 2005 14:01:09 -0800
Subject: [Twisted-Python] Re: RC2's of Win32 installers for 2.0.0
In-Reply-To: <ufyybvbj4.fsf@yahoo.co.uk>
References: <424AE15D.4070501@twistedmatrix.com>
	<d535279be3c4454c1c17c4d693894ea2@code-bear.com>
	<424B192A.70409@twistedmatrix.com>
	<424C2A28.7000802@twistedmatrix.com> <ufyybvbj4.fsf@yahoo.co.uk>
Message-ID: <f01e368805033114013c5111ad@mail.gmail.com>

Not only that, it seems that at least rc2 neglects to include the zope
interface.

On Thu, 31 Mar 2005 20:51:59 +0100, Paul Moore <pf_moore at yahoo.co.uk> wrote:
> Cory Dodt <corydodt at twistedmatrix.com> writes:
> 
> > RC2's are out. No pyc, lots of replacing SVN-Trunk with 2.0.0.
> 
> Excuse the dumb question from someone who hasn't followed the split
> very closely, but is this just twisted core or is it the sumo pachage?
[...]



From howe.steven at gmail.com  Thu Mar 31 17:26:59 2005
From: howe.steven at gmail.com (steven howe)
Date: Thu, 31 Mar 2005 16:26:59 -0800
Subject: [Twisted-Python] Looking for a simple file event driven loop
	using Twisted
In-Reply-To: <7a59f0250503252357594dd5de@mail.gmail.com>
References: <90151e50503250910694cea0e@mail.gmail.com>
	<7a59f0250503252357594dd5de@mail.gmail.com>
Message-ID: <90151e5050331162679d3c7b@mail.gmail.com>

Looks like a winner. Thank you very much.

Steven

On Fri, 25 Mar 2005 23:57:07 -0800, Dave Cook <daverz at gmail.com> wrote:
> Using Ken's first example, here's what I came up with:
> 
> import os
> import stat
> from twisted.internet import reactor
> 
> class FileWatcher:
> 
>     def __init__(self, period, filename):
>         self.period = period
>         self.filename = filename
>         self.callbacks = []
>         self.mtime = os.stat(filename)[stat.ST_MTIME]
>         reactor.callWhenRunning(self.checkFile)
> 
>     def addCallback(self, callback):
>         self.callbacks.append(callback)
> 
>     def removeCallback(self, callback):
>         self.callbacks.remove(callback)
> 
>     def checkFile(self):
>         mtime = os.stat(self.filename)[stat.ST_MTIME]
>         if mtime > self.mtime:
>             self.mtime = mtime
>             for callback in self.callbacks:
>                 callback(self.filename, mtime)
>         reactor.callLater(self.period, self.checkFile)
> 
> if __name__=='__main__':
> 
>     import time
> 
>     def changed(filename, mtime):
>         print "%s modified at %s." % (filename, time.ctime(mtime))
> 
>     open('/tmp/foo', "w").close()
>     FileWatcher(0.1, '/tmp/foo').addCallback(changed)
>     reactor.run()
> 
> Run it in one terminal window, and in the other run
> 
>   touch /tmp/foo
> 
> to see what happens.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From radeex at gmail.com  Thu Mar 31 21:09:43 2005
From: radeex at gmail.com (Christopher Armstrong)
Date: Fri, 1 Apr 2005 14:09:43 +1000
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
Message-ID: <60ed19d405033120093e2f8a39@mail.gmail.com>

Hi Twisted,

One of the key problems that trial solves is the traversal of Python
modules and files, which is duplicated in at least two places in
Twisted: Twisted Conch's SFTP, Twisted Core's FTP, and Twisted Web's
Resource model.

Creating a unified resource hierarchy in Twisted has long been a goal
of the Twisted team, and every attempt has been mostly a failure. At
the Australian Twisted Sprint, we've recently come to the realization
that trial effectively already does this! So today we're starting to
implement a new VFS system that unifies all of these systems into a
single twisted.vfs module. This will enable things such as more secure
remote file system access, a better internal design of Trial, and
remote access to your unit tests.

Some other things we plan to do:
 * 3d visualisation of any vfs implementation.
 * Run trial on any VFS implementation. Just have it serve Python code!
 * Any VFS-using protocol should be able to access your unit tests and
run them.
  Just hit http://localhost/twisted/trial/test and it'll recursively
run all the tests in twisted.trial.test.
 * Integration with Imagination.

We'll be making heavy use of Facets in these new features.

Keep your eyes peeled for code arriving in Twisted trunk in the next few days.

-- 
  Twisted   |  Christopher Armstrong: International Man of Twistery
   Radix    |    -- http://radix.twistedmatrix.com
            |  Release Manager, Twisted Project
  \\\V///   |    -- http://twistedmatrix.com
   |o O|    |  Founding Member, Hobart Hacking Society
w----v----w-+    -- http://hackingsociety.org/chapters/hash



From slyphon at twistedmatrix.com  Thu Mar 31 21:26:22 2005
From: slyphon at twistedmatrix.com (Jonathan Simms)
Date: Thu, 31 Mar 2005 23:26:22 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <60ed19d405033120093e2f8a39@mail.gmail.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
Message-ID: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Mar 31, 2005, at 11:09 PM, Christopher Armstrong wrote:

> Hi Twisted,
>
> One of the key problems that trial solves is the traversal of Python
> modules and files,

wow...i did that? :-)

> Creating a unified resource hierarchy in Twisted has long been a goal
> of the Twisted team, and every attempt has been mostly a failure. At
> the Australian Twisted Sprint, we've recently come to the realization
> that trial effectively already does this!

yay! i am genus!

>  So today we're starting to
> implement a new VFS system that unifies all of these systems into a
> single twisted.vfs module. This will enable things such as more secure
> remote file system access, a better internal design of Trial, and
> remote access to your unit tests.
>

I have to say that when i first read the subject of this message i 
thought, "WTF? I just got done writing 2.0! They want to replace it 
*already*?!"

It's a nice feeling to know you did something right. :-)

If you guys need help, or need me to translate something fairly stinky 
in there, please CC me on any t-ml message, as I don't read the list as 
much as I used to.

Best of luck!
- -Jonathan
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (Darwin)

iD8DBQFCTM1uFARZQEMGIlgRAhaWAJ4lrZuLOeHJn0pyBGp1RtKEjSxvHgCfbpvH
VISq4pbmbcl7ClCtqOAb90c=
=y2Wp
-----END PGP SIGNATURE-----




From golux at comcast.net  Thu Mar 31 21:33:14 2005
From: golux at comcast.net (Stephen Waterbury)
Date: Thu, 31 Mar 2005 23:33:14 -0500
Subject: [Twisted-Python] ANN: Twisted Trial v3.0 / Twisted VFS v0.1
In-Reply-To: <27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
References: <60ed19d405033120093e2f8a39@mail.gmail.com>
	<27bff3ce150892a004a1d9c687caec98@twistedmatrix.com>
Message-ID: <424CCF0A.70103@comcast.net>

Jonathan Simms wrote:
> yay! i am genus!

... well we always suspected you were at *least* a *species*!  ;)



