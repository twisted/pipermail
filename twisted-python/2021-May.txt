From contact at benoit-laviale.fr  Sat May  1 00:43:06 2021
From: contact at benoit-laviale.fr (contact at benoit-laviale.fr)
Date: Sat, 01 May 2021 08:43:06 +0200
Subject: [Twisted-Python] How to get the client ip when it ask a resolution
 with twisted.names
Message-ID: <521d-608cf880-9-168d6180@111460912>


Dear all,

I am working on twisted names since some days to make kind of filtering system (with domains blacklists).
So I made my own resolver that can reply defer.fail(error.DomainError()) to send the query to the next resolver (and in this case, it will be resolve) or defer.fail(dns.AuthoritativeDomainError(query.name.name)) to reply NXDOMAIN that can "block" the domain to the final client.    

That part is working well.

Next, i would like to "block" the resolution regarding the device (Mac address/IP/???).

I would like something like that :

if self.query.meta.client.ip == b"192.168.0.5" or self.query.meta.client.mac == "XX:YY:ZZ:....":
         self.do_something()

My use case is that device of Kelly, (Kelly is a teenager of 12 years) cant use youtube.com at all, but other devices are allowed to get the resolution.
How can I get the IP/Name/mac (an identifier) of the device that's querying my custom dns?
I read something about datagrams, but in my case i think i must get this information in my resolver...

Thx and cheers.

Benoît
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210501/49179482/attachment.htm>

From adi at roiban.ro  Sat May  1 02:58:45 2021
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 1 May 2021 09:58:45 +0100
Subject: [Twisted-Python] Does anyone know why trunk is failing CI on
 PyPy 7.3.4?
In-Reply-To: <f13cf27a-a649-4d93-a3fa-603473fdae17@www.fastmail.com>
References: <20210427071252.GA432778@kosmos.hhhh.org>
 <CAFycZ9dYFx4J736OMAyj1n8awNcsNDMCO9W0ce-9KrfgvHBASQ@mail.gmail.com>
 <CAFycZ9e-EzorcnbmZ7K1-gP3L0504gzQWVR0=U8ijs5M82xfmA@mail.gmail.com>
 <CAFycZ9dXp7F6LdKV5eR-MtKyX4CaY1JyNUKV_6vYjer5SLn9bg@mail.gmail.com>
 <f13cf27a-a649-4d93-a3fa-603473fdae17@www.fastmail.com>
Message-ID: <CAFycZ9dozxv+hve2f90=Qadziztkhq=O8+o=Jq4pBozcq4-qpw@mail.gmail.com>

On Thu, 29 Apr 2021 at 07:23, Glyph <glyph at twistedmatrix.com> wrote:

> It's merged.
>
>
Thanks for the merge.

I will try to help Twisted by keeping the trunk green.

If there is any other issue with the trunk branch getting red out of the
blue, ping me and I will try to help.

-------

We now have a fix for Twisted, but I think that this is a bug in PYPY 7.3.4

FYI I have reported this bug upstream.

https://foss.heptapod.net/pypy/pypy/-/issues/3451

Cheers


> On Wed, Apr 28, 2021, at 3:07 AM, Adi Roiban wrote:
>
> Hi
>
> PR at https://github.com/twisted/twisted/pull/1592
>
> I hope we can get a quick review and make the trunk green again :)
>
> Cheeers
>
> On Wed, 28 Apr 2021 at 10:30, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi,
>
> A quick diff to fix it... and a ticket
> https://twistedmatrix.com/trac/ticket/10187
>
> I will create a PR and we can refine the fix during the review.
>
>
> diff --git a/src/twisted/words/protocols/irc.py
> b/src/twisted/words/protocols/irc.py
> index 75300019b..a97abce2e 100644
> --- a/src/twisted/words/protocols/irc.py
> +++ b/src/twisted/words/protocols/irc.py
> @@ -3678,10 +3678,10 @@ def ctcpExtract(message):
>              normal_messages.append(messages.pop(0))
>          odd = not odd
>
> -    extended_messages[:] = filter(None, extended_messages)
> -    normal_messages[:] = filter(None, normal_messages)
> +    extended_messages[:] = list(filter(None, extended_messages))
> +    normal_messages[:] = list(filter(None, normal_messages))
>
> -    extended_messages[:] = map(ctcpDequote, extended_messages)
> +    extended_messages[:] = list(map(ctcpDequote, extended_messages))
>
>
> On Wed, 28 Apr 2021 at 10:01, Adi Roiban <adi at roiban.ro> wrote:
>
> Hi Wim,
>
> Thanks for the report
>
> On Tue, 27 Apr 2021 at 08:14, Wim Lewis <wiml at hhhh.org> wrote:
>
> TLDR: Twisted appears broken on PyPy 7.3.4 (aka "3.7.10")?
>
> I don't have time right now to set up a PyPy-capable environment and try
> to reproduce this, but perhaps someone does?
>
> Long version:
>
> Trunk has been broken since the last merge a week or so ago, but I
> don't think the breakage is due to that merge.  As an experiment I made
> a PR based off the last successful version of trunk, with a whitespace
> change, and it now fails CI as well. So I think the failure must be due
> to some change that isn't in Twisted or controlled-for by tox.
>
> The failure in all cases is in the pypy-3.7-alldeps-nocov-posix task.
> Unlike our usual CI problems it doesn't seem to be a random failure: it
> fails all the time in the same place. But the place doesn't make sense
> to me. It's in the IRC CTCP tests, and they fail in the same ways each
> time (an expected response is not received).
>
> The pair of CI runs closest to the change are these:
>
> run 5793: https://github.com/twisted/twisted/runs/2328450554
> run 5809: https://github.com/twisted/twisted/runs/2360415474
>
> There are a lot of differences, but sys.version went from 3.7.9 to
> 3.7.10 between those runs, so that seems like the most likely culprit.
>
> Last working:
> >  sys.version              : 3.7.9 (7e6e2bb30ac5, Nov 18 2020, 10:55:52)
> >  [PyPy 7.3.3-beta0 with GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]
> >  sys.prefix               : /opt/hostedtoolcache/PyPy/3.7.9/x64
> >  sys.exec_prefix          : /opt/hostedtoolcache/PyPy/3.7.9/x64
> >  sys.executable           :
> /opt/hostedtoolcache/PyPy/3.7.9/x64/bin/python
>
> First broken:
> >  sys.version              : 3.7.10 (51efa818fd9b, Apr 04 2021, 11:22:34)
> >  [PyPy 7.3.4 with GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]
> >  sys.prefix               : /opt/hostedtoolcache/PyPy/3.7.10/x64
> >  sys.exec_prefix          : /opt/hostedtoolcache/PyPy/3.7.10/x64
> >  sys.executable           :
> /opt/hostedtoolcache/PyPy/3.7.10/x64/bin/python
>
> PyPy's release notes for 7.3.4 don't list anything that jumps out at me:
>
> https://doc.pypy.org/en/latest/whatsnew-pypy3-7.3.4.html
>
> My guess would be some latent timing bug in Twisted that was uncovered
> by pypy execution time changes (I don't imagine that the CTCP code gets
> exercised very heavily these days) or perhaps PyPy got a bug.
>
>
> Wim.
>
>
> I have setup a pyp3.7.4 and I can reproduce it.
>
> I see 3 options:
>
> * Option A: Skip those tests on pypy  and open a separate ticket to fix
> the test
> * Option B: Pin pypy 3.7.9 for GHA and open a separate ticket to fix the
> test and unpin it
> * Option C: Just fix the tests :)
>
> I am looking at option C for one hour... if I can't find a fix will look
> into option A.
>
> Cheers
>
> --
> Adi Roiban
>
>
>
> --
> Adi Roiban
>
>
>
> --
> Adi Roiban
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> https://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210501/82ed18fc/attachment.htm>

From adi at roiban.ro  Sat May  1 03:18:08 2021
From: adi at roiban.ro (Adi Roiban)
Date: Sat, 1 May 2021 10:18:08 +0100
Subject: [Twisted-Python] How to get the client ip when it ask a
 resolution with twisted.names
In-Reply-To: <521d-608cf880-9-168d6180@111460912>
References: <521d-608cf880-9-168d6180@111460912>
Message-ID: <CAFycZ9d=TCnDjuxiE=LXpGjquMXxJv=DDW7rMvbk+pgK7vuqPg@mail.gmail.com>

Hi

On Sat, 1 May 2021 at 07:43, contact at benoit-laviale.fr <
contact at benoit-laviale.fr> wrote:

> Dear all,
>
> I am working on twisted names since some days to make kind of filtering
> system (with domains blacklists).
> So I made my own resolver that can reply defer.fail(error.DomainError())
> to send the query to the next resolver (and in this case, it will be
> resolve) or defer.fail(dns.AuthoritativeDomainError(query.name.name)) to
> reply NXDOMAIN that can "block" the domain to the final client.
>
> That part is working well.
>
> Next, i would like to "block" the resolution regarding the device (Mac
> address/IP/???).
>
> I would like something like that :
>
> if self.query.meta.client.ip == b"192.168.0.5" or
> self.query.meta.client.mac == "XX:YY:ZZ:....":
>          self.do_something()
>
> My use case is that device of Kelly, (Kelly is a teenager of 12 years)
> cant use youtube.com at all, but other devices are allowed to get the
> resolution.
> How can I get the IP/Name/mac (an identifier) of the device that's
> querying my custom dns?
> I read something about datagrams, but in my case i think i must get this
> information in my resolver...
>
> Thx and cheers.
>

I think you are using DNS over UDP... so to understand how UDP works with
Twisted you can check this page
https://twistedmatrix.com/documents/current/core/howto/udp.html

 I have never used Twisted names so I am just trying to help based on my
general knowledge of Twisted design
... but I think the entry point is here

https://github.com/twisted/twisted/blob/63649469c1fe46d8a713e8034239ac3cc0498ea7/src/twisted/names/dns.py#L3242

then it goes to here

https://github.com/twisted/twisted/blob/63649469c1fe46d8a713e8034239ac3cc0498ea7/src/twisted/names/server.py#L538

and then in handleQuery where I see that the  query is done without the
`address`...but the address is available again in
`gotResolverResponse`.. so maybe that help

-------

Hope it helps

Cheers

-- 
Adi Roiban
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210501/8fc7b573/attachment-0001.htm>

From trac at twistedmatrix.com  Sun May  2 00:05:15 2021
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 02 May 2021 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1619935515.37.2485085652600742367@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210502/b611caff/attachment.htm>

From contact at benoit-laviale.fr  Sun May  2 00:56:46 2021
From: contact at benoit-laviale.fr (contact at benoit-laviale.fr)
Date: Sun, 02 May 2021 08:56:46 +0200
Subject: [Twisted-Python] 
 =?utf-8?q?How_to_get_the_client_ip_when_it_ask_?=
 =?utf-8?q?a_resolution_with_twisted=2Enames?=
In-Reply-To: <CAFycZ9d=TCnDjuxiE=LXpGjquMXxJv=DDW7rMvbk+pgK7vuqPg@mail.gmail.com>
Message-ID: <7029-608e4d00-a5-79ec3680@231407499>


Hi Adi, all,
First, thx for your reply.
I think your solution may not be the good one, but for sure, you put me on the good track, so thx a lot.

What I currently did :
I did an inheritance of DNSServerFactory to be able to add the "address" propertie on my query object.
It looks like that :

class DNSServerFactory2(server.DNSServerFactory):

   def handleQuery(self, message, protocol, address):
        query = message.queries[0]
        query.address = address
        message.queries[0] = query
        from pprint import pprint
        pprint(vars(message.queries[0]))
        return super().handleQuery(message, protocol, address) # @  this point the resolver is called in the DNSServerFactory.

In the log i have that :
2021-05-02 08:47:58+0200 [-] {'address': ('127.0.0.1', 60750),
2021-05-02 08:47:58+0200 [-]  'cls': 1,
2021-05-02 08:47:58+0200 [-]  'name': <twisted.names.dns.Name object at 0x13c8e38b0>,
2021-05-02 08:47:58+0200 [-]  'type': 1}
So the propertie looks added...

But after that, I am going to the resolver and at that moment, the address propertie is missing...?!

def query(self, query, timeout=None):
        from pprint import pprint
        pprint(vars(query))

in the logs :
2021-05-02 08:47:58+0200 [-] {'cls': 1, 'name': <twisted.names.dns.Name object at 0x13c8e3880>, 't
ype': 1}
So there is no anymore the address propertie that i have added just before...

What am i missing?

Thx

Benoît

Le Samedi, Mai 01, 2021 11:18 CEST, Adi Roiban <adi at roiban.ro> a écrit:
 Hi On Sat, 1 May 2021 at 07:43, contact at benoit-laviale.fr <contact at benoit-laviale.fr> wrote:Dear all,

I am working on twisted names since some days to make kind of filtering system (with domains blacklists).
So I made my own resolver that can reply defer.fail(error.DomainError()) to send the query to the next resolver (and in this case, it will be resolve) or defer.fail(dns.AuthoritativeDomainError(query.name.name)) to reply NXDOMAIN that can "block" the domain to the final client.    

That part is working well.

Next, i would like to "block" the resolution regarding the device (Mac address/IP/???).

I would like something like that :

if self.query.meta.client.ip == b"192.168.0.5" or self.query.meta.client.mac == "XX:YY:ZZ:....":
         self.do_something()

My use case is that device of Kelly, (Kelly is a teenager of 12 years) cant use youtube.com at all, but other devices are allowed to get the resolution.
How can I get the IP/Name/mac (an identifier) of the device that's querying my custom dns?
I read something about datagrams, but in my case i think i must get this information in my resolver...

Thx and cheers. I think you are using DNS over UDP... so to understand how UDP works with Twisted you can check this pagehttps://twistedmatrix.com/documents/current/core/howto/udp.html  I have never used Twisted names so I am just trying to help based on my general knowledge of Twisted design... but I think the entry point is here https://github.com/twisted/twisted/blob/63649469c1fe46d8a713e8034239ac3cc0498ea7/src/twisted/names/dns.py#L3242 then it goes to here https://github.com/twisted/twisted/blob/63649469c1fe46d8a713e8034239ac3cc0498ea7/src/twisted/names/server.py#L538 and then in handleQuery where I see that the  query is done without the `address`...but the address is available again in`gotResolverResponse`.. so maybe that help ------- Hope it helps Cheers --Adi Roiban


 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210502/6fd8610d/attachment.htm>

From wiml at hhhh.org  Sun May  2 12:28:26 2021
From: wiml at hhhh.org (Wim Lewis)
Date: Sun, 02 May 2021 11:28:26 -0700
Subject: [Twisted-Python] 
 =?iso-8859-1?q?Does_anyone_know_why_trunk_is_fa?=
 =?iso-8859-1?q?iling_CI_on_PyPy_7=2E3=2E4=3F?=
In-Reply-To: <CAFycZ9dozxv+hve2f90=Qadziztkhq=O8+o=Jq4pBozcq4-qpw@mail.gmail.com>
References: <20210427071252.GA432778@kosmos.hhhh.org>
 <CAFycZ9dYFx4J736OMAyj1n8awNcsNDMCO9W0ce-9KrfgvHBASQ@mail.gmail.com>
 <CAFycZ9e-EzorcnbmZ7K1-gP3L0504gzQWVR0=U8ijs5M82xfmA@mail.gmail.com>
 <CAFycZ9dXp7F6LdKV5eR-MtKyX4CaY1JyNUKV_6vYjer5SLn9bg@mail.gmail.com>
 <f13cf27a-a649-4d93-a3fa-603473fdae17@www.fastmail.com>
 <CAFycZ9dozxv+hve2f90=Qadziztkhq=O8+o=Jq4pBozcq4-qpw@mail.gmail.com>
Message-ID: <51011a64-ad37-423a-8284-0e8a02a70bbc@hhhh.org>

On Saturday, May 1, 2021 1:58:45 AM PDT, Adi Roiban wrote:

> We now have a fix for Twisted, but I think that this is a bug in PYPY 7.3.4
>
> FYI I have reported this bug upstream.
>
> https://foss.heptapod.net/pypy/pypy/-/issues/3451

Looks like we weren't the only project to run into this problem!

(I think what happens is that, although the right-hand-side is always 
evaluated before the list assignment starts, it's undefined whether the 
generator returned by the RHS is completely consumed before the list begins 
to be altered — so, even though pypy7.3.5 will be reverting to the old 
behavior, it's good that twisted no longer depends on it.)


Thanks for all your work keeping CI happy, Adi!



From trac at twistedmatrix.com  Sun May  9 00:05:15 2021
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 09 May 2021 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1620540315.0.5513129775837203396@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210509/fc8d52fd/attachment.htm>

From trac at twistedmatrix.com  Sun May 16 00:05:22 2021
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 16 May 2021 06:05:22 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1621145122.31.3493995112698323626@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210516/cd702344/attachment.htm>

From trac at twistedmatrix.com  Sun May 23 00:05:16 2021
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 23 May 2021 06:05:16 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1621749916.02.7125863596824636328@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210523/f913cc07/attachment.htm>

From trac at twistedmatrix.com  Sun May 30 00:05:15 2021
From: trac at twistedmatrix.com (trac at twistedmatrix.com)
Date: Sun, 30 May 2021 06:05:15 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1622354715.82.4523313814417646926@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20210530/fe6720f3/attachment.htm>

