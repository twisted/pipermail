From wlad.karyagin at mail.ru  Wed Jan  2 06:38:37 2008
From: wlad.karyagin at mail.ru (W K)
Date: Wed, 02 Jan 2008 14:38:37 +0300
Subject: [Twisted-Python] Different behavior under Windos and Linux
Message-ID: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>

Hello all, 

i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?

Thanks 



From wlad.karyagin at mail.ru  Wed Jan  2 07:18:51 2008
From: wlad.karyagin at mail.ru (W K)
Date: Wed, 02 Jan 2008 15:18:51 +0300
Subject: =?koi8-r?Q?Fw=3A_[Twisted-Python]_Different_behavior_under_Windows_and_Linux?=
Message-ID: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>



-----Original Message-----
From: W K <wlad.karyagin at mail.ru>
To: twisted-python at twistedmatrix.com
Date: Wed, 02 Jan 2008 14:38:37 +0300
Subject: [Twisted-Python] Different behavior under Windos and Linux

> Hello all, 
> 
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?
> 
> Thanks 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Here is the sample code

from twisted.internet.protocol import Protocol, Factory, ClientFactory
from twisted.protocols import basic
from twisted.internet import reactor, protocol
import logging
from threading import Event
import sys
import time
import thread

class LineConnector (basic.LineReceiver):
    
    def __init__(self, session):
        self.session = session

    def connectionMade(self):
        self.session.cnd.set()

    def sendMessage(self, line):
        logging.debug("Sending line " + line)
        self.sendLine(line)

    
    def lineReceived(self, line):
     	logging.debug("Received line " + line)
		
  
class ServerConnector (basic.LineReceiver):
    
    def __init__(self, session):
        self.session = session

    def connectionMade(self):
        pass

    def sendMessage(self, line):
        logging.debug("Sending line " + line)
        self.sendLine(line)

    
    def lineReceived(self, line):
     	logging.debug("Received line " + line)
################################################################################

class SimpleClient(ClientFactory):
    
    def __init__(self, host, port):
        
        self.port = port
        self.host = host
        
        self.connector = None
        self.cnd = Event()
		
        thread.start_new_thread(self.send, ())
        reactor.connectTCP(self.host, self.port, self)

            
  
		
		
    def send(self):
       while 1:
          self.cnd.wait()
          self.connector.sendMessage("TEST LINE")
          time.sleep(1)


    def buildProtocol(self, addr):
        logging.debug('ManagerOutput: Connected')
        
        self.connector = LineConnector(self)
        
        return self.connector

    def startedConnecting(self, connector):
        print 'Output: Started to connect.'
    
    def clientConnectionLost(self, connector, reason):
        print 'Output: Lost connection.'# Reason:', reason
     
        

    def clientConnectionFailed(self, connector, reason):
        logging.debug(self.name + ' output: Connection failed.')# Reason:', reason
        
################################################################################

class SimpleServer(protocol.ServerFactory):

    def __init__(self, port):
        self.port = port
        self.connector = None
        reactor.listenTCP(self.port, self)

    def buildProtocol(self, addr):
        logging.debug('Manager Connected')
        self.connector = ServerConnector(self)
        return self.connector
	
    def startedConnecting(self, connector):
        logging.debug('Started to connect')


    def clientConnectionLost(self, connector, reason):
        logging.debug('Lost connection. Reason:', reason)


    def clientConnectionFailed(self, connector, reason):
        logging.debug('Connection failed. Reason:', reason)


if __name__ == "__main__":
    
    logging.getLogger().setLevel(logging.DEBUG)
    logging.basicConfig(format='%(asctime)s %(levelname)8s %(message)s')#, filename='/tmp/logfile.txt', filemode='w')

    numargs = len(sys.argv) - 1

    if numargs == 1:
        print "Server started"
        manager = SimpleServer(31000)
    else:
        print "Client Started"
        mp = SimpleClient("127.0.0.1", 31000)
        
    
    reactor.run()




From radix at twistedmatrix.com  Wed Jan  2 08:55:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 2 Jan 2008 08:55:27 -0500
Subject: [Twisted-Python] Different behavior under Windos and Linux
In-Reply-To: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
References: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
Message-ID: <60ed19d40801020555y74b121beu4926056304e99c09@mail.gmail.com>

On Jan 2, 2008 6:38 AM, W K <wlad.karyagin at mail.ru> wrote:
> Hello all,
>
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?

Does your application use threads? Does it call any Twisted APIs from
those threads? Specifically, does it send data from those threads?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From itamar at itamarst.org  Wed Jan  2 09:06:54 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jan 2008 09:06:54 -0500
Subject: Fw: [Twisted-Python] Different behavior under Windows and Linux
In-Reply-To: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>
References: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>
Message-ID: <1199282814.7666.17.camel@localhost.localdomain>


On Wed, 2008-01-02 at 15:18 +0300, W K wrote:
> 		
>         thread.start_new_thread(self.send, ())
>         reactor.connectTCP(self.host, self.port, self)

You can't call Twisted APIs from threads. This will fail in a variety of
fun ways, as you can see.

Either use reactor.callFromThread(self.connector.sendMessage, data), or
use deferToThread to run your non-Twisted computation in a thread and
then addCallback your Twisted calls. Or, best of all, don't use threads
at all: they're almost always unnecessary when using Twisted. You
probably want to use twisted.internet.task.LoopingCall to do what you're
currently doing.




From radix at twistedmatrix.com  Wed Jan  2 09:22:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 2 Jan 2008 09:22:02 -0500
Subject: [Twisted-Python] Different behavior under Windos and Linux
In-Reply-To: <E1JA4Br-0004JN-00.wlad-karyagin-mail-ru@f79.mail.ru>
References: <60ed19d40801020555y74b121beu4926056304e99c09@mail.gmail.com>
	<E1JA4Br-0004JN-00.wlad-karyagin-mail-ru@f79.mail.ru>
Message-ID: <60ed19d40801020622o2513f29bs7d2ab945791b1f84@mail.gmail.com>

On Jan 2, 2008 9:03 AM, W K <wlad.karyagin at mail.ru> wrote:
> Hello
> Well, yes, i do send data from threads, as you can see from the example below:

Twisted in general is not thread safe. If you want to call a Twisted
method from a non-reactor thread, you should use
reactor.callFromThread, which will cause a function to be called in
the reactor's thread.

This is probably the source of your problem.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From steve at holdenweb.com  Wed Jan  2 07:27:46 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 02 Jan 2008 07:27:46 -0500
Subject: [Twisted-Python] Re: Different behavior under Windos and Linux
In-Reply-To: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
References: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
Message-ID: <flfvvn$51s$1@ger.gmane.org>

W K wrote:
> Hello all, 
> 
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?
> 
> Thanks 

Without even reading the code or advising you to look at the net with 
Wireshark I will offer the observation that the kind of delay you 
mention is frequently caused by failed DNS lookups, most often reverse ones.

Absence of an IDENT protocol response can also cause similar hangs: is 
the Kubuntu system looking for client identification?

If it really is Twisted then you'll have to rely on people who know 
something about it :-). I am hoping they will "Teach Me Twisted" (tm) at 
PyCon this year.

Happy New Year to the Twisted community.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From jarrod at vertigrated.com  Wed Jan  2 11:01:18 2008
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 2 Jan 2008 11:01:18 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <fa3d0c740801020801r3b72d8c0x9bd05bcdbba81e71@mail.gmail.com>

On 12/26/07, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>
> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has
> to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda


we just used the Apple Rendezous code, it has a python wrapper around its C
code.
it is available for free from Apple's developer website.
We had it in production for 2 years without a single hicup or restart.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080102/565e782d/attachment.htm 

From itamar at itamarst.org  Wed Jan  2 11:32:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jan 2008 11:32:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22254 - Pass the method in
	init, rename it.
In-Reply-To: <E1JA5RS-0001z4-00@wolfwood.twistedmatrix.com>
References: <E1JA5RS-0001z4-00@wolfwood.twistedmatrix.com>
Message-ID: <1199291578.7666.19.camel@localhost.localdomain>


On Wed, 2008-01-02 at 08:23 -0700, Thomas Herve wrote:
> +    return filepath.FilePath("/home").child(avatarId)

Maybe make /home configurable? Occasionally people will mount home
folders elsewhere.




From tom.cocagne at gmail.com  Wed Jan  2 22:48:57 2008
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Wed, 2 Jan 2008 22:48:57 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <198edda90801021948n3b0fd43bwace9d37bb3c21d75@mail.gmail.com>

    I've recently run into this issue as well Jarek. The easiest solution I
found was to just launch a background 'avahi-publish' subprocess with the
appropriate arguments. Send it a friendly kill signal when you wish to stop
publishing and that's the end of it. It's a linux-specific solution, of
course, but it's dirt simple and avoids the problem of multiple-mdns stacks
on a single machine. If you'd like to support other platforms and/or
non-avahi mdns stacks, it should be fairly straight-forward to write a small
C/Python application for each that does the effectively the same thing.

    Likewise, for browsing services, I've decided to go the route of using
'avahi-browse' to extract the information for me rather than try and
re-implement it directly in Python. Python is so damn friendly, I often
forget that good ol' shell commands can often be the best tool for the job
;-)

    Cheers,

    Tom

On Dec 26, 2007 7:31 AM, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:

> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has
> to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080102/78969502/attachment.htm 

From nitro at dr-code.org  Thu Jan  3 21:42:10 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 04 Jan 2008 03:42:10 +0100
Subject: [Twisted-Python] Performance and select.select
Message-ID: <op.t4dwgkioz3pzfc@nitrogenycs2>

Hello,

I profiled my application with cProfiler. Below is an excerpt from the  
resulting report:

Fri Jan 04 01:07:39 2008    profiling_data_cProfile

          15123197 function calls (14579262 primitive calls) in 228.517 CPU  
seconds

    Ordered by: internal time
    List reduced from 2933 to 50 due to restriction <50>

    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    138305  135.419    0.001  135.817    0.001 {select.select}
     26168   13.159    0.001   14.044    0.001  
Sources\Server\Plugins\RKSimulation.py:218(UpdatePhysics)

As you can see select.select takes up ~136 of ~229 seconds. This is the  
most expensive function. The row below shows the next expensive function  
which is one of my own. Now I am wondering whether

a) the select calls are really taking up that much time (more than 50%!)
b) if they are taking up that much time I'd like to find out how to reduce  
their execution time (either by minimizing the number it gets called or  
the time it takes to execute etc)

My application doesn't invoke select.select itself so it is most likely  
called within twisted. I am on Windows and using the default reactor  
("from twisted.internet import reactor").

-Matthias



From itamar at itamarst.org  Thu Jan  3 22:18:51 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 03 Jan 2008 22:18:51 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <1199416731.7666.42.camel@localhost.localdomain>


> a) the select calls are really taking up that much time (more than 50%!)

They're certainly going to take up lots and lots of *clock* time, not
necessarily CPU time: select() is the way Twisted (in default reactors)
waits for events to happen. So if your program does nothing at all (e.g.
just reactor.run(), select() will actually be close to 100% of clock
time, even though CPU usage will be minuscule.

If you have many TCP connections (or really, file descriptors), hundreds
or thousands, select() will also start taking up CPU time. Using poll
reactor, or in next version of Twisted (2.5 had some bugs) epoll reactor
on Linux will use less CPU for this scenario.




From exarkun at divmod.com  Thu Jan  3 22:19:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 3 Jan 2008 22:19:40 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>

On Fri, 04 Jan 2008 03:42:10 +0100, Nitro <nitro at dr-code.org> wrote:
>Hello,
>
>I profiled my application with cProfiler. Below is an excerpt from the 
>resulting report:
>
>Fri Jan 04 01:07:39 2008    profiling_data_cProfile
>
>          15123197 function calls (14579262 primitive calls) in 228.517 CPU 
>seconds
>
>    Ordered by: internal time
>    List reduced from 2933 to 50 due to restriction <50>
>
>    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
>    138305  135.419    0.001  135.817    0.001 {select.select}
>     26168   13.159    0.001   14.044    0.001 
>Sources\Server\Plugins\RKSimulation.py:218(UpdatePhysics)
>
>As you can see select.select takes up ~136 of ~229 seconds. This is the 
>most expensive function. The row below shows the next expensive function 
>which is one of my own. Now I am wondering whether
>
>a) the select calls are really taking up that much time (more than 50%!)
>b) if they are taking up that much time I'd like to find out how to reduce 
>their execution time (either by minimizing the number it gets called or  the 
>time it takes to execute etc)
>
>My application doesn't invoke select.select itself so it is most likely 
>called within twisted. I am on Windows and using the default reactor  ("from 
>twisted.internet import reactor").

Twisted does use select by default on Windows.  One thing you might try is
one of the other reactors available on Windows; there are two,
win32eventreactor and iocpreactor.  You can read about how to do this here:

http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html

Depending on what your application does, iocpreactor may not be complete
enough to actually run your code.  It lacks some features provided by the
default reactor.

Whether either of these reactors will actually improve the performance of
your application, I don't know.  You pointed out that a lot of time is
spent in select, but this doesn't mean that spending less time inside the
event notification function will make your overall application faster.

Also, you are right to be suspicious of these profile results.  Python has
a very spotty history when it comes to profilers.  They are often inaccurate
or completely wrong.  cProfile is supposed to be better than the previous
attempts, but I haven't personally used it extensively enough (nor at all on
Windows) to say whether this is true.

Some things to consider are:

  * How many simultaneous connections does your application have?  select
    usually scales linearly with this number.  I'm not sure exactly what it
    does on Windows, though.

  * How often do connections have events?  Is data passing through them
    constantly or are they mostly idle?  More events means more trips into
    select, which incurs setup costs more.  Fewer events means select should
    be spending more of its time idling, waiting for events.

  * How often do timed events go off?  These also cause more trips into
    select, since each one causes select to return when it is time to run.
    Do you use reactor.callLater() with a 0 timeout a lot?

Hope this helps,

Jean-Paul



From itamar at itamarst.org  Thu Jan  3 22:20:12 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 03 Jan 2008 22:20:12 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <1199416812.7666.45.camel@localhost.localdomain>


On Fri, 2008-01-04 at 03:42 +0100, Nitro wrote:

> My application doesn't invoke select.select itself so it is most likely  
> called within twisted. I am on Windows and using the default reactor  
> ("from twisted.internet import reactor").

Ah. In general:

1. Linux is better ;)

2. On Windows IOCP is much better than select() in terms of scalability
(i.e. low CPU usage with many connections), but IOCP reactor isn't
finished and thus has some limitations in functionality and potentially
some bugs.




From stanc at al.com.au  Fri Jan  4 00:24:54 2008
From: stanc at al.com.au (Astan Chee)
Date: Fri, 04 Jan 2008 16:24:54 +1100
Subject: [Twisted-Python] jabber/gtalk/msn with twisted using http proxy
	with authentication
Message-ID: <477DC326.1070506@al.com.au>

Hi,
I was looking around for modules that support jabber like 
twister.words.protocols.jabber but the problem is that I can only 
connect via http proxy at a certain port (8080) with authentication. I 
was wondering if twisted supports this? I am firstly trying to connect 
to MSN's server via specifications from here:
http://www.hypothetic.org/docs/msn/general/http_connections.php and 
before I start messing with twisted, I was wondering if twisted already 
does this or can do it by changing certain settings; otherwise I'll have 
to make my own from scratch. Next im trying to connect to google's talk 
server (talk.google.com) which is abit different but still requires 
authentication from the http proxy server and Im not sure what to change 
in twisted so that it allows http proxy with authentication.
Thanks for any help.
Cheers
Astan



From exarkun at twistedmatrix.com  Sun Jan  6 00:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Jan 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1199595906.44.2133668578@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080106/28165536/attachment.htm 

From ottavio at campana.vi.it  Mon Jan  7 13:48:58 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 19:48:58 +0100
Subject: [Twisted-Python] ldaptor and bind
Message-ID: <4782741A.4080309@campana.vi.it>

Hello everybody,

I'm developing an application based on ldaptor and I need some help.

My scenario is a public address book, let's say 
ou=Addressbook,dc=domain,dc=com and some private address books, suppose 
ou=John,ou=Addressbook,dc=domain,dc=com , 
ou=Peter,ou=Addressbook,dc=domain,dc=com and so on.

So, I need to specify that ou=John,ou=Addressbook,dc=domain,dc=com can 
be accessed by cn=John,dc=domain,dc=com , so that by binding with a user 
I can look both in the public address book and in the private one.

Do you have some examples or documentation explaining that?

By now I'm stuck while trying to bind to do non-anonymous requests, but 
whatever I do I always get invalid credentials. Which objectClass do I 
need to be able to bind?

Thanks,

Ottavio

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From drew.smathers at gmail.com  Mon Jan  7 15:56:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 7 Jan 2008 15:56:52 -0500
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782741A.4080309@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
Message-ID: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>

Can you post a stripped down example demonstrating what you're trying to do,
and indicate where in the code you're encountering failures (invalid
credentials)?

On Jan 7, 2008 1:48 PM, Ottavio Campana <ottavio at campana.vi.it> wrote:

> Hello everybody,
>
> I'm developing an application based on ldaptor and I need some help.
>
> My scenario is a public address book, let's say
> ou=Addressbook,dc=domain,dc=com and some private address books, suppose
> ou=John,ou=Addressbook,dc=domain,dc=com ,
> ou=Peter,ou=Addressbook,dc=domain,dc=com and so on.
>
> So, I need to specify that ou=John,ou=Addressbook,dc=domain,dc=com can
> be accessed by cn=John,dc=domain,dc=com , so that by binding with a user
> I can look both in the public address book and in the private one.
>
> Do you have some examples or documentation explaining that?
>
> By now I'm stuck while trying to bind to do non-anonymous requests, but
> whatever I do I always get invalid credentials. Which objectClass do I
> need to be able to bind?
>
> Thanks,
>
> Ottavio
>
> --
> Non c'e' piu' forza nella normalita', c'e' solo monotonia.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080107/f6233ce2/attachment.htm 

From ottavio at campana.vi.it  Mon Jan  7 16:28:34 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 22:28:34 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
Message-ID: <47829982.8070807@campana.vi.it>

Drew Smathers ha scritto:
> Can you post a stripped down example demonstrating what you're trying to 
> do, and indicate where in the code you're encountering failures (invalid 
> credentials)?
> 

sure, I have set up a server with twisted, so my .tac file has

def getLdapService ():
   db = ldiftree.LDIFTreeEntry ('/dev/shm/ldap/')
   class LDAPServerFactory (protocol.ServerFactory):
     protocol = ldapserver.LDAPServer

     def __init__ (self, root):
       self.root = root

   ldapserver.LDAPServer.debug= True

   components.registerAdapter (lambda x: x.root,
                               LDAPServerFactory,
                               interfaces.IConnectedLDAPEntry)

   factory = LDAPServerFactory (db)
   return internet.TCPServer (10389, factory)
...
ldapservice = getLdapService ()
ldapservice.setServiceParent (application)

after that, I have populated /dev/shm/ldap and it works for anonymous 
requests.

If I run ldapsearch I get

bott at laplace:~$ ldapsearch -x -p 10389 -h localhost -b dc=domain,dc=com 
-w pippo -D cn=ottavio,dc=domain,dc=com
ldap_bind: Invalid credentials (49)

and in logs I have

2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] 
/usr/lib/python2.4/site-packages/ldaptor/protocols/ldap/ldapserver.py:114: 
exceptions.DeprecationWarning: Use log.msg(..., debug=True), not 
log.debug().
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] S<-C LDAPMessage(id=1L, 
value=LDAPBindRequest(version=3, dn='cn=ottavio,dc=domain,dc=com', 
auth='pippo'))
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] 
/usr/lib/python2.4/site-packages/ldaptor/protocols/ldap/ldapserver.py:67: 
exceptions.DeprecationWarning: Use log.msg(..., debug=True), not 
log.debug().
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] S->C LDAPMessage(id=1L, 
value=LDAPBindResponse(resultCode=49))

I tried several objectclasses combinations for the file 
/dev/shm/ldap/dc=com.dir/dc=domain.dir/cn=ottavio.ldif but it never 
worked. Thus I suspect that this file is the problem. Do you have a 
working example?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 16:50:25 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Mon, 7 Jan 2008 23:50:25 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <47829982.8070807@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
Message-ID: <20080107215025.GO13597@eagain.net>

On Mon, Jan 07, 2008 at 10:28:34PM +0100, Ottavio Campana wrote:
>   class LDAPServerFactory (protocol.ServerFactory):

Oh, using ldaptor as a server with authentication is a bit pointless,
as it has no access control whatsoever. Unless you are going to
implement that yourself. The server part is not intended for
production use, as is.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 17:05:10 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 23:05:10 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107215025.GO13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
Message-ID: <4782A216.8040702@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 10:28:34PM +0100, Ottavio Campana wrote:
>>   class LDAPServerFactory (protocol.ServerFactory):
> 
> Oh, using ldaptor as a server with authentication is a bit pointless,
> as it has no access control whatsoever. Unless you are going to
> implement that yourself. The server part is not intended for
> production use, as is.

mmm...

so, to summarize:

1) does it support bind? I think so, even though I'm not able to make it 
work by now.

2) it doesn't support access control, but for what I've seen class 
LDAPServer has a handle_LDAPSearchRequest method. I think I have to 
modify its behavior, especially when it calls root.lookup(dn). Do think 
that subclassing LDAPServer might be a good way of doing it?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 17:23:16 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 00:23:16 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782A216.8040702@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
Message-ID: <20080107222316.GQ13597@eagain.net>

On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
> 1) does it support bind? I think so, even though I'm not able to make it 
> work by now.

The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
says it does.

> 2) it doesn't support access control, but for what I've seen class 
> LDAPServer has a handle_LDAPSearchRequest method. I think I have to modify 
> its behavior, especially when it calls root.lookup(dn). Do think that 
> subclassing LDAPServer might be a good way of doing it?

Yup, but don't think that's the only thing you'd need to change.
Really, if you don't know LDAP already you probably will not be
able to make it secure.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 17:52:52 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 23:52:52 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107222316.GQ13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
Message-ID: <4782AD44.7010601@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
>> 1) does it support bind? I think so, even though I'm not able to make it 
>> work by now.
> 
> The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
> says it does.

I'll give a look at it

>> 2) it doesn't support access control, but for what I've seen class 
>> LDAPServer has a handle_LDAPSearchRequest method. I think I have to modify 
>> its behavior, especially when it calls root.lookup(dn). Do think that 
>> subclassing LDAPServer might be a good way of doing it?
> 
> Yup, but don't think that's the only thing you'd need to change.
> Really, if you don't know LDAP already you probably will not be
> able to make it secure.

Yes, I agree with you, it's everything but easy. I'm thinking about 
other solutions because I don't need full acl as in openldap.

Since each inetOrgPerson class has the userPassword field, I could add 
it to each element of the address book and I can check it in 
LDAPServer._cbSearchGotBase by modifying the filter object and adding a 
check to match the password in the inetOrgPerson classes with the 
password that the user gave to bind to the server.

In this case I just need to know

1) how do I get the username and password used to bind in function
def _cbSearchGotBase(self, base, dn, request, reply):
? with request.dn and request.auth?

2) how do I modify request.filter? can I just append text?

In this case, after having biding working I would be done. It's not full 
acl support, but it would be enough.

What do you think about it?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 18:02:31 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 01:02:31 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782AD44.7010601@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
Message-ID: <20080107230231.GR13597@eagain.net>

On Mon, Jan 07, 2008 at 11:52:52PM +0100, Ottavio Campana wrote:
> 1) how do I get the username and password used to bind in function
> def _cbSearchGotBase(self, base, dn, request, reply):
> ? with request.dn and request.auth?

LDAPServer's self.boundUser. And the password isn't stored any
longer than is required to process the LDAPBindRequest.

> 2) how do I modify request.filter? can I just append text?

It's an LDAPFilter instance. No, it's not a string.

> In this case, after having biding working I would be done. It's not full 
> acl support, but it would be enough.

Umm, if you didn't even realize you need to protect against
modification, do you really think you can manage to implement
it securely?

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 18:34:29 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 00:34:29 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107230231.GR13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
Message-ID: <4782B705.2010107@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:52:52PM +0100, Ottavio Campana wrote:
>> 1) how do I get the username and password used to bind in function
>> def _cbSearchGotBase(self, base, dn, request, reply):
>> ? with request.dn and request.auth?
> 
> LDAPServer's self.boundUser. And the password isn't stored any
> longer than is required to process the LDAPBindRequest.
> 
>> 2) how do I modify request.filter? can I just append text?
> 
> It's an LDAPFilter instance. No, it's not a string.
> 
>> In this case, after having biding working I would be done. It's not full 
>> acl support, but it would be enough.
> 
> Umm, if you didn't even realize you need to protect against
> modification, do you really think you can manage to implement
> it securely?

well, considering that data provided through ldap is for readonly use, 
that ldap exports information saved in a database which is protected, 
that clients access the ldap server only read only and the network is 
not hostile, I think it could be acceptable.

I can't run openldap on that hardware and I need a way to separate 
public and private address books and I need to be able to look in both 
address books with only one search, so they have to be nested.

I know acls would do the job, I know the solution is not perfect, but do 
you have any other idea?

PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest 
by always rising ldaperrors.LDAPUnwillingToPerform. The same for all 
other add/delete/modify request...

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From p.mayers at imperial.ac.uk  Mon Jan  7 18:44:10 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 07 Jan 2008 23:44:10 +0000
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B705.2010107@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
Message-ID: <4782B94A.3070102@imperial.ac.uk>

> 
> I can't run openldap on that hardware and I need a way to separate 

I would be surprised if that were true. Why can't you run openldap?



From tv at eagain.net  Mon Jan  7 18:54:48 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 01:54:48 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B705.2010107@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
Message-ID: <20080107235448.GB29129@eagain.net>

On Tue, Jan 08, 2008 at 12:34:29AM +0100, Ottavio Campana wrote:
>> Umm, if you didn't even realize you need to protect against
>> modification, do you really think you can manage to implement
>> it securely?
> well, considering that data provided through ldap is for readonly use, that 
> ldap exports information saved in a database which is protected, that 
> clients access the ldap server only read only and the network is not 
> hostile, I think it could be acceptable.

Yes but unless you do something to prevent writes anonymous can
overwrite anyones password. That sort of makes any read restrictions
pointless, doesn't it?

> PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest by 
> always rising ldaperrors.LDAPUnwillingToPerform. The same for all other 
> add/delete/modify request...

Ah, good. You realize they are there ;) That was my point, earlier you
spoke only of filtering search requests. To implement ACLs, you need
way more than that.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 19:02:27 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 01:02:27 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B94A.3070102@imperial.ac.uk>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>	<4782B705.2010107@campana.vi.it>
	<4782B94A.3070102@imperial.ac.uk>
Message-ID: <4782BD93.3050403@campana.vi.it>

Phil Mayers ha scritto:
>>
>> I can't run openldap on that hardware and I need a way to separate 
> 
> I would be surprised if that were true. Why can't you run openldap?

* strict hardware resources. By adopting twisted I was able to remove 
apache,php and I hope to be able to remove also openldap.

* the fact that in case of power failure openldap database gets too 
often corrupted. I repeat, in this case I have all the informations in a 
db whose backups are regular, so I just need an ldap server to let the 
clients access the information in read only.

* it doesn't integrate as well as ldaptor with the rest of the software 
I am developing.

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From ottavio at campana.vi.it  Mon Jan  7 19:06:31 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 01:06:31 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107235448.GB29129@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>	<4782B705.2010107@campana.vi.it>
	<20080107235448.GB29129@eagain.net>
Message-ID: <4782BE87.9020206@campana.vi.it>

Tommi Virtanen ha scritto:
>> PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest by 
>> always rising ldaperrors.LDAPUnwillingToPerform. The same for all other 
>> add/delete/modify request...
> 
> Ah, good. You realize they are there ;) That was my point, earlier you
> spoke only of filtering search requests. To implement ACLs, you need
> way more than that.

thanks for making me realize that. :-)

I just need to understand how I can modify an LDAPFilter instance and 
I'll be done. You said it is not a string, so is there a way to easily 
change it? Otherwise, where is the filter converted from string to 
LDAPFilter?

It's not acls, but I'll get the same effect for my application.

Bye

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 19:16:57 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 02:16:57 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782BE87.9020206@campana.vi.it>
References: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
	<20080107235448.GB29129@eagain.net>
	<4782BE87.9020206@campana.vi.it>
Message-ID: <20080108001657.GC29129@eagain.net>

On Tue, Jan 08, 2008 at 01:06:31AM +0100, Ottavio Campana wrote:
> I just need to understand how I can modify an LDAPFilter instance and I'll 
> be done. You said it is not a string, so is there a way to easily change 
> it? Otherwise, where is the filter converted from string to LDAPFilter?

Filters don't travel on the wire as strings at all. It's a structured
data type. Look around in pureldap.py, LDAPFilter_and etc. Ldaptor
also includes a brief introduction to LDAP, including the filters;
look in doc, or see http://eagain.net/temp/ldap-intro/

It sounds like you might be more intersted in request.attributes than
the filter, though.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Tue Jan  8 03:16:40 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 09:16:40 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107222316.GQ13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
Message-ID: <47833168.7030605@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
>> 1) does it support bind? I think so, even though I'm not able to make it 
>> work by now.
> 
> The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
> says it does.

ok, I made bind work.


-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From steven_zhou at ctl.creative.com  Tue Jan  8 09:50:54 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Tue, 8 Jan 2008 22:50:54 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
Message-ID: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>


Hi,

I hope some one could offer me some help on this. I am quite new to both
python and twisted.

The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
twisted-2.2. However, I wished to use epollreactor as the default
selectreactor only supports 1024 file descriptors. So I copied the relevant
files of epollreactor which is installed on twisted-2.5 to the
site-packages/twisted-2.2 directory. I copied 5 files in the total,
epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
exact file names. I copied it with a hope that it works. I am not sure
whether I am doing thing stupid here. correct me if I am.

The thing is, after I changed the reactor.py to import epollreactor,
pyicq-0.6-t seems to be using epollreactor but it still can only supports
1024 open sockets. I thought the problem is only in selectreactor? I
figured this out by doing a netstat -a -n on linux and found that
pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
that would mean only around 1000 connections can be made.

Although strange, but I do have a reason to use pyicq-0.6-t which is an
outdated version.

thanks a lot.

regards,
Steven
Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.





From glyph at divmod.com  Tue Jan  8 09:59:06 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Jan 2008 14:59:06 -0000
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
References: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <20080108145906.21558.2006907157.divmod.xquotient.4459@joule.divmod.com>

On 02:50 pm, steven_zhou at ctl.creative.com wrote:
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to 
>install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the 
>relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, 
>_epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember 
>the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

"stupid" might be a harsh word, but what you're doing shouldn't be 
expected to work.  I'm surprised that it has worked as well as you 
suggest that it has.
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only 
>supports
>1024 open sockets. I thought the problem is only in selectreactor?

You might want to check your ulimits.  However, twisted 2.2 might have 
been calling select() in any number of places.  And Python 2.4.3 had a 
bug in it which would have caused a problem regardless.  And there might 
be a bug in the interaction of random bits of code from twisted 2.5 and 
2.2.  Whatever the problem is, you're on your own trying to sort it out 
until you can upgrade to a supported version :)
>The information in this message is confidential and may be legally
>privileged.  It is intended solely for the addressee.  Access to this
>message by anyone else is unauthorized.

Please do not attach notices like this to messages on this mailing list, 
given that the "addressee" in this case is the entire internet :).



From exarkun at divmod.com  Tue Jan  8 10:03:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Jan 2008 10:03:03 -0500
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <20080108150303.31425.363432472.divmod.quotient.2232@ohm>

On Tue, 8 Jan 2008 22:50:54 +0800, Steven ZHOU <steven_zhou at ctl.creative.com> wrote:
>
>Hi,
>
>I hope some one could offer me some help on this. I am quite new to both
>python and twisted.
>
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

I don't know if this works.  I've never tried it.  The epoll reactor
implementation shares code from other parts of Twisted.  It may be
the case that that code changed between Twisted 2.2 and Twisted 2.5
in a way which will prevent epollreactor from working.  It may also
be the case that it hasn't.

>
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only supports
>1024 open sockets. I thought the problem is only in selectreactor? I
>figured this out by doing a netstat -a -n on linux and found that
>pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
>that would mean only around 1000 connections can be made.
>
>Although strange, but I do have a reason to use pyicq-0.6-t which is an
>outdated version.

Are you using Python 2.4.3?  This sounds like it may be related to the
issue described here:

  http://jcalderone.livejournal.com/2006/05/26/

Jean-Paul



From steven_zhou at ctl.creative.com  Tue Jan  8 10:30:41 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Tue, 8 Jan 2008 23:30:41 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <20080108145906.21558.2006907157.divmod.xquotient.4459@joule.divmod.com>
Message-ID: <OF29A18416.60FD1EF5-ON482573CA.0053C62D-482573CA.0055350A@ctl.creative.com>

Hi Glyph,

Thanks for the prompt help. I didn't expect it to work initially in fact. I
did set ulimit -n if that's the only thing to set. Yes, I am having python
2.4, not sure whether it's 2.4.3, I am now at home and will check that when
I am back to office.

The reason I used an outdated version of pyicq-0.6-t is to find out the
scalability of pyicqt, pymsnt etc. Unfortunately, I only managed to find a
clone of ICQ server (IServerd) which supports older version of icq oscar
protocols. So I can stress test with iserverd. Where can I find scalability
report of twisted based applications (e.g. pymsnt)? That would be even of
greater help.

regards,
Steven
Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.




                                                                           
             glyph at divmod.com                                              
             Sent by:                                                      
             twisted-python-bo                                          To 
             unces at twistedmatr         Twisted general discussion          
             ix.com                    <twisted-python at twistedmatrix.com>  
                                                                        cc 
                                                                           
             01/08/2008 10:59                                      Subject 
             PM                        Re: [Twisted-Python] epollreactor   
                                       for pyicq-0.6-t                     
                                                                           
             Please respond to                                             
              Twisted general                                              
                discussion                                                 
             <twisted-python at t                                             
             wistedmatrix.com>                                             
                                                                           
                                                                           




On 02:50 pm, steven_zhou at ctl.creative.com wrote:
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to
>install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the
>relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory,
>_epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember
>the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

"stupid" might be a harsh word, but what you're doing shouldn't be
expected to work.  I'm surprised that it has worked as well as you
suggest that it has.
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only
>supports
>1024 open sockets. I thought the problem is only in selectreactor?

You might want to check your ulimits.  However, twisted 2.2 might have
been calling select() in any number of places.  And Python 2.4.3 had a
bug in it which would have caused a problem regardless.  And there might
be a bug in the interaction of random bits of code from twisted 2.5 and
2.2.  Whatever the problem is, you're on your own trying to sort it out
until you can upgrade to a supported version :)
>The information in this message is confidential and may be legally
>privileged.  It is intended solely for the addressee.  Access to this
>message by anyone else is unauthorized.

Please do not attach notices like this to messages on this mailing list,
given that the "addressee" in this case is the entire internet :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

ForwardSourceID:NT0001A012




From zooko at zooko.com  Tue Jan  8 13:03:15 2008
From: zooko at zooko.com (zooko)
Date: Tue, 8 Jan 2008 10:03:15 -0800
Subject: [Twisted-Python] announcing Allmydata-Tahoe v0.7.0
Message-ID: <7D7C4CD2-EEBE-47C6-AF47-7C640A8CF01D@zooko.com>

Dear people of Twisted:

This is the release announcement for the latest version of the  
Allmydata-Tahoe decentralized filesystem.

This project is based on Twisted and on the Foolscap remote object  
library.  We're very happy with how Twisted and Foolscap have served  
us so far.

Please check it out!

Regards,

Zooko

ANNOUNCING: Allmydata-Tahoe version 0.7

We are pleased to announce the release of version 0.7 of allmydata.org
"Tahoe".

Tahoe is a secure, decentralized, fault-tolerant filesystem.  All of
the source code is available under a Free Software, Open Source
licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

This is the successor to Allmydata-Tahoe v0.6.1, which was released
October 15, 2007 [1].

This release adds decentralized, encrypted directories and mutable
files, making it the first release of Tahoe in which no part of the
filesystem is centralized.  It also adds a FUSE interface, allowing
you to access a distributed Tahoe grid as if it were a normal local
filesystem.

This is also the first release to be offered under a novel open source
licence which allows people to redistributed proprietary derivatives
of Tahoe for a limited time.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is new, it is not yet recommended for storage of
highly confidential data nor for valuable data which is not otherwise
backed up. However, it works well in practice, it comes with extensive
unit tests, and there are no known security flaws which would
compromise confidentiality or data integrity.  (For a current
description of all known security issues and an overview of Tahoe's
security properties, please see the Security web page: [2].)

This release of Tahoe is suitable for the "friendnet" use case [3] --
it is easy to create a filesystem spread over the computers of you
and your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "doc/install.html" [4].


HACKING AND COMMUNITY

Please join us on the mailing list [5] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted --
roadmap.txt [6] shows the next improvements that we plan to make and
CREDITS [7] lists the names of people who've contributed to the
project.  The wiki Dev page [8] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [9], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
January 7, 2008
San Francisco, California


[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=1346
[2] http://allmydata.org/trac/tahoe/wiki/Security
[3] http://allmydata.org/trac/tahoe/wiki/UseCases
[4] http://allmydata.org/source/tahoe/trunk/docs/install.html
[5] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[6] http://allmydata.org/trac/tahoe/browser/roadmap.txt
[7] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=1424
[8] http://allmydata.org/trac/tahoe/wiki/Dev
[9] http://allmydata.com




From steve at holdenweb.com  Tue Jan  8 14:39:11 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 08 Jan 2008 14:39:11 -0500
Subject: [Twisted-Python] Re: epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
References: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <4783D15F.8090305@holdenweb.com>

Steven ZHOU wrote:
> Hi,
> 
> I hope some one could offer me some help on this. I am quite new to both
> python and twisted.
> 
> The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
> pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
> twisted-2.2. However, I wished to use epollreactor as the default
> selectreactor only supports 1024 file descriptors. So I copied the relevant
> files of epollreactor which is installed on twisted-2.5 to the
> site-packages/twisted-2.2 directory. I copied 5 files in the total,
> epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
> _epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
> exact file names. I copied it with a hope that it works. I am not sure
> whether I am doing thing stupid here. correct me if I am.
> 
I dub thee "Frankenstein": "Hmm, let's see, a bit of 2.2, and if I use 
the same amount of 2.6 that should come out right around 2.4".

If only that were true ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From johnaherne at rocs.co.uk  Wed Jan  9 08:25:43 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 9 Jan 2008 13:25:43 -0000
Subject: [Twisted-Python] twisted gprs
Message-ID: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>

About a year ago we had a look at twisted to do some work with gprs. I got
some useful feedback from that.

However, it's only now we have had a chance to move things forward.

We have done some simple work with wm5/wm6 devices sending GPS data back to
a twisted server.

And we have done various tests sending/receiving messages over gprs to see
what problems we need to overcome.

One problem we have right now to which the solution may be obvious but not
to us is :--

We have a problem at the server end when we put the pda into 'flight mode'.
Thie means that the wireless is switched off and the gprs connection goes
away.

However, the server does not see this connection go away since the network
routers keep the connection up, as far as we can see.

In various tests we have the connection take from 2 - 7 mins before a
disconnection happens. As far as I can see using 'ethereal', the server
decides itself to drop the connection since I do not see a 'FIN' be sent
from anywhere.

On the server I have set a loopingCall running every 20 seconds, so that I
can switch off various parts to see the results.

With the pda not connected, the loopingCall keeps on going and sends between
2 -4 messages without getting an ack back from the pda. Then the server
stops trying to send any data. The loopingCall keeps going but no data goes
out onto the wire. We get upto 16 - 40 loop messages being sent but only the
2-4 go onto the wire.

What I would like to be able to do is to not wait 2-7 minutes before
realising the connection is not working.

I have been through the docs and the api but can't find anything that I can
use.

Is there any call I can make use of to be able to detect the failed send
before the connection finally is broken.


Thanks for any help on this.

John Aherne




From Carson.Gaspar at gs.com  Wed Jan  9 17:55:09 2008
From: Carson.Gaspar at gs.com (Gaspar, Carson)
Date: Wed, 9 Jan 2008 17:55:09 -0500
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
References: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
Message-ID: <7B58D29443879043A9E16AEE6769109F167EFF51@gsmbnmp04es.firmwide.corp.gs.com>

>What I would like to be able to do is to not wait 2-7 minutes 
>before realising the connection is not working.
>
>I have been through the docs and the api but can't find 
>anything that I can use.
>
>Is there any call I can make use of to be able to detect the 
>failed send before the connection finally is broken.

I assume this is TCP. What you're seeing is TCP in action. You send data
until you fill the TCP window, then the kernel queues the data, then TCP
times out.

If you want a faster timeout, you'll need to add application level ACKs,
and add a timeout on those, or tune your kernel to have shorter TCP
timeouts.

You _may_ be able to call getsockopt() and check the outgoing buffer
size to determine that there is unsent data, but I don't think you can
detect unack'd data (if anyone knows a way, please speak up).

-- 
Carson



From zmola at acm.org  Wed Jan  9 19:06:20 2008
From: zmola at acm.org (Carl Zmola)
Date: Wed, 09 Jan 2008 19:06:20 -0500
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
References: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
Message-ID: <4785617C.1090804@acm.org>

John Aherne wrote:
> Is there any call I can make use of to be able to detect the failed send
> before the connection finally is broken.
In general, there is no way to know if a connection is broken.
The standard way to do this is to send a heartbeat message every x 
seconds if there is no other communication on the connection.
On the server, you keep a watchdog timer and wait 2x seconds.  You reset 
the timer on every communication.
This can be tuned as you see fit, but it has to be done in your application.

The trade off is that if you want to know instantly that a connection is 
down, you need to be sending data constantly.

Carson suggested some ways to tweek TCP, and if you have control of the 
TCP stack, it is tweakable, but it is not portable.

Carl
zmola at acm.org



From johnaherne at rocs.co.uk  Thu Jan 10 04:52:46 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 10 Jan 2008 09:52:46 -0000
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <7B58D29443879043A9E16AEE6769109F167EFF51@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <FEEJLEMNHDFMOIKEDJBKEEKECJAA.johnaherne@rocs.co.uk>

Carson

Thanks for the info.

I have since read up on TCP and see that I am looking at standard TCP comms.

But I don't want to do anything too tricky. Just standard twisted if
possible.

I'll have to take a lok at doing my own timeouts with a callLater to see if
I get a response. If that makes sense.

Thanks

John Aherne


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Gaspar,
Carson
Sent: 09 January 2008 22:55
To: Twisted general discussion
Subject: RE: [Twisted-Python] twisted gprs


>What I would like to be able to do is to not wait 2-7 minutes
>before realising the connection is not working.
>
>I have been through the docs and the api but can't find
>anything that I can use.
>
>Is there any call I can make use of to be able to detect the
>failed send before the connection finally is broken.

I assume this is TCP. What you're seeing is TCP in action. You send data
until you fill the TCP window, then the kernel queues the data, then TCP
times out.

If you want a faster timeout, you'll need to add application level ACKs,
and add a timeout on those, or tune your kernel to have shorter TCP
timeouts.

You _may_ be able to call getsockopt() and check the outgoing buffer
size to determine that there is unsent data, but I don't think you can
detect unack'd data (if anyone knows a way, please speak up).

--
Carson

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johnaherne at rocs.co.uk  Thu Jan 10 05:16:15 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 10 Jan 2008 10:16:15 -0000
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <4785617C.1090804@acm.org>
Message-ID: <FEEJLEMNHDFMOIKEDJBKAEKFCJAA.johnaherne@rocs.co.uk>

Carl

Thanks for the reply.

I see now. I did take a look at the TCP book and see what you mean.

What I am trying to do is:--

I have a GPS app on the pda that can transmit every 30 secs or some other
parameterised time frame. This uses a port of its own.

I have another app on the same pda that receives ad hoc messages from the
server and acknowledges these with a message. This is done on a different
port.

For the pda app that waits for messages from the server, I hold a dict of
connections to talk back on.

If the pda can't receive I would like to report back very quickly that it is
not connected.

In theory, if I transmit gps every 30 secs that will keep the connection
open from the pda and is in effect a keepalive. Except when someone is in a
basement or tunnel when the gprs might disappear.

One thought I had was to do a callLater on the server of say 30secs once I
had sent the message, and check whether I had seen a response to that
message within the timeframe. If not I could drop the connection from my
dict and wait for the pda to reconnect with maybe a different IP and port.

Since the gps is send only from the pda I am not too worried if that fails
every now and then. It can just reconnect as and when.

I assume that what I am suggesting is a version of application acks as you
mention. Just nice if someone could confirm that it makes some sense.

Once again Thanks.

John Aherne

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Carl Zmola
Sent: 10 January 2008 00:06
To: Twisted general discussion
Subject: Re: [Twisted-Python] twisted gprs


John Aherne wrote:
> Is there any call I can make use of to be able to detect the failed send
> before the connection finally is broken.
In general, there is no way to know if a connection is broken.
The standard way to do this is to send a heartbeat message every x
seconds if there is no other communication on the connection.
On the server, you keep a watchdog timer and wait 2x seconds.  You reset
the timer on every communication.
This can be tuned as you see fit, but it has to be done in your application.

The trade off is that if you want to know instantly that a connection is
down, you need to be sending data constantly.

Carson suggested some ways to tweek TCP, and if you have control of the
TCP stack, it is tweakable, but it is not portable.

Carl
zmola at acm.org

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nitro at dr-code.org  Thu Jan 10 21:32:06 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 11 Jan 2008 03:32:06 +0100
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <1199416731.7666.42.camel@localhost.localdomain>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
	<1199416731.7666.42.camel@localhost.localdomain>
Message-ID: <op.t4qunspfz3pzfc@nitrogenycs2>

Am 04.01.2008, 04:18 Uhr, schrieb Itamar Shtull-Trauring  
<itamar at itamarst.org>:

>
>> a) the select calls are really taking up that much time (more than 50%!)
>
> They're certainly going to take up lots and lots of *clock* time, not
> necessarily CPU time: select() is the way Twisted (in default reactors)
> waits for events to happen. So if your program does nothing at all (e.g.
> just reactor.run(), select() will actually be close to 100% of clock
> time, even though CPU usage will be minuscule.

I guess this is what cProfile is actually outputting. Clock time and not  
cpu time. If the app is under more load, the percentage of the time spent  
in select() calls decreases to a minimum. So select() isn't bad then.

> If you have many TCP connections (or really, file descriptors), hundreds
> or thousands, select() will also start taking up CPU time. Using poll
> reactor, or in next version of Twisted (2.5 had some bugs) epoll reactor
> on Linux will use less CPU for this scenario.

I have very few connections, so this was not the problem. Only cProfile  
being a bit strange.

-Matthias



From nitro at dr-code.org  Thu Jan 10 21:36:45 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 11 Jan 2008 03:36:45 +0100
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>
References: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>
Message-ID: <op.t4quvjc4z3pzfc@nitrogenycs2>

Am 04.01.2008, 04:19 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

> Twisted does use select by default on Windows.  One thing you might try  
> is
> one of the other reactors available on Windows; there are two,
> win32eventreactor and iocpreactor.  You can read about how to do this  
> here:
>
> http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html
>
> Depending on what your application does, iocpreactor may not be complete
> enough to actually run your code.  It lacks some features provided by the
> default reactor.
>
> Whether either of these reactors will actually improve the performance of
> your application, I don't know.  You pointed out that a lot of time is
> spent in select, but this doesn't mean that spending less time inside the
> event notification function will make your overall application faster.
>
> Also, you are right to be suspicious of these profile results.  Python  
> has
> a very spotty history when it comes to profilers.  They are often  
> inaccurate
> or completely wrong.  cProfile is supposed to be better than the previous
> attempts, but I haven't personally used it extensively enough (nor at  
> all on
> Windows) to say whether this is true.

As I explained in my other post, cProfile's output wasn't what I expected  
it to be. I tried IOCP reactor nevertheless and it worked for my  
application. Can't see a real performance difference, I guess I am not  
performance limited by twisted anymore. At least for the moment being :-)

>   * How often do timed events go off?  These also cause more trips into
>     select, since each one causes select to return when it is time to  
> run.
>     Do you use reactor.callLater() with a 0 timeout a lot?

What is a lot? I am probably using it 10-50 times per iteration. Just out  
of curiosity - since my real problem is solved - which difference do those  
callLater(0, ...) calls make?

Thanks for helping, also thanks to Itamar.

-Matthias



From steven_zhou at ctl.creative.com  Thu Jan 10 21:53:06 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Fri, 11 Jan 2008 10:53:06 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <20080108150303.31425.363432472.divmod.quotient.2232@ohm>
Message-ID: <OF68949FC2.84AD12A8-ON482573CD.000FB8F4-482573CD.000FD921@ctl.creative.com>

Hi Jean-Paul,

Thanks for the help. It's indeed the python 2.4.3 bug. I changed it to
2.4.4 or 2.5. It works.

The adhoc way I did to epollreactor seems to work. Maybe I am lucky.

regards,
Steven

Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.




                                                                           
             Jean-Paul                                                     
             Calderone                                                     
             <exarkun at divmod.c                                          To 
             om>                       Twisted general discussion          
             Sent by:                  <twisted-python at twistedmatrix.com>  
             twisted-python-bo                                          cc 
             unces at twistedmatr                                             
             ix.com                                                Subject 
                                       Re: [Twisted-Python] epollreactor   
                                       for pyicq-0.6-t                     
             01/08/2008 11:03                                              
             PM                                                            
                                                                           
                                                                           
             Please respond to                                             
              Twisted general                                              
                discussion                                                 
             <twisted-python at t                                             
             wistedmatrix.com>                                             
                                                                           
                                                                           




On Tue, 8 Jan 2008 22:50:54 +0800, Steven ZHOU
<steven_zhou at ctl.creative.com> wrote:
>
>Hi,
>
>I hope some one could offer me some help on this. I am quite new to both
>python and twisted.
>
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the
relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

I don't know if this works.  I've never tried it.  The epoll reactor
implementation shares code from other parts of Twisted.  It may be
the case that that code changed between Twisted 2.2 and Twisted 2.5
in a way which will prevent epollreactor from working.  It may also
be the case that it hasn't.

>
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only supports
>1024 open sockets. I thought the problem is only in selectreactor? I
>figured this out by doing a netstat -a -n on linux and found that
>pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
>that would mean only around 1000 connections can be made.
>
>Although strange, but I do have a reason to use pyicq-0.6-t which is an
>outdated version.

Are you using Python 2.4.3?  This sounds like it may be related to the
issue described here:

  http://jcalderone.livejournal.com/2006/05/26/

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

ForwardSourceID:NT0001A016




From ottavio at campana.vi.it  Sat Jan 12 11:52:25 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Sat, 12 Jan 2008 17:52:25 +0100
Subject: [Twisted-Python] problem with twcgi.PHPScript
Message-ID: <20080112165225.GA13692@campana.vi.it>

Hi, I'm trying  to add the possibility of executing  some php pages from
an application developed with twisted web.

I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
because the debian package complains about it.

class VWGPhpScript (twcgi.FilteredScript):
  filter = '/usr/lib/cgi-bin/php5'
  def runProcess(self, env, request, qargs=[]):
    p = twcgi.CGIProcessProtocol(request)
    env['REDIRECT_STATUS'] = '200'
    reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env, os.path.dirname(self.filename))

This is the error I get:

2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
        :Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in __init__
            command, args, environment)
          File "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in _execChild
            os.execvpe(command, args, environment)
          File "os.py", line 350, in execvpe
            _execvpe(file, args, env)
          File "os.py", line 367, in _execvpe
            func(file, *argrest)
        OSError: [Errno 13] Permission denied

What's the meaning of permission denied? I tried running the application
as root, it didn't change... The php  file is in /tmp and this directory
in attached as a child called directory of the root.



From yginsburg at gmail.com  Sat Jan 12 19:16:03 2008
From: yginsburg at gmail.com (Yuri Ginsburg)
Date: Sat, 12 Jan 2008 16:16:03 -0800
Subject: [Twisted-Python] problem with twcgi.PHPScript
In-Reply-To: <20080112165225.GA13692@campana.vi.it>
References: <20080112165225.GA13692@campana.vi.it>
Message-ID: <3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>

Looks that you are passing you are passing your script's file name as
second argument to spawnProcess method instead of passing filter
(which '/usr/lib/cgi-bin/php5'), so spawnProcess tries to spawn
/tmp/index.php which, most probably, does not have execute
permissions.

I'd try

reactor.spawnProcess(p, self.filter, [self.filtrer,
self.filename]+qargs, env, os.path.dirname(self.filename))

-- 
Yuri Ginsburg (YG10)

On 1/12/08, Ottavio Campana <ottavio at campana.vi.it> wrote:
> Hi, I'm trying  to add the possibility of executing  some php pages from
> an application developed with twisted web.
>
> I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> because the debian package complains about it.
>
> class VWGPhpScript (twcgi.FilteredScript):
>   filter = '/usr/lib/cgi-bin/php5'
>   def runProcess(self, env, request, qargs=[]):
>     p = twcgi.CGIProcessProtocol(request)
>     env['REDIRECT_STATUS'] = '200'
>     reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
> os.path.dirname(self.filename))
>
> This is the error I get:
>
> 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
> 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon execvpe
> /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
>         :Traceback (most recent call last):
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> __init__
>             command, args, environment)
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> _execChild
>             os.execvpe(command, args, environment)
>           File "os.py", line 350, in execvpe
>             _execvpe(file, args, env)
>           File "os.py", line 367, in _execvpe
>             func(file, *argrest)
>         OSError: [Errno 13] Permission denied
>
> What's the meaning of permission denied? I tried running the application
> as root, it didn't change... The php  file is in /tmp and this directory
> in attached as a child called directory of the root.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Sun Jan 13 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Jan 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1200200707.8.419647210@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080113/6fbd4f69/attachment.htm 

From ottavio at campana.vi.it  Sun Jan 13 09:38:52 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Sun, 13 Jan 2008 15:38:52 +0100
Subject: [Twisted-Python] problem with twcgi.PHPScript
In-Reply-To: <3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>
References: <20080112165225.GA13692@campana.vi.it>
	<3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>
Message-ID: <478A227C.6010600@campana.vi.it>

Yuri Ginsburg ha scritto:
> Looks that you are passing you are passing your script's file name as
> second argument to spawnProcess method instead of passing filter
> (which '/usr/lib/cgi-bin/php5'), so spawnProcess tries to spawn
> /tmp/index.php which, most probably, does not have execute
> permissions.
> 
> I'd try
> 
> reactor.spawnProcess(p, self.filter, [self.filtrer,
> self.filename]+qargs, env, os.path.dirname(self.filename))
> 

it works!

Thank you.

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From bernat at luffy.cx  Mon Jan 14 12:44:37 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Mon, 14 Jan 2008 18:44:37 +0100
Subject: [Twisted-Python] Conch and basic.LineReceiver
Message-ID: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx>

Hi !

I have modified sshsimpleserver.py to use a protocol based on
basic.LineReceiver. However, I get the following exception:

2008/01/14 19:40 +0200 [SSHChannel session (0) on SSHService ssh-connection
on SSHServerTransport,0,127.0.0.1] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
37, in callWithContext
	    return func(*args,**kw)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/service.py",
line 42, in packetReceived
	    f(packet)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/connection.py",
line 139, in ssh_CHANNEL_DATA
	    log.callWithLogger(channel, channel.dataReceived, data)
	--- <exception caught here> ---
	  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 48,
in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 33,
in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
37, in callWithContext
	    return func(*args,**kw)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/session.py",
line 107, in dataReceived
	    self.client.transport.write(data)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/session.py",
line 156, in write
	    self.proto.dataReceived(data)
	  File "/usr/lib/python2.4/site-packages/twisted/protocols/basic.py", line
233, in dataReceived
	    if why or self.transport and self.transport.disconnecting:
	exceptions.AttributeError: SSHSessionProcessProtocol instance has no
attribute 'disconnecting'

How may I fix this?

I have attached my modified sshsimpleserver.py.

Thanks.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshsimpleserver.py
Type: text/x-python
Size: 3620 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080114/3a669f06/attachment.py 

From bernat at luffy.cx  Mon Jan 14 14:37:15 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Mon, 14 Jan 2008 20:37:15 +0100
Subject: [Twisted-Python] Conch and basic.LineReceiver
In-Reply-To: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx> (Vincent
	Bernat's message of "Mon, 14 Jan 2008 18:44:37 +0100")
References: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx>
Message-ID: <m33at0i4gk.fsf@neo.luffy.cx>

OoO Lors de la soir?e naissante du lundi 14 janvier 2008, vers 18:44, je
disais:

> I have modified sshsimpleserver.py to use a protocol based on
> basic.LineReceiver. However, I get the following exception:
[...]

There       seems      to       be       other      limitations       in
SSHSessionProcessProtocol.  Functions like inConnectionLost()  never get
called for example.
-- 
A BELCH IS NOT AN ORAL REPORT
A BELCH IS NOT AN ORAL REPORT
A BELCH IS NOT AN ORAL REPORT
-+- Bart Simpson on chalkboard in episode BABF11



From daedalus at eigenmagic.com  Mon Jan 14 20:34:17 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 12:34:17 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
Message-ID: <1200360857.6971.29.camel@localhost>

Hi folks,

I think I have a fundamental misunderstanding of how deferredGenerator
(or inlineCallbacks for Python2.5) work.

What I *want* to do, is something like this:

aValue = MyObject.get_a_value()

where the contents of get_a_value() do some asynchronous operations
which finally result in some kind of actual value being returned (a
string, and integer, whatever) rather than a Deferred.

I have some old blocking code that I want to migrate to use some
asynchronous, twisted code that does the same thing, but I'd prefer to
not have to write a bunch of:

def get_a_value_success(retval):
...

def get_a_value_failed(retval):
...

d = MyObject.get_a_value()
d.addCallback(get_a_value_success)
d.addErrback(get_a_value_failed)
code.

Is this even possible, or am I completely misunderstanding what's going
on here? I can get the code to do the @defer.deferredGenerator,
waitForDeferred(), wfd.getResult() dance.. but how do I actually return
a value from my function after doing wfd.getResult() ?

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Mon Jan 14 21:53:07 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 13:53:07 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200360857.6971.29.camel@localhost>
References: <1200360857.6971.29.camel@localhost>
Message-ID: <1200365587.6971.44.camel@localhost>

On Tue, 2008-01-15 at 12:34 +1100, Justin Warren wrote:
> Hi folks,
> 
> I think I have a fundamental misunderstanding of how deferredGenerator
> (or inlineCallbacks for Python2.5) work.
> 
> What I *want* to do, is something like this:
> 
> aValue = MyObject.get_a_value()

Aha!

Replying to my own post, I know, but I think I found the insight that
was preventing me from grokking this mechanism.

Adding @defer.deferredGenerator or @defer.inlineCallbacks 'turns on' the
inline callback mechanism *within that function*. You can then use the
inline yield syntax to perform sequential operations that are actually
asynchronous things that 'wait' for the operation to complete before
continuing to the next bit of code.

So, to do what I wanted to do, I needed to think about things
differently. Here's a concrete example:

I wanted to use the ZAPITool.zapi_request() function from my ModiPY code
to query a NetApp filer via its ZAPI (XML over HTTP) protocol. This
function returns a Deferred() that will .callback() or errback() when a
result is available.

So, I want to fetch the version of the filer OS. Normally, I'd use
something like this:

zpt = ZAPITool()
d = zpt.zapi_request('<system-get-version/>')

def got_result(result):
    print "Got a result:", result
    # Do something with the result

d.addCallback( got_result )

Which is messy, verbose, and annoying.

I can do this using inlineCallbacks thusly:

@defer.inlineCallbacks    # turn on inline callback functionality
def do_some_inline_callback_stuff():
    zpt = ZAPITool()
    result = yield zpt.zapi_request('<system-get-version/>')
    print "Got a result:", result
    # Do something with the result
    ...

    # Do another fetch
    result = yield zpt.zapi_request('<options-list-info/>')
    print "Filer options are:", result

    # and so on


w00t!

Note that you cannot

    return result

from within do_some_inline_callback_stuff(), because this is actually a
generator now, since it contains a yield.

This is quite neat stuff.. though it feels a bit sneaky and magical.

-- 
Justin Warren <daedalus at eigenmagic.com>



From nitro at dr-code.org  Mon Jan 14 22:03:37 2008
From: nitro at dr-code.org (Nitro)
Date: Tue, 15 Jan 2008 04:03:37 +0100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200365587.6971.44.camel@localhost>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>
Message-ID: <op.t4yasbo6z3pzfc@nitrogenycs2>

> Note that you cannot
>
>     return result
>
> from within do_some_inline_callback_stuff(), because this is actually a
> generator now, since it contains a yield.

You can. Use the returnValue() function found in the same module as the  
inlineCallbacks decorator.

> This is quite neat stuff.. though it feels a bit sneaky and magical.

Yeah, I am using it a lot recently too. It's just so much better than all  
those backwards code with callbacks before your actual invokation of the  
function :)
I had the same problems as you btw, thinking about things backwards. Now  
everything makes sense and works :)

-Matthias





From daedalus at eigenmagic.com  Mon Jan 14 22:14:37 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 14:14:37 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <op.t4yasbo6z3pzfc@nitrogenycs2>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost> <op.t4yasbo6z3pzfc@nitrogenycs2>
Message-ID: <1200366877.6971.46.camel@localhost>

On Tue, 2008-01-15 at 04:03 +0100, Nitro wrote:
> > Note that you cannot
> >
> >     return result
> >
> > from within do_some_inline_callback_stuff(), because this is actually a
> > generator now, since it contains a yield.
> 
> You can. Use the returnValue() function found in the same module as the  
> inlineCallbacks decorator.

Oh woo! I just tried that out and, well, *awesome*. Soooo much neater.

I have so much code to clean up...

-- 
Justin Warren <daedalus at eigenmagic.com>



From zchuang2006 at gmail.com  Mon Jan 14 22:16:36 2008
From: zchuang2006 at gmail.com (zechun huang)
Date: Tue, 15 Jan 2008 11:16:36 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 46, Issue 10
In-Reply-To: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
References: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
Message-ID: <55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>

??

2008/1/13, twisted-python-request at twistedmatrix.com <
twisted-python-request at twistedmatrix.com>:
>
> Send Twisted-Python mailing list submissions to
>         twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>         twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>         twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>    1. problem with twcgi.PHPScript (Ottavio Campana)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 12 Jan 2008 17:52:25 +0100
> From: Ottavio Campana <ottavio at campana.vi.it>
> Subject: [Twisted-Python] problem with twcgi.PHPScript
> To: twisted-python at twistedmatrix.com
> Message-ID: <20080112165225.GA13692 at campana.vi.it>
> Content-Type: text/plain; charset=us-ascii
>
> Hi, I'm trying  to add the possibility of executing  some php pages from
> an application developed with twisted web.
>
> I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> because the debian package complains about it.
>
> class VWGPhpScript (twcgi.FilteredScript):
>   filter = '/usr/lib/cgi-bin/php5'
>   def runProcess(self, env, request, qargs=[]):
>     p = twcgi.CGIProcessProtocol(request)
>     env['REDIRECT_STATUS'] = '200'
>     reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
> os.path.dirname(self.filename))
>
> This is the error I get:
>
> 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
> 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon
> execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
>         :Traceback (most recent call last):
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> __init__
>             command, args, environment)
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> _execChild
>             os.execvpe(command, args, environment)
>           File "os.py", line 350, in execvpe
>             _execvpe(file, args, env)
>           File "os.py", line 367, in _execvpe
>             func(file, *argrest)
>         OSError: [Errno 13] Permission denied
>
> What's the meaning of permission denied? I tried running the application
> as root, it didn't change... The php  file is in /tmp and this directory
> in attached as a child called directory of the root.
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 46, Issue 10
> **********************************************
>



-- 
http://sst.oicp.net/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080115/1de0ea34/attachment.htm 

From bernat at luffy.cx  Tue Jan 15 01:34:57 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue, 15 Jan 2008 07:34:57 +0100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200365587.6971.44.camel@localhost> (Justin Warren's message of
	"Tue, 15 Jan 2008 13:53:07 +1100")
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>
Message-ID: <m3prw3ha0e.fsf@neo.luffy.cx>

OoO En ce  milieu de nuit ?toil?e du mardi 15  janvier 2008, vers 03:53,
Justin Warren <daedalus at eigenmagic.com> disait:

> I can do this using inlineCallbacks thusly:

> @defer.inlineCallbacks    # turn on inline callback functionality
> def do_some_inline_callback_stuff():
>     zpt = ZAPITool()
>     result = yield zpt.zapi_request('<system-get-version/>')
>     print "Got a result:", result
>     # Do something with the result
>     ...

>     # Do another fetch
>     result = yield zpt.zapi_request('<options-list-info/>')
>     print "Filer options are:", result

>     # and so on


> w00t!

> Note that you cannot

>     return result

> from within do_some_inline_callback_stuff(), because this is actually a
> generator now, since it contains a yield.

Can we use exceptions?
-- 
I WILL NOT SELL SCHOOL PROPERTY
I WILL NOT SELL SCHOOL PROPERTY
I WILL NOT SELL SCHOOL PROPERTY
-+- Bart Simpson on chalkboard in episode 7F10



From daedalus at eigenmagic.com  Tue Jan 15 04:18:59 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 20:18:59 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <m3prw3ha0e.fsf@neo.luffy.cx>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>  <m3prw3ha0e.fsf@neo.luffy.cx>
Message-ID: <1200388740.6971.68.camel@localhost>

On Tue, 2008-01-15 at 07:34 +0100, Vincent Bernat wrote:
> OoO En ce  milieu de nuit ?toil?e du mardi 15  janvier 2008, vers 03:53,
> 
> Can we use exceptions?

Yes, it appears so.

You do something like this:

@defer.inlineCallbacks
def my_inline_function():
    try:

        # call a function that returns a Deferred, but that might
        # raise an Exception somewhere, which will trigger the
        # .errback() of the deferred that gets returned
        value = yield function_to_get_value_that_raises_exception()

    except Exception, e:    # poor form, but useful for an example
        print "Caught an exception:", e

The Exception that gets caught will be whatever Exception was wrapped up
in the Failure that gets passed to the .errback(). Some neat magic is
happening under the covers to unwrap the Exception from the Failure, so
you can use normal logic like this.

Beware in your own code: make sure that you don't just raise an
Exception where you should be calling an .errback(), or you'll see
'Unhandled error in Deferred' messages.

Executable demo code follows.

As an aside, thanks to the Twisted Matrix folks for this sweet
enhancement to twisted. Glyph gets the main blame, because he's listed
as the maintainer in twisted.internet.defer. Kudos!

#
# inlineDeferred try/except demo
#
def later_processing(d):
    # This must be an .errback(), not just a bare 'raise'
    # or I'm actually raising the error outside of the
    # Deferred chain.
    if True:  # simulate a test for an error condition
        # simulate triggering an errback on error
        d.errback( ValueError("My error!") )
    else:
        # Simulating normal behaviour
        d.callback("success!")

def deferred_fetch_value():
    """
    Simulate waiting for a deferred thing to fetch a value
    """
    d = defer.Deferred()
    reactor.callLater(1, later_processing, d)
    return d

@defer.inlineCallbacks
def get_value():
    """
    Sample function to get a value, which will asyncronously block
waiting
    for a deferred.
    """
    try:
        value = yield deferred_fetch_value()
        defer.returnValue( value )
    except ValueError, e:
        print "caught exception:", e
        #defer.returnValue( None )
        pass

@defer.inlineCallbacks
def get_value2():
    """
    Sample function to get a value, which will asyncronously block
waiting
    for a deferred.
    """
    value = yield deferred_fetch_value()
    defer.returnValue( value )

def my_error(failure):
    print "an error occurred: %s", failure
    reactor.stop()

def mystop(ignored):
    reactor.stop()

@defer.inlineCallbacks
def call_get_value():
    print "fetching value..."
    value = yield get_value()
    print "got value:", value

def go():
    d = call_get_value()
    d.addCallback(mystop)
    d.addErrback(my_error)

reactor.callLater(0, go)
reactor.run()

-- 
Justin Warren <daedalus at eigenmagic.com>



From lists at t3i.nl  Tue Jan 15 05:26:24 2008
From: lists at t3i.nl (Richard van Paasen)
Date: Tue, 15 Jan 2008 11:26:24 +0100
Subject: [Twisted-Python] Where to download twisted for win32 / python 2.5?
Message-ID: <E1JEizw-0005Xg-A6@daffy.sipo.nl>

Hi,

I tried to download the win32 package of twisted, but the download links on
the twisted homepage (http://twistedmatrix.com/trac/) don't work.

I tried to download:
http://tmrc.mit.edu/mirror/twisted/Twisted/2.5/Twisted_NoDocs-2.5.0.win32-py2.5.exe

Where can I download a win32 version of twisted?




From exarkun at divmod.com  Tue Jan 15 14:13:23 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Jan 2008 14:13:23 -0500
Subject: [Twisted-Python] Where to download twisted for win32 / python 2.5?
In-Reply-To: <E1JEizw-0005Xg-A6@daffy.sipo.nl>
Message-ID: <20080115191323.31425.833750123.divmod.quotient.5071@ohm>

On Tue, 15 Jan 2008 11:26:24 +0100, Richard van Paasen <lists at t3i.nl> wrote:
>Hi,
>
>I tried to download the win32 package of twisted, but the download links on
>the twisted homepage (http://twistedmatrix.com/trac/) don't work.
>
>I tried to download:
>http://tmrc.mit.edu/mirror/twisted/Twisted/2.5/Twisted_NoDocs-2.5.0.win32-py2.5.exe
>
>Where can I download a win32 version of twisted?
>

It's up now.

Jean-Paul



From drew.smathers at gmail.com  Tue Jan 15 15:35:09 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 15 Jan 2008 15:35:09 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 46, Issue 10
In-Reply-To: <55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>
References: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
	<55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>
Message-ID: <368574aa0801151235s6c733b2bt363a1825b4fcb750@mail.gmail.com>

?????????

2008/1/14 zechun huang <zchuang2006 at gmail.com>:

> ??
>
> 2008/1/13, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com
> >:
> >
> > Send Twisted-Python mailing list submissions to
> >          twisted-python at twistedmatrix.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> > or, via email, send a message with subject or body 'help' to
> >         twisted-python-request at twistedmatrix.com
> >
> > You can reach the person managing the list at
> >         twisted-python-owner at twistedmatrix.com
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of Twisted-Python digest..."
> >
> >
> > Today's Topics:
> >
> >    1. problem with twcgi.PHPScript (Ottavio Campana)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sat, 12 Jan 2008 17:52:25 +0100
> > From: Ottavio Campana <ottavio at campana.vi.it>
> > Subject: [Twisted-Python] problem with twcgi.PHPScript
> > To: twisted-python at twistedmatrix.com
> > Message-ID: <20080112165225.GA13692 at campana.vi.it>
> > Content-Type: text/plain; charset=us-ascii
> >
> > Hi, I'm trying  to add the possibility of executing  some php pages from
> >
> > an application developed with twisted web.
> >
> > I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> > because the debian package complains about it.
> >
> > class VWGPhpScript (twcgi.FilteredScript ):
> >   filter = '/usr/lib/cgi-bin/php5'
> >   def runProcess(self, env, request, qargs=[]):
> >     p = twcgi.CGIProcessProtocol(request)
> >     env['REDIRECT_STATUS'] = '200'
> >     reactor.spawnProcess (p, self.filename, [self.filename]+qargs, env,
> > os.path.dirname(self.filename))
> >
> > This is the error I get:
> >
> > 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code
> > 1
> > 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon
> > execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
> >         :Traceback (most recent call last):
> >           File
> > "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> > __init__
> >             command, args, environment)
> >           File
> > "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> > _execChild
> >             os.execvpe(command, args, environment)
> >           File "os.py", line 350, in execvpe
> >             _execvpe(file, args, env)
> >           File "os.py", line 367, in _execvpe
> >             func(file, *argrest)
> >         OSError: [Errno 13] Permission denied
> >
> > What's the meaning of permission denied? I tried running the application
> > as root, it didn't change... The php  file is in /tmp and this directory
> > in attached as a child called directory of the root.
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > End of Twisted-Python Digest, Vol 46, Issue 10
> > **********************************************
> >
>
>
>
> --
> http://sst.oicp.net/
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080115/a6ac2a56/attachment.htm 

From hwan2265 at mail.usyd.edu.au  Wed Jan 16 01:28:38 2008
From: hwan2265 at mail.usyd.edu.au (hwan2265 at mail.usyd.edu.au)
Date: Wed, 16 Jan 2008 17:28:38 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
Message-ID: <1200464918.478da4163459c@www-mail.usyd.edu.au>

Hello everyone,

I am trying to write a imap mail fetcher base on twisted and dbus. I have
written a simple fetcher without dbus functionality and it's working fine.
However I got a problem while adding dbus.

http://twistedmatrix.com/trac/ticket/1352 is the only article about how can
twisted and dbus work together that I could get from google and I just
followed its suggestion and added

    from twisted.internet import glib2reactor
    glib2reactor.install()

to my code.

As what I read from twisted API
http://twistedmatrix.com/documents/current/api/twisted.internet.glib2reactor.html
"In order to use this support, simply do the following:

   |  from twisted.internet import glib2reactor
   |  glib2reactor.install()

Then use twisted.internet APIs as usual. "
I thought everything will be fine.

But when I was running my code, I got a error:

Traceback (most recent call last):
  File "dbustwisted.py", line 5, in <module>
    glib2reactor.install()
  File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
line 33, in install
    return gtk2reactor.install(False)
  File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
line 270, in install
    installReactor(reactor)
  File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
24, in installReactor
    "reactor already installed"
AssertionError: reactor already installed

I don't know what's wrong with it.
This is my code, I have not add the dbus part yet and just test the
glib2reactor.

from twisted.mail import imap4
from twisted.internet import protocol, defer
import email, os, time

MAILPATH = "Mails"
IMAPSERVER = "xxxxxxxxxxx"
USERNAME = "xxxxx"
PASSWORD = "xxxxx"

class IMAPDownloadProtocol(imap4.IMAP4Client):

    def serverGreeting(self, capabilities):
        login = self.login(self.factory.username, self.factory.password)
        login.addCallback(self.__loggedIn)
        login.chainDeferred(self.factory.deferred) # any event that fires
login will also fire factory.deferred

    def __loggedIn(self, result):
        return
self.select(self.factory.mailbox).addCallback(self.__selectedMailbox)

    def __selectedMailbox(self, result):
        allMessages = imap4.MessageSet(1, None) # a set of messages from
message number 1 to the end of the mailbox
        return self.fetchUID(allMessages, True).addCallback(self.__gotUIDs)
# fetch a list of UID

    def __gotUIDs(self, uidResults):
        self.messageUIDs = [result['UID'] for result in uidResults.values(
)]
        self.messageCount = len(self.messageUIDs)
        print "INFO: %i messages in %s." % (self.messageCount,
self.factory.mailbox)
        return self.fetchNextMessage( ) # start to download the message one
by one

    def fetchNextMessage(self):
        if self.messageUIDs:
            nextUID = self.messageUIDs.pop(0)
            messageListToAnalysis = imap4.MessageSet(nextUID) # creates a
MessageSet matching only that message's UID
            return self.fetchAll(messageListToAnalysis,
True).addCallback(self.__gotIndex)
            # fetchAll - fetching the UID, flags, size, date, envelope
            # UID keyword set to true to tell the server that the
MessageSet is referring to messages by UID, not sequence number
        else:
            return self.logout( ).addCallback(lambda _:
self.transport.loseConnection( ))

    def __gotIndex(self, indexResults):
        index = indexResults.values()
        index_details = index[0]

        UID = index_details['UID']
        flags = index_details['FLAGS']
        size = index_details['RFC822.SIZE']
        date = index_details['INTERNALDATE']
        envelope = index_details['ENVELOPE']

        title = envelope[1]
        sender = envelope[3]
        temp = []
        # replace None in the envelope as "Empty", because None is a key
word in python
        for element in sender[0]:
            if element != None:
                temp += [element]
            if element == None:
                temp += ["Empty"]
        sender = temp

        if flags == []:
            flags = ['\\Unseen']


        print "INFO: Downloading message %i of %i" %
(self.messageCount-len(self.messageUIDs), self.messageCount)
        messageListToFetch = imap4.MessageSet(UID)
        return self.fetchMessage(messageListToFetch,
True).addCallback(self.__gotMessage, UID)

    def __gotMessage(self, fetchResults, UID):
        messageData = fetchResults.values( )[0]['RFC822']
        self.factory.handleMessage(messageData, UID)
        return self.fetchNextMessage( ) # fetch next message

    def connectionLost(self, reason):
        if not self.factory.deferred.called:
            # connection was lost unexpectedly!
            self.factory.deferred.errback(reason)

class IMAPDownloadFactory(protocol.ClientFactory):
    protocol = IMAPDownloadProtocol

    def __init__(self, username, password, mailbox, path):
        self.username = username
        self.password = password
        self.mailbox = mailbox
        self.path = path
        self.deferred = defer.Deferred( )

    def handleMessage(self, messageData, UID):
        mailFile = os.path.join(path, UID)
        output = file(mailFile, 'w+b')
        parsedMessage = email.message_from_string(messageData)
        output.write(parsedMessage.as_string(unixfrom=True))

    def startedConnecting(self, connector):
        print "INFO: Connection start"

    def clientConnectionFailed(self, connection, reason):
        self.deferred.errback(reason)

    def clientConnectionLost(self, connection, reason):
        print "INFO: Connection stop"
        #connection.connect()

if __name__ == "__main__":
    from twisted.internet import glib2reactor
    glib2reactor.install()
    ################################################
    # I added the 2 lines here and made the program crash
    ################################################

    from twisted.internet import reactor
    import sys, getpass

    server = IMAPSERVER
    user = USERNAME
    mailbox = "Inbox"
    path = MAILPATH
    password = PASSWORD

    factory = IMAPDownloadFactory(user, password, mailbox, path)
    reactor.connectTCP(server, 143, factory)
    reactor.run( )

I am new to twisted, dbus even python, any helps will be appreciated.

Regards
Huisan

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From daedalus at eigenmagic.com  Wed Jan 16 02:18:19 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 16 Jan 2008 18:18:19 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200464918.478da4163459c@www-mail.usyd.edu.au>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
Message-ID: <1200467899.7626.27.camel@localhost>

On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:

> But when I was running my code, I got a error:
> 
> Traceback (most recent call last):
>   File "dbustwisted.py", line 5, in <module>
>     glib2reactor.install()
>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
> line 33, in install
>     return gtk2reactor.install(False)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
> line 270, in install
>     installReactor(reactor)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
> 24, in installReactor
>     "reactor already installed"
> AssertionError: reactor already installed

I suspect your problem may be here:

> if __name__ == "__main__":
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
>     ################################################
>     # I added the 2 lines here and made the program crash
>     ################################################
> 
>     from twisted.internet import reactor
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You've already imported glib2reactor, so you shouldn't import the
default reactor as well. Try removing this line.

-- 
Justin Warren <daedalus at eigenmagic.com>



From matt at pollenation.net  Wed Jan 16 06:17:59 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:17:59 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200467899.7626.27.camel@localhost>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
	<1200467899.7626.27.camel@localhost>
Message-ID: <478DE7E7.4010204@pollenation.net>

Justin Warren wrote:
> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
> 
>> But when I was running my code, I got a error:
>>
>> Traceback (most recent call last):
>>   File "dbustwisted.py", line 5, in <module>
>>     glib2reactor.install()
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>> line 33, in install
>>     return gtk2reactor.install(False)
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>> line 270, in install
>>     installReactor(reactor)
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>> 24, in installReactor
>>     "reactor already installed"
>> AssertionError: reactor already installed
> 
> I suspect your problem may be here:
> 
>> if __name__ == "__main__":
>>     from twisted.internet import glib2reactor
>>     glib2reactor.install()
>>     ################################################
>>     # I added the 2 lines here and made the program crash
>>     ################################################
>>
>>     from twisted.internet import reactor
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 
> You've already imported glib2reactor, so you shouldn't import the
> default reactor as well. Try removing this line.

Actually, twisted.internet.reactor is quite magic. It is always the
installed reactor. However, if there is no reactor installed the first
time it is imported it will automatically install the default (select)
reactor.

I suspect that the real cause of the problem is that something is doing
a "from twisted.internet import reactor", causing the select reactor to
be installed, before the above code is getting the chance to install the
glib2reactor.

Looking at the code it must be a Twisted module that is the culprit.


- Matt


-- 
Matt Goodall
Technical Director, Pollenation Internet Ltd

Registered Number: 4382123
Registered Office: 237 Lidgett Lane, Leeds, West Yorkshire, LS17 6QR
A member of the Brunswick MCL Group of Companies

w: http://www.pollenation.net/
e: matt at pollenation.net
t: +44 (0) 113 2252500

This message may be confidential and the views expressed may not reflect
the views of my employers. Please read http://eudaimon-group.com/email
if you are uncertain what this means.



From matt at pollenation.net  Wed Jan 16 06:28:09 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:28:09 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DE7E7.4010204@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>
	<478DE7E7.4010204@pollenation.net>
Message-ID: <478DEA49.30906@pollenation.net>

Matt Goodall wrote:
> Justin Warren wrote:
>> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
>>
>>> But when I was running my code, I got a error:
>>>
>>> Traceback (most recent call last):
>>>   File "dbustwisted.py", line 5, in <module>
>>>     glib2reactor.install()
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>>> line 33, in install
>>>     return gtk2reactor.install(False)
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>>> line 270, in install
>>>     installReactor(reactor)
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>>> 24, in installReactor
>>>     "reactor already installed"
>>> AssertionError: reactor already installed
>> I suspect your problem may be here:
>>
>>> if __name__ == "__main__":
>>>     from twisted.internet import glib2reactor
>>>     glib2reactor.install()
>>>     ################################################
>>>     # I added the 2 lines here and made the program crash
>>>     ################################################
>>>
>>>     from twisted.internet import reactor
>>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>
>> You've already imported glib2reactor, so you shouldn't import the
>> default reactor as well. Try removing this line.
> 
> Actually, twisted.internet.reactor is quite magic. It is always the
> installed reactor. However, if there is no reactor installed the first
> time it is imported it will automatically install the default (select)
> reactor.
> 
> I suspect that the real cause of the problem is that something is doing
> a "from twisted.internet import reactor", causing the select reactor to
> be installed, before the above code is getting the chance to install the
> glib2reactor.
> 
> Looking at the code it must be a Twisted module that is the culprit.

And the offending module is ... twisted.protocols.policies. Attached is
a patch (I'll submit it to Trac as a ticket, too.)


- Matt


-- 
Matt Goodall
Technical Director, Pollenation Internet Ltd

-------------- next part --------------
A non-text attachment was scrubbed...
Name: lazy-reactor-import.patch
Type: text/x-patch
Size: 1070 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080116/2f6ce7c4/attachment.bin 

From matt at pollenation.net  Wed Jan 16 06:40:28 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:40:28 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DEA49.30906@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>	<478DE7E7.4010204@pollenation.net>
	<478DEA49.30906@pollenation.net>
Message-ID: <478DED2C.8030709@pollenation.net>

Matt Goodall wrote:
> Matt Goodall wrote:
>> Justin Warren wrote:
>>> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
>>>
>>>> But when I was running my code, I got a error:
>>>>
>>>> Traceback (most recent call last):
>>>>   File "dbustwisted.py", line 5, in <module>
>>>>     glib2reactor.install()
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>>>> line 33, in install
>>>>     return gtk2reactor.install(False)
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>>>> line 270, in install
>>>>     installReactor(reactor)
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>>>> 24, in installReactor
>>>>     "reactor already installed"
>>>> AssertionError: reactor already installed
>>> I suspect your problem may be here:
>>>
>>>> if __name__ == "__main__":
>>>>     from twisted.internet import glib2reactor
>>>>     glib2reactor.install()
>>>>     ################################################
>>>>     # I added the 2 lines here and made the program crash
>>>>     ################################################
>>>>
>>>>     from twisted.internet import reactor
>>>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>>
>>> You've already imported glib2reactor, so you shouldn't import the
>>> default reactor as well. Try removing this line.
>> Actually, twisted.internet.reactor is quite magic. It is always the
>> installed reactor. However, if there is no reactor installed the first
>> time it is imported it will automatically install the default (select)
>> reactor.
>>
>> I suspect that the real cause of the problem is that something is doing
>> a "from twisted.internet import reactor", causing the select reactor to
>> be installed, before the above code is getting the chance to install the
>> glib2reactor.
>>
>> Looking at the code it must be a Twisted module that is the culprit.
> 
> And the offending module is ... twisted.protocols.policies. Attached is
> a patch (I'll submit it to Trac as a ticket, too.)


Grepping the Twisted code suggests this is a "problem" that is not
really worth trying to fix fully. It's probably best to just avoid the
problem by making sure you get to install your choice of reactor before
anything else.

Of course, if you use the twistd daemon installing a specific reactor at
the correct time is easy, by using the --reactor flag.


- Matt




From buz at netbuz.org  Wed Jan 16 08:01:21 2008
From: buz at netbuz.org (Bastian Winkler)
Date: Wed, 16 Jan 2008 14:01:21 +0100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200464918.478da4163459c@www-mail.usyd.edu.au>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
Message-ID: <20080116130121.GA24395@succubus.netbuz.org>

hi,

you have to install glib2reactor before importing any other modules to
prevent them from importing the default reactor (which is the
SelectReactor on linux)

so simply put

from twisted.internet import glib2reactor
glib2reactor.install()

on top of your script/module and it should work as expected

:wq buz

On Wed, Jan 16, 2008 at 05:28:38PM +1100, hwan2265 at mail.usyd.edu.au wrote:
> Hello everyone,
> 
> I am trying to write a imap mail fetcher base on twisted and dbus. I have
> written a simple fetcher without dbus functionality and it's working fine.
> However I got a problem while adding dbus.
> 
> http://twistedmatrix.com/trac/ticket/1352 is the only article about how can
> twisted and dbus work together that I could get from google and I just
> followed its suggestion and added
> 
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
> 
> to my code.
> 
> As what I read from twisted API
> http://twistedmatrix.com/documents/current/api/twisted.internet.glib2reactor.html
> "In order to use this support, simply do the following:
> 
>    |  from twisted.internet import glib2reactor
>    |  glib2reactor.install()
> 
> Then use twisted.internet APIs as usual. "
> I thought everything will be fine.
> 
> But when I was running my code, I got a error:
> 
> Traceback (most recent call last):
>   File "dbustwisted.py", line 5, in <module>
>     glib2reactor.install()
>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
> line 33, in install
>     return gtk2reactor.install(False)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
> line 270, in install
>     installReactor(reactor)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
> 24, in installReactor
>     "reactor already installed"
> AssertionError: reactor already installed
> 
> I don't know what's wrong with it.
> This is my code, I have not add the dbus part yet and just test the
> glib2reactor.
> 
> from twisted.mail import imap4
> from twisted.internet import protocol, defer
> import email, os, time
> 
> MAILPATH = "Mails"
> IMAPSERVER = "xxxxxxxxxxx"
> USERNAME = "xxxxx"
> PASSWORD = "xxxxx"
> 
> class IMAPDownloadProtocol(imap4.IMAP4Client):
> 
>     def serverGreeting(self, capabilities):
>         login = self.login(self.factory.username, self.factory.password)
>         login.addCallback(self.__loggedIn)
>         login.chainDeferred(self.factory.deferred) # any event that fires
> login will also fire factory.deferred
> 
>     def __loggedIn(self, result):
>         return
> self.select(self.factory.mailbox).addCallback(self.__selectedMailbox)
> 
>     def __selectedMailbox(self, result):
>         allMessages = imap4.MessageSet(1, None) # a set of messages from
> message number 1 to the end of the mailbox
>         return self.fetchUID(allMessages, True).addCallback(self.__gotUIDs)
> # fetch a list of UID
> 
>     def __gotUIDs(self, uidResults):
>         self.messageUIDs = [result['UID'] for result in uidResults.values(
> )]
>         self.messageCount = len(self.messageUIDs)
>         print "INFO: %i messages in %s." % (self.messageCount,
> self.factory.mailbox)
>         return self.fetchNextMessage( ) # start to download the message one
> by one
> 
>     def fetchNextMessage(self):
>         if self.messageUIDs:
>             nextUID = self.messageUIDs.pop(0)
>             messageListToAnalysis = imap4.MessageSet(nextUID) # creates a
> MessageSet matching only that message's UID
>             return self.fetchAll(messageListToAnalysis,
> True).addCallback(self.__gotIndex)
>             # fetchAll - fetching the UID, flags, size, date, envelope
>             # UID keyword set to true to tell the server that the
> MessageSet is referring to messages by UID, not sequence number
>         else:
>             return self.logout( ).addCallback(lambda _:
> self.transport.loseConnection( ))
> 
>     def __gotIndex(self, indexResults):
>         index = indexResults.values()
>         index_details = index[0]
> 
>         UID = index_details['UID']
>         flags = index_details['FLAGS']
>         size = index_details['RFC822.SIZE']
>         date = index_details['INTERNALDATE']
>         envelope = index_details['ENVELOPE']
> 
>         title = envelope[1]
>         sender = envelope[3]
>         temp = []
>         # replace None in the envelope as "Empty", because None is a key
> word in python
>         for element in sender[0]:
>             if element != None:
>                 temp += [element]
>             if element == None:
>                 temp += ["Empty"]
>         sender = temp
> 
>         if flags == []:
>             flags = ['\\Unseen']
> 
> 
>         print "INFO: Downloading message %i of %i" %
> (self.messageCount-len(self.messageUIDs), self.messageCount)
>         messageListToFetch = imap4.MessageSet(UID)
>         return self.fetchMessage(messageListToFetch,
> True).addCallback(self.__gotMessage, UID)
> 
>     def __gotMessage(self, fetchResults, UID):
>         messageData = fetchResults.values( )[0]['RFC822']
>         self.factory.handleMessage(messageData, UID)
>         return self.fetchNextMessage( ) # fetch next message
> 
>     def connectionLost(self, reason):
>         if not self.factory.deferred.called:
>             # connection was lost unexpectedly!
>             self.factory.deferred.errback(reason)
> 
> class IMAPDownloadFactory(protocol.ClientFactory):
>     protocol = IMAPDownloadProtocol
> 
>     def __init__(self, username, password, mailbox, path):
>         self.username = username
>         self.password = password
>         self.mailbox = mailbox
>         self.path = path
>         self.deferred = defer.Deferred( )
> 
>     def handleMessage(self, messageData, UID):
>         mailFile = os.path.join(path, UID)
>         output = file(mailFile, 'w+b')
>         parsedMessage = email.message_from_string(messageData)
>         output.write(parsedMessage.as_string(unixfrom=True))
> 
>     def startedConnecting(self, connector):
>         print "INFO: Connection start"
> 
>     def clientConnectionFailed(self, connection, reason):
>         self.deferred.errback(reason)
> 
>     def clientConnectionLost(self, connection, reason):
>         print "INFO: Connection stop"
>         #connection.connect()
> 
> if __name__ == "__main__":
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
>     ################################################
>     # I added the 2 lines here and made the program crash
>     ################################################
> 
>     from twisted.internet import reactor
>     import sys, getpass
> 
>     server = IMAPSERVER
>     user = USERNAME
>     mailbox = "Inbox"
>     path = MAILPATH
>     password = PASSWORD
> 
>     factory = IMAPDownloadFactory(user, password, mailbox, path)
>     reactor.connectTCP(server, 143, factory)
>     reactor.run( )
> 
> I am new to twisted, dbus even python, any helps will be appreciated.
> 
> Regards
> Huisan
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
If Bill Gates had a penny for every time Windows crashed......Oh wait, he does.

GnuPG Fingerprint: 2FFF FC48 C7DF 1EA0 00A0  FD53 8C35 FD2E 6908 7B82
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080116/eb320402/attachment.pgp 

From Tjerk.Kusters at imtech.nl  Wed Jan 16 08:48:43 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Wed, 16 Jan 2008 14:48:43 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>


Hello,

I have build a webserver with Twisted 2.4 with imports of the following:

 from twisted.web import resource, static, server, twcgi
 from twisted.internet import reactor

I'm adding several mods as child to the root with:

 root = static.File(settings.getSetting("html_directory"))
 root.putChild(mods.getPath(), mods

The mods are classes like

 class module(resource.Resource):
   def render_GET(self, request):
      # do something

The reactor is started as:
 reactor.listenTCP(_port, server.Site(root))
 reactor.run( )

Some of the GET request in the mods can take some time to complete. In the
current situation other request to the server have to wait on this request.

Is it possible to make soms kind of a thread/connection pool so that more
then one request can be handled at the same time?

Regards,
Tjerk




From christian.simms at gmail.com  Wed Jan 16 10:48:30 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Wed, 16 Jan 2008 10:48:30 -0500
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>
References: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>
Message-ID: <cd8fa6f90801160748q46eb734dme20ce61c40b39590@mail.gmail.com>

On Jan 16, 2008 8:48 AM,  <Tjerk.Kusters at imtech.nl> wrote:
>
> Hello,
>
> I have build a webserver with Twisted 2.4 with imports of the following:
>
>  from twisted.web import resource, static, server, twcgi
>  from twisted.internet import reactor
>
> I'm adding several mods as child to the root with:
>
>  root = static.File(settings.getSetting("html_directory"))
>  root.putChild(mods.getPath(), mods
>
> The mods are classes like
>
>  class module(resource.Resource):
>    def render_GET(self, request):
>       # do something
>
> The reactor is started as:
>  reactor.listenTCP(_port, server.Site(root))
>  reactor.run( )
>
> Some of the GET request in the mods can take some time to complete. In the
> current situation other request to the server have to wait on this request.
>
> Is it possible to make soms kind of a thread/connection pool so that more
> then one request can be handled at the same time?
>
> Regards,
> Tjerk
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Yes it is possible to use a thread pool, in fact twisted comes with
one. However, how you use it depends on what is taking so long for
you:

- if it's database calls then consider using twisted.enterprise.adbapi
- http://twistedmatrix.com/projects/core/documentation/howto/enterprise.html

- if it's python code taking so long then consider breaking your code
into shorter snippets that yield control back to twisted periodically
so that other requests don't get ignored

- if it's network code then make sure you're using Deferred's properly
- http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Hope that helps.

Cheers,
Christian



From hwan2265 at mail.usyd.edu.au  Wed Jan 16 18:45:06 2008
From: hwan2265 at mail.usyd.edu.au (hwan2265 at mail.usyd.edu.au)
Date: Thu, 17 Jan 2008 10:45:06 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
Message-ID: <1200527106.478e97021af7f@www-mail.usyd.edu.au>

Hi,

I just put

from twisted.internet import glib2reactor
glib2reactor.install()

on top of my script as Bastian's suggestion and it finally works.

Thank you all
-Huisan

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From Tjerk.Kusters at imtech.nl  Thu Jan 17 02:50:55 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 08:50:55 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>

>> I have build a webserver with Twisted 2.4 with imports of the following:
>>
>>  from twisted.web import resource, static, server, twcgi
>>  from twisted.internet import reactor
>>
>> I'm adding several mods as child to the root with:
>>
>>  root = static.File(settings.getSetting("html_directory"))
>>  root.putChild(mods.getPath(), mods
>>
>> The mods are classes like
>>
>>  class module(resource.Resource):
>>    def render_GET(self, request):
>>       # do something
>>
>> The reactor is started as:
>>  reactor.listenTCP(_port, server.Site(root))
>>  reactor.run( )
>>
>> Some of the GET request in the mods can take some time to complete. In
the
>> current situation other request to the server have to wait on this
request.
>>
>> Is it possible to make soms kind of a thread/connection pool so that
more
>> then one request can be handled at the same time?
>>
>> Regards,
>> Tjerk
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>Yes it is possible to use a thread pool, in fact twisted comes with
>one. However, how you use it depends on what is taking so long for
>you:
>
>- if it's database calls then consider using twisted.enterprise.adbapi
>-
http://twistedmatrix.com/projects/core/documentation/howto/enterprise.html
>
>- if it's python code taking so long then consider breaking your code
>into shorter snippets that yield control back to twisted periodically
>so that other requests don't get ignored
>
>- if it's network code then make sure you're using Deferred's properly
>- http://twistedmatrix.com/projects/core/documentation/howto/defer.html

The call can take some time because I have to wait on a response from a
CORBA call.

I have looked at deferred's, but can not see how this can be used to solve
the problem. The render_GET(self, request) can only return when there is an
answer.

Is there a way to make twisted web to handle multi connections at the same
time?

Regards,
Tjerk









From therve at free.fr  Thu Jan 17 03:35:32 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 17 Jan 2008 09:35:32 +0100
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>
References: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>
Message-ID: <20080117093532.4lsxlev34k8kcwcg@wasabox.wasabout.net>

Quoting Tjerk.Kusters at imtech.nl:


> The call can take some time because I have to wait on a response from a
> CORBA call.
>
> I have looked at deferred's, but can not see how this can be used to solve
> the problem. The render_GET(self, request) can only return when there is an
> answer.
>
> Is there a way to make twisted web to handle multi connections at the same
> time?

You're misunderstanding something. twisted.web can handle multiple  
connections without problems. I think your problem is that you're  
making a blocking call (CORBA) inside the reactor loop, which prevents  
other connections to happen. If you don't manage to find an  
asynchronous CORBA client, you should do the call inside a thread,  
using reactor.callInThread for example.

However, it would be easier to help you with an example of your code  
or a more detailed description of your problem.

-- 
Thomas




From Tjerk.Kusters at imtech.nl  Thu Jan 17 04:42:34 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 10:42:34 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF885B72D8.DAA674DF-ONC12573D3.003555F7-C12573D3.003555FA@imtechrelay.nl>

>making a blocking call (CORBA) inside the reactor loop, which prevents
>other connections to happen. If you don't manage to find an
>asynchronous CORBA client, you should do the call inside a thread,
>using reactor.callInThread for example.
>
>However, it would be easier to help you with an example of your code
>or a more detailed description of your problem.

I have create a small example program to show my problem.

from twisted.web import resource, static, server
from twisted.internet import reactor
import datetime, time

class module_1(resource.Resource):
    def render_GET(self, request):
        request.write("module 1<br>")
        request.write(datetime.datetime.today().strftime("%Y-%m-%dT%H:%M:%S"))

        return ""

def doWork():
    # perform call which can take some seconds to return
    time.sleep(10)
    return "ready"

class module_2(resource.Resource):
    def render_GET(self, request):
        request.write("module 2<br>")
        request.write(doWork())
        return ""

root = static.File("d:/www")
root.putChild("module1", module_1())
root.putChild("module2", module_2())
reactor.listenTCP(8900, server.Site(root))
print "Reactor run"
reactor.run( )


When I do request http://localhost:8900/module2
an other request to http://localhost:8900/module1 has to wait on the first
one to finish.

So the doWork is blocking the reactor and I should perform the work in a
thread. But my question is then: how can I perform the render_GET of
module_2 in a thread and still return the answer back to the webpage?

Hope this gives enough details on the situation.

Regards,
Tjerk








From m.beniamino at people.it  Thu Jan 17 04:55:53 2008
From: m.beniamino at people.it (Matteo Beniamino)
Date: Thu, 17 Jan 2008 10:55:53 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
Message-ID: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>

I'm trying to parse messages coming from some serial ports and TCP/IP
connections using a protocol derived from a basic.LineReceiver .
Everything works fine. Now I'd like to detect when a client is not
sending data for a certain amount of time and add a callback to handle
this situation, but I don't know how to achieve this. Does anyone know
if  there is something I can do at Factory or Protocol level? There is
no problem in changing the LineReceiver approach with something
different.

Thank you for your help,
-- 
  M. Beniamino



From amauryfa at gmail.com  Thu Jan 17 06:07:52 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 17 Jan 2008 12:07:52 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
In-Reply-To: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
References: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
Message-ID: <e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>

Hello,

Matteo Beniamino wrote:
> I'm trying to parse messages coming from some serial ports and TCP/IP
> connections using a protocol derived from a basic.LineReceiver .
> Everything works fine. Now I'd like to detect when a client is not
> sending data for a certain amount of time and add a callback to handle
> this situation, but I don't know how to achieve this. Does anyone know
> if  there is something I can do at Factory or Protocol level? There is
> no problem in changing the LineReceiver approach with something
> different.

You may use the protocol.policies.TimeoutMixin class.
See the code of protocols/ftp.py to see a usage of it.

Your protocol must implement the timeoutConnection() method,
which is called if your code does not call resetTimeout() often enough.
Then, just call it at the beginning of lineReceived!

-- 
Amaury Forgeot d'Arc



From exarkun at divmod.com  Thu Jan 17 06:17:52 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Jan 2008 06:17:52 -0500
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF885B72D8.DAA674DF-ONC12573D3.003555F7-C12573D3.003555FA@imtechrelay.nl>
Message-ID: <20080117111752.31425.1787216718.divmod.quotient.5888@ohm>

On Thu, 17 Jan 2008 10:42:34 +0100, tjerk.kusters at imtech.nl wrote:
>>making a blocking call (CORBA) inside the reactor loop, which prevents
>>other connections to happen. If you don't manage to find an
>>asynchronous CORBA client, you should do the call inside a thread,
>>using reactor.callInThread for example.
>>
>>However, it would be easier to help you with an example of your code
>>or a more detailed description of your problem.
>
>I have create a small example program to show my problem.
>
> [snip]
>
>class module_2(resource.Resource):
>    def render_GET(self, request):
>        request.write("module 2<br>")
>        request.write(doWork())
>        return ""
>

At some point (perhaps the next version of Twisted, perhaps not), render_GET
will support Deferreds so this will get easier.  However, until then, you
can still have asynchronous render_GET implementations.  You just have to
use NOT_DONE_YET.

For example,

  from twisted.web.resource import NOT_DONE_YET, Resource
  from twisted.internet.defer import Deferred
  from twisted.internet import reactor

  class SlowResource(Resource):
      def render_GET(self, request):
          d = Deferred()
          def finishedSlowThing(result):
              request.write(result)
              request.finish()
          reactor.callLater(3, d.callback, "the result")
          return NOT_DONE_YET


Hope this helps,

Jean-Paul



From Tjerk.Kusters at imtech.nl  Thu Jan 17 08:44:49 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 14:44:49 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF9134A0BC.6A07BA55-ONC12573D3.004B83A7-C12573D3.004B83AF@imtechrelay.nl>

>will support Deferreds so this will get easier.  However, until then, you
>can still have asynchronous render_GET implementations.  You just have to
>use NOT_DONE_YET.

I have made some changes to my test code and it works. A request to
module_1 is possible will there is a request to moduleSlow2.
Multiple calls to moduleSlow2 have to wait until the other one finishes.
But calling module_1 still works. Should be oke for my webapplication.

changed it to:

from twisted.web import resource, static, server
from twisted.web.server import NOT_DONE_YET
from twisted.internet import reactor
from twisted.internet.defer import Deferred
from twisted.internet.threads import deferToThread
import datetime, time

def tijd():
    return datetime.datetime.today().strftime("%Y-%m-%dT%H:%M:%S")

class module_1(resource.Resource):
    def render_GET(self, request):
        request.write(tijd())
        return ""

class moduleSlow2(resource.Resource):

    def render_GET(self, request):
        d = deferToThread(self.answer, request)
        d.addCallback(request.write)
        d.addCallback(lambda _: request.finish())
        return NOT_DONE_YET

    def answer(self, request):
        time.sleep(10)
        return "finished %s" % tijd()

root = static.File("d:/www")
root.putChild("module1", module_1())
root.putChild("slow2", moduleSlow2())
reactor.listenTCP(8900, server.Site(root))
print "Reactor run"
reactor.run( )



Regars,
Tjerk




From m.beniamino at people.it  Thu Jan 17 11:23:30 2008
From: m.beniamino at people.it (Matteo Beniamino)
Date: Thu, 17 Jan 2008 17:23:30 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
In-Reply-To: <e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>
References: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
	<e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>
Message-ID: <fcd2fb690801170823t573e37c3k9cbae1da10ddb9e9@mail.gmail.com>

2008/1/17, Amaury Forgeot d'Arc <amauryfa at gmail.com>:
> You may use the protocol.policies.TimeoutMixin class.

It works perfectly. Thank you for your help.

-- 
  M.Beniamino



From ematus at gmail.com  Thu Jan 17 16:09:35 2008
From: ematus at gmail.com (Eduardo Matus)
Date: Thu, 17 Jan 2008 18:09:35 -0300
Subject: [Twisted-Python] callLater
Message-ID: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>

hey all....

is there a way to add tasks  and then run the timer in callLater from the
reactor class??
like sched module in python...

because if I want to call 2 different functions at the "same" time..

reactor.callLater(3,f)
reactor.callLater(3,g)

the 'g' function will be called 'n' seconds after the 'f' method....

thks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080117/3ca94e17/attachment.htm 

From radix at twistedmatrix.com  Thu Jan 17 16:33:10 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 17 Jan 2008 16:33:10 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
Message-ID: <60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>

On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:
> hey all....
>
> is there a way to add tasks  and then run the timer in callLater from the
> reactor class??
> like sched module in python...
>
> because if I want to call 2 different functions at the "same" time..
>
> reactor.callLater(3,f)
> reactor.callLater(3,g)
>
> the 'g' function will be called 'n' seconds after the 'f' method....

No it won't. They'll both be called at (almost) the same time. If
you're actually seeing g being called 3 seconds after f, there's
probably something else wrong in your application. Please post a
minimal complete example showing your problem.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From drew.smathers at gmail.com  Thu Jan 17 16:42:34 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Jan 2008 16:42:34 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
Message-ID: <368574aa0801171342h491e74d6x8bcd8331411d0e06@mail.gmail.com>

On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:

>
> because if I want to call 2 different functions at the "same" time..
>
> reactor.callLater(3,f)
> reactor.callLater(3,g)
>
> the 'g' function will be called 'n' seconds after the 'f' method....


f and g will both get called ~3 seconds after the call to callLater - the
order in which they get called should be considered arbitrary.  What do you
mean by g will be called N seconds after f?

If you're tying to implement cron-like functionality this easy enough (at
least if persistency is not a concern) with simple time calculations and
your own code which uses callLater.


>
>
> thks
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080117/92bcb5bc/attachment.htm 

From ematus at gmail.com  Thu Jan 17 16:54:54 2008
From: ematus at gmail.com (Eduardo Matus)
Date: Thu, 17 Jan 2008 18:54:54 -0300
Subject: [Twisted-Python] callLater
In-Reply-To: <60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
Message-ID: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>

hey.. the code is to.... dirty.. but look this...

reactor.callLater(3,f)

for x in range(100000000000000): # for example... a big time-consumption
       #do something
reactor.callLater(3,g)

the 'g' method will not start at the same time of 'f'


the python sched module, in this same example is like this

s = sched..... bla..bla..

s.enter(3,1,f,())
for x in range(100000000000000): # for example... a big time-consumption
       #do something
s.enter(3,1,g,())

s.run()

in this case... 'f' and 'g' will be called at the "same" time..

thks.


On Jan 17, 2008 6:33 PM, Christopher Armstrong <radix at twistedmatrix.com>
wrote:

> On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:
> > hey all....
> >
> > is there a way to add tasks  and then run the timer in callLater from
> the
> > reactor class??
> > like sched module in python...
> >
> > because if I want to call 2 different functions at the "same" time..
> >
> > reactor.callLater(3,f)
> > reactor.callLater(3,g)
> >
> > the 'g' function will be called 'n' seconds after the 'f' method....
>
> No it won't. They'll both be called at (almost) the same time. If
> you're actually seeing g being called 3 seconds after f, there's
> probably something else wrong in your application. Please post a
> minimal complete example showing your problem.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080117/8a29a50b/attachment.htm 

From radix at twistedmatrix.com  Thu Jan 17 17:07:35 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 17 Jan 2008 17:07:35 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
	<984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <60ed19d40801171407s991fb10xc721b93487995228@mail.gmail.com>

On Jan 17, 2008 4:54 PM, Eduardo Matus <ematus at gmail.com> wrote:
> hey.. the code is to.... dirty.. but look this...
>
> reactor.callLater(3,f)
>
> for x in range(100000000000000): # for example... a big time-consumption
>        #do something
> reactor.callLater(3,g)
>
> the 'g' method will not start at the same time of 'f'

Twisted is an asynchronous framework. Your code needs to not block for
long times in order for it to function properly, so don't block for a
long time in 'f' and everything will be fine.

If you really need to run some blocking function, maybe you want to
use a thread, in which case something like
twisted.internet.threads.deferToThread is desirable.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Thu Jan 17 17:08:20 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Jan 2008 17:08:20 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <20080117220820.31425.1202006711.divmod.quotient.6120@ohm>

On Thu, 17 Jan 2008 18:54:54 -0300, Eduardo Matus <ematus at gmail.com> wrote:
>hey.. the code is to.... dirty.. but look this...
>
>reactor.callLater(3,f)
>
>for x in range(100000000000000): # for example... a big time-consumption
>       #do something
>reactor.callLater(3,g)
>
>the 'g' method will not start at the same time of 'f'
>

Quite so.  Also, network events will go unserviced.  Generally
speaking, you should not do "big time-consuming" things in the
reactor thread.

However, if that is not otherwise a problem for your application,
then you can achieve the goal like this:

    for x in range(1 * 10 ** 14):
        # do something
    reactor.callLater(3, f)
    reactor.callLater(3, g)

You could also put both of the callLater calls before the loop.

There's no API which lets you say "call f 3 seconds from when I
say go... go!"  callLater means "3 seconds from now" (ignoring clock
adjustment issues).

Jean-Paul



From drew.smathers at gmail.com  Thu Jan 17 17:11:22 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Jan 2008 17:11:22 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
	<984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <368574aa0801171411g382b7912u6d0208d7dd08871a@mail.gmail.com>

On Jan 17, 2008 4:54 PM, Eduardo Matus <ematus at gmail.com> wrote:

> hey.. the code is to.... dirty.. but look this...
>
> reactor.callLater(3,f)
>
> for x in range(100000000000000): # for example... a big time-consumption
>        #do something
> reactor.callLater(3,g)
>
> the 'g' method will not start at the same time of 'f'
>


You would want to schedule your calls before doing CPU-intensive work.  And
you don't want to do CPU-intensive work in the same thread as the reactor
anyways because this is equivalent to blocking.  Consider putting whatever
takes a lot of time in a separate process or a in a thread pool via
deferToThread.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080117/f0501791/attachment.htm 

From bnsmith at gmail.com  Fri Jan 18 16:23:24 2008
From: bnsmith at gmail.com (Brad Smith)
Date: Fri, 18 Jan 2008 16:23:24 -0500
Subject: [Twisted-Python] Newbie question about error handling.
Message-ID: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>

I'm working on a client/server twisted app based on LineReceiver, and
I'd like to implement better error-handling. The code for the server
looks something like this:

class MyServer(LineReceiver):
    def lineReceived(self, line):
        pass # stuff happens

    def rawDataReceived(self, data):
        pass # other stuff happens

    # maybe some other methods too

factory = Factory()
factory.protocol = MyServer

reactor.listenTCP(8000, factory)
reactor.run()

Suppose that an exception is thrown in lineReceived or
rawDataReceived, maybe just something as simple as a naming error
caused by a misspelled variable name. Is there any way to implement a
default exception handler that would allow me to send something back
to the client before the protocol dies? It would be nice to send the
exception traceback to the client to help figure out what went wrong.
I suppose I could wrap all of the methods in the class in a try/catch
block, but that would be a lot of wrapping to do. I'd prefer to be
able to do something like adding a 'defaultExceptionHandler' method to
the LineReceiver derived class that would be called by the reactor.

Is something like this possible? I'm still pretty new to Twisted, so I
don't know all the idioms yet.



From drew.smathers at gmail.com  Fri Jan 18 18:03:39 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 18 Jan 2008 18:03:39 -0500
Subject: [Twisted-Python] Newbie question about error handling.
In-Reply-To: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
References: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
Message-ID: <368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>

On Jan 18, 2008 4:23 PM, Brad Smith <bnsmith at gmail.com> wrote:

> Suppose that an exception is thrown in lineReceived or
> rawDataReceived, maybe just something as simple as a naming error
> caused by a misspelled variable name. Is there any way to implement a
> default exception handler that would allow me to send something back
> to the client before the protocol dies? It would be nice to send the
> exception traceback to the client to help figure out what went wrong.
> I suppose I could wrap all of the methods in the class in a try/catch
> block, but that would be a lot of wrapping to do. I'd prefer to be
> able to do something like adding a 'defaultExceptionHandler' method to
> the LineReceiver derived class that would be called by the reactor.
>

It will save you more time to fix such a critical bug as a naming error
rather than build a protocol to only tell the client the server is broken.
However to answer your question, no.

Remember from the Zen of Python: "explicit is better than implicit" so to
handle legitimate errors you should define what exceptions are likely to
occur and incorporate these in your protocol design for error feedback to
the client.  If you want some kill-all exception handler for all your
protocols, consider writing a decorator:

@sendTraceback
def lineReceived(self, line):
    pass # do stuff


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080118/f200a265/attachment.htm 

From k_r_a_j_kumar at yahoo.co.in  Sat Jan 19 08:38:01 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Sat, 19 Jan 2008 19:08:01 +0530 (IST)
Subject: [Twisted-Python] read all the elements of xml file
Message-ID: <265669.9440.qm@web8707.mail.in.yahoo.com>

Hi,

 I am using following code

 

----------------------------------------------------------------------------------------  

    content = microdom.parse(xmlfile)

    allnodes = content.getElementsByTagName("*")

    

    for eachnode in allnodes

        print "each node %s"  % eachnode

---------------------------------------------------------------------------------------



But getElement("*") is not working... which I used to get all the
element but it is not working. If i give any tagname then it is working.

how to get all the elemets with single statement. Because i have
different elements in that xml file. Is there any other way to get all
the elements? 

Am i doing anything wrong in that?



Thank you in advance.





      Get the freedom to save as many mails as you wish. To know how, go to http://help.yahoo.com/l/in/yahoo/mail/yahoomail/tools/tools-08.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080119/00e73799/attachment.htm 

From sipickles at hotmail.com  Sat Jan 19 08:41:40 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 19 Jan 2008 13:41:40 +0000
Subject: [Twisted-Python] Closing connections properly
Message-ID: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>

Hi,

Having a simple server based on a LineReceiver, what is the proper way 
to close connections and delete the class containing those connections 
(the class built by BuildProtocol()).

Given the simple code below, Protocol.BuildProtocol is called when I 
client connections, and builds and instance of the class Connection. 
When the client disconnects, Connection.connectionLost is called, but 
the instance continues (__del__ is never called). I even naively tried 
added a 'del self' statement to the connectionLost method, but its not 
c++ 'delete this'!

How should I delete the closed connection? Is there something in twisted 
I can overload, or should I use the server to track connections better 
and perform my deleting there?

Thanks

Simon

Example
--------------

class Connection(basic.LineReceiver):
    def __init__(self):
        self.ipAddress = "000.000.000.000"
        self.port = 0
        logger.CON("Opening new connection")

    def __del__(self): # never called
        logger.CON("Closed connection to %s:%d" % (self.ipAddress, 
self.port))

       
    def connectionMade(self):
        """ Overrides method in basic.LineReceiver """
        self.ipAddress = self.transport.getPeer().host
        self.port = self.transport.getPeer().port
        logger.CON("Log in attempt from %s:%d" % (self.ipAddress, 
self.port))
 
    def connectionLost(self, reason):
        """ Overrides method in basic.LineReceiver """
        logger.CON("%s:%d has closed the connection, %s" % 
(self.ipAddress, self.port, reason))
        self.transport.loseConnection()

    def dataReceived(self, data):
        """ Overrides method in basic.LineReceiver """
        logger.CON("%s:%d received %s" % (self.ipAddress, self.port, data))
 

class Server(Protocol):
    factory = Factory()
    factory.protocol = Connection
    def __init__(self, maxClients):
        self.max_clients = maxClients
        logger.NET("Server started")

    def doStart(self):
        logger.NET("Port: %d" % globalVars.zoneAddress[1])
        logger.NET("...... waiting for a connection ......")
    def doStop(self):
        logger.NET("Server is now closed")

    def buildProtocol(self, addr):
        logger.NET("Connection attempt....")
        return Connection()



-- 
Linux user #458601 - http://counter.li.org.






From christian.simms at gmail.com  Sat Jan 19 09:41:58 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Sat, 19 Jan 2008 09:41:58 -0500
Subject: [Twisted-Python] Closing connections properly
In-Reply-To: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>
References: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>
Message-ID: <cd8fa6f90801190641w3e4b78c3kcc87e8d205c984fc@mail.gmail.com>

On Jan 19, 2008 8:41 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hi,
>
> Having a simple server based on a LineReceiver, what is the proper way
> to close connections and delete the class containing those connections
> (the class built by BuildProtocol()).
>
> Given the simple code below, Protocol.BuildProtocol is called when I
> client connections, and builds and instance of the class Connection.
> When the client disconnects, Connection.connectionLost is called, but
> the instance continues (__del__ is never called). I even naively tried
> added a 'del self' statement to the connectionLost method, but its not
> c++ 'delete this'!
>
> How should I delete the closed connection? Is there something in twisted
> I can overload, or should I use the server to track connections better
> and perform my deleting there?
>
> Thanks
>
> Simon
>
> Example
> --------------
>
> class Connection(basic.LineReceiver):
>     def __init__(self):
>         self.ipAddress = "000.000.000.000"
>         self.port = 0
>         logger.CON("Opening new connection")
>
>     def __del__(self): # never called
>         logger.CON("Closed connection to %s:%d" % (self.ipAddress,
> self.port))
>
>
>     def connectionMade(self):
>         """ Overrides method in basic.LineReceiver """
>         self.ipAddress = self.transport.getPeer().host
>         self.port = self.transport.getPeer().port
>         logger.CON("Log in attempt from %s:%d" % (self.ipAddress,
> self.port))
>
>     def connectionLost(self, reason):
>         """ Overrides method in basic.LineReceiver """
>         logger.CON("%s:%d has closed the connection, %s" %
> (self.ipAddress, self.port, reason))
>         self.transport.loseConnection()
>
>     def dataReceived(self, data):
>         """ Overrides method in basic.LineReceiver """
>         logger.CON("%s:%d received %s" % (self.ipAddress, self.port, data))
>
>
> class Server(Protocol):
>     factory = Factory()
>     factory.protocol = Connection
>     def __init__(self, maxClients):
>         self.max_clients = maxClients
>         logger.NET("Server started")
>
>     def doStart(self):
>         logger.NET("Port: %d" % globalVars.zoneAddress[1])
>         logger.NET("...... waiting for a connection ......")
>     def doStop(self):
>         logger.NET("Server is now closed")
>
>     def buildProtocol(self, addr):
>         logger.NET("Connection attempt....")
>         return Connection()
>
>
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

You should not rely on Python's garbage collector to track your open
connections, since you don't how long the garbage collector will wait
until it deletes your object. Instead, you should just track your own
list of connections in the Factory object.

Cheers,
Christian



From christian.simms at gmail.com  Sat Jan 19 09:49:57 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Sat, 19 Jan 2008 09:49:57 -0500
Subject: [Twisted-Python] read all the elements of xml file
In-Reply-To: <265669.9440.qm@web8707.mail.in.yahoo.com>
References: <265669.9440.qm@web8707.mail.in.yahoo.com>
Message-ID: <cd8fa6f90801190649y510fcc0fw88bbbbef2bf1746c@mail.gmail.com>

On Jan 19, 2008 8:38 AM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
>
> Hi,
>   I am using following code
>
>
> ----------------------------------------------------------------------------------------
>      content = microdom.parse(xmlfile)
>      allnodes = content.getElementsByTagName("*")
>
>      for eachnode in allnodes
>          print "each node %s"  % eachnode
>
> ---------------------------------------------------------------------------------------
>
>  But getElement("*") is not working... which I used to get all the element
> but it is not working. If i give any tagname then it is working.
>  how to get all the elemets with single statement. Because i have different
> elements in that xml file. Is there any other way to get all the elements?
>  Am i doing anything wrong in that?
>
>  Thank you in advance.
>  ________________________________
>  5, 50, 500, 5000 - Store N number of mails in your inbox. Click here.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

Your code doesn't work because microdom is a simple API and doesn't
have all the bells and whistles of complex DOM implementations.  That
being said, I like it and use it.  In fact, the code is simple enough
you can just look at it to see what functions are available - just
look at twisted/web/microdom.py and twisted/web/domhelpers.py.
Anyway, for your example you can do:

   from twisted.web import domhelpers
   allnodes = domhelpers.findElements(content, lambda n: True)

The second parameter is a function to filter matching elements, in
this case the lambda function is returning all elements.

Cheers,
Christian



From exarkun at divmod.com  Sat Jan 19 11:34:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 Jan 2008 11:34:13 -0500
Subject: [Twisted-Python] read all the elements of xml file
In-Reply-To: <265669.9440.qm@web8707.mail.in.yahoo.com>
Message-ID: <20080119163413.15391.917215133.divmod.quotient.178@ohm>

On Sat, 19 Jan 2008 19:08:01 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>
> I am using following code
>----------------------------------------------------------------------------------------
>
>    content = microdom.parse(xmlfile)
>
>    allnodes = content.getElementsByTagName("*")
>
>
>
>    for eachnode in allnodes
>
>        print "each node %s"  % eachnode
>

I strongly recommend using a different XML library, such as xml.dom.minidom.
twisted.web.microdom will fail to perform many of the tasks you would expect
from a general purpose DOM library.

Jean-Paul



From bnsmith at gmail.com  Sat Jan 19 13:56:26 2008
From: bnsmith at gmail.com (Brad Smith)
Date: Sat, 19 Jan 2008 13:56:26 -0500
Subject: [Twisted-Python] Newbie question about error handling.
In-Reply-To: <368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>
References: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
	<368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>
Message-ID: <dd0fcc680801191056p3cf1490bq9e74a8113261ccc3@mail.gmail.com>

You've given me two really good ideas to mull over. Of course, the
decorator method would work. It was like a flash of light as soon as I
read it... but now I'm not sure if I should...

Thanks for the help.

On Jan 18, 2008 6:03 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Jan 18, 2008 4:23 PM, Brad Smith <bnsmith at gmail.com> wrote:
>
> > Suppose that an exception is thrown in lineReceived or
> > rawDataReceived, maybe just something as simple as a naming error
> > caused by a misspelled variable name. Is there any way to implement a
> > default exception handler that would allow me to send something back
> > to the client before the protocol dies? It would be nice to send the
> > exception traceback to the client to help figure out what went wrong.
> > I suppose I could wrap all of the methods in the class in a try/catch
> > block, but that would be a lot of wrapping to do. I'd prefer to be
> > able to do something like adding a 'defaultExceptionHandler' method to
> > the LineReceiver derived class that would be called by the reactor.
> >
>
> It will save you more time to fix such a critical bug as a naming error
> rather than build a protocol to only tell the client the server is broken.
> However to answer your question, no.
>
> Remember from the Zen of Python: "explicit is better than implicit" so to
> handle legitimate errors you should define what exceptions are likely to
> occur and incorporate these in your protocol design for error feedback to
> the client.  If you want some kill-all exception handler for all your
> protocols, consider writing a decorator:
>
> @sendTraceback
> def lineReceived(self, line):
>     pass # do stuff
>
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From exarkun at twistedmatrix.com  Sun Jan 20 00:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Jan 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1200805507.72.974020360@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080120/f1317232/attachment.htm 

From xavier at sydesy.com  Mon Jan 21 10:53:00 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Mon, 21 Jan 2008 16:53:00 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
Message-ID: <2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>

Hello,

My goal is to be able to access contacts that are into a (open source)
CRM from any LDAP compatible client (mostly email clients that can
access an LDAP server as a shared contact database).

This is a fairly simple LDAP server, mostly implementing search on
emails and get contacts back (+a very simple ACL).

I read a post from Tommi Virtanen a (few) years ago
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
And found more information on :
http://www.inoi.fi/open/trac/ldaptor
I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py

However, I'm kind of lost now and didn't find any examples (or
discussion), and was wondering about the status of the ldap server. If
this is still active, could you tell me where to find more info and
hopefully some examples ?

I saw this thread:
http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
about "ldaptor and bind"

If I read properly, the ldap server is something for testing, but not
production ready (eg no security/acl implemented by default). Am I
right ? Did Ottavio Campana manage to have something working and did
he publish the result of his modifications ?

In short, is there a simple example of a server with a sql backend,
that implement searches ?

thanks in advance,

Xavier



From p.mayers at imperial.ac.uk  Tue Jan 22 06:37:53 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 22 Jan 2008 11:37:53 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DED2C.8030709@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>	<478DE7E7.4010204@pollenation.net>	<478DEA49.30906@pollenation.net>
	<478DED2C.8030709@pollenation.net>
Message-ID: <4795D591.50408@imperial.ac.uk>

> 
> Grepping the Twisted code suggests this is a "problem" that is not
> really worth trying to fix fully. It's probably best to just avoid the
> problem by making sure you get to install your choice of reactor before
> anything else.

When I ran into this issue and asked, that is what I was told.

i.e. in real terms this means:

#!/usr/bin/python

# DO THIS BEFORE *ANYTHING* ELSE!!!
from twisted.internet import glib2reactor
glib2reactor.install()

# only then start importing things
from twisted.internet import defer
from twisted.python import utils

# ...etc

> 
> Of course, if you use the twistd daemon installing a specific reactor at
> the correct time is easy, by using the --reactor flag.





From xavier at sydesy.com  Tue Jan 22 12:06:59 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Tue, 22 Jan 2008 18:06:59 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
Message-ID: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>

Hello,

My goal is to be able to access contacts that are into a (open source)
CRM from any LDAP compatible client (mostly email clients that can
access an LDAP server as a shared contact database).

This is a fairly simple LDAP server, mostly implementing search on
emails and get contacts back (+a very simple ACL).

I read a post from Tommi Virtanen a (few) years ago
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
And found more information on :
http://www.inoi.fi/open/trac/ldaptor
I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py

However, I'm kind of lost now and didn't find any examples (or
discussion), and was wondering about the status of the ldap server. If
this is still active, could you tell me where to find more info and
hopefully some examples ?

I saw this thread:
http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
about "ldaptor and bind"

If I read properly, the ldap server is something for testing, but not
production ready (eg no security/acl implemented by default). Am I
right ? Did Ottavio Campana manage to have something working and did
he publish the result of his modifications ?

In short, is there a simple example of a server with a sql backend,
that implement searches ?

thanks in advance,

Xavier



From pm-twisted-python at anapol.cz  Wed Jan 23 05:56:59 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Wed, 23 Jan 2008 11:56:59 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
Message-ID: <47971D7B.1020300@anapol.cz>

Hi,

why not just use OpenLDAP's slapd-sql backend, until Ldaptor will "rise 
to World Domination some day" ;) ? That backend was designed 
specifically to solve the cases you describe, i think. As i've some 
rather good experience with Ldaptor's client part, i've never used the 
(unfinished) server parts though. But i haven't used the slapd-sql 
backend either ;) .

Petr

xavier dutoit napsal(a):
> Hello,
> 
> My goal is to be able to access contacts that are into a (open source)
> CRM from any LDAP compatible client (mostly email clients that can
> access an LDAP server as a shared contact database).
> 
> This is a fairly simple LDAP server, mostly implementing search on
> emails and get contacts back (+a very simple ACL).
> 
> I read a post from Tommi Virtanen a (few) years ago
> http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
> And found more information on :
> http://www.inoi.fi/open/trac/ldaptor
> I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py
> 
> However, I'm kind of lost now and didn't find any examples (or
> discussion), and was wondering about the status of the ldap server. If
> this is still active, could you tell me where to find more info and
> hopefully some examples ?
> 
> I saw this thread:
> http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
> about "ldaptor and bind"
> 
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?
> 
> In short, is there a simple example of a server with a sql backend,
> that implement searches ?
> 
> thanks in advance,
> 
> Xavier
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From xavier at sydesy.com  Wed Jan 23 06:32:00 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Wed, 23 Jan 2008 12:32:00 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <47971D7B.1020300@anapol.cz>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
	<47971D7B.1020300@anapol.cz>
Message-ID: <2617b9b70801230332k22a5f626n874edcefa0ab3e60@mail.gmail.com>

 > why not just use OpenLDAP's slapd-sql backend, until Ldaptor will "rise
> to World Domination some day" ;) ? That backend was designed
> specifically to solve the cases you describe, i think. As i've some
> rather good experience with Ldaptor's client part, i've never used the
> (unfinished) server parts though. But i haven't used the slapd-sql
> backend either ;) .

Hi,

That was another option I had in mind, but I wanted to be amongs the
first using ldaptor, to be able to impress my grand children and tell
them that I did use it before it rised to world domination ! I'll try
the openldap way, but for the record, and in case the ldaptor
inforcement squad comes home: I did try ;)

X+
> Petr
>
> xavier dutoit napsal(a):
> > Hello,
> >
> > My goal is to be able to access contacts that are into a (open source)
> > CRM from any LDAP compatible client (mostly email clients that can
> > access an LDAP server as a shared contact database).
> >
> > This is a fairly simple LDAP server, mostly implementing search on
> > emails and get contacts back (+a very simple ACL).
> >
> > I read a post from Tommi Virtanen a (few) years ago
> > http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
> > And found more information on :
> > http://www.inoi.fi/open/trac/ldaptor
> > I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py
> >
> > However, I'm kind of lost now and didn't find any examples (or
> > discussion), and was wondering about the status of the ldap server. If
> > this is still active, could you tell me where to find more info and
> > hopefully some examples ?
> >
> > I saw this thread:
> > http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
> > about "ldaptor and bind"
> >
> > If I read properly, the ldap server is something for testing, but not
> > production ready (eg no security/acl implemented by default). Am I
> > right ? Did Ottavio Campana manage to have something working and did
> > he publish the result of his modifications ?
> >
> > In short, is there a simple example of a server with a sql backend,
> > that implement searches ?
> >
> > thanks in advance,
> >
> > Xavier
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From steve at holdenweb.com  Wed Jan 23 08:04:56 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 08:04:56 -0500
Subject: [Twisted-Python] Teach Me Twisted?
Message-ID: <fn7e1q$qbj$1@ger.gmane.org>

Hi, Twisters:

I've been lurking on the list a while, and wondered how much of a 
Twisted presence there is going to be at PyCon in March.

The reason I ask is because of a conversation that I had with Glyph 
recently.  We both agreed that it would be a good thing to have more 
learning materials available for Twisted.

One possible solution would be to run an open space session at PyCon in 
which experienced users explain to a novice how to get started in the 
Twisted environment.

Of course the idea is that I should be the novice (I really don't know 
that much about Twisted) and that you should be the people explaining to 
me and (hopefully) leading me through to the Nirvana of twisted 
enlightenment.

Naturally this idea won't work unless experienced Twisted users get 
behind it.  I would like your suggestions for preliminary reading, 
though I don't want around arrive at the conference knowing too much.

Is this a good idea?

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From programmer.py at gmail.com  Wed Jan 23 08:45:24 2008
From: programmer.py at gmail.com (Jaime Wyant)
Date: Wed, 23 Jan 2008 07:45:24 -0600
Subject: [Twisted-Python] Teach Me Twisted?
In-Reply-To: <fn7e1q$qbj$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
Message-ID: <d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>

I think this is a wonderful idea.  But, be sure to remember those not
fortunate enough to attend PyCon (me :)), and keep transcripts or video, or
some medium.

But the big question is, what will they teach you?  You should have an idea
of some type of network application you want to build.  Obviously it should
be something that would touch on a lot of different facets of twisted.  Or
maybe it would be better to have smaller "example" applications that show
off neat things like conch.

However it pans out, I definitely think this is a great idea...

jw

On Jan 23, 2008 7:04 AM, Steve Holden <steve at holdenweb.com> wrote:

> Hi, Twisters:
>
> I've been lurking on the list a while, and wondered how much of a
> Twisted presence there is going to be at PyCon in March.
>
> The reason I ask is because of a conversation that I had with Glyph
> recently.  We both agreed that it would be a good thing to have more
> learning materials available for Twisted.
>
> One possible solution would be to run an open space session at PyCon in
> which experienced users explain to a novice how to get started in the
> Twisted environment.
>
> Of course the idea is that I should be the novice (I really don't know
> that much about Twisted) and that you should be the people explaining to
> me and (hopefully) leading me through to the Nirvana of twisted
> enlightenment.
>
> Naturally this idea won't work unless experienced Twisted users get
> behind it.  I would like your suggestions for preliminary reading,
> though I don't want around arrive at the conference knowing too much.
>
> Is this a good idea?
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
"Government does not solve problems; it subsidizes them."
Ronald Reagan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080123/f82d0101/attachment.htm 

From steve at holdenweb.com  Wed Jan 23 10:18:18 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 10:18:18 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
Message-ID: <47975ABA.3080901@holdenweb.com>

Jaime Wyant wrote:
> I think this is a wonderful idea.  But, be sure to remember those not 
> fortunate enough to attend PyCon (me :)), and keep transcripts or video, 
> or some medium.
> 
I plan to make my own audio recording, so at the very least I can 
transcribe it with Naturally Speaking and edit it for the web. I am not 
currently sure what plans PyCon has for supporting Open Space sessions. 
Sorry you won't be able to make it to PyCon :-(

Aside: do you know that financial support may be available? See

http://pyfound.blogspot.com/2008/01/pycon-2008-financial-aid-available.html

> But the big question is, what will they teach you?  You should have an 
> idea of some type of network application you want to build.  Obviously 
> it should be something that would touch on a lot of different facets of 
> twisted.  Or maybe it would be better to have smaller "example" 
> applications that show off neat things like conch.
> 
That's a good point. Maybe there should be two sessions? One could focus 
on "Twisted principles" and establish the absolute must-know information 
that forms the basis of everyone's knowledge (except, currently, mine).

The seconds could then focus on how to build a small application (an 
echo server? With Twisted that would surely be way too easy: I need 
community help in choosing a task of about the right scope).

> However it pans out, I definitely think this is a great idea...
> 
Thanks very much for your feedback. Without feedback this idea won't get 
anywhere. I'd like it to offer some sort of return to the Twisted 
community for the enthusiastic support its members gave to PyCon back in 
the early days.

Note to everyone: I also need clues for reading *before* the session. 
Assume I have very little time ...

regards
  Steve

> jw
> 
> On Jan 23, 2008 7:04 AM, Steve Holden <steve at holdenweb.com 
> <mailto:steve at holdenweb.com>> wrote:
> 
>     Hi, Twisters:
> 
>     I've been lurking on the list a while, and wondered how much of a
>     Twisted presence there is going to be at PyCon in March.
> 
>     The reason I ask is because of a conversation that I had with Glyph
>     recently.  We both agreed that it would be a good thing to have more
>     learning materials available for Twisted.
> 
>     One possible solution would be to run an open space session at PyCon in
>     which experienced users explain to a novice how to get started in the
>     Twisted environment.
> 
>     Of course the idea is that I should be the novice (I really don't know
>     that much about Twisted) and that you should be the people explaining to
>     me and (hopefully) leading me through to the Nirvana of twisted
>     enlightenment.
> 
>     Naturally this idea won't work unless experienced Twisted users get
>     behind it.  I would like your suggestions for preliminary reading,
>     though I don't want around arrive at the conference knowing too much.
> 
>     Is this a good idea?
> 
>     regards
>      Steve
>     --
>     Steve Holden        +1 571 484 6266   +1 800 494 3119
>     Holden Web LLC              http://www.holdenweb.com/
>     <http://www.holdenweb.com/>
> 
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> "Government does not solve problems; it subsidizes them."
> Ronald Reagan
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andrewfr_ice at yahoo.com  Wed Jan 23 13:08:02 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 23 Jan 2008 10:08:02 -0800 (PST)
Subject: [Twisted-Python] Teach Me Twisted?
In-Reply-To: <E1JHixI-00069z-DU@cube.twistedmatrix.com>
Message-ID: <558151.98564.qm@web34215.mail.mud.yahoo.com>

Hi Steve:

>I've been lurking on the list a while, and wondered
>how much of a Twisted presence there is going to be
at >PyCon in March.

Good question. I am giving a talk called "Adventures
in Stackless Python/Twisted Integration." The talk has
been labelled "advanced."

However for me, a large part of the "adventure" is
slowly learning Twisted and Stackless concepts. So I
really want to capture newbie misconceptions, the
pitfalls, the "you shouldn't do that" advice, and the
cool things you can do once you get the swing of
things. And finally, where do we go from here?

One of things I will do is use diagrams to show
control flow in Twisted in Stackless. I feel the Abe
Fettig book and the Stackless literature would be
greatly improved if it has more illustrations of this
sort.

>One possible solution would be to run an open space
>session at PyCon in which experienced users explain
to >a novice how to get started in the Twisted
>environment.

Well no one from Twisted has contacted me (on the
other hand, I have talked a bit with Christian since
he has a Stackless and PyPy talk). However I would
love to help novices get on board.

Cheers,
Andrew







      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From ottavio at campana.vi.it  Wed Jan 23 13:24:10 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Wed, 23 Jan 2008 19:24:10 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
Message-ID: <4797864A.6070802@campana.vi.it>

xavier dutoit ha scritto:
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?

Yes, I got something useful, it's going to be deployed soon but 
eventually I didn't come out with acls. Even though I have to say 
ldaptor fits well in my project and for some aspects I'm happier than 
with openldap.

> In short, is there a simple example of a server with a sql backend,
> that implement searches ?

I have a web application I wrote with twisted web. This application 
saves data in a sqlite file. Whenever the user modifies it from the web, 
the application updates also the files used by ldaptor, since what I 
need is only to export them with ldap.

It does not have acls, but I managed to get something similar by 
patching how the ldap server works. Moreover, to prevent corruption I 
modified how operations different from search behave.

What do you want to do?

About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly 
everything I needed, give al look also to ldaptor/ldiftree.py to see how 
not to store everything in memory but in a filesystem. Also give a look 
at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac

I hope it is enough, I've been able to understand how it works from 
these files.

Bye,

Ottavio

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080123/5979f140/attachment.pgp 

From steve at holdenweb.com  Wed Jan 23 13:36:36 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 13:36:36 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <558151.98564.qm@web34215.mail.mud.yahoo.com>
References: <E1JHixI-00069z-DU@cube.twistedmatrix.com>
	<558151.98564.qm@web34215.mail.mud.yahoo.com>
Message-ID: <fn81fk$7te$1@ger.gmane.org>

Andrew Francis wrote:
> Hi Steve:
> 
>> I've been lurking on the list a while, and wondered
>> how much of a Twisted presence there is going to be
> at >PyCon in March.
> 
> Good question. I am giving a talk called "Adventures
> in Stackless Python/Twisted Integration." The talk has
> been labelled "advanced."
> 
> However for me, a large part of the "adventure" is
> slowly learning Twisted and Stackless concepts. So I
> really want to capture newbie misconceptions, the
> pitfalls, the "you shouldn't do that" advice, and the
> cool things you can do once you get the swing of
> things. And finally, where do we go from here?
> 
> One of things I will do is use diagrams to show
> control flow in Twisted in Stackless. I feel the Abe
> Fettig book and the Stackless literature would be
> greatly improved if it has more illustrations of this
> sort.
> 
>> One possible solution would be to run an open space
>> session at PyCon in which experienced users explain
> to >a novice how to get started in the Twisted
>> environment.
> 
> Well no one from Twisted has contacted me (on the
> other hand, I have talked a bit with Christian since
> he has a Stackless and PyPy talk). However I would
> love to help novices get on board.
> 
Great. I'll try to attend your talk, and any ideas you have to help with 
"Teach Me Twisted" will be warmly welcomed. The idea is to try to leave 
something behind that will help others engage with Twisted more quickly 
and effectively (though I should point out there are no guarantees of 
success).

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From paul at subsignal.org  Wed Jan 23 18:18:02 2008
From: paul at subsignal.org (paul)
Date: Thu, 24 Jan 2008 00:18:02 +0100
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <47975ABA.3080901@holdenweb.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com>
Message-ID: <fn8hv6$4hu$1@ger.gmane.org>

Steve Holden schrieb:
> Jaime Wyant wrote:
>> I think this is a wonderful idea.  But, be sure to remember those not 
>> fortunate enough to attend PyCon (me :)), and keep transcripts or 
>> video, or some medium.
>>
> I plan to make my own audio recording, so at the very least I can 
> transcribe it with Naturally Speaking and edit it for the web. I am not 
> currently sure what plans PyCon has for supporting Open Space sessions. 
> Sorry you won't be able to make it to PyCon :-(
> 
> Aside: do you know that financial support may be available? See
> 
> http://pyfound.blogspot.com/2008/01/pycon-2008-financial-aid-available.html
> 
>> But the big question is, what will they teach you?  You should have an 
>> idea of some type of network application you want to build.  Obviously 
>> it should be something that would touch on a lot of different facets 
>> of twisted.  Or maybe it would be better to have smaller "example" 
>> applications that show off neat things like conch.
>>
> That's a good point. Maybe there should be two sessions? One could focus 
> on "Twisted principles" and establish the absolute must-know information 
> that forms the basis of everyone's knowledge (except, currently, mine).
> 
> The seconds could then focus on how to build a small application (an 
> echo server? With Twisted that would surely be way too easy: I need 
> community help in choosing a task of about the right scope).
How about a twisted version of the (in)famous "webapp in 20 minutes"? 
Maybe not a stupid blog but some kind of remote management by using 
conch? That would be:
- simple persistence (maybe just files but async)
- business logic (conch connecting to a host and doing stuff)
- presentation layer with web or web2

I did something like that a few month back and had a hard time gathering 
all the pieces of information ;) I still can't believe I have to parse 
raw response strings to handle POST ;))

cheers
  Paul





From clemesha at gmail.com  Wed Jan 23 19:10:59 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 23 Jan 2008 16:10:59 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fn8hv6$4hu$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
Message-ID: <d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>

Hi there,

Thanks Steve Holden for organizing this, it's a great idea.

I've been using twisted for about a year now and I love it,
I'm a classic case of (as you can read all over the web):
 "after the learning curve, you'll love Twisted"
so, yeah, more learning materials would be great for those starting out.

Some nice topics might include:

a) Start off simple with a "twisted.web2" example (everyone "gets" http)

b) then plug that into a simple sqlite database using "twisted.enterprise"

c) then plug some simple usage of "twisted.pb" that does something
    in the backend, that gets presented to the pages being served by "
twisted.web2"

d) Show how using "twistd" is really convient
(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some logging
capability, etc)

Anyways, these are just random ideas, but they are things that took me a
while to
get going with, but now I find them so clean and useful.


Regarding Paul's post:

I did something like that a few month back and had a hard time gathering
> all the pieces of information ;) I still can't believe I have to parse
> raw response strings to handle POST ;))


You don't!  This is all you need:

from twisted.web2 import resource, http, http_headers

CTYPE = {'content-type': http_headers.MimeType('text', 'html',
{'charset':'utf-8'})}

GetSomePostData(resource.PostableResource):

    def render(self, request):
        postval0 = request.args.get("val0", [""])[0]
        postval1 = request.args.get("val1", [""])[0]
        html = myhtmltemplates.comment_form_response(postval0, postval1)
#for example
        return http.Response(200, CTYPE, html)


- Alex
















>
>
> cheers
>  Paul
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080123/c4f124dd/attachment.htm 

From glyph at divmod.com  Wed Jan 23 19:36:42 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 24 Jan 2008 00:36:42 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
Message-ID: <20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>

On 12:10 am, clemesha at gmail.com wrote:
>Thanks Steve Holden for organizing this, it's a great idea.

Indeed!
>Some nice topics might include:

Thanks for the suggestions.  Do you have any others?  :-)  I hate to 
rain on your parade here, but I think maybe my explanation of why I 
don't like these suggestions will spark discussion of more different 
ones...
>a) Start off simple with a "twisted.web2" example (everyone "gets" 
>http)

I think that this is actually something we should avoid in a tutorial. 
The web situation in Twisted is complicated 
(http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).  web2 in 
particular is suffering from an extreme lack of maintenance and still 
has never "officially" been released; work is just starting to get 
underway to unify t.web2 and nevow into t.web and reduce the confusion, 
but this is all still in progress and who knows when, how, or even if it 
will be completed.  If you get a group of experienced Twisted folks 
together to talk about writing web applications, you're more likely to 
spark a debate than an educational session.

Even if all these problems were fixed, and there were a really good, 
well-supported, universally understood web server for Twisted, the 
benefits of Twisted's programming model are not immediately obvious to 
the bread and butter of the web programming world.  Learning how to use 
some combination of Twisted tools to generate a web page will always be 
at least a little bit harder than writing the sort of glorified CGI 
script that most web frameworks require these days - unless you're using 
something like Athena, which might be too much complexity to address in 
a single tutorial session.  (And while Athena is more polished and "one 
right way" than the lower-level HTTP stuff, there is still a painful 
dearth of documentation, not to mention the fact that you need to write 
JavaScript as well as Python.)

Twisted really shines best when you're writing a client as well as a 
server.  Chat is the quintessential application where Twisted makes the 
most sense - and the lack of a well-documented chat server is much less 
of a problem than the lack of a well-documented web server, since you 
can easily define a wire protocol and wacky semantics for your purpose- 
built tutorial chat application.
>b) then plug that into a simple sqlite database using 
>"twisted.enterprise"

twisted.enterprise is similarly a scary and inconsistent area, and 
requires understanding the interaction of the DB thread and the reactor 
thread.  (And at least part of this section would have to be dedicated 
to "and never, ever touch anything in this package aside from adbapi".)
>d) Show how using "twistd" is really convient
>(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some 
>logging
>capability, etc)

This, however, is a great suggestion.  Twisted plugins should be part of 
this discussion.



From clemesha at gmail.com  Wed Jan 23 20:18:26 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 23 Jan 2008 17:18:26 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
Message-ID: <d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>

On Jan 23, 2008 4:36 PM, <glyph at divmod.com> wrote:

> On 12:10 am, clemesha at gmail.com wrote:
> >Thanks Steve Holden for organizing this, it's a great idea.
>
> Indeed!
> >Some nice topics might include:
>
> Thanks for the suggestions.  Do you have any others?  :-)


For my usage of twisted, these are important to me and I am
the most familiar with them. (See below)


I hate to
> rain on your parade here, but I think maybe my explanation of why I
> don't like these suggestions will spark discussion of more different
> ones...
> >a) Start off simple with a "twisted.web2" example (everyone "gets"
> >http)
>
> I think that this is actually something we should avoid in a tutorial.
> The web situation in Twisted is complicated
> (http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).  web2 in
> particular is suffering from an extreme lack of maintenance and still
> has never "officially" been released; work is just starting to get
> underway to unify t.web2 and nevow into t.web and reduce the confusion,
> but this is all still in progress and who knows when, how, or even if it
> will be completed.


Oh yes, I know, I know.  While learning twisted I read *most* (that's alot
;)
of posts to the twisted-web mailing list.  So I am very familiar with the
state.

That said, oh how I wish you guys could make twisted.web2 the one and
only!!!
It would be good for beginners and others alike.

Note however: I can only barely imagine how hard that might be,
so I am *definitely not* complaining ... Twisted is excellent, thanks very
much for it.


If you get a group of experienced Twisted folks
> together to talk about writing web applications, you're more likely to
> spark a debate than an educational session.
>
> Even if all these problems were fixed, and there were a really good,
> well-supported, universally understood web server for Twisted, the
> benefits of Twisted's programming model are not immediately obvious to
> the bread and butter of the web programming world.  Learning how to use
> some combination of Twisted tools to generate a web page will always be
> at least a little bit harder than writing the sort of glorified CGI
> script that most web frameworks require these days - unless you're using
> something like Athena, which might be too much complexity to address in
> a single tutorial session.  (And while Athena is more polished and "one
> right way" than the lower-level HTTP stuff, there is still a painful
> dearth of documentation, not to mention the fact that you need to write
> JavaScript as well as Python.)


"Comet" (aka what Athena does) is one of my main uses of twisted, see

http://svn.xantus.org/shortbus/trunk/cometd-twisted/

is some code that I use.

That and other ajax-y stuff.  Not much templating html, etc.


>
> Twisted really shines best when you're writing a client as well as a
> server.  Chat is the quintessential application where Twisted makes the
> most sense - and the lack of a well-documented chat server is much less
> of a problem than the lack of a well-documented web server, since you
> can easily define a wire protocol and wacky semantics for your purpose-
> built tutorial chat application.

Yes!


>
> >b) then plug that into a simple sqlite database using
> >"twisted.enterprise"
>
> twisted.enterprise is similarly a scary and inconsistent area, and
> requires understanding the interaction of the DB thread and the reactor
> thread.  (And at least part of this section would have to be dedicated
> to "and never, ever touch anything in this package aside from adbapi".)


I only ever use 'adbapi'.  The reason I say this is database functionality
is pretty darn important for all non-trivial programs, so programmers
need/want
to know about this functionality, wouldn't you agree?


>
> >d) Show how using "twistd" is really convient
> >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some
> >logging
> >capability, etc)
>
> This, however, is a great suggestion.  Twisted plugins should be part of
> this discussion.
>
Yes.


Thanks again for Twisted!

-Alex


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080123/b7d263fb/attachment.htm 

From steve at holdenweb.com  Wed Jan 23 22:47:26 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 22:47:26 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>	<47975ABA.3080901@holdenweb.com>
	<fn8hv6$4hu$1@ger.gmane.org>	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
Message-ID: <fn91og$9g9$1@ger.gmane.org>

alex clemesha wrote:
> 
> 
> On Jan 23, 2008 4:36 PM, <glyph at divmod.com <mailto:glyph at divmod.com>> wrote:
> 
>     On 12:10 am, clemesha at gmail.com <mailto:clemesha at gmail.com> wrote:
>      >Thanks Steve Holden for organizing this, it's a great idea.
> 
>     Indeed!
>      >Some nice topics might include:
> 
>     Thanks for the suggestions.  Do you have any others?  :-) 
> 
> For my usage of twisted, these are important to me and I am
> the most familiar with them. (See below)
> 
> 
>     I hate to
>     rain on your parade here, but I think maybe my explanation of why I
>     don't like these suggestions will spark discussion of more different
>     ones...
>      >a) Start off simple with a " twisted.web2" example (everyone "gets"
>      >http)
> 
>     I think that this is actually something we should avoid in a tutorial.
>     The web situation in Twisted is complicated
>     ( http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).
>      web2 in
>     particular is suffering from an extreme lack of maintenance and still
>     has never "officially" been released; work is just starting to get
>     underway to unify t.web2 and nevow into t.web and reduce the confusion,
>     but this is all still in progress and who knows when, how, or even if it
>     will be completed.  
> 
>  
> Oh yes, I know, I know.  While learning twisted I read *most* (that's 
> alot ;)
> of posts to the twisted-web mailing list.  So I am very familiar with 
> the state.
> 
Interesting. I am also subscribed to the twisted.web newsgroup, and I 
have been surprised about how quiet it's been. I imagine that if 
twisted.web2 would be very good for things like high-volume web services 
work. It has relatively few advantages in the heavily-competitive 
templating world, and I have to say that my early experience with Nevow, 
while it caused me to admire the system, wasn't entirely trouble-free. I 
think that may be partly because it wasn't being used in a Twisted 
environment (I'm thinking of the python.org reorganization that was put 
in effect after PyCon 2006).

> That said, oh how I wish you guys could make twisted.web2 the one and 
> only!!!
> It would be good for beginners and others alike.
> 
> Note however: I can only barely imagine how hard that might be,
> so I am *definitely not* complaining ... Twisted is excellent, thanks 
> very much for it.
> 
Hear, hear. And the world needs to know, hence my enthusiasm for "Teach 
Me Twisted".

> 
>     If you get a group of experienced Twisted folks
>     together to talk about writing web applications, you're more likely to
>     spark a debate than an educational session.
> 
Twisted's not alone there, of course.

>     Even if all these problems were fixed, and there were a really good,
>     well-supported, universally understood web server for Twisted, the
>     benefits of Twisted's programming model are not immediately obvious to
>     the bread and butter of the web programming world.  Learning how to use
>     some combination of Twisted tools to generate a web page will always be
>     at least a little bit harder than writing the sort of glorified CGI
>     script that most web frameworks require these days - unless you're
>     using
>     something like Athena, which might be too much complexity to address in
>     a single tutorial session.  (And while Athena is more polished and "one
>     right way" than the lower-level HTTP stuff, there is still a painful
>     dearth of documentation, not to mention the fact that you need to write
>     JavaScript as well as Python.)
> 
Right. I think a Django replacement might be a bit ambitious for an open 
space session or two ...

Maybe once I get into Twisted I'll be able to lend a hand with t.w2 
development (or maybe not).

> 
> "Comet" (aka what Athena does) is one of my main uses of twisted, see
> 
> http://svn.xantus.org/shortbus/trunk/cometd-twisted/
> 
> is some code that I use. 
> 
> That and other ajax-y stuff.  Not much templating html, etc.
> 
That's neat, but definitely a few too many layers for a starter project.
> 
> 
>     Twisted really shines best when you're writing a client as well as a
>     server.  Chat is the quintessential application where Twisted makes the
>     most sense - and the lack of a well-documented chat server is much less
>     of a problem than the lack of a well-documented web server, since you
>     can easily define a wire protocol and wacky semantics for your purpose-
>     built tutorial chat application.
> 
> Yes!
>  
I'd suggest possibly a client/server game , but I am under the 
impression that's already taken care of.
> 
> 
>      >b) then plug that into a simple sqlite database using
>      >" twisted.enterprise"
> 
>     twisted.enterprise is similarly a scary and inconsistent area, and
>     requires understanding the interaction of the DB thread and the reactor
>     thread.  (And at least part of this section would have to be dedicated
>     to "and never, ever touch anything in this package aside from adbapi".)
> 
We'll definitely stay away from that, then.
> 
> I only ever use 'adbapi'.  The reason I say this is database functionality
> is pretty darn important for all non-trivial programs, so programmers 
> need/want
> to know about this functionality, wouldn't you agree?
>  
Important but not fundamental, I'd say.
> 
> 
>      >d) Show how using "twistd" is really convient
>      >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some
>      >logging
>      >capability, etc)
> 
Yes, yes, yes! If I could come away with a clear understanding of how a 
.tac file encapsulated one or more Twisted network services I'd be happy.

>     This, however, is a great suggestion.  Twisted plugins should be
>     part of
>     this discussion. 
> 
> Yes.
> 
> 
> Thanks again for Twisted!
> 
This is great. Keep it coming! Still looking for reading suggestions ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From tjstebbing at gmail.com  Wed Jan 23 23:16:42 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Thu, 24 Jan 2008 15:16:42 +1100
Subject: [Twisted-Python] Senior Python developer position
Message-ID: <972281650801232016p687ddcb5i25848e86c69cd24d@mail.gmail.com>

Senior Python Developer [AU]

[snip out jobsite preamble]..

G'day all, we're in need of another senior pythonista able to start
asap at our Melbourne offices. We run an online health and fitness
service which is growing into the global market, and the application
is being redeveloped to scale globally. The role will  primarily
involve implementing a distributed framework;  global authentication
mechanisms, business logic, RPC between nodes etc. There is plenty of
opportunity for free-thought, as a senior developer there is an
expectation you will be able to work autonomously on components and
meet deadlines, be a creative voice in the team, as well as assist the
more junior developers. This is a full time position, 70-90k neg based
on exp.

Technical requirements:
 - Strong OO design principals
 - 4+ years commercial experience
 - Demonstrable ability to code in Python
 - Experience with Open Source Relational Databases
 - Knowledge of web technologies such as HTML, XML, Javascript, XML-RPC
 - Strong unit testing skills

 Professional requirements:
 - Excellent written and verbal communication
 - Good expectation setting
 - Prioritisation and time management skills
 - Ownership of projects and relevant outcomes

 Desirable experience:
 - Knowledge of Zope3 application server
 - Knowledge of Twisted
 - Performance/Scalability knowledge
 - Familiarity with Linux



From sipickles at hotmail.com  Thu Jan 24 14:33:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 24 Jan 2008 19:33:05 +0000
Subject: [Twisted-Python] Newbie question
Message-ID: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>

Hi,

I thought I'd better try and understand twisted a bit more rather than 
just using it!

Can anyone tell me why this code is erroneous?

#####################
from twisted.internet import reactor, defer

print "test"

def printResult(s):
    print "Data: %s", str(s)

def printEnd():
    print "End"

def printError(error):
    print error

d = defer.Deferred()

reactor.callLater(4, d.callback)
d.addCallback(printEnd)
d.addErrback(printError)

reactor.run()
###################################
I get the error:

TypeError: callback() takes exactly two arguments (1 given) in 
twisted/internet/base.py call.func(*call.args, **call.kw)

Thanks

Simon

-- 
Linux user #458601 - http://counter.li.org.






From pm-twisted-python at anapol.cz  Thu Jan 24 14:49:14 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 24 Jan 2008 20:49:14 +0100
Subject: [Twisted-Python] Newbie question
In-Reply-To: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
Message-ID: <4798EBBA.5010400@anapol.cz>

Hi,

try exactly what it says, that is, supply callback with an argument:

example:

result = 'I'm the result'
reactor.callLater(4, d.callback, result)

Then it should do.

Petr



Simon Pickles napsal(a):
> Hi,
> 
> I thought I'd better try and understand twisted a bit more rather than 
> just using it!
> 
> Can anyone tell me why this code is erroneous?
> 
> #####################
> from twisted.internet import reactor, defer
> 
> print "test"
> 
> def printResult(s):
>    print "Data: %s", str(s)
> 
> def printEnd():
>    print "End"
> 
> def printError(error):
>    print error
> 
> d = defer.Deferred()
> 
> reactor.callLater(4, d.callback)
> d.addCallback(printEnd)
> d.addErrback(printError)
> 
> reactor.run()
> ###################################
> I get the error:
> 
> TypeError: callback() takes exactly two arguments (1 given) in 
> twisted/internet/base.py call.func(*call.args, **call.kw)
> 
> Thanks
> 
> Simon
> 



From pm-twisted-python at anapol.cz  Thu Jan 24 14:58:50 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 24 Jan 2008 20:58:50 +0100
Subject: [Twisted-Python] Newbie question
In-Reply-To: <4798EBBA.5010400@anapol.cz>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
	<4798EBBA.5010400@anapol.cz>
Message-ID: <4798EDFA.1050806@anapol.cz>

UGHHH, Thunderbird's syntax coloring sucks ;)

of course read that

result = "I'm the result"

Otherwise, look at:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTime.html#callLater

especially look at the possible args and kwargs arguments and it'll give 
you a delayedCall:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html

Petr

Petr Mifek napsal(a):
> Hi,
> 
> try exactly what it says, that is, supply callback with an argument:
> 
> example:
> 
> result = 'I'm the result'
> reactor.callLater(4, d.callback, result)
> 
> Then it should do.
> 
> Petr
> 
> 
> 
> Simon Pickles napsal(a):
>> Hi,
>>
>> I thought I'd better try and understand twisted a bit more rather than 
>> just using it!
>>
>> Can anyone tell me why this code is erroneous?
>>
>> #####################
>> from twisted.internet import reactor, defer
>>
>> print "test"
>>
>> def printResult(s):
>>    print "Data: %s", str(s)
>>
>> def printEnd():
>>    print "End"
>>
>> def printError(error):
>>    print error
>>
>> d = defer.Deferred()
>>
>> reactor.callLater(4, d.callback)
>> d.addCallback(printEnd)
>> d.addErrback(printError)
>>
>> reactor.run()
>> ###################################
>> I get the error:
>>
>> TypeError: callback() takes exactly two arguments (1 given) in 
>> twisted/internet/base.py call.func(*call.args, **call.kw)
>>
>> Thanks
>>
>> Simon
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From radix at twistedmatrix.com  Thu Jan 24 15:04:29 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 24 Jan 2008 15:04:29 -0500
Subject: [Twisted-Python] Newbie question
In-Reply-To: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
Message-ID: <60ed19d40801241204y6fb71474n88bb9faecf24bb96@mail.gmail.com>

On Jan 24, 2008 2:33 PM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hi,
>
> I thought I'd better try and understand twisted a bit more rather than
> just using it!
>
> Can anyone tell me why this code is erroneous?
>
> #####################
...
> reactor.callLater(4, d.callback)
...
> ###################################
> I get the error:
>
> TypeError: callback() takes exactly two arguments (1 given) in
> twisted/internet/base.py call.func(*call.args, **call.kw)

d.callback needs an argument. You're not passing one. Try:

reactor.callLater(4, d.callback, "whatever")



-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Thu Jan 24 16:03:17 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 24 Jan 2008 13:03:17 -0800 (PST)
Subject: [Twisted-Python] Question about RequestHandlers and inlinecallbacks
Message-ID: <777739.96213.qm@web34203.mail.mud.yahoo.com>

Hello Folks:

I am starting to learn inlinecallbacks. I am trying to
do the following:

from within a RequestHandler, I get a web page with
the client.getPage() method. I subsequently return the
web page to the requesting web browser.

The problem -

The web browser hangs. However the
requestHandler.writes are echoed to standard output
(or error).

The problem is that in process(self), a deferred is
created but process() ends finishes without outputting
anything to the web browser.

Eventually, the associated callback is triggered but
the request has already been serviced. 

What I really want is process() to wait until the
client.getPage() is finished.

What I am unclear about is how to properly structure
the programme to get the appropriate behaviour. I am
assuming this is possible. If so, what am I missing?

I have included some sample code.

Cheers,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: inlineExample.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080124/0cd97bbc/attachment.txt 

From exarkun at divmod.com  Thu Jan 24 17:31:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Jan 2008 17:31:11 -0500
Subject: [Twisted-Python] Question about RequestHandlers and
	inlinecallbacks
In-Reply-To: <777739.96213.qm@web34203.mail.mud.yahoo.com>
Message-ID: <20080124223111.6859.518774809.divmod.quotient.79@ohm>

On Thu, 24 Jan 2008 13:03:17 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Folks:
>
>I am starting to learn inlinecallbacks. I am trying to
>do the following:
>
>from within a RequestHandler, I get a web page with
>the client.getPage() method. I subsequently return the
>web page to the requesting web browser.
>
>The problem -
>
>The web browser hangs. However the
>requestHandler.writes are echoed to standard output
>(or error).

Well... almost.  Your attached example doesn't actually print out
what is passed to Request.write().  It prints out what is passed to
the callback of the Deferred returned by getPage.

>
>The problem is that in process(self), a deferred is
>created but process() ends finishes without outputting
>anything to the web browser.

As it must.  The output is the result of a network operation.  It is
exceedingly unlikely that it will be able to happen before process()
returns.

>
>Eventually, the associated callback is triggered but
>the request has already been serviced.

I'm not sure what this means.  What is "the associated callback"?

>
>What I really want is process() to wait until the
>client.getPage() is finished.

That's what Deferreds are for.  Whatever you want to happen after
client.getPage() has happened, you should put into a callback and
attach that callback to the Deferred you get (like you did with
gotPage, almost).

>
>What I am unclear about is how to properly structure
>the programme to get the appropriate behaviour. I am
>assuming this is possible. If so, what am I missing?

The part where you got confused is the part that uses inlineCallbacks,
I think.

You defined a gotPage callback which uses defer.returnValue.  This is
totally bogus.  If you want a callback to return a value, then you just
return it.  defer.returnValue lets you specify the result of a Deferred
returned by a call to a function decorated with inlineCallbacks.

Your gotPage function has not been so decorated, so there's your bug I
suspect.

What you want process() to look like is this:

    def process(self):
        pageDeferred = client.getPage(...)
        def gotPage(result):
            self.write(result)
            self.finish()
        def gotError(err):
            log.err(err, "process getPage call failed")
            self.finish()
        pageDeferred.addCallbacks(gotPage, gotError)

If you used inlineCallbacks, then it would look like this:

    def process(self):
        try:
            result = yield client.getPage(...)
        except Exception, err:
            log.err(err, "process getPage call failed")
        else:
            self.write(result)
        self.finish()
    process = inlineCallbacks(process)

Jean-Paul



From tarjei at nu.no  Fri Jan 25 04:07:14 2008
From: tarjei at nu.no (tarjei)
Date: Fri, 25 Jan 2008 10:07:14 +0100
Subject: [Twisted-Python] VFS status
Message-ID: <4799A6C2.8030001@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, I need to copy a few files around using scp/sftp on a twisted server
and started looking at VFS. There's a few things I wonder about:

1. Is the API as unstable as the docs say?

2. Does anyone have an example of using the Twisted VFS layer as a
client? I'm a bit blind on where to start.

Kind regards,
Tarjei
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHmabCYVRKCnSvzfIRAjMzAKChu+MQo4qqKU1afGgNBOfH75PSAwCgrmvU
nxjL/sSCzMxmSOQydLZQxo0=
=qvZq
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Fri Jan 25 06:21:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Jan 2008 06:21:36 -0500
Subject: [Twisted-Python] VFS status
In-Reply-To: <4799A6C2.8030001@nu.no>
Message-ID: <20080125112136.6859.1044735401.divmod.quotient.412@ohm>

On Fri, 25 Jan 2008 10:07:14 +0100, tarjei <tarjei at nu.no> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Hi, I need to copy a few files around using scp/sftp on a twisted server
>and started looking at VFS. There's a few things I wonder about:
>
>1. Is the API as unstable as the docs say?
>
>2. Does anyone have an example of using the Twisted VFS layer as a
>client? I'm a bit blind on where to start.

You can do this with Conch.  See twisted.conch.ssh.filetransfer.

Jean-Paul



From tv at eagain.net  Fri Jan 25 11:57:21 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Fri, 25 Jan 2008 18:57:21 +0200
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
	<2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>
Message-ID: <20080125165721.GA552@eagain.net>

On Mon, Jan 21, 2008 at 04:53:00PM +0100, xavier dutoit wrote:
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?

Yup, status of server-side features for Ldaptor can be summarized as:

- low-level protocol works well and should be stable

- higher-level stuff like actually storing data, handling LDAP
  datatypes, schemas, etc, and access control are pretty much
  non-existent

My personal & business needs have been pretty much covered by what
code is already in Ldaptor, so I'm not actively developing it further,
and am unlikely to do that as a hobby in the near future (too many
other things to hack!) However, I can be persuaded into doing that on
a contract basis.

-- 
:(){ :|:&};:



From bernat at luffy.cx  Fri Jan 25 13:56:52 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Fri, 25 Jan 2008 19:56:52 +0100
Subject: [Twisted-Python] twistedsnmp
Message-ID: <m3prvpn37v.fsf@neo.luffy.cx>

Hello !

I had to use agent part of twistedsnmp [0]. This part was primarily done
to  test  manager part,  therefore,  it  lacks  important features  like
handling of deferred to return results. To circumvent this limitation, I
have  hacked a  bit  to  make a  small  patch to  allow  limited use  of
deferred?[1].

I have  proposed the patch to the  author but got no  answer. Looking at
the CVS  [2], it seems that  twistedsnmp is unmaintained  since almost 2
years.  Has  anybody  any news  about  this?  Is  there any  reason  why
twistedsnmp is not integrated into Twisted?

It seems that there is another  implementation by ZenOSS [3] but it does
not  include  agent  part.  Do  you know  if  this  implementation  will
supersede twistedsnmp?

I attach my patch to this message for posterity (if it can be useful for
other people).

[0] http://twistedsnmp.sourceforge.net/
[1] Limited because you cannot use  nested deferred. If you have any tip
    to easily implement this, you are welcome.
[2] http://twistedsnmp.cvs.sourceforge.net/twistedsnmp/twistedsnmp/
[3] http://packages.qa.debian.org/p/pynetsnmp.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twistedsnmp-deferred-agent.patch
Type: text/x-diff
Size: 7865 bytes
Desc: not available
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080125/1de52ab3/attachment.patch 

From andrewfr_ice at yahoo.com  Fri Jan 25 14:05:59 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 25 Jan 2008 11:05:59 -0800 (PST)
Subject: Thanks! Re: [Twisted-Python] Question about RequestHandlers 
In-Reply-To: <E1JIRuN-0000xq-EZ@cube.twistedmatrix.com>
Message-ID: <244366.67164.qm@web34215.mail.mud.yahoo.com>

Hello Jean-Paul:

AF>What I am unclear about is how to properly
structure
AF>the programme to get the appropriate behaviour. I
am
AF>assuming this is possible. If so, what am I
missing?

>The part where you got confused is the part that
>inlineCallbacks, I think.

Yes.

>You defined a gotPage callback which uses
>defer.returnValue.  This is totally bogus.  If you
>want a callback to return a value, then you just
>return it.  defer.returnValue lets you specify the
>result of a Deferred returned by a call to a function
>decorated with inlineCallbacks.

>Your gotPage function has not been so decorated, so
>there's your bug I suspect.

No, I found the example for inlinecallback a wee
confusing. When I see the line
"makeSomeRequestResultingInDeferred()", I
automatically thought I needed to create a deferred
and in the process, add a callback function. I also
misinterpreted the proviso about returnValue.

Perhaps it is just me, but maybe it would be better to
use a more concrete example using a twisted call.

That said, I have done what you suggested:

class MyRequestHandler(http.Request):
    
    @defer.inlineCallbacks
    def process(self):
        try:
            result = yield
client.getPage("http://www.google.com")
        except Exception, err:
            log.err(err, "process getPage call
failed")
        else:
            self.setHeader('Content-Type',
'text/html') 
            self.write(result)
            self.finish()

and this works beautifully. Thanks! inlinecallbacks
look really cool.....

Cheers,
Andrew








      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: inlineExample.py
Url: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080125/11e2895a/attachment.txt 

From sipickles at hotmail.com  Fri Jan 25 14:26:23 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 19:26:23 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
Message-ID: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>

Twisted is a really inaccessible concept. It is very idiosyncratic with 
its millions of various classes and methods....

... but if you persevere, its great! You just have to leave part of your 
brain behind in a field in hampshire :)

I'd suffer the pain, just for deferreds!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From ldanielburr at mac.com  Fri Jan 25 14:51:47 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 13:51:47 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
Message-ID: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>

Hi Simon,

On Fri, 25 Jan 2008 13:26:23 -0600, Simon Pickles <sipickles at hotmail.com>  
wrote:

> Twisted is a really inaccessible concept. It is very idiosyncratic with  
> its millions of various classes and methods....
>

No offense intended, but what is so inaccessible about an event loop?   
Please
understand, I hear people say that Twisted is hard to grok all the time,
but I really don't get *why*.

I'm asking you because you didn't say "I don't get Twisted"; rather, you
said Twisted is an "inaccessible concept".  I'd really like to know
what that concept is, as you see it, because I suspect there is something
useful in that.  I'm also betting that your concept of Twisted is different
 from mine, and that difference may help me do a better job of explaining
Twisted to people when I talk about it in my work.

> ... but if you persevere, its great! You just have to leave part of your  
> brain behind in a field in hampshire :)
>

Again, good stuff.  Which part do you have to leave behind?  The part that
expects code to execute synchronously, or something else?

> I'd suffer the pain, just for deferreds!
>

I agree, deferreds are a nice abstraction, which is why the recent spate
of inlineCallbacks-related posts alarms me.

L. Daniel Burr



From sipickles at hotmail.com  Fri Jan 25 15:26:34 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 20:26:34 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
Message-ID: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>



L. Daniel Burr wrote:

> No offense intended, but what is so inaccessible about an event loop?  
> Please
> understand, I hear people say that Twisted is hard to grok all the time,
> but I really don't get *why*.
>
Conceptually twisted is very simple. Thats what attracted me to it in 
the first place. In reality, twisted (I suspect due to its incredible 
flexibility) is mind boggling. The plethora of options available to the 
uninitiated is overwhelming. Eg:

Okay, so to make a simple client/server what do I do?

Well, you create a class which overrides a factory, which takes a 
protocol, which has some overriden functions which do different 
predefined tasks. Easy.

(btw, ALL tutorials never make clear which functions are overridden, and 
which are newly-defined)

So can I do something similar to do another job?

No you need a totally different set of classes which don't follow any 
similar pattern to the first, probably have very inaccessible (ie, 
forgettable) names. In this case you need to connect an A to a B to a C 
with a D and E as params, and F as a callback and inherit from a WIDGET! 
aaaargh! :)

>> ... but if you persevere, its great! You just have to leave part of 
>> your brain behind in a field in hampshire :)
>>
>
> Again, good stuff.  Which part do you have to leave behind?  The part 
> that
> expects code to execute synchronously, or something else?
IMHO, Twisted seems to be written by many people over time, without a 
rigorous design pattern in place first, more of an iterative process. 
This would account for the fractuous nature of the interface. Its kinda 
like learning English. There are rules but most of the time they don't 
apply.

On the other hand, maybe Twisted just suddenly made sense after 
Stackless did ;)
>
> the recent spate of inlineCallbacks-related posts alarms me.
>
Sorry about those :)

Simon





From cary.hull at gmail.com  Fri Jan 25 15:35:10 2008
From: cary.hull at gmail.com (Cary Hull)
Date: Fri, 25 Jan 2008 12:35:10 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fn91og$9g9$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
	<fn91og$9g9$1@ger.gmane.org>
Message-ID: <3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>

Hey, I think some Twisted related sessions at PyCon would be great.
Based on what's been discussed so far, I would like to humbly suggest
the following (kind of breaking it down):

1) Simple line based chat server/client.
2) Same thing except using AMP.
3) twistd and plugins
4) Axiom! (could show how to 'install' and launch the chat service using
axiomatic and a plugin)

(Axiom rocks and I personally think it should be packaged along with Twisted
itself. :)

Maybe that is too much for folks just starting out, but I think it could be
presented in a way that is easily grokked.

As far as reading material for the above (I'm certain to be redundant here,
but eh):
http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html
http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py(docstrings)
http://twistedmatrix.com/projects/core/documentation/howto/tap.html
http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
http://www.divmod.org/trac/wiki/Axiomatic
http://www.divmod.org/trac/wiki/DivmodAxiom/Reference

-Cary

On Jan 23, 2008 7:47 PM, Steve Holden <steve at holdenweb.com> wrote:

> alex clemesha wrote:
> >
> >
> > On Jan 23, 2008 4:36 PM, <glyph at divmod.com <mailto:glyph at divmod.com>>
> wrote:
> >
> >     On 12:10 am, clemesha at gmail.com <mailto:clemesha at gmail.com> wrote:
> >      >Thanks Steve Holden for organizing this, it's a great idea.
> >
> >     Indeed!
> >      >Some nice topics might include:
> >
> >     Thanks for the suggestions.  Do you have any others?  :-)
> >
> > For my usage of twisted, these are important to me and I am
> > the most familiar with them. (See below)
> >
> >
> >     I hate to
> >     rain on your parade here, but I think maybe my explanation of why I
> >     don't like these suggestions will spark discussion of more different
> >     ones...
> >      >a) Start off simple with a " twisted.web2" example (everyone
> "gets"
> >      >http)
> >
> >     I think that this is actually something we should avoid in a
> tutorial.
> >     The web situation in Twisted is complicated
> >     ( http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).
> >      web2 in
> >     particular is suffering from an extreme lack of maintenance and
> still
> >     has never "officially" been released; work is just starting to get
> >     underway to unify t.web2 and nevow into t.web and reduce the
> confusion,
> >     but this is all still in progress and who knows when, how, or even
> if it
> >     will be completed.
> >
> >
> > Oh yes, I know, I know.  While learning twisted I read *most* (that's
> > alot ;)
> > of posts to the twisted-web mailing list.  So I am very familiar with
> > the state.
> >
> Interesting. I am also subscribed to the twisted.web newsgroup, and I
> have been surprised about how quiet it's been. I imagine that if
> twisted.web2 would be very good for things like high-volume web services
> work. It has relatively few advantages in the heavily-competitive
> templating world, and I have to say that my early experience with Nevow,
> while it caused me to admire the system, wasn't entirely trouble-free. I
> think that may be partly because it wasn't being used in a Twisted
> environment (I'm thinking of the python.org reorganization that was put
> in effect after PyCon 2006).
>
> > That said, oh how I wish you guys could make twisted.web2 the one and
> > only!!!
> > It would be good for beginners and others alike.
> >
> > Note however: I can only barely imagine how hard that might be,
> > so I am *definitely not* complaining ... Twisted is excellent, thanks
> > very much for it.
> >
> Hear, hear. And the world needs to know, hence my enthusiasm for "Teach
> Me Twisted".
>
> >
> >     If you get a group of experienced Twisted folks
> >     together to talk about writing web applications, you're more likely
> to
> >     spark a debate than an educational session.
> >
> Twisted's not alone there, of course.
>
> >     Even if all these problems were fixed, and there were a really good,
> >     well-supported, universally understood web server for Twisted, the
> >     benefits of Twisted's programming model are not immediately obvious
> to
> >     the bread and butter of the web programming world.  Learning how to
> use
> >     some combination of Twisted tools to generate a web page will always
> be
> >     at least a little bit harder than writing the sort of glorified CGI
> >     script that most web frameworks require these days - unless you're
> >     using
> >     something like Athena, which might be too much complexity to address
> in
> >     a single tutorial session.  (And while Athena is more polished and
> "one
> >     right way" than the lower-level HTTP stuff, there is still a painful
> >     dearth of documentation, not to mention the fact that you need to
> write
> >     JavaScript as well as Python.)
> >
> Right. I think a Django replacement might be a bit ambitious for an open
> space session or two ...
>
> Maybe once I get into Twisted I'll be able to lend a hand with t.w2
> development (or maybe not).
>
> >
> > "Comet" (aka what Athena does) is one of my main uses of twisted, see
> >
> > http://svn.xantus.org/shortbus/trunk/cometd-twisted/
> >
> > is some code that I use.
> >
> > That and other ajax-y stuff.  Not much templating html, etc.
> >
> That's neat, but definitely a few too many layers for a starter project.
> >
> >
> >     Twisted really shines best when you're writing a client as well as a
> >     server.  Chat is the quintessential application where Twisted makes
> the
> >     most sense - and the lack of a well-documented chat server is much
> less
> >     of a problem than the lack of a well-documented web server, since
> you
> >     can easily define a wire protocol and wacky semantics for your
> purpose-
> >     built tutorial chat application.
> >
> > Yes!
> >
> I'd suggest possibly a client/server game , but I am under the
> impression that's already taken care of.
> >
> >
> >      >b) then plug that into a simple sqlite database using
> >      >" twisted.enterprise"
> >
> >     twisted.enterprise is similarly a scary and inconsistent area, and
> >     requires understanding the interaction of the DB thread and the
> reactor
> >     thread.  (And at least part of this section would have to be
> dedicated
> >     to "and never, ever touch anything in this package aside from
> adbapi".)
> >
> We'll definitely stay away from that, then.
> >
> > I only ever use 'adbapi'.  The reason I say this is database
> functionality
> > is pretty darn important for all non-trivial programs, so programmers
> > need/want
> > to know about this functionality, wouldn't you agree?
> >
> Important but not fundamental, I'd say.
> >
> >
> >      >d) Show how using "twistd" is really convient
> >      >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with
> some
> >      >logging
> >      >capability, etc)
> >
> Yes, yes, yes! If I could come away with a clear understanding of how a
> .tac file encapsulated one or more Twisted network services I'd be happy.
>
> >     This, however, is a great suggestion.  Twisted plugins should be
> >     part of
> >     this discussion.
> >
> > Yes.
> >
> >
> > Thanks again for Twisted!
> >
> This is great. Keep it coming! Still looking for reading suggestions ...
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080125/cca19a50/attachment.htm 

From darran at edmstudio.com  Fri Jan 25 16:10:32 2008
From: darran at edmstudio.com (Darran Edmundson)
Date: Fri, 25 Jan 2008 14:10:32 -0700
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
Message-ID: <479A5048.3010208@edmstudio.com>

L. Daniel Burr wrote:
> Again, good stuff.  Which part do you have to leave behind?  The part that
> expects code to execute synchronously, or something else?

I'd guess this is the number one stumbling block.  That said, most 
people come to Twisted *precisely because* they want asynchronous 
execution.  It's a hard problem, and any reasonably intelligent 
programmer quickly discovers that using Twisted is infinitely easier 
than trying to cobble together a custom solution.  There are more than 
enough learning resources available (online tutorials, the book, this 
list, a very helpful irc channel).   I suggest ignoring the "twisted is 
hard" crowd ... such people are probably looking for a simple(r) 
solution where none (currently) exists.

Cheers,
Darran

-- 
Darran Edmundson [darran at edmstudio.com]
http://www.edmstudio.com



From ldanielburr at mac.com  Fri Jan 25 16:20:13 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 15:20:13 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
Message-ID: <op.t5h77z0m3oj628@l-daniel-burrs-computer.local>

Hi Simon,

On Fri, 25 Jan 2008 14:26:34 -0600, Simon Pickles <sipickles at hotmail.com>  
wrote:

>
>
> L. Daniel Burr wrote:
>
>> No offense intended, but what is so inaccessible about an event loop?   
>> Please
>> understand, I hear people say that Twisted is hard to grok all the time,
>> but I really don't get *why*.
>>
> Conceptually twisted is very simple. Thats what attracted me to it in  
> the first place. In reality, twisted (I suspect due to its incredible  
> flexibility) is mind boggling. The plethora of options available to the  
> uninitiated is overwhelming. Eg:
>
> Okay, so to make a simple client/server what do I do?
>
> Well, you create a class which overrides a factory, which takes a  
> protocol, which has some overriden functions which do different  
> predefined tasks. Easy.
>

OK, here's the first thing I notice.  You make no mention of interfaces,
which I think are key to understanding Twisted.

> (btw, ALL tutorials never make clear which functions are overridden, and  
> which are newly-defined)
>

There's a good point.  Perhaps the tutorials should provide more links to
the API documentation, specifically, to the interfaces being implemented
by these classes.  Once you look at the interfaces a given class  
implements,
it is easy to see what is being overridden.

> So can I do something similar to do another job?
>

Yes, you can, if you are thinking about interfaces, rather than always
in terms of concrete classes.  I hadn't noticed this before in my own
work, but that's precisely why I find Twisted fairly easy to grasp.

> No you need a totally different set of classes which don't follow any  
> similar pattern to the first, probably have very inaccessible (ie,  
> forgettable) names. In this case you need to connect an A to a B to a C  
> with a D and E as params, and F as a callback and inherit from a WIDGET!  
> aaaargh! :)
>

I note the smiley, but still, you're exaggerating quite a bit here.  For
most jobs, you do the same basic dance:

- create a protocol
- create a factory
- create a driver script, or a service if you need a daemon.

Now, some problems are really this simple.  Some will require more
work in terms of creating server-specific and client-specific factories,
etc., but even that follows the basic steps above.

The case I'm describing above is one where you "roll your own" stuff,
using the basic, low-level parts of twisted.  In cases where you want
to use higher-level parts, like, say, twisted.web, then you do have
to read the appropriate API docs, or look in the examples directory.

>>> ... but if you persevere, its great! You just have to leave part of  
>>> your brain behind in a field in hampshire :)
>>>
>>
>> Again, good stuff.  Which part do you have to leave behind?  The part  
>> that
>> expects code to execute synchronously, or something else?
> IMHO, Twisted seems to be written by many people over time, without a  
> rigorous design pattern in place first, more of an iterative process.  
> This would account for the fractuous nature of the interface. Its kinda  
> like learning English. There are rules but most of the time they don't  
> apply.
>

Sorry, but I'm going to pick on you a little bit here.  When I hear
someone say "rigorous design pattern", I feel compelled to ask them
to explain what they mean by that, and to point me to examples where
such a "rigorous design pattern" has been applied, so that I can
see what kind of library or framework is produced by the application
of said pattern ;)

Seriously, your observation could be applied to virtually any
open-source project in existence, simply due to the fact that more
than one developer has worked on the code over time.  In Twisted's
defense, I'll note that there is a coding standard; modules and
APIs are marked as being stable/unstable; there are unit-tests
covering a large portion of the code-base; a buildbot system provides
continuous integration so that changes which break trunk get reverted
swiftly.  The list goes on, and I'd argue that such things are
emblematic of a well-designed framework.

I do think that any of the core developers would freely admit that
some parts of twisted are better than others, but the core design
of twisted is, in my opinion, consistent and solid.  Obviously
I would think that, given that I never encountered a real problem
getting into Twisted.

I suppose the fact that the first programming I ever did involved
an event-loop driven system accounts for my familiarity with
the concepts in Twisted.

> On the other hand, maybe Twisted just suddenly made sense after  
> Stackless did ;)

There is some overlap there, in that both Twisted and Stackless
require you to think cooperatively rather than preemptively.

>>
>> the recent spate of inlineCallbacks-related posts alarms me.
>>
> Sorry about those :)
>

No problem :)  I'm not a fan of inlineCallbacks, because I
think it represents a crutch for people who either don't
like the way "normal" deferred-using code looks, or want to
write code that looks like blocking code (write blocking code,
add decorator, add yield keyword, stir gently).  Someone, I think
it was tekNico, made a decent argument concerning readability,
but I consider that to be too subjective.  Certainly I would
concede that some folks really like inlineCallbacks.  I just
don't want to support any code they write ;)

Thanks for generating the discussion,

L. Daniel Burr



From ldanielburr at mac.com  Fri Jan 25 16:28:29 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 15:28:29 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <479A5048.3010208@edmstudio.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<479A5048.3010208@edmstudio.com>
Message-ID: <op.t5h8lrxi3oj628@l-daniel-burrs-computer.local>

Hi Darran,

On Fri, 25 Jan 2008 15:10:32 -0600, Darran Edmundson  
<darran at edmstudio.com> wrote:

> L. Daniel Burr wrote:
>> Again, good stuff.  Which part do you have to leave behind?  The part  
>> that
>> expects code to execute synchronously, or something else?
>
> I'd guess this is the number one stumbling block.  That said, most  
> people come to Twisted *precisely because* they want asynchronous  
> execution.  It's a hard problem, and any reasonably intelligent  
> programmer quickly discovers that using Twisted is infinitely easier  
> than trying to cobble together a custom solution.  There are more than  
> enough learning resources available (online tutorials, the book, this  
> list, a very helpful irc channel).   I suggest ignoring the "twisted is  
> hard" crowd ... such people are probably looking for a simple(r)  
> solution where none (currently) exists.
>

Well, I certainly agree with the conclusions you have drawn, with the
exception of ignoring the "twisted is hard" crowd.  I think there is
value in helping people "get" what Twisted is, because I want to be
able to continue working in an ecosystem where I can say "let's write
a twisted service that does X", and not be shouted down by a team of
developers who say "boo, twisted is too hard, let's go use something,
anything, other than twisted."

Have a good one,

L. Daniel Burr



From sipickles at hotmail.com  Fri Jan 25 17:17:50 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 22:17:50 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h77z0m3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5h77z0m3oj628@l-daniel-burrs-computer.local>
Message-ID: <BAY114-DAV156F8F11469AFAAD903F65BE390@phx.gbl>



L. Daniel Burr wrote:
>
> You make no mention of interfaces, which I think are key to 
> understanding Twisted.
>
Oh ok, this is interesting. I have been dabbling for ages on and off 
with twisted and I heard my first mention of interfaces YESTERDAY in the 
o'Reilly book (it didn't explain them either!)

Please, tell me more!


>> (btw, ALL tutorials never make clear which functions are overridden, 
>> and which are newly-defined)
>>
>
> There's a good point.  Perhaps the tutorials should provide more links to
> the API documentation, specifically, to the interfaces being implemented
> by these classes.  Once you look at the interfaces a given class 
> implements,
> it is easy to see what is being overridden.
>
Maybe a simple naming convention would help here. noLeadingCaps for 
twisted functions and LeadingCaps for defined? or a few inline comments 
in code samples? ;)

> I note the smiley, but still, you're exaggerating quite a bit here.  For
> most jobs, you do the same basic dance:
>
> - create a protocol
> - create a factory
> - create a driver script, or a service if you need a daemon.
>
I had to admit, as I wrote my criticism, it didn't 'sound' as tricky as 
it once had!

I know I will grow to really like twisted. Maybe its just very BIG. When 
you start, you don't know which parts are useful to you. eg, I was using 
twisted.internet loads, and battling with threaded SQL queries until I 
stumbled across twisted.enterprise.adbapi. Good job I did!

Nice to pick your brain!

ta

Simon







From andrewfr_ice at yahoo.com  Fri Jan 25 17:39:14 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 25 Jan 2008 14:39:14 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
Message-ID: <106164.38033.qm@web34212.mail.mud.yahoo.com>

Hi Folks:

Another inclinecallback question.

This time I am using PyAMF. Like xmlrpc, operations
are method calls. So I have the following:

def echo(self, x):
        .
        .
    return result

now from my PyAMF.operation, I want to do the
following,

@defer.inlineCallbacks
def echo(self, x):
    result = yield someCallResultingInADeferred()
    return result

the problem is that echo is now a generator, I can't
write -

return result - returns in generators can't take
arguments.

Once again, I am at a bit of loss about how to
structure the code. Any suggestions are welcomed.

Cheers,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From nitro at dr-code.org  Fri Jan 25 17:42:41 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 25 Jan 2008 23:42:41 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
Message-ID: <op.t5ib1fclz3pzfc@nitrogenycs2>

Am 25.01.2008, 21:26 Uhr, schrieb Simon Pickles <sipickles at hotmail.com>:

> No you need a totally different set of classes which don't follow any  
> similar pattern to the first, probably have very inaccessible (ie,  
> forgettable) names. In this case you need to connect an A to a B to a C  
> with a D and E as params, and F as a callback and inherit from a WIDGET!  
> aaaargh! :)

This is exactly how I perceive learning twisted! It consists of a bunch of  
high-level abstractions which aren't explained properly in any how-to  
article. Now if you want to customize things you have to start looking  
around the twisted code and make your way from there. At this point you  
realize that there are at least 10 different parts somehow interacting  
with each other and you have no idea where you are supposed to plug your  
own stuff in. Sometimes twisted is a bit too twisted for me.

I am missing a quick overview about the high level concepts used in  
twisted such as Protocols, Factories, Reactors, Transports, etc and their  
interaction. Reference docs are not counting here, because you can't  
expect someone evaluating twisted to skim through the whole thing and  
gather everything piece by piece.

The user should maybe be instructed *how* to learn twisted, not be shown  
only an example. For reference, I just took a look at the finger tutorial.  
I like it's hands-on approach. However, already in the 2nd part the user  
is given a huge bunch of code:  
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/protocol.html  
. He doesn't get any hint how to write that themselves. When do I subclass  
X to do Y? Which methods can I override?

Of course there are interfaces which should tell the user about some of  
those things. After all one of the main goals of interfaces is  
documentation. Again, the user is not given a quick introduction why and  
how twisted makes use of interfaces and how he can exploit this. It would  
also be handy to have a reference chart which shows typical tasks along  
with a pointer to documentation which might be helpful and/or related.

>>> ... but if you persevere, its great! You just have to leave part of  
>>> your brain behind in a field in hampshire :)

I agree, twisted is very powerful even if you don't realize it always,  
because it seems to hide behind all those abstractions which are not  
really explained.

>> the recent spate of inlineCallbacks-related posts alarms me.

Why? Using inlineCallbacks just helps writing convenient syntax utilizing  
deferreds. If you ever wrote code which uses lots of deferreds, you know  
that the code is (visually) lacking a decent structure. It's just not the  
way you think and makes things hard to read. inlineCallbacks just turns  
this into a nice, linear piece of code again (linear not to be confused  
with synchronous!).

-Matthias



From nitro at dr-code.org  Fri Jan 25 17:44:08 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 25 Jan 2008 23:44:08 +0100
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <106164.38033.qm@web34212.mail.mud.yahoo.com>
References: <106164.38033.qm@web34212.mail.mud.yahoo.com>
Message-ID: <op.t5ib3unvz3pzfc@nitrogenycs2>

Am 25.01.2008, 23:39 Uhr, schrieb Andrew Francis <andrewfr_ice at yahoo.com>:

> Hi Folks:
>
> Another inclinecallback question.
>
> This time I am using PyAMF. Like xmlrpc, operations
> are method calls. So I have the following:
>
> def echo(self, x):
>         .
>         .
>     return result
>
> now from my PyAMF.operation, I want to do the
> following,
>
> @defer.inlineCallbacks
> def echo(self, x):
>     result = yield someCallResultingInADeferred()
>     return result
>
> the problem is that echo is now a generator, I can't
> write -
>
> return result - returns in generators can't take
> arguments.
>
> Once again, I am at a bit of loss about how to
> structure the code. Any suggestions are welcomed.

User defer.returnValue(result) instead of return.

-Matthias



From steve at holdenweb.com  Fri Jan 25 18:49:46 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 25 Jan 2008 18:49:46 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>	<47975ABA.3080901@holdenweb.com>
	<fn8hv6$4hu$1@ger.gmane.org>	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>	<fn91og$9g9$1@ger.gmane.org>
	<3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
Message-ID: <fndsj4$7uv$1@ger.gmane.org>

Cary Hull wrote:
> Hey, I think some Twisted related sessions at PyCon would be great.
> Based on what's been discussed so far, I would like to humbly suggest
> the following (kind of breaking it down):
> 
> 1) Simple line based chat server/client.
> 2) Same thing except using AMP.
> 3) twistd and plugins

These are things I would really like to get to, but I'm pretty sure half 
an hour isn't going to cover it. Maybe we should be thinking BOF 
instead, then we can take an evening over it under less stressful 
conditions (and, who knows, even drink a beer or two in the process).

> 4) Axiom! (could show how to 'install' and launch the chat service using 
> axiomatic and a plugin)
> 
> (Axiom rocks and I personally think it should be packaged along with 
> Twisted itself. :)
> 
OK, I;ll do "Teach Me Twisted" and you do an Open Space session on "Why 
Axiom Rocks and Should be In Twisted".

> Maybe that is too much for folks just starting out, but I think it could be
> presented in a way that is easily grokked.
> 
> As far as reading material for the above (I'm certain to be redundant 
> here, but eh):
> http://twistedmatrix.com/projects/core/documentation/howto/servers.html
> http://twistedmatrix.com/projects/core/documentation/howto/clients.html
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py 
> (docstrings)
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
> http://www.divmod.org/trac/wiki/Axiomatic
> http://www.divmod.org/trac/wiki/DivmodAxiom/Reference
> 
Thanks, I'll make a start in this in an attempt not to be completely 
clueless when the session starts :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From cary.hull at gmail.com  Fri Jan 25 19:05:10 2008
From: cary.hull at gmail.com (Cary Hull)
Date: Fri, 25 Jan 2008 16:05:10 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fndsj4$7uv$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
	<fn91og$9g9$1@ger.gmane.org>
	<3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
	<fndsj4$7uv$1@ger.gmane.org>
Message-ID: <3fce0ae70801251605t24499a7cqb5cf25856945f80d@mail.gmail.com>

Minus the 'should be in twisted part' (which would be rather presumptuous of
me), I wouldn't mind giving a little introduction to axiom. :)

On Jan 25, 2008 3:49 PM, Steve Holden <steve at holdenweb.com> wrote:

> Cary Hull wrote:
> > Hey, I think some Twisted related sessions at PyCon would be great.
> > Based on what's been discussed so far, I would like to humbly suggest
> > the following (kind of breaking it down):
> >
> > 1) Simple line based chat server/client.
> > 2) Same thing except using AMP.
> > 3) twistd and plugins
>
> These are things I would really like to get to, but I'm pretty sure half
> an hour isn't going to cover it. Maybe we should be thinking BOF
> instead, then we can take an evening over it under less stressful
> conditions (and, who knows, even drink a beer or two in the process).
>
> > 4) Axiom! (could show how to 'install' and launch the chat service using
> > axiomatic and a plugin)
> >
> > (Axiom rocks and I personally think it should be packaged along with
> > Twisted itself. :)
> >
> OK, I;ll do "Teach Me Twisted" and you do an Open Space session on "Why
> Axiom Rocks and Should be In Twisted".
>
> > Maybe that is too much for folks just starting out, but I think it could
> be
> > presented in a way that is easily grokked.
> >
> > As far as reading material for the above (I'm certain to be redundant
> > here, but eh):
> > http://twistedmatrix.com/projects/core/documentation/howto/servers.html
> > http://twistedmatrix.com/projects/core/documentation/howto/clients.html
> > http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py
> > (docstrings)
> > http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> > http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
> > http://www.divmod.org/trac/wiki/Axiomatic
> > http://www.divmod.org/trac/wiki/DivmodAxiom/Reference
> >
> Thanks, I'll make a start in this in an attempt not to be completely
> clueless when the session starts :-)
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080125/59dbf542/attachment.htm 

From exarkun at divmod.com  Fri Jan 25 19:13:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Jan 2008 19:13:34 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fndsj4$7uv$1@ger.gmane.org>
Message-ID: <20080126001334.6859.1564119011.divmod.quotient.677@ohm>

On Fri, 25 Jan 2008 18:49:46 -0500, Steve Holden <steve at holdenweb.com> wrote:
>Cary Hull wrote:
>>Hey, I think some Twisted related sessions at PyCon would be great.
>>Based on what's been discussed so far, I would like to humbly suggest
>>the following (kind of breaking it down):
>>
>>1) Simple line based chat server/client.
>>2) Same thing except using AMP.
>>3) twistd and plugins
>
>These are things I would really like to get to, but I'm pretty sure half an 
>hour isn't going to cover it. Maybe we should be thinking BOF instead, then 
>we can take an evening over it under less stressful conditions (and, who 
>knows, even drink a beer or two in the process).

Maybe I can get you to go a little bit further than that in restricting
what you'd like to see covered.

Off the top of my head, and only continuing until I get bored with making
this point, here's what a "Twisted" session could cover:

  * event driven programming
  * Deferreds (making them; using them; debugging them; defgen; 
        locks/semaphors)
  * core reactor APIs
  * scheduling
  * implementing existing (TCP; UDP; IP) protocols
  * designing new (TCP; UDP; IP) protocols
  * using existing protocols in twisted core
  * integrating a protocol implementation with cred
  * process control/interaction
  * implementing a realm
  * implementing credentials/checkers
  * writing services
  * writing plugins (twistd; lore; cred)
  * handy general-purpose python utilities
  * adding new kinds of event sources to the reactor
  * gui/pygame/etc integration
  * threading
  * using SQL databases
  * Perspective Broker
  * writing unit tests
  * using trial
  * extending trial

Wandering outside of the core of Twisted:

  * serving web pages
  * running a chat server
  * extending the chat server
  * jabber (jabber; jabber; jabber; sasl; jabber)
  * marking up documentation
  * dns servers and clients
  * usenet servers and clients
  * ssh/sftp clients/servers
  * telnet clients/servers
  * asynchronous terminal interaction
  * terminal widget rendering
  * smtp client/server
  * imap4 client/server
  * pop3 client/server

Are any of these the things you have in mind?  Can I get you to pick
a very small number of them (1 or 2 per hour at most, I suspect; some
are smaller, others are quite large)?  Or did you have something else
in mind?

Jean-Paul



From mithrandi at mithrandi.za.net  Fri Jan 25 19:46:28 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 02:46:28 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5ib1fclz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
Message-ID: <20080126004628.GA6125@mithrandi.za.net>

* Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:

>>> the recent spate of inlineCallbacks-related posts alarms me.
>
> Why? Using inlineCallbacks just helps writing convenient syntax utilizing 
> deferreds. If you ever wrote code which uses lots of deferreds, you know  
> that the code is (visually) lacking a decent structure. It's just not the 
> way you think and makes things hard to read. inlineCallbacks just turns  
> this into a nice, linear piece of code again (linear not to be confused  
> with synchronous!).

The problem I have with this is that I find that it actually obscures
the flow of the code and data. Most deferred operations have no need to
be serialized, and shouldn't be; the linear nature of
inlineCallbacks-style makes it very easy to accidentally serialize
operations that could otherwise run in parallel instead. Even if you
write the generator correctly, it's not as obvious what the actual flow
is since it has been crunched into a linear-looking function. Finally,
it is extremely hard to unit test a generator using inlineCallbacks, as
there is no easy way of resuming the generator at certain points with
certain state to test each part of the generator.

I'm not necessarily convinced that inlineCallbacks is always bad, but it
certainly leads to subtle traps in most cases, while providing little
real benefit (despite the perceived benefit).
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/a9207e9f/attachment.pgp 

From sipickles at hotmail.com  Sat Jan 26 04:47:08 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 09:47:08 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126004628.GA6125@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
Message-ID: <BAY114-DAV14165FC207CE00DEEED59EBE3A0@phx.gbl>


Tristan Seligmann wrote:
> it certainly leads to subtle traps in most cases, while providing 
> little real benefit (despite the perceived benefit).
>   
Does this mean if I don't know what inlinecallbacks are, I shouldn't worry?





From sipickles at hotmail.com  Sat Jan 26 04:49:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 09:49:02 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5ib1fclz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
Message-ID: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>



Nitro wrote:
>
> I am missing a quick overview about the high level concepts used in 
> twisted such as Protocols, Factories, Reactors, Transports, etc and 
> their interaction.

I am tempted to contribute something of my experiences getting my 
tangled up in twisted. Care to help Matthias?





From mithrandi at mithrandi.za.net  Sat Jan 26 05:25:34 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 12:25:34 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <479B019C.5090806@hotmail.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<479B019C.5090806@hotmail.com>
Message-ID: <20080126102534.GA358@mithrandi.za.net>

* Simon Pickles <sipickles at hotmail.com> [2008-01-26 09:47:08 +0000]:

> Tristan Seligmann wrote:
>> it certainly leads to subtle traps in most cases, while providing  
>> little real benefit (despite the perceived benefit).
>>   
> Does this mean if I don't know what inlinecallbacks are, I shouldn't worry?

Briefly, inlineCallbacks is a "trick" for writing a series of Deferred
callback chains as a single generator. If you're not using it, you don't
really need to care about it, unless you end up reading some code that
uses it; but as far as I know, there is no code in Twisted itself that
uses it.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/b32e0ec5/attachment.pgp 

From maarten at treewalker.org  Sat Jan 26 06:15:11 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 12:15:11 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126102534.GA358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<479B019C.5090806@hotmail.com>
	<20080126102534.GA358@mithrandi.za.net>
Message-ID: <200801261215.19869.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:

> Briefly, inlineCallbacks is a "trick" for writing a series of Deferred
> callback chains as a single generator. If you're not using it, you don't
> really need to care about it, unless you end up reading some code that
> uses it; but as far as I know, there is no code in Twisted itself that
> uses it.

Inline callbacks require the "yield returns a value" feature of Python 2.5, 
while Twisted itself does not depend on Python 2.5.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/ddee1d0a/attachment.pgp 

From maarten at treewalker.org  Sat Jan 26 06:51:27 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 12:51:27 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126004628.GA6125@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
Message-ID: <200801261251.34563.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:
> * Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:
> >>> the recent spate of inlineCallbacks-related posts alarms me.
> >
> > Why? Using inlineCallbacks just helps writing convenient syntax
> > utilizing deferreds. If you ever wrote code which uses lots of
> > deferreds, you know that the code is (visually) lacking a decent
> > structure. It's just not the way you think and makes things hard to
> > read. inlineCallbacks just turns this into a nice, linear piece of code
> > again (linear not to be confused with synchronous!).
>
> The problem I have with this is that I find that it actually obscures
> the flow of the code and data.

The low-level flow of code (control going back to the reactor) is obscured, 
but I think that is an advantage rather than a disadvantage, since the 
high-level flow of code (the sequence of operations) becomes more clear. 
The flow of data is explicit in both cases: it is either passed as callback 
parameters or as return values from "yield".

> Most deferred operations have no need to 
> be serialized, and shouldn't be; the linear nature of
> inlineCallbacks-style makes it very easy to accidentally serialize
> operations that could otherwise run in parallel instead. Even if you
> write the generator correctly, it's not as obvious what the actual flow
> is since it has been crunched into a linear-looking function.

There are quite a few cases in which the dependencies between the operations 
force sequential processing. In those cases, inline callbacks are useful.

For example, to serve a web page, I want to authenticate the user, then run 
a database query and finally present the result. Running the query before 
authenticating the user is not something I'd recommend. In some cases it 
might be possible to start presenting results before all queries are 
finished, but in many cases that is not worth the complexity.

Writing all your routines as inline callbacks without thinking about the 
dependencies is a bad idea though.

> Finally, 
> it is extremely hard to unit test a generator using inlineCallbacks, as
> there is no easy way of resuming the generator at certain points with
> certain state to test each part of the generator.

If the code using inline callbacks looks like this, there is no problem in 
testing the parts separately:

	result1 = yield function1(arg)
	result2 = yield function2(result1)

> I'm not necessarily convinced that inlineCallbacks is always bad, but it
> certainly leads to subtle traps in most cases, while providing little
> real benefit (despite the perceived benefit).

I've converted some routines I wrote before Twisted 2.5 to inline callbacks 
and it became a lot easier for me to read. Like any tool, it can be used or 
abused, but I definately think it has its uses.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/9eec3050/attachment.pgp 

From mithrandi at mithrandi.za.net  Sat Jan 26 07:01:07 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 14:01:07 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <200801261251.34563.maarten@treewalker.org>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
Message-ID: <20080126120106.GE358@mithrandi.za.net>

* Maarten ter Huurne <maarten at treewalker.org> [2008-01-26 12:51:27 +0100]:

> On Saturday 26 January 2008, Tristan Seligmann wrote:
> > * Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:
> > >>> the recent spate of inlineCallbacks-related posts alarms me.
> > >
> > > Why? Using inlineCallbacks just helps writing convenient syntax
> > > utilizing deferreds. If you ever wrote code which uses lots of
> > > deferreds, you know that the code is (visually) lacking a decent
> > > structure. It's just not the way you think and makes things hard to
> > > read. inlineCallbacks just turns this into a nice, linear piece of code
> > > again (linear not to be confused with synchronous!).
> >
> > The problem I have with this is that I find that it actually obscures
> > the flow of the code and data.
> 
> The low-level flow of code (control going back to the reactor) is obscured, 
> but I think that is an advantage rather than a disadvantage, since the 
> high-level flow of code (the sequence of operations) becomes more clear. 
> The flow of data is explicit in both cases: it is either passed as callback 
> parameters or as return values from "yield".

In the vast majority of network applications, I believe deferred
operations are not sequenced in a linear fashion; they're happening in
an overlapping and concurrent fashion. The problem with data flow in the
case of "yield" is that every time "yield" is invoked, all sorts of
state can get mutated around you that wouldn't normally happen when
calling another function. For a normal function, this also happens when
you return control to your caller, but by that time you don't care; but
in a generator, you're going to be resumed again. The "yield" keyword
doesn't seem to act as a very good "red flag" for this kind of context
switch, especially once it starts getting buried in a more complex
expression.

> > Most deferred operations have no need to 
> > be serialized, and shouldn't be; the linear nature of
> > inlineCallbacks-style makes it very easy to accidentally serialize
> > operations that could otherwise run in parallel instead. Even if you
> > write the generator correctly, it's not as obvious what the actual flow
> > is since it has been crunched into a linear-looking function.
> 
> There are quite a few cases in which the dependencies between the operations 
> force sequential processing. In those cases, inline callbacks are useful.

I've personally encountered very few cases where there are more than a
handful of operations in sequence.

> For example, to serve a web page, I want to authenticate the user, then run 
> a database query and finally present the result.

Generally in my code, these are being handled by three different layers
of code that are mostly hooked up by Twisted and other frameworks; for
example, authentication is being handled by cred/guard in my web
applications. Thus, there isn't really any single function where all
these operations are plumbed together.

> > Finally, it is extremely hard to unit test a generator using
> > inlineCallbacks, as there is no easy way of resuming the generator
> > at certain points with certain state to test each part of the
> > generator.
> 
> If the code using inline callbacks looks like this, there is no problem in 
> testing the parts separately:
> 
> 	result1 = yield function1(arg)
> 	result2 = yield function2(result1)

But if it really looks like that, there's not much point in writing that
instead of this:

    result1 = function1(arg)
    result2 = result1.addCallback(function2)

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/0f45c448/attachment.pgp 

From maarten at treewalker.org  Sat Jan 26 07:41:55 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 13:41:55 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126120106.GE358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<200801261251.34563.maarten@treewalker.org>
	<20080126120106.GE358@mithrandi.za.net>
Message-ID: <200801261342.04000.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:
> * Maarten ter Huurne <maarten at treewalker.org> [2008-01-26 12:51:27 +0100]:
> > The low-level flow of code (control going back to the reactor) is
> > obscured, but I think that is an advantage rather than a disadvantage,
> > since the high-level flow of code (the sequence of operations) becomes
> > more clear. The flow of data is explicit in both cases: it is either
> > passed as callback parameters or as return values from "yield".
>
> In the vast majority of network applications, I believe deferred
> operations are not sequenced in a linear fashion; they're happening in
> an overlapping and concurrent fashion. The problem with data flow in the
> case of "yield" is that every time "yield" is invoked, all sorts of
> state can get mutated around you that wouldn't normally happen when
> calling another function. For a normal function, this also happens when
> you return control to your caller, but by that time you don't care; but
> in a generator, you're going to be resumed again. The "yield" keyword
> doesn't seem to act as a very good "red flag" for this kind of context
> switch, especially once it starts getting buried in a more complex
> expression.

The outside world changing is only a problem if you gather information about 
the outside world in stages, since you could end up with inconsistent data. 
However, this problem exists whether you store the gathered data in the 
local variables of an inline callback or in a data structure passed to 
non-inlined callbacks.

Whether "yield" is a worse red flag than separate functions I cannot really 
tell, since I wrote only one big application with Twisted and there I do 
all data gathering in a single operation. That is likely to change in the 
future though, when it will start fetching information from other servers.

> > There are quite a few cases in which the dependencies between the
> > operations force sequential processing. In those cases, inline
> > callbacks are useful.
>
> I've personally encountered very few cases where there are more than a
> handful of operations in sequence.

True, but even for a sequence of 3 operations I think it's already 
worthwhile.

> > For example, to serve a web page, I want to authenticate the user, then
> > run a database query and finally present the result.
>
> Generally in my code, these are being handled by three different layers
> of code that are mostly hooked up by Twisted and other frameworks; for
> example, authentication is being handled by cred/guard in my web
> applications. Thus, there isn't really any single function where all
> these operations are plumbed together.

I do authenticate using cred. I don't use Nevow though: I played with it a 
bit and decided it was too complex for my taste (I was always wondering 
exactly when a substitution would be performed). So I wrote something 
specifically for our application: because it's less flexible it's also 
easier to use.

> > If the code using inline callbacks looks like this, there is no problem
> > in testing the parts separately:
> >
> > 	result1 = yield function1(arg)
> > 	result2 = yield function2(result1)
>
> But if it really looks like that, there's not much point in writing that
> instead of this:
>
>     result1 = function1(arg)
>     result2 = result1.addCallback(function2)

It doesn't literally look like that. What I mean is that if there is enough 
functionality to make it worth dedicating test cases to, then it's probably 
a good idea to put that functionality in a separate function. This is true 
for both inline and non-inline callbacks, and even for synchronous code.

The cases where inline callbacks really help are when the callback functions 
contain only 1 or 2 lines, for example logging a failure and propagating it 
using a different exception type.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/a5419011/attachment.pgp 

From steve at holdenweb.com  Sat Jan 26 09:01:07 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 26 Jan 2008 09:01:07 -0500
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
Message-ID: <479B3D23.20303@holdenweb.com>

Simon Pickles wrote:
> 
> 
> Nitro wrote:
>>
>> I am missing a quick overview about the high level concepts used in 
>> twisted such as Protocols, Factories, Reactors, Transports, etc and 
>> their interaction.
> 
> I am tempted to contribute something of my experiences getting my 
> tangled up in twisted. Care to help Matthias?

I hope you guys are coming to PyCon!

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nitro at dr-code.org  Sat Jan 26 09:18:22 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:18:22 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
Message-ID: <op.t5jjcwjrz3pzfc@nitrogenycs2>

Am 26.01.2008, 10:49 Uhr, schrieb Simon Pickles <sipickles at hotmail.com>:

> Nitro wrote:
>>
>> I am missing a quick overview about the high level concepts used in  
>> twisted such as Protocols, Factories, Reactors, Transports, etc and  
>> their interaction.
>
> I am tempted to contribute something of my experiences getting my  
> tangled up in twisted. Care to help Matthias?

I can try. It's been a while since I was working mainly on the twisted  
parts of my application. I hope I can remember the things I did not find  
or understand easily.
Other than that I can review things that your or somebody else writes.

-Matthias



From steve at holdenweb.com  Sat Jan 26 09:22:45 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 26 Jan 2008 09:22:45 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <20080126001334.6859.1564119011.divmod.quotient.677@ohm>
References: <fndsj4$7uv$1@ger.gmane.org>
	<20080126001334.6859.1564119011.divmod.quotient.677@ohm>
Message-ID: <fnffnn$tgg$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Fri, 25 Jan 2008 18:49:46 -0500, Steve Holden <steve at holdenweb.com> 
> wrote:
>> Cary Hull wrote:
>>> Hey, I think some Twisted related sessions at PyCon would be great.
>>> Based on what's been discussed so far, I would like to humbly suggest
>>> the following (kind of breaking it down):
>>>
>>> 1) Simple line based chat server/client.
>>> 2) Same thing except using AMP.
>>> 3) twistd and plugins
>>
>> These are things I would really like to get to, but I'm pretty sure 
>> half an hour isn't going to cover it. Maybe we should be thinking BOF 
>> instead, then we can take an evening over it under less stressful 
>> conditions (and, who knows, even drink a beer or two in the process).
> 
> Maybe I can get you to go a little bit further than that in restricting
> what you'd like to see covered.
> 
Aah, sweet sanity! Sorry about the delay in my reply, I wanted to wait 
until I could do this post justice (and it's not like PyCon is tomorrow).

> Off the top of my head, and only continuing until I get bored with making
> this point, here's what a "Twisted" session could cover:
> 
>  * event driven programming

Please. I've used event-driven scenarios in GUI frameworks, but I've 
never seen anything (please note: this does *not* imply that nothing 
exists) that makes clear the relationship between the Twisted reactor 
and the code surrounding it.

>  * Deferreds (making them; using them; debugging them; defgen;        
> locks/semaphors)

These are in essence the fundamentals, no? A complete picture of the 
lifetime of a failed and a successful deferred would, I feel, go a long 
way towards filling in the picture. Plus how deferreds can interact with 
each other?

>  * core reactor APIs

This too should go into the "must know" category, right?

>  * scheduling

If we could cover everything up to this point I'd be happy. Like you I 
think it's important to limit the scope if we want to achieve something 
worthwhile, and I can't spend *all* my PyCon time on Twisted. It will be 
up to you guys to make it enjoyable enough to keep me there :-)

Hopefully with community guidance I can lay the foundations for a 
mechanism (a pedagogy, if you will) that many people can use to flesh 
the rest out.

>  * implementing existing (TCP; UDP; IP) protocols

What, you mean they aren't all implemented yet? :-)

>  * designing new (TCP; UDP; IP) protocols

Good. That Twisted can get access to the raw network layer is something 
I wasn't aware of.

>  * using existing protocols in twisted core

Probably more essential than protocol design and implementation, I'd 
have thought.

>  * integrating a protocol implementation with cred

To make it an authenticated protocol? Haven't met cred yet.

>  * process control/interaction

I suppose one of the issues with twisted, like other asynchronous 
frameworks, is that you can screw things up really badly just by 
thoughtlessly blocking somewhere inside a handler. So this is probably 
important.

>  * implementing a realm
>  * implementing credentials/checkers
>  * writing services
>  * writing plugins (twistd; lore; cred)
>  * handy general-purpose python utilities
>  * adding new kinds of event sources to the reactor
>  * gui/pygame/etc integration
>  * threading
>  * using SQL databases
>  * Perspective Broker
>  * writing unit tests
>  * using trial
>  * extending trial
> 
While the above remaining core issues are all valuable, I don't see us 
getting to them at PyCon.

> Wandering outside of the core of Twisted:
> 
>  * serving web pages
>  * running a chat server
>  * extending the chat server
>  * jabber (jabber; jabber; jabber; sasl; jabber)

I gather you think jabber is significant?

>  * marking up documentation

The more widely this knowledge is disseminated, hopefully, the better 
the documentation will be.

>  * dns servers and clients
>  * usenet servers and clients
>  * ssh/sftp clients/servers
>  * telnet clients/servers
>  * asynchronous terminal interaction
>  * terminal widget rendering
>  * smtp client/server
>  * imap4 client/server
>  * pop3 client/server
> 
> Are any of these the things you have in mind?  Can I get you to pick
> a very small number of them (1 or 2 per hour at most, I suspect; some
> are smaller, others are quite large)?  Or did you have something else
> in mind?
> 
Your detailed knowledge of the structure of Twisted lays bare the huge 
amount of work that *could* be done. However, there may be perfectly 
adequate existing materials on some or all of these topics, and I am 
happy to be pointed towards them.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nitro at dr-code.org  Sat Jan 26 09:42:52 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:42:52 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126120106.GE358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
	<20080126120106.GE358@mithrandi.za.net>
Message-ID: <op.t5jkhqh4z3pzfc@nitrogenycs2>

Am 26.01.2008, 13:01 Uhr, schrieb Tristan Seligmann  
<mithrandi at mithrandi.za.net>:

> In the vast majority of network applications, I believe deferred
> operations are not sequenced in a linear fashion;

Deferreds are not network application specific. They're related to  
asynchronous things in general. For example I make good use of them for  
some GUI things, too. I have cut and pasted some examples from my code  
below.

Examples:

Ex. 1: This waits for things to arrive over network then displays it.

     @inlineCallbacks
     def onLoadSceneButton(self, evt):
         worlds = yield self.app.client.getAvailableWorlds()
         dlg = SimpleListBoxDialog(self.gui, worlds)
         try:
             name = yield dlg.showModal()
         except EmptySelectionException:
             print 'Not setting a new world!'
         else:
             self.app.sendEvent( Events.setGameWorld(name) )



Ex. 2: A simple GUI based game where you have to guess a number between 0  
and 999

class GuessNumberGame(Minigame.Minigame):
     name = 'Guess the number'

     @inlineCallbacks
     def start(self):
         #'Ok. The number I chose is between 0-999. Now you have to guess.  
I will'
         #'tell you if your number is lower or higher than mine. If you  
need more'
         #'than 10 attempts you lost.'

         player = self.players[0]

         number = random.randint(0,999)

         won = False
         result = ''
         for i in range(0,10):
             guess = yield player.getNextMove( (i, result) )	# here we wait  
for the user to enter something into the GUI
             if guess > number:
                 result = 'too high'
                 player.setMessage('too high')
             elif guess < number:
                 result = 'too low'
                 player.setMessage('too low')
             else:
                 won = True
                 player.setMessage( "You've won! %d was the magic number" %  
number )
                 break

         if not won:
             player.setMessage( "You've lost! %d was the magic number" %  
number )



From nitro at dr-code.org  Sat Jan 26 09:45:13 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:45:13 +0100
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <479B3D23.20303@holdenweb.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<479B3D23.20303@holdenweb.com>
Message-ID: <op.t5jklni5z3pzfc@nitrogenycs2>

Am 26.01.2008, 15:01 Uhr, schrieb Steve Holden <steve at holdenweb.com>:

> Simon Pickles wrote:
>>   Nitro wrote:
>>>
>>> I am missing a quick overview about the high level concepts used in  
>>> twisted such as Protocols, Factories, Reactors, Transports, etc and  
>>> their interaction.
>>  I am tempted to contribute something of my experiences getting my  
>> tangled up in twisted. Care to help Matthias?
>
> I hope you guys are coming to PyCon!

Sorry, I won't come.

-Matthias



From steve at shrogers.com  Sat Jan 26 10:21:02 2008
From: steve at shrogers.com (Steven H. Rogers)
Date: Sat, 26 Jan 2008 08:21:02 -0700
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fnffnn$tgg$1@ger.gmane.org>
References: <fndsj4$7uv$1@ger.gmane.org>	<20080126001334.6859.1564119011.divmod.quotient.677@ohm>
	<fnffnn$tgg$1@ger.gmane.org>
Message-ID: <479B4FDE.8000900@shrogers.com>

I'm a lurker who's dabbled a bit with twisted, but never seriously used 
it.  I have a large application that wants refactoring and Twisted may 
help.  I'm planning to attend PyCon and if a 'Teach Me Twisted' BoF does 
materialize, I can show up and ask questions, if nothing else.

Items of most interest to me are fairly basic:

>>  * event driven programming
>>  * Deferreds (making them; using them; debugging them; defgen;        
>> locks/semaphors)
>>  * core reactor APIs
>>  * scheduling
>>  * using existing protocols in twisted core
>>  * process control/interaction
>> * gui/pygame/etc integration
I agree with Steve Holden that while the other topics are important, it 
would be difficult to do them justice in one session.  If this BoF could 
be staged early in the conference, and there is sufficient 
interest/energy, perhaps they could be covered in a second session.

Regards,
Steve

"Every program is a part of some other program and rarely fits." -- Alan 
Perlis




From sipickles at hotmail.com  Sat Jan 26 11:32:12 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 16:32:12 +0000
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <479B3D23.20303@holdenweb.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<479B3D23.20303@holdenweb.com>
Message-ID: <BAY114-DAV3A5841D3AECA4FCD5F0E7BE3A0@phx.gbl>



Steve Holden wrote:
>
> I hope you guys are coming to PyCon!
>

I wish!






From sipickles at hotmail.com  Sat Jan 26 11:33:49 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 16:33:49 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5jjcwjrz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<op.t5jjcwjrz3pzfc@nitrogenycs2>
Message-ID: <BAY114-DAV8434C829B5E2C1450C94DBE3A0@phx.gbl>



Nitro wrote:
> Other than that I can review things that your or somebody else writes.
>
>
When my workload cools of a little I will have a stab at writing a 
twisted for dumasses page or two if you like. Give me a week or two.





From andrewfr_ice at yahoo.com  Sat Jan 26 13:02:41 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 26 Jan 2008 10:02:41 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <E1JIYJN-0008IU-J3@cube.twistedmatrix.com>
Message-ID: <176394.73235.qm@web34214.mail.mud.yahoo.com>

Hello Matthias:

>User defer.returnValue(result) instead of return.

No I previously tried using defer.returnValue(), not
expecting it to work, and it did not.

The calling function (some method in PyAMF) is
expecting a value from the return statement, a return
that cannot be set with an argument.

Cheers,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at divmod.com  Sat Jan 26 14:09:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 26 Jan 2008 14:09:43 -0500
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <176394.73235.qm@web34214.mail.mud.yahoo.com>
Message-ID: <20080126190943.6859.1925608543.divmod.quotient.1133@ohm>

On Sat, 26 Jan 2008 10:02:41 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Matthias:
>
>>User defer.returnValue(result) instead of return.
>
>No I previously tried using defer.returnValue(), not
>expecting it to work, and it did not.
>
>The calling function (some method in PyAMF) is
>expecting a value from the return statement, a return
>that cannot be set with an argument.

Matthias's suggestion was the only correct one.  It seems you
want to use inlineCallbacks to do something which it cannot do.

Here's a tiny sample of something that's not possible:

    def asyncOp():
        result = yield getPage(...)
        yield returnValue(result)
    asyncOp = inlineCallbacks(asyncOp)

    def syncOp():
        result = asyncOp()
        print "The page is", result

However, this is possible:

    # define asyncOp as above

    def anotherAsyncOp():
        resultDeferred = asyncOp()
        def gotResult(result):
            print "The page is", result
        resultDeferred.addCallback(gotResult)
        return resultDeferred
        
In other words, inlineCallbacks lets you suspend execution, _inside_ the
function you decorate with it, until a result is available.  It only lets
you do this _inside_.  Outside, the decorated function simply appears to
return a Deferred.

Jean-Paul



From andrewfr_ice at yahoo.com  Sat Jan 26 15:21:45 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 26 Jan 2008 12:21:45 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator rather
	than a Deferred
Message-ID: <506614.25121.qm@web34212.mail.mud.yahoo.com>

Hello Folks:

As I previously mentioned, I have the following called
from a PyAMF method:

@defer.inlineCallbacks
def echo(self, x):
    result = yield client.getPage("http://localhost")

because of the yield, I cannot use

    return result

In a bout of wishful thinking, I tried the following:

@defer.inlineCallbacks
def __echo__(self, x):
    result = yield client.getPage("http://localhost")
    yield result


def echo(self, x):
    return self.__echo__(x).next()

This raises an AttributeError, the deferred does not
have an attribute next() (this is because the deferred
is well, a deferred)

Again, perhaps I am missing something obvious. Or
perhaps this scenario was not anticipated and syntax
is getting in the way. However I think the following
would be useful in these situations


def echo(self, x)
    @defer.returnAGenerator
    def __echo__(x):
        result = yield client.getPage("...")
        yield result

    """
    the method waits until there is a result
    """
    return __echo__(x).next()

and the wrapper (i.e., PyAMF, xmlrpc, etc) is happy.

I started to look at defer.inlineCallbacks and its
associated methods, such as and _inlineCallbacks,
unwindGenerator, and mergeFunctionMetadata. 

I would like to know if it would make sense to just
return a generator and have it behave the way I want.
If so, what exactly do I have to do in some variation
of _inlineCallbacks to make this so?

Thanks,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From nitro at dr-code.org  Sat Jan 26 15:59:26 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 21:59:26 +0100
Subject: [Twisted-Python] Making inlineCallback return a generator rather
	than a Deferred
In-Reply-To: <506614.25121.qm@web34212.mail.mud.yahoo.com>
References: <506614.25121.qm@web34212.mail.mud.yahoo.com>
Message-ID: <op.t5j1xcllz3pzfc@nitrogenycs2>

Am 26.01.2008, 21:21 Uhr, schrieb Andrew Francis <andrewfr_ice at yahoo.com>:

> Hello Folks:
>
> As I previously mentioned, I have the following called
> from a PyAMF method:
>
> @defer.inlineCallbacks
> def echo(self, x):
>     result = yield client.getPage("http://localhost")
>
> because of the yield, I cannot use
>
>     return result

@defer.inlineCallbacks
def echo(self, x):
     result = yield client.getPage("http://localhost")
     defer.returnValue(result)



From mithrandi at mithrandi.za.net  Sat Jan 26 16:28:34 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 23:28:34 +0200
Subject: [Twisted-Python] Making inlineCallback return a generator
	rather than a Deferred
In-Reply-To: <506614.25121.qm@web34212.mail.mud.yahoo.com>
References: <506614.25121.qm@web34212.mail.mud.yahoo.com>
Message-ID: <20080126212834.GA17651@mithrandi.za.net>

* Andrew Francis <andrewfr_ice at yahoo.com> [2008-01-26 12:21:45 -0800]:

> Again, perhaps I am missing something obvious. Or
> perhaps this scenario was not anticipated and syntax
> is getting in the way. However I think the following
> would be useful in these situations
> 
> 
> def echo(self, x)
>     @defer.returnAGenerator
>     def __echo__(x):
>         result = yield client.getPage("...")
>         yield result
> 
>     """
>     the method waits until there is a result
>     """
>     return __echo__(x).next()
> 
> and the wrapper (i.e., PyAMF, xmlrpc, etc) is happy.

This is essentially impossible to implement; you need some way to
suspend the code that is invoking the generator, and there isn't any
general way to this in Python. There is nothing magical about the
.next() method on a generator, it is just a normal synchronous function
call.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
Url : http://twistedmatrix.com/pipermail/twisted-python/attachments/20080126/89ff60a0/attachment.pgp 

From exarkun at twistedmatrix.com  Sun Jan 27 00:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Jan 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1201410306.76.1819466348@twistedmatrix.com

An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080127/f39c3f1c/attachment.htm 

From lxx1234 at gmail.com  Sun Jan 27 10:55:22 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Sun, 27 Jan 2008 23:55:22 +0800
Subject: [Twisted-Python] How to get the real ClientFactory or ServerFactory
	object?
In-Reply-To: <33fd431f0801270753r4af17df3s3c69900699d35722@mail.gmail.com>
References: <33fd431f0801270753r4af17df3s3c69900699d35722@mail.gmail.com>
Message-ID: <33fd431f0801270755w4ad425e8t1bdb92c8e2dec712@mail.gmail.com>

Hi all:
     I am new to twisted,i want to write a program like a proxy,which
get data from simplely listen to local client,transport it request to
real server,and the reply to the client.My plan is rewrite the
dataReceived method in twisted.internet.protocol.Protocol and call the
sendLine method in ServerFactory.But i failed beacuse i can not get
the real ServerFactory object,when i set  in ServerFactory

       testFactory=StdioProxyFactory()
       host = "202.108.42.15"
       port = 8848
       reactor.connectTCP(host,port,testFactory)
       testFactory.protocol.server=self

but it a error say testFactory.protocol.server is None when i use it
How can i did like this ,or do it another way?Thanks



From andrewfr_ice at yahoo.com  Sun Jan 27 13:05:18 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 27 Jan 2008 10:05:18 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <E1JJ9qy-00024M-H8@cube.twistedmatrix.com>
Message-ID: <439164.30609.qm@web34210.mail.mud.yahoo.com>


Hello Nitro:

>@defer.inlineCallbacks
>def echo(self, x):
>     result = yield
client.getPage("http://localhost")
>     defer.returnValue(result)

According to the documentation, defer.returnValue()
returns a value. The problem in this scenario is that
the inlineCallback is being used in the following
context:

def SomeFunction(x):
    .
    .
    result = echo(x)
    .
    .
    .


you need to call return so that SomeFunction can get a
result. Think of SomeFunction being the underlying
code for a XmlRpc like protocol.

Cheers,
Andrew


      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From andrewfr_ice at yahoo.com  Sun Jan 27 14:07:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 27 Jan 2008 11:07:32 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <E1JJ9qy-00024M-H8@cube.twistedmatrix.com>
Message-ID: <752798.43764.qm@web34212.mail.mud.yahoo.com>

Hello Jean-Paul Calderone:

>In other words, inlineCallbacks lets you suspend
>execution, _inside_ the function you decorate with
it, >until a result is available.  It only lets
>you do this _inside_.  Outside, the decorated
function >simply appears to return a Deferred.

Thanks for the explanation.

Currently I use Stackless to allow my code to make
synchronous calls that use Twisted. I still have to
study inlineCallbacks but it seems that both Stackless
and inclineCallbacks approaches seem to hiccup when
dealing with protocols that are invoked as a function
call and expect a return. 

for instance, @inlineCallbacks seem to be suited for
something like HTTP :

@defer.inlineCallbacks
def process(self):
    try:
        result = yield client.getPage(...)
    except Exception, err:
        log.err(err, "process getPage call failed")
    else:
        self.write(result)
        self.finish()

because one can pass the inlineCallback, a reference
to the request and process() does not return anything

On the other hand, using a higher level mechanism
(i.e., resource.render() would be more problematic - 

This seems to imply that if one wishes to design a
protocol that works nicely with inlineCallbacks, one
should provide access to the request, so that one
could write:

@defer.inlineCallbacks:
def echo(self, request):
    try:
        result = yield client.getPage(...)
    except Exception, err:
        log.err(err, "process getPage call failed")
    else:
        request.returnValue(result)

Is this a fair assessment?

I recognize the way most Twisted protocols work is
perfectly great for most Twisted uses. It seems that
the stuff I do (WS-BPEL), that involves, for lack of a
better term, process composition. And process
composition manifests itself as stuff like, request
handlers making requests to other web resources. Hence
a desire to make this as simple as possible.

Cheers,
Andrew










      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From nitro at dr-code.org  Sun Jan 27 18:29:45 2008
From: nitro at dr-code.org (Nitro)
Date: Mon, 28 Jan 2008 00:29:45 +0100
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <439164.30609.qm@web34210.mail.mud.yahoo.com>
References: <439164.30609.qm@web34210.mail.mud.yahoo.com>
Message-ID: <op.t5l3jvn1z3pzfc@nitrogenycs2>

> def SomeFunction(x):
>     .
>     .
>     result = echo(x)
>     .
>     .
>     .

Maybe I am missing something or we're going in circles, but how about

@inlineCallbacks
def SomeFunction(x):
     result = yield echo(x)

You should not use inlineCallbacks on echo itself. You need to use it on  
the function that calls echo. That's a difference.

-Matthias



From daedalus at eigenmagic.com  Sun Jan 27 20:47:04 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Mon, 28 Jan 2008 12:47:04 +1100
Subject: [Twisted-Python] twistedsnmp
In-Reply-To: <m3prvpn37v.fsf@neo.luffy.cx>
References: <m3prvpn37v.fsf@neo.luffy.cx>
Message-ID: <1201484824.11956.11.camel@fnord.melbourne.eigenmagic.net>

On Fri, 2008-01-25 at 19:56 +0100, Vincent Bernat wrote:
> Hello !
> 
> I had to use agent part of twistedsnmp [0]. This part was primarily done
> to  test  manager part,  therefore,  it  lacks  important features  like
> handling of deferred to return results. To circumvent this limitation, I
> have  hacked a  bit  to  make a  small  patch to  allow  limited use  of
> deferred [1].

You could try libsnmp[1]: http://www.seafelt.com/libsnmp. It's been in
active, production use for several years now by various people.

> I have  proposed the patch to the  author but got no  answer. Looking at
> the CVS  [2], it seems that  twistedsnmp is unmaintained  since almost 2
> years.  Has  anybody  any news  about  this?  Is  there any  reason  why
> twistedsnmp is not integrated into Twisted?

No idea. I have proposed merging libsnmp with twisted at some stage, and
really should get it done. For an example of how to use libsnmp with
twisted, check out the seafelt-backend code here:
http://www.seafelt.com/software/seafelt-daily/sources/, specifically
lib/seafelt/poller_snmp.py.

[1] Disclosure: I wrote libsnmp, so I'm biased about how good it is.

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Sun Jan 27 21:47:48 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Mon, 28 Jan 2008 13:47:48 +1100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <200801261251.34563.maarten@treewalker.org>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
Message-ID: <1201488469.11956.56.camel@fnord.melbourne.eigenmagic.net>

On Sat, 2008-01-26 at 12:51 +0100, Maarten ter Huurne wrote:
> On Saturday 26 January 2008, Tristan Seligmann wrote:

> > Most deferred operations have no need to 
> > be serialized, and shouldn't be; the linear nature of
> > inlineCallbacks-style makes it very easy to accidentally serialize
> > operations that could otherwise run in parallel instead. Even if you
> > write the generator correctly, it's not as obvious what the actual flow
> > is since it has been crunched into a linear-looking function.

I dunno about this. Serialisation is really common, in my experience.
People are also more used to thinking about things in terms of
sequential actions (do this, then do this, then do this other thing),
which is probably one reason why parallel programming is hard, and why
inlineCallbacks are so appealing.

> There are quite a few cases in which the dependencies between the operations 
> force sequential processing. In those cases, inline callbacks are useful.
> 
> For example, to serve a web page, I want to authenticate the user, then run 
> a database query and finally present the result. Running the query before 
> authenticating the user is not something I'd recommend. In some cases it 
> might be possible to start presenting results before all queries are 
> finished, but in many cases that is not worth the complexity.

Hear hear.

I have a bunch of code that has benefited from refactoring to use
inlineCallbacks for exactly these reasons. Sometimes there is a
sequential flow of data from function to function:

for device in device_list:
  get_some_data_from_device()
    |--parse_data_and_fetch_more_based_on_parse_result()
       |--parse_this_stuff_and_insert_into_database_maybe()
          |--reschedule_poll_for_data()

Manually setting up the deferredChain made my code hard (for me) to
read. Maybe I'm just a bad coder.

> Writing all your routines as inline callbacks without thinking about the 
> dependencies is a bad idea though.

Not thinking about what you're doing is generally bad, yes, but what if
you were to write everything with inlineCallbacks, then optimise to make
needlessly sequential parts parallel?

I've used inlineCallbacks to quickly convert someone else's blocking
Python code to async twisted code, with very little change to the code's
structural flow. The last time I did this, without inlineCallbacks, was
painful, buggy and slow. Anything that helps me unblock code with
twisted is good.

> > Finally, 
> > it is extremely hard to unit test a generator using inlineCallbacks, as
> > there is no easy way of resuming the generator at certain points with
> > certain state to test each part of the generator.
> 
> If the code using inline callbacks looks like this, there is no problem in 
> testing the parts separately:
> 
> 	result1 = yield function1(arg)
> 	result2 = yield function2(result1)
> 
> > I'm not necessarily convinced that inlineCallbacks is always bad, but it
> > certainly leads to subtle traps in most cases, while providing little
> > real benefit (despite the perceived benefit).
> 
> I've converted some routines I wrote before Twisted 2.5 to inline callbacks 
> and it became a lot easier for me to read. Like any tool, it can be used or 
> abused, but I definately think it has its uses.

Yep. The biggest benefit for me has been to make my twisted code feel
more readable overall, which is one of the best bits about Python. In
the past I've felt a bit guilty when writing complex deferred chains
with twisted.. almost like I'd just done something in perl. ;)

Heh. I'm such a fanboy.

-- 
Justin Warren <daedalus at eigenmagic.com>



From tarjei at nu.no  Mon Jan 28 09:29:11 2008
From: tarjei at nu.no (tarjei)
Date: Mon, 28 Jan 2008 15:29:11 +0100
Subject: [Twisted-Python] Stoping a deferedList
Message-ID: <479DE6B7.8060103@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I'm using the FtpClient to upload a set of files. I start the uploads
with the following code:


   def fileError(self, result):
        log.msg("Error has happened" + result.getErrorMessage())
        log.msg(result.trap(Exception))
        return result

    def endError(self, result):
        log.msg("End Error has happened")
        self.client.quit()
        self.client.transport.loseConnection()
        result.trap(Exception)

    def connectionMade(self,ftpClient):
        "Checks if there are more files to upload and uploads them."
        deffereds = []
        "We'll need the client to do a disconnect later"
        self.client = ftpClient
        " Create defereds for each of the different files to be uploaded"
        for upfile in self.ftpFiles:
            store, finish = ftpClient.storeFile(self._getPath(
upfile.get_name() ) )
            finish.addCallback(self.end).addErrback(self.fileError)
            store.addCallback(self.send_file, upfile
).addErrback(self.fileError)
            deffereds.append(store)
            deffereds.append(finish)
            self.numfiles += 1
        return
defer.gatherResults(deffereds).addCallback(self.success).addErrback(self.endError)


Now, if an error happens during the upload of one file, then I want to
stop the other files as well and close the connection. When I try to run
tests using the above code, trial reports that it still has open
connections.

The code works fine if user has access to save the files, it is the
error handling I want to get done right.

What should I do to ensure that all connections get closed when an error
happens?

kind regards,
Tarjei
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHnea3YVRKCnSvzfIRAh3RAJ9lrMzQBJOMtIo1qcuntbkZlX5HMACfZNS8
St7eOg43MC4mTR2Qh9XWAX4=
=aJCZ
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Mon Jan 28 10:06:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Jan 2008 10:06:35 -0500
Subject: [Twisted-Python] Stoping a deferedList
In-Reply-To: <479DE6B7.8060103@nu.no>
Message-ID: <20080128150635.6859.271681178.divmod.quotient.1801@ohm>

On Mon, 28 Jan 2008 15:29:11 +0100, tarjei <tarjei at nu.no> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Hi,
>
>I'm using the FtpClient to upload a set of files. I start the uploads
>with the following code:
>
>
>   def fileError(self, result):
>        log.msg("Error has happened" + result.getErrorMessage())
>        log.msg(result.trap(Exception))
>        return result
>
>    def endError(self, result):
>        log.msg("End Error has happened")
>        self.client.quit()
>        self.client.transport.loseConnection()
>        result.trap(Exception)

This trap call is a bit pointless.  Everything is an Exception.

>
>    def connectionMade(self,ftpClient):
>        "Checks if there are more files to upload and uploads them."
>        deffereds = []
>        "We'll need the client to do a disconnect later"
>        self.client = ftpClient
>        " Create defereds for each of the different files to be uploaded"
>        for upfile in self.ftpFiles:
>            store, finish = ftpClient.storeFile(self._getPath(
>upfile.get_name() ) )
>            finish.addCallback(self.end).addErrback(self.fileError)
>            store.addCallback(self.send_file, upfile
>).addErrback(self.fileError)

Here you've started a transfer (at least, I assume that's what send_file
does).  This is the operation you want to abort later.  So you need some
operation-specific API for aborting it.  I'm not sure what's in send_file,
so I dunno what that API might be, but that's the key to doing what you
want.

>            deffereds.append(store)
>            deffereds.append(finish)
>            self.numfiles += 1
>        return
>defer.gatherResults(deffereds).addCallback(self.success).addErrback(self.endError)
>
>
>Now, if an error happens during the upload of one file, then I want to
>stop the other files as well and close the connection. When I try to run
>tests using the above code, trial reports that it still has open
>connections.

When an error happens during the upload of one file, endError will be called
with a Failure that indicates which upload failed.  This will let you invoke
the operation-specific cancelling API for all the _other_ uploads.

Jean-Paul



From andrewfr_ice at yahoo.com  Mon Jan 28 12:57:46 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 28 Jan 2008 09:57:46 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <E1JJXL1-0001li-KN@cube.twistedmatrix.com>
Message-ID: <627021.25211.qm@web34201.mail.mud.yahoo.com>

Hello Nitro:

> def SomeFunction(x):
>     .
>     .
>     result = echo(x)
>     .
>     .
>     .

>Maybe I am missing something or we're going in
>circles, but how about

>@inlineCallbacks
>def SomeFunction(x):
>     result = yield echo(x)

Thanks for the information. However there is something
you are missing. The 'something' is that one would
have to alter a particular protocol's code (the
SomeFunction) to call echo(x) in this fashion.

Cheers,
Andrew






      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From daedalus at eigenmagic.com  Mon Jan 28 18:04:53 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 29 Jan 2008 10:04:53 +1100
Subject: [Twisted-Python] Adding code to twisted
Message-ID: <1201561493.8146.10.camel@localhost>

Hi all,

Recent list activity has reminded me that I have some code that I'd like
to add to the twisted codebase. I've had a browse of the developer docs,
which seem geared towards patching, so how should I approach adding
chunks of new features?

Specifically, I have 2 pieces of code to add:

1. libsnmp, twisted-ified. This is my pure Python SNMP library that has
been successfully used with twisted for several years now, on both my
own projects and other people's. Adding this into twisted has been
briefly mentioned on the list before.

2. A ZAPI[1] protocol implementation. I built some ZAPI handling code
for ModiPY[2] that uses twisted, and I figured other people might also
find it useful if they have a need to talk to NetApp kit.

Is there any interest in having these things added to twisted? If so,
could the appropriate admins maybe email me off list about how to do
this?

[1] ZAPI is an XML over HTTP thing used by Network Appliance storage
devices for command and control.
[2] http://modipy.seafelt.com/browser/trunk/netapp.py

-- 
Justin Warren <daedalus at eigenmagic.com>



From jml at mumak.net  Mon Jan 28 22:53:04 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 29 Jan 2008 14:53:04 +1100
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <1201561493.8146.10.camel@localhost>
References: <1201561493.8146.10.camel@localhost>
Message-ID: <d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>

On Jan 29, 2008 10:04 AM, Justin Warren <daedalus at eigenmagic.com> wrote:
> Hi all,
>
> Recent list activity has reminded me that I have some code that I'd like
> to add to the twisted codebase. I've had a browse of the developer docs,
> which seem geared towards patching, so how should I approach adding
> chunks of new features?
>
> Specifically, I have 2 pieces of code to add:
>
> 1. libsnmp, twisted-ified. This is my pure Python SNMP library that has
> been successfully used with twisted for several years now, on both my
> own projects and other people's. Adding this into twisted has been
> briefly mentioned on the list before.
>

This would be a nice thing to have.

> 2. A ZAPI[1] protocol implementation. I built some ZAPI handling code
> for ModiPY[2] that uses twisted, and I figured other people might also
> find it useful if they have a need to talk to NetApp kit.
>

I don't really know what this is, which means that I'm biased towards
not having it in Twisted.

> Is there any interest in having these things added to twisted? If so,
> could the appropriate admins maybe email me off list about how to do
> this?
>

You'll need commit access and you'll need to file a ticket for each of
these. Chris Armstrong or Jean-Paul Calderone should be able to give
you the former.

You should be warned that your code needs to be reviewed before it
hits the tree, and you'll need to have good unit tests.

Also, if you are going to add such big features, it's probably a good
idea to start tracking the mailing list.

jml



From glyph at divmod.com  Tue Jan 29 08:06:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 29 Jan 2008 13:06:15 -0000
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
References: <1201561493.8146.10.camel@localhost>
	<d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
Message-ID: <20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>

On 03:53 am, jml at mumak.net wrote:
>You should be warned that your code needs to be reviewed before it
>hits the tree, and you'll need to have good unit tests.

I want to repeat and emphasize this warning, because if you haven't 
submitted any patches before, you may be in for a nasty surprise ;).

It is, however, both good news and bad news.  The bad news is that it is 
probably going to be a lot of work.  You will need to live up to the 
current Twisted quality standards, which means:

  * Your tests will need to achieve at least 100% line-coverage
  * You will need to write docstrings for every public module, method, 
and class (including tests).
  * Docstrings will have to be formatted according to Twisted standard, 
including @param and @type markers where appropriate
  * The code will need to be cleaned up to meet the coding standard 
(trailing whitespace, unused imports, naming conventions, etc)

This means, in practice, that it will have to be better than some of the 
code already in twisted that was "grandfathered in" before we adopted 
these standards :).

The *really* bad news is that I can see that libsnmp is under the LGPL. 
Twisted is under the MIT license, and we are not going to add anything 
to it under a more restrictive license.  Do you have the authority to 
relicense all of that code?  i.e. have you received any contributions 
under the LGPL, and can you get in touch with everyone that you've 
received those contributions from and verify that they're OK with a 
license change?

The good news is that the code will probably get vastly better in the 
process.  I've written a few things which have been overhauled and 
radically improved as part of the process of getting them in to Twisted. 
However, the reason that the documentation is geared toward patching 
rather than addition of large features is that adding large features all 
at once can be daunting both for reviewers and authors of code.  For 
example, you can see what a "large" review looks like here:

    http://twistedmatrix.com/trac/ticket/1608#comment:27

You might want to break up libsnmp into a series of smaller chunks so 
that you can deal with the feedback in smaller chunks and get your 
contributions reviewed and integrated faster.



From andy at thecablelounge.com  Tue Jan 29 15:19:57 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Tue, 29 Jan 2008 12:19:57 -0800
Subject: [Twisted-Python] VFS status
In-Reply-To: <4799A6C2.8030001@nu.no>
References: <4799A6C2.8030001@nu.no>
Message-ID: <479F8A6D.10301@thecablelounge.com>

tarjei wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi, I need to copy a few files around using scp/sftp on a twisted server
> and started looking at VFS. There's a few things I wonder about:
> 
> 1. Is the API as unstable as the docs say?

Yes they are.

Andy.



From daedalus at eigenmagic.com  Wed Jan 30 00:30:16 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 30 Jan 2008 16:30:16 +1100
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>
References: <1201561493.8146.10.camel@localhost>
	<d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
	<20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>
Message-ID: <1201671016.15341.22.camel@localhost>

On Tue, 2008-01-29 at 13:06 +0000, glyph at divmod.com wrote:
> On 03:53 am, jml at mumak.net wrote:
> >You should be warned that your code needs to be reviewed before it
> >hits the tree, and you'll need to have good unit tests.
> 
> I want to repeat and emphasize this warning, because if you haven't 
> submitted any patches before, you may be in for a nasty surprise ;).

True.

> It is, however, both good news and bad news.  The bad news is that it is 
> probably going to be a lot of work.  You will need to live up to the 
> current Twisted quality standards, which means:

Nothing worthwhile is easy.

>   * Your tests will need to achieve at least 100% line-coverage
>   * You will need to write docstrings for every public module, method, 
> and class (including tests).
>   * Docstrings will have to be formatted according to Twisted standard, 
> including @param and @type markers where appropriate
>   * The code will need to be cleaned up to meet the coding standard 
> (trailing whitespace, unused imports, naming conventions, etc)
> 
> This means, in practice, that it will have to be better than some of the 
> code already in twisted that was "grandfathered in" before we adopted 
> these standards :).

This will indeed require work. On the plus side, this will make the code
better.

> The *really* bad news is that I can see that libsnmp is under the LGPL. 
> Twisted is under the MIT license, and we are not going to add anything 
> to it under a more restrictive license.  Do you have the authority to 
> relicense all of that code?  i.e. have you received any contributions 
> under the LGPL, and can you get in touch with everyone that you've 
> received those contributions from and verify that they're OK with a 
> license change?

libsnmp has already been relicensed under the MIT license. I'm guessing
there's some doco or an artifact out there that still refers to the LGPL
(which is was licensed under initially). If you could point it out, I'll
fix it to clear up any confusion.

And I wrote all the code myself. The only contributions I've received
have been some bug notifications.

> The good news is that the code will probably get vastly better in the 
> process.  I've written a few things which have been overhauled and 
> radically improved as part of the process of getting them in to Twisted. 
> However, the reason that the documentation is geared toward patching 
> rather than addition of large features is that adding large features all 
> at once can be daunting both for reviewers and authors of code.  For 
> example, you can see what a "large" review looks like here:
> 
>     http://twistedmatrix.com/trac/ticket/1608#comment:27
> 
> You might want to break up libsnmp into a series of smaller chunks so 
> that you can deal with the feedback in smaller chunks and get your 
> contributions reviewed and integrated faster.

I might try my hand at a patch or two to get the hang of things, and
work on getting my code up to scratch in the meantime.

Thanks for the detailed response. :)

-- 
Justin Warren <daedalus at eigenmagic.com>



From andrewfr_ice at yahoo.com  Wed Jan 30 10:07:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 30 Jan 2008 07:07:32 -0800 (PST)
Subject: Oops  Re: [Twisted-Python] Another inlinecallback
In-Reply-To: <E1JJXL1-0001li-KN@cube.twistedmatrix.com>
Message-ID: <352828.53311.qm@web34205.mail.mud.yahoo.com>

Hello Folks:
 
> On the other hand, using a higher level mechanism
> (i.e., resource.render() would be more problematic -

Oops, bad example - I looked over examples and
resource render() does take a request. Still I hope
the gist of what I perceive the problem comes through.

InlineCallbacks are powerful - I just wish to
understand their limitations and where they can be
most effectively used.

Thanks,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From sipickles at hotmail.com  Wed Jan 30 15:15:44 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 30 Jan 2008 20:15:44 +0000
Subject: [Twisted-Python] Events in Python
Message-ID: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>

Hi,

I have a stackless python app, using twisted in parts (.internet and 
.adbapi).

I need a little help getting pythonic after years of c++ hell.

I'd like to use a system of events and observers, like c++ boost.signal.

I'd like to be able to subscribe multiple callbacks to a single function 
and cal them all using something like:

event.invoke("some data to send with invocation")

I'm thinking twisted callbacks do this:

 def observe(self, f);
      self.event.addcallback(f)

Are there other ways?

Thanks

Si

-- 
Linux user #458601 - http://counter.li.org.






From Andy at NewWorldElectric.com  Wed Jan 30 15:50:43 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 30 Jan 2008 15:50:43 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
Message-ID: <37d49ed40801301250w6e7ec09ay44b2b89ecb0a5812@mail.gmail.com>

Yeah, just keep a list of functions in your own code, no need to use twisted
for it and I've not seen twisted functions that really help.  something
like:

class event(object):
  def __init__(self):
    self.subscribers=[]
  def subscribe(self.f):
    self.subscribers.append(f)
  def invoke(self,*args,*kwargs):
    for function in subscribers:
      function(*args,**kwargs)

you can tweak that or whatever, but that's the basic pythonic way to do it
in my book(and in my code) a couple options to consider:
* in invoke, pass self to the function, I usually do that so I can have
functions that do whatever they do to the "event" subclass itself, as in a
clearOnFocus function attached to a text control which subclasses event,
whenever certain data is seen (type=focusEvent) clear the control.
* instead of storing functions store and .callback deffereds, of course
those can only be used once so change event.subscribe to event.wait for
clarity and reinitialize the list after invoke.

-Andy Fundinger

On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com> wrote:

> Hi,
>
> I have a stackless python app, using twisted in parts (.internet and
> .adbapi).
>
> I need a little help getting pythonic after years of c++ hell.
>
> I'd like to use a system of events and observers, like c++ boost.signal.
>
> I'd like to be able to subscribe multiple callbacks to a single function
> and cal them all using something like:
>
> event.invoke("some data to send with invocation")
>
> I'm thinking twisted callbacks do this:
>
>  def observe(self, f);
>      self.event.addcallback(f)
>
> Are there other ways?
>
> Thanks
>
> Si
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080130/8000b961/attachment.htm 

From Andy at NewWorldElectric.com  Wed Jan 30 15:56:17 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 30 Jan 2008 15:56:17 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
Message-ID: <37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>

Thinking a little further, a DeferredList does this too, keeping a whole
group of deferreds and calling them back all at once, I probably should use
that more in my own code.  Details at (
http://twistedmatrix.com/documents/current/api/twisted.internet.defer.DeferredList.html
)

- Andy Fundinger

On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com> wrote:

> Hi,
>
> I have a stackless python app, using twisted in parts (.internet and
> .adbapi).
>
> I need a little help getting pythonic after years of c++ hell.
>
> I'd like to use a system of events and observers, like c++ boost.signal.
>
> I'd like to be able to subscribe multiple callbacks to a single function
> and cal them all using something like:
>
> event.invoke("some data to send with invocation")
>
> I'm thinking twisted callbacks do this:
>
>  def observe(self, f);
>      self.event.addcallback(f)
>
> Are there other ways?
>
> Thanks
>
> Si
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080130/15b2245c/attachment.htm 

From sipickles at hotmail.com  Wed Jan 30 16:18:39 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 30 Jan 2008 21:18:39 +0000
Subject: [Twisted-Python] Events in Python
In-Reply-To: <37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
Message-ID: <BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>


Ah yes, deferredLists. thanks for the tip

Si

Andy Fundinger wrote:
> Thinking a little further, a DeferredList does this too, keeping a 
> whole group of deferreds and calling them back all at once, I probably 
> should use that more in my own code.  Details at 
> (http://twistedmatrix.com/documents/current/api/twisted.internet.defer.DeferredList.html)
>
> - Andy Fundinger
>
> On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com 
> <mailto:sipickles at hotmail.com>> wrote:
>
>     Hi,
>
>     I have a stackless python app, using twisted in parts (.internet and
>     .adbapi).
>
>     I need a little help getting pythonic after years of c++ hell.
>
>     I'd like to use a system of events and observers, like c++
>     boost.signal.
>
>     I'd like to be able to subscribe multiple callbacks to a single
>     function
>     and cal them all using something like:
>
>     event.invoke("some data to send with invocation")
>
>     I'm thinking twisted callbacks do this:
>
>      def observe(self, f);
>          self.event.addcallback(f)
>
>     Are there other ways?
>
>     Thanks
>
>     Si
>
>     --
>     Linux user #458601 - http://counter.li.org.
>
>
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Blog:  http://channel3b.wordpress.com
> Second Life Name:  Ciemaar Flintoff
>
> I am a sig Virus. Please put me in your sig so that I can continue to 
> replicate.
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   





From ssmiley483 at yahoo.com  Wed Jan 30 16:45:08 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Wed, 30 Jan 2008 13:45:08 -0800 (PST)
Subject: [Twisted-Python] Help with Simple Trial unit test
Message-ID: <232795.92050.qm@web31106.mail.mud.yahoo.com>

Hi all, 

I recently started learning Python & Twisted in prep for a big project at work.  So far things are going well, except that I can't quite figure out what I'm doing wrong in this simple unit test I'm writing.

One of the features of the project I'll be working on is the implementation of a simple HTTP GET Based communication layer between legacy systems.  As such, I wanted to write a simple unit test that uses the twisted client.getPage() method to test the communication process (i.e. simulates a legacy system requesting data from the server).

I have a test that sort of works.  However, I find that I have to add a reactor.run() command in the unit test for the test to actually be executed.  The unfortunate side affect of this is that you then have to ctrl+C to stop the reactor after the test runs.  If I don't put in the reactor.run() command, I get a "REACTOR UNCLEAN" error message and the test doesn't appear to run (at least the callbacks from getPage() never happen).

What am I doing wrong here?

Also, can you point me at any good references for working with Twisted and Trial?  I have the O'Reily book on Twisted which is a lot of help with the framework itself.  But it doesn't cover trial at all.

All development is occurring on an Ubuntu 7.10 machine using Python 2.5 and Twisted 2.5.

I'm executing the test from the console using: 
"trial ~/workspace/TestProject/src/tests/HttpGetTests.py"

Here is the source code for my test:

from twisted.trial import unittest
from twisted.internet import stdio, reactor, protocol, defer
from twisted.protocols import basic
from twisted.web import client

class HttpGetTests(unittest.TestCase):
    
    def testReportHit(self):
        def _handleError(reason):
            print "\n====>HttpGetTests.testReportHit()._handleError(): reason=%s\n" % reason
            self.fail("Test failed.  reason=%s" % reason)
        
        def _handleSuccess(data):
            print "\n====>HttpGetTests.testReportHit()._handleSuccess():\n"
            self.assert_(data.count>0, "No data returned")

        d = client.getPage("http://www.google.com")
        d.addCallback(_handleSuccess)
        d.addErrback(_handleError)
        reactor.run()





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From exarkun at divmod.com  Wed Jan 30 17:01:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Jan 2008 17:01:34 -0500
Subject: [Twisted-Python] Help with Simple Trial unit test
In-Reply-To: <232795.92050.qm@web31106.mail.mud.yahoo.com>
Message-ID: <20080130220134.6859.1832514512.divmod.quotient.2891@ohm>

On Wed, 30 Jan 2008 13:45:08 -0800 (PST), Shawn Smiley <ssmiley483 at yahoo.com> wrote:
>Hi all,
>
>I recently started learning Python & Twisted in prep for a big project at work.  So far things are going well, except that I can't quite figure out what I'm doing wrong in this simple unit test I'm writing.
>
>One of the features of the project I'll be working on is the implementation of a simple HTTP GET Based communication layer between legacy systems.  As such, I wanted to write a simple unit test that uses the twisted client.getPage() method to test the communication process (i.e. simulates a legacy system requesting data from the server).
>
>I have a test that sort of works.  However, I find that I have to add a reactor.run() command in the unit test for the test to actually be executed.  The unfortunate side affect of this is that you then have to ctrl+C to stop the reactor after the test runs.  If I don't put in the reactor.run() command, I get a "REACTOR UNCLEAN" error message and the test doesn't appear to run (at least the callbacks from getPage() never happen).

What happens if you take the Deferred created in the test method and return
it, instead of calling reactor.run()?

Jean-Paul



From ssmiley483 at yahoo.com  Wed Jan 30 17:16:10 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Wed, 30 Jan 2008 14:16:10 -0800 (PST)
Subject: [Twisted-Python] Help with Simple Trial unit test
Message-ID: <237211.69547.qm@web31110.mail.mud.yahoo.com>

Thanks a bunch Jean-Paul!!!

That was exactly my problem.

I replaced the reactor.run() line with "return d" and everything works perfectly.

So I guess the lesson here is that if a unit test creates a defer it needs to return that defer for everything to be hooked up properly and execute.


----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, January 30, 2008 2:01:34 PM
Subject: Re: [Twisted-Python] Help with Simple Trial unit test


On 
Wed, 
30 
Jan 
2008 
13:45:08 
-0800 
(PST), 
Shawn 
Smiley 
<ssmiley483 at yahoo.com> 
wrote:
>Hi 
all,
>
>I 
recently 
started 
learning 
Python 
& 
Twisted 
in 
prep 
for 
a 
big 
project 
at 
work.  
So 
far 
things 
are 
going 
well, 
except 
that 
I 
can't 
quite 
figure 
out 
what 
I'm 
doing 
wrong 
in 
this 
simple 
unit 
test 
I'm 
writing.
>
>One 
of 
the 
features 
of 
the 
project 
I'll 
be 
working 
on 
is 
the 
implementation 
of 
a 
simple 
HTTP 
GET 
Based 
communication 
layer 
between 
legacy 
systems.  
As 
such, 
I 
wanted 
to 
write 
a 
simple 
unit 
test 
that 
uses 
the 
twisted 
client.getPage() 
method 
to 
test 
the 
communication 
process 
(i.e. 
simulates 
a 
legacy 
system 
requesting 
data 
from 
the 
server).
>
>I 
have 
a 
test 
that 
sort 
of 
works.  
However, 
I 
find 
that 
I 
have 
to 
add 
a 
reactor.run() 
command 
in 
the 
unit 
test 
for 
the 
test 
to 
actually 
be 
executed.  
The 
unfortunate 
side 
affect 
of 
this 
is 
that 
you 
then 
have 
to 
ctrl+C 
to 
stop 
the 
reactor 
after 
the 
test 
runs.  
If 
I 
don't 
put 
in 
the 
reactor.run() 
command, 
I 
get 
a 
"REACTOR 
UNCLEAN" 
error 
message 
and 
the 
test 
doesn't 
appear 
to 
run 
(at 
least 
the 
callbacks 
from 
getPage() 
never 
happen).

What 
happens 
if 
you 
take 
the 
Deferred 
created 
in 
the 
test 
method 
and 
return
it, 
instead 
of 
calling 
reactor.run()?

Jean-Paul

_______________________________________________
Twisted-Python 
mailing 
list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From drew.smathers at gmail.com  Wed Jan 30 17:34:15 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 30 Jan 2008 17:34:15 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
Message-ID: <368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>

On Jan 30, 2008 4:18 PM, Simon Pickles <sipickles at hotmail.com> wrote:

>
> Ah yes, deferredLists. thanks for the tip
>


Just making sure you're not on the wrong track here.  Are we talking about
recurring events you subscribe to?  Remind yourself that Deferreds are a
one-shot deal - you can only call them once.


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://twistedmatrix.com/pipermail/twisted-python/attachments/20080130/acfa8068/attachment.htm 

From sipickles at hotmail.com  Thu Jan 31 02:41:26 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 31 Jan 2008 07:41:26 +0000
Subject: [Twisted-Python] Events in Python
In-Reply-To: <368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
Message-ID: <BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>



Drew Smathers wrote:
>
> Deferreds are a one-shot deal - you can only call them once.
>  
>
eeek! of course they are! Well at least in Python the roll-your-own 
option is very straight forward.

Thanks for the advice

Simon

-- 
Linux Counter: User# 424693 






From tdickenson at geminidataloggers.com  Thu Jan 31 06:17:26 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 31 Jan 2008 11:17:26 +0000
Subject: [Twisted-Python] Re: Events in Python
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
Message-ID: <fnsao6$iu0$1@ger.gmane.org>

Simon Pickles wrote:

> Drew Smathers wrote:
>>
>> Deferreds are a one-shot deal - you can only call them once.
>>
> eeek! of course they are! Well at least in Python the roll-your-own
> option is very straight forward.

Or check out http://pydispatcher.sourceforge.net/.

We use this extensively with twisted.... Deferred for one shot events, and
dispatcher for events that can be fired multiple times.




From drakesmith at adelphia.net  Thu Jan 31 07:05:45 2008
From: drakesmith at adelphia.net (Drake Smith)
Date: Thu, 31 Jan 2008 07:05:45 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <fnsao6$iu0$1@ger.gmane.org>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
	<fnsao6$iu0$1@ger.gmane.org>
Message-ID: <20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>

At 06:17 AM 1/31/2008, you wrote:
>Simon Pickles wrote:
>
> > Drew Smathers wrote:
> >>
> >> Deferreds are a one-shot deal - you can only call them once.
> >>
> > eeek! of course they are! Well at least in Python the roll-your-own
> > option is very straight forward.
>
>Or check out http://pydispatcher.sourceforge.net/.
>
>We use this extensively with twisted.... Deferred for one shot events, and
>dispatcher for events that can be fired multiple times.

Another Event Dispatcher may be found here, deep in the bowels of Twisted:

http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html




From waterbug at pangalactic.us  Thu Jan 31 09:17:53 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 31 Jan 2008 09:17:53 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <fnsao6$iu0$1@ger.gmane.org>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
	<fnsao6$iu0$1@ger.gmane.org>
Message-ID: <47A1D891.70003@pangalactic.us>

Toby Dickenson wrote:
> Simon Pickles wrote:
> 
>> Drew Smathers wrote:
>>> Deferreds are a one-shot deal - you can only call them once.
>>>
>> eeek! of course they are! Well at least in Python the roll-your-own
>> option is very straight forward.
> 
> Or check out http://pydispatcher.sourceforge.net/.
> 
> We use this extensively with twisted.... Deferred for one shot events, and
> dispatcher for events that can be fired multiple times.

Actually, the latest incarnation of PyDispatcher is Louie:

http://louie.berlios.de/

... which offers more features and works fine as a drop-in
replacement for PyDispatcher.

Steve



From exarkun at divmod.com  Thu Jan 31 09:45:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 09:45:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API for
 functions and methods.
In-Reply-To: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
Message-ID: <20080131144556.6859.1299563782.divmod.quotient.3216@ohm>

On Wed, 30 Jan 2008 18:51:09 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>
> [snip]
>
>Modified: trunk/twisted/python/versions.py
>==============================================================================
>--- trunk/twisted/python/versions.py	(original)
>+++ trunk/twisted/python/versions.py	Wed Jan 30 18:51:07 2008
>@@ -122,3 +122,14 @@
>         if ver is None:
>             return ''
>         return ' (SVN r%s)' % (ver,)
>+
>+
>+
>+def getVersionString(version):
>+    """
>+    Get a friendly string for the given version object.
>+
>+    @param version: A L{Version} object.
>+    @return: A string containing the package and short version number.
>+    """
>+    return '%s %s' % (version.package, version.short())

What's the right way to get a string describing a Version now?  It's an even
harder decision to make than it was before.  Is it:

  * str(Version(...))
  * repr(Version(...))
  * Version(...).base()
  * Version(...).short()
  * getVersionString(Version(...))

Can we do something to make this better?

Jean-Paul



From glyph at divmod.com  Thu Jan 31 11:11:10 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 Jan 2008 16:11:10 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
References: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
	<20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
Message-ID: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>

On 02:45 pm, exarkun at divmod.com wrote:
>What's the right way to get a string describing a Version now?  It's an 
>even
>harder decision to make than it was before.  Is it:
>
>  * str(Version(...))
>  * repr(Version(...))
>  * Version(...).base()
>  * Version(...).short()
>  * getVersionString(Version(...))
>
>Can we do something to make this better?

This collection is super ad-hoc.  Let me try to express some of the 
requirements that lead to the current confusion:

  * Sometimes you want a string that is formatted for use at a REPL, 
which can be eval'd to give the user the idea that it is a structured 
object and how they can build something similar (repr())
  * sometimes you want something that's human-readable and expresses all 
the information available about the version (str()).  The square 
brackets probably come from the fact that I was playing WoW at the time, 
and square brackets meant "this is a thing, not just something a guy 
said".  I was thinking you'd want to see like [Twisted Epic Spaulders of 
the Owl] for the version number.  (Maybe a bad call.)
  * Sometimes you want just the version number in canonical format 
(x.y.z+dev) not the name of the package (.short())
  * I hypothesize that sometimes you want to omit the +dev part because 
you're trying to fit into a stricter format, but I don't really remember 
why .base() exists.

Was getVersionString added because the other string representations 
weren't "friendly" enough?  I guess the 'rUnknown' makes them look a 
little gnarly, but I'd actually like to see the SVN revision in the 
cases where it's present; the right thing to do to make it friendly 
would be to fix the entries-file parser.

Also, in any case, it should really be a method.  There's no reason to 
have a free function defined right after a class whose only argument is 
a single instance of that class :).



From sipickles at hotmail.com  Thu Jan 31 11:12:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 31 Jan 2008 16:12:05 +0000
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>	<fnsao6$iu0$1@ger.gmane.org>
	<20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>
Message-ID: <BAY114-DAV194CC6E357F955288AE30BBE370@phx.gbl>



Drake Smith wrote:
>
> Another Event Dispatcher may be found here, deep in the bowels of 
> Twisted:
>
> http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html 
>
>
Thanks, I'll use it, I like the idea of not introducing TOO many 
dependancies.

Who knows what other gems lurk in the bowels of twisted? ;)

Simon





From exarkun at divmod.com  Thu Jan 31 11:20:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 11:20:56 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <BAY114-DAV194CC6E357F955288AE30BBE370@phx.gbl>
Message-ID: <20080131162056.6859.1127819429.divmod.quotient.3249@ohm>

On Thu, 31 Jan 2008 16:12:05 +0000, Simon Pickles <sipickles at hotmail.com> wrote:
>
>
>Drake Smith wrote:
>>
>>Another Event Dispatcher may be found here, deep in the bowels of Twisted:
>>
>>http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html
>Thanks, I'll use it, I like the idea of not introducing TOO many 
>dependancies.
>
>Who knows what other gems lurk in the bowels of twisted? ;)

Be ware of things found in bowels.

Jean-Paul



From exarkun at divmod.com  Thu Jan 31 11:23:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 11:23:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
Message-ID: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>

On Thu, 31 Jan 2008 16:11:10 -0000, glyph at divmod.com wrote:
>On 02:45 pm, exarkun at divmod.com wrote:
>>What's the right way to get a string describing a Version now?  It's an 
>>even
>>harder decision to make than it was before.  Is it:
>>
>>  * str(Version(...))
>>  * repr(Version(...))
>>  * Version(...).base()
>>  * Version(...).short()
>>  * getVersionString(Version(...))
>>
>>Can we do something to make this better?
>
>This collection is super ad-hoc.  Let me try to express some of the 
>requirements that lead to the current confusion:
>
>  * [snip - special-case view requirement]
>  * [snip - another special-case view requirement]
>  * [snip - another special-case view requirement]
>  * [snip - another special-case view requirement]
>
>Was getVersionString added because the other string representations weren't 
>"friendly" enough?  I guess the 'rUnknown' makes them look a little gnarly, 
>but I'd actually like to see the SVN revision in the cases where it's 
>present; the right thing to do to make it friendly would be to fix the 
>entries-file parser.
>
>Also, in any case, it should really be a method.  There's no reason to have 
>a free function defined right after a class whose only argument is a single 
>instance of that class :).
>

Maybe Version shouldn't be responsible for any view at all.  Maybe Version
is just a model class, and things that actually know what the view
requirements are can implement the view?

Jean-Paul



From glyph at divmod.com  Thu Jan 31 12:01:48 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 Jan 2008 17:01:48 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
Message-ID: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>

On 04:23 pm, exarkun at divmod.com wrote:
>Maybe Version shouldn't be responsible for any view at all.  Maybe 
>Version
>is just a model class, and things that actually know what the view
>requirements are can implement the view?

I agree insofar as the model is poorly exposed and documented.  The 
ivars have no documentation, and the only way to get the SVN revision is 
to call a private method or to mangle strings.

However, some of these "views" should definitely be attached to the 
class, for convenience and simplicity.  For example, a sensible __repr__ 
makes debugging and inspecting these things a lot easier.  Adding a new 
module, function, or class which does the string formatting means that 
users of Version will need to look somewhere else to perform the 
function they want, and ultimately it doesn't eliminate the confusion - 
"do I want the 'short dotted' view or the 'includes project but without 
development version' view?" - unless we also reduce the number of 
options available.



From exarkun at divmod.com  Thu Jan 31 12:24:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 12:24:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>
Message-ID: <20080131172444.6859.1682835797.divmod.quotient.3270@ohm>

On Thu, 31 Jan 2008 17:01:48 -0000, glyph at divmod.com wrote:
>On 04:23 pm, exarkun at divmod.com wrote:
>>Maybe Version shouldn't be responsible for any view at all.  Maybe Version
>>is just a model class, and things that actually know what the view
>>requirements are can implement the view?
>
>I agree insofar as the model is poorly exposed and documented.  The ivars 
>have no documentation, and the only way to get the SVN revision is to call a 
>private method or to mangle strings.
>
>However, some of these "views" should definitely be attached to the class, 
>for convenience and simplicity.  For example, a sensible __repr__ makes 
>debugging and inspecting these things a lot easier.

Having Version.__repr__ is fine.  __repr__ is a thing that Python classes
often have.

>Adding a new module, 
>function, or class which does the string formatting means that users of 
>Version will need to look somewhere else to perform the function they want, 
>and ultimately it doesn't eliminate the confusion - "do I want the 'short 
>dotted' view or the 'includes project but without development version' 
>view?" - unless we also reduce the number of options available.

What I had in mind was more that each application that wants to format
Version in some particular way can do the formatting itself, not that it
would pick an appropriate function from the version_view module and rely
on it to do the formatting.

The complexity of the code we're talking about foisting on an application
is on the order of "%s.%s" % (version.major, version.minor).  Not much of
a burden.  On the other hand, if we really want to make this easy, then
maybe Version should have a `format? method that just takes a format string
and does the interpolation for you.

Jean-Paul



From george at ringdevelopment.com  Thu Jan 31 13:22:06 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 31 Jan 2008 13:22:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation
	API for functions and methods.
In-Reply-To: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
References: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
	<20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
	<20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
Message-ID: <1201803726.27704.35.camel@localhost.localdomain>

On Thu, 2008-01-31 at 16:11 +0000, glyph at divmod.com wrote:
> On 02:45 pm, exarkun at divmod.com wrote:
> >What's the right way to get a string describing a Version now?  It's an 
> >even
> >harder decision to make than it was before.  Is it:
> >
> >  * str(Version(...))
> >  * repr(Version(...))
> >  * Version(...).base()
> >  * Version(...).short()
> >  * getVersionString(Version(...))
> >
> >Can we do something to make this better?
> 
> This collection is super ad-hoc.  Let me try to express some of the 
> requirements that lead to the current confusion:
> 
>   * Sometimes you want a string that is formatted for use at a REPL, 
> which can be eval'd to give the user the idea that it is a structured 
> object and how they can build something similar (repr())
>   * sometimes you want something that's human-readable and expresses all 
> the information available about the version (str()).  The square 
> brackets probably come from the fact that I was playing WoW at the time, 
> and square brackets meant "this is a thing, not just something a guy 
> said".  I was thinking you'd want to see like [Twisted Epic Spaulders of 
> the Owl] for the version number.  (Maybe a bad call.)
>   * Sometimes you want just the version number in canonical format 
> (x.y.z+dev) not the name of the package (.short())
>   * I hypothesize that sometimes you want to omit the +dev part because 
> you're trying to fit into a stricter format, but I don't really remember 
> why .base() exists.
> 
> Was getVersionString added because the other string representations 
> weren't "friendly" enough?  I guess the 'rUnknown' makes them look a 
> little gnarly, but I'd actually like to see the SVN revision in the 
> cases where it's present; the right thing to do to make it friendly 
> would be to fix the entries-file parser.
> 
> Also, in any case, it should really be a method.  There's no reason to 
> have a free function defined right after a class whose only argument is 
> a single instance of that class :).
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From jml at mumak.net  Thu Jan 31 18:44:36 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 10:44:36 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
Message-ID: <d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>

On Feb 1, 2008 3:23 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 31 Jan 2008 16:11:10 -0000, glyph at divmod.com wrote:
> >On 02:45 pm, exarkun at divmod.com wrote:
> >>What's the right way to get a string describing a Version now?  It's an
> >>even
> >>harder decision to make than it was before.  Is it:
> >>
> >>  * str(Version(...))
> >>  * repr(Version(...))
> >>  * Version(...).base()
> >>  * Version(...).short()
> >>  * getVersionString(Version(...))
> >>
> >>Can we do something to make this better?
> >
> >This collection is super ad-hoc.  Let me try to express some of the
> >requirements that lead to the current confusion:
> >
> >  * [snip - special-case view requirement]
> >  * [snip - another special-case view requirement]
> >  * [snip - another special-case view requirement]
> >  * [snip - another special-case view requirement]
> >
> >Was getVersionString added because the other string representations weren't
> >"friendly" enough?  I guess the 'rUnknown' makes them look a little gnarly,
> >but I'd actually like to see the SVN revision in the cases where it's
> >present; the right thing to do to make it friendly would be to fix the
> >entries-file parser.
> >
> >Also, in any case, it should really be a method.  There's no reason to have
> >a free function defined right after a class whose only argument is a single
> >instance of that class :).
> >
>
> Maybe Version shouldn't be responsible for any view at all.  Maybe Version
> is just a model class, and things that actually know what the view
> requirements are can implement the view?
>

That was my thinking. Originally, getVersionString was in
t.p.deprecate, but I moved it on reviewer suggestion.

jml



From glyph at divmod.com  Thu Jan 31 21:19:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 02:19:01 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
Message-ID: <20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>


On 31 Jan, 11:44 pm, jml at mumak.net wrote:
>>Maybe Version shouldn't be responsible for any view at all.  Maybe 
>>Version
>>is just a model class, and things that actually know what the view
>>requirements are can implement the view?
>
>That was my thinking. Originally, getVersionString was in
>t.p.deprecate, but I moved it on reviewer suggestion.

I'd really prefer it if we had a canonical string representation for 
versions which t.p.deprecate would use as well as anything else which 
needs to report information about a version to developers.  The 
(existing?) str() ought to be acceptable for that.  That way when you 
saw a string in a certain format you could immediately identify it as a 
precise statement about a current or future Twisted package version.

I was sort of hoping that we might have Version-alike objects at some 
point which could know about different versioning schemes, and ways of 
comparing different revision control systems (although I guess dealing 
with comparing arbitrary bzr revisions in one tiny little object might 
be too much to ask...).  This is one reason I don't want to separate the 
view out too much; inspecting the model directly binds any potential 
view very tightly to the x.y.z versioning scheme.

But, this is somewhat obviously a bike shed, so I am not going to 
agitate terribly hard for this.  It's not like I use Twisted primarily 
for dealing with my obscurely formatted package version strings ;-).



From jml at mumak.net  Thu Jan 31 23:34:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 15:34:16 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
Message-ID: <d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>

On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:
>
> On 31 Jan, 11:44 pm, jml at mumak.net wrote:
> >>Maybe Version shouldn't be responsible for any view at all.  Maybe
> >>Version
> >>is just a model class, and things that actually know what the view
> >>requirements are can implement the view?
> >
> >That was my thinking. Originally, getVersionString was in
> >t.p.deprecate, but I moved it on reviewer suggestion.
>
> I'd really prefer it if we had a canonical string representation for
> versions which t.p.deprecate would use as well as anything else which
> needs to report information about a version to developers.  The
> (existing?) str() ought to be acceptable for that.  That way when you
> saw a string in a certain format you could immediately identify it as a
> precise statement about a current or future Twisted package version.
>

Having a canonical representation doesn't exclude having multiple
representations.

Looking at how these are actually used:
- str() is used only for copyright (and tests)
- short is used for __init__.py
- base is used for short, in _release._changeVersionInFile (don't know
why base rather than everyone else, actually) and dist.py
- repr is only used generically.
- getVersionString is used only by deprecate.

In summary, sometimes we want the project name, sometimes we want the
svn revno. This is perhaps better achieved by having a single function
/ method that takes a couple of params.

Personally, I think that having a project name in Version is silly.

> I was sort of hoping that we might have Version-alike objects at some
> point which could know about different versioning schemes, and ways of
> comparing different revision control systems (although I guess dealing
> with comparing arbitrary bzr revisions in one tiny little object might
> be too much to ask...).  This is one reason I don't want to separate the
> view out too much; inspecting the model directly binds any potential
> view very tightly to the x.y.z versioning scheme.
>

For the purposes of this discussion, that is a massive, massive YAGNI.

> But, this is somewhat obviously a bike shed, so I am not going to
> agitate terribly hard for this.  It's not like I use Twisted primarily
> for dealing with my obscurely formatted package version strings ;-).

Right. I propose we do nothing.

jml



From wlad.karyagin at mail.ru  Wed Jan  2 04:38:37 2008
From: wlad.karyagin at mail.ru (W K)
Date: Wed, 02 Jan 2008 14:38:37 +0300
Subject: [Twisted-Python] Different behavior under Windos and Linux
Message-ID: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>

Hello all, 

i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?

Thanks 



From wlad.karyagin at mail.ru  Wed Jan  2 05:18:51 2008
From: wlad.karyagin at mail.ru (W K)
Date: Wed, 02 Jan 2008 15:18:51 +0300
Subject: =?koi8-r?Q?Fw=3A_[Twisted-Python]_Different_behavior_under_Windows_and_Linux?=
Message-ID: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>



-----Original Message-----
From: W K <wlad.karyagin at mail.ru>
To: twisted-python at twistedmatrix.com
Date: Wed, 02 Jan 2008 14:38:37 +0300
Subject: [Twisted-Python] Different behavior under Windos and Linux

> Hello all, 
> 
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?
> 
> Thanks 
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Here is the sample code

from twisted.internet.protocol import Protocol, Factory, ClientFactory
from twisted.protocols import basic
from twisted.internet import reactor, protocol
import logging
from threading import Event
import sys
import time
import thread

class LineConnector (basic.LineReceiver):
    
    def __init__(self, session):
        self.session = session

    def connectionMade(self):
        self.session.cnd.set()

    def sendMessage(self, line):
        logging.debug("Sending line " + line)
        self.sendLine(line)

    
    def lineReceived(self, line):
     	logging.debug("Received line " + line)
		
  
class ServerConnector (basic.LineReceiver):
    
    def __init__(self, session):
        self.session = session

    def connectionMade(self):
        pass

    def sendMessage(self, line):
        logging.debug("Sending line " + line)
        self.sendLine(line)

    
    def lineReceived(self, line):
     	logging.debug("Received line " + line)
################################################################################

class SimpleClient(ClientFactory):
    
    def __init__(self, host, port):
        
        self.port = port
        self.host = host
        
        self.connector = None
        self.cnd = Event()
		
        thread.start_new_thread(self.send, ())
        reactor.connectTCP(self.host, self.port, self)

            
  
		
		
    def send(self):
       while 1:
          self.cnd.wait()
          self.connector.sendMessage("TEST LINE")
          time.sleep(1)


    def buildProtocol(self, addr):
        logging.debug('ManagerOutput: Connected')
        
        self.connector = LineConnector(self)
        
        return self.connector

    def startedConnecting(self, connector):
        print 'Output: Started to connect.'
    
    def clientConnectionLost(self, connector, reason):
        print 'Output: Lost connection.'# Reason:', reason
     
        

    def clientConnectionFailed(self, connector, reason):
        logging.debug(self.name + ' output: Connection failed.')# Reason:', reason
        
################################################################################

class SimpleServer(protocol.ServerFactory):

    def __init__(self, port):
        self.port = port
        self.connector = None
        reactor.listenTCP(self.port, self)

    def buildProtocol(self, addr):
        logging.debug('Manager Connected')
        self.connector = ServerConnector(self)
        return self.connector
	
    def startedConnecting(self, connector):
        logging.debug('Started to connect')


    def clientConnectionLost(self, connector, reason):
        logging.debug('Lost connection. Reason:', reason)


    def clientConnectionFailed(self, connector, reason):
        logging.debug('Connection failed. Reason:', reason)


if __name__ == "__main__":
    
    logging.getLogger().setLevel(logging.DEBUG)
    logging.basicConfig(format='%(asctime)s %(levelname)8s %(message)s')#, filename='/tmp/logfile.txt', filemode='w')

    numargs = len(sys.argv) - 1

    if numargs == 1:
        print "Server started"
        manager = SimpleServer(31000)
    else:
        print "Client Started"
        mp = SimpleClient("127.0.0.1", 31000)
        
    
    reactor.run()




From radix at twistedmatrix.com  Wed Jan  2 06:55:27 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 2 Jan 2008 08:55:27 -0500
Subject: [Twisted-Python] Different behavior under Windos and Linux
In-Reply-To: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
References: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
Message-ID: <60ed19d40801020555y74b121beu4926056304e99c09@mail.gmail.com>

On Jan 2, 2008 6:38 AM, W K <wlad.karyagin at mail.ru> wrote:
> Hello all,
>
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?

Does your application use threads? Does it call any Twisted APIs from
those threads? Specifically, does it send data from those threads?

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From itamar at itamarst.org  Wed Jan  2 07:06:54 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jan 2008 09:06:54 -0500
Subject: Fw: [Twisted-Python] Different behavior under Windows and Linux
In-Reply-To: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>
References: <E1JA2Yd-0005Np-00.wlad-karyagin-mail-ru@f130.mail.ru>
Message-ID: <1199282814.7666.17.camel@localhost.localdomain>


On Wed, 2008-01-02 at 15:18 +0300, W K wrote:
> 		
>         thread.start_new_thread(self.send, ())
>         reactor.connectTCP(self.host, self.port, self)

You can't call Twisted APIs from threads. This will fail in a variety of
fun ways, as you can see.

Either use reactor.callFromThread(self.connector.sendMessage, data), or
use deferToThread to run your non-Twisted computation in a thread and
then addCallback your Twisted calls. Or, best of all, don't use threads
at all: they're almost always unnecessary when using Twisted. You
probably want to use twisted.internet.task.LoopingCall to do what you're
currently doing.




From radix at twistedmatrix.com  Wed Jan  2 07:22:02 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Wed, 2 Jan 2008 09:22:02 -0500
Subject: [Twisted-Python] Different behavior under Windos and Linux
In-Reply-To: <E1JA4Br-0004JN-00.wlad-karyagin-mail-ru@f79.mail.ru>
References: <60ed19d40801020555y74b121beu4926056304e99c09@mail.gmail.com>
	<E1JA4Br-0004JN-00.wlad-karyagin-mail-ru@f79.mail.ru>
Message-ID: <60ed19d40801020622o2513f29bs7d2ab945791b1f84@mail.gmail.com>

On Jan 2, 2008 9:03 AM, W K <wlad.karyagin at mail.ru> wrote:
> Hello
> Well, yes, i do send data from threads, as you can see from the example below:

Twisted in general is not thread safe. If you want to call a Twisted
method from a non-reactor thread, you should use
reactor.callFromThread, which will cause a function to be called in
the reactor's thread.

This is probably the source of your problem.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From steve at holdenweb.com  Wed Jan  2 05:27:46 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 02 Jan 2008 07:27:46 -0500
Subject: [Twisted-Python] Re: Different behavior under Windos and Linux
In-Reply-To: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
References: <E1JA1vh-000AlW-00.wlad-karyagin-mail-ru@f20.mail.ru>
Message-ID: <flfvvn$51s$1@ger.gmane.org>

W K wrote:
> Hello all, 
> 
> i'll be short. The application was developed, which sends streams to different nodes using TCP (basic.LineReceiver and ClientFactory were used) It works perfectly under WindowsXP. However, under (K)Ubuntu the data is not sent immediately, but after approximately 20 secs delay! Does anyone encounter similar inconsistencies? How can one tune the parameters responsible for buffering?
> 
> Thanks 

Without even reading the code or advising you to look at the net with 
Wireshark I will offer the observation that the kind of delay you 
mention is frequently caused by failed DNS lookups, most often reverse ones.

Absence of an IDENT protocol response can also cause similar hangs: is 
the Kubuntu system looking for client identification?

If it really is Twisted then you'll have to rely on people who know 
something about it :-). I am hoping they will "Teach Me Twisted" (tm) at 
PyCon this year.

Happy New Year to the Twisted community.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From jarrod at vertigrated.com  Wed Jan  2 09:01:18 2008
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 2 Jan 2008 11:01:18 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <fa3d0c740801020801r3b72d8c0x9bd05bcdbba81e71@mail.gmail.com>

On 12/26/07, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:
>
> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has
> to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda


we just used the Apple Rendezous code, it has a python wrapper around its C
code.
it is available for free from Apple's developer website.
We had it in production for 2 years without a single hicup or restart.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080102/565e782d/attachment.html>

From itamar at itamarst.org  Wed Jan  2 09:32:58 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Wed, 02 Jan 2008 11:32:58 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22254 - Pass the method in
	init, rename it.
In-Reply-To: <E1JA5RS-0001z4-00@wolfwood.twistedmatrix.com>
References: <E1JA5RS-0001z4-00@wolfwood.twistedmatrix.com>
Message-ID: <1199291578.7666.19.camel@localhost.localdomain>


On Wed, 2008-01-02 at 08:23 -0700, Thomas Herve wrote:
> +    return filepath.FilePath("/home").child(avatarId)

Maybe make /home configurable? Occasionally people will mount home
folders elsewhere.




From tom.cocagne at gmail.com  Wed Jan  2 20:48:57 2008
From: tom.cocagne at gmail.com (Tom Cocagne)
Date: Wed, 2 Jan 2008 22:48:57 -0500
Subject: [Twisted-Python] Twisted apps + zeroconf, anyone?
In-Reply-To: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
References: <a2cf5f03eb2ad5d3c8280130ca0da86a.qmail@home.pl>
Message-ID: <198edda90801021948n3b0fd43bwace9d37bb3c21d75@mail.gmail.com>

    I've recently run into this issue as well Jarek. The easiest solution I
found was to just launch a background 'avahi-publish' subprocess with the
appropriate arguments. Send it a friendly kill signal when you wish to stop
publishing and that's the end of it. It's a linux-specific solution, of
course, but it's dirt simple and avoids the problem of multiple-mdns stacks
on a single machine. If you'd like to support other platforms and/or
non-avahi mdns stacks, it should be fairly straight-forward to write a small
C/Python application for each that does the effectively the same thing.

    Likewise, for browsing services, I've decided to go the route of using
'avahi-browse' to extract the information for me rather than try and
re-implement it directly in Python. Python is so damn friendly, I often
forget that good ol' shell commands can often be the best tool for the job
;-)

    Cheers,

    Tom

On Dec 26, 2007 7:31 AM, Jarek Zgoda <jarek.zgoda at sensisoft.com> wrote:

> I'd like to add auto-discovery feature to my (Twisted) application and I
> thought I'll use zeroconf to advertize the service to clients in local
> network. I decided on zeroconf, because the app is a webservice that has
> to
> be accessible to multitude of various clients. Unfortunately, the only one
> library I found barely usable with Twisted is PyZeroconf (the other is
> avahi, but it seems too tightly bound to gobject to be usable with
> Twisted). Is this all or I do not know how to use google?
>
> Anybody can share any hints on this? Is this feasible idea or there are
> better ways to achieve what I want?
>
> Cheers
> Jarek Zgoda
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080102/78969502/attachment.html>

From nitro at dr-code.org  Thu Jan  3 19:42:10 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 04 Jan 2008 03:42:10 +0100
Subject: [Twisted-Python] Performance and select.select
Message-ID: <op.t4dwgkioz3pzfc@nitrogenycs2>

Hello,

I profiled my application with cProfiler. Below is an excerpt from the  
resulting report:

Fri Jan 04 01:07:39 2008    profiling_data_cProfile

          15123197 function calls (14579262 primitive calls) in 228.517 CPU  
seconds

    Ordered by: internal time
    List reduced from 2933 to 50 due to restriction <50>

    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    138305  135.419    0.001  135.817    0.001 {select.select}
     26168   13.159    0.001   14.044    0.001  
Sources\Server\Plugins\RKSimulation.py:218(UpdatePhysics)

As you can see select.select takes up ~136 of ~229 seconds. This is the  
most expensive function. The row below shows the next expensive function  
which is one of my own. Now I am wondering whether

a) the select calls are really taking up that much time (more than 50%!)
b) if they are taking up that much time I'd like to find out how to reduce  
their execution time (either by minimizing the number it gets called or  
the time it takes to execute etc)

My application doesn't invoke select.select itself so it is most likely  
called within twisted. I am on Windows and using the default reactor  
("from twisted.internet import reactor").

-Matthias



From itamar at itamarst.org  Thu Jan  3 20:18:51 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 03 Jan 2008 22:18:51 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <1199416731.7666.42.camel@localhost.localdomain>


> a) the select calls are really taking up that much time (more than 50%!)

They're certainly going to take up lots and lots of *clock* time, not
necessarily CPU time: select() is the way Twisted (in default reactors)
waits for events to happen. So if your program does nothing at all (e.g.
just reactor.run(), select() will actually be close to 100% of clock
time, even though CPU usage will be minuscule.

If you have many TCP connections (or really, file descriptors), hundreds
or thousands, select() will also start taking up CPU time. Using poll
reactor, or in next version of Twisted (2.5 had some bugs) epoll reactor
on Linux will use less CPU for this scenario.




From exarkun at divmod.com  Thu Jan  3 20:19:40 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 3 Jan 2008 22:19:40 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>

On Fri, 04 Jan 2008 03:42:10 +0100, Nitro <nitro at dr-code.org> wrote:
>Hello,
>
>I profiled my application with cProfiler. Below is an excerpt from the 
>resulting report:
>
>Fri Jan 04 01:07:39 2008    profiling_data_cProfile
>
>          15123197 function calls (14579262 primitive calls) in 228.517 CPU 
>seconds
>
>    Ordered by: internal time
>    List reduced from 2933 to 50 due to restriction <50>
>
>    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
>    138305  135.419    0.001  135.817    0.001 {select.select}
>     26168   13.159    0.001   14.044    0.001 
>Sources\Server\Plugins\RKSimulation.py:218(UpdatePhysics)
>
>As you can see select.select takes up ~136 of ~229 seconds. This is the 
>most expensive function. The row below shows the next expensive function 
>which is one of my own. Now I am wondering whether
>
>a) the select calls are really taking up that much time (more than 50%!)
>b) if they are taking up that much time I'd like to find out how to reduce 
>their execution time (either by minimizing the number it gets called or  the 
>time it takes to execute etc)
>
>My application doesn't invoke select.select itself so it is most likely 
>called within twisted. I am on Windows and using the default reactor  ("from 
>twisted.internet import reactor").

Twisted does use select by default on Windows.  One thing you might try is
one of the other reactors available on Windows; there are two,
win32eventreactor and iocpreactor.  You can read about how to do this here:

http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html

Depending on what your application does, iocpreactor may not be complete
enough to actually run your code.  It lacks some features provided by the
default reactor.

Whether either of these reactors will actually improve the performance of
your application, I don't know.  You pointed out that a lot of time is
spent in select, but this doesn't mean that spending less time inside the
event notification function will make your overall application faster.

Also, you are right to be suspicious of these profile results.  Python has
a very spotty history when it comes to profilers.  They are often inaccurate
or completely wrong.  cProfile is supposed to be better than the previous
attempts, but I haven't personally used it extensively enough (nor at all on
Windows) to say whether this is true.

Some things to consider are:

  * How many simultaneous connections does your application have?  select
    usually scales linearly with this number.  I'm not sure exactly what it
    does on Windows, though.

  * How often do connections have events?  Is data passing through them
    constantly or are they mostly idle?  More events means more trips into
    select, which incurs setup costs more.  Fewer events means select should
    be spending more of its time idling, waiting for events.

  * How often do timed events go off?  These also cause more trips into
    select, since each one causes select to return when it is time to run.
    Do you use reactor.callLater() with a 0 timeout a lot?

Hope this helps,

Jean-Paul



From itamar at itamarst.org  Thu Jan  3 20:20:12 2008
From: itamar at itamarst.org (Itamar Shtull-Trauring)
Date: Thu, 03 Jan 2008 22:20:12 -0500
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <op.t4dwgkioz3pzfc@nitrogenycs2>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
Message-ID: <1199416812.7666.45.camel@localhost.localdomain>


On Fri, 2008-01-04 at 03:42 +0100, Nitro wrote:

> My application doesn't invoke select.select itself so it is most likely  
> called within twisted. I am on Windows and using the default reactor  
> ("from twisted.internet import reactor").

Ah. In general:

1. Linux is better ;)

2. On Windows IOCP is much better than select() in terms of scalability
(i.e. low CPU usage with many connections), but IOCP reactor isn't
finished and thus has some limitations in functionality and potentially
some bugs.




From stanc at al.com.au  Thu Jan  3 22:24:54 2008
From: stanc at al.com.au (Astan Chee)
Date: Fri, 04 Jan 2008 16:24:54 +1100
Subject: [Twisted-Python] jabber/gtalk/msn with twisted using http proxy
	with authentication
Message-ID: <477DC326.1070506@al.com.au>

Hi,
I was looking around for modules that support jabber like 
twister.words.protocols.jabber but the problem is that I can only 
connect via http proxy at a certain port (8080) with authentication. I 
was wondering if twisted supports this? I am firstly trying to connect 
to MSN's server via specifications from here:
http://www.hypothetic.org/docs/msn/general/http_connections.php and 
before I start messing with twisted, I was wondering if twisted already 
does this or can do it by changing certain settings; otherwise I'll have 
to make my own from scratch. Next im trying to connect to google's talk 
server (talk.google.com) which is abit different but still requires 
authentication from the http proxy server and Im not sure what to change 
in twisted so that it allows http proxy with authentication.
Thanks for any help.
Cheers
Astan



From exarkun at twistedmatrix.com  Sat Jan  5 22:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 06 Jan 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1199595906.44.2133668578@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080106/28165536/attachment.html>

From ottavio at campana.vi.it  Mon Jan  7 11:48:58 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 19:48:58 +0100
Subject: [Twisted-Python] ldaptor and bind
Message-ID: <4782741A.4080309@campana.vi.it>

Hello everybody,

I'm developing an application based on ldaptor and I need some help.

My scenario is a public address book, let's say 
ou=Addressbook,dc=domain,dc=com and some private address books, suppose 
ou=John,ou=Addressbook,dc=domain,dc=com , 
ou=Peter,ou=Addressbook,dc=domain,dc=com and so on.

So, I need to specify that ou=John,ou=Addressbook,dc=domain,dc=com can 
be accessed by cn=John,dc=domain,dc=com , so that by binding with a user 
I can look both in the public address book and in the private one.

Do you have some examples or documentation explaining that?

By now I'm stuck while trying to bind to do non-anonymous requests, but 
whatever I do I always get invalid credentials. Which objectClass do I 
need to be able to bind?

Thanks,

Ottavio

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From drew.smathers at gmail.com  Mon Jan  7 13:56:52 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Mon, 7 Jan 2008 15:56:52 -0500
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782741A.4080309@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
Message-ID: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>

Can you post a stripped down example demonstrating what you're trying to do,
and indicate where in the code you're encountering failures (invalid
credentials)?

On Jan 7, 2008 1:48 PM, Ottavio Campana <ottavio at campana.vi.it> wrote:

> Hello everybody,
>
> I'm developing an application based on ldaptor and I need some help.
>
> My scenario is a public address book, let's say
> ou=Addressbook,dc=domain,dc=com and some private address books, suppose
> ou=John,ou=Addressbook,dc=domain,dc=com ,
> ou=Peter,ou=Addressbook,dc=domain,dc=com and so on.
>
> So, I need to specify that ou=John,ou=Addressbook,dc=domain,dc=com can
> be accessed by cn=John,dc=domain,dc=com , so that by binding with a user
> I can look both in the public address book and in the private one.
>
> Do you have some examples or documentation explaining that?
>
> By now I'm stuck while trying to bind to do non-anonymous requests, but
> whatever I do I always get invalid credentials. Which objectClass do I
> need to be able to bind?
>
> Thanks,
>
> Ottavio
>
> --
> Non c'e' piu' forza nella normalita', c'e' solo monotonia.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080107/f6233ce2/attachment.html>

From ottavio at campana.vi.it  Mon Jan  7 14:28:34 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 22:28:34 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
Message-ID: <47829982.8070807@campana.vi.it>

Drew Smathers ha scritto:
> Can you post a stripped down example demonstrating what you're trying to 
> do, and indicate where in the code you're encountering failures (invalid 
> credentials)?
> 

sure, I have set up a server with twisted, so my .tac file has

def getLdapService ():
   db = ldiftree.LDIFTreeEntry ('/dev/shm/ldap/')
   class LDAPServerFactory (protocol.ServerFactory):
     protocol = ldapserver.LDAPServer

     def __init__ (self, root):
       self.root = root

   ldapserver.LDAPServer.debug= True

   components.registerAdapter (lambda x: x.root,
                               LDAPServerFactory,
                               interfaces.IConnectedLDAPEntry)

   factory = LDAPServerFactory (db)
   return internet.TCPServer (10389, factory)
...
ldapservice = getLdapService ()
ldapservice.setServiceParent (application)

after that, I have populated /dev/shm/ldap and it works for anonymous 
requests.

If I run ldapsearch I get

bott at laplace:~$ ldapsearch -x -p 10389 -h localhost -b dc=domain,dc=com 
-w pippo -D cn=ottavio,dc=domain,dc=com
ldap_bind: Invalid credentials (49)

and in logs I have

2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] 
/usr/lib/python2.4/site-packages/ldaptor/protocols/ldap/ldapserver.py:114: 
exceptions.DeprecationWarning: Use log.msg(..., debug=True), not 
log.debug().
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] S<-C LDAPMessage(id=1L, 
value=LDAPBindRequest(version=3, dn='cn=ottavio,dc=domain,dc=com', 
auth='pippo'))
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] 
/usr/lib/python2.4/site-packages/ldaptor/protocols/ldap/ldapserver.py:67: 
exceptions.DeprecationWarning: Use log.msg(..., debug=True), not 
log.debug().
2008/01/07 22:21 CET [LDAPServer,0,127.0.0.1] S->C LDAPMessage(id=1L, 
value=LDAPBindResponse(resultCode=49))

I tried several objectclasses combinations for the file 
/dev/shm/ldap/dc=com.dir/dc=domain.dir/cn=ottavio.ldif but it never 
worked. Thus I suspect that this file is the problem. Do you have a 
working example?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 14:50:25 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Mon, 7 Jan 2008 23:50:25 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <47829982.8070807@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
Message-ID: <20080107215025.GO13597@eagain.net>

On Mon, Jan 07, 2008 at 10:28:34PM +0100, Ottavio Campana wrote:
>   class LDAPServerFactory (protocol.ServerFactory):

Oh, using ldaptor as a server with authentication is a bit pointless,
as it has no access control whatsoever. Unless you are going to
implement that yourself. The server part is not intended for
production use, as is.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 15:05:10 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 23:05:10 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107215025.GO13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
Message-ID: <4782A216.8040702@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 10:28:34PM +0100, Ottavio Campana wrote:
>>   class LDAPServerFactory (protocol.ServerFactory):
> 
> Oh, using ldaptor as a server with authentication is a bit pointless,
> as it has no access control whatsoever. Unless you are going to
> implement that yourself. The server part is not intended for
> production use, as is.

mmm...

so, to summarize:

1) does it support bind? I think so, even though I'm not able to make it 
work by now.

2) it doesn't support access control, but for what I've seen class 
LDAPServer has a handle_LDAPSearchRequest method. I think I have to 
modify its behavior, especially when it calls root.lookup(dn). Do think 
that subclassing LDAPServer might be a good way of doing it?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 15:23:16 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 00:23:16 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782A216.8040702@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
Message-ID: <20080107222316.GQ13597@eagain.net>

On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
> 1) does it support bind? I think so, even though I'm not able to make it 
> work by now.

The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
says it does.

> 2) it doesn't support access control, but for what I've seen class 
> LDAPServer has a handle_LDAPSearchRequest method. I think I have to modify 
> its behavior, especially when it calls root.lookup(dn). Do think that 
> subclassing LDAPServer might be a good way of doing it?

Yup, but don't think that's the only thing you'd need to change.
Really, if you don't know LDAP already you probably will not be
able to make it secure.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 15:52:52 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Mon, 07 Jan 2008 23:52:52 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107222316.GQ13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
Message-ID: <4782AD44.7010601@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
>> 1) does it support bind? I think so, even though I'm not able to make it 
>> work by now.
> 
> The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
> says it does.

I'll give a look at it

>> 2) it doesn't support access control, but for what I've seen class 
>> LDAPServer has a handle_LDAPSearchRequest method. I think I have to modify 
>> its behavior, especially when it calls root.lookup(dn). Do think that 
>> subclassing LDAPServer might be a good way of doing it?
> 
> Yup, but don't think that's the only thing you'd need to change.
> Really, if you don't know LDAP already you probably will not be
> able to make it secure.

Yes, I agree with you, it's everything but easy. I'm thinking about 
other solutions because I don't need full acl as in openldap.

Since each inetOrgPerson class has the userPassword field, I could add 
it to each element of the address book and I can check it in 
LDAPServer._cbSearchGotBase by modifying the filter object and adding a 
check to match the password in the inetOrgPerson classes with the 
password that the user gave to bind to the server.

In this case I just need to know

1) how do I get the username and password used to bind in function
def _cbSearchGotBase(self, base, dn, request, reply):
? with request.dn and request.auth?

2) how do I modify request.filter? can I just append text?

In this case, after having biding working I would be done. It's not full 
acl support, but it would be enough.

What do you think about it?

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 16:02:31 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 01:02:31 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782AD44.7010601@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
Message-ID: <20080107230231.GR13597@eagain.net>

On Mon, Jan 07, 2008 at 11:52:52PM +0100, Ottavio Campana wrote:
> 1) how do I get the username and password used to bind in function
> def _cbSearchGotBase(self, base, dn, request, reply):
> ? with request.dn and request.auth?

LDAPServer's self.boundUser. And the password isn't stored any
longer than is required to process the LDAPBindRequest.

> 2) how do I modify request.filter? can I just append text?

It's an LDAPFilter instance. No, it's not a string.

> In this case, after having biding working I would be done. It's not full 
> acl support, but it would be enough.

Umm, if you didn't even realize you need to protect against
modification, do you really think you can manage to implement
it securely?

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 16:34:29 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 00:34:29 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107230231.GR13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
Message-ID: <4782B705.2010107@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:52:52PM +0100, Ottavio Campana wrote:
>> 1) how do I get the username and password used to bind in function
>> def _cbSearchGotBase(self, base, dn, request, reply):
>> ? with request.dn and request.auth?
> 
> LDAPServer's self.boundUser. And the password isn't stored any
> longer than is required to process the LDAPBindRequest.
> 
>> 2) how do I modify request.filter? can I just append text?
> 
> It's an LDAPFilter instance. No, it's not a string.
> 
>> In this case, after having biding working I would be done. It's not full 
>> acl support, but it would be enough.
> 
> Umm, if you didn't even realize you need to protect against
> modification, do you really think you can manage to implement
> it securely?

well, considering that data provided through ldap is for readonly use, 
that ldap exports information saved in a database which is protected, 
that clients access the ldap server only read only and the network is 
not hostile, I think it could be acceptable.

I can't run openldap on that hardware and I need a way to separate 
public and private address books and I need to be able to look in both 
address books with only one search, so they have to be nested.

I know acls would do the job, I know the solution is not perfect, but do 
you have any other idea?

PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest 
by always rising ldaperrors.LDAPUnwillingToPerform. The same for all 
other add/delete/modify request...

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From p.mayers at imperial.ac.uk  Mon Jan  7 16:44:10 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Mon, 07 Jan 2008 23:44:10 +0000
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B705.2010107@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
Message-ID: <4782B94A.3070102@imperial.ac.uk>

> 
> I can't run openldap on that hardware and I need a way to separate 

I would be surprised if that were true. Why can't you run openldap?



From tv at eagain.net  Mon Jan  7 16:54:48 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 01:54:48 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B705.2010107@campana.vi.it>
References: <4782741A.4080309@campana.vi.it>
	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
Message-ID: <20080107235448.GB29129@eagain.net>

On Tue, Jan 08, 2008 at 12:34:29AM +0100, Ottavio Campana wrote:
>> Umm, if you didn't even realize you need to protect against
>> modification, do you really think you can manage to implement
>> it securely?
> well, considering that data provided through ldap is for readonly use, that 
> ldap exports information saved in a database which is protected, that 
> clients access the ldap server only read only and the network is not 
> hostile, I think it could be acceptable.

Yes but unless you do something to prevent writes anonymous can
overwrite anyones password. That sort of makes any read restrictions
pointless, doesn't it?

> PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest by 
> always rising ldaperrors.LDAPUnwillingToPerform. The same for all other 
> add/delete/modify request...

Ah, good. You realize they are there ;) That was my point, earlier you
spoke only of filtering search requests. To implement ACLs, you need
way more than that.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Mon Jan  7 17:02:27 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 01:02:27 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782B94A.3070102@imperial.ac.uk>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>	<4782B705.2010107@campana.vi.it>
	<4782B94A.3070102@imperial.ac.uk>
Message-ID: <4782BD93.3050403@campana.vi.it>

Phil Mayers ha scritto:
>>
>> I can't run openldap on that hardware and I need a way to separate 
> 
> I would be surprised if that were true. Why can't you run openldap?

* strict hardware resources. By adopting twisted I was able to remove 
apache,php and I hope to be able to remove also openldap.

* the fact that in case of power failure openldap database gets too 
often corrupted. I repeat, in this case I have all the informations in a 
db whose backups are regular, so I just need an ldap server to let the 
clients access the information in read only.

* it doesn't integrate as well as ldaptor with the rest of the software 
I am developing.

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From ottavio at campana.vi.it  Mon Jan  7 17:06:31 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 01:06:31 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107235448.GB29129@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>	<20080107222316.GQ13597@eagain.net>	<4782AD44.7010601@campana.vi.it>	<20080107230231.GR13597@eagain.net>	<4782B705.2010107@campana.vi.it>
	<20080107235448.GB29129@eagain.net>
Message-ID: <4782BE87.9020206@campana.vi.it>

Tommi Virtanen ha scritto:
>> PS: going on with my idea, I could overwrite handle_LDAPModifyDNRequest by 
>> always rising ldaperrors.LDAPUnwillingToPerform. The same for all other 
>> add/delete/modify request...
> 
> Ah, good. You realize they are there ;) That was my point, earlier you
> spoke only of filtering search requests. To implement ACLs, you need
> way more than that.

thanks for making me realize that. :-)

I just need to understand how I can modify an LDAPFilter instance and 
I'll be done. You said it is not a string, so is there a way to easily 
change it? Otherwise, where is the filter converted from string to 
LDAPFilter?

It's not acls, but I'll get the same effect for my application.

Bye

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From tv at eagain.net  Mon Jan  7 17:16:57 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Tue, 8 Jan 2008 02:16:57 +0200
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <4782BE87.9020206@campana.vi.it>
References: <368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>
	<47829982.8070807@campana.vi.it>
	<20080107215025.GO13597@eagain.net>
	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
	<4782AD44.7010601@campana.vi.it>
	<20080107230231.GR13597@eagain.net>
	<4782B705.2010107@campana.vi.it>
	<20080107235448.GB29129@eagain.net>
	<4782BE87.9020206@campana.vi.it>
Message-ID: <20080108001657.GC29129@eagain.net>

On Tue, Jan 08, 2008 at 01:06:31AM +0100, Ottavio Campana wrote:
> I just need to understand how I can modify an LDAPFilter instance and I'll 
> be done. You said it is not a string, so is there a way to easily change 
> it? Otherwise, where is the filter converted from string to LDAPFilter?

Filters don't travel on the wire as strings at all. It's a structured
data type. Look around in pureldap.py, LDAPFilter_and etc. Ldaptor
also includes a brief introduction to LDAP, including the filters;
look in doc, or see http://eagain.net/temp/ldap-intro/

It sounds like you might be more intersted in request.attributes than
the filter, though.

-- 
:(){ :|:&};:



From ottavio at campana.vi.it  Tue Jan  8 01:16:40 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Tue, 08 Jan 2008 09:16:40 +0100
Subject: [Twisted-Python] ldaptor and bind
In-Reply-To: <20080107222316.GQ13597@eagain.net>
References: <4782741A.4080309@campana.vi.it>	<368574aa0801071256v570d71e1u538d82e2f96d87c9@mail.gmail.com>	<47829982.8070807@campana.vi.it>	<20080107215025.GO13597@eagain.net>	<4782A216.8040702@campana.vi.it>
	<20080107222316.GQ13597@eagain.net>
Message-ID: <47833168.7030605@campana.vi.it>

Tommi Virtanen ha scritto:
> On Mon, Jan 07, 2008 at 11:05:10PM +0100, Ottavio Campana wrote:
>> 1) does it support bind? I think so, even though I'm not able to make it 
>> work by now.
> 
> The unit test in ldaptor.test.test_server.LDAPServerTest.test_bind_success
> says it does.

ok, I made bind work.


-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From steven_zhou at ctl.creative.com  Tue Jan  8 07:50:54 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Tue, 8 Jan 2008 22:50:54 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
Message-ID: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>


Hi,

I hope some one could offer me some help on this. I am quite new to both
python and twisted.

The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
twisted-2.2. However, I wished to use epollreactor as the default
selectreactor only supports 1024 file descriptors. So I copied the relevant
files of epollreactor which is installed on twisted-2.5 to the
site-packages/twisted-2.2 directory. I copied 5 files in the total,
epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
exact file names. I copied it with a hope that it works. I am not sure
whether I am doing thing stupid here. correct me if I am.

The thing is, after I changed the reactor.py to import epollreactor,
pyicq-0.6-t seems to be using epollreactor but it still can only supports
1024 open sockets. I thought the problem is only in selectreactor? I
figured this out by doing a netstat -a -n on linux and found that
pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
that would mean only around 1000 connections can be made.

Although strange, but I do have a reason to use pyicq-0.6-t which is an
outdated version.

thanks a lot.

regards,
Steven
Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.





From glyph at divmod.com  Tue Jan  8 07:59:06 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 08 Jan 2008 14:59:06 -0000
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
References: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <20080108145906.21558.2006907157.divmod.xquotient.4459@joule.divmod.com>

On 02:50 pm, steven_zhou at ctl.creative.com wrote:
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to 
>install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the 
>relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, 
>_epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember 
>the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

"stupid" might be a harsh word, but what you're doing shouldn't be 
expected to work.  I'm surprised that it has worked as well as you 
suggest that it has.
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only 
>supports
>1024 open sockets. I thought the problem is only in selectreactor?

You might want to check your ulimits.  However, twisted 2.2 might have 
been calling select() in any number of places.  And Python 2.4.3 had a 
bug in it which would have caused a problem regardless.  And there might 
be a bug in the interaction of random bits of code from twisted 2.5 and 
2.2.  Whatever the problem is, you're on your own trying to sort it out 
until you can upgrade to a supported version :)
>The information in this message is confidential and may be legally
>privileged.  It is intended solely for the addressee.  Access to this
>message by anyone else is unauthorized.

Please do not attach notices like this to messages on this mailing list, 
given that the "addressee" in this case is the entire internet :).



From exarkun at divmod.com  Tue Jan  8 08:03:03 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 8 Jan 2008 10:03:03 -0500
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <20080108150303.31425.363432472.divmod.quotient.2232@ohm>

On Tue, 8 Jan 2008 22:50:54 +0800, Steven ZHOU <steven_zhou at ctl.creative.com> wrote:
>
>Hi,
>
>I hope some one could offer me some help on this. I am quite new to both
>python and twisted.
>
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

I don't know if this works.  I've never tried it.  The epoll reactor
implementation shares code from other parts of Twisted.  It may be
the case that that code changed between Twisted 2.2 and Twisted 2.5
in a way which will prevent epollreactor from working.  It may also
be the case that it hasn't.

>
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only supports
>1024 open sockets. I thought the problem is only in selectreactor? I
>figured this out by doing a netstat -a -n on linux and found that
>pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
>that would mean only around 1000 connections can be made.
>
>Although strange, but I do have a reason to use pyicq-0.6-t which is an
>outdated version.

Are you using Python 2.4.3?  This sounds like it may be related to the
issue described here:

  http://jcalderone.livejournal.com/2006/05/26/

Jean-Paul



From steven_zhou at ctl.creative.com  Tue Jan  8 08:30:41 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Tue, 8 Jan 2008 23:30:41 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <20080108145906.21558.2006907157.divmod.xquotient.4459@joule.divmod.com>
Message-ID: <OF29A18416.60FD1EF5-ON482573CA.0053C62D-482573CA.0055350A@ctl.creative.com>

Hi Glyph,

Thanks for the prompt help. I didn't expect it to work initially in fact. I
did set ulimit -n if that's the only thing to set. Yes, I am having python
2.4, not sure whether it's 2.4.3, I am now at home and will check that when
I am back to office.

The reason I used an outdated version of pyicq-0.6-t is to find out the
scalability of pyicqt, pymsnt etc. Unfortunately, I only managed to find a
clone of ICQ server (IServerd) which supports older version of icq oscar
protocols. So I can stress test with iserverd. Where can I find scalability
report of twisted based applications (e.g. pymsnt)? That would be even of
greater help.

regards,
Steven
Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.




                                                                           
             glyph at divmod.com                                              
             Sent by:                                                      
             twisted-python-bo                                          To 
             unces at twistedmatr         Twisted general discussion          
             ix.com                    <twisted-python at twistedmatrix.com>  
                                                                        cc 
                                                                           
             01/08/2008 10:59                                      Subject 
             PM                        Re: [Twisted-Python] epollreactor   
                                       for pyicq-0.6-t                     
                                                                           
             Please respond to                                             
              Twisted general                                              
                discussion                                                 
             <twisted-python at t                                             
             wistedmatrix.com>                                             
                                                                           
                                                                           




On 02:50 pm, steven_zhou at ctl.creative.com wrote:
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to
>install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the
>relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory,
>_epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember
>the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

"stupid" might be a harsh word, but what you're doing shouldn't be
expected to work.  I'm surprised that it has worked as well as you
suggest that it has.
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only
>supports
>1024 open sockets. I thought the problem is only in selectreactor?

You might want to check your ulimits.  However, twisted 2.2 might have
been calling select() in any number of places.  And Python 2.4.3 had a
bug in it which would have caused a problem regardless.  And there might
be a bug in the interaction of random bits of code from twisted 2.5 and
2.2.  Whatever the problem is, you're on your own trying to sort it out
until you can upgrade to a supported version :)
>The information in this message is confidential and may be legally
>privileged.  It is intended solely for the addressee.  Access to this
>message by anyone else is unauthorized.

Please do not attach notices like this to messages on this mailing list,
given that the "addressee" in this case is the entire internet :).

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

ForwardSourceID:NT0001A012




From zooko at zooko.com  Tue Jan  8 11:03:15 2008
From: zooko at zooko.com (zooko)
Date: Tue, 8 Jan 2008 10:03:15 -0800
Subject: [Twisted-Python] announcing Allmydata-Tahoe v0.7.0
Message-ID: <7D7C4CD2-EEBE-47C6-AF47-7C640A8CF01D@zooko.com>

Dear people of Twisted:

This is the release announcement for the latest version of the  
Allmydata-Tahoe decentralized filesystem.

This project is based on Twisted and on the Foolscap remote object  
library.  We're very happy with how Twisted and Foolscap have served  
us so far.

Please check it out!

Regards,

Zooko

ANNOUNCING: Allmydata-Tahoe version 0.7

We are pleased to announce the release of version 0.7 of allmydata.org
"Tahoe".

Tahoe is a secure, decentralized, fault-tolerant filesystem.  All of
the source code is available under a Free Software, Open Source
licence (or two).

This filesystem is encrypted and distributed over multiple peers in
such a way that it continues to work correctlly even when some of the
peers are unavailable, malfunctioning, or malicious.

This is the successor to Allmydata-Tahoe v0.6.1, which was released
October 15, 2007 [1].

This release adds decentralized, encrypted directories and mutable
files, making it the first release of Tahoe in which no part of the
filesystem is centralized.  It also adds a FUSE interface, allowing
you to access a distributed Tahoe grid as if it were a normal local
filesystem.

This is also the first release to be offered under a novel open source
licence which allows people to redistributed proprietary derivatives
of Tahoe for a limited time.


WHAT IS IT GOOD FOR?

With Tahoe, you can distribute your filesystem across a set of
computers, such that if some of the computers fail or turn out to be
malicious, the filesystem continues to work from the remaining
computers.  You can also share your files with other users, using a
strongly encrypted, capability-based access control scheme.

This release is targeted at hackers and smart users who are willing to
use a web user interface, a command-line user interface, or a FUSE
interface.  (Or a RESTful API.  Just telnet to localhost and type HTTP
requests to get started.)

Because this software is new, it is not yet recommended for storage of
highly confidential data nor for valuable data which is not otherwise
backed up. However, it works well in practice, it comes with extensive
unit tests, and there are no known security flaws which would
compromise confidentiality or data integrity.  (For a current
description of all known security issues and an overview of Tahoe's
security properties, please see the Security web page: [2].)

This release of Tahoe is suitable for the "friendnet" use case [3] --
it is easy to create a filesystem spread over the computers of you
and your friends so that you can share files and disk space with one
another.


LICENCE

You may use this package under the GNU General Public License, version
2 or, at your option, any later version.  See the file "COPYING.GPL"
for the terms of the GNU General Public License, version 2.

You may use this package under the Transitive Grace Period Public
Licence, version 1.0.  The Transitive Grace Period Public Licence says
that you may distribute proprietary derived works of Tahoe without
releasing the source code of that derived work for up to twelve
months, after which time you are obligated to release the source code
of the derived work under the Transitive Grace Period Public Licence.
See the file "COPYING.TGPPL.html" for the terms of the Transitive
Grace Period Public Licence, version 1.0.

(You may choose to use this package under the terms of either licence,
at your option.)


INSTALLATION

Tahoe works on Linux, Mac OS X, Windows, Cygwin, and Solaris.  For
installation instructions please see "doc/install.html" [4].


HACKING AND COMMUNITY

Please join us on the mailing list [5] to discuss uses of Tahoe.
Patches that extend and improve Tahoe are gratefully accepted --
roadmap.txt [6] shows the next improvements that we plan to make and
CREDITS [7] lists the names of people who've contributed to the
project.  The wiki Dev page [8] contains resources for hackers.


SPONSORSHIP

Tahoe is sponsored by Allmydata, Inc. [9], a provider of consumer
backup services.  Allmydata, Inc. contributes hardware, software,
ideas, bug reports, suggestions, demands, and money (employing several
allmydata.org Tahoe hackers and allowing them to spend part of their
work time on the next-generation, free-software project).  We are
eternally grateful!


Zooko O'Whielacronx
on behalf of the allmydata.org team
January 7, 2008
San Francisco, California


[1] http://allmydata.org/trac/tahoe/browser/relnotes.txt?rev=1346
[2] http://allmydata.org/trac/tahoe/wiki/Security
[3] http://allmydata.org/trac/tahoe/wiki/UseCases
[4] http://allmydata.org/source/tahoe/trunk/docs/install.html
[5] http://allmydata.org/cgi-bin/mailman/listinfo/tahoe-dev
[6] http://allmydata.org/trac/tahoe/browser/roadmap.txt
[7] http://allmydata.org/trac/tahoe/browser/CREDITS?rev=1424
[8] http://allmydata.org/trac/tahoe/wiki/Dev
[9] http://allmydata.com




From steve at holdenweb.com  Tue Jan  8 12:39:11 2008
From: steve at holdenweb.com (Steve Holden)
Date: Tue, 08 Jan 2008 14:39:11 -0500
Subject: [Twisted-Python] Re: epollreactor for pyicq-0.6-t
In-Reply-To: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
References: <OFF5659EF7.EA6C2614-ON482573CA.004F8035-482573CA.005190CC@ctl.creative.com>
Message-ID: <4783D15F.8090305@holdenweb.com>

Steven ZHOU wrote:
> Hi,
> 
> I hope some one could offer me some help on this. I am quite new to both
> python and twisted.
> 
> The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
> pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
> twisted-2.2. However, I wished to use epollreactor as the default
> selectreactor only supports 1024 file descriptors. So I copied the relevant
> files of epollreactor which is installed on twisted-2.5 to the
> site-packages/twisted-2.2 directory. I copied 5 files in the total,
> epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
> _epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
> exact file names. I copied it with a hope that it works. I am not sure
> whether I am doing thing stupid here. correct me if I am.
> 
I dub thee "Frankenstein": "Hmm, let's see, a bit of 2.2, and if I use 
the same amount of 2.6 that should come out right around 2.4".

If only that were true ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From johnaherne at rocs.co.uk  Wed Jan  9 06:25:43 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Wed, 9 Jan 2008 13:25:43 -0000
Subject: [Twisted-Python] twisted gprs
Message-ID: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>

About a year ago we had a look at twisted to do some work with gprs. I got
some useful feedback from that.

However, it's only now we have had a chance to move things forward.

We have done some simple work with wm5/wm6 devices sending GPS data back to
a twisted server.

And we have done various tests sending/receiving messages over gprs to see
what problems we need to overcome.

One problem we have right now to which the solution may be obvious but not
to us is :--

We have a problem at the server end when we put the pda into 'flight mode'.
Thie means that the wireless is switched off and the gprs connection goes
away.

However, the server does not see this connection go away since the network
routers keep the connection up, as far as we can see.

In various tests we have the connection take from 2 - 7 mins before a
disconnection happens. As far as I can see using 'ethereal', the server
decides itself to drop the connection since I do not see a 'FIN' be sent
from anywhere.

On the server I have set a loopingCall running every 20 seconds, so that I
can switch off various parts to see the results.

With the pda not connected, the loopingCall keeps on going and sends between
2 -4 messages without getting an ack back from the pda. Then the server
stops trying to send any data. The loopingCall keeps going but no data goes
out onto the wire. We get upto 16 - 40 loop messages being sent but only the
2-4 go onto the wire.

What I would like to be able to do is to not wait 2-7 minutes before
realising the connection is not working.

I have been through the docs and the api but can't find anything that I can
use.

Is there any call I can make use of to be able to detect the failed send
before the connection finally is broken.


Thanks for any help on this.

John Aherne




From Carson.Gaspar at gs.com  Wed Jan  9 15:55:09 2008
From: Carson.Gaspar at gs.com (Gaspar, Carson)
Date: Wed, 9 Jan 2008 17:55:09 -0500
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
References: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
Message-ID: <7B58D29443879043A9E16AEE6769109F167EFF51@gsmbnmp04es.firmwide.corp.gs.com>

>What I would like to be able to do is to not wait 2-7 minutes 
>before realising the connection is not working.
>
>I have been through the docs and the api but can't find 
>anything that I can use.
>
>Is there any call I can make use of to be able to detect the 
>failed send before the connection finally is broken.

I assume this is TCP. What you're seeing is TCP in action. You send data
until you fill the TCP window, then the kernel queues the data, then TCP
times out.

If you want a faster timeout, you'll need to add application level ACKs,
and add a timeout on those, or tune your kernel to have shorter TCP
timeouts.

You _may_ be able to call getsockopt() and check the outgoing buffer
size to determine that there is unsent data, but I don't think you can
detect unack'd data (if anyone knows a way, please speak up).

-- 
Carson



From zmola at acm.org  Wed Jan  9 17:06:20 2008
From: zmola at acm.org (Carl Zmola)
Date: Wed, 09 Jan 2008 19:06:20 -0500
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
References: <FEEJLEMNHDFMOIKEDJBKGEJHCJAA.johnaherne@rocs.co.uk>
Message-ID: <4785617C.1090804@acm.org>

John Aherne wrote:
> Is there any call I can make use of to be able to detect the failed send
> before the connection finally is broken.
In general, there is no way to know if a connection is broken.
The standard way to do this is to send a heartbeat message every x 
seconds if there is no other communication on the connection.
On the server, you keep a watchdog timer and wait 2x seconds.  You reset 
the timer on every communication.
This can be tuned as you see fit, but it has to be done in your application.

The trade off is that if you want to know instantly that a connection is 
down, you need to be sending data constantly.

Carson suggested some ways to tweek TCP, and if you have control of the 
TCP stack, it is tweakable, but it is not portable.

Carl
zmola at acm.org



From johnaherne at rocs.co.uk  Thu Jan 10 02:52:46 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 10 Jan 2008 09:52:46 -0000
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <7B58D29443879043A9E16AEE6769109F167EFF51@gsmbnmp04es.firmwide.corp.gs.com>
Message-ID: <FEEJLEMNHDFMOIKEDJBKEEKECJAA.johnaherne@rocs.co.uk>

Carson

Thanks for the info.

I have since read up on TCP and see that I am looking at standard TCP comms.

But I don't want to do anything too tricky. Just standard twisted if
possible.

I'll have to take a lok at doing my own timeouts with a callLater to see if
I get a response. If that makes sense.

Thanks

John Aherne


-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Gaspar,
Carson
Sent: 09 January 2008 22:55
To: Twisted general discussion
Subject: RE: [Twisted-Python] twisted gprs


>What I would like to be able to do is to not wait 2-7 minutes
>before realising the connection is not working.
>
>I have been through the docs and the api but can't find
>anything that I can use.
>
>Is there any call I can make use of to be able to detect the
>failed send before the connection finally is broken.

I assume this is TCP. What you're seeing is TCP in action. You send data
until you fill the TCP window, then the kernel queues the data, then TCP
times out.

If you want a faster timeout, you'll need to add application level ACKs,
and add a timeout on those, or tune your kernel to have shorter TCP
timeouts.

You _may_ be able to call getsockopt() and check the outgoing buffer
size to determine that there is unsent data, but I don't think you can
detect unack'd data (if anyone knows a way, please speak up).

--
Carson

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From johnaherne at rocs.co.uk  Thu Jan 10 03:16:15 2008
From: johnaherne at rocs.co.uk (John Aherne)
Date: Thu, 10 Jan 2008 10:16:15 -0000
Subject: [Twisted-Python] twisted gprs
In-Reply-To: <4785617C.1090804@acm.org>
Message-ID: <FEEJLEMNHDFMOIKEDJBKAEKFCJAA.johnaherne@rocs.co.uk>

Carl

Thanks for the reply.

I see now. I did take a look at the TCP book and see what you mean.

What I am trying to do is:--

I have a GPS app on the pda that can transmit every 30 secs or some other
parameterised time frame. This uses a port of its own.

I have another app on the same pda that receives ad hoc messages from the
server and acknowledges these with a message. This is done on a different
port.

For the pda app that waits for messages from the server, I hold a dict of
connections to talk back on.

If the pda can't receive I would like to report back very quickly that it is
not connected.

In theory, if I transmit gps every 30 secs that will keep the connection
open from the pda and is in effect a keepalive. Except when someone is in a
basement or tunnel when the gprs might disappear.

One thought I had was to do a callLater on the server of say 30secs once I
had sent the message, and check whether I had seen a response to that
message within the timeframe. If not I could drop the connection from my
dict and wait for the pda to reconnect with maybe a different IP and port.

Since the gps is send only from the pda I am not too worried if that fails
every now and then. It can just reconnect as and when.

I assume that what I am suggesting is a version of application acks as you
mention. Just nice if someone could confirm that it makes some sense.

Once again Thanks.

John Aherne

-----Original Message-----
From: twisted-python-bounces at twistedmatrix.com
[mailto:twisted-python-bounces at twistedmatrix.com]On Behalf Of Carl Zmola
Sent: 10 January 2008 00:06
To: Twisted general discussion
Subject: Re: [Twisted-Python] twisted gprs


John Aherne wrote:
> Is there any call I can make use of to be able to detect the failed send
> before the connection finally is broken.
In general, there is no way to know if a connection is broken.
The standard way to do this is to send a heartbeat message every x
seconds if there is no other communication on the connection.
On the server, you keep a watchdog timer and wait 2x seconds.  You reset
the timer on every communication.
This can be tuned as you see fit, but it has to be done in your application.

The trade off is that if you want to know instantly that a connection is
down, you need to be sending data constantly.

Carson suggested some ways to tweek TCP, and if you have control of the
TCP stack, it is tweakable, but it is not portable.

Carl
zmola at acm.org

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python




From nitro at dr-code.org  Thu Jan 10 19:32:06 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 11 Jan 2008 03:32:06 +0100
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <1199416731.7666.42.camel@localhost.localdomain>
References: <op.t4dwgkioz3pzfc@nitrogenycs2>
	<1199416731.7666.42.camel@localhost.localdomain>
Message-ID: <op.t4qunspfz3pzfc@nitrogenycs2>

Am 04.01.2008, 04:18 Uhr, schrieb Itamar Shtull-Trauring  
<itamar at itamarst.org>:

>
>> a) the select calls are really taking up that much time (more than 50%!)
>
> They're certainly going to take up lots and lots of *clock* time, not
> necessarily CPU time: select() is the way Twisted (in default reactors)
> waits for events to happen. So if your program does nothing at all (e.g.
> just reactor.run(), select() will actually be close to 100% of clock
> time, even though CPU usage will be minuscule.

I guess this is what cProfile is actually outputting. Clock time and not  
cpu time. If the app is under more load, the percentage of the time spent  
in select() calls decreases to a minimum. So select() isn't bad then.

> If you have many TCP connections (or really, file descriptors), hundreds
> or thousands, select() will also start taking up CPU time. Using poll
> reactor, or in next version of Twisted (2.5 had some bugs) epoll reactor
> on Linux will use less CPU for this scenario.

I have very few connections, so this was not the problem. Only cProfile  
being a bit strange.

-Matthias



From nitro at dr-code.org  Thu Jan 10 19:36:45 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 11 Jan 2008 03:36:45 +0100
Subject: [Twisted-Python] Performance and select.select
In-Reply-To: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>
References: <20080104031940.31425.2014724949.divmod.quotient.459@ohm>
Message-ID: <op.t4quvjc4z3pzfc@nitrogenycs2>

Am 04.01.2008, 04:19 Uhr, schrieb Jean-Paul Calderone <exarkun at divmod.com>:

> Twisted does use select by default on Windows.  One thing you might try  
> is
> one of the other reactors available on Windows; there are two,
> win32eventreactor and iocpreactor.  You can read about how to do this  
> here:
>
> http://twistedmatrix.com/projects/core/documentation/howto/choosing-reactor.html
>
> Depending on what your application does, iocpreactor may not be complete
> enough to actually run your code.  It lacks some features provided by the
> default reactor.
>
> Whether either of these reactors will actually improve the performance of
> your application, I don't know.  You pointed out that a lot of time is
> spent in select, but this doesn't mean that spending less time inside the
> event notification function will make your overall application faster.
>
> Also, you are right to be suspicious of these profile results.  Python  
> has
> a very spotty history when it comes to profilers.  They are often  
> inaccurate
> or completely wrong.  cProfile is supposed to be better than the previous
> attempts, but I haven't personally used it extensively enough (nor at  
> all on
> Windows) to say whether this is true.

As I explained in my other post, cProfile's output wasn't what I expected  
it to be. I tried IOCP reactor nevertheless and it worked for my  
application. Can't see a real performance difference, I guess I am not  
performance limited by twisted anymore. At least for the moment being :-)

>   * How often do timed events go off?  These also cause more trips into
>     select, since each one causes select to return when it is time to  
> run.
>     Do you use reactor.callLater() with a 0 timeout a lot?

What is a lot? I am probably using it 10-50 times per iteration. Just out  
of curiosity - since my real problem is solved - which difference do those  
callLater(0, ...) calls make?

Thanks for helping, also thanks to Itamar.

-Matthias



From steven_zhou at ctl.creative.com  Thu Jan 10 19:53:06 2008
From: steven_zhou at ctl.creative.com (Steven ZHOU)
Date: Fri, 11 Jan 2008 10:53:06 +0800
Subject: [Twisted-Python] epollreactor for pyicq-0.6-t
In-Reply-To: <20080108150303.31425.363432472.divmod.quotient.2232@ohm>
Message-ID: <OF68949FC2.84AD12A8-ON482573CD.000FB8F4-482573CD.000FD921@ctl.creative.com>

Hi Jean-Paul,

Thanks for the help. It's indeed the python 2.4.3 bug. I changed it to
2.4.4 or 2.5. It works.

The adhoc way I did to epollreactor seems to work. Maybe I am lucky.

regards,
Steven

Notice
The information in this message is confidential and may be legally
privileged.  It is intended solely for the addressee.  Access to this
message by anyone else is unauthorized.  If you are not the intended
recipient,  any disclosure,  copying or distribution of the message,  or
any action taken by you in reliance on it,  is prohibited and may be
unlawful.  If you have received this message in error,  please delete it
and contact the sender immediately.  Thank you.




                                                                           
             Jean-Paul                                                     
             Calderone                                                     
             <exarkun at divmod.c                                          To 
             om>                       Twisted general discussion          
             Sent by:                  <twisted-python at twistedmatrix.com>  
             twisted-python-bo                                          cc 
             unces at twistedmatr                                             
             ix.com                                                Subject 
                                       Re: [Twisted-Python] epollreactor   
                                       for pyicq-0.6-t                     
             01/08/2008 11:03                                              
             PM                                                            
                                                                           
                                                                           
             Please respond to                                             
              Twisted general                                              
                discussion                                                 
             <twisted-python at t                                             
             wistedmatrix.com>                                             
                                                                           
                                                                           




On Tue, 8 Jan 2008 22:50:54 +0800, Steven ZHOU
<steven_zhou at ctl.creative.com> wrote:
>
>Hi,
>
>I hope some one could offer me some help on this. I am quite new to both
>python and twisted.
>
>The thing I do may sounds a bit wierd. I am using a pyicq-0.6-t. As
>pyicq-0.6-t only works with twisted-2.2 or earlier, so I chose to install
>twisted-2.2. However, I wished to use epollreactor as the default
>selectreactor only supports 1024 file descriptors. So I copied the
relevant
>files of epollreactor which is installed on twisted-2.5 to the
>site-packages/twisted-2.2 directory. I copied 5 files in the total,
>epollreactor.py, epoll..pyx to the twisted/internet directory, _epoll.py
>_epoll.pyc and _epoll.so to twisted/python directory. I can't remember the
>exact file names. I copied it with a hope that it works. I am not sure
>whether I am doing thing stupid here. correct me if I am.

I don't know if this works.  I've never tried it.  The epoll reactor
implementation shares code from other parts of Twisted.  It may be
the case that that code changed between Twisted 2.2 and Twisted 2.5
in a way which will prevent epollreactor from working.  It may also
be the case that it hasn't.

>
>The thing is, after I changed the reactor.py to import epollreactor,
>pyicq-0.6-t seems to be using epollreactor but it still can only supports
>1024 open sockets. I thought the problem is only in selectreactor? I
>figured this out by doing a netstat -a -n on linux and found that
>pyicq-0.6-t only opened about 1017 maximum concurrent sockets. I presume
>that would mean only around 1000 connections can be made.
>
>Although strange, but I do have a reason to use pyicq-0.6-t which is an
>outdated version.

Are you using Python 2.4.3?  This sounds like it may be related to the
issue described here:

  http://jcalderone.livejournal.com/2006/05/26/

Jean-Paul

_______________________________________________
Twisted-Python mailing list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

ForwardSourceID:NT0001A016




From ottavio at campana.vi.it  Sat Jan 12 09:52:25 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Sat, 12 Jan 2008 17:52:25 +0100
Subject: [Twisted-Python] problem with twcgi.PHPScript
Message-ID: <20080112165225.GA13692@campana.vi.it>

Hi, I'm trying  to add the possibility of executing  some php pages from
an application developed with twisted web.

I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
because the debian package complains about it.

class VWGPhpScript (twcgi.FilteredScript):
  filter = '/usr/lib/cgi-bin/php5'
  def runProcess(self, env, request, qargs=[]):
    p = twcgi.CGIProcessProtocol(request)
    env['REDIRECT_STATUS'] = '200'
    reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env, os.path.dirname(self.filename))

This is the error I get:

2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
        :Traceback (most recent call last):
          File "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in __init__
            command, args, environment)
          File "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in _execChild
            os.execvpe(command, args, environment)
          File "os.py", line 350, in execvpe
            _execvpe(file, args, env)
          File "os.py", line 367, in _execvpe
            func(file, *argrest)
        OSError: [Errno 13] Permission denied

What's the meaning of permission denied? I tried running the application
as root, it didn't change... The php  file is in /tmp and this directory
in attached as a child called directory of the root.



From yginsburg at gmail.com  Sat Jan 12 17:16:03 2008
From: yginsburg at gmail.com (Yuri Ginsburg)
Date: Sat, 12 Jan 2008 16:16:03 -0800
Subject: [Twisted-Python] problem with twcgi.PHPScript
In-Reply-To: <20080112165225.GA13692@campana.vi.it>
References: <20080112165225.GA13692@campana.vi.it>
Message-ID: <3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>

Looks that you are passing you are passing your script's file name as
second argument to spawnProcess method instead of passing filter
(which '/usr/lib/cgi-bin/php5'), so spawnProcess tries to spawn
/tmp/index.php which, most probably, does not have execute
permissions.

I'd try

reactor.spawnProcess(p, self.filter, [self.filtrer,
self.filename]+qargs, env, os.path.dirname(self.filename))

-- 
Yuri Ginsburg (YG10)

On 1/12/08, Ottavio Campana <ottavio at campana.vi.it> wrote:
> Hi, I'm trying  to add the possibility of executing  some php pages from
> an application developed with twisted web.
>
> I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> because the debian package complains about it.
>
> class VWGPhpScript (twcgi.FilteredScript):
>   filter = '/usr/lib/cgi-bin/php5'
>   def runProcess(self, env, request, qargs=[]):
>     p = twcgi.CGIProcessProtocol(request)
>     env['REDIRECT_STATUS'] = '200'
>     reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
> os.path.dirname(self.filename))
>
> This is the error I get:
>
> 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
> 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon execvpe
> /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
>         :Traceback (most recent call last):
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> __init__
>             command, args, environment)
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> _execChild
>             os.execvpe(command, args, environment)
>           File "os.py", line 350, in execvpe
>             _execvpe(file, args, env)
>           File "os.py", line 367, in _execvpe
>             func(file, *argrest)
>         OSError: [Errno 13] Permission denied
>
> What's the meaning of permission denied? I tried running the application
> as root, it didn't change... The php  file is in /tmp and this directory
> in attached as a child called directory of the root.
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From exarkun at twistedmatrix.com  Sat Jan 12 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 13 Jan 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1200200707.8.419647210@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080113/6fbd4f69/attachment.html>

From ottavio at campana.vi.it  Sun Jan 13 07:38:52 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Sun, 13 Jan 2008 15:38:52 +0100
Subject: [Twisted-Python] problem with twcgi.PHPScript
In-Reply-To: <3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>
References: <20080112165225.GA13692@campana.vi.it>
	<3343b3d90801121616n6c40d596x85ac98020797762d@mail.gmail.com>
Message-ID: <478A227C.6010600@campana.vi.it>

Yuri Ginsburg ha scritto:
> Looks that you are passing you are passing your script's file name as
> second argument to spawnProcess method instead of passing filter
> (which '/usr/lib/cgi-bin/php5'), so spawnProcess tries to spawn
> /tmp/index.php which, most probably, does not have execute
> permissions.
> 
> I'd try
> 
> reactor.spawnProcess(p, self.filter, [self.filtrer,
> self.filename]+qargs, env, os.path.dirname(self.filename))
> 

it works!

Thank you.

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.



From bernat at luffy.cx  Mon Jan 14 10:44:37 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Mon, 14 Jan 2008 18:44:37 +0100
Subject: [Twisted-Python] Conch and basic.LineReceiver
Message-ID: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx>

Hi !

I have modified sshsimpleserver.py to use a protocol based on
basic.LineReceiver. However, I get the following exception:

2008/01/14 19:40 +0200 [SSHChannel session (0) on SSHService ssh-connection
on SSHServerTransport,0,127.0.0.1] Unhandled Error
	Traceback (most recent call last):
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
37, in callWithContext
	    return func(*args,**kw)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/service.py",
line 42, in packetReceived
	    f(packet)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/connection.py",
line 139, in ssh_CHANNEL_DATA
	    log.callWithLogger(channel, channel.dataReceived, data)
	--- <exception caught here> ---
	  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 48,
in callWithLogger
	    return callWithContext({"system": lp}, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/log.py", line 33,
in callWithContext
	    return context.call({ILogContext: newCtx}, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
59, in callWithContext
	    return self.currentContext().callWithContext(ctx, func, *args, **kw)
	  File "/usr/lib/python2.4/site-packages/twisted/python/context.py", line
37, in callWithContext
	    return func(*args,**kw)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/session.py",
line 107, in dataReceived
	    self.client.transport.write(data)
	  File "/usr/lib/python2.4/site-packages/twisted/conch/ssh/session.py",
line 156, in write
	    self.proto.dataReceived(data)
	  File "/usr/lib/python2.4/site-packages/twisted/protocols/basic.py", line
233, in dataReceived
	    if why or self.transport and self.transport.disconnecting:
	exceptions.AttributeError: SSHSessionProcessProtocol instance has no
attribute 'disconnecting'

How may I fix this?

I have attached my modified sshsimpleserver.py.

Thanks.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sshsimpleserver.py
Type: text/x-python
Size: 3621 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080114/3a669f06/attachment-0002.py>

From bernat at luffy.cx  Mon Jan 14 12:37:15 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Mon, 14 Jan 2008 20:37:15 +0100
Subject: [Twisted-Python] Conch and basic.LineReceiver
In-Reply-To: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx> (Vincent
	Bernat's message of "Mon, 14 Jan 2008 18:44:37 +0100")
References: <cbbba801a3b18b4f621e52cab2bb3afc@imap.luffy.cx>
Message-ID: <m33at0i4gk.fsf@neo.luffy.cx>

OoO Lors de la soirée naissante du lundi 14 janvier 2008, vers 18:44, je
disais:

> I have modified sshsimpleserver.py to use a protocol based on
> basic.LineReceiver. However, I get the following exception:
[...]

There       seems      to       be       other      limitations       in
SSHSessionProcessProtocol.  Functions like inConnectionLost()  never get
called for example.
-- 
A BELCH IS NOT AN ORAL REPORT
A BELCH IS NOT AN ORAL REPORT
A BELCH IS NOT AN ORAL REPORT
-+- Bart Simpson on chalkboard in episode BABF11



From daedalus at eigenmagic.com  Mon Jan 14 18:34:17 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 12:34:17 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
Message-ID: <1200360857.6971.29.camel@localhost>

Hi folks,

I think I have a fundamental misunderstanding of how deferredGenerator
(or inlineCallbacks for Python2.5) work.

What I *want* to do, is something like this:

aValue = MyObject.get_a_value()

where the contents of get_a_value() do some asynchronous operations
which finally result in some kind of actual value being returned (a
string, and integer, whatever) rather than a Deferred.

I have some old blocking code that I want to migrate to use some
asynchronous, twisted code that does the same thing, but I'd prefer to
not have to write a bunch of:

def get_a_value_success(retval):
...

def get_a_value_failed(retval):
...

d = MyObject.get_a_value()
d.addCallback(get_a_value_success)
d.addErrback(get_a_value_failed)
code.

Is this even possible, or am I completely misunderstanding what's going
on here? I can get the code to do the @defer.deferredGenerator,
waitForDeferred(), wfd.getResult() dance.. but how do I actually return
a value from my function after doing wfd.getResult() ?

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Mon Jan 14 19:53:07 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 13:53:07 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200360857.6971.29.camel@localhost>
References: <1200360857.6971.29.camel@localhost>
Message-ID: <1200365587.6971.44.camel@localhost>

On Tue, 2008-01-15 at 12:34 +1100, Justin Warren wrote:
> Hi folks,
> 
> I think I have a fundamental misunderstanding of how deferredGenerator
> (or inlineCallbacks for Python2.5) work.
> 
> What I *want* to do, is something like this:
> 
> aValue = MyObject.get_a_value()

Aha!

Replying to my own post, I know, but I think I found the insight that
was preventing me from grokking this mechanism.

Adding @defer.deferredGenerator or @defer.inlineCallbacks 'turns on' the
inline callback mechanism *within that function*. You can then use the
inline yield syntax to perform sequential operations that are actually
asynchronous things that 'wait' for the operation to complete before
continuing to the next bit of code.

So, to do what I wanted to do, I needed to think about things
differently. Here's a concrete example:

I wanted to use the ZAPITool.zapi_request() function from my ModiPY code
to query a NetApp filer via its ZAPI (XML over HTTP) protocol. This
function returns a Deferred() that will .callback() or errback() when a
result is available.

So, I want to fetch the version of the filer OS. Normally, I'd use
something like this:

zpt = ZAPITool()
d = zpt.zapi_request('<system-get-version/>')

def got_result(result):
    print "Got a result:", result
    # Do something with the result

d.addCallback( got_result )

Which is messy, verbose, and annoying.

I can do this using inlineCallbacks thusly:

@defer.inlineCallbacks    # turn on inline callback functionality
def do_some_inline_callback_stuff():
    zpt = ZAPITool()
    result = yield zpt.zapi_request('<system-get-version/>')
    print "Got a result:", result
    # Do something with the result
    ...

    # Do another fetch
    result = yield zpt.zapi_request('<options-list-info/>')
    print "Filer options are:", result

    # and so on


w00t!

Note that you cannot

    return result

from within do_some_inline_callback_stuff(), because this is actually a
generator now, since it contains a yield.

This is quite neat stuff.. though it feels a bit sneaky and magical.

-- 
Justin Warren <daedalus at eigenmagic.com>



From nitro at dr-code.org  Mon Jan 14 20:03:37 2008
From: nitro at dr-code.org (Nitro)
Date: Tue, 15 Jan 2008 04:03:37 +0100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200365587.6971.44.camel@localhost>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>
Message-ID: <op.t4yasbo6z3pzfc@nitrogenycs2>

> Note that you cannot
>
>     return result
>
> from within do_some_inline_callback_stuff(), because this is actually a
> generator now, since it contains a yield.

You can. Use the returnValue() function found in the same module as the  
inlineCallbacks decorator.

> This is quite neat stuff.. though it feels a bit sneaky and magical.

Yeah, I am using it a lot recently too. It's just so much better than all  
those backwards code with callbacks before your actual invokation of the  
function :)
I had the same problems as you btw, thinking about things backwards. Now  
everything makes sense and works :)

-Matthias





From daedalus at eigenmagic.com  Mon Jan 14 20:14:37 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 14:14:37 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <op.t4yasbo6z3pzfc@nitrogenycs2>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost> <op.t4yasbo6z3pzfc@nitrogenycs2>
Message-ID: <1200366877.6971.46.camel@localhost>

On Tue, 2008-01-15 at 04:03 +0100, Nitro wrote:
> > Note that you cannot
> >
> >     return result
> >
> > from within do_some_inline_callback_stuff(), because this is actually a
> > generator now, since it contains a yield.
> 
> You can. Use the returnValue() function found in the same module as the  
> inlineCallbacks decorator.

Oh woo! I just tried that out and, well, *awesome*. Soooo much neater.

I have so much code to clean up...

-- 
Justin Warren <daedalus at eigenmagic.com>



From zchuang2006 at gmail.com  Mon Jan 14 20:16:36 2008
From: zchuang2006 at gmail.com (zechun huang)
Date: Tue, 15 Jan 2008 11:16:36 +0800
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 46, Issue 10
In-Reply-To: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
References: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
Message-ID: <55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>

收到

2008/1/13, twisted-python-request at twistedmatrix.com <
twisted-python-request at twistedmatrix.com>:
>
> Send Twisted-Python mailing list submissions to
>         twisted-python at twistedmatrix.com
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> or, via email, send a message with subject or body 'help' to
>         twisted-python-request at twistedmatrix.com
>
> You can reach the person managing the list at
>         twisted-python-owner at twistedmatrix.com
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Twisted-Python digest..."
>
>
> Today's Topics:
>
>    1. problem with twcgi.PHPScript (Ottavio Campana)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 12 Jan 2008 17:52:25 +0100
> From: Ottavio Campana <ottavio at campana.vi.it>
> Subject: [Twisted-Python] problem with twcgi.PHPScript
> To: twisted-python at twistedmatrix.com
> Message-ID: <20080112165225.GA13692 at campana.vi.it>
> Content-Type: text/plain; charset=us-ascii
>
> Hi, I'm trying  to add the possibility of executing  some php pages from
> an application developed with twisted web.
>
> I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> because the debian package complains about it.
>
> class VWGPhpScript (twcgi.FilteredScript):
>   filter = '/usr/lib/cgi-bin/php5'
>   def runProcess(self, env, request, qargs=[]):
>     p = twcgi.CGIProcessProtocol(request)
>     env['REDIRECT_STATUS'] = '200'
>     reactor.spawnProcess(p, self.filename, [self.filename]+qargs, env,
> os.path.dirname(self.filename))
>
> This is the error I get:
>
> 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code 1
> 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon
> execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
>         :Traceback (most recent call last):
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> __init__
>             command, args, environment)
>           File
> "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> _execChild
>             os.execvpe(command, args, environment)
>           File "os.py", line 350, in execvpe
>             _execvpe(file, args, env)
>           File "os.py", line 367, in _execvpe
>             func(file, *argrest)
>         OSError: [Errno 13] Permission denied
>
> What's the meaning of permission denied? I tried running the application
> as root, it didn't change... The php  file is in /tmp and this directory
> in attached as a child called directory of the root.
>
>
>
> ------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
> End of Twisted-Python Digest, Vol 46, Issue 10
> **********************************************
>



-- 
http://sst.oicp.net/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080115/1de0ea34/attachment.html>

From bernat at luffy.cx  Mon Jan 14 23:34:57 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Tue, 15 Jan 2008 07:34:57 +0100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <1200365587.6971.44.camel@localhost> (Justin Warren's message of
	"Tue, 15 Jan 2008 13:53:07 +1100")
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>
Message-ID: <m3prw3ha0e.fsf@neo.luffy.cx>

OoO En ce  milieu de nuit étoilée du mardi 15  janvier 2008, vers 03:53,
Justin Warren <daedalus at eigenmagic.com> disait:

> I can do this using inlineCallbacks thusly:

> @defer.inlineCallbacks    # turn on inline callback functionality
> def do_some_inline_callback_stuff():
>     zpt = ZAPITool()
>     result = yield zpt.zapi_request('<system-get-version/>')
>     print "Got a result:", result
>     # Do something with the result
>     ...

>     # Do another fetch
>     result = yield zpt.zapi_request('<options-list-info/>')
>     print "Filer options are:", result

>     # and so on


> w00t!

> Note that you cannot

>     return result

> from within do_some_inline_callback_stuff(), because this is actually a
> generator now, since it contains a yield.

Can we use exceptions?
-- 
I WILL NOT SELL SCHOOL PROPERTY
I WILL NOT SELL SCHOOL PROPERTY
I WILL NOT SELL SCHOOL PROPERTY
-+- Bart Simpson on chalkboard in episode 7F10



From daedalus at eigenmagic.com  Tue Jan 15 02:18:59 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 15 Jan 2008 20:18:59 +1100
Subject: [Twisted-Python] deferredGenerator or inlineCallbacks
In-Reply-To: <m3prw3ha0e.fsf@neo.luffy.cx>
References: <1200360857.6971.29.camel@localhost>
	<1200365587.6971.44.camel@localhost>  <m3prw3ha0e.fsf@neo.luffy.cx>
Message-ID: <1200388740.6971.68.camel@localhost>

On Tue, 2008-01-15 at 07:34 +0100, Vincent Bernat wrote:
> OoO En ce  milieu de nuit étoilée du mardi 15  janvier 2008, vers 03:53,
> 
> Can we use exceptions?

Yes, it appears so.

You do something like this:

@defer.inlineCallbacks
def my_inline_function():
    try:

        # call a function that returns a Deferred, but that might
        # raise an Exception somewhere, which will trigger the
        # .errback() of the deferred that gets returned
        value = yield function_to_get_value_that_raises_exception()

    except Exception, e:    # poor form, but useful for an example
        print "Caught an exception:", e

The Exception that gets caught will be whatever Exception was wrapped up
in the Failure that gets passed to the .errback(). Some neat magic is
happening under the covers to unwrap the Exception from the Failure, so
you can use normal logic like this.

Beware in your own code: make sure that you don't just raise an
Exception where you should be calling an .errback(), or you'll see
'Unhandled error in Deferred' messages.

Executable demo code follows.

As an aside, thanks to the Twisted Matrix folks for this sweet
enhancement to twisted. Glyph gets the main blame, because he's listed
as the maintainer in twisted.internet.defer. Kudos!

#
# inlineDeferred try/except demo
#
def later_processing(d):
    # This must be an .errback(), not just a bare 'raise'
    # or I'm actually raising the error outside of the
    # Deferred chain.
    if True:  # simulate a test for an error condition
        # simulate triggering an errback on error
        d.errback( ValueError("My error!") )
    else:
        # Simulating normal behaviour
        d.callback("success!")

def deferred_fetch_value():
    """
    Simulate waiting for a deferred thing to fetch a value
    """
    d = defer.Deferred()
    reactor.callLater(1, later_processing, d)
    return d

@defer.inlineCallbacks
def get_value():
    """
    Sample function to get a value, which will asyncronously block
waiting
    for a deferred.
    """
    try:
        value = yield deferred_fetch_value()
        defer.returnValue( value )
    except ValueError, e:
        print "caught exception:", e
        #defer.returnValue( None )
        pass

@defer.inlineCallbacks
def get_value2():
    """
    Sample function to get a value, which will asyncronously block
waiting
    for a deferred.
    """
    value = yield deferred_fetch_value()
    defer.returnValue( value )

def my_error(failure):
    print "an error occurred: %s", failure
    reactor.stop()

def mystop(ignored):
    reactor.stop()

@defer.inlineCallbacks
def call_get_value():
    print "fetching value..."
    value = yield get_value()
    print "got value:", value

def go():
    d = call_get_value()
    d.addCallback(mystop)
    d.addErrback(my_error)

reactor.callLater(0, go)
reactor.run()

-- 
Justin Warren <daedalus at eigenmagic.com>



From lists at t3i.nl  Tue Jan 15 03:26:24 2008
From: lists at t3i.nl (Richard van Paasen)
Date: Tue, 15 Jan 2008 11:26:24 +0100
Subject: [Twisted-Python] Where to download twisted for win32 / python 2.5?
Message-ID: <E1JEizw-0005Xg-A6@daffy.sipo.nl>

Hi,

I tried to download the win32 package of twisted, but the download links on
the twisted homepage (http://twistedmatrix.com/trac/) don't work.

I tried to download:
http://tmrc.mit.edu/mirror/twisted/Twisted/2.5/Twisted_NoDocs-2.5.0.win32-py2.5.exe

Where can I download a win32 version of twisted?




From exarkun at divmod.com  Tue Jan 15 12:13:23 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Tue, 15 Jan 2008 14:13:23 -0500
Subject: [Twisted-Python] Where to download twisted for win32 / python 2.5?
In-Reply-To: <E1JEizw-0005Xg-A6@daffy.sipo.nl>
Message-ID: <20080115191323.31425.833750123.divmod.quotient.5071@ohm>

On Tue, 15 Jan 2008 11:26:24 +0100, Richard van Paasen <lists at t3i.nl> wrote:
>Hi,
>
>I tried to download the win32 package of twisted, but the download links on
>the twisted homepage (http://twistedmatrix.com/trac/) don't work.
>
>I tried to download:
>http://tmrc.mit.edu/mirror/twisted/Twisted/2.5/Twisted_NoDocs-2.5.0.win32-py2.5.exe
>
>Where can I download a win32 version of twisted?
>

It's up now.

Jean-Paul



From drew.smathers at gmail.com  Tue Jan 15 13:35:09 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Tue, 15 Jan 2008 15:35:09 -0500
Subject: [Twisted-Python] Re: Twisted-Python Digest, Vol 46, Issue 10
In-Reply-To: <55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>
References: <E1JDjiF-0004DL-OB@cube.twistedmatrix.com>
	<55726d90801141916k7f6373c0lf47a2bdc8f7166b7@mail.gmail.com>
Message-ID: <368574aa0801151235s6c733b2bt363a1825b4fcb750@mail.gmail.com>

收到了吗？恭喜你！

2008/1/14 zechun huang <zchuang2006 at gmail.com>:

> 收到
>
> 2008/1/13, twisted-python-request at twistedmatrix.com <twisted-python-request at twistedmatrix.com
> >:
> >
> > Send Twisted-Python mailing list submissions to
> >          twisted-python at twistedmatrix.com
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >         http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> > or, via email, send a message with subject or body 'help' to
> >         twisted-python-request at twistedmatrix.com
> >
> > You can reach the person managing the list at
> >         twisted-python-owner at twistedmatrix.com
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of Twisted-Python digest..."
> >
> >
> > Today's Topics:
> >
> >    1. problem with twcgi.PHPScript (Ottavio Campana)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sat, 12 Jan 2008 17:52:25 +0100
> > From: Ottavio Campana <ottavio at campana.vi.it>
> > Subject: [Twisted-Python] problem with twcgi.PHPScript
> > To: twisted-python at twistedmatrix.com
> > Message-ID: <20080112165225.GA13692 at campana.vi.it>
> > Content-Type: text/plain; charset=us-ascii
> >
> > Hi, I'm trying  to add the possibility of executing  some php pages from
> >
> > an application developed with twisted web.
> >
> > I define the  VWGPhpScript class as follows,  adding the REDIRECT_STATUS
> > because the debian package complains about it.
> >
> > class VWGPhpScript (twcgi.FilteredScript ):
> >   filter = '/usr/lib/cgi-bin/php5'
> >   def runProcess(self, env, request, qargs=[]):
> >     p = twcgi.CGIProcessProtocol(request)
> >     env['REDIRECT_STATUS'] = '200'
> >     reactor.spawnProcess (p, self.filename, [self.filename]+qargs, env,
> > os.path.dirname(self.filename))
> >
> > This is the error I get:
> >
> > 2008/01/12 17:34 CET [-] CGI /directory/index.php exited with exit code
> > 1
> > 2008/01/12 17:34 CET [-] Errors from CGI /directory/index.php: Upon
> > execvpe /tmp/index.php ['/tmp/index.php'] in environment id -1217401212
> >         :Traceback (most recent call last):
> >           File
> > "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 377, in
> > __init__
> >             command, args, environment)
> >           File
> > "/usr/lib/python2.4/site-packages/twisted/internet/process.py", line 539, in
> > _execChild
> >             os.execvpe(command, args, environment)
> >           File "os.py", line 350, in execvpe
> >             _execvpe(file, args, env)
> >           File "os.py", line 367, in _execvpe
> >             func(file, *argrest)
> >         OSError: [Errno 13] Permission denied
> >
> > What's the meaning of permission denied? I tried running the application
> > as root, it didn't change... The php  file is in /tmp and this directory
> > in attached as a child called directory of the root.
> >
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> >
> >
> > End of Twisted-Python Digest, Vol 46, Issue 10
> > **********************************************
> >
>
>
>
> --
> http://sst.oicp.net/
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080115/a6ac2a56/attachment.html>

From hwan2265 at mail.usyd.edu.au  Tue Jan 15 23:28:38 2008
From: hwan2265 at mail.usyd.edu.au (hwan2265 at mail.usyd.edu.au)
Date: Wed, 16 Jan 2008 17:28:38 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
Message-ID: <1200464918.478da4163459c@www-mail.usyd.edu.au>

Hello everyone,

I am trying to write a imap mail fetcher base on twisted and dbus. I have
written a simple fetcher without dbus functionality and it's working fine.
However I got a problem while adding dbus.

http://twistedmatrix.com/trac/ticket/1352 is the only article about how can
twisted and dbus work together that I could get from google and I just
followed its suggestion and added

    from twisted.internet import glib2reactor
    glib2reactor.install()

to my code.

As what I read from twisted API
http://twistedmatrix.com/documents/current/api/twisted.internet.glib2reactor.html
"In order to use this support, simply do the following:

   |  from twisted.internet import glib2reactor
   |  glib2reactor.install()

Then use twisted.internet APIs as usual. "
I thought everything will be fine.

But when I was running my code, I got a error:

Traceback (most recent call last):
  File "dbustwisted.py", line 5, in <module>
    glib2reactor.install()
  File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
line 33, in install
    return gtk2reactor.install(False)
  File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
line 270, in install
    installReactor(reactor)
  File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
24, in installReactor
    "reactor already installed"
AssertionError: reactor already installed

I don't know what's wrong with it.
This is my code, I have not add the dbus part yet and just test the
glib2reactor.

from twisted.mail import imap4
from twisted.internet import protocol, defer
import email, os, time

MAILPATH = "Mails"
IMAPSERVER = "xxxxxxxxxxx"
USERNAME = "xxxxx"
PASSWORD = "xxxxx"

class IMAPDownloadProtocol(imap4.IMAP4Client):

    def serverGreeting(self, capabilities):
        login = self.login(self.factory.username, self.factory.password)
        login.addCallback(self.__loggedIn)
        login.chainDeferred(self.factory.deferred) # any event that fires
login will also fire factory.deferred

    def __loggedIn(self, result):
        return
self.select(self.factory.mailbox).addCallback(self.__selectedMailbox)

    def __selectedMailbox(self, result):
        allMessages = imap4.MessageSet(1, None) # a set of messages from
message number 1 to the end of the mailbox
        return self.fetchUID(allMessages, True).addCallback(self.__gotUIDs)
# fetch a list of UID

    def __gotUIDs(self, uidResults):
        self.messageUIDs = [result['UID'] for result in uidResults.values(
)]
        self.messageCount = len(self.messageUIDs)
        print "INFO: %i messages in %s." % (self.messageCount,
self.factory.mailbox)
        return self.fetchNextMessage( ) # start to download the message one
by one

    def fetchNextMessage(self):
        if self.messageUIDs:
            nextUID = self.messageUIDs.pop(0)
            messageListToAnalysis = imap4.MessageSet(nextUID) # creates a
MessageSet matching only that message's UID
            return self.fetchAll(messageListToAnalysis,
True).addCallback(self.__gotIndex)
            # fetchAll - fetching the UID, flags, size, date, envelope
            # UID keyword set to true to tell the server that the
MessageSet is referring to messages by UID, not sequence number
        else:
            return self.logout( ).addCallback(lambda _:
self.transport.loseConnection( ))

    def __gotIndex(self, indexResults):
        index = indexResults.values()
        index_details = index[0]

        UID = index_details['UID']
        flags = index_details['FLAGS']
        size = index_details['RFC822.SIZE']
        date = index_details['INTERNALDATE']
        envelope = index_details['ENVELOPE']

        title = envelope[1]
        sender = envelope[3]
        temp = []
        # replace None in the envelope as "Empty", because None is a key
word in python
        for element in sender[0]:
            if element != None:
                temp += [element]
            if element == None:
                temp += ["Empty"]
        sender = temp

        if flags == []:
            flags = ['\\Unseen']


        print "INFO: Downloading message %i of %i" %
(self.messageCount-len(self.messageUIDs), self.messageCount)
        messageListToFetch = imap4.MessageSet(UID)
        return self.fetchMessage(messageListToFetch,
True).addCallback(self.__gotMessage, UID)

    def __gotMessage(self, fetchResults, UID):
        messageData = fetchResults.values( )[0]['RFC822']
        self.factory.handleMessage(messageData, UID)
        return self.fetchNextMessage( ) # fetch next message

    def connectionLost(self, reason):
        if not self.factory.deferred.called:
            # connection was lost unexpectedly!
            self.factory.deferred.errback(reason)

class IMAPDownloadFactory(protocol.ClientFactory):
    protocol = IMAPDownloadProtocol

    def __init__(self, username, password, mailbox, path):
        self.username = username
        self.password = password
        self.mailbox = mailbox
        self.path = path
        self.deferred = defer.Deferred( )

    def handleMessage(self, messageData, UID):
        mailFile = os.path.join(path, UID)
        output = file(mailFile, 'w+b')
        parsedMessage = email.message_from_string(messageData)
        output.write(parsedMessage.as_string(unixfrom=True))

    def startedConnecting(self, connector):
        print "INFO: Connection start"

    def clientConnectionFailed(self, connection, reason):
        self.deferred.errback(reason)

    def clientConnectionLost(self, connection, reason):
        print "INFO: Connection stop"
        #connection.connect()

if __name__ == "__main__":
    from twisted.internet import glib2reactor
    glib2reactor.install()
    ################################################
    # I added the 2 lines here and made the program crash
    ################################################

    from twisted.internet import reactor
    import sys, getpass

    server = IMAPSERVER
    user = USERNAME
    mailbox = "Inbox"
    path = MAILPATH
    password = PASSWORD

    factory = IMAPDownloadFactory(user, password, mailbox, path)
    reactor.connectTCP(server, 143, factory)
    reactor.run( )

I am new to twisted, dbus even python, any helps will be appreciated.

Regards
Huisan

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From daedalus at eigenmagic.com  Wed Jan 16 00:18:19 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 16 Jan 2008 18:18:19 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200464918.478da4163459c@www-mail.usyd.edu.au>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
Message-ID: <1200467899.7626.27.camel@localhost>

On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:

> But when I was running my code, I got a error:
> 
> Traceback (most recent call last):
>   File "dbustwisted.py", line 5, in <module>
>     glib2reactor.install()
>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
> line 33, in install
>     return gtk2reactor.install(False)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
> line 270, in install
>     installReactor(reactor)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
> 24, in installReactor
>     "reactor already installed"
> AssertionError: reactor already installed

I suspect your problem may be here:

> if __name__ == "__main__":
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
>     ################################################
>     # I added the 2 lines here and made the program crash
>     ################################################
> 
>     from twisted.internet import reactor
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You've already imported glib2reactor, so you shouldn't import the
default reactor as well. Try removing this line.

-- 
Justin Warren <daedalus at eigenmagic.com>



From matt at pollenation.net  Wed Jan 16 04:17:59 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:17:59 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200467899.7626.27.camel@localhost>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
	<1200467899.7626.27.camel@localhost>
Message-ID: <478DE7E7.4010204@pollenation.net>

Justin Warren wrote:
> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
> 
>> But when I was running my code, I got a error:
>>
>> Traceback (most recent call last):
>>   File "dbustwisted.py", line 5, in <module>
>>     glib2reactor.install()
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>> line 33, in install
>>     return gtk2reactor.install(False)
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>> line 270, in install
>>     installReactor(reactor)
>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>> 24, in installReactor
>>     "reactor already installed"
>> AssertionError: reactor already installed
> 
> I suspect your problem may be here:
> 
>> if __name__ == "__main__":
>>     from twisted.internet import glib2reactor
>>     glib2reactor.install()
>>     ################################################
>>     # I added the 2 lines here and made the program crash
>>     ################################################
>>
>>     from twisted.internet import reactor
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 
> You've already imported glib2reactor, so you shouldn't import the
> default reactor as well. Try removing this line.

Actually, twisted.internet.reactor is quite magic. It is always the
installed reactor. However, if there is no reactor installed the first
time it is imported it will automatically install the default (select)
reactor.

I suspect that the real cause of the problem is that something is doing
a "from twisted.internet import reactor", causing the select reactor to
be installed, before the above code is getting the chance to install the
glib2reactor.

Looking at the code it must be a Twisted module that is the culprit.


- Matt


-- 
Matt Goodall
Technical Director, Pollenation Internet Ltd

Registered Number: 4382123
Registered Office: 237 Lidgett Lane, Leeds, West Yorkshire, LS17 6QR
A member of the Brunswick MCL Group of Companies

w: http://www.pollenation.net/
e: matt at pollenation.net
t: +44 (0) 113 2252500

This message may be confidential and the views expressed may not reflect
the views of my employers. Please read http://eudaimon-group.com/email
if you are uncertain what this means.



From matt at pollenation.net  Wed Jan 16 04:28:09 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:28:09 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DE7E7.4010204@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>
	<478DE7E7.4010204@pollenation.net>
Message-ID: <478DEA49.30906@pollenation.net>

Matt Goodall wrote:
> Justin Warren wrote:
>> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
>>
>>> But when I was running my code, I got a error:
>>>
>>> Traceback (most recent call last):
>>>   File "dbustwisted.py", line 5, in <module>
>>>     glib2reactor.install()
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>>> line 33, in install
>>>     return gtk2reactor.install(False)
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>>> line 270, in install
>>>     installReactor(reactor)
>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>>> 24, in installReactor
>>>     "reactor already installed"
>>> AssertionError: reactor already installed
>> I suspect your problem may be here:
>>
>>> if __name__ == "__main__":
>>>     from twisted.internet import glib2reactor
>>>     glib2reactor.install()
>>>     ################################################
>>>     # I added the 2 lines here and made the program crash
>>>     ################################################
>>>
>>>     from twisted.internet import reactor
>>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>
>> You've already imported glib2reactor, so you shouldn't import the
>> default reactor as well. Try removing this line.
> 
> Actually, twisted.internet.reactor is quite magic. It is always the
> installed reactor. However, if there is no reactor installed the first
> time it is imported it will automatically install the default (select)
> reactor.
> 
> I suspect that the real cause of the problem is that something is doing
> a "from twisted.internet import reactor", causing the select reactor to
> be installed, before the above code is getting the chance to install the
> glib2reactor.
> 
> Looking at the code it must be a Twisted module that is the culprit.

And the offending module is ... twisted.protocols.policies. Attached is
a patch (I'll submit it to Trac as a ticket, too.)


- Matt


-- 
Matt Goodall
Technical Director, Pollenation Internet Ltd

-------------- next part --------------
A non-text attachment was scrubbed...
Name: lazy-reactor-import.patch
Type: text/x-patch
Size: 1070 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080116/2f6ce7c4/attachment-0002.bin>

From matt at pollenation.net  Wed Jan 16 04:40:28 2008
From: matt at pollenation.net (Matt Goodall)
Date: Wed, 16 Jan 2008 11:40:28 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DEA49.30906@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>	<478DE7E7.4010204@pollenation.net>
	<478DEA49.30906@pollenation.net>
Message-ID: <478DED2C.8030709@pollenation.net>

Matt Goodall wrote:
> Matt Goodall wrote:
>> Justin Warren wrote:
>>> On Wed, 2008-01-16 at 17:28 +1100, hwan2265 at mail.usyd.edu.au wrote:
>>>
>>>> But when I was running my code, I got a error:
>>>>
>>>> Traceback (most recent call last):
>>>>   File "dbustwisted.py", line 5, in <module>
>>>>     glib2reactor.install()
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
>>>> line 33, in install
>>>>     return gtk2reactor.install(False)
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
>>>> line 270, in install
>>>>     installReactor(reactor)
>>>>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
>>>> 24, in installReactor
>>>>     "reactor already installed"
>>>> AssertionError: reactor already installed
>>> I suspect your problem may be here:
>>>
>>>> if __name__ == "__main__":
>>>>     from twisted.internet import glib2reactor
>>>>     glib2reactor.install()
>>>>     ################################################
>>>>     # I added the 2 lines here and made the program crash
>>>>     ################################################
>>>>
>>>>     from twisted.internet import reactor
>>>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>>>
>>> You've already imported glib2reactor, so you shouldn't import the
>>> default reactor as well. Try removing this line.
>> Actually, twisted.internet.reactor is quite magic. It is always the
>> installed reactor. However, if there is no reactor installed the first
>> time it is imported it will automatically install the default (select)
>> reactor.
>>
>> I suspect that the real cause of the problem is that something is doing
>> a "from twisted.internet import reactor", causing the select reactor to
>> be installed, before the above code is getting the chance to install the
>> glib2reactor.
>>
>> Looking at the code it must be a Twisted module that is the culprit.
> 
> And the offending module is ... twisted.protocols.policies. Attached is
> a patch (I'll submit it to Trac as a ticket, too.)


Grepping the Twisted code suggests this is a "problem" that is not
really worth trying to fix fully. It's probably best to just avoid the
problem by making sure you get to install your choice of reactor before
anything else.

Of course, if you use the twistd daemon installing a specific reactor at
the correct time is easy, by using the --reactor flag.


- Matt




From buz at netbuz.org  Wed Jan 16 06:01:21 2008
From: buz at netbuz.org (Bastian Winkler)
Date: Wed, 16 Jan 2008 14:01:21 +0100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <1200464918.478da4163459c@www-mail.usyd.edu.au>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>
Message-ID: <20080116130121.GA24395@succubus.netbuz.org>

hi,

you have to install glib2reactor before importing any other modules to
prevent them from importing the default reactor (which is the
SelectReactor on linux)

so simply put

from twisted.internet import glib2reactor
glib2reactor.install()

on top of your script/module and it should work as expected

:wq buz

On Wed, Jan 16, 2008 at 05:28:38PM +1100, hwan2265 at mail.usyd.edu.au wrote:
> Hello everyone,
> 
> I am trying to write a imap mail fetcher base on twisted and dbus. I have
> written a simple fetcher without dbus functionality and it's working fine.
> However I got a problem while adding dbus.
> 
> http://twistedmatrix.com/trac/ticket/1352 is the only article about how can
> twisted and dbus work together that I could get from google and I just
> followed its suggestion and added
> 
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
> 
> to my code.
> 
> As what I read from twisted API
> http://twistedmatrix.com/documents/current/api/twisted.internet.glib2reactor.html
> "In order to use this support, simply do the following:
> 
>    |  from twisted.internet import glib2reactor
>    |  glib2reactor.install()
> 
> Then use twisted.internet APIs as usual. "
> I thought everything will be fine.
> 
> But when I was running my code, I got a error:
> 
> Traceback (most recent call last):
>   File "dbustwisted.py", line 5, in <module>
>     glib2reactor.install()
>   File "/usr/lib/python2.5/site-packages/twisted/internet/glib2reactor.py",
> line 33, in install
>     return gtk2reactor.install(False)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/gtk2reactor.py",
> line 270, in install
>     installReactor(reactor)
>   File "/usr/lib/python2.5/site-packages/twisted/internet/main.py", line
> 24, in installReactor
>     "reactor already installed"
> AssertionError: reactor already installed
> 
> I don't know what's wrong with it.
> This is my code, I have not add the dbus part yet and just test the
> glib2reactor.
> 
> from twisted.mail import imap4
> from twisted.internet import protocol, defer
> import email, os, time
> 
> MAILPATH = "Mails"
> IMAPSERVER = "xxxxxxxxxxx"
> USERNAME = "xxxxx"
> PASSWORD = "xxxxx"
> 
> class IMAPDownloadProtocol(imap4.IMAP4Client):
> 
>     def serverGreeting(self, capabilities):
>         login = self.login(self.factory.username, self.factory.password)
>         login.addCallback(self.__loggedIn)
>         login.chainDeferred(self.factory.deferred) # any event that fires
> login will also fire factory.deferred
> 
>     def __loggedIn(self, result):
>         return
> self.select(self.factory.mailbox).addCallback(self.__selectedMailbox)
> 
>     def __selectedMailbox(self, result):
>         allMessages = imap4.MessageSet(1, None) # a set of messages from
> message number 1 to the end of the mailbox
>         return self.fetchUID(allMessages, True).addCallback(self.__gotUIDs)
> # fetch a list of UID
> 
>     def __gotUIDs(self, uidResults):
>         self.messageUIDs = [result['UID'] for result in uidResults.values(
> )]
>         self.messageCount = len(self.messageUIDs)
>         print "INFO: %i messages in %s." % (self.messageCount,
> self.factory.mailbox)
>         return self.fetchNextMessage( ) # start to download the message one
> by one
> 
>     def fetchNextMessage(self):
>         if self.messageUIDs:
>             nextUID = self.messageUIDs.pop(0)
>             messageListToAnalysis = imap4.MessageSet(nextUID) # creates a
> MessageSet matching only that message's UID
>             return self.fetchAll(messageListToAnalysis,
> True).addCallback(self.__gotIndex)
>             # fetchAll - fetching the UID, flags, size, date, envelope
>             # UID keyword set to true to tell the server that the
> MessageSet is referring to messages by UID, not sequence number
>         else:
>             return self.logout( ).addCallback(lambda _:
> self.transport.loseConnection( ))
> 
>     def __gotIndex(self, indexResults):
>         index = indexResults.values()
>         index_details = index[0]
> 
>         UID = index_details['UID']
>         flags = index_details['FLAGS']
>         size = index_details['RFC822.SIZE']
>         date = index_details['INTERNALDATE']
>         envelope = index_details['ENVELOPE']
> 
>         title = envelope[1]
>         sender = envelope[3]
>         temp = []
>         # replace None in the envelope as "Empty", because None is a key
> word in python
>         for element in sender[0]:
>             if element != None:
>                 temp += [element]
>             if element == None:
>                 temp += ["Empty"]
>         sender = temp
> 
>         if flags == []:
>             flags = ['\\Unseen']
> 
> 
>         print "INFO: Downloading message %i of %i" %
> (self.messageCount-len(self.messageUIDs), self.messageCount)
>         messageListToFetch = imap4.MessageSet(UID)
>         return self.fetchMessage(messageListToFetch,
> True).addCallback(self.__gotMessage, UID)
> 
>     def __gotMessage(self, fetchResults, UID):
>         messageData = fetchResults.values( )[0]['RFC822']
>         self.factory.handleMessage(messageData, UID)
>         return self.fetchNextMessage( ) # fetch next message
> 
>     def connectionLost(self, reason):
>         if not self.factory.deferred.called:
>             # connection was lost unexpectedly!
>             self.factory.deferred.errback(reason)
> 
> class IMAPDownloadFactory(protocol.ClientFactory):
>     protocol = IMAPDownloadProtocol
> 
>     def __init__(self, username, password, mailbox, path):
>         self.username = username
>         self.password = password
>         self.mailbox = mailbox
>         self.path = path
>         self.deferred = defer.Deferred( )
> 
>     def handleMessage(self, messageData, UID):
>         mailFile = os.path.join(path, UID)
>         output = file(mailFile, 'w+b')
>         parsedMessage = email.message_from_string(messageData)
>         output.write(parsedMessage.as_string(unixfrom=True))
> 
>     def startedConnecting(self, connector):
>         print "INFO: Connection start"
> 
>     def clientConnectionFailed(self, connection, reason):
>         self.deferred.errback(reason)
> 
>     def clientConnectionLost(self, connection, reason):
>         print "INFO: Connection stop"
>         #connection.connect()
> 
> if __name__ == "__main__":
>     from twisted.internet import glib2reactor
>     glib2reactor.install()
>     ################################################
>     # I added the 2 lines here and made the program crash
>     ################################################
> 
>     from twisted.internet import reactor
>     import sys, getpass
> 
>     server = IMAPSERVER
>     user = USERNAME
>     mailbox = "Inbox"
>     path = MAILPATH
>     password = PASSWORD
> 
>     factory = IMAPDownloadFactory(user, password, mailbox, path)
>     reactor.connectTCP(server, 143, factory)
>     reactor.run( )
> 
> I am new to twisted, dbus even python, any helps will be appreciated.
> 
> Regards
> Huisan
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python

-- 
If Bill Gates had a penny for every time Windows crashed......Oh wait, he does.

GnuPG Fingerprint: 2FFF FC48 C7DF 1EA0 00A0  FD53 8C35 FD2E 6908 7B82
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080116/eb320402/attachment.sig>

From Tjerk.Kusters at imtech.nl  Wed Jan 16 06:48:43 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Wed, 16 Jan 2008 14:48:43 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>


Hello,

I have build a webserver with Twisted 2.4 with imports of the following:

 from twisted.web import resource, static, server, twcgi
 from twisted.internet import reactor

I'm adding several mods as child to the root with:

 root = static.File(settings.getSetting("html_directory"))
 root.putChild(mods.getPath(), mods

The mods are classes like

 class module(resource.Resource):
   def render_GET(self, request):
      # do something

The reactor is started as:
 reactor.listenTCP(_port, server.Site(root))
 reactor.run( )

Some of the GET request in the mods can take some time to complete. In the
current situation other request to the server have to wait on this request.

Is it possible to make soms kind of a thread/connection pool so that more
then one request can be handled at the same time?

Regards,
Tjerk




From christian.simms at gmail.com  Wed Jan 16 08:48:30 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Wed, 16 Jan 2008 10:48:30 -0500
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>
References: <OF915206FA.F7F4BCF3-ONC12573D2.004BDF64-C12573D2.004BDF6D@imtechrelay.nl>
Message-ID: <cd8fa6f90801160748q46eb734dme20ce61c40b39590@mail.gmail.com>

On Jan 16, 2008 8:48 AM,  <Tjerk.Kusters at imtech.nl> wrote:
>
> Hello,
>
> I have build a webserver with Twisted 2.4 with imports of the following:
>
>  from twisted.web import resource, static, server, twcgi
>  from twisted.internet import reactor
>
> I'm adding several mods as child to the root with:
>
>  root = static.File(settings.getSetting("html_directory"))
>  root.putChild(mods.getPath(), mods
>
> The mods are classes like
>
>  class module(resource.Resource):
>    def render_GET(self, request):
>       # do something
>
> The reactor is started as:
>  reactor.listenTCP(_port, server.Site(root))
>  reactor.run( )
>
> Some of the GET request in the mods can take some time to complete. In the
> current situation other request to the server have to wait on this request.
>
> Is it possible to make soms kind of a thread/connection pool so that more
> then one request can be handled at the same time?
>
> Regards,
> Tjerk
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

Yes it is possible to use a thread pool, in fact twisted comes with
one. However, how you use it depends on what is taking so long for
you:

- if it's database calls then consider using twisted.enterprise.adbapi
- http://twistedmatrix.com/projects/core/documentation/howto/enterprise.html

- if it's python code taking so long then consider breaking your code
into shorter snippets that yield control back to twisted periodically
so that other requests don't get ignored

- if it's network code then make sure you're using Deferred's properly
- http://twistedmatrix.com/projects/core/documentation/howto/defer.html

Hope that helps.

Cheers,
Christian



From hwan2265 at mail.usyd.edu.au  Wed Jan 16 16:45:06 2008
From: hwan2265 at mail.usyd.edu.au (hwan2265 at mail.usyd.edu.au)
Date: Thu, 17 Jan 2008 10:45:06 +1100
Subject: [Twisted-Python] How can I make twisted and dbus work together?
Message-ID: <1200527106.478e97021af7f@www-mail.usyd.edu.au>

Hi,

I just put

from twisted.internet import glib2reactor
glib2reactor.install()

on top of my script as Bastian's suggestion and it finally works.

Thank you all
-Huisan

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From Tjerk.Kusters at imtech.nl  Thu Jan 17 00:50:55 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 08:50:55 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>

>> I have build a webserver with Twisted 2.4 with imports of the following:
>>
>>  from twisted.web import resource, static, server, twcgi
>>  from twisted.internet import reactor
>>
>> I'm adding several mods as child to the root with:
>>
>>  root = static.File(settings.getSetting("html_directory"))
>>  root.putChild(mods.getPath(), mods
>>
>> The mods are classes like
>>
>>  class module(resource.Resource):
>>    def render_GET(self, request):
>>       # do something
>>
>> The reactor is started as:
>>  reactor.listenTCP(_port, server.Site(root))
>>  reactor.run( )
>>
>> Some of the GET request in the mods can take some time to complete. In
the
>> current situation other request to the server have to wait on this
request.
>>
>> Is it possible to make soms kind of a thread/connection pool so that
more
>> then one request can be handled at the same time?
>>
>> Regards,
>> Tjerk
>>
>>
>> _______________________________________________
>> Twisted-Python mailing list
>> Twisted-Python at twistedmatrix.com
>> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>>
>
>Yes it is possible to use a thread pool, in fact twisted comes with
>one. However, how you use it depends on what is taking so long for
>you:
>
>- if it's database calls then consider using twisted.enterprise.adbapi
>-
http://twistedmatrix.com/projects/core/documentation/howto/enterprise.html
>
>- if it's python code taking so long then consider breaking your code
>into shorter snippets that yield control back to twisted periodically
>so that other requests don't get ignored
>
>- if it's network code then make sure you're using Deferred's properly
>- http://twistedmatrix.com/projects/core/documentation/howto/defer.html

The call can take some time because I have to wait on a response from a
CORBA call.

I have looked at deferred's, but can not see how this can be used to solve
the problem. The render_GET(self, request) can only return when there is an
answer.

Is there a way to make twisted web to handle multi connections at the same
time?

Regards,
Tjerk









From therve at free.fr  Thu Jan 17 01:35:32 2008
From: therve at free.fr (Thomas =?iso-8859-1?b?SGVyduk=?=)
Date: Thu, 17 Jan 2008 09:35:32 +0100
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>
References: <OF494D2700.C4E316CE-ONC12573D3.002B1D6E-C12573D3.002B1D70@imtechrelay.nl>
Message-ID: <20080117093532.4lsxlev34k8kcwcg@wasabox.wasabout.net>

Quoting Tjerk.Kusters at imtech.nl:


> The call can take some time because I have to wait on a response from a
> CORBA call.
>
> I have looked at deferred's, but can not see how this can be used to solve
> the problem. The render_GET(self, request) can only return when there is an
> answer.
>
> Is there a way to make twisted web to handle multi connections at the same
> time?

You're misunderstanding something. twisted.web can handle multiple  
connections without problems. I think your problem is that you're  
making a blocking call (CORBA) inside the reactor loop, which prevents  
other connections to happen. If you don't manage to find an  
asynchronous CORBA client, you should do the call inside a thread,  
using reactor.callInThread for example.

However, it would be easier to help you with an example of your code  
or a more detailed description of your problem.

-- 
Thomas




From Tjerk.Kusters at imtech.nl  Thu Jan 17 02:42:34 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 10:42:34 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF885B72D8.DAA674DF-ONC12573D3.003555F7-C12573D3.003555FA@imtechrelay.nl>

>making a blocking call (CORBA) inside the reactor loop, which prevents
>other connections to happen. If you don't manage to find an
>asynchronous CORBA client, you should do the call inside a thread,
>using reactor.callInThread for example.
>
>However, it would be easier to help you with an example of your code
>or a more detailed description of your problem.

I have create a small example program to show my problem.

from twisted.web import resource, static, server
from twisted.internet import reactor
import datetime, time

class module_1(resource.Resource):
    def render_GET(self, request):
        request.write("module 1<br>")
        request.write(datetime.datetime.today().strftime("%Y-%m-%dT%H:%M:%S"))

        return ""

def doWork():
    # perform call which can take some seconds to return
    time.sleep(10)
    return "ready"

class module_2(resource.Resource):
    def render_GET(self, request):
        request.write("module 2<br>")
        request.write(doWork())
        return ""

root = static.File("d:/www")
root.putChild("module1", module_1())
root.putChild("module2", module_2())
reactor.listenTCP(8900, server.Site(root))
print "Reactor run"
reactor.run( )


When I do request http://localhost:8900/module2
an other request to http://localhost:8900/module1 has to wait on the first
one to finish.

So the doWork is blocking the reactor and I should perform the work in a
thread. But my question is then: how can I perform the render_GET of
module_2 in a thread and still return the answer back to the webpage?

Hope this gives enough details on the situation.

Regards,
Tjerk








From m.beniamino at people.it  Thu Jan 17 02:55:53 2008
From: m.beniamino at people.it (Matteo Beniamino)
Date: Thu, 17 Jan 2008 10:55:53 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
Message-ID: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>

I'm trying to parse messages coming from some serial ports and TCP/IP
connections using a protocol derived from a basic.LineReceiver .
Everything works fine. Now I'd like to detect when a client is not
sending data for a certain amount of time and add a callback to handle
this situation, but I don't know how to achieve this. Does anyone know
if  there is something I can do at Factory or Protocol level? There is
no problem in changing the LineReceiver approach with something
different.

Thank you for your help,
-- 
  M. Beniamino



From amauryfa at gmail.com  Thu Jan 17 04:07:52 2008
From: amauryfa at gmail.com (Amaury Forgeot d'Arc)
Date: Thu, 17 Jan 2008 12:07:52 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
In-Reply-To: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
References: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
Message-ID: <e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>

Hello,

Matteo Beniamino wrote:
> I'm trying to parse messages coming from some serial ports and TCP/IP
> connections using a protocol derived from a basic.LineReceiver .
> Everything works fine. Now I'd like to detect when a client is not
> sending data for a certain amount of time and add a callback to handle
> this situation, but I don't know how to achieve this. Does anyone know
> if  there is something I can do at Factory or Protocol level? There is
> no problem in changing the LineReceiver approach with something
> different.

You may use the protocol.policies.TimeoutMixin class.
See the code of protocols/ftp.py to see a usage of it.

Your protocol must implement the timeoutConnection() method,
which is called if your code does not call resetTimeout() often enough.
Then, just call it at the beginning of lineReceived!

-- 
Amaury Forgeot d'Arc



From exarkun at divmod.com  Thu Jan 17 04:17:52 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Jan 2008 06:17:52 -0500
Subject: [Twisted-Python] connection pool
In-Reply-To: <OF885B72D8.DAA674DF-ONC12573D3.003555F7-C12573D3.003555FA@imtechrelay.nl>
Message-ID: <20080117111752.31425.1787216718.divmod.quotient.5888@ohm>

On Thu, 17 Jan 2008 10:42:34 +0100, tjerk.kusters at imtech.nl wrote:
>>making a blocking call (CORBA) inside the reactor loop, which prevents
>>other connections to happen. If you don't manage to find an
>>asynchronous CORBA client, you should do the call inside a thread,
>>using reactor.callInThread for example.
>>
>>However, it would be easier to help you with an example of your code
>>or a more detailed description of your problem.
>
>I have create a small example program to show my problem.
>
> [snip]
>
>class module_2(resource.Resource):
>    def render_GET(self, request):
>        request.write("module 2<br>")
>        request.write(doWork())
>        return ""
>

At some point (perhaps the next version of Twisted, perhaps not), render_GET
will support Deferreds so this will get easier.  However, until then, you
can still have asynchronous render_GET implementations.  You just have to
use NOT_DONE_YET.

For example,

  from twisted.web.resource import NOT_DONE_YET, Resource
  from twisted.internet.defer import Deferred
  from twisted.internet import reactor

  class SlowResource(Resource):
      def render_GET(self, request):
          d = Deferred()
          def finishedSlowThing(result):
              request.write(result)
              request.finish()
          reactor.callLater(3, d.callback, "the result")
          return NOT_DONE_YET


Hope this helps,

Jean-Paul



From Tjerk.Kusters at imtech.nl  Thu Jan 17 06:44:49 2008
From: Tjerk.Kusters at imtech.nl (Tjerk.Kusters at imtech.nl)
Date: Thu, 17 Jan 2008 14:44:49 +0100
Subject: [Twisted-Python] connection pool
Message-ID: <OF9134A0BC.6A07BA55-ONC12573D3.004B83A7-C12573D3.004B83AF@imtechrelay.nl>

>will support Deferreds so this will get easier.  However, until then, you
>can still have asynchronous render_GET implementations.  You just have to
>use NOT_DONE_YET.

I have made some changes to my test code and it works. A request to
module_1 is possible will there is a request to moduleSlow2.
Multiple calls to moduleSlow2 have to wait until the other one finishes.
But calling module_1 still works. Should be oke for my webapplication.

changed it to:

from twisted.web import resource, static, server
from twisted.web.server import NOT_DONE_YET
from twisted.internet import reactor
from twisted.internet.defer import Deferred
from twisted.internet.threads import deferToThread
import datetime, time

def tijd():
    return datetime.datetime.today().strftime("%Y-%m-%dT%H:%M:%S")

class module_1(resource.Resource):
    def render_GET(self, request):
        request.write(tijd())
        return ""

class moduleSlow2(resource.Resource):

    def render_GET(self, request):
        d = deferToThread(self.answer, request)
        d.addCallback(request.write)
        d.addCallback(lambda _: request.finish())
        return NOT_DONE_YET

    def answer(self, request):
        time.sleep(10)
        return "finished %s" % tijd()

root = static.File("d:/www")
root.putChild("module1", module_1())
root.putChild("slow2", moduleSlow2())
reactor.listenTCP(8900, server.Site(root))
print "Reactor run"
reactor.run( )



Regars,
Tjerk




From m.beniamino at people.it  Thu Jan 17 09:23:30 2008
From: m.beniamino at people.it (Matteo Beniamino)
Date: Thu, 17 Jan 2008 17:23:30 +0100
Subject: [Twisted-Python] Detect idle in a LineReceiver
In-Reply-To: <e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>
References: <fcd2fb690801170155h4f672864if7468fb8284d44ee@mail.gmail.com>
	<e27efe130801170307h366d46c9m9ce4eff18effecb@mail.gmail.com>
Message-ID: <fcd2fb690801170823t573e37c3k9cbae1da10ddb9e9@mail.gmail.com>

2008/1/17, Amaury Forgeot d'Arc <amauryfa at gmail.com>:
> You may use the protocol.policies.TimeoutMixin class.

It works perfectly. Thank you for your help.

-- 
  M.Beniamino



From ematus at gmail.com  Thu Jan 17 14:09:35 2008
From: ematus at gmail.com (Eduardo Matus)
Date: Thu, 17 Jan 2008 18:09:35 -0300
Subject: [Twisted-Python] callLater
Message-ID: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>

hey all....

is there a way to add tasks  and then run the timer in callLater from the
reactor class??
like sched module in python...

because if I want to call 2 different functions at the "same" time..

reactor.callLater(3,f)
reactor.callLater(3,g)

the 'g' function will be called 'n' seconds after the 'f' method....

thks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080117/3ca94e17/attachment.html>

From radix at twistedmatrix.com  Thu Jan 17 14:33:10 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 17 Jan 2008 16:33:10 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
Message-ID: <60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>

On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:
> hey all....
>
> is there a way to add tasks  and then run the timer in callLater from the
> reactor class??
> like sched module in python...
>
> because if I want to call 2 different functions at the "same" time..
>
> reactor.callLater(3,f)
> reactor.callLater(3,g)
>
> the 'g' function will be called 'n' seconds after the 'f' method....

No it won't. They'll both be called at (almost) the same time. If
you're actually seeing g being called 3 seconds after f, there's
probably something else wrong in your application. Please post a
minimal complete example showing your problem.

-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From drew.smathers at gmail.com  Thu Jan 17 14:42:34 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Jan 2008 16:42:34 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
Message-ID: <368574aa0801171342h491e74d6x8bcd8331411d0e06@mail.gmail.com>

On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:

>
> because if I want to call 2 different functions at the "same" time..
>
> reactor.callLater(3,f)
> reactor.callLater(3,g)
>
> the 'g' function will be called 'n' seconds after the 'f' method....


f and g will both get called ~3 seconds after the call to callLater - the
order in which they get called should be considered arbitrary.  What do you
mean by g will be called N seconds after f?

If you're tying to implement cron-like functionality this easy enough (at
least if persistency is not a concern) with simple time calculations and
your own code which uses callLater.


>
>
> thks
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080117/92bcb5bc/attachment.html>

From ematus at gmail.com  Thu Jan 17 14:54:54 2008
From: ematus at gmail.com (Eduardo Matus)
Date: Thu, 17 Jan 2008 18:54:54 -0300
Subject: [Twisted-Python] callLater
In-Reply-To: <60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
Message-ID: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>

hey.. the code is to.... dirty.. but look this...

reactor.callLater(3,f)

for x in range(100000000000000): # for example... a big time-consumption
       #do something
reactor.callLater(3,g)

the 'g' method will not start at the same time of 'f'


the python sched module, in this same example is like this

s = sched..... bla..bla..

s.enter(3,1,f,())
for x in range(100000000000000): # for example... a big time-consumption
       #do something
s.enter(3,1,g,())

s.run()

in this case... 'f' and 'g' will be called at the "same" time..

thks.


On Jan 17, 2008 6:33 PM, Christopher Armstrong <radix at twistedmatrix.com>
wrote:

> On Jan 17, 2008 4:09 PM, Eduardo Matus <ematus at gmail.com> wrote:
> > hey all....
> >
> > is there a way to add tasks  and then run the timer in callLater from
> the
> > reactor class??
> > like sched module in python...
> >
> > because if I want to call 2 different functions at the "same" time..
> >
> > reactor.callLater(3,f)
> > reactor.callLater(3,g)
> >
> > the 'g' function will be called 'n' seconds after the 'f' method....
>
> No it won't. They'll both be called at (almost) the same time. If
> you're actually seeing g being called 3 seconds after f, there's
> probably something else wrong in your application. Please post a
> minimal complete example showing your problem.
>
> --
> Christopher Armstrong
> International Man of Twistery
> http://radix.twistedmatrix.com/
> http://twistedmatrix.com/
> http://canonical.com/
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080117/8a29a50b/attachment.html>

From radix at twistedmatrix.com  Thu Jan 17 15:07:35 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 17 Jan 2008 17:07:35 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
	<984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <60ed19d40801171407s991fb10xc721b93487995228@mail.gmail.com>

On Jan 17, 2008 4:54 PM, Eduardo Matus <ematus at gmail.com> wrote:
> hey.. the code is to.... dirty.. but look this...
>
> reactor.callLater(3,f)
>
> for x in range(100000000000000): # for example... a big time-consumption
>        #do something
> reactor.callLater(3,g)
>
> the 'g' method will not start at the same time of 'f'

Twisted is an asynchronous framework. Your code needs to not block for
long times in order for it to function properly, so don't block for a
long time in 'f' and everything will be fine.

If you really need to run some blocking function, maybe you want to
use a thread, in which case something like
twisted.internet.threads.deferToThread is desirable.


-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From exarkun at divmod.com  Thu Jan 17 15:08:20 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 17 Jan 2008 17:08:20 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <20080117220820.31425.1202006711.divmod.quotient.6120@ohm>

On Thu, 17 Jan 2008 18:54:54 -0300, Eduardo Matus <ematus at gmail.com> wrote:
>hey.. the code is to.... dirty.. but look this...
>
>reactor.callLater(3,f)
>
>for x in range(100000000000000): # for example... a big time-consumption
>       #do something
>reactor.callLater(3,g)
>
>the 'g' method will not start at the same time of 'f'
>

Quite so.  Also, network events will go unserviced.  Generally
speaking, you should not do "big time-consuming" things in the
reactor thread.

However, if that is not otherwise a problem for your application,
then you can achieve the goal like this:

    for x in range(1 * 10 ** 14):
        # do something
    reactor.callLater(3, f)
    reactor.callLater(3, g)

You could also put both of the callLater calls before the loop.

There's no API which lets you say "call f 3 seconds from when I
say go... go!"  callLater means "3 seconds from now" (ignoring clock
adjustment issues).

Jean-Paul



From drew.smathers at gmail.com  Thu Jan 17 15:11:22 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Thu, 17 Jan 2008 17:11:22 -0500
Subject: [Twisted-Python] callLater
In-Reply-To: <984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
References: <984ad6a0801171309o33cac33and3b32a471cb4fada@mail.gmail.com>
	<60ed19d40801171333g68d8d3bdt2525b1b6757b955b@mail.gmail.com>
	<984ad6a0801171354x3e6c4fdfh803ae2210ec2242d@mail.gmail.com>
Message-ID: <368574aa0801171411g382b7912u6d0208d7dd08871a@mail.gmail.com>

On Jan 17, 2008 4:54 PM, Eduardo Matus <ematus at gmail.com> wrote:

> hey.. the code is to.... dirty.. but look this...
>
> reactor.callLater(3,f)
>
> for x in range(100000000000000): # for example... a big time-consumption
>        #do something
> reactor.callLater(3,g)
>
> the 'g' method will not start at the same time of 'f'
>


You would want to schedule your calls before doing CPU-intensive work.  And
you don't want to do CPU-intensive work in the same thread as the reactor
anyways because this is equivalent to blocking.  Consider putting whatever
takes a lot of time in a separate process or a in a thread pool via
deferToThread.

-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080117/f0501791/attachment.html>

From bnsmith at gmail.com  Fri Jan 18 14:23:24 2008
From: bnsmith at gmail.com (Brad Smith)
Date: Fri, 18 Jan 2008 16:23:24 -0500
Subject: [Twisted-Python] Newbie question about error handling.
Message-ID: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>

I'm working on a client/server twisted app based on LineReceiver, and
I'd like to implement better error-handling. The code for the server
looks something like this:

class MyServer(LineReceiver):
    def lineReceived(self, line):
        pass # stuff happens

    def rawDataReceived(self, data):
        pass # other stuff happens

    # maybe some other methods too

factory = Factory()
factory.protocol = MyServer

reactor.listenTCP(8000, factory)
reactor.run()

Suppose that an exception is thrown in lineReceived or
rawDataReceived, maybe just something as simple as a naming error
caused by a misspelled variable name. Is there any way to implement a
default exception handler that would allow me to send something back
to the client before the protocol dies? It would be nice to send the
exception traceback to the client to help figure out what went wrong.
I suppose I could wrap all of the methods in the class in a try/catch
block, but that would be a lot of wrapping to do. I'd prefer to be
able to do something like adding a 'defaultExceptionHandler' method to
the LineReceiver derived class that would be called by the reactor.

Is something like this possible? I'm still pretty new to Twisted, so I
don't know all the idioms yet.



From drew.smathers at gmail.com  Fri Jan 18 16:03:39 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Fri, 18 Jan 2008 18:03:39 -0500
Subject: [Twisted-Python] Newbie question about error handling.
In-Reply-To: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
References: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
Message-ID: <368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>

On Jan 18, 2008 4:23 PM, Brad Smith <bnsmith at gmail.com> wrote:

> Suppose that an exception is thrown in lineReceived or
> rawDataReceived, maybe just something as simple as a naming error
> caused by a misspelled variable name. Is there any way to implement a
> default exception handler that would allow me to send something back
> to the client before the protocol dies? It would be nice to send the
> exception traceback to the client to help figure out what went wrong.
> I suppose I could wrap all of the methods in the class in a try/catch
> block, but that would be a lot of wrapping to do. I'd prefer to be
> able to do something like adding a 'defaultExceptionHandler' method to
> the LineReceiver derived class that would be called by the reactor.
>

It will save you more time to fix such a critical bug as a naming error
rather than build a protocol to only tell the client the server is broken.
However to answer your question, no.

Remember from the Zen of Python: "explicit is better than implicit" so to
handle legitimate errors you should define what exceptions are likely to
occur and incorporate these in your protocol design for error feedback to
the client.  If you want some kill-all exception handler for all your
protocols, consider writing a decorator:

@sendTraceback
def lineReceived(self, line):
    pass # do stuff


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080118/f200a265/attachment.html>

From k_r_a_j_kumar at yahoo.co.in  Sat Jan 19 06:38:01 2008
From: k_r_a_j_kumar at yahoo.co.in (Raj kumar)
Date: Sat, 19 Jan 2008 19:08:01 +0530 (IST)
Subject: [Twisted-Python] read all the elements of xml file
Message-ID: <265669.9440.qm@web8707.mail.in.yahoo.com>

Hi,

 I am using following code

 

----------------------------------------------------------------------------------------  

    content = microdom.parse(xmlfile)

    allnodes = content.getElementsByTagName("*")

    

    for eachnode in allnodes

        print "each node %s"  % eachnode

---------------------------------------------------------------------------------------



But getElement("*") is not working... which I used to get all the
element but it is not working. If i give any tagname then it is working.

how to get all the elemets with single statement. Because i have
different elements in that xml file. Is there any other way to get all
the elements? 

Am i doing anything wrong in that?



Thank you in advance.





      Get the freedom to save as many mails as you wish. To know how, go to http://help.yahoo.com/l/in/yahoo/mail/yahoomail/tools/tools-08.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080119/00e73799/attachment.html>

From sipickles at hotmail.com  Sat Jan 19 06:41:40 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 19 Jan 2008 13:41:40 +0000
Subject: [Twisted-Python] Closing connections properly
Message-ID: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>

Hi,

Having a simple server based on a LineReceiver, what is the proper way 
to close connections and delete the class containing those connections 
(the class built by BuildProtocol()).

Given the simple code below, Protocol.BuildProtocol is called when I 
client connections, and builds and instance of the class Connection. 
When the client disconnects, Connection.connectionLost is called, but 
the instance continues (__del__ is never called). I even naively tried 
added a 'del self' statement to the connectionLost method, but its not 
c++ 'delete this'!

How should I delete the closed connection? Is there something in twisted 
I can overload, or should I use the server to track connections better 
and perform my deleting there?

Thanks

Simon

Example
--------------

class Connection(basic.LineReceiver):
    def __init__(self):
        self.ipAddress = "000.000.000.000"
        self.port = 0
        logger.CON("Opening new connection")

    def __del__(self): # never called
        logger.CON("Closed connection to %s:%d" % (self.ipAddress, 
self.port))

       
    def connectionMade(self):
        """ Overrides method in basic.LineReceiver """
        self.ipAddress = self.transport.getPeer().host
        self.port = self.transport.getPeer().port
        logger.CON("Log in attempt from %s:%d" % (self.ipAddress, 
self.port))
 
    def connectionLost(self, reason):
        """ Overrides method in basic.LineReceiver """
        logger.CON("%s:%d has closed the connection, %s" % 
(self.ipAddress, self.port, reason))
        self.transport.loseConnection()

    def dataReceived(self, data):
        """ Overrides method in basic.LineReceiver """
        logger.CON("%s:%d received %s" % (self.ipAddress, self.port, data))
 

class Server(Protocol):
    factory = Factory()
    factory.protocol = Connection
    def __init__(self, maxClients):
        self.max_clients = maxClients
        logger.NET("Server started")

    def doStart(self):
        logger.NET("Port: %d" % globalVars.zoneAddress[1])
        logger.NET("...... waiting for a connection ......")
    def doStop(self):
        logger.NET("Server is now closed")

    def buildProtocol(self, addr):
        logger.NET("Connection attempt....")
        return Connection()



-- 
Linux user #458601 - http://counter.li.org.






From christian.simms at gmail.com  Sat Jan 19 07:41:58 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Sat, 19 Jan 2008 09:41:58 -0500
Subject: [Twisted-Python] Closing connections properly
In-Reply-To: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>
References: <BAY114-DAV7B68CB11B72FB9703A8C0BE430@phx.gbl>
Message-ID: <cd8fa6f90801190641w3e4b78c3kcc87e8d205c984fc@mail.gmail.com>

On Jan 19, 2008 8:41 AM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hi,
>
> Having a simple server based on a LineReceiver, what is the proper way
> to close connections and delete the class containing those connections
> (the class built by BuildProtocol()).
>
> Given the simple code below, Protocol.BuildProtocol is called when I
> client connections, and builds and instance of the class Connection.
> When the client disconnects, Connection.connectionLost is called, but
> the instance continues (__del__ is never called). I even naively tried
> added a 'del self' statement to the connectionLost method, but its not
> c++ 'delete this'!
>
> How should I delete the closed connection? Is there something in twisted
> I can overload, or should I use the server to track connections better
> and perform my deleting there?
>
> Thanks
>
> Simon
>
> Example
> --------------
>
> class Connection(basic.LineReceiver):
>     def __init__(self):
>         self.ipAddress = "000.000.000.000"
>         self.port = 0
>         logger.CON("Opening new connection")
>
>     def __del__(self): # never called
>         logger.CON("Closed connection to %s:%d" % (self.ipAddress,
> self.port))
>
>
>     def connectionMade(self):
>         """ Overrides method in basic.LineReceiver """
>         self.ipAddress = self.transport.getPeer().host
>         self.port = self.transport.getPeer().port
>         logger.CON("Log in attempt from %s:%d" % (self.ipAddress,
> self.port))
>
>     def connectionLost(self, reason):
>         """ Overrides method in basic.LineReceiver """
>         logger.CON("%s:%d has closed the connection, %s" %
> (self.ipAddress, self.port, reason))
>         self.transport.loseConnection()
>
>     def dataReceived(self, data):
>         """ Overrides method in basic.LineReceiver """
>         logger.CON("%s:%d received %s" % (self.ipAddress, self.port, data))
>
>
> class Server(Protocol):
>     factory = Factory()
>     factory.protocol = Connection
>     def __init__(self, maxClients):
>         self.max_clients = maxClients
>         logger.NET("Server started")
>
>     def doStart(self):
>         logger.NET("Port: %d" % globalVars.zoneAddress[1])
>         logger.NET("...... waiting for a connection ......")
>     def doStop(self):
>         logger.NET("Server is now closed")
>
>     def buildProtocol(self, addr):
>         logger.NET("Connection attempt....")
>         return Connection()
>
>
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>

You should not rely on Python's garbage collector to track your open
connections, since you don't how long the garbage collector will wait
until it deletes your object. Instead, you should just track your own
list of connections in the Factory object.

Cheers,
Christian



From christian.simms at gmail.com  Sat Jan 19 07:49:57 2008
From: christian.simms at gmail.com (Christian Simms)
Date: Sat, 19 Jan 2008 09:49:57 -0500
Subject: [Twisted-Python] read all the elements of xml file
In-Reply-To: <265669.9440.qm@web8707.mail.in.yahoo.com>
References: <265669.9440.qm@web8707.mail.in.yahoo.com>
Message-ID: <cd8fa6f90801190649y510fcc0fw88bbbbef2bf1746c@mail.gmail.com>

On Jan 19, 2008 8:38 AM, Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>
>
> Hi,
>   I am using following code
>
>
> ----------------------------------------------------------------------------------------
>      content = microdom.parse(xmlfile)
>      allnodes = content.getElementsByTagName("*")
>
>      for eachnode in allnodes
>          print "each node %s"  % eachnode
>
> ---------------------------------------------------------------------------------------
>
>  But getElement("*") is not working... which I used to get all the element
> but it is not working. If i give any tagname then it is working.
>  how to get all the elemets with single statement. Because i have different
> elements in that xml file. Is there any other way to get all the elements?
>  Am i doing anything wrong in that?
>
>  Thank you in advance.
>  ________________________________
>  5, 50, 500, 5000 - Store N number of mails in your inbox. Click here.
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>

Your code doesn't work because microdom is a simple API and doesn't
have all the bells and whistles of complex DOM implementations.  That
being said, I like it and use it.  In fact, the code is simple enough
you can just look at it to see what functions are available - just
look at twisted/web/microdom.py and twisted/web/domhelpers.py.
Anyway, for your example you can do:

   from twisted.web import domhelpers
   allnodes = domhelpers.findElements(content, lambda n: True)

The second parameter is a function to filter matching elements, in
this case the lambda function is returning all elements.

Cheers,
Christian



From exarkun at divmod.com  Sat Jan 19 09:34:13 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 19 Jan 2008 11:34:13 -0500
Subject: [Twisted-Python] read all the elements of xml file
In-Reply-To: <265669.9440.qm@web8707.mail.in.yahoo.com>
Message-ID: <20080119163413.15391.917215133.divmod.quotient.178@ohm>

On Sat, 19 Jan 2008 19:08:01 +0530 (IST), Raj kumar <k_r_a_j_kumar at yahoo.co.in> wrote:
>Hi,
>
> I am using following code
>----------------------------------------------------------------------------------------
>
>    content = microdom.parse(xmlfile)
>
>    allnodes = content.getElementsByTagName("*")
>
>
>
>    for eachnode in allnodes
>
>        print "each node %s"  % eachnode
>

I strongly recommend using a different XML library, such as xml.dom.minidom.
twisted.web.microdom will fail to perform many of the tasks you would expect
from a general purpose DOM library.

Jean-Paul



From bnsmith at gmail.com  Sat Jan 19 11:56:26 2008
From: bnsmith at gmail.com (Brad Smith)
Date: Sat, 19 Jan 2008 13:56:26 -0500
Subject: [Twisted-Python] Newbie question about error handling.
In-Reply-To: <368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>
References: <dd0fcc680801181323n73589d33kab02ec1ed9272083@mail.gmail.com>
	<368574aa0801181503s78f1414bxbcf3d134144e92a4@mail.gmail.com>
Message-ID: <dd0fcc680801191056p3cf1490bq9e74a8113261ccc3@mail.gmail.com>

You've given me two really good ideas to mull over. Of course, the
decorator method would work. It was like a flash of light as soon as I
read it... but now I'm not sure if I should...

Thanks for the help.

On Jan 18, 2008 6:03 PM, Drew Smathers <drew.smathers at gmail.com> wrote:
> On Jan 18, 2008 4:23 PM, Brad Smith <bnsmith at gmail.com> wrote:
>
> > Suppose that an exception is thrown in lineReceived or
> > rawDataReceived, maybe just something as simple as a naming error
> > caused by a misspelled variable name. Is there any way to implement a
> > default exception handler that would allow me to send something back
> > to the client before the protocol dies? It would be nice to send the
> > exception traceback to the client to help figure out what went wrong.
> > I suppose I could wrap all of the methods in the class in a try/catch
> > block, but that would be a lot of wrapping to do. I'd prefer to be
> > able to do something like adding a 'defaultExceptionHandler' method to
> > the LineReceiver derived class that would be called by the reactor.
> >
>
> It will save you more time to fix such a critical bug as a naming error
> rather than build a protocol to only tell the client the server is broken.
> However to answer your question, no.
>
> Remember from the Zen of Python: "explicit is better than implicit" so to
> handle legitimate errors you should define what exceptions are likely to
> occur and incorporate these in your protocol design for error feedback to
> the client.  If you want some kill-all exception handler for all your
> protocols, consider writing a decorator:
>
> @sendTraceback
> def lineReceived(self, line):
>     pass # do stuff
>
>
> --
> \\\\\/\"/\\\\\\\\\\\
> \\\\/ // //\/\\\\\\\
> \\\/  \\// /\ \/\\\\
> \\/ /\/ / /\/ /\ \\\
> \/ / /\/ /\  /\\\ \\
> / /\\\  /\\\ \\\\\/\
> \/\\\\\/\\\\\/\\\\\\
>                d.p.s
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>



From exarkun at twistedmatrix.com  Sat Jan 19 22:05:07 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 20 Jan 2008 05:05:07 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1200805507.72.974020360@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080120/f1317232/attachment.html>

From xavier at sydesy.com  Mon Jan 21 08:53:00 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Mon, 21 Jan 2008 16:53:00 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
Message-ID: <2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>

Hello,

My goal is to be able to access contacts that are into a (open source)
CRM from any LDAP compatible client (mostly email clients that can
access an LDAP server as a shared contact database).

This is a fairly simple LDAP server, mostly implementing search on
emails and get contacts back (+a very simple ACL).

I read a post from Tommi Virtanen a (few) years ago
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
And found more information on :
http://www.inoi.fi/open/trac/ldaptor
I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py

However, I'm kind of lost now and didn't find any examples (or
discussion), and was wondering about the status of the ldap server. If
this is still active, could you tell me where to find more info and
hopefully some examples ?

I saw this thread:
http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
about "ldaptor and bind"

If I read properly, the ldap server is something for testing, but not
production ready (eg no security/acl implemented by default). Am I
right ? Did Ottavio Campana manage to have something working and did
he publish the result of his modifications ?

In short, is there a simple example of a server with a sql backend,
that implement searches ?

thanks in advance,

Xavier



From p.mayers at imperial.ac.uk  Tue Jan 22 04:37:53 2008
From: p.mayers at imperial.ac.uk (Phil Mayers)
Date: Tue, 22 Jan 2008 11:37:53 +0000
Subject: [Twisted-Python] How can I make twisted and dbus work together?
In-Reply-To: <478DED2C.8030709@pollenation.net>
References: <1200464918.478da4163459c@www-mail.usyd.edu.au>	<1200467899.7626.27.camel@localhost>	<478DE7E7.4010204@pollenation.net>	<478DEA49.30906@pollenation.net>
	<478DED2C.8030709@pollenation.net>
Message-ID: <4795D591.50408@imperial.ac.uk>

> 
> Grepping the Twisted code suggests this is a "problem" that is not
> really worth trying to fix fully. It's probably best to just avoid the
> problem by making sure you get to install your choice of reactor before
> anything else.

When I ran into this issue and asked, that is what I was told.

i.e. in real terms this means:

#!/usr/bin/python

# DO THIS BEFORE *ANYTHING* ELSE!!!
from twisted.internet import glib2reactor
glib2reactor.install()

# only then start importing things
from twisted.internet import defer
from twisted.python import utils

# ...etc

> 
> Of course, if you use the twistd daemon installing a specific reactor at
> the correct time is easy, by using the --reactor flag.





From xavier at sydesy.com  Tue Jan 22 10:06:59 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Tue, 22 Jan 2008 18:06:59 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
Message-ID: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>

Hello,

My goal is to be able to access contacts that are into a (open source)
CRM from any LDAP compatible client (mostly email clients that can
access an LDAP server as a shared contact database).

This is a fairly simple LDAP server, mostly implementing search on
emails and get contacts back (+a very simple ACL).

I read a post from Tommi Virtanen a (few) years ago
http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
And found more information on :
http://www.inoi.fi/open/trac/ldaptor
I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py

However, I'm kind of lost now and didn't find any examples (or
discussion), and was wondering about the status of the ldap server. If
this is still active, could you tell me where to find more info and
hopefully some examples ?

I saw this thread:
http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
about "ldaptor and bind"

If I read properly, the ldap server is something for testing, but not
production ready (eg no security/acl implemented by default). Am I
right ? Did Ottavio Campana manage to have something working and did
he publish the result of his modifications ?

In short, is there a simple example of a server with a sql backend,
that implement searches ?

thanks in advance,

Xavier



From pm-twisted-python at anapol.cz  Wed Jan 23 03:56:59 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Wed, 23 Jan 2008 11:56:59 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
Message-ID: <47971D7B.1020300@anapol.cz>

Hi,

why not just use OpenLDAP's slapd-sql backend, until Ldaptor will "rise 
to World Domination some day" ;) ? That backend was designed 
specifically to solve the cases you describe, i think. As i've some 
rather good experience with Ldaptor's client part, i've never used the 
(unfinished) server parts though. But i haven't used the slapd-sql 
backend either ;) .

Petr

xavier dutoit napsal(a):
> Hello,
> 
> My goal is to be able to access contacts that are into a (open source)
> CRM from any LDAP compatible client (mostly email clients that can
> access an LDAP server as a shared contact database).
> 
> This is a fairly simple LDAP server, mostly implementing search on
> emails and get contacts back (+a very simple ACL).
> 
> I read a post from Tommi Virtanen a (few) years ago
> http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
> And found more information on :
> http://www.inoi.fi/open/trac/ldaptor
> I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py
> 
> However, I'm kind of lost now and didn't find any examples (or
> discussion), and was wondering about the status of the ldap server. If
> this is still active, could you tell me where to find more info and
> hopefully some examples ?
> 
> I saw this thread:
> http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
> about "ldaptor and bind"
> 
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?
> 
> In short, is there a simple example of a server with a sql backend,
> that implement searches ?
> 
> thanks in advance,
> 
> Xavier
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From xavier at sydesy.com  Wed Jan 23 04:32:00 2008
From: xavier at sydesy.com (xavier dutoit)
Date: Wed, 23 Jan 2008 12:32:00 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <47971D7B.1020300@anapol.cz>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
	<47971D7B.1020300@anapol.cz>
Message-ID: <2617b9b70801230332k22a5f626n874edcefa0ab3e60@mail.gmail.com>

 > why not just use OpenLDAP's slapd-sql backend, until Ldaptor will "rise
> to World Domination some day" ;) ? That backend was designed
> specifically to solve the cases you describe, i think. As i've some
> rather good experience with Ldaptor's client part, i've never used the
> (unfinished) server parts though. But i haven't used the slapd-sql
> backend either ;) .

Hi,

That was another option I had in mind, but I wanted to be amongs the
first using ldaptor, to be able to impress my grand children and tell
them that I did use it before it rised to world domination ! I'll try
the openldap way, but for the record, and in case the ldaptor
inforcement squad comes home: I did try ;)

X+
> Petr
>
> xavier dutoit napsal(a):
> > Hello,
> >
> > My goal is to be able to access contacts that are into a (open source)
> > CRM from any LDAP compatible client (mostly email clients that can
> > access an LDAP server as a shared contact database).
> >
> > This is a fairly simple LDAP server, mostly implementing search on
> > emails and get contacts back (+a very simple ACL).
> >
> > I read a post from Tommi Virtanen a (few) years ago
> > http://twistedmatrix.com/pipermail/twisted-python/2005-May/010484.html
> > And found more information on :
> > http://www.inoi.fi/open/trac/ldaptor
> > I've svn checkouted ldaptor, and did find ldaptor/protocols/ldap/ldapserver.py
> >
> > However, I'm kind of lost now and didn't find any examples (or
> > discussion), and was wondering about the status of the ldap server. If
> > this is still active, could you tell me where to find more info and
> > hopefully some examples ?
> >
> > I saw this thread:
> > http://twistedmatrix.com/pipermail/twisted-python/2008-January/016534.html
> > about "ldaptor and bind"
> >
> > If I read properly, the ldap server is something for testing, but not
> > production ready (eg no security/acl implemented by default). Am I
> > right ? Did Ottavio Campana manage to have something working and did
> > he publish the result of his modifications ?
> >
> > In short, is there a simple example of a server with a sql backend,
> > that implement searches ?
> >
> > thanks in advance,
> >
> > Xavier
> >
> > _______________________________________________
> > Twisted-Python mailing list
> > Twisted-Python at twistedmatrix.com
> > http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



From steve at holdenweb.com  Wed Jan 23 06:04:56 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 08:04:56 -0500
Subject: [Twisted-Python] Teach Me Twisted?
Message-ID: <fn7e1q$qbj$1@ger.gmane.org>

Hi, Twisters:

I've been lurking on the list a while, and wondered how much of a 
Twisted presence there is going to be at PyCon in March.

The reason I ask is because of a conversation that I had with Glyph 
recently.  We both agreed that it would be a good thing to have more 
learning materials available for Twisted.

One possible solution would be to run an open space session at PyCon in 
which experienced users explain to a novice how to get started in the 
Twisted environment.

Of course the idea is that I should be the novice (I really don't know 
that much about Twisted) and that you should be the people explaining to 
me and (hopefully) leading me through to the Nirvana of twisted 
enlightenment.

Naturally this idea won't work unless experienced Twisted users get 
behind it.  I would like your suggestions for preliminary reading, 
though I don't want around arrive at the conference knowing too much.

Is this a good idea?

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From programmer.py at gmail.com  Wed Jan 23 06:45:24 2008
From: programmer.py at gmail.com (Jaime Wyant)
Date: Wed, 23 Jan 2008 07:45:24 -0600
Subject: [Twisted-Python] Teach Me Twisted?
In-Reply-To: <fn7e1q$qbj$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
Message-ID: <d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>

I think this is a wonderful idea.  But, be sure to remember those not
fortunate enough to attend PyCon (me :)), and keep transcripts or video, or
some medium.

But the big question is, what will they teach you?  You should have an idea
of some type of network application you want to build.  Obviously it should
be something that would touch on a lot of different facets of twisted.  Or
maybe it would be better to have smaller "example" applications that show
off neat things like conch.

However it pans out, I definitely think this is a great idea...

jw

On Jan 23, 2008 7:04 AM, Steve Holden <steve at holdenweb.com> wrote:

> Hi, Twisters:
>
> I've been lurking on the list a while, and wondered how much of a
> Twisted presence there is going to be at PyCon in March.
>
> The reason I ask is because of a conversation that I had with Glyph
> recently.  We both agreed that it would be a good thing to have more
> learning materials available for Twisted.
>
> One possible solution would be to run an open space session at PyCon in
> which experienced users explain to a novice how to get started in the
> Twisted environment.
>
> Of course the idea is that I should be the novice (I really don't know
> that much about Twisted) and that you should be the people explaining to
> me and (hopefully) leading me through to the Nirvana of twisted
> enlightenment.
>
> Naturally this idea won't work unless experienced Twisted users get
> behind it.  I would like your suggestions for preliminary reading,
> though I don't want around arrive at the conference knowing too much.
>
> Is this a good idea?
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
"Government does not solve problems; it subsidizes them."
Ronald Reagan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080123/f82d0101/attachment.html>

From steve at holdenweb.com  Wed Jan 23 08:18:18 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 10:18:18 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
Message-ID: <47975ABA.3080901@holdenweb.com>

Jaime Wyant wrote:
> I think this is a wonderful idea.  But, be sure to remember those not 
> fortunate enough to attend PyCon (me :)), and keep transcripts or video, 
> or some medium.
> 
I plan to make my own audio recording, so at the very least I can 
transcribe it with Naturally Speaking and edit it for the web. I am not 
currently sure what plans PyCon has for supporting Open Space sessions. 
Sorry you won't be able to make it to PyCon :-(

Aside: do you know that financial support may be available? See

http://pyfound.blogspot.com/2008/01/pycon-2008-financial-aid-available.html

> But the big question is, what will they teach you?  You should have an 
> idea of some type of network application you want to build.  Obviously 
> it should be something that would touch on a lot of different facets of 
> twisted.  Or maybe it would be better to have smaller "example" 
> applications that show off neat things like conch.
> 
That's a good point. Maybe there should be two sessions? One could focus 
on "Twisted principles" and establish the absolute must-know information 
that forms the basis of everyone's knowledge (except, currently, mine).

The seconds could then focus on how to build a small application (an 
echo server? With Twisted that would surely be way too easy: I need 
community help in choosing a task of about the right scope).

> However it pans out, I definitely think this is a great idea...
> 
Thanks very much for your feedback. Without feedback this idea won't get 
anywhere. I'd like it to offer some sort of return to the Twisted 
community for the enthusiastic support its members gave to PyCon back in 
the early days.

Note to everyone: I also need clues for reading *before* the session. 
Assume I have very little time ...

regards
  Steve

> jw
> 
> On Jan 23, 2008 7:04 AM, Steve Holden <steve at holdenweb.com 
> <mailto:steve at holdenweb.com>> wrote:
> 
>     Hi, Twisters:
> 
>     I've been lurking on the list a while, and wondered how much of a
>     Twisted presence there is going to be at PyCon in March.
> 
>     The reason I ask is because of a conversation that I had with Glyph
>     recently.  We both agreed that it would be a good thing to have more
>     learning materials available for Twisted.
> 
>     One possible solution would be to run an open space session at PyCon in
>     which experienced users explain to a novice how to get started in the
>     Twisted environment.
> 
>     Of course the idea is that I should be the novice (I really don't know
>     that much about Twisted) and that you should be the people explaining to
>     me and (hopefully) leading me through to the Nirvana of twisted
>     enlightenment.
> 
>     Naturally this idea won't work unless experienced Twisted users get
>     behind it.  I would like your suggestions for preliminary reading,
>     though I don't want around arrive at the conference knowing too much.
> 
>     Is this a good idea?
> 
>     regards
>      Steve
>     --
>     Steve Holden        +1 571 484 6266   +1 800 494 3119
>     Holden Web LLC              http://www.holdenweb.com/
>     <http://www.holdenweb.com/>
> 
> 
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
> 
> 
> 
> 
> -- 
> "Government does not solve problems; it subsidizes them."
> Ronald Reagan
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python


-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From andrewfr_ice at yahoo.com  Wed Jan 23 11:08:02 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 23 Jan 2008 10:08:02 -0800 (PST)
Subject: [Twisted-Python] Teach Me Twisted?
In-Reply-To: <E1JHixI-00069z-DU@cube.twistedmatrix.com>
Message-ID: <558151.98564.qm@web34215.mail.mud.yahoo.com>

Hi Steve:

>I've been lurking on the list a while, and wondered
>how much of a Twisted presence there is going to be
at >PyCon in March.

Good question. I am giving a talk called "Adventures
in Stackless Python/Twisted Integration." The talk has
been labelled "advanced."

However for me, a large part of the "adventure" is
slowly learning Twisted and Stackless concepts. So I
really want to capture newbie misconceptions, the
pitfalls, the "you shouldn't do that" advice, and the
cool things you can do once you get the swing of
things. And finally, where do we go from here?

One of things I will do is use diagrams to show
control flow in Twisted in Stackless. I feel the Abe
Fettig book and the Stackless literature would be
greatly improved if it has more illustrations of this
sort.

>One possible solution would be to run an open space
>session at PyCon in which experienced users explain
to >a novice how to get started in the Twisted
>environment.

Well no one from Twisted has contacted me (on the
other hand, I have talked a bit with Christian since
he has a Stackless and PyPy talk). However I would
love to help novices get on board.

Cheers,
Andrew







      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From ottavio at campana.vi.it  Wed Jan 23 11:24:10 2008
From: ottavio at campana.vi.it (Ottavio Campana)
Date: Wed, 23 Jan 2008 19:24:10 +0100
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801220906l77dda0berb921cbfea17d4ee0@mail.gmail.com>
Message-ID: <4797864A.6070802@campana.vi.it>

xavier dutoit ha scritto:
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?

Yes, I got something useful, it's going to be deployed soon but 
eventually I didn't come out with acls. Even though I have to say 
ldaptor fits well in my project and for some aspects I'm happier than 
with openldap.

> In short, is there a simple example of a server with a sql backend,
> that implement searches ?

I have a web application I wrote with twisted web. This application 
saves data in a sqlite file. Whenever the user modifies it from the web, 
the application updates also the files used by ldaptor, since what I 
need is only to export them with ldap.

It does not have acls, but I managed to get something similar by 
patching how the ldap server works. Moreover, to prevent corruption I 
modified how operations different from search behave.

What do you want to do?

About doc: in ldaptor/protocols/ldap/ldapserver.py I found nearly 
everything I needed, give al look also to ldaptor/ldiftree.py to see how 
not to store everything in memory but in a filesystem. Also give a look 
at http://www.inoi.fi/open/trac/ldaptor/browser/trunk/test-ldapserver.tac

I hope it is enough, I've been able to understand how it works from 
these files.

Bye,

Ottavio

-- 
Non c'e' piu' forza nella normalita', c'e' solo monotonia.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
URL: </pipermail/twisted-python/attachments/20080123/5979f140/attachment.sig>

From steve at holdenweb.com  Wed Jan 23 11:36:36 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 13:36:36 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <558151.98564.qm@web34215.mail.mud.yahoo.com>
References: <E1JHixI-00069z-DU@cube.twistedmatrix.com>
	<558151.98564.qm@web34215.mail.mud.yahoo.com>
Message-ID: <fn81fk$7te$1@ger.gmane.org>

Andrew Francis wrote:
> Hi Steve:
> 
>> I've been lurking on the list a while, and wondered
>> how much of a Twisted presence there is going to be
> at >PyCon in March.
> 
> Good question. I am giving a talk called "Adventures
> in Stackless Python/Twisted Integration." The talk has
> been labelled "advanced."
> 
> However for me, a large part of the "adventure" is
> slowly learning Twisted and Stackless concepts. So I
> really want to capture newbie misconceptions, the
> pitfalls, the "you shouldn't do that" advice, and the
> cool things you can do once you get the swing of
> things. And finally, where do we go from here?
> 
> One of things I will do is use diagrams to show
> control flow in Twisted in Stackless. I feel the Abe
> Fettig book and the Stackless literature would be
> greatly improved if it has more illustrations of this
> sort.
> 
>> One possible solution would be to run an open space
>> session at PyCon in which experienced users explain
> to >a novice how to get started in the Twisted
>> environment.
> 
> Well no one from Twisted has contacted me (on the
> other hand, I have talked a bit with Christian since
> he has a Stackless and PyPy talk). However I would
> love to help novices get on board.
> 
Great. I'll try to attend your talk, and any ideas you have to help with 
"Teach Me Twisted" will be warmly welcomed. The idea is to try to leave 
something behind that will help others engage with Twisted more quickly 
and effectively (though I should point out there are no guarantees of 
success).

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From paul at subsignal.org  Wed Jan 23 16:18:02 2008
From: paul at subsignal.org (paul)
Date: Thu, 24 Jan 2008 00:18:02 +0100
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <47975ABA.3080901@holdenweb.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com>
Message-ID: <fn8hv6$4hu$1@ger.gmane.org>

Steve Holden schrieb:
> Jaime Wyant wrote:
>> I think this is a wonderful idea.  But, be sure to remember those not 
>> fortunate enough to attend PyCon (me :)), and keep transcripts or 
>> video, or some medium.
>>
> I plan to make my own audio recording, so at the very least I can 
> transcribe it with Naturally Speaking and edit it for the web. I am not 
> currently sure what plans PyCon has for supporting Open Space sessions. 
> Sorry you won't be able to make it to PyCon :-(
> 
> Aside: do you know that financial support may be available? See
> 
> http://pyfound.blogspot.com/2008/01/pycon-2008-financial-aid-available.html
> 
>> But the big question is, what will they teach you?  You should have an 
>> idea of some type of network application you want to build.  Obviously 
>> it should be something that would touch on a lot of different facets 
>> of twisted.  Or maybe it would be better to have smaller "example" 
>> applications that show off neat things like conch.
>>
> That's a good point. Maybe there should be two sessions? One could focus 
> on "Twisted principles" and establish the absolute must-know information 
> that forms the basis of everyone's knowledge (except, currently, mine).
> 
> The seconds could then focus on how to build a small application (an 
> echo server? With Twisted that would surely be way too easy: I need 
> community help in choosing a task of about the right scope).
How about a twisted version of the (in)famous "webapp in 20 minutes"? 
Maybe not a stupid blog but some kind of remote management by using 
conch? That would be:
- simple persistence (maybe just files but async)
- business logic (conch connecting to a host and doing stuff)
- presentation layer with web or web2

I did something like that a few month back and had a hard time gathering 
all the pieces of information ;) I still can't believe I have to parse 
raw response strings to handle POST ;))

cheers
  Paul





From clemesha at gmail.com  Wed Jan 23 17:10:59 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 23 Jan 2008 16:10:59 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fn8hv6$4hu$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
Message-ID: <d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>

Hi there,

Thanks Steve Holden for organizing this, it's a great idea.

I've been using twisted for about a year now and I love it,
I'm a classic case of (as you can read all over the web):
 "after the learning curve, you'll love Twisted"
so, yeah, more learning materials would be great for those starting out.

Some nice topics might include:

a) Start off simple with a "twisted.web2" example (everyone "gets" http)

b) then plug that into a simple sqlite database using "twisted.enterprise"

c) then plug some simple usage of "twisted.pb" that does something
    in the backend, that gets presented to the pages being served by "
twisted.web2"

d) Show how using "twistd" is really convient
(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some logging
capability, etc)

Anyways, these are just random ideas, but they are things that took me a
while to
get going with, but now I find them so clean and useful.


Regarding Paul's post:

I did something like that a few month back and had a hard time gathering
> all the pieces of information ;) I still can't believe I have to parse
> raw response strings to handle POST ;))


You don't!  This is all you need:

from twisted.web2 import resource, http, http_headers

CTYPE = {'content-type': http_headers.MimeType('text', 'html',
{'charset':'utf-8'})}

GetSomePostData(resource.PostableResource):

    def render(self, request):
        postval0 = request.args.get("val0", [""])[0]
        postval1 = request.args.get("val1", [""])[0]
        html = myhtmltemplates.comment_form_response(postval0, postval1)
#for example
        return http.Response(200, CTYPE, html)


- Alex
















>
>
> cheers
>  Paul
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080123/c4f124dd/attachment.html>

From glyph at divmod.com  Wed Jan 23 17:36:42 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 24 Jan 2008 00:36:42 -0000
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
Message-ID: <20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>

On 12:10 am, clemesha at gmail.com wrote:
>Thanks Steve Holden for organizing this, it's a great idea.

Indeed!
>Some nice topics might include:

Thanks for the suggestions.  Do you have any others?  :-)  I hate to 
rain on your parade here, but I think maybe my explanation of why I 
don't like these suggestions will spark discussion of more different 
ones...
>a) Start off simple with a "twisted.web2" example (everyone "gets" 
>http)

I think that this is actually something we should avoid in a tutorial. 
The web situation in Twisted is complicated 
(http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).  web2 in 
particular is suffering from an extreme lack of maintenance and still 
has never "officially" been released; work is just starting to get 
underway to unify t.web2 and nevow into t.web and reduce the confusion, 
but this is all still in progress and who knows when, how, or even if it 
will be completed.  If you get a group of experienced Twisted folks 
together to talk about writing web applications, you're more likely to 
spark a debate than an educational session.

Even if all these problems were fixed, and there were a really good, 
well-supported, universally understood web server for Twisted, the 
benefits of Twisted's programming model are not immediately obvious to 
the bread and butter of the web programming world.  Learning how to use 
some combination of Twisted tools to generate a web page will always be 
at least a little bit harder than writing the sort of glorified CGI 
script that most web frameworks require these days - unless you're using 
something like Athena, which might be too much complexity to address in 
a single tutorial session.  (And while Athena is more polished and "one 
right way" than the lower-level HTTP stuff, there is still a painful 
dearth of documentation, not to mention the fact that you need to write 
JavaScript as well as Python.)

Twisted really shines best when you're writing a client as well as a 
server.  Chat is the quintessential application where Twisted makes the 
most sense - and the lack of a well-documented chat server is much less 
of a problem than the lack of a well-documented web server, since you 
can easily define a wire protocol and wacky semantics for your purpose- 
built tutorial chat application.
>b) then plug that into a simple sqlite database using 
>"twisted.enterprise"

twisted.enterprise is similarly a scary and inconsistent area, and 
requires understanding the interaction of the DB thread and the reactor 
thread.  (And at least part of this section would have to be dedicated 
to "and never, ever touch anything in this package aside from adbapi".)
>d) Show how using "twistd" is really convient
>(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some 
>logging
>capability, etc)

This, however, is a great suggestion.  Twisted plugins should be part of 
this discussion.



From clemesha at gmail.com  Wed Jan 23 18:18:26 2008
From: clemesha at gmail.com (alex clemesha)
Date: Wed, 23 Jan 2008 17:18:26 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
Message-ID: <d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>

On Jan 23, 2008 4:36 PM, <glyph at divmod.com> wrote:

> On 12:10 am, clemesha at gmail.com wrote:
> >Thanks Steve Holden for organizing this, it's a great idea.
>
> Indeed!
> >Some nice topics might include:
>
> Thanks for the suggestions.  Do you have any others?  :-)


For my usage of twisted, these are important to me and I am
the most familiar with them. (See below)


I hate to
> rain on your parade here, but I think maybe my explanation of why I
> don't like these suggestions will spark discussion of more different
> ones...
> >a) Start off simple with a "twisted.web2" example (everyone "gets"
> >http)
>
> I think that this is actually something we should avoid in a tutorial.
> The web situation in Twisted is complicated
> (http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).  web2 in
> particular is suffering from an extreme lack of maintenance and still
> has never "officially" been released; work is just starting to get
> underway to unify t.web2 and nevow into t.web and reduce the confusion,
> but this is all still in progress and who knows when, how, or even if it
> will be completed.


Oh yes, I know, I know.  While learning twisted I read *most* (that's alot
;)
of posts to the twisted-web mailing list.  So I am very familiar with the
state.

That said, oh how I wish you guys could make twisted.web2 the one and
only!!!
It would be good for beginners and others alike.

Note however: I can only barely imagine how hard that might be,
so I am *definitely not* complaining ... Twisted is excellent, thanks very
much for it.


If you get a group of experienced Twisted folks
> together to talk about writing web applications, you're more likely to
> spark a debate than an educational session.
>
> Even if all these problems were fixed, and there were a really good,
> well-supported, universally understood web server for Twisted, the
> benefits of Twisted's programming model are not immediately obvious to
> the bread and butter of the web programming world.  Learning how to use
> some combination of Twisted tools to generate a web page will always be
> at least a little bit harder than writing the sort of glorified CGI
> script that most web frameworks require these days - unless you're using
> something like Athena, which might be too much complexity to address in
> a single tutorial session.  (And while Athena is more polished and "one
> right way" than the lower-level HTTP stuff, there is still a painful
> dearth of documentation, not to mention the fact that you need to write
> JavaScript as well as Python.)


"Comet" (aka what Athena does) is one of my main uses of twisted, see

http://svn.xantus.org/shortbus/trunk/cometd-twisted/

is some code that I use.

That and other ajax-y stuff.  Not much templating html, etc.


>
> Twisted really shines best when you're writing a client as well as a
> server.  Chat is the quintessential application where Twisted makes the
> most sense - and the lack of a well-documented chat server is much less
> of a problem than the lack of a well-documented web server, since you
> can easily define a wire protocol and wacky semantics for your purpose-
> built tutorial chat application.

Yes!


>
> >b) then plug that into a simple sqlite database using
> >"twisted.enterprise"
>
> twisted.enterprise is similarly a scary and inconsistent area, and
> requires understanding the interaction of the DB thread and the reactor
> thread.  (And at least part of this section would have to be dedicated
> to "and never, ever touch anything in this package aside from adbapi".)


I only ever use 'adbapi'.  The reason I say this is database functionality
is pretty darn important for all non-trivial programs, so programmers
need/want
to know about this functionality, wouldn't you agree?


>
> >d) Show how using "twistd" is really convient
> >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some
> >logging
> >capability, etc)
>
> This, however, is a great suggestion.  Twisted plugins should be part of
> this discussion.
>
Yes.


Thanks again for Twisted!

-Alex


>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080123/b7d263fb/attachment.html>

From steve at holdenweb.com  Wed Jan 23 20:47:26 2008
From: steve at holdenweb.com (Steve Holden)
Date: Wed, 23 Jan 2008 22:47:26 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>	<47975ABA.3080901@holdenweb.com>
	<fn8hv6$4hu$1@ger.gmane.org>	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
Message-ID: <fn91og$9g9$1@ger.gmane.org>

alex clemesha wrote:
> 
> 
> On Jan 23, 2008 4:36 PM, <glyph at divmod.com <mailto:glyph at divmod.com>> wrote:
> 
>     On 12:10 am, clemesha at gmail.com <mailto:clemesha at gmail.com> wrote:
>      >Thanks Steve Holden for organizing this, it's a great idea.
> 
>     Indeed!
>      >Some nice topics might include:
> 
>     Thanks for the suggestions.  Do you have any others?  :-) 
> 
> For my usage of twisted, these are important to me and I am
> the most familiar with them. (See below)
> 
> 
>     I hate to
>     rain on your parade here, but I think maybe my explanation of why I
>     don't like these suggestions will spark discussion of more different
>     ones...
>      >a) Start off simple with a " twisted.web2" example (everyone "gets"
>      >http)
> 
>     I think that this is actually something we should avoid in a tutorial.
>     The web situation in Twisted is complicated
>     ( http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).
>      web2 in
>     particular is suffering from an extreme lack of maintenance and still
>     has never "officially" been released; work is just starting to get
>     underway to unify t.web2 and nevow into t.web and reduce the confusion,
>     but this is all still in progress and who knows when, how, or even if it
>     will be completed.  
> 
>  
> Oh yes, I know, I know.  While learning twisted I read *most* (that's 
> alot ;)
> of posts to the twisted-web mailing list.  So I am very familiar with 
> the state.
> 
Interesting. I am also subscribed to the twisted.web newsgroup, and I 
have been surprised about how quiet it's been. I imagine that if 
twisted.web2 would be very good for things like high-volume web services 
work. It has relatively few advantages in the heavily-competitive 
templating world, and I have to say that my early experience with Nevow, 
while it caused me to admire the system, wasn't entirely trouble-free. I 
think that may be partly because it wasn't being used in a Twisted 
environment (I'm thinking of the python.org reorganization that was put 
in effect after PyCon 2006).

> That said, oh how I wish you guys could make twisted.web2 the one and 
> only!!!
> It would be good for beginners and others alike.
> 
> Note however: I can only barely imagine how hard that might be,
> so I am *definitely not* complaining ... Twisted is excellent, thanks 
> very much for it.
> 
Hear, hear. And the world needs to know, hence my enthusiasm for "Teach 
Me Twisted".

> 
>     If you get a group of experienced Twisted folks
>     together to talk about writing web applications, you're more likely to
>     spark a debate than an educational session.
> 
Twisted's not alone there, of course.

>     Even if all these problems were fixed, and there were a really good,
>     well-supported, universally understood web server for Twisted, the
>     benefits of Twisted's programming model are not immediately obvious to
>     the bread and butter of the web programming world.  Learning how to use
>     some combination of Twisted tools to generate a web page will always be
>     at least a little bit harder than writing the sort of glorified CGI
>     script that most web frameworks require these days - unless you're
>     using
>     something like Athena, which might be too much complexity to address in
>     a single tutorial session.  (And while Athena is more polished and "one
>     right way" than the lower-level HTTP stuff, there is still a painful
>     dearth of documentation, not to mention the fact that you need to write
>     JavaScript as well as Python.)
> 
Right. I think a Django replacement might be a bit ambitious for an open 
space session or two ...

Maybe once I get into Twisted I'll be able to lend a hand with t.w2 
development (or maybe not).

> 
> "Comet" (aka what Athena does) is one of my main uses of twisted, see
> 
> http://svn.xantus.org/shortbus/trunk/cometd-twisted/
> 
> is some code that I use. 
> 
> That and other ajax-y stuff.  Not much templating html, etc.
> 
That's neat, but definitely a few too many layers for a starter project.
> 
> 
>     Twisted really shines best when you're writing a client as well as a
>     server.  Chat is the quintessential application where Twisted makes the
>     most sense - and the lack of a well-documented chat server is much less
>     of a problem than the lack of a well-documented web server, since you
>     can easily define a wire protocol and wacky semantics for your purpose-
>     built tutorial chat application.
> 
> Yes!
>  
I'd suggest possibly a client/server game , but I am under the 
impression that's already taken care of.
> 
> 
>      >b) then plug that into a simple sqlite database using
>      >" twisted.enterprise"
> 
>     twisted.enterprise is similarly a scary and inconsistent area, and
>     requires understanding the interaction of the DB thread and the reactor
>     thread.  (And at least part of this section would have to be dedicated
>     to "and never, ever touch anything in this package aside from adbapi".)
> 
We'll definitely stay away from that, then.
> 
> I only ever use 'adbapi'.  The reason I say this is database functionality
> is pretty darn important for all non-trivial programs, so programmers 
> need/want
> to know about this functionality, wouldn't you agree?
>  
Important but not fundamental, I'd say.
> 
> 
>      >d) Show how using "twistd" is really convient
>      >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with some
>      >logging
>      >capability, etc)
> 
Yes, yes, yes! If I could come away with a clear understanding of how a 
.tac file encapsulated one or more Twisted network services I'd be happy.

>     This, however, is a great suggestion.  Twisted plugins should be
>     part of
>     this discussion. 
> 
> Yes.
> 
> 
> Thanks again for Twisted!
> 
This is great. Keep it coming! Still looking for reading suggestions ...

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From tjstebbing at gmail.com  Wed Jan 23 21:16:42 2008
From: tjstebbing at gmail.com (Tim Stebbing)
Date: Thu, 24 Jan 2008 15:16:42 +1100
Subject: [Twisted-Python] Senior Python developer position
Message-ID: <972281650801232016p687ddcb5i25848e86c69cd24d@mail.gmail.com>

Senior Python Developer [AU]

[snip out jobsite preamble]..

G'day all, we're in need of another senior pythonista able to start
asap at our Melbourne offices. We run an online health and fitness
service which is growing into the global market, and the application
is being redeveloped to scale globally. The role will  primarily
involve implementing a distributed framework;  global authentication
mechanisms, business logic, RPC between nodes etc. There is plenty of
opportunity for free-thought, as a senior developer there is an
expectation you will be able to work autonomously on components and
meet deadlines, be a creative voice in the team, as well as assist the
more junior developers. This is a full time position, 70-90k neg based
on exp.

Technical requirements:
 - Strong OO design principals
 - 4+ years commercial experience
 - Demonstrable ability to code in Python
 - Experience with Open Source Relational Databases
 - Knowledge of web technologies such as HTML, XML, Javascript, XML-RPC
 - Strong unit testing skills

 Professional requirements:
 - Excellent written and verbal communication
 - Good expectation setting
 - Prioritisation and time management skills
 - Ownership of projects and relevant outcomes

 Desirable experience:
 - Knowledge of Zope3 application server
 - Knowledge of Twisted
 - Performance/Scalability knowledge
 - Familiarity with Linux



From sipickles at hotmail.com  Thu Jan 24 12:33:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 24 Jan 2008 19:33:05 +0000
Subject: [Twisted-Python] Newbie question
Message-ID: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>

Hi,

I thought I'd better try and understand twisted a bit more rather than 
just using it!

Can anyone tell me why this code is erroneous?

#####################
from twisted.internet import reactor, defer

print "test"

def printResult(s):
    print "Data: %s", str(s)

def printEnd():
    print "End"

def printError(error):
    print error

d = defer.Deferred()

reactor.callLater(4, d.callback)
d.addCallback(printEnd)
d.addErrback(printError)

reactor.run()
###################################
I get the error:

TypeError: callback() takes exactly two arguments (1 given) in 
twisted/internet/base.py call.func(*call.args, **call.kw)

Thanks

Simon

-- 
Linux user #458601 - http://counter.li.org.






From pm-twisted-python at anapol.cz  Thu Jan 24 12:49:14 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 24 Jan 2008 20:49:14 +0100
Subject: [Twisted-Python] Newbie question
In-Reply-To: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
Message-ID: <4798EBBA.5010400@anapol.cz>

Hi,

try exactly what it says, that is, supply callback with an argument:

example:

result = 'I'm the result'
reactor.callLater(4, d.callback, result)

Then it should do.

Petr



Simon Pickles napsal(a):
> Hi,
> 
> I thought I'd better try and understand twisted a bit more rather than 
> just using it!
> 
> Can anyone tell me why this code is erroneous?
> 
> #####################
> from twisted.internet import reactor, defer
> 
> print "test"
> 
> def printResult(s):
>    print "Data: %s", str(s)
> 
> def printEnd():
>    print "End"
> 
> def printError(error):
>    print error
> 
> d = defer.Deferred()
> 
> reactor.callLater(4, d.callback)
> d.addCallback(printEnd)
> d.addErrback(printError)
> 
> reactor.run()
> ###################################
> I get the error:
> 
> TypeError: callback() takes exactly two arguments (1 given) in 
> twisted/internet/base.py call.func(*call.args, **call.kw)
> 
> Thanks
> 
> Simon
> 



From pm-twisted-python at anapol.cz  Thu Jan 24 12:58:50 2008
From: pm-twisted-python at anapol.cz (Petr Mifek)
Date: Thu, 24 Jan 2008 20:58:50 +0100
Subject: [Twisted-Python] Newbie question
In-Reply-To: <4798EBBA.5010400@anapol.cz>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
	<4798EBBA.5010400@anapol.cz>
Message-ID: <4798EDFA.1050806@anapol.cz>

UGHHH, Thunderbird's syntax coloring sucks ;)

of course read that

result = "I'm the result"

Otherwise, look at:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IReactorTime.html#callLater

especially look at the possible args and kwargs arguments and it'll give 
you a delayedCall:

http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html

Petr

Petr Mifek napsal(a):
> Hi,
> 
> try exactly what it says, that is, supply callback with an argument:
> 
> example:
> 
> result = 'I'm the result'
> reactor.callLater(4, d.callback, result)
> 
> Then it should do.
> 
> Petr
> 
> 
> 
> Simon Pickles napsal(a):
>> Hi,
>>
>> I thought I'd better try and understand twisted a bit more rather than 
>> just using it!
>>
>> Can anyone tell me why this code is erroneous?
>>
>> #####################
>> from twisted.internet import reactor, defer
>>
>> print "test"
>>
>> def printResult(s):
>>    print "Data: %s", str(s)
>>
>> def printEnd():
>>    print "End"
>>
>> def printError(error):
>>    print error
>>
>> d = defer.Deferred()
>>
>> reactor.callLater(4, d.callback)
>> d.addCallback(printEnd)
>> d.addErrback(printError)
>>
>> reactor.run()
>> ###################################
>> I get the error:
>>
>> TypeError: callback() takes exactly two arguments (1 given) in 
>> twisted/internet/base.py call.func(*call.args, **call.kw)
>>
>> Thanks
>>
>> Simon
>>
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python



From radix at twistedmatrix.com  Thu Jan 24 13:04:29 2008
From: radix at twistedmatrix.com (Christopher Armstrong)
Date: Thu, 24 Jan 2008 15:04:29 -0500
Subject: [Twisted-Python] Newbie question
In-Reply-To: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
References: <BAY114-DAV11AA0833F8594963C482D6BE380@phx.gbl>
Message-ID: <60ed19d40801241204y6fb71474n88bb9faecf24bb96@mail.gmail.com>

On Jan 24, 2008 2:33 PM, Simon Pickles <sipickles at hotmail.com> wrote:
> Hi,
>
> I thought I'd better try and understand twisted a bit more rather than
> just using it!
>
> Can anyone tell me why this code is erroneous?
>
> #####################
...
> reactor.callLater(4, d.callback)
...
> ###################################
> I get the error:
>
> TypeError: callback() takes exactly two arguments (1 given) in
> twisted/internet/base.py call.func(*call.args, **call.kw)

d.callback needs an argument. You're not passing one. Try:

reactor.callLater(4, d.callback, "whatever")



-- 
Christopher Armstrong
International Man of Twistery
http://radix.twistedmatrix.com/
http://twistedmatrix.com/
http://canonical.com/



From andrewfr_ice at yahoo.com  Thu Jan 24 14:03:17 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Thu, 24 Jan 2008 13:03:17 -0800 (PST)
Subject: [Twisted-Python] Question about RequestHandlers and inlinecallbacks
Message-ID: <777739.96213.qm@web34203.mail.mud.yahoo.com>

Hello Folks:

I am starting to learn inlinecallbacks. I am trying to
do the following:

from within a RequestHandler, I get a web page with
the client.getPage() method. I subsequently return the
web page to the requesting web browser.

The problem -

The web browser hangs. However the
requestHandler.writes are echoed to standard output
(or error).

The problem is that in process(self), a deferred is
created but process() ends finishes without outputting
anything to the web browser.

Eventually, the associated callback is triggered but
the request has already been serviced. 

What I really want is process() to wait until the
client.getPage() is finished.

What I am unclear about is how to properly structure
the programme to get the appropriate behaviour. I am
assuming this is possible. If so, what am I missing?

I have included some sample code.

Cheers,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: inlineExample.py
URL: </pipermail/twisted-python/attachments/20080124/0cd97bbc/attachment.ksh>

From exarkun at divmod.com  Thu Jan 24 15:31:11 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 24 Jan 2008 17:31:11 -0500
Subject: [Twisted-Python] Question about RequestHandlers and
	inlinecallbacks
In-Reply-To: <777739.96213.qm@web34203.mail.mud.yahoo.com>
Message-ID: <20080124223111.6859.518774809.divmod.quotient.79@ohm>

On Thu, 24 Jan 2008 13:03:17 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Folks:
>
>I am starting to learn inlinecallbacks. I am trying to
>do the following:
>
>from within a RequestHandler, I get a web page with
>the client.getPage() method. I subsequently return the
>web page to the requesting web browser.
>
>The problem -
>
>The web browser hangs. However the
>requestHandler.writes are echoed to standard output
>(or error).

Well... almost.  Your attached example doesn't actually print out
what is passed to Request.write().  It prints out what is passed to
the callback of the Deferred returned by getPage.

>
>The problem is that in process(self), a deferred is
>created but process() ends finishes without outputting
>anything to the web browser.

As it must.  The output is the result of a network operation.  It is
exceedingly unlikely that it will be able to happen before process()
returns.

>
>Eventually, the associated callback is triggered but
>the request has already been serviced.

I'm not sure what this means.  What is "the associated callback"?

>
>What I really want is process() to wait until the
>client.getPage() is finished.

That's what Deferreds are for.  Whatever you want to happen after
client.getPage() has happened, you should put into a callback and
attach that callback to the Deferred you get (like you did with
gotPage, almost).

>
>What I am unclear about is how to properly structure
>the programme to get the appropriate behaviour. I am
>assuming this is possible. If so, what am I missing?

The part where you got confused is the part that uses inlineCallbacks,
I think.

You defined a gotPage callback which uses defer.returnValue.  This is
totally bogus.  If you want a callback to return a value, then you just
return it.  defer.returnValue lets you specify the result of a Deferred
returned by a call to a function decorated with inlineCallbacks.

Your gotPage function has not been so decorated, so there's your bug I
suspect.

What you want process() to look like is this:

    def process(self):
        pageDeferred = client.getPage(...)
        def gotPage(result):
            self.write(result)
            self.finish()
        def gotError(err):
            log.err(err, "process getPage call failed")
            self.finish()
        pageDeferred.addCallbacks(gotPage, gotError)

If you used inlineCallbacks, then it would look like this:

    def process(self):
        try:
            result = yield client.getPage(...)
        except Exception, err:
            log.err(err, "process getPage call failed")
        else:
            self.write(result)
        self.finish()
    process = inlineCallbacks(process)

Jean-Paul



From tarjei at nu.no  Fri Jan 25 02:07:14 2008
From: tarjei at nu.no (tarjei)
Date: Fri, 25 Jan 2008 10:07:14 +0100
Subject: [Twisted-Python] VFS status
Message-ID: <4799A6C2.8030001@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi, I need to copy a few files around using scp/sftp on a twisted server
and started looking at VFS. There's a few things I wonder about:

1. Is the API as unstable as the docs say?

2. Does anyone have an example of using the Twisted VFS layer as a
client? I'm a bit blind on where to start.

Kind regards,
Tarjei
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHmabCYVRKCnSvzfIRAjMzAKChu+MQo4qqKU1afGgNBOfH75PSAwCgrmvU
nxjL/sSCzMxmSOQydLZQxo0=
=qvZq
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Fri Jan 25 04:21:36 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Jan 2008 06:21:36 -0500
Subject: [Twisted-Python] VFS status
In-Reply-To: <4799A6C2.8030001@nu.no>
Message-ID: <20080125112136.6859.1044735401.divmod.quotient.412@ohm>

On Fri, 25 Jan 2008 10:07:14 +0100, tarjei <tarjei at nu.no> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Hi, I need to copy a few files around using scp/sftp on a twisted server
>and started looking at VFS. There's a few things I wonder about:
>
>1. Is the API as unstable as the docs say?
>
>2. Does anyone have an example of using the Twisted VFS layer as a
>client? I'm a bit blind on where to start.

You can do this with Conch.  See twisted.conch.ssh.filetransfer.

Jean-Paul



From tv at eagain.net  Fri Jan 25 09:57:21 2008
From: tv at eagain.net (Tommi Virtanen)
Date: Fri, 25 Jan 2008 18:57:21 +0200
Subject: [Twisted-Python] LDAP server based on python
In-Reply-To: <2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>
References: <mailman.71490.1200928201.20675.twisted-python@twistedmatrix.com>
	<2617b9b70801210737nb2f91d7m2be19e3c87c1e7ce@mail.gmail.com>
	<2617b9b70801210742k65505567l70a292b6116a259b@mail.gmail.com>
	<2617b9b70801210753g2722cfdbwed846c49a81438ce@mail.gmail.com>
Message-ID: <20080125165721.GA552@eagain.net>

On Mon, Jan 21, 2008 at 04:53:00PM +0100, xavier dutoit wrote:
> If I read properly, the ldap server is something for testing, but not
> production ready (eg no security/acl implemented by default). Am I
> right ? Did Ottavio Campana manage to have something working and did
> he publish the result of his modifications ?

Yup, status of server-side features for Ldaptor can be summarized as:

- low-level protocol works well and should be stable

- higher-level stuff like actually storing data, handling LDAP
  datatypes, schemas, etc, and access control are pretty much
  non-existent

My personal & business needs have been pretty much covered by what
code is already in Ldaptor, so I'm not actively developing it further,
and am unlikely to do that as a hobby in the near future (too many
other things to hack!) However, I can be persuaded into doing that on
a contract basis.

-- 
:(){ :|:&};:



From bernat at luffy.cx  Fri Jan 25 11:56:52 2008
From: bernat at luffy.cx (Vincent Bernat)
Date: Fri, 25 Jan 2008 19:56:52 +0100
Subject: [Twisted-Python] twistedsnmp
Message-ID: <m3prvpn37v.fsf@neo.luffy.cx>

Hello !

I had to use agent part of twistedsnmp [0]. This part was primarily done
to  test  manager part,  therefore,  it  lacks  important features  like
handling of deferred to return results. To circumvent this limitation, I
have  hacked a  bit  to  make a  small  patch to  allow  limited use  of
deferred [1].

I have  proposed the patch to the  author but got no  answer. Looking at
the CVS  [2], it seems that  twistedsnmp is unmaintained  since almost 2
years.  Has  anybody  any news  about  this?  Is  there any  reason  why
twistedsnmp is not integrated into Twisted?

It seems that there is another  implementation by ZenOSS [3] but it does
not  include  agent  part.  Do  you know  if  this  implementation  will
supersede twistedsnmp?

I attach my patch to this message for posterity (if it can be useful for
other people).

[0] http://twistedsnmp.sourceforge.net/
[1] Limited because you cannot use  nested deferred. If you have any tip
    to easily implement this, you are welcome.
[2] http://twistedsnmp.cvs.sourceforge.net/twistedsnmp/twistedsnmp/
[3] http://packages.qa.debian.org/p/pynetsnmp.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: twistedsnmp-deferred-agent.patch
Type: text/x-diff
Size: 7865 bytes
Desc: not available
URL: </pipermail/twisted-python/attachments/20080125/1de52ab3/attachment-0002.patch>
-------------- next part --------------
-- 
BOFH excuse #272:
Netscape has crashed

From andrewfr_ice at yahoo.com  Fri Jan 25 12:05:59 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 25 Jan 2008 11:05:59 -0800 (PST)
Subject: Thanks! Re: [Twisted-Python] Question about RequestHandlers 
In-Reply-To: <E1JIRuN-0000xq-EZ@cube.twistedmatrix.com>
Message-ID: <244366.67164.qm@web34215.mail.mud.yahoo.com>

Hello Jean-Paul:

AF>What I am unclear about is how to properly
structure
AF>the programme to get the appropriate behaviour. I
am
AF>assuming this is possible. If so, what am I
missing?

>The part where you got confused is the part that
>inlineCallbacks, I think.

Yes.

>You defined a gotPage callback which uses
>defer.returnValue.  This is totally bogus.  If you
>want a callback to return a value, then you just
>return it.  defer.returnValue lets you specify the
>result of a Deferred returned by a call to a function
>decorated with inlineCallbacks.

>Your gotPage function has not been so decorated, so
>there's your bug I suspect.

No, I found the example for inlinecallback a wee
confusing. When I see the line
"makeSomeRequestResultingInDeferred()", I
automatically thought I needed to create a deferred
and in the process, add a callback function. I also
misinterpreted the proviso about returnValue.

Perhaps it is just me, but maybe it would be better to
use a more concrete example using a twisted call.

That said, I have done what you suggested:

class MyRequestHandler(http.Request):
    
    @defer.inlineCallbacks
    def process(self):
        try:
            result = yield
client.getPage("http://www.google.com")
        except Exception, err:
            log.err(err, "process getPage call
failed")
        else:
            self.setHeader('Content-Type',
'text/html') 
            self.write(result)
            self.finish()

and this works beautifully. Thanks! inlinecallbacks
look really cool.....

Cheers,
Andrew








      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: inlineExample.py
URL: </pipermail/twisted-python/attachments/20080125/11e2895a/attachment.ksh>

From sipickles at hotmail.com  Fri Jan 25 12:26:23 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 19:26:23 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
Message-ID: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>

Twisted is a really inaccessible concept. It is very idiosyncratic with 
its millions of various classes and methods....

... but if you persevere, its great! You just have to leave part of your 
brain behind in a field in hampshire :)

I'd suffer the pain, just for deferreds!

Simon

-- 
Linux user #458601 - http://counter.li.org.






From ldanielburr at mac.com  Fri Jan 25 12:51:47 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 13:51:47 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
Message-ID: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>

Hi Simon,

On Fri, 25 Jan 2008 13:26:23 -0600, Simon Pickles <sipickles at hotmail.com>  
wrote:

> Twisted is a really inaccessible concept. It is very idiosyncratic with  
> its millions of various classes and methods....
>

No offense intended, but what is so inaccessible about an event loop?   
Please
understand, I hear people say that Twisted is hard to grok all the time,
but I really don't get *why*.

I'm asking you because you didn't say "I don't get Twisted"; rather, you
said Twisted is an "inaccessible concept".  I'd really like to know
what that concept is, as you see it, because I suspect there is something
useful in that.  I'm also betting that your concept of Twisted is different
 from mine, and that difference may help me do a better job of explaining
Twisted to people when I talk about it in my work.

> ... but if you persevere, its great! You just have to leave part of your  
> brain behind in a field in hampshire :)
>

Again, good stuff.  Which part do you have to leave behind?  The part that
expects code to execute synchronously, or something else?

> I'd suffer the pain, just for deferreds!
>

I agree, deferreds are a nice abstraction, which is why the recent spate
of inlineCallbacks-related posts alarms me.

L. Daniel Burr



From sipickles at hotmail.com  Fri Jan 25 13:26:34 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 20:26:34 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
Message-ID: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>



L. Daniel Burr wrote:

> No offense intended, but what is so inaccessible about an event loop?  
> Please
> understand, I hear people say that Twisted is hard to grok all the time,
> but I really don't get *why*.
>
Conceptually twisted is very simple. Thats what attracted me to it in 
the first place. In reality, twisted (I suspect due to its incredible 
flexibility) is mind boggling. The plethora of options available to the 
uninitiated is overwhelming. Eg:

Okay, so to make a simple client/server what do I do?

Well, you create a class which overrides a factory, which takes a 
protocol, which has some overriden functions which do different 
predefined tasks. Easy.

(btw, ALL tutorials never make clear which functions are overridden, and 
which are newly-defined)

So can I do something similar to do another job?

No you need a totally different set of classes which don't follow any 
similar pattern to the first, probably have very inaccessible (ie, 
forgettable) names. In this case you need to connect an A to a B to a C 
with a D and E as params, and F as a callback and inherit from a WIDGET! 
aaaargh! :)

>> ... but if you persevere, its great! You just have to leave part of 
>> your brain behind in a field in hampshire :)
>>
>
> Again, good stuff.  Which part do you have to leave behind?  The part 
> that
> expects code to execute synchronously, or something else?
IMHO, Twisted seems to be written by many people over time, without a 
rigorous design pattern in place first, more of an iterative process. 
This would account for the fractuous nature of the interface. Its kinda 
like learning English. There are rules but most of the time they don't 
apply.

On the other hand, maybe Twisted just suddenly made sense after 
Stackless did ;)
>
> the recent spate of inlineCallbacks-related posts alarms me.
>
Sorry about those :)

Simon





From cary.hull at gmail.com  Fri Jan 25 13:35:10 2008
From: cary.hull at gmail.com (Cary Hull)
Date: Fri, 25 Jan 2008 12:35:10 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fn91og$9g9$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
	<fn91og$9g9$1@ger.gmane.org>
Message-ID: <3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>

Hey, I think some Twisted related sessions at PyCon would be great.
Based on what's been discussed so far, I would like to humbly suggest
the following (kind of breaking it down):

1) Simple line based chat server/client.
2) Same thing except using AMP.
3) twistd and plugins
4) Axiom! (could show how to 'install' and launch the chat service using
axiomatic and a plugin)

(Axiom rocks and I personally think it should be packaged along with Twisted
itself. :)

Maybe that is too much for folks just starting out, but I think it could be
presented in a way that is easily grokked.

As far as reading material for the above (I'm certain to be redundant here,
but eh):
http://twistedmatrix.com/projects/core/documentation/howto/servers.html
http://twistedmatrix.com/projects/core/documentation/howto/clients.html
http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py(docstrings)
http://twistedmatrix.com/projects/core/documentation/howto/tap.html
http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
http://www.divmod.org/trac/wiki/Axiomatic
http://www.divmod.org/trac/wiki/DivmodAxiom/Reference

-Cary

On Jan 23, 2008 7:47 PM, Steve Holden <steve at holdenweb.com> wrote:

> alex clemesha wrote:
> >
> >
> > On Jan 23, 2008 4:36 PM, <glyph at divmod.com <mailto:glyph at divmod.com>>
> wrote:
> >
> >     On 12:10 am, clemesha at gmail.com <mailto:clemesha at gmail.com> wrote:
> >      >Thanks Steve Holden for organizing this, it's a great idea.
> >
> >     Indeed!
> >      >Some nice topics might include:
> >
> >     Thanks for the suggestions.  Do you have any others?  :-)
> >
> > For my usage of twisted, these are important to me and I am
> > the most familiar with them. (See below)
> >
> >
> >     I hate to
> >     rain on your parade here, but I think maybe my explanation of why I
> >     don't like these suggestions will spark discussion of more different
> >     ones...
> >      >a) Start off simple with a " twisted.web2" example (everyone
> "gets"
> >      >http)
> >
> >     I think that this is actually something we should avoid in a
> tutorial.
> >     The web situation in Twisted is complicated
> >     ( http://twistedmatrix.com/trac/wiki/WebDevelopmentWithTwisted).
> >      web2 in
> >     particular is suffering from an extreme lack of maintenance and
> still
> >     has never "officially" been released; work is just starting to get
> >     underway to unify t.web2 and nevow into t.web and reduce the
> confusion,
> >     but this is all still in progress and who knows when, how, or even
> if it
> >     will be completed.
> >
> >
> > Oh yes, I know, I know.  While learning twisted I read *most* (that's
> > alot ;)
> > of posts to the twisted-web mailing list.  So I am very familiar with
> > the state.
> >
> Interesting. I am also subscribed to the twisted.web newsgroup, and I
> have been surprised about how quiet it's been. I imagine that if
> twisted.web2 would be very good for things like high-volume web services
> work. It has relatively few advantages in the heavily-competitive
> templating world, and I have to say that my early experience with Nevow,
> while it caused me to admire the system, wasn't entirely trouble-free. I
> think that may be partly because it wasn't being used in a Twisted
> environment (I'm thinking of the python.org reorganization that was put
> in effect after PyCon 2006).
>
> > That said, oh how I wish you guys could make twisted.web2 the one and
> > only!!!
> > It would be good for beginners and others alike.
> >
> > Note however: I can only barely imagine how hard that might be,
> > so I am *definitely not* complaining ... Twisted is excellent, thanks
> > very much for it.
> >
> Hear, hear. And the world needs to know, hence my enthusiasm for "Teach
> Me Twisted".
>
> >
> >     If you get a group of experienced Twisted folks
> >     together to talk about writing web applications, you're more likely
> to
> >     spark a debate than an educational session.
> >
> Twisted's not alone there, of course.
>
> >     Even if all these problems were fixed, and there were a really good,
> >     well-supported, universally understood web server for Twisted, the
> >     benefits of Twisted's programming model are not immediately obvious
> to
> >     the bread and butter of the web programming world.  Learning how to
> use
> >     some combination of Twisted tools to generate a web page will always
> be
> >     at least a little bit harder than writing the sort of glorified CGI
> >     script that most web frameworks require these days - unless you're
> >     using
> >     something like Athena, which might be too much complexity to address
> in
> >     a single tutorial session.  (And while Athena is more polished and
> "one
> >     right way" than the lower-level HTTP stuff, there is still a painful
> >     dearth of documentation, not to mention the fact that you need to
> write
> >     JavaScript as well as Python.)
> >
> Right. I think a Django replacement might be a bit ambitious for an open
> space session or two ...
>
> Maybe once I get into Twisted I'll be able to lend a hand with t.w2
> development (or maybe not).
>
> >
> > "Comet" (aka what Athena does) is one of my main uses of twisted, see
> >
> > http://svn.xantus.org/shortbus/trunk/cometd-twisted/
> >
> > is some code that I use.
> >
> > That and other ajax-y stuff.  Not much templating html, etc.
> >
> That's neat, but definitely a few too many layers for a starter project.
> >
> >
> >     Twisted really shines best when you're writing a client as well as a
> >     server.  Chat is the quintessential application where Twisted makes
> the
> >     most sense - and the lack of a well-documented chat server is much
> less
> >     of a problem than the lack of a well-documented web server, since
> you
> >     can easily define a wire protocol and wacky semantics for your
> purpose-
> >     built tutorial chat application.
> >
> > Yes!
> >
> I'd suggest possibly a client/server game , but I am under the
> impression that's already taken care of.
> >
> >
> >      >b) then plug that into a simple sqlite database using
> >      >" twisted.enterprise"
> >
> >     twisted.enterprise is similarly a scary and inconsistent area, and
> >     requires understanding the interaction of the DB thread and the
> reactor
> >     thread.  (And at least part of this section would have to be
> dedicated
> >     to "and never, ever touch anything in this package aside from
> adbapi".)
> >
> We'll definitely stay away from that, then.
> >
> > I only ever use 'adbapi'.  The reason I say this is database
> functionality
> > is pretty darn important for all non-trivial programs, so programmers
> > need/want
> > to know about this functionality, wouldn't you agree?
> >
> Important but not fundamental, I'd say.
> >
> >
> >      >d) Show how using "twistd" is really convient
> >      >(i.e. "twistd -ny server.tac" and "twistd -y server.tac", with
> some
> >      >logging
> >      >capability, etc)
> >
> Yes, yes, yes! If I could come away with a clear understanding of how a
> .tac file encapsulated one or more Twisted network services I'd be happy.
>
> >     This, however, is a great suggestion.  Twisted plugins should be
> >     part of
> >     this discussion.
> >
> > Yes.
> >
> >
> > Thanks again for Twisted!
> >
> This is great. Keep it coming! Still looking for reading suggestions ...
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080125/cca19a50/attachment.html>

From darran at edmstudio.com  Fri Jan 25 14:10:32 2008
From: darran at edmstudio.com (Darran Edmundson)
Date: Fri, 25 Jan 2008 14:10:32 -0700
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
Message-ID: <479A5048.3010208@edmstudio.com>

L. Daniel Burr wrote:
> Again, good stuff.  Which part do you have to leave behind?  The part that
> expects code to execute synchronously, or something else?

I'd guess this is the number one stumbling block.  That said, most 
people come to Twisted *precisely because* they want asynchronous 
execution.  It's a hard problem, and any reasonably intelligent 
programmer quickly discovers that using Twisted is infinitely easier 
than trying to cobble together a custom solution.  There are more than 
enough learning resources available (online tutorials, the book, this 
list, a very helpful irc channel).   I suggest ignoring the "twisted is 
hard" crowd ... such people are probably looking for a simple(r) 
solution where none (currently) exists.

Cheers,
Darran

-- 
Darran Edmundson [darran at edmstudio.com]
http://www.edmstudio.com



From ldanielburr at mac.com  Fri Jan 25 14:20:13 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 15:20:13 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
Message-ID: <op.t5h77z0m3oj628@l-daniel-burrs-computer.local>

Hi Simon,

On Fri, 25 Jan 2008 14:26:34 -0600, Simon Pickles <sipickles at hotmail.com>  
wrote:

>
>
> L. Daniel Burr wrote:
>
>> No offense intended, but what is so inaccessible about an event loop?   
>> Please
>> understand, I hear people say that Twisted is hard to grok all the time,
>> but I really don't get *why*.
>>
> Conceptually twisted is very simple. Thats what attracted me to it in  
> the first place. In reality, twisted (I suspect due to its incredible  
> flexibility) is mind boggling. The plethora of options available to the  
> uninitiated is overwhelming. Eg:
>
> Okay, so to make a simple client/server what do I do?
>
> Well, you create a class which overrides a factory, which takes a  
> protocol, which has some overriden functions which do different  
> predefined tasks. Easy.
>

OK, here's the first thing I notice.  You make no mention of interfaces,
which I think are key to understanding Twisted.

> (btw, ALL tutorials never make clear which functions are overridden, and  
> which are newly-defined)
>

There's a good point.  Perhaps the tutorials should provide more links to
the API documentation, specifically, to the interfaces being implemented
by these classes.  Once you look at the interfaces a given class  
implements,
it is easy to see what is being overridden.

> So can I do something similar to do another job?
>

Yes, you can, if you are thinking about interfaces, rather than always
in terms of concrete classes.  I hadn't noticed this before in my own
work, but that's precisely why I find Twisted fairly easy to grasp.

> No you need a totally different set of classes which don't follow any  
> similar pattern to the first, probably have very inaccessible (ie,  
> forgettable) names. In this case you need to connect an A to a B to a C  
> with a D and E as params, and F as a callback and inherit from a WIDGET!  
> aaaargh! :)
>

I note the smiley, but still, you're exaggerating quite a bit here.  For
most jobs, you do the same basic dance:

- create a protocol
- create a factory
- create a driver script, or a service if you need a daemon.

Now, some problems are really this simple.  Some will require more
work in terms of creating server-specific and client-specific factories,
etc., but even that follows the basic steps above.

The case I'm describing above is one where you "roll your own" stuff,
using the basic, low-level parts of twisted.  In cases where you want
to use higher-level parts, like, say, twisted.web, then you do have
to read the appropriate API docs, or look in the examples directory.

>>> ... but if you persevere, its great! You just have to leave part of  
>>> your brain behind in a field in hampshire :)
>>>
>>
>> Again, good stuff.  Which part do you have to leave behind?  The part  
>> that
>> expects code to execute synchronously, or something else?
> IMHO, Twisted seems to be written by many people over time, without a  
> rigorous design pattern in place first, more of an iterative process.  
> This would account for the fractuous nature of the interface. Its kinda  
> like learning English. There are rules but most of the time they don't  
> apply.
>

Sorry, but I'm going to pick on you a little bit here.  When I hear
someone say "rigorous design pattern", I feel compelled to ask them
to explain what they mean by that, and to point me to examples where
such a "rigorous design pattern" has been applied, so that I can
see what kind of library or framework is produced by the application
of said pattern ;)

Seriously, your observation could be applied to virtually any
open-source project in existence, simply due to the fact that more
than one developer has worked on the code over time.  In Twisted's
defense, I'll note that there is a coding standard; modules and
APIs are marked as being stable/unstable; there are unit-tests
covering a large portion of the code-base; a buildbot system provides
continuous integration so that changes which break trunk get reverted
swiftly.  The list goes on, and I'd argue that such things are
emblematic of a well-designed framework.

I do think that any of the core developers would freely admit that
some parts of twisted are better than others, but the core design
of twisted is, in my opinion, consistent and solid.  Obviously
I would think that, given that I never encountered a real problem
getting into Twisted.

I suppose the fact that the first programming I ever did involved
an event-loop driven system accounts for my familiarity with
the concepts in Twisted.

> On the other hand, maybe Twisted just suddenly made sense after  
> Stackless did ;)

There is some overlap there, in that both Twisted and Stackless
require you to think cooperatively rather than preemptively.

>>
>> the recent spate of inlineCallbacks-related posts alarms me.
>>
> Sorry about those :)
>

No problem :)  I'm not a fan of inlineCallbacks, because I
think it represents a crutch for people who either don't
like the way "normal" deferred-using code looks, or want to
write code that looks like blocking code (write blocking code,
add decorator, add yield keyword, stir gently).  Someone, I think
it was tekNico, made a decent argument concerning readability,
but I consider that to be too subjective.  Certainly I would
concede that some folks really like inlineCallbacks.  I just
don't want to support any code they write ;)

Thanks for generating the discussion,

L. Daniel Burr



From ldanielburr at mac.com  Fri Jan 25 14:28:29 2008
From: ldanielburr at mac.com (L. Daniel Burr)
Date: Fri, 25 Jan 2008 15:28:29 -0600
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <479A5048.3010208@edmstudio.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<479A5048.3010208@edmstudio.com>
Message-ID: <op.t5h8lrxi3oj628@l-daniel-burrs-computer.local>

Hi Darran,

On Fri, 25 Jan 2008 15:10:32 -0600, Darran Edmundson  
<darran at edmstudio.com> wrote:

> L. Daniel Burr wrote:
>> Again, good stuff.  Which part do you have to leave behind?  The part  
>> that
>> expects code to execute synchronously, or something else?
>
> I'd guess this is the number one stumbling block.  That said, most  
> people come to Twisted *precisely because* they want asynchronous  
> execution.  It's a hard problem, and any reasonably intelligent  
> programmer quickly discovers that using Twisted is infinitely easier  
> than trying to cobble together a custom solution.  There are more than  
> enough learning resources available (online tutorials, the book, this  
> list, a very helpful irc channel).   I suggest ignoring the "twisted is  
> hard" crowd ... such people are probably looking for a simple(r)  
> solution where none (currently) exists.
>

Well, I certainly agree with the conclusions you have drawn, with the
exception of ignoring the "twisted is hard" crowd.  I think there is
value in helping people "get" what Twisted is, because I want to be
able to continue working in an ecosystem where I can say "let's write
a twisted service that does X", and not be shouted down by a team of
developers who say "boo, twisted is too hard, let's go use something,
anything, other than twisted."

Have a good one,

L. Daniel Burr



From sipickles at hotmail.com  Fri Jan 25 15:17:50 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Fri, 25 Jan 2008 22:17:50 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5h77z0m3oj628@l-daniel-burrs-computer.local>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5h77z0m3oj628@l-daniel-burrs-computer.local>
Message-ID: <BAY114-DAV156F8F11469AFAAD903F65BE390@phx.gbl>



L. Daniel Burr wrote:
>
> You make no mention of interfaces, which I think are key to 
> understanding Twisted.
>
Oh ok, this is interesting. I have been dabbling for ages on and off 
with twisted and I heard my first mention of interfaces YESTERDAY in the 
o'Reilly book (it didn't explain them either!)

Please, tell me more!


>> (btw, ALL tutorials never make clear which functions are overridden, 
>> and which are newly-defined)
>>
>
> There's a good point.  Perhaps the tutorials should provide more links to
> the API documentation, specifically, to the interfaces being implemented
> by these classes.  Once you look at the interfaces a given class 
> implements,
> it is easy to see what is being overridden.
>
Maybe a simple naming convention would help here. noLeadingCaps for 
twisted functions and LeadingCaps for defined? or a few inline comments 
in code samples? ;)

> I note the smiley, but still, you're exaggerating quite a bit here.  For
> most jobs, you do the same basic dance:
>
> - create a protocol
> - create a factory
> - create a driver script, or a service if you need a daemon.
>
I had to admit, as I wrote my criticism, it didn't 'sound' as tricky as 
it once had!

I know I will grow to really like twisted. Maybe its just very BIG. When 
you start, you don't know which parts are useful to you. eg, I was using 
twisted.internet loads, and battling with threaded SQL queries until I 
stumbled across twisted.enterprise.adbapi. Good job I did!

Nice to pick your brain!

ta

Simon







From andrewfr_ice at yahoo.com  Fri Jan 25 15:39:14 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Fri, 25 Jan 2008 14:39:14 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
Message-ID: <106164.38033.qm@web34212.mail.mud.yahoo.com>

Hi Folks:

Another inclinecallback question.

This time I am using PyAMF. Like xmlrpc, operations
are method calls. So I have the following:

def echo(self, x):
        .
        .
    return result

now from my PyAMF.operation, I want to do the
following,

@defer.inlineCallbacks
def echo(self, x):
    result = yield someCallResultingInADeferred()
    return result

the problem is that echo is now a generator, I can't
write -

return result - returns in generators can't take
arguments.

Once again, I am at a bit of loss about how to
structure the code. Any suggestions are welcomed.

Cheers,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From nitro at dr-code.org  Fri Jan 25 15:42:41 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 25 Jan 2008 23:42:41 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
Message-ID: <op.t5ib1fclz3pzfc@nitrogenycs2>

Am 25.01.2008, 21:26 Uhr, schrieb Simon Pickles <sipickles at hotmail.com>:

> No you need a totally different set of classes which don't follow any  
> similar pattern to the first, probably have very inaccessible (ie,  
> forgettable) names. In this case you need to connect an A to a B to a C  
> with a D and E as params, and F as a callback and inherit from a WIDGET!  
> aaaargh! :)

This is exactly how I perceive learning twisted! It consists of a bunch of  
high-level abstractions which aren't explained properly in any how-to  
article. Now if you want to customize things you have to start looking  
around the twisted code and make your way from there. At this point you  
realize that there are at least 10 different parts somehow interacting  
with each other and you have no idea where you are supposed to plug your  
own stuff in. Sometimes twisted is a bit too twisted for me.

I am missing a quick overview about the high level concepts used in  
twisted such as Protocols, Factories, Reactors, Transports, etc and their  
interaction. Reference docs are not counting here, because you can't  
expect someone evaluating twisted to skim through the whole thing and  
gather everything piece by piece.

The user should maybe be instructed *how* to learn twisted, not be shown  
only an example. For reference, I just took a look at the finger tutorial.  
I like it's hands-on approach. However, already in the 2nd part the user  
is given a huge bunch of code:  
http://twistedmatrix.com/projects/core/documentation/howto/tutorial/protocol.html  
. He doesn't get any hint how to write that themselves. When do I subclass  
X to do Y? Which methods can I override?

Of course there are interfaces which should tell the user about some of  
those things. After all one of the main goals of interfaces is  
documentation. Again, the user is not given a quick introduction why and  
how twisted makes use of interfaces and how he can exploit this. It would  
also be handy to have a reference chart which shows typical tasks along  
with a pointer to documentation which might be helpful and/or related.

>>> ... but if you persevere, its great! You just have to leave part of  
>>> your brain behind in a field in hampshire :)

I agree, twisted is very powerful even if you don't realize it always,  
because it seems to hide behind all those abstractions which are not  
really explained.

>> the recent spate of inlineCallbacks-related posts alarms me.

Why? Using inlineCallbacks just helps writing convenient syntax utilizing  
deferreds. If you ever wrote code which uses lots of deferreds, you know  
that the code is (visually) lacking a decent structure. It's just not the  
way you think and makes things hard to read. inlineCallbacks just turns  
this into a nice, linear piece of code again (linear not to be confused  
with synchronous!).

-Matthias



From nitro at dr-code.org  Fri Jan 25 15:44:08 2008
From: nitro at dr-code.org (Nitro)
Date: Fri, 25 Jan 2008 23:44:08 +0100
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <106164.38033.qm@web34212.mail.mud.yahoo.com>
References: <106164.38033.qm@web34212.mail.mud.yahoo.com>
Message-ID: <op.t5ib3unvz3pzfc@nitrogenycs2>

Am 25.01.2008, 23:39 Uhr, schrieb Andrew Francis <andrewfr_ice at yahoo.com>:

> Hi Folks:
>
> Another inclinecallback question.
>
> This time I am using PyAMF. Like xmlrpc, operations
> are method calls. So I have the following:
>
> def echo(self, x):
>         .
>         .
>     return result
>
> now from my PyAMF.operation, I want to do the
> following,
>
> @defer.inlineCallbacks
> def echo(self, x):
>     result = yield someCallResultingInADeferred()
>     return result
>
> the problem is that echo is now a generator, I can't
> write -
>
> return result - returns in generators can't take
> arguments.
>
> Once again, I am at a bit of loss about how to
> structure the code. Any suggestions are welcomed.

User defer.returnValue(result) instead of return.

-Matthias



From steve at holdenweb.com  Fri Jan 25 16:49:46 2008
From: steve at holdenweb.com (Steve Holden)
Date: Fri, 25 Jan 2008 18:49:46 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
References: <fn7e1q$qbj$1@ger.gmane.org>	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>	<47975ABA.3080901@holdenweb.com>
	<fn8hv6$4hu$1@ger.gmane.org>	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>	<fn91og$9g9$1@ger.gmane.org>
	<3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
Message-ID: <fndsj4$7uv$1@ger.gmane.org>

Cary Hull wrote:
> Hey, I think some Twisted related sessions at PyCon would be great.
> Based on what's been discussed so far, I would like to humbly suggest
> the following (kind of breaking it down):
> 
> 1) Simple line based chat server/client.
> 2) Same thing except using AMP.
> 3) twistd and plugins

These are things I would really like to get to, but I'm pretty sure half 
an hour isn't going to cover it. Maybe we should be thinking BOF 
instead, then we can take an evening over it under less stressful 
conditions (and, who knows, even drink a beer or two in the process).

> 4) Axiom! (could show how to 'install' and launch the chat service using 
> axiomatic and a plugin)
> 
> (Axiom rocks and I personally think it should be packaged along with 
> Twisted itself. :)
> 
OK, I;ll do "Teach Me Twisted" and you do an Open Space session on "Why 
Axiom Rocks and Should be In Twisted".

> Maybe that is too much for folks just starting out, but I think it could be
> presented in a way that is easily grokked.
> 
> As far as reading material for the above (I'm certain to be redundant 
> here, but eh):
> http://twistedmatrix.com/projects/core/documentation/howto/servers.html
> http://twistedmatrix.com/projects/core/documentation/howto/clients.html
> http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py 
> (docstrings)
> http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
> http://www.divmod.org/trac/wiki/Axiomatic
> http://www.divmod.org/trac/wiki/DivmodAxiom/Reference
> 
Thanks, I'll make a start in this in an attempt not to be completely 
clueless when the session starts :-)

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From cary.hull at gmail.com  Fri Jan 25 17:05:10 2008
From: cary.hull at gmail.com (Cary Hull)
Date: Fri, 25 Jan 2008 16:05:10 -0800
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fndsj4$7uv$1@ger.gmane.org>
References: <fn7e1q$qbj$1@ger.gmane.org>
	<d52c72d20801230545r265318a8hb84a3cc9f46918f1@mail.gmail.com>
	<47975ABA.3080901@holdenweb.com> <fn8hv6$4hu$1@ger.gmane.org>
	<d272f0690801231610h4519bfd5ub3d480486a2be56d@mail.gmail.com>
	<20080124003642.21558.954587960.divmod.xquotient.5403@joule.divmod.com>
	<d272f0690801231718t622483cfw5c3b5a12c80e0dcf@mail.gmail.com>
	<fn91og$9g9$1@ger.gmane.org>
	<3fce0ae70801251235m3efba29h512443f4f4f29b91@mail.gmail.com>
	<fndsj4$7uv$1@ger.gmane.org>
Message-ID: <3fce0ae70801251605t24499a7cqb5cf25856945f80d@mail.gmail.com>

Minus the 'should be in twisted part' (which would be rather presumptuous of
me), I wouldn't mind giving a little introduction to axiom. :)

On Jan 25, 2008 3:49 PM, Steve Holden <steve at holdenweb.com> wrote:

> Cary Hull wrote:
> > Hey, I think some Twisted related sessions at PyCon would be great.
> > Based on what's been discussed so far, I would like to humbly suggest
> > the following (kind of breaking it down):
> >
> > 1) Simple line based chat server/client.
> > 2) Same thing except using AMP.
> > 3) twistd and plugins
>
> These are things I would really like to get to, but I'm pretty sure half
> an hour isn't going to cover it. Maybe we should be thinking BOF
> instead, then we can take an evening over it under less stressful
> conditions (and, who knows, even drink a beer or two in the process).
>
> > 4) Axiom! (could show how to 'install' and launch the chat service using
> > axiomatic and a plugin)
> >
> > (Axiom rocks and I personally think it should be packaged along with
> > Twisted itself. :)
> >
> OK, I;ll do "Teach Me Twisted" and you do an Open Space session on "Why
> Axiom Rocks and Should be In Twisted".
>
> > Maybe that is too much for folks just starting out, but I think it could
> be
> > presented in a way that is easily grokked.
> >
> > As far as reading material for the above (I'm certain to be redundant
> > here, but eh):
> > http://twistedmatrix.com/projects/core/documentation/howto/servers.html
> > http://twistedmatrix.com/projects/core/documentation/howto/clients.html
> > http://twistedmatrix.com/trac/browser/trunk/twisted/protocols/amp.py
> > (docstrings)
> > http://twistedmatrix.com/projects/core/documentation/howto/tap.html
> > http://www.divmod.org/trac/wiki/DivmodAxiom/WhyAxiom
> > http://www.divmod.org/trac/wiki/Axiomatic
> > http://www.divmod.org/trac/wiki/DivmodAxiom/Reference
> >
> Thanks, I'll make a start in this in an attempt not to be completely
> clueless when the session starts :-)
>
> regards
>  Steve
> --
> Steve Holden        +1 571 484 6266   +1 800 494 3119
> Holden Web LLC              http://www.holdenweb.com/
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
01100011 01100001 01110010 01111001
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080125/59dbf542/attachment.html>

From exarkun at divmod.com  Fri Jan 25 17:13:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Fri, 25 Jan 2008 19:13:34 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fndsj4$7uv$1@ger.gmane.org>
Message-ID: <20080126001334.6859.1564119011.divmod.quotient.677@ohm>

On Fri, 25 Jan 2008 18:49:46 -0500, Steve Holden <steve at holdenweb.com> wrote:
>Cary Hull wrote:
>>Hey, I think some Twisted related sessions at PyCon would be great.
>>Based on what's been discussed so far, I would like to humbly suggest
>>the following (kind of breaking it down):
>>
>>1) Simple line based chat server/client.
>>2) Same thing except using AMP.
>>3) twistd and plugins
>
>These are things I would really like to get to, but I'm pretty sure half an 
>hour isn't going to cover it. Maybe we should be thinking BOF instead, then 
>we can take an evening over it under less stressful conditions (and, who 
>knows, even drink a beer or two in the process).

Maybe I can get you to go a little bit further than that in restricting
what you'd like to see covered.

Off the top of my head, and only continuing until I get bored with making
this point, here's what a "Twisted" session could cover:

  * event driven programming
  * Deferreds (making them; using them; debugging them; defgen; 
        locks/semaphors)
  * core reactor APIs
  * scheduling
  * implementing existing (TCP; UDP; IP) protocols
  * designing new (TCP; UDP; IP) protocols
  * using existing protocols in twisted core
  * integrating a protocol implementation with cred
  * process control/interaction
  * implementing a realm
  * implementing credentials/checkers
  * writing services
  * writing plugins (twistd; lore; cred)
  * handy general-purpose python utilities
  * adding new kinds of event sources to the reactor
  * gui/pygame/etc integration
  * threading
  * using SQL databases
  * Perspective Broker
  * writing unit tests
  * using trial
  * extending trial

Wandering outside of the core of Twisted:

  * serving web pages
  * running a chat server
  * extending the chat server
  * jabber (jabber; jabber; jabber; sasl; jabber)
  * marking up documentation
  * dns servers and clients
  * usenet servers and clients
  * ssh/sftp clients/servers
  * telnet clients/servers
  * asynchronous terminal interaction
  * terminal widget rendering
  * smtp client/server
  * imap4 client/server
  * pop3 client/server

Are any of these the things you have in mind?  Can I get you to pick
a very small number of them (1 or 2 per hour at most, I suspect; some
are smaller, others are quite large)?  Or did you have something else
in mind?

Jean-Paul



From mithrandi at mithrandi.za.net  Fri Jan 25 17:46:28 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 02:46:28 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5ib1fclz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
Message-ID: <20080126004628.GA6125@mithrandi.za.net>

* Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:

>>> the recent spate of inlineCallbacks-related posts alarms me.
>
> Why? Using inlineCallbacks just helps writing convenient syntax utilizing 
> deferreds. If you ever wrote code which uses lots of deferreds, you know  
> that the code is (visually) lacking a decent structure. It's just not the 
> way you think and makes things hard to read. inlineCallbacks just turns  
> this into a nice, linear piece of code again (linear not to be confused  
> with synchronous!).

The problem I have with this is that I find that it actually obscures
the flow of the code and data. Most deferred operations have no need to
be serialized, and shouldn't be; the linear nature of
inlineCallbacks-style makes it very easy to accidentally serialize
operations that could otherwise run in parallel instead. Even if you
write the generator correctly, it's not as obvious what the actual flow
is since it has been crunched into a linear-looking function. Finally,
it is extremely hard to unit test a generator using inlineCallbacks, as
there is no easy way of resuming the generator at certain points with
certain state to test each part of the generator.

I'm not necessarily convinced that inlineCallbacks is always bad, but it
certainly leads to subtle traps in most cases, while providing little
real benefit (despite the perceived benefit).
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080126/a9207e9f/attachment.sig>

From sipickles at hotmail.com  Sat Jan 26 02:47:08 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 09:47:08 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126004628.GA6125@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
Message-ID: <BAY114-DAV14165FC207CE00DEEED59EBE3A0@phx.gbl>


Tristan Seligmann wrote:
> it certainly leads to subtle traps in most cases, while providing 
> little real benefit (despite the perceived benefit).
>   
Does this mean if I don't know what inlinecallbacks are, I shouldn't worry?





From sipickles at hotmail.com  Sat Jan 26 02:49:02 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 09:49:02 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5ib1fclz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
Message-ID: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>



Nitro wrote:
>
> I am missing a quick overview about the high level concepts used in 
> twisted such as Protocols, Factories, Reactors, Transports, etc and 
> their interaction.

I am tempted to contribute something of my experiences getting my 
tangled up in twisted. Care to help Matthias?





From mithrandi at mithrandi.za.net  Sat Jan 26 03:25:34 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 12:25:34 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <479B019C.5090806@hotmail.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<479B019C.5090806@hotmail.com>
Message-ID: <20080126102534.GA358@mithrandi.za.net>

* Simon Pickles <sipickles at hotmail.com> [2008-01-26 09:47:08 +0000]:

> Tristan Seligmann wrote:
>> it certainly leads to subtle traps in most cases, while providing  
>> little real benefit (despite the perceived benefit).
>>   
> Does this mean if I don't know what inlinecallbacks are, I shouldn't worry?

Briefly, inlineCallbacks is a "trick" for writing a series of Deferred
callback chains as a single generator. If you're not using it, you don't
really need to care about it, unless you end up reading some code that
uses it; but as far as I know, there is no code in Twisted itself that
uses it.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080126/b32e0ec5/attachment.sig>

From maarten at treewalker.org  Sat Jan 26 04:15:11 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 12:15:11 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126102534.GA358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<479B019C.5090806@hotmail.com>
	<20080126102534.GA358@mithrandi.za.net>
Message-ID: <200801261215.19869.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:

> Briefly, inlineCallbacks is a "trick" for writing a series of Deferred
> callback chains as a single generator. If you're not using it, you don't
> really need to care about it, unless you end up reading some code that
> uses it; but as far as I know, there is no code in Twisted itself that
> uses it.

Inline callbacks require the "yield returns a value" feature of Python 2.5, 
while Twisted itself does not depend on Python 2.5.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080126/ddee1d0a/attachment.sig>

From maarten at treewalker.org  Sat Jan 26 04:51:27 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 12:51:27 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126004628.GA6125@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
Message-ID: <200801261251.34563.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:
> * Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:
> >>> the recent spate of inlineCallbacks-related posts alarms me.
> >
> > Why? Using inlineCallbacks just helps writing convenient syntax
> > utilizing deferreds. If you ever wrote code which uses lots of
> > deferreds, you know that the code is (visually) lacking a decent
> > structure. It's just not the way you think and makes things hard to
> > read. inlineCallbacks just turns this into a nice, linear piece of code
> > again (linear not to be confused with synchronous!).
>
> The problem I have with this is that I find that it actually obscures
> the flow of the code and data.

The low-level flow of code (control going back to the reactor) is obscured, 
but I think that is an advantage rather than a disadvantage, since the 
high-level flow of code (the sequence of operations) becomes more clear. 
The flow of data is explicit in both cases: it is either passed as callback 
parameters or as return values from "yield".

> Most deferred operations have no need to 
> be serialized, and shouldn't be; the linear nature of
> inlineCallbacks-style makes it very easy to accidentally serialize
> operations that could otherwise run in parallel instead. Even if you
> write the generator correctly, it's not as obvious what the actual flow
> is since it has been crunched into a linear-looking function.

There are quite a few cases in which the dependencies between the operations 
force sequential processing. In those cases, inline callbacks are useful.

For example, to serve a web page, I want to authenticate the user, then run 
a database query and finally present the result. Running the query before 
authenticating the user is not something I'd recommend. In some cases it 
might be possible to start presenting results before all queries are 
finished, but in many cases that is not worth the complexity.

Writing all your routines as inline callbacks without thinking about the 
dependencies is a bad idea though.

> Finally, 
> it is extremely hard to unit test a generator using inlineCallbacks, as
> there is no easy way of resuming the generator at certain points with
> certain state to test each part of the generator.

If the code using inline callbacks looks like this, there is no problem in 
testing the parts separately:

	result1 = yield function1(arg)
	result2 = yield function2(result1)

> I'm not necessarily convinced that inlineCallbacks is always bad, but it
> certainly leads to subtle traps in most cases, while providing little
> real benefit (despite the perceived benefit).

I've converted some routines I wrote before Twisted 2.5 to inline callbacks 
and it became a lot easier for me to read. Like any tool, it can be used or 
abused, but I definately think it has its uses.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080126/9eec3050/attachment.sig>

From mithrandi at mithrandi.za.net  Sat Jan 26 05:01:07 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 14:01:07 +0200
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <200801261251.34563.maarten@treewalker.org>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
Message-ID: <20080126120106.GE358@mithrandi.za.net>

* Maarten ter Huurne <maarten at treewalker.org> [2008-01-26 12:51:27 +0100]:

> On Saturday 26 January 2008, Tristan Seligmann wrote:
> > * Nitro <nitro at dr-code.org> [2008-01-25 23:42:41 +0100]:
> > >>> the recent spate of inlineCallbacks-related posts alarms me.
> > >
> > > Why? Using inlineCallbacks just helps writing convenient syntax
> > > utilizing deferreds. If you ever wrote code which uses lots of
> > > deferreds, you know that the code is (visually) lacking a decent
> > > structure. It's just not the way you think and makes things hard to
> > > read. inlineCallbacks just turns this into a nice, linear piece of code
> > > again (linear not to be confused with synchronous!).
> >
> > The problem I have with this is that I find that it actually obscures
> > the flow of the code and data.
> 
> The low-level flow of code (control going back to the reactor) is obscured, 
> but I think that is an advantage rather than a disadvantage, since the 
> high-level flow of code (the sequence of operations) becomes more clear. 
> The flow of data is explicit in both cases: it is either passed as callback 
> parameters or as return values from "yield".

In the vast majority of network applications, I believe deferred
operations are not sequenced in a linear fashion; they're happening in
an overlapping and concurrent fashion. The problem with data flow in the
case of "yield" is that every time "yield" is invoked, all sorts of
state can get mutated around you that wouldn't normally happen when
calling another function. For a normal function, this also happens when
you return control to your caller, but by that time you don't care; but
in a generator, you're going to be resumed again. The "yield" keyword
doesn't seem to act as a very good "red flag" for this kind of context
switch, especially once it starts getting buried in a more complex
expression.

> > Most deferred operations have no need to 
> > be serialized, and shouldn't be; the linear nature of
> > inlineCallbacks-style makes it very easy to accidentally serialize
> > operations that could otherwise run in parallel instead. Even if you
> > write the generator correctly, it's not as obvious what the actual flow
> > is since it has been crunched into a linear-looking function.
> 
> There are quite a few cases in which the dependencies between the operations 
> force sequential processing. In those cases, inline callbacks are useful.

I've personally encountered very few cases where there are more than a
handful of operations in sequence.

> For example, to serve a web page, I want to authenticate the user, then run 
> a database query and finally present the result.

Generally in my code, these are being handled by three different layers
of code that are mostly hooked up by Twisted and other frameworks; for
example, authentication is being handled by cred/guard in my web
applications. Thus, there isn't really any single function where all
these operations are plumbed together.

> > Finally, it is extremely hard to unit test a generator using
> > inlineCallbacks, as there is no easy way of resuming the generator
> > at certain points with certain state to test each part of the
> > generator.
> 
> If the code using inline callbacks looks like this, there is no problem in 
> testing the parts separately:
> 
> 	result1 = yield function1(arg)
> 	result2 = yield function2(result1)

But if it really looks like that, there's not much point in writing that
instead of this:

    result1 = function1(arg)
    result2 = result1.addCallback(function2)

-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080126/0f45c448/attachment.sig>

From maarten at treewalker.org  Sat Jan 26 05:41:55 2008
From: maarten at treewalker.org (Maarten ter Huurne)
Date: Sat, 26 Jan 2008 13:41:55 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126120106.GE358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<200801261251.34563.maarten@treewalker.org>
	<20080126120106.GE358@mithrandi.za.net>
Message-ID: <200801261342.04000.maarten@treewalker.org>

On Saturday 26 January 2008, Tristan Seligmann wrote:
> * Maarten ter Huurne <maarten at treewalker.org> [2008-01-26 12:51:27 +0100]:
> > The low-level flow of code (control going back to the reactor) is
> > obscured, but I think that is an advantage rather than a disadvantage,
> > since the high-level flow of code (the sequence of operations) becomes
> > more clear. The flow of data is explicit in both cases: it is either
> > passed as callback parameters or as return values from "yield".
>
> In the vast majority of network applications, I believe deferred
> operations are not sequenced in a linear fashion; they're happening in
> an overlapping and concurrent fashion. The problem with data flow in the
> case of "yield" is that every time "yield" is invoked, all sorts of
> state can get mutated around you that wouldn't normally happen when
> calling another function. For a normal function, this also happens when
> you return control to your caller, but by that time you don't care; but
> in a generator, you're going to be resumed again. The "yield" keyword
> doesn't seem to act as a very good "red flag" for this kind of context
> switch, especially once it starts getting buried in a more complex
> expression.

The outside world changing is only a problem if you gather information about 
the outside world in stages, since you could end up with inconsistent data. 
However, this problem exists whether you store the gathered data in the 
local variables of an inline callback or in a data structure passed to 
non-inlined callbacks.

Whether "yield" is a worse red flag than separate functions I cannot really 
tell, since I wrote only one big application with Twisted and there I do 
all data gathering in a single operation. That is likely to change in the 
future though, when it will start fetching information from other servers.

> > There are quite a few cases in which the dependencies between the
> > operations force sequential processing. In those cases, inline
> > callbacks are useful.
>
> I've personally encountered very few cases where there are more than a
> handful of operations in sequence.

True, but even for a sequence of 3 operations I think it's already 
worthwhile.

> > For example, to serve a web page, I want to authenticate the user, then
> > run a database query and finally present the result.
>
> Generally in my code, these are being handled by three different layers
> of code that are mostly hooked up by Twisted and other frameworks; for
> example, authentication is being handled by cred/guard in my web
> applications. Thus, there isn't really any single function where all
> these operations are plumbed together.

I do authenticate using cred. I don't use Nevow though: I played with it a 
bit and decided it was too complex for my taste (I was always wondering 
exactly when a substitution would be performed). So I wrote something 
specifically for our application: because it's less flexible it's also 
easier to use.

> > If the code using inline callbacks looks like this, there is no problem
> > in testing the parts separately:
> >
> > 	result1 = yield function1(arg)
> > 	result2 = yield function2(result1)
>
> But if it really looks like that, there's not much point in writing that
> instead of this:
>
>     result1 = function1(arg)
>     result2 = result1.addCallback(function2)

It doesn't literally look like that. What I mean is that if there is enough 
functionality to make it worth dedicating test cases to, then it's probably 
a good idea to put that functionality in a separate function. This is true 
for both inline and non-inline callbacks, and even for synchronous code.

The cases where inline callbacks really help are when the callback functions 
contain only 1 or 2 lines, for example logging a failure and propagating it 
using a different exception type.

Bye,
		Maarten
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: This is a digitally signed message part.
URL: </pipermail/twisted-python/attachments/20080126/a5419011/attachment.sig>

From steve at holdenweb.com  Sat Jan 26 07:01:07 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 26 Jan 2008 09:01:07 -0500
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
Message-ID: <479B3D23.20303@holdenweb.com>

Simon Pickles wrote:
> 
> 
> Nitro wrote:
>>
>> I am missing a quick overview about the high level concepts used in 
>> twisted such as Protocols, Factories, Reactors, Transports, etc and 
>> their interaction.
> 
> I am tempted to contribute something of my experiences getting my 
> tangled up in twisted. Care to help Matthias?

I hope you guys are coming to PyCon!

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nitro at dr-code.org  Sat Jan 26 07:18:22 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:18:22 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
Message-ID: <op.t5jjcwjrz3pzfc@nitrogenycs2>

Am 26.01.2008, 10:49 Uhr, schrieb Simon Pickles <sipickles at hotmail.com>:

> Nitro wrote:
>>
>> I am missing a quick overview about the high level concepts used in  
>> twisted such as Protocols, Factories, Reactors, Transports, etc and  
>> their interaction.
>
> I am tempted to contribute something of my experiences getting my  
> tangled up in twisted. Care to help Matthias?

I can try. It's been a while since I was working mainly on the twisted  
parts of my application. I hope I can remember the things I did not find  
or understand easily.
Other than that I can review things that your or somebody else writes.

-Matthias



From steve at holdenweb.com  Sat Jan 26 07:22:45 2008
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 26 Jan 2008 09:22:45 -0500
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <20080126001334.6859.1564119011.divmod.quotient.677@ohm>
References: <fndsj4$7uv$1@ger.gmane.org>
	<20080126001334.6859.1564119011.divmod.quotient.677@ohm>
Message-ID: <fnffnn$tgg$1@ger.gmane.org>

Jean-Paul Calderone wrote:
> On Fri, 25 Jan 2008 18:49:46 -0500, Steve Holden <steve at holdenweb.com> 
> wrote:
>> Cary Hull wrote:
>>> Hey, I think some Twisted related sessions at PyCon would be great.
>>> Based on what's been discussed so far, I would like to humbly suggest
>>> the following (kind of breaking it down):
>>>
>>> 1) Simple line based chat server/client.
>>> 2) Same thing except using AMP.
>>> 3) twistd and plugins
>>
>> These are things I would really like to get to, but I'm pretty sure 
>> half an hour isn't going to cover it. Maybe we should be thinking BOF 
>> instead, then we can take an evening over it under less stressful 
>> conditions (and, who knows, even drink a beer or two in the process).
> 
> Maybe I can get you to go a little bit further than that in restricting
> what you'd like to see covered.
> 
Aah, sweet sanity! Sorry about the delay in my reply, I wanted to wait 
until I could do this post justice (and it's not like PyCon is tomorrow).

> Off the top of my head, and only continuing until I get bored with making
> this point, here's what a "Twisted" session could cover:
> 
>  * event driven programming

Please. I've used event-driven scenarios in GUI frameworks, but I've 
never seen anything (please note: this does *not* imply that nothing 
exists) that makes clear the relationship between the Twisted reactor 
and the code surrounding it.

>  * Deferreds (making them; using them; debugging them; defgen;        
> locks/semaphors)

These are in essence the fundamentals, no? A complete picture of the 
lifetime of a failed and a successful deferred would, I feel, go a long 
way towards filling in the picture. Plus how deferreds can interact with 
each other?

>  * core reactor APIs

This too should go into the "must know" category, right?

>  * scheduling

If we could cover everything up to this point I'd be happy. Like you I 
think it's important to limit the scope if we want to achieve something 
worthwhile, and I can't spend *all* my PyCon time on Twisted. It will be 
up to you guys to make it enjoyable enough to keep me there :-)

Hopefully with community guidance I can lay the foundations for a 
mechanism (a pedagogy, if you will) that many people can use to flesh 
the rest out.

>  * implementing existing (TCP; UDP; IP) protocols

What, you mean they aren't all implemented yet? :-)

>  * designing new (TCP; UDP; IP) protocols

Good. That Twisted can get access to the raw network layer is something 
I wasn't aware of.

>  * using existing protocols in twisted core

Probably more essential than protocol design and implementation, I'd 
have thought.

>  * integrating a protocol implementation with cred

To make it an authenticated protocol? Haven't met cred yet.

>  * process control/interaction

I suppose one of the issues with twisted, like other asynchronous 
frameworks, is that you can screw things up really badly just by 
thoughtlessly blocking somewhere inside a handler. So this is probably 
important.

>  * implementing a realm
>  * implementing credentials/checkers
>  * writing services
>  * writing plugins (twistd; lore; cred)
>  * handy general-purpose python utilities
>  * adding new kinds of event sources to the reactor
>  * gui/pygame/etc integration
>  * threading
>  * using SQL databases
>  * Perspective Broker
>  * writing unit tests
>  * using trial
>  * extending trial
> 
While the above remaining core issues are all valuable, I don't see us 
getting to them at PyCon.

> Wandering outside of the core of Twisted:
> 
>  * serving web pages
>  * running a chat server
>  * extending the chat server
>  * jabber (jabber; jabber; jabber; sasl; jabber)

I gather you think jabber is significant?

>  * marking up documentation

The more widely this knowledge is disseminated, hopefully, the better 
the documentation will be.

>  * dns servers and clients
>  * usenet servers and clients
>  * ssh/sftp clients/servers
>  * telnet clients/servers
>  * asynchronous terminal interaction
>  * terminal widget rendering
>  * smtp client/server
>  * imap4 client/server
>  * pop3 client/server
> 
> Are any of these the things you have in mind?  Can I get you to pick
> a very small number of them (1 or 2 per hour at most, I suspect; some
> are smaller, others are quite large)?  Or did you have something else
> in mind?
> 
Your detailed knowledge of the structure of Twisted lays bare the huge 
amount of work that *could* be done. However, there may be perfectly 
adequate existing materials on some or all of these topics, and I am 
happy to be pointed towards them.

regards
  Steve
-- 
Steve Holden        +1 571 484 6266   +1 800 494 3119
Holden Web LLC              http://www.holdenweb.com/




From nitro at dr-code.org  Sat Jan 26 07:42:52 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:42:52 +0100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <20080126120106.GE358@mithrandi.za.net>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
	<20080126120106.GE358@mithrandi.za.net>
Message-ID: <op.t5jkhqh4z3pzfc@nitrogenycs2>

Am 26.01.2008, 13:01 Uhr, schrieb Tristan Seligmann  
<mithrandi at mithrandi.za.net>:

> In the vast majority of network applications, I believe deferred
> operations are not sequenced in a linear fashion;

Deferreds are not network application specific. They're related to  
asynchronous things in general. For example I make good use of them for  
some GUI things, too. I have cut and pasted some examples from my code  
below.

Examples:

Ex. 1: This waits for things to arrive over network then displays it.

     @inlineCallbacks
     def onLoadSceneButton(self, evt):
         worlds = yield self.app.client.getAvailableWorlds()
         dlg = SimpleListBoxDialog(self.gui, worlds)
         try:
             name = yield dlg.showModal()
         except EmptySelectionException:
             print 'Not setting a new world!'
         else:
             self.app.sendEvent( Events.setGameWorld(name) )



Ex. 2: A simple GUI based game where you have to guess a number between 0  
and 999

class GuessNumberGame(Minigame.Minigame):
     name = 'Guess the number'

     @inlineCallbacks
     def start(self):
         #'Ok. The number I chose is between 0-999. Now you have to guess.  
I will'
         #'tell you if your number is lower or higher than mine. If you  
need more'
         #'than 10 attempts you lost.'

         player = self.players[0]

         number = random.randint(0,999)

         won = False
         result = ''
         for i in range(0,10):
             guess = yield player.getNextMove( (i, result) )	# here we wait  
for the user to enter something into the GUI
             if guess > number:
                 result = 'too high'
                 player.setMessage('too high')
             elif guess < number:
                 result = 'too low'
                 player.setMessage('too low')
             else:
                 won = True
                 player.setMessage( "You've won! %d was the magic number" %  
number )
                 break

         if not won:
             player.setMessage( "You've lost! %d was the magic number" %  
number )



From nitro at dr-code.org  Sat Jan 26 07:45:13 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 15:45:13 +0100
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <479B3D23.20303@holdenweb.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>
	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<479B3D23.20303@holdenweb.com>
Message-ID: <op.t5jklni5z3pzfc@nitrogenycs2>

Am 26.01.2008, 15:01 Uhr, schrieb Steve Holden <steve at holdenweb.com>:

> Simon Pickles wrote:
>>   Nitro wrote:
>>>
>>> I am missing a quick overview about the high level concepts used in  
>>> twisted such as Protocols, Factories, Reactors, Transports, etc and  
>>> their interaction.
>>  I am tempted to contribute something of my experiences getting my  
>> tangled up in twisted. Care to help Matthias?
>
> I hope you guys are coming to PyCon!

Sorry, I won't come.

-Matthias



From steve at shrogers.com  Sat Jan 26 08:21:02 2008
From: steve at shrogers.com (Steven H. Rogers)
Date: Sat, 26 Jan 2008 08:21:02 -0700
Subject: [Twisted-Python] Re: Teach Me Twisted?
In-Reply-To: <fnffnn$tgg$1@ger.gmane.org>
References: <fndsj4$7uv$1@ger.gmane.org>	<20080126001334.6859.1564119011.divmod.quotient.677@ohm>
	<fnffnn$tgg$1@ger.gmane.org>
Message-ID: <479B4FDE.8000900@shrogers.com>

I'm a lurker who's dabbled a bit with twisted, but never seriously used 
it.  I have a large application that wants refactoring and Twisted may 
help.  I'm planning to attend PyCon and if a 'Teach Me Twisted' BoF does 
materialize, I can show up and ask questions, if nothing else.

Items of most interest to me are fairly basic:

>>  * event driven programming
>>  * Deferreds (making them; using them; debugging them; defgen;        
>> locks/semaphors)
>>  * core reactor APIs
>>  * scheduling
>>  * using existing protocols in twisted core
>>  * process control/interaction
>> * gui/pygame/etc integration
I agree with Steve Holden that while the other topics are important, it 
would be difficult to do them justice in one session.  If this BoF could 
be staged early in the conference, and there is sufficient 
interest/energy, perhaps they could be covered in a second session.

Regards,
Steve

"Every program is a part of some other program and rarely fits." -- Alan 
Perlis




From sipickles at hotmail.com  Sat Jan 26 09:32:12 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 16:32:12 +0000
Subject: [Twisted-Python] Re: Soon to be not-a-newbie?
In-Reply-To: <479B3D23.20303@holdenweb.com>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<479B3D23.20303@holdenweb.com>
Message-ID: <BAY114-DAV3A5841D3AECA4FCD5F0E7BE3A0@phx.gbl>



Steve Holden wrote:
>
> I hope you guys are coming to PyCon!
>

I wish!






From sipickles at hotmail.com  Sat Jan 26 09:33:49 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Sat, 26 Jan 2008 16:33:49 +0000
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <op.t5jjcwjrz3pzfc@nitrogenycs2>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>	<op.t5h34lcw3oj628@l-daniel-burrs-computer.local>	<BAY114-DAV14F5CD5EE7673EE5CDC3E6BE390@phx.gbl>	<op.t5ib1fclz3pzfc@nitrogenycs2>	<BAY114-DAV50F15A830123DA022AFB3BE3A0@phx.gbl>
	<op.t5jjcwjrz3pzfc@nitrogenycs2>
Message-ID: <BAY114-DAV8434C829B5E2C1450C94DBE3A0@phx.gbl>



Nitro wrote:
> Other than that I can review things that your or somebody else writes.
>
>
When my workload cools of a little I will have a stab at writing a 
twisted for dumasses page or two if you like. Give me a week or two.





From andrewfr_ice at yahoo.com  Sat Jan 26 11:02:41 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 26 Jan 2008 10:02:41 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <E1JIYJN-0008IU-J3@cube.twistedmatrix.com>
Message-ID: <176394.73235.qm@web34214.mail.mud.yahoo.com>

Hello Matthias:

>User defer.returnValue(result) instead of return.

No I previously tried using defer.returnValue(), not
expecting it to work, and it did not.

The calling function (some method in PyAMF) is
expecting a value from the return statement, a return
that cannot be set with an argument.

Cheers,
Andrew


      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From exarkun at divmod.com  Sat Jan 26 12:09:43 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Sat, 26 Jan 2008 14:09:43 -0500
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <176394.73235.qm@web34214.mail.mud.yahoo.com>
Message-ID: <20080126190943.6859.1925608543.divmod.quotient.1133@ohm>

On Sat, 26 Jan 2008 10:02:41 -0800 (PST), Andrew Francis <andrewfr_ice at yahoo.com> wrote:
>Hello Matthias:
>
>>User defer.returnValue(result) instead of return.
>
>No I previously tried using defer.returnValue(), not
>expecting it to work, and it did not.
>
>The calling function (some method in PyAMF) is
>expecting a value from the return statement, a return
>that cannot be set with an argument.

Matthias's suggestion was the only correct one.  It seems you
want to use inlineCallbacks to do something which it cannot do.

Here's a tiny sample of something that's not possible:

    def asyncOp():
        result = yield getPage(...)
        yield returnValue(result)
    asyncOp = inlineCallbacks(asyncOp)

    def syncOp():
        result = asyncOp()
        print "The page is", result

However, this is possible:

    # define asyncOp as above

    def anotherAsyncOp():
        resultDeferred = asyncOp()
        def gotResult(result):
            print "The page is", result
        resultDeferred.addCallback(gotResult)
        return resultDeferred
        
In other words, inlineCallbacks lets you suspend execution, _inside_ the
function you decorate with it, until a result is available.  It only lets
you do this _inside_.  Outside, the decorated function simply appears to
return a Deferred.

Jean-Paul



From andrewfr_ice at yahoo.com  Sat Jan 26 13:21:45 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sat, 26 Jan 2008 12:21:45 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator rather
	than a Deferred
Message-ID: <506614.25121.qm@web34212.mail.mud.yahoo.com>

Hello Folks:

As I previously mentioned, I have the following called
from a PyAMF method:

@defer.inlineCallbacks
def echo(self, x):
    result = yield client.getPage("http://localhost")

because of the yield, I cannot use

    return result

In a bout of wishful thinking, I tried the following:

@defer.inlineCallbacks
def __echo__(self, x):
    result = yield client.getPage("http://localhost")
    yield result


def echo(self, x):
    return self.__echo__(x).next()

This raises an AttributeError, the deferred does not
have an attribute next() (this is because the deferred
is well, a deferred)

Again, perhaps I am missing something obvious. Or
perhaps this scenario was not anticipated and syntax
is getting in the way. However I think the following
would be useful in these situations


def echo(self, x)
    @defer.returnAGenerator
    def __echo__(x):
        result = yield client.getPage("...")
        yield result

    """
    the method waits until there is a result
    """
    return __echo__(x).next()

and the wrapper (i.e., PyAMF, xmlrpc, etc) is happy.

I started to look at defer.inlineCallbacks and its
associated methods, such as and _inlineCallbacks,
unwindGenerator, and mergeFunctionMetadata. 

I would like to know if it would make sense to just
return a generator and have it behave the way I want.
If so, what exactly do I have to do in some variation
of _inlineCallbacks to make this so?

Thanks,
Andrew





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From nitro at dr-code.org  Sat Jan 26 13:59:26 2008
From: nitro at dr-code.org (Nitro)
Date: Sat, 26 Jan 2008 21:59:26 +0100
Subject: [Twisted-Python] Making inlineCallback return a generator rather
	than a Deferred
In-Reply-To: <506614.25121.qm@web34212.mail.mud.yahoo.com>
References: <506614.25121.qm@web34212.mail.mud.yahoo.com>
Message-ID: <op.t5j1xcllz3pzfc@nitrogenycs2>

Am 26.01.2008, 21:21 Uhr, schrieb Andrew Francis <andrewfr_ice at yahoo.com>:

> Hello Folks:
>
> As I previously mentioned, I have the following called
> from a PyAMF method:
>
> @defer.inlineCallbacks
> def echo(self, x):
>     result = yield client.getPage("http://localhost")
>
> because of the yield, I cannot use
>
>     return result

@defer.inlineCallbacks
def echo(self, x):
     result = yield client.getPage("http://localhost")
     defer.returnValue(result)



From mithrandi at mithrandi.za.net  Sat Jan 26 14:28:34 2008
From: mithrandi at mithrandi.za.net (Tristan Seligmann)
Date: Sat, 26 Jan 2008 23:28:34 +0200
Subject: [Twisted-Python] Making inlineCallback return a generator
	rather than a Deferred
In-Reply-To: <506614.25121.qm@web34212.mail.mud.yahoo.com>
References: <506614.25121.qm@web34212.mail.mud.yahoo.com>
Message-ID: <20080126212834.GA17651@mithrandi.za.net>

* Andrew Francis <andrewfr_ice at yahoo.com> [2008-01-26 12:21:45 -0800]:

> Again, perhaps I am missing something obvious. Or
> perhaps this scenario was not anticipated and syntax
> is getting in the way. However I think the following
> would be useful in these situations
> 
> 
> def echo(self, x)
>     @defer.returnAGenerator
>     def __echo__(x):
>         result = yield client.getPage("...")
>         yield result
> 
>     """
>     the method waits until there is a result
>     """
>     return __echo__(x).next()
> 
> and the wrapper (i.e., PyAMF, xmlrpc, etc) is happy.

This is essentially impossible to implement; you need some way to
suspend the code that is invoking the generator, and there isn't any
general way to this in Python. There is nothing magical about the
.next() method on a generator, it is just a normal synchronous function
call.
-- 
mithrandi, i Ainil en-Balandor, a faer Ambar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 197 bytes
Desc: Digital signature
URL: </pipermail/twisted-python/attachments/20080126/89ff60a0/attachment.sig>

From exarkun at twistedmatrix.com  Sat Jan 26 22:05:06 2008
From: exarkun at twistedmatrix.com (exarkun at twistedmatrix.com)
Date: Sun, 27 Jan 2008 05:05:06 -0000
Subject: [Twisted-Python] Weekly Bug Summary
Message-ID: 1201410306.76.1819466348@twistedmatrix.com

An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080127/f39c3f1c/attachment.html>

From lxx1234 at gmail.com  Sun Jan 27 08:55:22 2008
From: lxx1234 at gmail.com (=?GB2312?B?wO7P6erY?=)
Date: Sun, 27 Jan 2008 23:55:22 +0800
Subject: [Twisted-Python] How to get the real ClientFactory or ServerFactory
	object?
In-Reply-To: <33fd431f0801270753r4af17df3s3c69900699d35722@mail.gmail.com>
References: <33fd431f0801270753r4af17df3s3c69900699d35722@mail.gmail.com>
Message-ID: <33fd431f0801270755w4ad425e8t1bdb92c8e2dec712@mail.gmail.com>

Hi all:
     I am new to twisted,i want to write a program like a proxy,which
get data from simplely listen to local client,transport it request to
real server,and the reply to the client.My plan is rewrite the
dataReceived method in twisted.internet.protocol.Protocol and call the
sendLine method in ServerFactory.But i failed beacuse i can not get
the real ServerFactory object,when i set  in ServerFactory

       testFactory=StdioProxyFactory()
       host = "202.108.42.15"
       port = 8848
       reactor.connectTCP(host,port,testFactory)
       testFactory.protocol.server=self

but it a error say testFactory.protocol.server is None when i use it
How can i did like this ,or do it another way?Thanks



From andrewfr_ice at yahoo.com  Sun Jan 27 11:05:18 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 27 Jan 2008 10:05:18 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <E1JJ9qy-00024M-H8@cube.twistedmatrix.com>
Message-ID: <439164.30609.qm@web34210.mail.mud.yahoo.com>


Hello Nitro:

>@defer.inlineCallbacks
>def echo(self, x):
>     result = yield
client.getPage("http://localhost")
>     defer.returnValue(result)

According to the documentation, defer.returnValue()
returns a value. The problem in this scenario is that
the inlineCallback is being used in the following
context:

def SomeFunction(x):
    .
    .
    result = echo(x)
    .
    .
    .


you need to call return so that SomeFunction can get a
result. Think of SomeFunction being the underlying
code for a XmlRpc like protocol.

Cheers,
Andrew


      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From andrewfr_ice at yahoo.com  Sun Jan 27 12:07:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Sun, 27 Jan 2008 11:07:32 -0800 (PST)
Subject: [Twisted-Python] Another inlinecallback question
In-Reply-To: <E1JJ9qy-00024M-H8@cube.twistedmatrix.com>
Message-ID: <752798.43764.qm@web34212.mail.mud.yahoo.com>

Hello Jean-Paul Calderone:

>In other words, inlineCallbacks lets you suspend
>execution, _inside_ the function you decorate with
it, >until a result is available.  It only lets
>you do this _inside_.  Outside, the decorated
function >simply appears to return a Deferred.

Thanks for the explanation.

Currently I use Stackless to allow my code to make
synchronous calls that use Twisted. I still have to
study inlineCallbacks but it seems that both Stackless
and inclineCallbacks approaches seem to hiccup when
dealing with protocols that are invoked as a function
call and expect a return. 

for instance, @inlineCallbacks seem to be suited for
something like HTTP :

@defer.inlineCallbacks
def process(self):
    try:
        result = yield client.getPage(...)
    except Exception, err:
        log.err(err, "process getPage call failed")
    else:
        self.write(result)
        self.finish()

because one can pass the inlineCallback, a reference
to the request and process() does not return anything

On the other hand, using a higher level mechanism
(i.e., resource.render() would be more problematic - 

This seems to imply that if one wishes to design a
protocol that works nicely with inlineCallbacks, one
should provide access to the request, so that one
could write:

@defer.inlineCallbacks:
def echo(self, request):
    try:
        result = yield client.getPage(...)
    except Exception, err:
        log.err(err, "process getPage call failed")
    else:
        request.returnValue(result)

Is this a fair assessment?

I recognize the way most Twisted protocols work is
perfectly great for most Twisted uses. It seems that
the stuff I do (WS-BPEL), that involves, for lack of a
better term, process composition. And process
composition manifests itself as stuff like, request
handlers making requests to other web resources. Hence
a desire to make this as simple as possible.

Cheers,
Andrew










      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From nitro at dr-code.org  Sun Jan 27 16:29:45 2008
From: nitro at dr-code.org (Nitro)
Date: Mon, 28 Jan 2008 00:29:45 +0100
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <439164.30609.qm@web34210.mail.mud.yahoo.com>
References: <439164.30609.qm@web34210.mail.mud.yahoo.com>
Message-ID: <op.t5l3jvn1z3pzfc@nitrogenycs2>

> def SomeFunction(x):
>     .
>     .
>     result = echo(x)
>     .
>     .
>     .

Maybe I am missing something or we're going in circles, but how about

@inlineCallbacks
def SomeFunction(x):
     result = yield echo(x)

You should not use inlineCallbacks on echo itself. You need to use it on  
the function that calls echo. That's a difference.

-Matthias



From daedalus at eigenmagic.com  Sun Jan 27 18:47:04 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Mon, 28 Jan 2008 12:47:04 +1100
Subject: [Twisted-Python] twistedsnmp
In-Reply-To: <m3prvpn37v.fsf@neo.luffy.cx>
References: <m3prvpn37v.fsf@neo.luffy.cx>
Message-ID: <1201484824.11956.11.camel@fnord.melbourne.eigenmagic.net>

On Fri, 2008-01-25 at 19:56 +0100, Vincent Bernat wrote:
> Hello !
> 
> I had to use agent part of twistedsnmp [0]. This part was primarily done
> to  test  manager part,  therefore,  it  lacks  important features  like
> handling of deferred to return results. To circumvent this limitation, I
> have  hacked a  bit  to  make a  small  patch to  allow  limited use  of
> deferred [1].

You could try libsnmp[1]: http://www.seafelt.com/libsnmp. It's been in
active, production use for several years now by various people.

> I have  proposed the patch to the  author but got no  answer. Looking at
> the CVS  [2], it seems that  twistedsnmp is unmaintained  since almost 2
> years.  Has  anybody  any news  about  this?  Is  there any  reason  why
> twistedsnmp is not integrated into Twisted?

No idea. I have proposed merging libsnmp with twisted at some stage, and
really should get it done. For an example of how to use libsnmp with
twisted, check out the seafelt-backend code here:
http://www.seafelt.com/software/seafelt-daily/sources/, specifically
lib/seafelt/poller_snmp.py.

[1] Disclosure: I wrote libsnmp, so I'm biased about how good it is.

-- 
Justin Warren <daedalus at eigenmagic.com>



From daedalus at eigenmagic.com  Sun Jan 27 19:47:48 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Mon, 28 Jan 2008 13:47:48 +1100
Subject: [Twisted-Python] Soon to be not-a-newbie?
In-Reply-To: <200801261251.34563.maarten@treewalker.org>
References: <BAY114-DAV7FA9B575B5B539A317010BE390@phx.gbl>
	<op.t5ib1fclz3pzfc@nitrogenycs2>
	<20080126004628.GA6125@mithrandi.za.net>
	<200801261251.34563.maarten@treewalker.org>
Message-ID: <1201488469.11956.56.camel@fnord.melbourne.eigenmagic.net>

On Sat, 2008-01-26 at 12:51 +0100, Maarten ter Huurne wrote:
> On Saturday 26 January 2008, Tristan Seligmann wrote:

> > Most deferred operations have no need to 
> > be serialized, and shouldn't be; the linear nature of
> > inlineCallbacks-style makes it very easy to accidentally serialize
> > operations that could otherwise run in parallel instead. Even if you
> > write the generator correctly, it's not as obvious what the actual flow
> > is since it has been crunched into a linear-looking function.

I dunno about this. Serialisation is really common, in my experience.
People are also more used to thinking about things in terms of
sequential actions (do this, then do this, then do this other thing),
which is probably one reason why parallel programming is hard, and why
inlineCallbacks are so appealing.

> There are quite a few cases in which the dependencies between the operations 
> force sequential processing. In those cases, inline callbacks are useful.
> 
> For example, to serve a web page, I want to authenticate the user, then run 
> a database query and finally present the result. Running the query before 
> authenticating the user is not something I'd recommend. In some cases it 
> might be possible to start presenting results before all queries are 
> finished, but in many cases that is not worth the complexity.

Hear hear.

I have a bunch of code that has benefited from refactoring to use
inlineCallbacks for exactly these reasons. Sometimes there is a
sequential flow of data from function to function:

for device in device_list:
  get_some_data_from_device()
    |--parse_data_and_fetch_more_based_on_parse_result()
       |--parse_this_stuff_and_insert_into_database_maybe()
          |--reschedule_poll_for_data()

Manually setting up the deferredChain made my code hard (for me) to
read. Maybe I'm just a bad coder.

> Writing all your routines as inline callbacks without thinking about the 
> dependencies is a bad idea though.

Not thinking about what you're doing is generally bad, yes, but what if
you were to write everything with inlineCallbacks, then optimise to make
needlessly sequential parts parallel?

I've used inlineCallbacks to quickly convert someone else's blocking
Python code to async twisted code, with very little change to the code's
structural flow. The last time I did this, without inlineCallbacks, was
painful, buggy and slow. Anything that helps me unblock code with
twisted is good.

> > Finally, 
> > it is extremely hard to unit test a generator using inlineCallbacks, as
> > there is no easy way of resuming the generator at certain points with
> > certain state to test each part of the generator.
> 
> If the code using inline callbacks looks like this, there is no problem in 
> testing the parts separately:
> 
> 	result1 = yield function1(arg)
> 	result2 = yield function2(result1)
> 
> > I'm not necessarily convinced that inlineCallbacks is always bad, but it
> > certainly leads to subtle traps in most cases, while providing little
> > real benefit (despite the perceived benefit).
> 
> I've converted some routines I wrote before Twisted 2.5 to inline callbacks 
> and it became a lot easier for me to read. Like any tool, it can be used or 
> abused, but I definately think it has its uses.

Yep. The biggest benefit for me has been to make my twisted code feel
more readable overall, which is one of the best bits about Python. In
the past I've felt a bit guilty when writing complex deferred chains
with twisted.. almost like I'd just done something in perl. ;)

Heh. I'm such a fanboy.

-- 
Justin Warren <daedalus at eigenmagic.com>



From tarjei at nu.no  Mon Jan 28 07:29:11 2008
From: tarjei at nu.no (tarjei)
Date: Mon, 28 Jan 2008 15:29:11 +0100
Subject: [Twisted-Python] Stoping a deferedList
Message-ID: <479DE6B7.8060103@nu.no>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I'm using the FtpClient to upload a set of files. I start the uploads
with the following code:


   def fileError(self, result):
        log.msg("Error has happened" + result.getErrorMessage())
        log.msg(result.trap(Exception))
        return result

    def endError(self, result):
        log.msg("End Error has happened")
        self.client.quit()
        self.client.transport.loseConnection()
        result.trap(Exception)

    def connectionMade(self,ftpClient):
        "Checks if there are more files to upload and uploads them."
        deffereds = []
        "We'll need the client to do a disconnect later"
        self.client = ftpClient
        " Create defereds for each of the different files to be uploaded"
        for upfile in self.ftpFiles:
            store, finish = ftpClient.storeFile(self._getPath(
upfile.get_name() ) )
            finish.addCallback(self.end).addErrback(self.fileError)
            store.addCallback(self.send_file, upfile
).addErrback(self.fileError)
            deffereds.append(store)
            deffereds.append(finish)
            self.numfiles += 1
        return
defer.gatherResults(deffereds).addCallback(self.success).addErrback(self.endError)


Now, if an error happens during the upload of one file, then I want to
stop the other files as well and close the connection. When I try to run
tests using the above code, trial reports that it still has open
connections.

The code works fine if user has access to save the files, it is the
error handling I want to get done right.

What should I do to ensure that all connections get closed when an error
happens?

kind regards,
Tarjei
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFHnea3YVRKCnSvzfIRAh3RAJ9lrMzQBJOMtIo1qcuntbkZlX5HMACfZNS8
St7eOg43MC4mTR2Qh9XWAX4=
=aJCZ
-----END PGP SIGNATURE-----



From exarkun at divmod.com  Mon Jan 28 08:06:35 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Mon, 28 Jan 2008 10:06:35 -0500
Subject: [Twisted-Python] Stoping a deferedList
In-Reply-To: <479DE6B7.8060103@nu.no>
Message-ID: <20080128150635.6859.271681178.divmod.quotient.1801@ohm>

On Mon, 28 Jan 2008 15:29:11 +0100, tarjei <tarjei at nu.no> wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>Hi,
>
>I'm using the FtpClient to upload a set of files. I start the uploads
>with the following code:
>
>
>   def fileError(self, result):
>        log.msg("Error has happened" + result.getErrorMessage())
>        log.msg(result.trap(Exception))
>        return result
>
>    def endError(self, result):
>        log.msg("End Error has happened")
>        self.client.quit()
>        self.client.transport.loseConnection()
>        result.trap(Exception)

This trap call is a bit pointless.  Everything is an Exception.

>
>    def connectionMade(self,ftpClient):
>        "Checks if there are more files to upload and uploads them."
>        deffereds = []
>        "We'll need the client to do a disconnect later"
>        self.client = ftpClient
>        " Create defereds for each of the different files to be uploaded"
>        for upfile in self.ftpFiles:
>            store, finish = ftpClient.storeFile(self._getPath(
>upfile.get_name() ) )
>            finish.addCallback(self.end).addErrback(self.fileError)
>            store.addCallback(self.send_file, upfile
>).addErrback(self.fileError)

Here you've started a transfer (at least, I assume that's what send_file
does).  This is the operation you want to abort later.  So you need some
operation-specific API for aborting it.  I'm not sure what's in send_file,
so I dunno what that API might be, but that's the key to doing what you
want.

>            deffereds.append(store)
>            deffereds.append(finish)
>            self.numfiles += 1
>        return
>defer.gatherResults(deffereds).addCallback(self.success).addErrback(self.endError)
>
>
>Now, if an error happens during the upload of one file, then I want to
>stop the other files as well and close the connection. When I try to run
>tests using the above code, trial reports that it still has open
>connections.

When an error happens during the upload of one file, endError will be called
with a Failure that indicates which upload failed.  This will let you invoke
the operation-specific cancelling API for all the _other_ uploads.

Jean-Paul



From andrewfr_ice at yahoo.com  Mon Jan 28 10:57:46 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Mon, 28 Jan 2008 09:57:46 -0800 (PST)
Subject: [Twisted-Python] Making inlineCallback return a generator
In-Reply-To: <E1JJXL1-0001li-KN@cube.twistedmatrix.com>
Message-ID: <627021.25211.qm@web34201.mail.mud.yahoo.com>

Hello Nitro:

> def SomeFunction(x):
>     .
>     .
>     result = echo(x)
>     .
>     .
>     .

>Maybe I am missing something or we're going in
>circles, but how about

>@inlineCallbacks
>def SomeFunction(x):
>     result = yield echo(x)

Thanks for the information. However there is something
you are missing. The 'something' is that one would
have to alter a particular protocol's code (the
SomeFunction) to call echo(x) in this fashion.

Cheers,
Andrew






      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs



From daedalus at eigenmagic.com  Mon Jan 28 16:04:53 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Tue, 29 Jan 2008 10:04:53 +1100
Subject: [Twisted-Python] Adding code to twisted
Message-ID: <1201561493.8146.10.camel@localhost>

Hi all,

Recent list activity has reminded me that I have some code that I'd like
to add to the twisted codebase. I've had a browse of the developer docs,
which seem geared towards patching, so how should I approach adding
chunks of new features?

Specifically, I have 2 pieces of code to add:

1. libsnmp, twisted-ified. This is my pure Python SNMP library that has
been successfully used with twisted for several years now, on both my
own projects and other people's. Adding this into twisted has been
briefly mentioned on the list before.

2. A ZAPI[1] protocol implementation. I built some ZAPI handling code
for ModiPY[2] that uses twisted, and I figured other people might also
find it useful if they have a need to talk to NetApp kit.

Is there any interest in having these things added to twisted? If so,
could the appropriate admins maybe email me off list about how to do
this?

[1] ZAPI is an XML over HTTP thing used by Network Appliance storage
devices for command and control.
[2] http://modipy.seafelt.com/browser/trunk/netapp.py

-- 
Justin Warren <daedalus at eigenmagic.com>



From jml at mumak.net  Mon Jan 28 20:53:04 2008
From: jml at mumak.net (Jonathan Lange)
Date: Tue, 29 Jan 2008 14:53:04 +1100
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <1201561493.8146.10.camel@localhost>
References: <1201561493.8146.10.camel@localhost>
Message-ID: <d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>

On Jan 29, 2008 10:04 AM, Justin Warren <daedalus at eigenmagic.com> wrote:
> Hi all,
>
> Recent list activity has reminded me that I have some code that I'd like
> to add to the twisted codebase. I've had a browse of the developer docs,
> which seem geared towards patching, so how should I approach adding
> chunks of new features?
>
> Specifically, I have 2 pieces of code to add:
>
> 1. libsnmp, twisted-ified. This is my pure Python SNMP library that has
> been successfully used with twisted for several years now, on both my
> own projects and other people's. Adding this into twisted has been
> briefly mentioned on the list before.
>

This would be a nice thing to have.

> 2. A ZAPI[1] protocol implementation. I built some ZAPI handling code
> for ModiPY[2] that uses twisted, and I figured other people might also
> find it useful if they have a need to talk to NetApp kit.
>

I don't really know what this is, which means that I'm biased towards
not having it in Twisted.

> Is there any interest in having these things added to twisted? If so,
> could the appropriate admins maybe email me off list about how to do
> this?
>

You'll need commit access and you'll need to file a ticket for each of
these. Chris Armstrong or Jean-Paul Calderone should be able to give
you the former.

You should be warned that your code needs to be reviewed before it
hits the tree, and you'll need to have good unit tests.

Also, if you are going to add such big features, it's probably a good
idea to start tracking the mailing list.

jml



From glyph at divmod.com  Tue Jan 29 06:06:15 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Tue, 29 Jan 2008 13:06:15 -0000
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
References: <1201561493.8146.10.camel@localhost>
	<d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
Message-ID: <20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>

On 03:53 am, jml at mumak.net wrote:
>You should be warned that your code needs to be reviewed before it
>hits the tree, and you'll need to have good unit tests.

I want to repeat and emphasize this warning, because if you haven't 
submitted any patches before, you may be in for a nasty surprise ;).

It is, however, both good news and bad news.  The bad news is that it is 
probably going to be a lot of work.  You will need to live up to the 
current Twisted quality standards, which means:

  * Your tests will need to achieve at least 100% line-coverage
  * You will need to write docstrings for every public module, method, 
and class (including tests).
  * Docstrings will have to be formatted according to Twisted standard, 
including @param and @type markers where appropriate
  * The code will need to be cleaned up to meet the coding standard 
(trailing whitespace, unused imports, naming conventions, etc)

This means, in practice, that it will have to be better than some of the 
code already in twisted that was "grandfathered in" before we adopted 
these standards :).

The *really* bad news is that I can see that libsnmp is under the LGPL. 
Twisted is under the MIT license, and we are not going to add anything 
to it under a more restrictive license.  Do you have the authority to 
relicense all of that code?  i.e. have you received any contributions 
under the LGPL, and can you get in touch with everyone that you've 
received those contributions from and verify that they're OK with a 
license change?

The good news is that the code will probably get vastly better in the 
process.  I've written a few things which have been overhauled and 
radically improved as part of the process of getting them in to Twisted. 
However, the reason that the documentation is geared toward patching 
rather than addition of large features is that adding large features all 
at once can be daunting both for reviewers and authors of code.  For 
example, you can see what a "large" review looks like here:

    http://twistedmatrix.com/trac/ticket/1608#comment:27

You might want to break up libsnmp into a series of smaller chunks so 
that you can deal with the feedback in smaller chunks and get your 
contributions reviewed and integrated faster.



From andy at thecablelounge.com  Tue Jan 29 13:19:57 2008
From: andy at thecablelounge.com (Andy Gayton)
Date: Tue, 29 Jan 2008 12:19:57 -0800
Subject: [Twisted-Python] VFS status
In-Reply-To: <4799A6C2.8030001@nu.no>
References: <4799A6C2.8030001@nu.no>
Message-ID: <479F8A6D.10301@thecablelounge.com>

tarjei wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Hi, I need to copy a few files around using scp/sftp on a twisted server
> and started looking at VFS. There's a few things I wonder about:
> 
> 1. Is the API as unstable as the docs say?

Yes they are.

Andy.



From daedalus at eigenmagic.com  Tue Jan 29 22:30:16 2008
From: daedalus at eigenmagic.com (Justin Warren)
Date: Wed, 30 Jan 2008 16:30:16 +1100
Subject: [Twisted-Python] Adding code to twisted
In-Reply-To: <20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>
References: <1201561493.8146.10.camel@localhost>
	<d06a5cd30801281953h7a312892wb20ca057328a234c@mail.gmail.com>
	<20080129130615.21558.1733159524.divmod.xquotient.5594@joule.divmod.com>
Message-ID: <1201671016.15341.22.camel@localhost>

On Tue, 2008-01-29 at 13:06 +0000, glyph at divmod.com wrote:
> On 03:53 am, jml at mumak.net wrote:
> >You should be warned that your code needs to be reviewed before it
> >hits the tree, and you'll need to have good unit tests.
> 
> I want to repeat and emphasize this warning, because if you haven't 
> submitted any patches before, you may be in for a nasty surprise ;).

True.

> It is, however, both good news and bad news.  The bad news is that it is 
> probably going to be a lot of work.  You will need to live up to the 
> current Twisted quality standards, which means:

Nothing worthwhile is easy.

>   * Your tests will need to achieve at least 100% line-coverage
>   * You will need to write docstrings for every public module, method, 
> and class (including tests).
>   * Docstrings will have to be formatted according to Twisted standard, 
> including @param and @type markers where appropriate
>   * The code will need to be cleaned up to meet the coding standard 
> (trailing whitespace, unused imports, naming conventions, etc)
> 
> This means, in practice, that it will have to be better than some of the 
> code already in twisted that was "grandfathered in" before we adopted 
> these standards :).

This will indeed require work. On the plus side, this will make the code
better.

> The *really* bad news is that I can see that libsnmp is under the LGPL. 
> Twisted is under the MIT license, and we are not going to add anything 
> to it under a more restrictive license.  Do you have the authority to 
> relicense all of that code?  i.e. have you received any contributions 
> under the LGPL, and can you get in touch with everyone that you've 
> received those contributions from and verify that they're OK with a 
> license change?

libsnmp has already been relicensed under the MIT license. I'm guessing
there's some doco or an artifact out there that still refers to the LGPL
(which is was licensed under initially). If you could point it out, I'll
fix it to clear up any confusion.

And I wrote all the code myself. The only contributions I've received
have been some bug notifications.

> The good news is that the code will probably get vastly better in the 
> process.  I've written a few things which have been overhauled and 
> radically improved as part of the process of getting them in to Twisted. 
> However, the reason that the documentation is geared toward patching 
> rather than addition of large features is that adding large features all 
> at once can be daunting both for reviewers and authors of code.  For 
> example, you can see what a "large" review looks like here:
> 
>     http://twistedmatrix.com/trac/ticket/1608#comment:27
> 
> You might want to break up libsnmp into a series of smaller chunks so 
> that you can deal with the feedback in smaller chunks and get your 
> contributions reviewed and integrated faster.

I might try my hand at a patch or two to get the hang of things, and
work on getting my code up to scratch in the meantime.

Thanks for the detailed response. :)

-- 
Justin Warren <daedalus at eigenmagic.com>



From andrewfr_ice at yahoo.com  Wed Jan 30 08:07:32 2008
From: andrewfr_ice at yahoo.com (Andrew Francis)
Date: Wed, 30 Jan 2008 07:07:32 -0800 (PST)
Subject: Oops  Re: [Twisted-Python] Another inlinecallback
In-Reply-To: <E1JJXL1-0001li-KN@cube.twistedmatrix.com>
Message-ID: <352828.53311.qm@web34205.mail.mud.yahoo.com>

Hello Folks:
 
> On the other hand, using a higher level mechanism
> (i.e., resource.render() would be more problematic -

Oops, bad example - I looked over examples and
resource render() does take a request. Still I hope
the gist of what I perceive the problem comes through.

InlineCallbacks are powerful - I just wish to
understand their limitations and where they can be
most effectively used.

Thanks,
Andrew



      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From sipickles at hotmail.com  Wed Jan 30 13:15:44 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 30 Jan 2008 20:15:44 +0000
Subject: [Twisted-Python] Events in Python
Message-ID: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>

Hi,

I have a stackless python app, using twisted in parts (.internet and 
.adbapi).

I need a little help getting pythonic after years of c++ hell.

I'd like to use a system of events and observers, like c++ boost.signal.

I'd like to be able to subscribe multiple callbacks to a single function 
and cal them all using something like:

event.invoke("some data to send with invocation")

I'm thinking twisted callbacks do this:

 def observe(self, f);
      self.event.addcallback(f)

Are there other ways?

Thanks

Si

-- 
Linux user #458601 - http://counter.li.org.






From Andy at NewWorldElectric.com  Wed Jan 30 13:50:43 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 30 Jan 2008 15:50:43 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
Message-ID: <37d49ed40801301250w6e7ec09ay44b2b89ecb0a5812@mail.gmail.com>

Yeah, just keep a list of functions in your own code, no need to use twisted
for it and I've not seen twisted functions that really help.  something
like:

class event(object):
  def __init__(self):
    self.subscribers=[]
  def subscribe(self.f):
    self.subscribers.append(f)
  def invoke(self,*args,*kwargs):
    for function in subscribers:
      function(*args,**kwargs)

you can tweak that or whatever, but that's the basic pythonic way to do it
in my book(and in my code) a couple options to consider:
* in invoke, pass self to the function, I usually do that so I can have
functions that do whatever they do to the "event" subclass itself, as in a
clearOnFocus function attached to a text control which subclasses event,
whenever certain data is seen (type=focusEvent) clear the control.
* instead of storing functions store and .callback deffereds, of course
those can only be used once so change event.subscribe to event.wait for
clarity and reinitialize the list after invoke.

-Andy Fundinger

On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com> wrote:

> Hi,
>
> I have a stackless python app, using twisted in parts (.internet and
> .adbapi).
>
> I need a little help getting pythonic after years of c++ hell.
>
> I'd like to use a system of events and observers, like c++ boost.signal.
>
> I'd like to be able to subscribe multiple callbacks to a single function
> and cal them all using something like:
>
> event.invoke("some data to send with invocation")
>
> I'm thinking twisted callbacks do this:
>
>  def observe(self, f);
>      self.event.addcallback(f)
>
> Are there other ways?
>
> Thanks
>
> Si
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080130/8000b961/attachment.html>

From Andy at NewWorldElectric.com  Wed Jan 30 13:56:17 2008
From: Andy at NewWorldElectric.com (Andy Fundinger)
Date: Wed, 30 Jan 2008 15:56:17 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
Message-ID: <37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>

Thinking a little further, a DeferredList does this too, keeping a whole
group of deferreds and calling them back all at once, I probably should use
that more in my own code.  Details at (
http://twistedmatrix.com/documents/current/api/twisted.internet.defer.DeferredList.html
)

- Andy Fundinger

On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com> wrote:

> Hi,
>
> I have a stackless python app, using twisted in parts (.internet and
> .adbapi).
>
> I need a little help getting pythonic after years of c++ hell.
>
> I'd like to use a system of events and observers, like c++ boost.signal.
>
> I'd like to be able to subscribe multiple callbacks to a single function
> and cal them all using something like:
>
> event.invoke("some data to send with invocation")
>
> I'm thinking twisted callbacks do this:
>
>  def observe(self, f);
>      self.event.addcallback(f)
>
> Are there other ways?
>
> Thanks
>
> Si
>
> --
> Linux user #458601 - http://counter.li.org.
>
>
>
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>



-- 
Blog:  http://channel3b.wordpress.com
Second Life Name:  Ciemaar Flintoff

I am a sig Virus. Please put me in your sig so that I can continue to
replicate.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080130/15b2245c/attachment.html>

From sipickles at hotmail.com  Wed Jan 30 14:18:39 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Wed, 30 Jan 2008 21:18:39 +0000
Subject: [Twisted-Python] Events in Python
In-Reply-To: <37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
Message-ID: <BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>


Ah yes, deferredLists. thanks for the tip

Si

Andy Fundinger wrote:
> Thinking a little further, a DeferredList does this too, keeping a 
> whole group of deferreds and calling them back all at once, I probably 
> should use that more in my own code.  Details at 
> (http://twistedmatrix.com/documents/current/api/twisted.internet.defer.DeferredList.html)
>
> - Andy Fundinger
>
> On Jan 30, 2008 3:15 PM, Simon Pickles <sipickles at hotmail.com 
> <mailto:sipickles at hotmail.com>> wrote:
>
>     Hi,
>
>     I have a stackless python app, using twisted in parts (.internet and
>     .adbapi).
>
>     I need a little help getting pythonic after years of c++ hell.
>
>     I'd like to use a system of events and observers, like c++
>     boost.signal.
>
>     I'd like to be able to subscribe multiple callbacks to a single
>     function
>     and cal them all using something like:
>
>     event.invoke("some data to send with invocation")
>
>     I'm thinking twisted callbacks do this:
>
>      def observe(self, f);
>          self.event.addcallback(f)
>
>     Are there other ways?
>
>     Thanks
>
>     Si
>
>     --
>     Linux user #458601 - http://counter.li.org.
>
>
>
>
>     _______________________________________________
>     Twisted-Python mailing list
>     Twisted-Python at twistedmatrix.com
>     <mailto:Twisted-Python at twistedmatrix.com>
>     http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>
>
>
>
> -- 
> Blog:  http://channel3b.wordpress.com
> Second Life Name:  Ciemaar Flintoff
>
> I am a sig Virus. Please put me in your sig so that I can continue to 
> replicate.
> ------------------------------------------------------------------------
>
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
>   





From ssmiley483 at yahoo.com  Wed Jan 30 14:45:08 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Wed, 30 Jan 2008 13:45:08 -0800 (PST)
Subject: [Twisted-Python] Help with Simple Trial unit test
Message-ID: <232795.92050.qm@web31106.mail.mud.yahoo.com>

Hi all, 

I recently started learning Python & Twisted in prep for a big project at work.  So far things are going well, except that I can't quite figure out what I'm doing wrong in this simple unit test I'm writing.

One of the features of the project I'll be working on is the implementation of a simple HTTP GET Based communication layer between legacy systems.  As such, I wanted to write a simple unit test that uses the twisted client.getPage() method to test the communication process (i.e. simulates a legacy system requesting data from the server).

I have a test that sort of works.  However, I find that I have to add a reactor.run() command in the unit test for the test to actually be executed.  The unfortunate side affect of this is that you then have to ctrl+C to stop the reactor after the test runs.  If I don't put in the reactor.run() command, I get a "REACTOR UNCLEAN" error message and the test doesn't appear to run (at least the callbacks from getPage() never happen).

What am I doing wrong here?

Also, can you point me at any good references for working with Twisted and Trial?  I have the O'Reily book on Twisted which is a lot of help with the framework itself.  But it doesn't cover trial at all.

All development is occurring on an Ubuntu 7.10 machine using Python 2.5 and Twisted 2.5.

I'm executing the test from the console using: 
"trial ~/workspace/TestProject/src/tests/HttpGetTests.py"

Here is the source code for my test:

from twisted.trial import unittest
from twisted.internet import stdio, reactor, protocol, defer
from twisted.protocols import basic
from twisted.web import client

class HttpGetTests(unittest.TestCase):
    
    def testReportHit(self):
        def _handleError(reason):
            print "\n====>HttpGetTests.testReportHit()._handleError(): reason=%s\n" % reason
            self.fail("Test failed.  reason=%s" % reason)
        
        def _handleSuccess(data):
            print "\n====>HttpGetTests.testReportHit()._handleSuccess():\n"
            self.assert_(data.count>0, "No data returned")

        d = client.getPage("http://www.google.com")
        d.addCallback(_handleSuccess)
        d.addErrback(_handleError)
        reactor.run()





      ____________________________________________________________________________________
Looking for last minute shopping deals?  
Find them fast with Yahoo! Search.  http://tools.search.yahoo.com/newsearch/category.php?category=shopping



From exarkun at divmod.com  Wed Jan 30 15:01:34 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Wed, 30 Jan 2008 17:01:34 -0500
Subject: [Twisted-Python] Help with Simple Trial unit test
In-Reply-To: <232795.92050.qm@web31106.mail.mud.yahoo.com>
Message-ID: <20080130220134.6859.1832514512.divmod.quotient.2891@ohm>

On Wed, 30 Jan 2008 13:45:08 -0800 (PST), Shawn Smiley <ssmiley483 at yahoo.com> wrote:
>Hi all,
>
>I recently started learning Python & Twisted in prep for a big project at work.  So far things are going well, except that I can't quite figure out what I'm doing wrong in this simple unit test I'm writing.
>
>One of the features of the project I'll be working on is the implementation of a simple HTTP GET Based communication layer between legacy systems.  As such, I wanted to write a simple unit test that uses the twisted client.getPage() method to test the communication process (i.e. simulates a legacy system requesting data from the server).
>
>I have a test that sort of works.  However, I find that I have to add a reactor.run() command in the unit test for the test to actually be executed.  The unfortunate side affect of this is that you then have to ctrl+C to stop the reactor after the test runs.  If I don't put in the reactor.run() command, I get a "REACTOR UNCLEAN" error message and the test doesn't appear to run (at least the callbacks from getPage() never happen).

What happens if you take the Deferred created in the test method and return
it, instead of calling reactor.run()?

Jean-Paul



From ssmiley483 at yahoo.com  Wed Jan 30 15:16:10 2008
From: ssmiley483 at yahoo.com (Shawn Smiley)
Date: Wed, 30 Jan 2008 14:16:10 -0800 (PST)
Subject: [Twisted-Python] Help with Simple Trial unit test
Message-ID: <237211.69547.qm@web31110.mail.mud.yahoo.com>

Thanks a bunch Jean-Paul!!!

That was exactly my problem.

I replaced the reactor.run() line with "return d" and everything works perfectly.

So I guess the lesson here is that if a unit test creates a defer it needs to return that defer for everything to be hooked up properly and execute.


----- Original Message ----
From: Jean-Paul Calderone <exarkun at divmod.com>
To: Twisted general discussion <twisted-python at twistedmatrix.com>
Sent: Wednesday, January 30, 2008 2:01:34 PM
Subject: Re: [Twisted-Python] Help with Simple Trial unit test


On 
Wed, 
30 
Jan 
2008 
13:45:08 
-0800 
(PST), 
Shawn 
Smiley 
<ssmiley483 at yahoo.com> 
wrote:
>Hi 
all,
>
>I 
recently 
started 
learning 
Python 
& 
Twisted 
in 
prep 
for 
a 
big 
project 
at 
work.  
So 
far 
things 
are 
going 
well, 
except 
that 
I 
can't 
quite 
figure 
out 
what 
I'm 
doing 
wrong 
in 
this 
simple 
unit 
test 
I'm 
writing.
>
>One 
of 
the 
features 
of 
the 
project 
I'll 
be 
working 
on 
is 
the 
implementation 
of 
a 
simple 
HTTP 
GET 
Based 
communication 
layer 
between 
legacy 
systems.  
As 
such, 
I 
wanted 
to 
write 
a 
simple 
unit 
test 
that 
uses 
the 
twisted 
client.getPage() 
method 
to 
test 
the 
communication 
process 
(i.e. 
simulates 
a 
legacy 
system 
requesting 
data 
from 
the 
server).
>
>I 
have 
a 
test 
that 
sort 
of 
works.  
However, 
I 
find 
that 
I 
have 
to 
add 
a 
reactor.run() 
command 
in 
the 
unit 
test 
for 
the 
test 
to 
actually 
be 
executed.  
The 
unfortunate 
side 
affect 
of 
this 
is 
that 
you 
then 
have 
to 
ctrl+C 
to 
stop 
the 
reactor 
after 
the 
test 
runs.  
If 
I 
don't 
put 
in 
the 
reactor.run() 
command, 
I 
get 
a 
"REACTOR 
UNCLEAN" 
error 
message 
and 
the 
test 
doesn't 
appear 
to 
run 
(at 
least 
the 
callbacks 
from 
getPage() 
never 
happen).

What 
happens 
if 
you 
take 
the 
Deferred 
created 
in 
the 
test 
method 
and 
return
it, 
instead 
of 
calling 
reactor.run()?

Jean-Paul

_______________________________________________
Twisted-Python 
mailing 
list
Twisted-Python at twistedmatrix.com
http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python





      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ 




From drew.smathers at gmail.com  Wed Jan 30 15:34:15 2008
From: drew.smathers at gmail.com (Drew Smathers)
Date: Wed, 30 Jan 2008 17:34:15 -0500
Subject: [Twisted-Python] Events in Python
In-Reply-To: <BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
Message-ID: <368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>

On Jan 30, 2008 4:18 PM, Simon Pickles <sipickles at hotmail.com> wrote:

>
> Ah yes, deferredLists. thanks for the tip
>


Just making sure you're not on the wrong track here.  Are we talking about
recurring events you subscribe to?  Remind yourself that Deferreds are a
one-shot deal - you can only call them once.


-- 
\\\\\/\"/\\\\\\\\\\\
\\\\/ // //\/\\\\\\\
\\\/  \\// /\ \/\\\\
\\/ /\/ / /\/ /\ \\\
\/ / /\/ /\  /\\\ \\
/ /\\\  /\\\ \\\\\/\
\/\\\\\/\\\\\/\\\\\\
              d.p.s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: </pipermail/twisted-python/attachments/20080130/acfa8068/attachment.html>

From sipickles at hotmail.com  Thu Jan 31 00:41:26 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 31 Jan 2008 07:41:26 +0000
Subject: [Twisted-Python] Events in Python
In-Reply-To: <368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
Message-ID: <BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>



Drew Smathers wrote:
>
> Deferreds are a one-shot deal - you can only call them once.
>  
>
eeek! of course they are! Well at least in Python the roll-your-own 
option is very straight forward.

Thanks for the advice

Simon

-- 
Linux Counter: User# 424693 






From tdickenson at geminidataloggers.com  Thu Jan 31 04:17:26 2008
From: tdickenson at geminidataloggers.com (Toby Dickenson)
Date: Thu, 31 Jan 2008 11:17:26 +0000
Subject: [Twisted-Python] Re: Events in Python
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
Message-ID: <fnsao6$iu0$1@ger.gmane.org>

Simon Pickles wrote:

> Drew Smathers wrote:
>>
>> Deferreds are a one-shot deal - you can only call them once.
>>
> eeek! of course they are! Well at least in Python the roll-your-own
> option is very straight forward.

Or check out http://pydispatcher.sourceforge.net/.

We use this extensively with twisted.... Deferred for one shot events, and
dispatcher for events that can be fired multiple times.




From drakesmith at adelphia.net  Thu Jan 31 05:05:45 2008
From: drakesmith at adelphia.net (Drake Smith)
Date: Thu, 31 Jan 2008 07:05:45 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <fnsao6$iu0$1@ger.gmane.org>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>
	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>
	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>
	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>
	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
	<fnsao6$iu0$1@ger.gmane.org>
Message-ID: <20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>

At 06:17 AM 1/31/2008, you wrote:
>Simon Pickles wrote:
>
> > Drew Smathers wrote:
> >>
> >> Deferreds are a one-shot deal - you can only call them once.
> >>
> > eeek! of course they are! Well at least in Python the roll-your-own
> > option is very straight forward.
>
>Or check out http://pydispatcher.sourceforge.net/.
>
>We use this extensively with twisted.... Deferred for one shot events, and
>dispatcher for events that can be fired multiple times.

Another Event Dispatcher may be found here, deep in the bowels of Twisted:

http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html




From waterbug at pangalactic.us  Thu Jan 31 07:17:53 2008
From: waterbug at pangalactic.us (Stephen Waterbury)
Date: Thu, 31 Jan 2008 09:17:53 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <fnsao6$iu0$1@ger.gmane.org>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>
	<fnsao6$iu0$1@ger.gmane.org>
Message-ID: <47A1D891.70003@pangalactic.us>

Toby Dickenson wrote:
> Simon Pickles wrote:
> 
>> Drew Smathers wrote:
>>> Deferreds are a one-shot deal - you can only call them once.
>>>
>> eeek! of course they are! Well at least in Python the roll-your-own
>> option is very straight forward.
> 
> Or check out http://pydispatcher.sourceforge.net/.
> 
> We use this extensively with twisted.... Deferred for one shot events, and
> dispatcher for events that can be fired multiple times.

Actually, the latest incarnation of PyDispatcher is Louie:

http://louie.berlios.de/

... which offers more features and works fine as a drop-in
replacement for PyDispatcher.

Steve



From exarkun at divmod.com  Thu Jan 31 07:45:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 09:45:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API for
 functions and methods.
In-Reply-To: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
Message-ID: <20080131144556.6859.1299563782.divmod.quotient.3216@ohm>

On Wed, 30 Jan 2008 18:51:09 -0700, Jonathan Lange <jml at wolfwood.twistedmatrix.com> wrote:
>
> [snip]
>
>Modified: trunk/twisted/python/versions.py
>==============================================================================
>--- trunk/twisted/python/versions.py	(original)
>+++ trunk/twisted/python/versions.py	Wed Jan 30 18:51:07 2008
>@@ -122,3 +122,14 @@
>         if ver is None:
>             return ''
>         return ' (SVN r%s)' % (ver,)
>+
>+
>+
>+def getVersionString(version):
>+    """
>+    Get a friendly string for the given version object.
>+
>+    @param version: A L{Version} object.
>+    @return: A string containing the package and short version number.
>+    """
>+    return '%s %s' % (version.package, version.short())

What's the right way to get a string describing a Version now?  It's an even
harder decision to make than it was before.  Is it:

  * str(Version(...))
  * repr(Version(...))
  * Version(...).base()
  * Version(...).short()
  * getVersionString(Version(...))

Can we do something to make this better?

Jean-Paul



From glyph at divmod.com  Thu Jan 31 09:11:10 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 Jan 2008 16:11:10 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
References: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
	<20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
Message-ID: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>

On 02:45 pm, exarkun at divmod.com wrote:
>What's the right way to get a string describing a Version now?  It's an 
>even
>harder decision to make than it was before.  Is it:
>
>  * str(Version(...))
>  * repr(Version(...))
>  * Version(...).base()
>  * Version(...).short()
>  * getVersionString(Version(...))
>
>Can we do something to make this better?

This collection is super ad-hoc.  Let me try to express some of the 
requirements that lead to the current confusion:

  * Sometimes you want a string that is formatted for use at a REPL, 
which can be eval'd to give the user the idea that it is a structured 
object and how they can build something similar (repr())
  * sometimes you want something that's human-readable and expresses all 
the information available about the version (str()).  The square 
brackets probably come from the fact that I was playing WoW at the time, 
and square brackets meant "this is a thing, not just something a guy 
said".  I was thinking you'd want to see like [Twisted Epic Spaulders of 
the Owl] for the version number.  (Maybe a bad call.)
  * Sometimes you want just the version number in canonical format 
(x.y.z+dev) not the name of the package (.short())
  * I hypothesize that sometimes you want to omit the +dev part because 
you're trying to fit into a stricter format, but I don't really remember 
why .base() exists.

Was getVersionString added because the other string representations 
weren't "friendly" enough?  I guess the 'rUnknown' makes them look a 
little gnarly, but I'd actually like to see the SVN revision in the 
cases where it's present; the right thing to do to make it friendly 
would be to fix the entries-file parser.

Also, in any case, it should really be a method.  There's no reason to 
have a free function defined right after a class whose only argument is 
a single instance of that class :).



From sipickles at hotmail.com  Thu Jan 31 09:12:05 2008
From: sipickles at hotmail.com (Simon Pickles)
Date: Thu, 31 Jan 2008 16:12:05 +0000
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>
References: <BAY114-DAV88B2DAFED1E1F19D55C6FBE360@phx.gbl>	<37d49ed40801301256t7812414cte558db0d210575e1@mail.gmail.com>	<BAY114-DAV21C932CAEEA69CB8B7019BE360@phx.gbl>	<368574aa0801301434t3121676dxb58931e1dc3d8544@mail.gmail.com>	<BAY114-DAV54DA2C7C4CC814B3E611CBE370@phx.gbl>	<fnsao6$iu0$1@ger.gmane.org>
	<20080131120543.GND22143.mta10.adelphia.net@homedell.adelphia.net>
Message-ID: <BAY114-DAV194CC6E357F955288AE30BBE370@phx.gbl>



Drake Smith wrote:
>
> Another Event Dispatcher may be found here, deep in the bowels of 
> Twisted:
>
> http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html 
>
>
Thanks, I'll use it, I like the idea of not introducing TOO many 
dependancies.

Who knows what other gems lurk in the bowels of twisted? ;)

Simon





From exarkun at divmod.com  Thu Jan 31 09:20:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 11:20:56 -0500
Subject: [Twisted-Python] Re: Events in Python
In-Reply-To: <BAY114-DAV194CC6E357F955288AE30BBE370@phx.gbl>
Message-ID: <20080131162056.6859.1127819429.divmod.quotient.3249@ohm>

On Thu, 31 Jan 2008 16:12:05 +0000, Simon Pickles <sipickles at hotmail.com> wrote:
>
>
>Drake Smith wrote:
>>
>>Another Event Dispatcher may be found here, deep in the bowels of Twisted:
>>
>>http://twistedmatrix.com/documents/current/api/twisted.words.xish.utility.EventDispatcher.html
>Thanks, I'll use it, I like the idea of not introducing TOO many 
>dependancies.
>
>Who knows what other gems lurk in the bowels of twisted? ;)

Be ware of things found in bowels.

Jean-Paul



From exarkun at divmod.com  Thu Jan 31 09:23:56 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 11:23:56 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
Message-ID: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>

On Thu, 31 Jan 2008 16:11:10 -0000, glyph at divmod.com wrote:
>On 02:45 pm, exarkun at divmod.com wrote:
>>What's the right way to get a string describing a Version now?  It's an 
>>even
>>harder decision to make than it was before.  Is it:
>>
>>  * str(Version(...))
>>  * repr(Version(...))
>>  * Version(...).base()
>>  * Version(...).short()
>>  * getVersionString(Version(...))
>>
>>Can we do something to make this better?
>
>This collection is super ad-hoc.  Let me try to express some of the 
>requirements that lead to the current confusion:
>
>  * [snip - special-case view requirement]
>  * [snip - another special-case view requirement]
>  * [snip - another special-case view requirement]
>  * [snip - another special-case view requirement]
>
>Was getVersionString added because the other string representations weren't 
>"friendly" enough?  I guess the 'rUnknown' makes them look a little gnarly, 
>but I'd actually like to see the SVN revision in the cases where it's 
>present; the right thing to do to make it friendly would be to fix the 
>entries-file parser.
>
>Also, in any case, it should really be a method.  There's no reason to have 
>a free function defined right after a class whose only argument is a single 
>instance of that class :).
>

Maybe Version shouldn't be responsible for any view at all.  Maybe Version
is just a model class, and things that actually know what the view
requirements are can implement the view?

Jean-Paul



From glyph at divmod.com  Thu Jan 31 10:01:48 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Thu, 31 Jan 2008 17:01:48 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
Message-ID: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>

On 04:23 pm, exarkun at divmod.com wrote:
>Maybe Version shouldn't be responsible for any view at all.  Maybe 
>Version
>is just a model class, and things that actually know what the view
>requirements are can implement the view?

I agree insofar as the model is poorly exposed and documented.  The 
ivars have no documentation, and the only way to get the SVN revision is 
to call a private method or to mangle strings.

However, some of these "views" should definitely be attached to the 
class, for convenience and simplicity.  For example, a sensible __repr__ 
makes debugging and inspecting these things a lot easier.  Adding a new 
module, function, or class which does the string formatting means that 
users of Version will need to look somewhere else to perform the 
function they want, and ultimately it doesn't eliminate the confusion - 
"do I want the 'short dotted' view or the 'includes project but without 
development version' view?" - unless we also reduce the number of 
options available.



From exarkun at divmod.com  Thu Jan 31 10:24:44 2008
From: exarkun at divmod.com (Jean-Paul Calderone)
Date: Thu, 31 Jan 2008 12:24:44 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131170148.21558.2103246807.divmod.xquotient.5798@joule.divmod.com>
Message-ID: <20080131172444.6859.1682835797.divmod.quotient.3270@ohm>

On Thu, 31 Jan 2008 17:01:48 -0000, glyph at divmod.com wrote:
>On 04:23 pm, exarkun at divmod.com wrote:
>>Maybe Version shouldn't be responsible for any view at all.  Maybe Version
>>is just a model class, and things that actually know what the view
>>requirements are can implement the view?
>
>I agree insofar as the model is poorly exposed and documented.  The ivars 
>have no documentation, and the only way to get the SVN revision is to call a 
>private method or to mangle strings.
>
>However, some of these "views" should definitely be attached to the class, 
>for convenience and simplicity.  For example, a sensible __repr__ makes 
>debugging and inspecting these things a lot easier.

Having Version.__repr__ is fine.  __repr__ is a thing that Python classes
often have.

>Adding a new module, 
>function, or class which does the string formatting means that users of 
>Version will need to look somewhere else to perform the function they want, 
>and ultimately it doesn't eliminate the confusion - "do I want the 'short 
>dotted' view or the 'includes project but without development version' 
>view?" - unless we also reduce the number of options available.

What I had in mind was more that each application that wants to format
Version in some particular way can do the formatting itself, not that it
would pick an appropriate function from the version_view module and rely
on it to do the formatting.

The complexity of the code we're talking about foisting on an application
is on the order of "%s.%s" % (version.major, version.minor).  Not much of
a burden.  On the other hand, if we really want to make this easy, then
maybe Version should have a `format´ method that just takes a format string
and does the interpolation for you.

Jean-Paul



From george at ringdevelopment.com  Thu Jan 31 11:22:06 2008
From: george at ringdevelopment.com (George Pauly)
Date: Thu, 31 Jan 2008 13:22:06 -0500
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation
	API for functions and methods.
In-Reply-To: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
References: <E1JKOa5-0005TX-00@wolfwood.twistedmatrix.com>
	<20080131144556.6859.1299563782.divmod.quotient.3216@ohm>
	<20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
Message-ID: <1201803726.27704.35.camel@localhost.localdomain>

On Thu, 2008-01-31 at 16:11 +0000, glyph at divmod.com wrote:
> On 02:45 pm, exarkun at divmod.com wrote:
> >What's the right way to get a string describing a Version now?  It's an 
> >even
> >harder decision to make than it was before.  Is it:
> >
> >  * str(Version(...))
> >  * repr(Version(...))
> >  * Version(...).base()
> >  * Version(...).short()
> >  * getVersionString(Version(...))
> >
> >Can we do something to make this better?
> 
> This collection is super ad-hoc.  Let me try to express some of the 
> requirements that lead to the current confusion:
> 
>   * Sometimes you want a string that is formatted for use at a REPL, 
> which can be eval'd to give the user the idea that it is a structured 
> object and how they can build something similar (repr())
>   * sometimes you want something that's human-readable and expresses all 
> the information available about the version (str()).  The square 
> brackets probably come from the fact that I was playing WoW at the time, 
> and square brackets meant "this is a thing, not just something a guy 
> said".  I was thinking you'd want to see like [Twisted Epic Spaulders of 
> the Owl] for the version number.  (Maybe a bad call.)
>   * Sometimes you want just the version number in canonical format 
> (x.y.z+dev) not the name of the package (.short())
>   * I hypothesize that sometimes you want to omit the +dev part because 
> you're trying to fit into a stricter format, but I don't really remember 
> why .base() exists.
> 
> Was getVersionString added because the other string representations 
> weren't "friendly" enough?  I guess the 'rUnknown' makes them look a 
> little gnarly, but I'd actually like to see the SVN revision in the 
> cases where it's present; the right thing to do to make it friendly 
> would be to fix the entries-file parser.
> 
> Also, in any case, it should really be a method.  There's no reason to 
> have a free function defined right after a class whose only argument is 
> a single instance of that class :).
> 
> _______________________________________________
> Twisted-Python mailing list
> Twisted-Python at twistedmatrix.com
> http://twistedmatrix.com/cgi-bin/mailman/listinfo/twisted-python
-- 
George Pauly
Ring Development
www.ringdevelopment.com




From jml at mumak.net  Thu Jan 31 16:44:36 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 10:44:36 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
Message-ID: <d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>

On Feb 1, 2008 3:23 AM, Jean-Paul Calderone <exarkun at divmod.com> wrote:
> On Thu, 31 Jan 2008 16:11:10 -0000, glyph at divmod.com wrote:
> >On 02:45 pm, exarkun at divmod.com wrote:
> >>What's the right way to get a string describing a Version now?  It's an
> >>even
> >>harder decision to make than it was before.  Is it:
> >>
> >>  * str(Version(...))
> >>  * repr(Version(...))
> >>  * Version(...).base()
> >>  * Version(...).short()
> >>  * getVersionString(Version(...))
> >>
> >>Can we do something to make this better?
> >
> >This collection is super ad-hoc.  Let me try to express some of the
> >requirements that lead to the current confusion:
> >
> >  * [snip - special-case view requirement]
> >  * [snip - another special-case view requirement]
> >  * [snip - another special-case view requirement]
> >  * [snip - another special-case view requirement]
> >
> >Was getVersionString added because the other string representations weren't
> >"friendly" enough?  I guess the 'rUnknown' makes them look a little gnarly,
> >but I'd actually like to see the SVN revision in the cases where it's
> >present; the right thing to do to make it friendly would be to fix the
> >entries-file parser.
> >
> >Also, in any case, it should really be a method.  There's no reason to have
> >a free function defined right after a class whose only argument is a single
> >instance of that class :).
> >
>
> Maybe Version shouldn't be responsible for any view at all.  Maybe Version
> is just a model class, and things that actually know what the view
> requirements are can implement the view?
>

That was my thinking. Originally, getVersionString was in
t.p.deprecate, but I moved it on reviewer suggestion.

jml



From glyph at divmod.com  Thu Jan 31 19:19:01 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 02:19:01 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
Message-ID: <20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>


On 31 Jan, 11:44 pm, jml at mumak.net wrote:
>>Maybe Version shouldn't be responsible for any view at all.  Maybe 
>>Version
>>is just a model class, and things that actually know what the view
>>requirements are can implement the view?
>
>That was my thinking. Originally, getVersionString was in
>t.p.deprecate, but I moved it on reviewer suggestion.

I'd really prefer it if we had a canonical string representation for 
versions which t.p.deprecate would use as well as anything else which 
needs to report information about a version to developers.  The 
(existing?) str() ought to be acceptable for that.  That way when you 
saw a string in a certain format you could immediately identify it as a 
precise statement about a current or future Twisted package version.

I was sort of hoping that we might have Version-alike objects at some 
point which could know about different versioning schemes, and ways of 
comparing different revision control systems (although I guess dealing 
with comparing arbitrary bzr revisions in one tiny little object might 
be too much to ask...).  This is one reason I don't want to separate the 
view out too much; inspecting the model directly binds any potential 
view very tightly to the x.y.z versioning scheme.

But, this is somewhat obviously a bike shed, so I am not going to 
agitate terribly hard for this.  It's not like I use Twisted primarily 
for dealing with my obscurely formatted package version strings ;-).



From jml at mumak.net  Thu Jan 31 21:34:16 2008
From: jml at mumak.net (Jonathan Lange)
Date: Fri, 1 Feb 2008 15:34:16 +1100
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
Message-ID: <d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>

On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:
>
> On 31 Jan, 11:44 pm, jml at mumak.net wrote:
> >>Maybe Version shouldn't be responsible for any view at all.  Maybe
> >>Version
> >>is just a model class, and things that actually know what the view
> >>requirements are can implement the view?
> >
> >That was my thinking. Originally, getVersionString was in
> >t.p.deprecate, but I moved it on reviewer suggestion.
>
> I'd really prefer it if we had a canonical string representation for
> versions which t.p.deprecate would use as well as anything else which
> needs to report information about a version to developers.  The
> (existing?) str() ought to be acceptable for that.  That way when you
> saw a string in a certain format you could immediately identify it as a
> precise statement about a current or future Twisted package version.
>

Having a canonical representation doesn't exclude having multiple
representations.

Looking at how these are actually used:
- str() is used only for copyright (and tests)
- short is used for __init__.py
- base is used for short, in _release._changeVersionInFile (don't know
why base rather than everyone else, actually) and dist.py
- repr is only used generically.
- getVersionString is used only by deprecate.

In summary, sometimes we want the project name, sometimes we want the
svn revno. This is perhaps better achieved by having a single function
/ method that takes a couple of params.

Personally, I think that having a project name in Version is silly.

> I was sort of hoping that we might have Version-alike objects at some
> point which could know about different versioning schemes, and ways of
> comparing different revision control systems (although I guess dealing
> with comparing arbitrary bzr revisions in one tiny little object might
> be too much to ask...).  This is one reason I don't want to separate the
> view out too much; inspecting the model directly binds any potential
> view very tightly to the x.y.z versioning scheme.
>

For the purposes of this discussion, that is a massive, massive YAGNI.

> But, this is somewhat obviously a bike shed, so I am not going to
> agitate terribly hard for this.  It's not like I use Twisted primarily
> for dealing with my obscurely formatted package version strings ;-).

Right. I propose we do nothing.

jml



From glyph at divmod.com  Thu Jan 31 22:11:00 2008
From: glyph at divmod.com (glyph at divmod.com)
Date: Fri, 01 Feb 2008 05:11:00 -0000
Subject: [Twisted-Python] Re: [Twisted-commits] r22428 - Deprecation API
	for functions and methods.
In-Reply-To: <d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
References: <20080131161110.21558.1167073219.divmod.xquotient.5762@joule.divmod.com>
	<20080131162356.6859.1985497241.divmod.quotient.3250@ohm>
	<d06a5cd30801311544o4246b636xa1cadbb56aa9c7a1@mail.gmail.com>
	<20080201021901.21558.1733934087.divmod.xquotient.5811@joule.divmod.com>
	<d06a5cd30801312034g2d7def7ex8cb431ecc805000e@mail.gmail.com>
Message-ID: <20080201051100.21558.24208020.divmod.xquotient.5831@joule.divmod.com>

On 04:34 am, jml at mumak.net wrote:
>On Feb 1, 2008 1:19 PM,  <glyph at divmod.com> wrote:

>Having a canonical representation doesn't exclude having multiple
>representations.

True enough.
>Looking at how these are actually used:
>- str() is used only for copyright (and tests)

This is probably the most poorly-thought-out method of the bunch anyway, 
so I'm glad to see it's used less.
>- short is used for __init__.py

Makes sense, this is where you'd go looking.
>- base is used for short, in _release._changeVersionInFile (don't know
>why base rather than everyone else, actually) and dist.py

base is used here because we will explicitly never put an SVN rev into a 
README file.
>- getVersionString is used only by deprecate.

So, perhaps this and str() should be the same thing.  Is there really a 
reason for omitting the svn revno here?
>In summary, sometimes we want the project name, sometimes we want the
>svn revno. This is perhaps better achieved by having a single function
>/ method that takes a couple of params.

>Personally, I think that having a project name in Version is silly.

... and yet, getVersionString uses that attribute?

The point of having a project name in a version is to specifically 
qualify the version to alert about meaningless comparisons.  "Twisted 
version 2.5.0" does not meaningfully compare to "Python version 2.5.0", 
despite being apparently equal if you elide the project name.
>For the purposes of this discussion, (my insane idea) is a massive, 
>massive YAGNI.

Definitely.
>>But, this is somewhat obviously a bike shed, so I am not going to
>>agitate terribly hard for this.  It's not like I use Twisted primarily
>>for dealing with my obscurely formatted package version strings ;-).
>
>Right. I propose we do nothing.

An easy position to defend.



